/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./js/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./js/entity/Author.js":
/*!*****************************!*\
  !*** ./js/entity/Author.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar typeorm_1 = __webpack_require__(/*! typeorm */ \"./node_modules/typeorm/index.js\");\nvar Post_1 = __webpack_require__(/*! ./Post */ \"./js/entity/Post.js\");\nvar Author = /** @class */ (function () {\n    function Author() {\n    }\n    __decorate([\n        typeorm_1.PrimaryGeneratedColumn(),\n        __metadata(\"design:type\", Number)\n    ], Author.prototype, \"id\", void 0);\n    __decorate([\n        typeorm_1.Column(),\n        __metadata(\"design:type\", String)\n    ], Author.prototype, \"name\", void 0);\n    __decorate([\n        typeorm_1.Column({ nullable: true }),\n        __metadata(\"design:type\", Date)\n    ], Author.prototype, \"birthdate\", void 0);\n    __decorate([\n        typeorm_1.OneToMany(function (type) { return Post_1.Post; }, function (post) { return post.author; }),\n        __metadata(\"design:type\", Array)\n    ], Author.prototype, \"posts\", void 0);\n    Author = __decorate([\n        typeorm_1.Entity(\"Author\")\n    ], Author);\n    return Author;\n}());\nexports.Author = Author;\n//# sourceMappingURL=Author.js.map\n\n//# sourceURL=webpack:///./js/entity/Author.js?");

/***/ }),

/***/ "./js/entity/Category.js":
/*!*******************************!*\
  !*** ./js/entity/Category.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar typeorm_1 = __webpack_require__(/*! typeorm */ \"./node_modules/typeorm/index.js\");\nvar Category = /** @class */ (function () {\n    function Category() {\n    }\n    __decorate([\n        typeorm_1.PrimaryGeneratedColumn(),\n        __metadata(\"design:type\", Number)\n    ], Category.prototype, \"id\", void 0);\n    __decorate([\n        typeorm_1.Column(),\n        __metadata(\"design:type\", String)\n    ], Category.prototype, \"name\", void 0);\n    Category = __decorate([\n        typeorm_1.Entity(\"Category\")\n    ], Category);\n    return Category;\n}());\nexports.Category = Category;\n//# sourceMappingURL=Category.js.map\n\n//# sourceURL=webpack:///./js/entity/Category.js?");

/***/ }),

/***/ "./js/entity/Post.js":
/*!***************************!*\
  !*** ./js/entity/Post.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar typeorm_1 = __webpack_require__(/*! typeorm */ \"./node_modules/typeorm/index.js\");\nvar Category_1 = __webpack_require__(/*! ./Category */ \"./js/entity/Category.js\");\nvar Author_1 = __webpack_require__(/*! ./Author */ \"./js/entity/Author.js\");\nvar Post = /** @class */ (function () {\n    function Post() {\n    }\n    __decorate([\n        typeorm_1.PrimaryGeneratedColumn(),\n        __metadata(\"design:type\", Number)\n    ], Post.prototype, \"id\", void 0);\n    __decorate([\n        typeorm_1.Column(),\n        __metadata(\"design:type\", String)\n    ], Post.prototype, \"title\", void 0);\n    __decorate([\n        typeorm_1.Column(\"text\"),\n        __metadata(\"design:type\", String)\n    ], Post.prototype, \"text\", void 0);\n    __decorate([\n        typeorm_1.ManyToMany(function (type) { return Category_1.Category; }, {\n            cascade: [\"insert\"]\n        }),\n        typeorm_1.JoinTable(),\n        __metadata(\"design:type\", Array)\n    ], Post.prototype, \"categories\", void 0);\n    __decorate([\n        typeorm_1.ManyToOne(function (type) { return Author_1.Author; }, function (author) { return author.posts; }, {\n            cascade: ['insert']\n        }),\n        __metadata(\"design:type\", Author_1.Author)\n    ], Post.prototype, \"author\", void 0);\n    Post = __decorate([\n        typeorm_1.Entity(\"Post\")\n    ], Post);\n    return Post;\n}());\nexports.Post = Post;\n//# sourceMappingURL=Post.js.map\n\n//# sourceURL=webpack:///./js/entity/Post.js?");

/***/ }),

/***/ "./js/index.js":
/*!*********************!*\
  !*** ./js/index.js ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar _this = this;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar typeorm_1 = __webpack_require__(/*! typeorm */ \"./node_modules/typeorm/index.js\");\nvar Author_1 = __webpack_require__(/*! ./entity/Author */ \"./js/entity/Author.js\");\nvar Post_1 = __webpack_require__(/*! ./entity/Post */ \"./js/entity/Post.js\");\nvar Category_1 = __webpack_require__(/*! ./entity/Category */ \"./js/entity/Category.js\");\ntypeorm_1.createConnection({\n    type: \"cordova\",\n    database: \"test\",\n    location: \"default\",\n    entities: [\n        Author_1.Author,\n        Post_1.Post,\n        Category_1.Category\n    ],\n    logging: true,\n    synchronize: true\n}).then(function (connection) { return __awaiter(_this, void 0, void 0, function () {\n    var category1, category2, author, post, postRepository, savedPost;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                category1 = new Category_1.Category();\n                category1.name = \"TypeScript\";\n                category2 = new Category_1.Category();\n                category2.name = \"Programming\";\n                author = new Author_1.Author();\n                author.name = \"Person\";\n                post = new Post_1.Post();\n                post.title = \"Control flow based type analysis\";\n                post.text = \"TypeScript 2.0 implements a control flow-based type analysis for local variables and parameters.\";\n                post.categories = [category1, category2];\n                post.author = author;\n                postRepository = typeorm_1.getRepository('Post');\n                return [4 /*yield*/, postRepository.save(post)];\n            case 1:\n                _a.sent();\n                console.log(\"Post has been saved\");\n                document.writeln(\"Post has been saved\");\n                return [4 /*yield*/, postRepository.findOne(post.id)];\n            case 2:\n                savedPost = _a.sent();\n                console.log(\"Post has been loaded: \", savedPost);\n                document.writeln(\"Post has been loaded: \" + JSON.stringify(savedPost));\n                return [2 /*return*/];\n        }\n    });\n}); }).catch(function (error) {\n    console.log(\"Error: \", error);\n    document.writeln(\"Error: \" + JSON.stringify(error));\n});\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack:///./js/index.js?");

/***/ }),

/***/ "./node_modules/ansi-styles/index.js":
/*!*******************************************!*\
  !*** ./node_modules/ansi-styles/index.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(module) {\nconst colorConvert = __webpack_require__(/*! color-convert */ \"./node_modules/color-convert/index.js\");\n\nconst wrapAnsi16 = (fn, offset) => function () {\n\tconst code = fn.apply(colorConvert, arguments);\n\treturn `\\u001B[${code + offset}m`;\n};\n\nconst wrapAnsi256 = (fn, offset) => function () {\n\tconst code = fn.apply(colorConvert, arguments);\n\treturn `\\u001B[${38 + offset};5;${code}m`;\n};\n\nconst wrapAnsi16m = (fn, offset) => function () {\n\tconst rgb = fn.apply(colorConvert, arguments);\n\treturn `\\u001B[${38 + offset};2;${rgb[0]};${rgb[1]};${rgb[2]}m`;\n};\n\nfunction assembleStyles() {\n\tconst codes = new Map();\n\tconst styles = {\n\t\tmodifier: {\n\t\t\treset: [0, 0],\n\t\t\t// 21 isn't widely supported and 22 does the same thing\n\t\t\tbold: [1, 22],\n\t\t\tdim: [2, 22],\n\t\t\titalic: [3, 23],\n\t\t\tunderline: [4, 24],\n\t\t\tinverse: [7, 27],\n\t\t\thidden: [8, 28],\n\t\t\tstrikethrough: [9, 29]\n\t\t},\n\t\tcolor: {\n\t\t\tblack: [30, 39],\n\t\t\tred: [31, 39],\n\t\t\tgreen: [32, 39],\n\t\t\tyellow: [33, 39],\n\t\t\tblue: [34, 39],\n\t\t\tmagenta: [35, 39],\n\t\t\tcyan: [36, 39],\n\t\t\twhite: [37, 39],\n\t\t\tgray: [90, 39],\n\n\t\t\t// Bright color\n\t\t\tredBright: [91, 39],\n\t\t\tgreenBright: [92, 39],\n\t\t\tyellowBright: [93, 39],\n\t\t\tblueBright: [94, 39],\n\t\t\tmagentaBright: [95, 39],\n\t\t\tcyanBright: [96, 39],\n\t\t\twhiteBright: [97, 39]\n\t\t},\n\t\tbgColor: {\n\t\t\tbgBlack: [40, 49],\n\t\t\tbgRed: [41, 49],\n\t\t\tbgGreen: [42, 49],\n\t\t\tbgYellow: [43, 49],\n\t\t\tbgBlue: [44, 49],\n\t\t\tbgMagenta: [45, 49],\n\t\t\tbgCyan: [46, 49],\n\t\t\tbgWhite: [47, 49],\n\n\t\t\t// Bright color\n\t\t\tbgBlackBright: [100, 49],\n\t\t\tbgRedBright: [101, 49],\n\t\t\tbgGreenBright: [102, 49],\n\t\t\tbgYellowBright: [103, 49],\n\t\t\tbgBlueBright: [104, 49],\n\t\t\tbgMagentaBright: [105, 49],\n\t\t\tbgCyanBright: [106, 49],\n\t\t\tbgWhiteBright: [107, 49]\n\t\t}\n\t};\n\n\t// Fix humans\n\tstyles.color.grey = styles.color.gray;\n\n\tfor (const groupName of Object.keys(styles)) {\n\t\tconst group = styles[groupName];\n\n\t\tfor (const styleName of Object.keys(group)) {\n\t\t\tconst style = group[styleName];\n\n\t\t\tstyles[styleName] = {\n\t\t\t\topen: `\\u001B[${style[0]}m`,\n\t\t\t\tclose: `\\u001B[${style[1]}m`\n\t\t\t};\n\n\t\t\tgroup[styleName] = styles[styleName];\n\n\t\t\tcodes.set(style[0], style[1]);\n\t\t}\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false\n\t\t});\n\n\t\tObject.defineProperty(styles, 'codes', {\n\t\t\tvalue: codes,\n\t\t\tenumerable: false\n\t\t});\n\t}\n\n\tconst ansi2ansi = n => n;\n\tconst rgb2rgb = (r, g, b) => [r, g, b];\n\n\tstyles.color.close = '\\u001B[39m';\n\tstyles.bgColor.close = '\\u001B[49m';\n\n\tstyles.color.ansi = {\n\t\tansi: wrapAnsi16(ansi2ansi, 0)\n\t};\n\tstyles.color.ansi256 = {\n\t\tansi256: wrapAnsi256(ansi2ansi, 0)\n\t};\n\tstyles.color.ansi16m = {\n\t\trgb: wrapAnsi16m(rgb2rgb, 0)\n\t};\n\n\tstyles.bgColor.ansi = {\n\t\tansi: wrapAnsi16(ansi2ansi, 10)\n\t};\n\tstyles.bgColor.ansi256 = {\n\t\tansi256: wrapAnsi256(ansi2ansi, 10)\n\t};\n\tstyles.bgColor.ansi16m = {\n\t\trgb: wrapAnsi16m(rgb2rgb, 10)\n\t};\n\n\tfor (let key of Object.keys(colorConvert)) {\n\t\tif (typeof colorConvert[key] !== 'object') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst suite = colorConvert[key];\n\n\t\tif (key === 'ansi16') {\n\t\t\tkey = 'ansi';\n\t\t}\n\n\t\tif ('ansi16' in suite) {\n\t\t\tstyles.color.ansi[key] = wrapAnsi16(suite.ansi16, 0);\n\t\t\tstyles.bgColor.ansi[key] = wrapAnsi16(suite.ansi16, 10);\n\t\t}\n\n\t\tif ('ansi256' in suite) {\n\t\t\tstyles.color.ansi256[key] = wrapAnsi256(suite.ansi256, 0);\n\t\t\tstyles.bgColor.ansi256[key] = wrapAnsi256(suite.ansi256, 10);\n\t\t}\n\n\t\tif ('rgb' in suite) {\n\t\t\tstyles.color.ansi16m[key] = wrapAnsi16m(suite.rgb, 0);\n\t\t\tstyles.bgColor.ansi16m[key] = wrapAnsi16m(suite.rgb, 10);\n\t\t}\n\t}\n\n\treturn styles;\n}\n\n// Make the export immutable\nObject.defineProperty(module, 'exports', {\n\tenumerable: true,\n\tget: assembleStyles\n});\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))\n\n//# sourceURL=webpack:///./node_modules/ansi-styles/index.js?");

/***/ }),

/***/ "./node_modules/base64-js/index.js":
/*!*****************************************!*\
  !*** ./node_modules/base64-js/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n\n\n//# sourceURL=webpack:///./node_modules/base64-js/index.js?");

/***/ }),

/***/ "./node_modules/chalk/index.js":
/*!*************************************!*\
  !*** ./node_modules/chalk/index.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process) {\nconst escapeStringRegexp = __webpack_require__(/*! escape-string-regexp */ \"./node_modules/escape-string-regexp/index.js\");\nconst ansiStyles = __webpack_require__(/*! ansi-styles */ \"./node_modules/ansi-styles/index.js\");\nconst stdoutColor = __webpack_require__(/*! supports-color */ \"./node_modules/supports-color/browser.js\").stdout;\n\nconst template = __webpack_require__(/*! ./templates.js */ \"./node_modules/chalk/templates.js\");\n\nconst isSimpleWindowsTerm = process.platform === 'win32' && !(process.env.TERM || '').toLowerCase().startsWith('xterm');\n\n// `supportsColor.level` → `ansiStyles.color[name]` mapping\nconst levelMapping = ['ansi', 'ansi', 'ansi256', 'ansi16m'];\n\n// `color-convert` models to exclude from the Chalk API due to conflicts and such\nconst skipModels = new Set(['gray']);\n\nconst styles = Object.create(null);\n\nfunction applyOptions(obj, options) {\n\toptions = options || {};\n\n\t// Detect level if not set manually\n\tconst scLevel = stdoutColor ? stdoutColor.level : 0;\n\tobj.level = options.level === undefined ? scLevel : options.level;\n\tobj.enabled = 'enabled' in options ? options.enabled : obj.level > 0;\n}\n\nfunction Chalk(options) {\n\t// We check for this.template here since calling `chalk.constructor()`\n\t// by itself will have a `this` of a previously constructed chalk object\n\tif (!this || !(this instanceof Chalk) || this.template) {\n\t\tconst chalk = {};\n\t\tapplyOptions(chalk, options);\n\n\t\tchalk.template = function () {\n\t\t\tconst args = [].slice.call(arguments);\n\t\t\treturn chalkTag.apply(null, [chalk.template].concat(args));\n\t\t};\n\n\t\tObject.setPrototypeOf(chalk, Chalk.prototype);\n\t\tObject.setPrototypeOf(chalk.template, chalk);\n\n\t\tchalk.template.constructor = Chalk;\n\n\t\treturn chalk.template;\n\t}\n\n\tapplyOptions(this, options);\n}\n\n// Use bright blue on Windows as the normal blue color is illegible\nif (isSimpleWindowsTerm) {\n\tansiStyles.blue.open = '\\u001B[94m';\n}\n\nfor (const key of Object.keys(ansiStyles)) {\n\tansiStyles[key].closeRe = new RegExp(escapeStringRegexp(ansiStyles[key].close), 'g');\n\n\tstyles[key] = {\n\t\tget() {\n\t\t\tconst codes = ansiStyles[key];\n\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, key);\n\t\t}\n\t};\n}\n\nstyles.visible = {\n\tget() {\n\t\treturn build.call(this, this._styles || [], true, 'visible');\n\t}\n};\n\nansiStyles.color.closeRe = new RegExp(escapeStringRegexp(ansiStyles.color.close), 'g');\nfor (const model of Object.keys(ansiStyles.color.ansi)) {\n\tif (skipModels.has(model)) {\n\t\tcontinue;\n\t}\n\n\tstyles[model] = {\n\t\tget() {\n\t\t\tconst level = this.level;\n\t\t\treturn function () {\n\t\t\t\tconst open = ansiStyles.color[levelMapping[level]][model].apply(null, arguments);\n\t\t\t\tconst codes = {\n\t\t\t\t\topen,\n\t\t\t\t\tclose: ansiStyles.color.close,\n\t\t\t\t\tcloseRe: ansiStyles.color.closeRe\n\t\t\t\t};\n\t\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);\n\t\t\t};\n\t\t}\n\t};\n}\n\nansiStyles.bgColor.closeRe = new RegExp(escapeStringRegexp(ansiStyles.bgColor.close), 'g');\nfor (const model of Object.keys(ansiStyles.bgColor.ansi)) {\n\tif (skipModels.has(model)) {\n\t\tcontinue;\n\t}\n\n\tconst bgModel = 'bg' + model[0].toUpperCase() + model.slice(1);\n\tstyles[bgModel] = {\n\t\tget() {\n\t\t\tconst level = this.level;\n\t\t\treturn function () {\n\t\t\t\tconst open = ansiStyles.bgColor[levelMapping[level]][model].apply(null, arguments);\n\t\t\t\tconst codes = {\n\t\t\t\t\topen,\n\t\t\t\t\tclose: ansiStyles.bgColor.close,\n\t\t\t\t\tcloseRe: ansiStyles.bgColor.closeRe\n\t\t\t\t};\n\t\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);\n\t\t\t};\n\t\t}\n\t};\n}\n\nconst proto = Object.defineProperties(() => {}, styles);\n\nfunction build(_styles, _empty, key) {\n\tconst builder = function () {\n\t\treturn applyStyle.apply(builder, arguments);\n\t};\n\n\tbuilder._styles = _styles;\n\tbuilder._empty = _empty;\n\n\tconst self = this;\n\n\tObject.defineProperty(builder, 'level', {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn self.level;\n\t\t},\n\t\tset(level) {\n\t\t\tself.level = level;\n\t\t}\n\t});\n\n\tObject.defineProperty(builder, 'enabled', {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn self.enabled;\n\t\t},\n\t\tset(enabled) {\n\t\t\tself.enabled = enabled;\n\t\t}\n\t});\n\n\t// See below for fix regarding invisible grey/dim combination on Windows\n\tbuilder.hasGrey = this.hasGrey || key === 'gray' || key === 'grey';\n\n\t// `__proto__` is used because we must return a function, but there is\n\t// no way to create a function with a different prototype\n\tbuilder.__proto__ = proto; // eslint-disable-line no-proto\n\n\treturn builder;\n}\n\nfunction applyStyle() {\n\t// Support varags, but simply cast to string in case there's only one arg\n\tconst args = arguments;\n\tconst argsLen = args.length;\n\tlet str = String(arguments[0]);\n\n\tif (argsLen === 0) {\n\t\treturn '';\n\t}\n\n\tif (argsLen > 1) {\n\t\t// Don't slice `arguments`, it prevents V8 optimizations\n\t\tfor (let a = 1; a < argsLen; a++) {\n\t\t\tstr += ' ' + args[a];\n\t\t}\n\t}\n\n\tif (!this.enabled || this.level <= 0 || !str) {\n\t\treturn this._empty ? '' : str;\n\t}\n\n\t// Turns out that on Windows dimmed gray text becomes invisible in cmd.exe,\n\t// see https://github.com/chalk/chalk/issues/58\n\t// If we're on Windows and we're dealing with a gray color, temporarily make 'dim' a noop.\n\tconst originalDim = ansiStyles.dim.open;\n\tif (isSimpleWindowsTerm && this.hasGrey) {\n\t\tansiStyles.dim.open = '';\n\t}\n\n\tfor (const code of this._styles.slice().reverse()) {\n\t\t// Replace any instances already present with a re-opening code\n\t\t// otherwise only the part of the string until said closing code\n\t\t// will be colored, and the rest will simply be 'plain'.\n\t\tstr = code.open + str.replace(code.closeRe, code.open) + code.close;\n\n\t\t// Close the styling before a linebreak and reopen\n\t\t// after next line to fix a bleed issue on macOS\n\t\t// https://github.com/chalk/chalk/pull/92\n\t\tstr = str.replace(/\\r?\\n/g, `${code.close}$&${code.open}`);\n\t}\n\n\t// Reset the original `dim` if we changed it to work around the Windows dimmed gray issue\n\tansiStyles.dim.open = originalDim;\n\n\treturn str;\n}\n\nfunction chalkTag(chalk, strings) {\n\tif (!Array.isArray(strings)) {\n\t\t// If chalk() was called by itself or with a string,\n\t\t// return the string itself as a string.\n\t\treturn [].slice.call(arguments, 1).join(' ');\n\t}\n\n\tconst args = [].slice.call(arguments, 2);\n\tconst parts = [strings.raw[0]];\n\n\tfor (let i = 1; i < strings.length; i++) {\n\t\tparts.push(String(args[i - 1]).replace(/[{}\\\\]/g, '\\\\$&'));\n\t\tparts.push(String(strings.raw[i]));\n\t}\n\n\treturn template(chalk, parts.join(''));\n}\n\nObject.defineProperties(Chalk.prototype, styles);\n\nmodule.exports = Chalk(); // eslint-disable-line new-cap\nmodule.exports.supportsColor = stdoutColor;\nmodule.exports.default = module.exports; // For TypeScript\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///./node_modules/chalk/index.js?");

/***/ }),

/***/ "./node_modules/chalk/templates.js":
/*!*****************************************!*\
  !*** ./node_modules/chalk/templates.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nconst TEMPLATE_REGEX = /(?:\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.))|(?:\\{(~)?(\\w+(?:\\([^)]*\\))?(?:\\.\\w+(?:\\([^)]*\\))?)*)(?:[ \\t]|(?=\\r?\\n)))|(\\})|((?:.|[\\r\\n\\f])+?)/gi;\nconst STYLE_REGEX = /(?:^|\\.)(\\w+)(?:\\(([^)]*)\\))?/g;\nconst STRING_REGEX = /^(['\"])((?:\\\\.|(?!\\1)[^\\\\])*)\\1$/;\nconst ESCAPE_REGEX = /\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.)|([^\\\\])/gi;\n\nconst ESCAPES = new Map([\n\t['n', '\\n'],\n\t['r', '\\r'],\n\t['t', '\\t'],\n\t['b', '\\b'],\n\t['f', '\\f'],\n\t['v', '\\v'],\n\t['0', '\\0'],\n\t['\\\\', '\\\\'],\n\t['e', '\\u001B'],\n\t['a', '\\u0007']\n]);\n\nfunction unescape(c) {\n\tif ((c[0] === 'u' && c.length === 5) || (c[0] === 'x' && c.length === 3)) {\n\t\treturn String.fromCharCode(parseInt(c.slice(1), 16));\n\t}\n\n\treturn ESCAPES.get(c) || c;\n}\n\nfunction parseArguments(name, args) {\n\tconst results = [];\n\tconst chunks = args.trim().split(/\\s*,\\s*/g);\n\tlet matches;\n\n\tfor (const chunk of chunks) {\n\t\tif (!isNaN(chunk)) {\n\t\t\tresults.push(Number(chunk));\n\t\t} else if ((matches = chunk.match(STRING_REGEX))) {\n\t\t\tresults.push(matches[2].replace(ESCAPE_REGEX, (m, escape, chr) => escape ? unescape(escape) : chr));\n\t\t} else {\n\t\t\tthrow new Error(`Invalid Chalk template style argument: ${chunk} (in style '${name}')`);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction parseStyle(style) {\n\tSTYLE_REGEX.lastIndex = 0;\n\n\tconst results = [];\n\tlet matches;\n\n\twhile ((matches = STYLE_REGEX.exec(style)) !== null) {\n\t\tconst name = matches[1];\n\n\t\tif (matches[2]) {\n\t\t\tconst args = parseArguments(name, matches[2]);\n\t\t\tresults.push([name].concat(args));\n\t\t} else {\n\t\t\tresults.push([name]);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction buildStyle(chalk, styles) {\n\tconst enabled = {};\n\n\tfor (const layer of styles) {\n\t\tfor (const style of layer.styles) {\n\t\t\tenabled[style[0]] = layer.inverse ? null : style.slice(1);\n\t\t}\n\t}\n\n\tlet current = chalk;\n\tfor (const styleName of Object.keys(enabled)) {\n\t\tif (Array.isArray(enabled[styleName])) {\n\t\t\tif (!(styleName in current)) {\n\t\t\t\tthrow new Error(`Unknown Chalk style: ${styleName}`);\n\t\t\t}\n\n\t\t\tif (enabled[styleName].length > 0) {\n\t\t\t\tcurrent = current[styleName].apply(current, enabled[styleName]);\n\t\t\t} else {\n\t\t\t\tcurrent = current[styleName];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn current;\n}\n\nmodule.exports = (chalk, tmp) => {\n\tconst styles = [];\n\tconst chunks = [];\n\tlet chunk = [];\n\n\t// eslint-disable-next-line max-params\n\ttmp.replace(TEMPLATE_REGEX, (m, escapeChar, inverse, style, close, chr) => {\n\t\tif (escapeChar) {\n\t\t\tchunk.push(unescape(escapeChar));\n\t\t} else if (style) {\n\t\t\tconst str = chunk.join('');\n\t\t\tchunk = [];\n\t\t\tchunks.push(styles.length === 0 ? str : buildStyle(chalk, styles)(str));\n\t\t\tstyles.push({inverse, styles: parseStyle(style)});\n\t\t} else if (close) {\n\t\t\tif (styles.length === 0) {\n\t\t\t\tthrow new Error('Found extraneous } in Chalk template literal');\n\t\t\t}\n\n\t\t\tchunks.push(buildStyle(chalk, styles)(chunk.join('')));\n\t\t\tchunk = [];\n\t\t\tstyles.pop();\n\t\t} else {\n\t\t\tchunk.push(chr);\n\t\t}\n\t});\n\n\tchunks.push(chunk.join(''));\n\n\tif (styles.length > 0) {\n\t\tconst errMsg = `Chalk template literal is missing ${styles.length} closing bracket${styles.length === 1 ? '' : 's'} (\\`}\\`)`;\n\t\tthrow new Error(errMsg);\n\t}\n\n\treturn chunks.join('');\n};\n\n\n//# sourceURL=webpack:///./node_modules/chalk/templates.js?");

/***/ }),

/***/ "./node_modules/cli-highlight/dist/index.js":
/*!**************************************************!*\
  !*** ./node_modules/cli-highlight/dist/index.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar hljs = __webpack_require__(/*! highlight.js */ \"./node_modules/highlight.js/lib/index.js\");\nvar parse5 = __webpack_require__(/*! parse5 */ \"./node_modules/parse5/lib/index.js\");\nvar theme_1 = __webpack_require__(/*! ./theme */ \"./node_modules/cli-highlight/dist/theme.js\");\nfunction colorizeNode(node, theme) {\n    if (theme === void 0) { theme = {}; }\n    switch (node.type) {\n        case 'text': {\n            return node.data;\n        }\n        case 'tag': {\n            var hljsClass = /hljs-(\\w+)/.exec(node.attribs.class);\n            if (hljsClass) {\n                var token = hljsClass[1];\n                var nodeData = node.childNodes\n                    .map(function (node) { return colorizeNode(node, theme); })\n                    .join('');\n                return (theme[token] || theme_1.DEFAULT_THEME[token] || theme_1.plain)(nodeData);\n            }\n            // Return the data itself when the class name isn't prefixed with a highlight.js token prefix.\n            // This is common in instances of sublanguages (JSX, Markdown Code Blocks, etc.)\n            return node.childNodes.map(function (node) { return colorizeNode(node, theme); }).join('');\n        }\n    }\n    throw new Error('Invalid node type ' + node.type);\n}\nfunction colorize(code, theme) {\n    if (theme === void 0) { theme = {}; }\n    var fragment = parse5.parseFragment(code, {\n        treeAdapter: parse5.treeAdapters.htmlparser2,\n    });\n    return fragment.childNodes.map(function (node) { return colorizeNode(node, theme); }).join('');\n}\n/**\n * Apply syntax highlighting to `code` with ASCII color codes. The language is automatically\n * detected if not set.\n *\n * ```ts\n * import {highlight} from 'cli-highlight';\n * import * as fs from 'fs';\n *\n * fs.readFile('package.json', 'utf8', (err: any, json: string) => {\n *     console.log('package.json:');\n *     console.log(highlight(json));\n * });\n * ```\n *\n * @param code The code to highlight\n * @param options Optional options\n */\nfunction highlight(code, options) {\n    if (options === void 0) { options = {}; }\n    var html;\n    if (options.language) {\n        html = hljs.highlight(options.language, code, options.ignoreIllegals, options.continuation).value;\n    }\n    else {\n        html = hljs.highlightAuto(code, options.languageSubset).value;\n    }\n    return colorize(html, options.theme);\n}\nexports.highlight = highlight;\n/**\n * Returns all supported languages\n */\nfunction listLanguages() {\n    return hljs.listLanguages();\n}\nexports.listLanguages = listLanguages;\n/**\n * Returns true if the language is supported\n * @param name A language name, alias or file extension\n */\nfunction supportsLanguage(name) {\n    return !!hljs.getLanguage(name);\n}\nexports.supportsLanguage = supportsLanguage;\nexports.default = highlight;\n__export(__webpack_require__(/*! ./theme */ \"./node_modules/cli-highlight/dist/theme.js\"));\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack:///./node_modules/cli-highlight/dist/index.js?");

/***/ }),

/***/ "./node_modules/cli-highlight/dist/theme.js":
/*!**************************************************!*\
  !*** ./node_modules/cli-highlight/dist/theme.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar chalk_1 = __webpack_require__(/*! chalk */ \"./node_modules/chalk/index.js\");\n// Always enable colors, even if not auto-detected\nvar chalk = new chalk_1.default.constructor({ enabled: true });\n/**\n * Identity function for tokens that should not be styled (returns the input string as-is).\n * See [[Theme]] for an example.\n */\nexports.plain = function (codePart) { return codePart; };\n/**\n * The default theme. It is possible to override just individual keys.\n */\nexports.DEFAULT_THEME = {\n    /**\n     * keyword in a regular Algol-style language\n     */\n    keyword: chalk.blue,\n    /**\n     * built-in or library object (constant, class, function)\n     */\n    built_in: chalk.cyan,\n    /**\n     * user-defined type in a language with first-class syntactically significant types, like\n     * Haskell\n     */\n    type: chalk.cyan.dim,\n    /**\n     * special identifier for a built-in value (\"true\", \"false\", \"null\")\n     */\n    literal: chalk.blue,\n    /**\n     * number, including units and modifiers, if any.\n     */\n    number: chalk.green,\n    /**\n     * literal regular expression\n     */\n    regexp: chalk.red,\n    /**\n     * literal string, character\n     */\n    string: chalk.red,\n    /**\n     * parsed section inside a literal string\n     */\n    subst: exports.plain,\n    /**\n     * symbolic constant, interned string, goto label\n     */\n    symbol: exports.plain,\n    /**\n     * class or class-level declaration (interfaces, traits, modules, etc)\n     */\n    class: chalk.blue,\n    /**\n     * function or method declaration\n     */\n    function: chalk.yellow,\n    /**\n     * name of a class or a function at the place of declaration\n     */\n    title: exports.plain,\n    /**\n     * block of function arguments (parameters) at the place of declaration\n     */\n    params: exports.plain,\n    /**\n     * comment\n     */\n    comment: chalk.green,\n    /**\n     * documentation markup within comments\n     */\n    doctag: chalk.green,\n    /**\n     * flags, modifiers, annotations, processing instructions, preprocessor directive, etc\n     */\n    meta: chalk.grey,\n    /**\n     * keyword or built-in within meta construct\n     */\n    'meta-keyword': exports.plain,\n    /**\n     * string within meta construct\n     */\n    'meta-string': exports.plain,\n    /**\n     * heading of a section in a config file, heading in text markup\n     */\n    section: exports.plain,\n    /**\n     * XML/HTML tag\n     */\n    tag: chalk.grey,\n    /**\n     * name of an XML tag, the first word in an s-expression\n     */\n    name: chalk.blue,\n    /**\n     * s-expression name from the language standard library\n     */\n    'builtin-name': exports.plain,\n    /**\n     * name of an attribute with no language defined semantics (keys in JSON, setting names in\n     * .ini), also sub-attribute within another highlighted object, like XML tag\n     */\n    attr: chalk.cyan,\n    /**\n     * name of an attribute followed by a structured value part, like CSS properties\n     */\n    attribute: exports.plain,\n    /**\n     * variable in a config or a template file, environment var expansion in a script\n     */\n    variable: exports.plain,\n    /**\n     * list item bullet in text markup\n     */\n    bullet: exports.plain,\n    /**\n     * code block in text markup\n     */\n    code: exports.plain,\n    /**\n     * emphasis in text markup\n     */\n    emphasis: chalk.italic,\n    /**\n     * strong emphasis in text markup\n     */\n    strong: chalk.bold,\n    /**\n     * mathematical formula in text markup\n     */\n    formula: exports.plain,\n    /**\n     * hyperlink in text markup\n     */\n    link: chalk.underline,\n    /**\n     * quotation in text markup\n     */\n    quote: exports.plain,\n    /**\n     * tag selector in CSS\n     */\n    'selector-tag': exports.plain,\n    /**\n     * #id selector in CSS\n     */\n    'selector-id': exports.plain,\n    /**\n     * .class selector in CSS\n     */\n    'selector-class': exports.plain,\n    /**\n     * [attr] selector in CSS\n     */\n    'selector-attr': exports.plain,\n    /**\n     * :pseudo selector in CSS\n     */\n    'selector-pseudo': exports.plain,\n    /**\n     * tag of a template language\n     */\n    'template-tag': exports.plain,\n    /**\n     * variable in a template language\n     */\n    'template-variable': exports.plain,\n    /**\n     * added or changed line in a diff\n     */\n    addition: chalk.green,\n    /**\n     * deleted line in a diff\n     */\n    deletion: chalk.red,\n};\n/**\n * Converts a [[JsonTheme]] with string values to a [[Theme]] with formatter functions. Used by [[parse]].\n */\nfunction fromJson(json) {\n    var theme = {};\n    for (var _i = 0, _a = Object.keys(json); _i < _a.length; _i++) {\n        var key = _a[_i];\n        var style = json[key];\n        if (Array.isArray(style)) {\n            ;\n            theme[key] = style.reduce(function (prev, curr) { return (curr === 'plain' ? exports.plain : prev[curr]); }, chalk);\n        }\n        else {\n            ;\n            theme[key] = chalk[style];\n        }\n    }\n    return theme;\n}\nexports.fromJson = fromJson;\n/**\n * Converts a [[Theme]] with formatter functions to a [[JsonTheme]] with string values. Used by [[stringify]].\n */\nfunction toJson(theme) {\n    var jsonTheme = {};\n    for (var _i = 0, _a = Object.keys(jsonTheme); _i < _a.length; _i++) {\n        var key = _a[_i];\n        var style = jsonTheme[key];\n        jsonTheme[key] = style._styles;\n    }\n    return jsonTheme;\n}\nexports.toJson = toJson;\n/**\n * Stringifies a [[Theme]] with formatter functions to a JSON string.\n *\n * ```ts\n * import chalk = require('chalk');\n * import {stringify} from 'cli-highlight';\n * import * as fs from 'fs';\n *\n * const myTheme: Theme = {\n *     keyword: chalk.red.bold,\n *     addition: chalk.green,\n *     deletion: chalk.red.strikethrough,\n *     number: plain\n * }\n * const json = stringify(myTheme);\n * fs.writeFile('mytheme.json', json, (err: any) => {\n *     if (err) throw err;\n *     console.log('Theme saved');\n * });\n * ```\n */\nfunction stringify(theme) {\n    return JSON.stringify(toJson(theme));\n}\nexports.stringify = stringify;\n/**\n * Parses a JSON string into a [[Theme]] with formatter functions.\n *\n * ```ts\n * import * as fs from 'fs';\n * import {parse, highlight} from 'cli-highlight';\n *\n * fs.readFile('mytheme.json', 'utf8', (err: any, json: string)  => {\n *     if (err) throw err;\n *     const code = highlight('SELECT * FROM table', {theme: parse(json)});\n *     console.log(code);\n * });\n * ```\n */\nfunction parse(json) {\n    return fromJson(JSON.parse(json));\n}\nexports.parse = parse;\n//# sourceMappingURL=theme.js.map\n\n//# sourceURL=webpack:///./node_modules/cli-highlight/dist/theme.js?");

/***/ }),

/***/ "./node_modules/color-convert/conversions.js":
/*!***************************************************!*\
  !*** ./node_modules/color-convert/conversions.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* MIT license */\nvar cssKeywords = __webpack_require__(/*! color-name */ \"./node_modules/color-name/index.js\");\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n\tif (cssKeywords.hasOwnProperty(key)) {\n\t\treverseKeywords[cssKeywords[key]] = key;\n\t}\n}\n\nvar convert = module.exports = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\n// hide .channels and .labels properties\nfor (var model in convert) {\n\tif (convert.hasOwnProperty(model)) {\n\t\tif (!('channels' in convert[model])) {\n\t\t\tthrow new Error('missing channels property: ' + model);\n\t\t}\n\n\t\tif (!('labels' in convert[model])) {\n\t\t\tthrow new Error('missing channel labels property: ' + model);\n\t\t}\n\n\t\tif (convert[model].labels.length !== convert[model].channels) {\n\t\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t\t}\n\n\t\tvar channels = convert[model].channels;\n\t\tvar labels = convert[model].labels;\n\t\tdelete convert[model].channels;\n\t\tdelete convert[model].labels;\n\t\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\t\tObject.defineProperty(convert[model], 'labels', {value: labels});\n\t}\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar min = Math.min(r, g, b);\n\tvar max = Math.max(r, g, b);\n\tvar delta = max - min;\n\tvar h;\n\tvar s;\n\tvar l;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tvar rdif;\n\tvar gdif;\n\tvar bdif;\n\tvar h;\n\tvar s;\n\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar v = Math.max(r, g, b);\n\tvar diff = v - Math.min(r, g, b);\n\tvar diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = s = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tvar r = rgb[0];\n\tvar g = rgb[1];\n\tvar b = rgb[2];\n\tvar h = convert.rgb.hsl(rgb)[0];\n\tvar w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar c;\n\tvar m;\n\tvar y;\n\tvar k;\n\n\tk = Math.min(1 - r, 1 - g, 1 - b);\n\tc = (1 - r - k) / (1 - k) || 0;\n\tm = (1 - g - k) / (1 - k) || 0;\n\ty = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\n/**\n * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n * */\nfunction comparativeDistance(x, y) {\n\treturn (\n\t\tMath.pow(x[0] - y[0], 2) +\n\t\tMath.pow(x[1] - y[1], 2) +\n\t\tMath.pow(x[2] - y[2], 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tvar reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tvar currentClosestDistance = Infinity;\n\tvar currentClosestKeyword;\n\n\tfor (var keyword in cssKeywords) {\n\t\tif (cssKeywords.hasOwnProperty(keyword)) {\n\t\t\tvar value = cssKeywords[keyword];\n\n\t\t\t// Compute comparative distance\n\t\t\tvar distance = comparativeDistance(rgb, value);\n\n\t\t\t// Check if its less, if so set as closest\n\t\t\tif (distance < currentClosestDistance) {\n\t\t\t\tcurrentClosestDistance = distance;\n\t\t\t\tcurrentClosestKeyword = keyword;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tvar y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tvar z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tvar xyz = convert.rgb.xyz(rgb);\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tvar h = hsl[0] / 360;\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar t1;\n\tvar t2;\n\tvar t3;\n\tvar rgb;\n\tvar val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tt1 = 2 * l - t2;\n\n\trgb = [0, 0, 0];\n\tfor (var i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tvar h = hsl[0];\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar smin = s;\n\tvar lmin = Math.max(l, 0.01);\n\tvar sv;\n\tvar v;\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tv = (l + s) / 2;\n\tsv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tvar h = hsv[0] / 60;\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar hi = Math.floor(h) % 6;\n\n\tvar f = h - Math.floor(h);\n\tvar p = 255 * v * (1 - s);\n\tvar q = 255 * v * (1 - (s * f));\n\tvar t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tvar h = hsv[0];\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar vmin = Math.max(v, 0.01);\n\tvar lmin;\n\tvar sl;\n\tvar l;\n\n\tl = (2 - s) * v;\n\tlmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tvar h = hwb[0] / 360;\n\tvar wh = hwb[1] / 100;\n\tvar bl = hwb[2] / 100;\n\tvar ratio = wh + bl;\n\tvar i;\n\tvar v;\n\tvar f;\n\tvar n;\n\n\t// wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\ti = Math.floor(6 * h);\n\tv = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tn = wh + f * (v - wh); // linear interpolation\n\n\tvar r;\n\tvar g;\n\tvar b;\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v; g = n; b = wh; break;\n\t\tcase 1: r = n; g = v; b = wh; break;\n\t\tcase 2: r = wh; g = v; b = n; break;\n\t\tcase 3: r = wh; g = n; b = v; break;\n\t\tcase 4: r = n; g = wh; b = v; break;\n\t\tcase 5: r = v; g = wh; b = n; break;\n\t}\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tvar c = cmyk[0] / 100;\n\tvar m = cmyk[1] / 100;\n\tvar y = cmyk[2] / 100;\n\tvar k = cmyk[3] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = 1 - Math.min(1, c * (1 - k) + k);\n\tg = 1 - Math.min(1, m * (1 - k) + k);\n\tb = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tvar x = xyz[0] / 100;\n\tvar y = xyz[1] / 100;\n\tvar z = xyz[2] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar x;\n\tvar y;\n\tvar z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tvar y2 = Math.pow(y, 3);\n\tvar x2 = Math.pow(x, 3);\n\tvar z2 = Math.pow(z, 3);\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar hr;\n\tvar h;\n\tvar c;\n\n\thr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tc = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tvar l = lch[0];\n\tvar c = lch[1];\n\tvar h = lch[2];\n\tvar a;\n\tvar b;\n\tvar hr;\n\n\thr = h / 360 * 2 * Math.PI;\n\ta = c * Math.cos(hr);\n\tb = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\tvar value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2]; // hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tvar ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\n\t// we use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tvar ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tvar color = args % 10;\n\n\t// handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tvar mult = (~~(args > 50) + 1) * 0.5;\n\tvar r = ((color & 1) * mult) * 255;\n\tvar g = (((color >> 1) & 1) * mult) * 255;\n\tvar b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// handle greyscale\n\tif (args >= 232) {\n\t\tvar c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tvar rem;\n\tvar r = Math.floor(args / 36) / 5 * 255;\n\tvar g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tvar b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tvar integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tvar match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tvar colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(function (char) {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tvar integer = parseInt(colorString, 16);\n\tvar r = (integer >> 16) & 0xFF;\n\tvar g = (integer >> 8) & 0xFF;\n\tvar b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar max = Math.max(Math.max(r, g), b);\n\tvar min = Math.min(Math.min(r, g), b);\n\tvar chroma = (max - min);\n\tvar grayscale;\n\tvar hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma + 4;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar c = 1;\n\tvar f = 0;\n\n\tif (l < 0.5) {\n\t\tc = 2.0 * s * l;\n\t} else {\n\t\tc = 2.0 * s * (1.0 - l);\n\t}\n\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\n\tvar c = s * v;\n\tvar f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tvar h = hcg[0] / 360;\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tvar pure = [0, 0, 0];\n\tvar hi = (h % 1) * 6;\n\tvar v = hi % 1;\n\tvar w = 1 - v;\n\tvar mg = 0;\n\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar v = c + g * (1.0 - c);\n\tvar f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar l = g * (1.0 - c) + 0.5 * c;\n\tvar s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\tvar v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tvar w = hwb[1] / 100;\n\tvar b = hwb[2] / 100;\n\tvar v = 1 - b;\n\tvar c = v - w;\n\tvar g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = convert.gray.hsv = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tvar val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tvar integer = (val << 16) + (val << 8) + val;\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tvar val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n\n\n//# sourceURL=webpack:///./node_modules/color-convert/conversions.js?");

/***/ }),

/***/ "./node_modules/color-convert/index.js":
/*!*********************************************!*\
  !*** ./node_modules/color-convert/index.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var conversions = __webpack_require__(/*! ./conversions */ \"./node_modules/color-convert/conversions.js\");\nvar route = __webpack_require__(/*! ./route */ \"./node_modules/color-convert/route.js\");\n\nvar convert = {};\n\nvar models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\tvar result = fn(args);\n\n\t\t// we're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (var len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(function (fromModel) {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tvar routes = route(fromModel);\n\tvar routeModels = Object.keys(routes);\n\n\trouteModels.forEach(function (toModel) {\n\t\tvar fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n\n\n//# sourceURL=webpack:///./node_modules/color-convert/index.js?");

/***/ }),

/***/ "./node_modules/color-convert/route.js":
/*!*********************************************!*\
  !*** ./node_modules/color-convert/route.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var conversions = __webpack_require__(/*! ./conversions */ \"./node_modules/color-convert/conversions.js\");\n\n/*\n\tthis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tvar graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tvar models = Object.keys(conversions);\n\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tvar graph = buildGraph();\n\tvar queue = [fromModel]; // unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tvar current = queue.pop();\n\t\tvar adjacents = Object.keys(conversions[current]);\n\n\t\tfor (var len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tvar adjacent = adjacents[i];\n\t\t\tvar node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tvar path = [graph[toModel].parent, toModel];\n\tvar fn = conversions[graph[toModel].parent][toModel];\n\n\tvar cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tvar graph = deriveBFS(fromModel);\n\tvar conversion = {};\n\n\tvar models = Object.keys(graph);\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tvar toModel = models[i];\n\t\tvar node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// no possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n\n\n//# sourceURL=webpack:///./node_modules/color-convert/route.js?");

/***/ }),

/***/ "./node_modules/color-name/index.js":
/*!******************************************!*\
  !*** ./node_modules/color-name/index.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n\n\n//# sourceURL=webpack:///./node_modules/color-name/index.js?");

/***/ }),

/***/ "./node_modules/core-util-is/lib/util.js":
/*!***********************************************!*\
  !*** ./node_modules/core-util-is/lib/util.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Buffer) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node-libs-browser/node_modules/buffer/index.js */ \"./node_modules/node-libs-browser/node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:///./node_modules/core-util-is/lib/util.js?");

/***/ }),

/***/ "./node_modules/debug/src/browser.js":
/*!*******************************************!*\
  !*** ./node_modules/debug/src/browser.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process) {\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\n/**\n * Colors.\n */\n\nexports.colors = ['#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC', '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF', '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC', '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF', '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC', '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033', '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366', '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933', '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC', '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF', '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'];\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n// eslint-disable-next-line complexity\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n    return true;\n  } // Internet Explorer and Edge do not support colors.\n\n\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  } // Is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\n\n  return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // Is firebug? http://stackoverflow.com/a/398120/376773\n  typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) || // Is firefox >= v31?\n  // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31 || // Double check webkit in userAgent just in case we are in a worker\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/);\n}\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\n\nfunction formatArgs(args) {\n  args[0] = (this.useColors ? '%c' : '') + this.namespace + (this.useColors ? ' %c' : ' ') + args[0] + (this.useColors ? '%c ' : ' ') + '+' + module.exports.humanize(this.diff);\n\n  if (!this.useColors) {\n    return;\n  }\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit'); // The final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function (match) {\n    if (match === '%%') {\n      return;\n    }\n\n    index++;\n\n    if (match === '%c') {\n      // We only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n  args.splice(lastC, 0, c);\n}\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\n\nfunction log() {\n  var _console;\n\n  // This hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return (typeof console === \"undefined\" ? \"undefined\" : _typeof(console)) === 'object' && console.log && (_console = console).log.apply(_console, arguments);\n}\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\n\nfunction save(namespaces) {\n  try {\n    if (namespaces) {\n      exports.storage.setItem('debug', namespaces);\n    } else {\n      exports.storage.removeItem('debug');\n    }\n  } catch (error) {// Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\n\nfunction load() {\n  var r;\n\n  try {\n    r = exports.storage.getItem('debug');\n  } catch (error) {} // Swallow\n  // XXX (@Qix-) should we be logging these?\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\n\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\n\nfunction localstorage() {\n  try {\n    // TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n    // The Browser also has localStorage in the global context.\n    return localStorage;\n  } catch (error) {// Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\n\nmodule.exports = __webpack_require__(/*! ./common */ \"./node_modules/debug/src/common.js\")(exports);\nvar formatters = module.exports.formatters;\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n  try {\n    return JSON.stringify(v);\n  } catch (error) {\n    return '[UnexpectedJSONParseError]: ' + error.message;\n  }\n};\n\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///./node_modules/debug/src/browser.js?");

/***/ }),

/***/ "./node_modules/debug/src/common.js":
/*!******************************************!*\
  !*** ./node_modules/debug/src/common.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\nfunction setup(env) {\n  createDebug.debug = createDebug;\n  createDebug.default = createDebug;\n  createDebug.coerce = coerce;\n  createDebug.disable = disable;\n  createDebug.enable = enable;\n  createDebug.enabled = enabled;\n  createDebug.humanize = __webpack_require__(/*! ms */ \"./node_modules/ms/index.js\");\n  Object.keys(env).forEach(function (key) {\n    createDebug[key] = env[key];\n  });\n  /**\n  * Active `debug` instances.\n  */\n\n  createDebug.instances = [];\n  /**\n  * The currently active debug mode names, and names to skip.\n  */\n\n  createDebug.names = [];\n  createDebug.skips = [];\n  /**\n  * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n  *\n  * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n  */\n\n  createDebug.formatters = {};\n  /**\n  * Selects a color for a debug namespace\n  * @param {String} namespace The namespace string for the for the debug instance to be colored\n  * @return {Number|String} An ANSI color code for the given namespace\n  * @api private\n  */\n\n  function selectColor(namespace) {\n    var hash = 0;\n\n    for (var i = 0; i < namespace.length; i++) {\n      hash = (hash << 5) - hash + namespace.charCodeAt(i);\n      hash |= 0; // Convert to 32bit integer\n    }\n\n    return createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n  }\n\n  createDebug.selectColor = selectColor;\n  /**\n  * Create a debugger with the given `namespace`.\n  *\n  * @param {String} namespace\n  * @return {Function}\n  * @api public\n  */\n\n  function createDebug(namespace) {\n    var prevTime;\n\n    function debug() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      // Disabled?\n      if (!debug.enabled) {\n        return;\n      }\n\n      var self = debug; // Set `diff` timestamp\n\n      var curr = Number(new Date());\n      var ms = curr - (prevTime || curr);\n      self.diff = ms;\n      self.prev = prevTime;\n      self.curr = curr;\n      prevTime = curr;\n      args[0] = createDebug.coerce(args[0]);\n\n      if (typeof args[0] !== 'string') {\n        // Anything else let's inspect with %O\n        args.unshift('%O');\n      } // Apply any `formatters` transformations\n\n\n      var index = 0;\n      args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format) {\n        // If we encounter an escaped % then don't increase the array index\n        if (match === '%%') {\n          return match;\n        }\n\n        index++;\n        var formatter = createDebug.formatters[format];\n\n        if (typeof formatter === 'function') {\n          var val = args[index];\n          match = formatter.call(self, val); // Now we need to remove `args[index]` since it's inlined in the `format`\n\n          args.splice(index, 1);\n          index--;\n        }\n\n        return match;\n      }); // Apply env-specific formatting (colors, etc.)\n\n      createDebug.formatArgs.call(self, args);\n      var logFn = self.log || createDebug.log;\n      logFn.apply(self, args);\n    }\n\n    debug.namespace = namespace;\n    debug.enabled = createDebug.enabled(namespace);\n    debug.useColors = createDebug.useColors();\n    debug.color = selectColor(namespace);\n    debug.destroy = destroy;\n    debug.extend = extend; // Debug.formatArgs = formatArgs;\n    // debug.rawLog = rawLog;\n    // env-specific initialization logic for debug instances\n\n    if (typeof createDebug.init === 'function') {\n      createDebug.init(debug);\n    }\n\n    createDebug.instances.push(debug);\n    return debug;\n  }\n\n  function destroy() {\n    var index = createDebug.instances.indexOf(this);\n\n    if (index !== -1) {\n      createDebug.instances.splice(index, 1);\n      return true;\n    }\n\n    return false;\n  }\n\n  function extend(namespace, delimiter) {\n    return createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n  }\n  /**\n  * Enables a debug mode by namespaces. This can include modes\n  * separated by a colon and wildcards.\n  *\n  * @param {String} namespaces\n  * @api public\n  */\n\n\n  function enable(namespaces) {\n    createDebug.save(namespaces);\n    createDebug.names = [];\n    createDebug.skips = [];\n    var i;\n    var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n    var len = split.length;\n\n    for (i = 0; i < len; i++) {\n      if (!split[i]) {\n        // ignore empty strings\n        continue;\n      }\n\n      namespaces = split[i].replace(/\\*/g, '.*?');\n\n      if (namespaces[0] === '-') {\n        createDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n      } else {\n        createDebug.names.push(new RegExp('^' + namespaces + '$'));\n      }\n    }\n\n    for (i = 0; i < createDebug.instances.length; i++) {\n      var instance = createDebug.instances[i];\n      instance.enabled = createDebug.enabled(instance.namespace);\n    }\n  }\n  /**\n  * Disable debug output.\n  *\n  * @api public\n  */\n\n\n  function disable() {\n    createDebug.enable('');\n  }\n  /**\n  * Returns true if the given mode name is enabled, false otherwise.\n  *\n  * @param {String} name\n  * @return {Boolean}\n  * @api public\n  */\n\n\n  function enabled(name) {\n    if (name[name.length - 1] === '*') {\n      return true;\n    }\n\n    var i;\n    var len;\n\n    for (i = 0, len = createDebug.skips.length; i < len; i++) {\n      if (createDebug.skips[i].test(name)) {\n        return false;\n      }\n    }\n\n    for (i = 0, len = createDebug.names.length; i < len; i++) {\n      if (createDebug.names[i].test(name)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n  * Coerce `val`.\n  *\n  * @param {Mixed} val\n  * @return {Mixed}\n  * @api private\n  */\n\n\n  function coerce(val) {\n    if (val instanceof Error) {\n      return val.stack || val.message;\n    }\n\n    return val;\n  }\n\n  createDebug.enable(createDebug.load());\n  return createDebug;\n}\n\nmodule.exports = setup;\n\n\n\n//# sourceURL=webpack:///./node_modules/debug/src/common.js?");

/***/ }),

/***/ "./node_modules/escape-string-regexp/index.js":
/*!****************************************************!*\
  !*** ./node_modules/escape-string-regexp/index.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar matchOperatorsRe = /[|\\\\{}()[\\]^$+*?.]/g;\n\nmodule.exports = function (str) {\n\tif (typeof str !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\treturn str.replace(matchOperatorsRe, '\\\\$&');\n};\n\n\n//# sourceURL=webpack:///./node_modules/escape-string-regexp/index.js?");

/***/ }),

/***/ "./node_modules/events/events.js":
/*!***************************************!*\
  !*** ./node_modules/events/events.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\n\n//# sourceURL=webpack:///./node_modules/events/events.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/highlight.js":
/*!****************************************************!*\
  !*** ./node_modules/highlight.js/lib/highlight.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\nSyntax highlighting with language autodetection.\nhttps://highlightjs.org/\n*/\n\n(function(factory) {\n\n  // Find the global object for export to both the browser and web workers.\n  var globalObject = typeof window === 'object' && window ||\n                     typeof self === 'object' && self;\n\n  // Setup highlight.js for different environments. First is Node.js or\n  // CommonJS.\n  if(true) {\n    factory(exports);\n  } else {}\n\n}(function(hljs) {\n  // Convenience variables for build-in objects\n  var ArrayProto = [],\n      objectKeys = Object.keys;\n\n  // Global internal variables used within the highlight.js library.\n  var languages = {},\n      aliases   = {};\n\n  // Regular expressions used throughout the highlight.js library.\n  var noHighlightRe    = /^(no-?highlight|plain|text)$/i,\n      languagePrefixRe = /\\blang(?:uage)?-([\\w-]+)\\b/i,\n      fixMarkupRe      = /((^(<[^>]+>|\\t|)+|(?:\\n)))/gm;\n\n  var spanEndTag = '</span>';\n\n  // Global options used when within external APIs. This is modified when\n  // calling the `hljs.configure` function.\n  var options = {\n    classPrefix: 'hljs-',\n    tabReplace: null,\n    useBR: false,\n    languages: undefined\n  };\n\n\n  /* Utility functions */\n\n  function escape(value) {\n    return value.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n  }\n\n  function tag(node) {\n    return node.nodeName.toLowerCase();\n  }\n\n  function testRe(re, lexeme) {\n    var match = re && re.exec(lexeme);\n    return match && match.index === 0;\n  }\n\n  function isNotHighlighted(language) {\n    return noHighlightRe.test(language);\n  }\n\n  function blockLanguage(block) {\n    var i, match, length, _class;\n    var classes = block.className + ' ';\n\n    classes += block.parentNode ? block.parentNode.className : '';\n\n    // language-* takes precedence over non-prefixed class names.\n    match = languagePrefixRe.exec(classes);\n    if (match) {\n      return getLanguage(match[1]) ? match[1] : 'no-highlight';\n    }\n\n    classes = classes.split(/\\s+/);\n\n    for (i = 0, length = classes.length; i < length; i++) {\n      _class = classes[i]\n\n      if (isNotHighlighted(_class) || getLanguage(_class)) {\n        return _class;\n      }\n    }\n  }\n\n  function inherit(parent) {  // inherit(parent, override_obj, override_obj, ...)\n    var key;\n    var result = {};\n    var objects = Array.prototype.slice.call(arguments, 1);\n\n    for (key in parent)\n      result[key] = parent[key];\n    objects.forEach(function(obj) {\n      for (key in obj)\n        result[key] = obj[key];\n    });\n    return result;\n  }\n\n  /* Stream merging */\n\n  function nodeStream(node) {\n    var result = [];\n    (function _nodeStream(node, offset) {\n      for (var child = node.firstChild; child; child = child.nextSibling) {\n        if (child.nodeType === 3)\n          offset += child.nodeValue.length;\n        else if (child.nodeType === 1) {\n          result.push({\n            event: 'start',\n            offset: offset,\n            node: child\n          });\n          offset = _nodeStream(child, offset);\n          // Prevent void elements from having an end tag that would actually\n          // double them in the output. There are more void elements in HTML\n          // but we list only those realistically expected in code display.\n          if (!tag(child).match(/br|hr|img|input/)) {\n            result.push({\n              event: 'stop',\n              offset: offset,\n              node: child\n            });\n          }\n        }\n      }\n      return offset;\n    })(node, 0);\n    return result;\n  }\n\n  function mergeStreams(original, highlighted, value) {\n    var processed = 0;\n    var result = '';\n    var nodeStack = [];\n\n    function selectStream() {\n      if (!original.length || !highlighted.length) {\n        return original.length ? original : highlighted;\n      }\n      if (original[0].offset !== highlighted[0].offset) {\n        return (original[0].offset < highlighted[0].offset) ? original : highlighted;\n      }\n\n      /*\n      To avoid starting the stream just before it should stop the order is\n      ensured that original always starts first and closes last:\n\n      if (event1 == 'start' && event2 == 'start')\n        return original;\n      if (event1 == 'start' && event2 == 'stop')\n        return highlighted;\n      if (event1 == 'stop' && event2 == 'start')\n        return original;\n      if (event1 == 'stop' && event2 == 'stop')\n        return highlighted;\n\n      ... which is collapsed to:\n      */\n      return highlighted[0].event === 'start' ? original : highlighted;\n    }\n\n    function open(node) {\n      function attr_str(a) {return ' ' + a.nodeName + '=\"' + escape(a.value).replace('\"', '&quot;') + '\"';}\n      result += '<' + tag(node) + ArrayProto.map.call(node.attributes, attr_str).join('') + '>';\n    }\n\n    function close(node) {\n      result += '</' + tag(node) + '>';\n    }\n\n    function render(event) {\n      (event.event === 'start' ? open : close)(event.node);\n    }\n\n    while (original.length || highlighted.length) {\n      var stream = selectStream();\n      result += escape(value.substring(processed, stream[0].offset));\n      processed = stream[0].offset;\n      if (stream === original) {\n        /*\n        On any opening or closing tag of the original markup we first close\n        the entire highlighted node stack, then render the original tag along\n        with all the following original tags at the same offset and then\n        reopen all the tags on the highlighted stack.\n        */\n        nodeStack.reverse().forEach(close);\n        do {\n          render(stream.splice(0, 1)[0]);\n          stream = selectStream();\n        } while (stream === original && stream.length && stream[0].offset === processed);\n        nodeStack.reverse().forEach(open);\n      } else {\n        if (stream[0].event === 'start') {\n          nodeStack.push(stream[0].node);\n        } else {\n          nodeStack.pop();\n        }\n        render(stream.splice(0, 1)[0]);\n      }\n    }\n    return result + escape(value.substr(processed));\n  }\n\n  /* Initialization */\n\n  function expand_mode(mode) {\n    if (mode.variants && !mode.cached_variants) {\n      mode.cached_variants = mode.variants.map(function(variant) {\n        return inherit(mode, {variants: null}, variant);\n      });\n    }\n    return mode.cached_variants || (mode.endsWithParent && [inherit(mode)]) || [mode];\n  }\n\n  function compileLanguage(language) {\n\n    function reStr(re) {\n        return (re && re.source) || re;\n    }\n\n    function langRe(value, global) {\n      return new RegExp(\n        reStr(value),\n        'm' + (language.case_insensitive ? 'i' : '') + (global ? 'g' : '')\n      );\n    }\n\n    function compileMode(mode, parent) {\n      if (mode.compiled)\n        return;\n      mode.compiled = true;\n\n      mode.keywords = mode.keywords || mode.beginKeywords;\n      if (mode.keywords) {\n        var compiled_keywords = {};\n\n        var flatten = function(className, str) {\n          if (language.case_insensitive) {\n            str = str.toLowerCase();\n          }\n          str.split(' ').forEach(function(kw) {\n            var pair = kw.split('|');\n            compiled_keywords[pair[0]] = [className, pair[1] ? Number(pair[1]) : 1];\n          });\n        };\n\n        if (typeof mode.keywords === 'string') { // string\n          flatten('keyword', mode.keywords);\n        } else {\n          objectKeys(mode.keywords).forEach(function (className) {\n            flatten(className, mode.keywords[className]);\n          });\n        }\n        mode.keywords = compiled_keywords;\n      }\n      mode.lexemesRe = langRe(mode.lexemes || /\\w+/, true);\n\n      if (parent) {\n        if (mode.beginKeywords) {\n          mode.begin = '\\\\b(' + mode.beginKeywords.split(' ').join('|') + ')\\\\b';\n        }\n        if (!mode.begin)\n          mode.begin = /\\B|\\b/;\n        mode.beginRe = langRe(mode.begin);\n        if (!mode.end && !mode.endsWithParent)\n          mode.end = /\\B|\\b/;\n        if (mode.end)\n          mode.endRe = langRe(mode.end);\n        mode.terminator_end = reStr(mode.end) || '';\n        if (mode.endsWithParent && parent.terminator_end)\n          mode.terminator_end += (mode.end ? '|' : '') + parent.terminator_end;\n      }\n      if (mode.illegal)\n        mode.illegalRe = langRe(mode.illegal);\n      if (mode.relevance == null)\n        mode.relevance = 1;\n      if (!mode.contains) {\n        mode.contains = [];\n      }\n      mode.contains = Array.prototype.concat.apply([], mode.contains.map(function(c) {\n        return expand_mode(c === 'self' ? mode : c)\n      }));\n      mode.contains.forEach(function(c) {compileMode(c, mode);});\n\n      if (mode.starts) {\n        compileMode(mode.starts, parent);\n      }\n\n      var terminators =\n        mode.contains.map(function(c) {\n          return c.beginKeywords ? '\\\\.?(' + c.begin + ')\\\\.?' : c.begin;\n        })\n        .concat([mode.terminator_end, mode.illegal])\n        .map(reStr)\n        .filter(Boolean);\n      mode.terminators = terminators.length ? langRe(terminators.join('|'), true) : {exec: function(/*s*/) {return null;}};\n    }\n\n    compileMode(language);\n  }\n\n  /*\n  Core highlighting function. Accepts a language name, or an alias, and a\n  string with the code to highlight. Returns an object with the following\n  properties:\n\n  - relevance (int)\n  - value (an HTML string with highlighting markup)\n\n  */\n  function highlight(name, value, ignore_illegals, continuation) {\n\n    function subMode(lexeme, mode) {\n      var i, length;\n\n      for (i = 0, length = mode.contains.length; i < length; i++) {\n        if (testRe(mode.contains[i].beginRe, lexeme)) {\n          return mode.contains[i];\n        }\n      }\n    }\n\n    function endOfMode(mode, lexeme) {\n      if (testRe(mode.endRe, lexeme)) {\n        while (mode.endsParent && mode.parent) {\n          mode = mode.parent;\n        }\n        return mode;\n      }\n      if (mode.endsWithParent) {\n        return endOfMode(mode.parent, lexeme);\n      }\n    }\n\n    function isIllegal(lexeme, mode) {\n      return !ignore_illegals && testRe(mode.illegalRe, lexeme);\n    }\n\n    function keywordMatch(mode, match) {\n      var match_str = language.case_insensitive ? match[0].toLowerCase() : match[0];\n      return mode.keywords.hasOwnProperty(match_str) && mode.keywords[match_str];\n    }\n\n    function buildSpan(classname, insideSpan, leaveOpen, noPrefix) {\n      var classPrefix = noPrefix ? '' : options.classPrefix,\n          openSpan    = '<span class=\"' + classPrefix,\n          closeSpan   = leaveOpen ? '' : spanEndTag\n\n      openSpan += classname + '\">';\n\n      return openSpan + insideSpan + closeSpan;\n    }\n\n    function processKeywords() {\n      var keyword_match, last_index, match, result;\n\n      if (!top.keywords)\n        return escape(mode_buffer);\n\n      result = '';\n      last_index = 0;\n      top.lexemesRe.lastIndex = 0;\n      match = top.lexemesRe.exec(mode_buffer);\n\n      while (match) {\n        result += escape(mode_buffer.substring(last_index, match.index));\n        keyword_match = keywordMatch(top, match);\n        if (keyword_match) {\n          relevance += keyword_match[1];\n          result += buildSpan(keyword_match[0], escape(match[0]));\n        } else {\n          result += escape(match[0]);\n        }\n        last_index = top.lexemesRe.lastIndex;\n        match = top.lexemesRe.exec(mode_buffer);\n      }\n      return result + escape(mode_buffer.substr(last_index));\n    }\n\n    function processSubLanguage() {\n      var explicit = typeof top.subLanguage === 'string';\n      if (explicit && !languages[top.subLanguage]) {\n        return escape(mode_buffer);\n      }\n\n      var result = explicit ?\n                   highlight(top.subLanguage, mode_buffer, true, continuations[top.subLanguage]) :\n                   highlightAuto(mode_buffer, top.subLanguage.length ? top.subLanguage : undefined);\n\n      // Counting embedded language score towards the host language may be disabled\n      // with zeroing the containing mode relevance. Usecase in point is Markdown that\n      // allows XML everywhere and makes every XML snippet to have a much larger Markdown\n      // score.\n      if (top.relevance > 0) {\n        relevance += result.relevance;\n      }\n      if (explicit) {\n        continuations[top.subLanguage] = result.top;\n      }\n      return buildSpan(result.language, result.value, false, true);\n    }\n\n    function processBuffer() {\n      result += (top.subLanguage != null ? processSubLanguage() : processKeywords());\n      mode_buffer = '';\n    }\n\n    function startNewMode(mode) {\n      result += mode.className? buildSpan(mode.className, '', true): '';\n      top = Object.create(mode, {parent: {value: top}});\n    }\n\n    function processLexeme(buffer, lexeme) {\n\n      mode_buffer += buffer;\n\n      if (lexeme == null) {\n        processBuffer();\n        return 0;\n      }\n\n      var new_mode = subMode(lexeme, top);\n      if (new_mode) {\n        if (new_mode.skip) {\n          mode_buffer += lexeme;\n        } else {\n          if (new_mode.excludeBegin) {\n            mode_buffer += lexeme;\n          }\n          processBuffer();\n          if (!new_mode.returnBegin && !new_mode.excludeBegin) {\n            mode_buffer = lexeme;\n          }\n        }\n        startNewMode(new_mode, lexeme);\n        return new_mode.returnBegin ? 0 : lexeme.length;\n      }\n\n      var end_mode = endOfMode(top, lexeme);\n      if (end_mode) {\n        var origin = top;\n        if (origin.skip) {\n          mode_buffer += lexeme;\n        } else {\n          if (!(origin.returnEnd || origin.excludeEnd)) {\n            mode_buffer += lexeme;\n          }\n          processBuffer();\n          if (origin.excludeEnd) {\n            mode_buffer = lexeme;\n          }\n        }\n        do {\n          if (top.className) {\n            result += spanEndTag;\n          }\n          if (!top.skip) {\n            relevance += top.relevance;\n          }\n          top = top.parent;\n        } while (top !== end_mode.parent);\n        if (end_mode.starts) {\n          startNewMode(end_mode.starts, '');\n        }\n        return origin.returnEnd ? 0 : lexeme.length;\n      }\n\n      if (isIllegal(lexeme, top))\n        throw new Error('Illegal lexeme \"' + lexeme + '\" for mode \"' + (top.className || '<unnamed>') + '\"');\n\n      /*\n      Parser should not reach this point as all types of lexemes should be caught\n      earlier, but if it does due to some bug make sure it advances at least one\n      character forward to prevent infinite looping.\n      */\n      mode_buffer += lexeme;\n      return lexeme.length || 1;\n    }\n\n    var language = getLanguage(name);\n    if (!language) {\n      throw new Error('Unknown language: \"' + name + '\"');\n    }\n\n    compileLanguage(language);\n    var top = continuation || language;\n    var continuations = {}; // keep continuations for sub-languages\n    var result = '', current;\n    for(current = top; current !== language; current = current.parent) {\n      if (current.className) {\n        result = buildSpan(current.className, '', true) + result;\n      }\n    }\n    var mode_buffer = '';\n    var relevance = 0;\n    try {\n      var match, count, index = 0;\n      while (true) {\n        top.terminators.lastIndex = index;\n        match = top.terminators.exec(value);\n        if (!match)\n          break;\n        count = processLexeme(value.substring(index, match.index), match[0]);\n        index = match.index + count;\n      }\n      processLexeme(value.substr(index));\n      for(current = top; current.parent; current = current.parent) { // close dangling modes\n        if (current.className) {\n          result += spanEndTag;\n        }\n      }\n      return {\n        relevance: relevance,\n        value: result,\n        language: name,\n        top: top\n      };\n    } catch (e) {\n      if (e.message && e.message.indexOf('Illegal') !== -1) {\n        return {\n          relevance: 0,\n          value: escape(value)\n        };\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  /*\n  Highlighting with language detection. Accepts a string with the code to\n  highlight. Returns an object with the following properties:\n\n  - language (detected language)\n  - relevance (int)\n  - value (an HTML string with highlighting markup)\n  - second_best (object with the same structure for second-best heuristically\n    detected language, may be absent)\n\n  */\n  function highlightAuto(text, languageSubset) {\n    languageSubset = languageSubset || options.languages || objectKeys(languages);\n    var result = {\n      relevance: 0,\n      value: escape(text)\n    };\n    var second_best = result;\n    languageSubset.filter(getLanguage).forEach(function(name) {\n      var current = highlight(name, text, false);\n      current.language = name;\n      if (current.relevance > second_best.relevance) {\n        second_best = current;\n      }\n      if (current.relevance > result.relevance) {\n        second_best = result;\n        result = current;\n      }\n    });\n    if (second_best.language) {\n      result.second_best = second_best;\n    }\n    return result;\n  }\n\n  /*\n  Post-processing of the highlighted markup:\n\n  - replace TABs with something more useful\n  - replace real line-breaks with '<br>' for non-pre containers\n\n  */\n  function fixMarkup(value) {\n    return !(options.tabReplace || options.useBR)\n      ? value\n      : value.replace(fixMarkupRe, function(match, p1) {\n          if (options.useBR && match === '\\n') {\n            return '<br>';\n          } else if (options.tabReplace) {\n            return p1.replace(/\\t/g, options.tabReplace);\n          }\n          return '';\n      });\n  }\n\n  function buildClassName(prevClassName, currentLang, resultLang) {\n    var language = currentLang ? aliases[currentLang] : resultLang,\n        result   = [prevClassName.trim()];\n\n    if (!prevClassName.match(/\\bhljs\\b/)) {\n      result.push('hljs');\n    }\n\n    if (prevClassName.indexOf(language) === -1) {\n      result.push(language);\n    }\n\n    return result.join(' ').trim();\n  }\n\n  /*\n  Applies highlighting to a DOM node containing code. Accepts a DOM node and\n  two optional parameters for fixMarkup.\n  */\n  function highlightBlock(block) {\n    var node, originalStream, result, resultNode, text;\n    var language = blockLanguage(block);\n\n    if (isNotHighlighted(language))\n        return;\n\n    if (options.useBR) {\n      node = document.createElementNS('http://www.w3.org/1999/xhtml', 'div');\n      node.innerHTML = block.innerHTML.replace(/\\n/g, '').replace(/<br[ \\/]*>/g, '\\n');\n    } else {\n      node = block;\n    }\n    text = node.textContent;\n    result = language ? highlight(language, text, true) : highlightAuto(text);\n\n    originalStream = nodeStream(node);\n    if (originalStream.length) {\n      resultNode = document.createElementNS('http://www.w3.org/1999/xhtml', 'div');\n      resultNode.innerHTML = result.value;\n      result.value = mergeStreams(originalStream, nodeStream(resultNode), text);\n    }\n    result.value = fixMarkup(result.value);\n\n    block.innerHTML = result.value;\n    block.className = buildClassName(block.className, language, result.language);\n    block.result = {\n      language: result.language,\n      re: result.relevance\n    };\n    if (result.second_best) {\n      block.second_best = {\n        language: result.second_best.language,\n        re: result.second_best.relevance\n      };\n    }\n  }\n\n  /*\n  Updates highlight.js global options with values passed in the form of an object.\n  */\n  function configure(user_options) {\n    options = inherit(options, user_options);\n  }\n\n  /*\n  Applies highlighting to all <pre><code>..</code></pre> blocks on a page.\n  */\n  function initHighlighting() {\n    if (initHighlighting.called)\n      return;\n    initHighlighting.called = true;\n\n    var blocks = document.querySelectorAll('pre code');\n    ArrayProto.forEach.call(blocks, highlightBlock);\n  }\n\n  /*\n  Attaches highlighting to the page load event.\n  */\n  function initHighlightingOnLoad() {\n    addEventListener('DOMContentLoaded', initHighlighting, false);\n    addEventListener('load', initHighlighting, false);\n  }\n\n  function registerLanguage(name, language) {\n    var lang = languages[name] = language(hljs);\n    if (lang.aliases) {\n      lang.aliases.forEach(function(alias) {aliases[alias] = name;});\n    }\n  }\n\n  function listLanguages() {\n    return objectKeys(languages);\n  }\n\n  function getLanguage(name) {\n    name = (name || '').toLowerCase();\n    return languages[name] || languages[aliases[name]];\n  }\n\n  /* Interface definition */\n\n  hljs.highlight = highlight;\n  hljs.highlightAuto = highlightAuto;\n  hljs.fixMarkup = fixMarkup;\n  hljs.highlightBlock = highlightBlock;\n  hljs.configure = configure;\n  hljs.initHighlighting = initHighlighting;\n  hljs.initHighlightingOnLoad = initHighlightingOnLoad;\n  hljs.registerLanguage = registerLanguage;\n  hljs.listLanguages = listLanguages;\n  hljs.getLanguage = getLanguage;\n  hljs.inherit = inherit;\n\n  // Common regexps\n  hljs.IDENT_RE = '[a-zA-Z]\\\\w*';\n  hljs.UNDERSCORE_IDENT_RE = '[a-zA-Z_]\\\\w*';\n  hljs.NUMBER_RE = '\\\\b\\\\d+(\\\\.\\\\d+)?';\n  hljs.C_NUMBER_RE = '(-?)(\\\\b0[xX][a-fA-F0-9]+|(\\\\b\\\\d+(\\\\.\\\\d*)?|\\\\.\\\\d+)([eE][-+]?\\\\d+)?)'; // 0x..., 0..., decimal, float\n  hljs.BINARY_NUMBER_RE = '\\\\b(0b[01]+)'; // 0b...\n  hljs.RE_STARTERS_RE = '!|!=|!==|%|%=|&|&&|&=|\\\\*|\\\\*=|\\\\+|\\\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\\\?|\\\\[|\\\\{|\\\\(|\\\\^|\\\\^=|\\\\||\\\\|=|\\\\|\\\\||~';\n\n  // Common modes\n  hljs.BACKSLASH_ESCAPE = {\n    begin: '\\\\\\\\[\\\\s\\\\S]', relevance: 0\n  };\n  hljs.APOS_STRING_MODE = {\n    className: 'string',\n    begin: '\\'', end: '\\'',\n    illegal: '\\\\n',\n    contains: [hljs.BACKSLASH_ESCAPE]\n  };\n  hljs.QUOTE_STRING_MODE = {\n    className: 'string',\n    begin: '\"', end: '\"',\n    illegal: '\\\\n',\n    contains: [hljs.BACKSLASH_ESCAPE]\n  };\n  hljs.PHRASAL_WORDS_MODE = {\n    begin: /\\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\\b/\n  };\n  hljs.COMMENT = function (begin, end, inherits) {\n    var mode = hljs.inherit(\n      {\n        className: 'comment',\n        begin: begin, end: end,\n        contains: []\n      },\n      inherits || {}\n    );\n    mode.contains.push(hljs.PHRASAL_WORDS_MODE);\n    mode.contains.push({\n      className: 'doctag',\n      begin: '(?:TODO|FIXME|NOTE|BUG|XXX):',\n      relevance: 0\n    });\n    return mode;\n  };\n  hljs.C_LINE_COMMENT_MODE = hljs.COMMENT('//', '$');\n  hljs.C_BLOCK_COMMENT_MODE = hljs.COMMENT('/\\\\*', '\\\\*/');\n  hljs.HASH_COMMENT_MODE = hljs.COMMENT('#', '$');\n  hljs.NUMBER_MODE = {\n    className: 'number',\n    begin: hljs.NUMBER_RE,\n    relevance: 0\n  };\n  hljs.C_NUMBER_MODE = {\n    className: 'number',\n    begin: hljs.C_NUMBER_RE,\n    relevance: 0\n  };\n  hljs.BINARY_NUMBER_MODE = {\n    className: 'number',\n    begin: hljs.BINARY_NUMBER_RE,\n    relevance: 0\n  };\n  hljs.CSS_NUMBER_MODE = {\n    className: 'number',\n    begin: hljs.NUMBER_RE + '(' +\n      '%|em|ex|ch|rem'  +\n      '|vw|vh|vmin|vmax' +\n      '|cm|mm|in|pt|pc|px' +\n      '|deg|grad|rad|turn' +\n      '|s|ms' +\n      '|Hz|kHz' +\n      '|dpi|dpcm|dppx' +\n      ')?',\n    relevance: 0\n  };\n  hljs.REGEXP_MODE = {\n    className: 'regexp',\n    begin: /\\//, end: /\\/[gimuy]*/,\n    illegal: /\\n/,\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      {\n        begin: /\\[/, end: /\\]/,\n        relevance: 0,\n        contains: [hljs.BACKSLASH_ESCAPE]\n      }\n    ]\n  };\n  hljs.TITLE_MODE = {\n    className: 'title',\n    begin: hljs.IDENT_RE,\n    relevance: 0\n  };\n  hljs.UNDERSCORE_TITLE_MODE = {\n    className: 'title',\n    begin: hljs.UNDERSCORE_IDENT_RE,\n    relevance: 0\n  };\n  hljs.METHOD_GUARD = {\n    // excludes method names from keyword processing\n    begin: '\\\\.\\\\s*' + hljs.UNDERSCORE_IDENT_RE,\n    relevance: 0\n  };\n\n  return hljs;\n}));\n\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/highlight.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/index.js":
/*!************************************************!*\
  !*** ./node_modules/highlight.js/lib/index.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var hljs = __webpack_require__(/*! ./highlight */ \"./node_modules/highlight.js/lib/highlight.js\");\n\nhljs.registerLanguage('1c', __webpack_require__(/*! ./languages/1c */ \"./node_modules/highlight.js/lib/languages/1c.js\"));\nhljs.registerLanguage('abnf', __webpack_require__(/*! ./languages/abnf */ \"./node_modules/highlight.js/lib/languages/abnf.js\"));\nhljs.registerLanguage('accesslog', __webpack_require__(/*! ./languages/accesslog */ \"./node_modules/highlight.js/lib/languages/accesslog.js\"));\nhljs.registerLanguage('actionscript', __webpack_require__(/*! ./languages/actionscript */ \"./node_modules/highlight.js/lib/languages/actionscript.js\"));\nhljs.registerLanguage('ada', __webpack_require__(/*! ./languages/ada */ \"./node_modules/highlight.js/lib/languages/ada.js\"));\nhljs.registerLanguage('apache', __webpack_require__(/*! ./languages/apache */ \"./node_modules/highlight.js/lib/languages/apache.js\"));\nhljs.registerLanguage('applescript', __webpack_require__(/*! ./languages/applescript */ \"./node_modules/highlight.js/lib/languages/applescript.js\"));\nhljs.registerLanguage('cpp', __webpack_require__(/*! ./languages/cpp */ \"./node_modules/highlight.js/lib/languages/cpp.js\"));\nhljs.registerLanguage('arduino', __webpack_require__(/*! ./languages/arduino */ \"./node_modules/highlight.js/lib/languages/arduino.js\"));\nhljs.registerLanguage('armasm', __webpack_require__(/*! ./languages/armasm */ \"./node_modules/highlight.js/lib/languages/armasm.js\"));\nhljs.registerLanguage('xml', __webpack_require__(/*! ./languages/xml */ \"./node_modules/highlight.js/lib/languages/xml.js\"));\nhljs.registerLanguage('asciidoc', __webpack_require__(/*! ./languages/asciidoc */ \"./node_modules/highlight.js/lib/languages/asciidoc.js\"));\nhljs.registerLanguage('aspectj', __webpack_require__(/*! ./languages/aspectj */ \"./node_modules/highlight.js/lib/languages/aspectj.js\"));\nhljs.registerLanguage('autohotkey', __webpack_require__(/*! ./languages/autohotkey */ \"./node_modules/highlight.js/lib/languages/autohotkey.js\"));\nhljs.registerLanguage('autoit', __webpack_require__(/*! ./languages/autoit */ \"./node_modules/highlight.js/lib/languages/autoit.js\"));\nhljs.registerLanguage('avrasm', __webpack_require__(/*! ./languages/avrasm */ \"./node_modules/highlight.js/lib/languages/avrasm.js\"));\nhljs.registerLanguage('awk', __webpack_require__(/*! ./languages/awk */ \"./node_modules/highlight.js/lib/languages/awk.js\"));\nhljs.registerLanguage('axapta', __webpack_require__(/*! ./languages/axapta */ \"./node_modules/highlight.js/lib/languages/axapta.js\"));\nhljs.registerLanguage('bash', __webpack_require__(/*! ./languages/bash */ \"./node_modules/highlight.js/lib/languages/bash.js\"));\nhljs.registerLanguage('basic', __webpack_require__(/*! ./languages/basic */ \"./node_modules/highlight.js/lib/languages/basic.js\"));\nhljs.registerLanguage('bnf', __webpack_require__(/*! ./languages/bnf */ \"./node_modules/highlight.js/lib/languages/bnf.js\"));\nhljs.registerLanguage('brainfuck', __webpack_require__(/*! ./languages/brainfuck */ \"./node_modules/highlight.js/lib/languages/brainfuck.js\"));\nhljs.registerLanguage('cal', __webpack_require__(/*! ./languages/cal */ \"./node_modules/highlight.js/lib/languages/cal.js\"));\nhljs.registerLanguage('capnproto', __webpack_require__(/*! ./languages/capnproto */ \"./node_modules/highlight.js/lib/languages/capnproto.js\"));\nhljs.registerLanguage('ceylon', __webpack_require__(/*! ./languages/ceylon */ \"./node_modules/highlight.js/lib/languages/ceylon.js\"));\nhljs.registerLanguage('clean', __webpack_require__(/*! ./languages/clean */ \"./node_modules/highlight.js/lib/languages/clean.js\"));\nhljs.registerLanguage('clojure', __webpack_require__(/*! ./languages/clojure */ \"./node_modules/highlight.js/lib/languages/clojure.js\"));\nhljs.registerLanguage('clojure-repl', __webpack_require__(/*! ./languages/clojure-repl */ \"./node_modules/highlight.js/lib/languages/clojure-repl.js\"));\nhljs.registerLanguage('cmake', __webpack_require__(/*! ./languages/cmake */ \"./node_modules/highlight.js/lib/languages/cmake.js\"));\nhljs.registerLanguage('coffeescript', __webpack_require__(/*! ./languages/coffeescript */ \"./node_modules/highlight.js/lib/languages/coffeescript.js\"));\nhljs.registerLanguage('coq', __webpack_require__(/*! ./languages/coq */ \"./node_modules/highlight.js/lib/languages/coq.js\"));\nhljs.registerLanguage('cos', __webpack_require__(/*! ./languages/cos */ \"./node_modules/highlight.js/lib/languages/cos.js\"));\nhljs.registerLanguage('crmsh', __webpack_require__(/*! ./languages/crmsh */ \"./node_modules/highlight.js/lib/languages/crmsh.js\"));\nhljs.registerLanguage('crystal', __webpack_require__(/*! ./languages/crystal */ \"./node_modules/highlight.js/lib/languages/crystal.js\"));\nhljs.registerLanguage('cs', __webpack_require__(/*! ./languages/cs */ \"./node_modules/highlight.js/lib/languages/cs.js\"));\nhljs.registerLanguage('csp', __webpack_require__(/*! ./languages/csp */ \"./node_modules/highlight.js/lib/languages/csp.js\"));\nhljs.registerLanguage('css', __webpack_require__(/*! ./languages/css */ \"./node_modules/highlight.js/lib/languages/css.js\"));\nhljs.registerLanguage('d', __webpack_require__(/*! ./languages/d */ \"./node_modules/highlight.js/lib/languages/d.js\"));\nhljs.registerLanguage('markdown', __webpack_require__(/*! ./languages/markdown */ \"./node_modules/highlight.js/lib/languages/markdown.js\"));\nhljs.registerLanguage('dart', __webpack_require__(/*! ./languages/dart */ \"./node_modules/highlight.js/lib/languages/dart.js\"));\nhljs.registerLanguage('delphi', __webpack_require__(/*! ./languages/delphi */ \"./node_modules/highlight.js/lib/languages/delphi.js\"));\nhljs.registerLanguage('diff', __webpack_require__(/*! ./languages/diff */ \"./node_modules/highlight.js/lib/languages/diff.js\"));\nhljs.registerLanguage('django', __webpack_require__(/*! ./languages/django */ \"./node_modules/highlight.js/lib/languages/django.js\"));\nhljs.registerLanguage('dns', __webpack_require__(/*! ./languages/dns */ \"./node_modules/highlight.js/lib/languages/dns.js\"));\nhljs.registerLanguage('dockerfile', __webpack_require__(/*! ./languages/dockerfile */ \"./node_modules/highlight.js/lib/languages/dockerfile.js\"));\nhljs.registerLanguage('dos', __webpack_require__(/*! ./languages/dos */ \"./node_modules/highlight.js/lib/languages/dos.js\"));\nhljs.registerLanguage('dsconfig', __webpack_require__(/*! ./languages/dsconfig */ \"./node_modules/highlight.js/lib/languages/dsconfig.js\"));\nhljs.registerLanguage('dts', __webpack_require__(/*! ./languages/dts */ \"./node_modules/highlight.js/lib/languages/dts.js\"));\nhljs.registerLanguage('dust', __webpack_require__(/*! ./languages/dust */ \"./node_modules/highlight.js/lib/languages/dust.js\"));\nhljs.registerLanguage('ebnf', __webpack_require__(/*! ./languages/ebnf */ \"./node_modules/highlight.js/lib/languages/ebnf.js\"));\nhljs.registerLanguage('elixir', __webpack_require__(/*! ./languages/elixir */ \"./node_modules/highlight.js/lib/languages/elixir.js\"));\nhljs.registerLanguage('elm', __webpack_require__(/*! ./languages/elm */ \"./node_modules/highlight.js/lib/languages/elm.js\"));\nhljs.registerLanguage('ruby', __webpack_require__(/*! ./languages/ruby */ \"./node_modules/highlight.js/lib/languages/ruby.js\"));\nhljs.registerLanguage('erb', __webpack_require__(/*! ./languages/erb */ \"./node_modules/highlight.js/lib/languages/erb.js\"));\nhljs.registerLanguage('erlang-repl', __webpack_require__(/*! ./languages/erlang-repl */ \"./node_modules/highlight.js/lib/languages/erlang-repl.js\"));\nhljs.registerLanguage('erlang', __webpack_require__(/*! ./languages/erlang */ \"./node_modules/highlight.js/lib/languages/erlang.js\"));\nhljs.registerLanguage('excel', __webpack_require__(/*! ./languages/excel */ \"./node_modules/highlight.js/lib/languages/excel.js\"));\nhljs.registerLanguage('fix', __webpack_require__(/*! ./languages/fix */ \"./node_modules/highlight.js/lib/languages/fix.js\"));\nhljs.registerLanguage('flix', __webpack_require__(/*! ./languages/flix */ \"./node_modules/highlight.js/lib/languages/flix.js\"));\nhljs.registerLanguage('fortran', __webpack_require__(/*! ./languages/fortran */ \"./node_modules/highlight.js/lib/languages/fortran.js\"));\nhljs.registerLanguage('fsharp', __webpack_require__(/*! ./languages/fsharp */ \"./node_modules/highlight.js/lib/languages/fsharp.js\"));\nhljs.registerLanguage('gams', __webpack_require__(/*! ./languages/gams */ \"./node_modules/highlight.js/lib/languages/gams.js\"));\nhljs.registerLanguage('gauss', __webpack_require__(/*! ./languages/gauss */ \"./node_modules/highlight.js/lib/languages/gauss.js\"));\nhljs.registerLanguage('gcode', __webpack_require__(/*! ./languages/gcode */ \"./node_modules/highlight.js/lib/languages/gcode.js\"));\nhljs.registerLanguage('gherkin', __webpack_require__(/*! ./languages/gherkin */ \"./node_modules/highlight.js/lib/languages/gherkin.js\"));\nhljs.registerLanguage('glsl', __webpack_require__(/*! ./languages/glsl */ \"./node_modules/highlight.js/lib/languages/glsl.js\"));\nhljs.registerLanguage('go', __webpack_require__(/*! ./languages/go */ \"./node_modules/highlight.js/lib/languages/go.js\"));\nhljs.registerLanguage('golo', __webpack_require__(/*! ./languages/golo */ \"./node_modules/highlight.js/lib/languages/golo.js\"));\nhljs.registerLanguage('gradle', __webpack_require__(/*! ./languages/gradle */ \"./node_modules/highlight.js/lib/languages/gradle.js\"));\nhljs.registerLanguage('groovy', __webpack_require__(/*! ./languages/groovy */ \"./node_modules/highlight.js/lib/languages/groovy.js\"));\nhljs.registerLanguage('haml', __webpack_require__(/*! ./languages/haml */ \"./node_modules/highlight.js/lib/languages/haml.js\"));\nhljs.registerLanguage('handlebars', __webpack_require__(/*! ./languages/handlebars */ \"./node_modules/highlight.js/lib/languages/handlebars.js\"));\nhljs.registerLanguage('haskell', __webpack_require__(/*! ./languages/haskell */ \"./node_modules/highlight.js/lib/languages/haskell.js\"));\nhljs.registerLanguage('haxe', __webpack_require__(/*! ./languages/haxe */ \"./node_modules/highlight.js/lib/languages/haxe.js\"));\nhljs.registerLanguage('hsp', __webpack_require__(/*! ./languages/hsp */ \"./node_modules/highlight.js/lib/languages/hsp.js\"));\nhljs.registerLanguage('htmlbars', __webpack_require__(/*! ./languages/htmlbars */ \"./node_modules/highlight.js/lib/languages/htmlbars.js\"));\nhljs.registerLanguage('http', __webpack_require__(/*! ./languages/http */ \"./node_modules/highlight.js/lib/languages/http.js\"));\nhljs.registerLanguage('hy', __webpack_require__(/*! ./languages/hy */ \"./node_modules/highlight.js/lib/languages/hy.js\"));\nhljs.registerLanguage('inform7', __webpack_require__(/*! ./languages/inform7 */ \"./node_modules/highlight.js/lib/languages/inform7.js\"));\nhljs.registerLanguage('ini', __webpack_require__(/*! ./languages/ini */ \"./node_modules/highlight.js/lib/languages/ini.js\"));\nhljs.registerLanguage('irpf90', __webpack_require__(/*! ./languages/irpf90 */ \"./node_modules/highlight.js/lib/languages/irpf90.js\"));\nhljs.registerLanguage('java', __webpack_require__(/*! ./languages/java */ \"./node_modules/highlight.js/lib/languages/java.js\"));\nhljs.registerLanguage('javascript', __webpack_require__(/*! ./languages/javascript */ \"./node_modules/highlight.js/lib/languages/javascript.js\"));\nhljs.registerLanguage('jboss-cli', __webpack_require__(/*! ./languages/jboss-cli */ \"./node_modules/highlight.js/lib/languages/jboss-cli.js\"));\nhljs.registerLanguage('json', __webpack_require__(/*! ./languages/json */ \"./node_modules/highlight.js/lib/languages/json.js\"));\nhljs.registerLanguage('julia', __webpack_require__(/*! ./languages/julia */ \"./node_modules/highlight.js/lib/languages/julia.js\"));\nhljs.registerLanguage('julia-repl', __webpack_require__(/*! ./languages/julia-repl */ \"./node_modules/highlight.js/lib/languages/julia-repl.js\"));\nhljs.registerLanguage('kotlin', __webpack_require__(/*! ./languages/kotlin */ \"./node_modules/highlight.js/lib/languages/kotlin.js\"));\nhljs.registerLanguage('lasso', __webpack_require__(/*! ./languages/lasso */ \"./node_modules/highlight.js/lib/languages/lasso.js\"));\nhljs.registerLanguage('ldif', __webpack_require__(/*! ./languages/ldif */ \"./node_modules/highlight.js/lib/languages/ldif.js\"));\nhljs.registerLanguage('leaf', __webpack_require__(/*! ./languages/leaf */ \"./node_modules/highlight.js/lib/languages/leaf.js\"));\nhljs.registerLanguage('less', __webpack_require__(/*! ./languages/less */ \"./node_modules/highlight.js/lib/languages/less.js\"));\nhljs.registerLanguage('lisp', __webpack_require__(/*! ./languages/lisp */ \"./node_modules/highlight.js/lib/languages/lisp.js\"));\nhljs.registerLanguage('livecodeserver', __webpack_require__(/*! ./languages/livecodeserver */ \"./node_modules/highlight.js/lib/languages/livecodeserver.js\"));\nhljs.registerLanguage('livescript', __webpack_require__(/*! ./languages/livescript */ \"./node_modules/highlight.js/lib/languages/livescript.js\"));\nhljs.registerLanguage('llvm', __webpack_require__(/*! ./languages/llvm */ \"./node_modules/highlight.js/lib/languages/llvm.js\"));\nhljs.registerLanguage('lsl', __webpack_require__(/*! ./languages/lsl */ \"./node_modules/highlight.js/lib/languages/lsl.js\"));\nhljs.registerLanguage('lua', __webpack_require__(/*! ./languages/lua */ \"./node_modules/highlight.js/lib/languages/lua.js\"));\nhljs.registerLanguage('makefile', __webpack_require__(/*! ./languages/makefile */ \"./node_modules/highlight.js/lib/languages/makefile.js\"));\nhljs.registerLanguage('mathematica', __webpack_require__(/*! ./languages/mathematica */ \"./node_modules/highlight.js/lib/languages/mathematica.js\"));\nhljs.registerLanguage('matlab', __webpack_require__(/*! ./languages/matlab */ \"./node_modules/highlight.js/lib/languages/matlab.js\"));\nhljs.registerLanguage('maxima', __webpack_require__(/*! ./languages/maxima */ \"./node_modules/highlight.js/lib/languages/maxima.js\"));\nhljs.registerLanguage('mel', __webpack_require__(/*! ./languages/mel */ \"./node_modules/highlight.js/lib/languages/mel.js\"));\nhljs.registerLanguage('mercury', __webpack_require__(/*! ./languages/mercury */ \"./node_modules/highlight.js/lib/languages/mercury.js\"));\nhljs.registerLanguage('mipsasm', __webpack_require__(/*! ./languages/mipsasm */ \"./node_modules/highlight.js/lib/languages/mipsasm.js\"));\nhljs.registerLanguage('mizar', __webpack_require__(/*! ./languages/mizar */ \"./node_modules/highlight.js/lib/languages/mizar.js\"));\nhljs.registerLanguage('perl', __webpack_require__(/*! ./languages/perl */ \"./node_modules/highlight.js/lib/languages/perl.js\"));\nhljs.registerLanguage('mojolicious', __webpack_require__(/*! ./languages/mojolicious */ \"./node_modules/highlight.js/lib/languages/mojolicious.js\"));\nhljs.registerLanguage('monkey', __webpack_require__(/*! ./languages/monkey */ \"./node_modules/highlight.js/lib/languages/monkey.js\"));\nhljs.registerLanguage('moonscript', __webpack_require__(/*! ./languages/moonscript */ \"./node_modules/highlight.js/lib/languages/moonscript.js\"));\nhljs.registerLanguage('n1ql', __webpack_require__(/*! ./languages/n1ql */ \"./node_modules/highlight.js/lib/languages/n1ql.js\"));\nhljs.registerLanguage('nginx', __webpack_require__(/*! ./languages/nginx */ \"./node_modules/highlight.js/lib/languages/nginx.js\"));\nhljs.registerLanguage('nimrod', __webpack_require__(/*! ./languages/nimrod */ \"./node_modules/highlight.js/lib/languages/nimrod.js\"));\nhljs.registerLanguage('nix', __webpack_require__(/*! ./languages/nix */ \"./node_modules/highlight.js/lib/languages/nix.js\"));\nhljs.registerLanguage('nsis', __webpack_require__(/*! ./languages/nsis */ \"./node_modules/highlight.js/lib/languages/nsis.js\"));\nhljs.registerLanguage('objectivec', __webpack_require__(/*! ./languages/objectivec */ \"./node_modules/highlight.js/lib/languages/objectivec.js\"));\nhljs.registerLanguage('ocaml', __webpack_require__(/*! ./languages/ocaml */ \"./node_modules/highlight.js/lib/languages/ocaml.js\"));\nhljs.registerLanguage('openscad', __webpack_require__(/*! ./languages/openscad */ \"./node_modules/highlight.js/lib/languages/openscad.js\"));\nhljs.registerLanguage('oxygene', __webpack_require__(/*! ./languages/oxygene */ \"./node_modules/highlight.js/lib/languages/oxygene.js\"));\nhljs.registerLanguage('parser3', __webpack_require__(/*! ./languages/parser3 */ \"./node_modules/highlight.js/lib/languages/parser3.js\"));\nhljs.registerLanguage('pf', __webpack_require__(/*! ./languages/pf */ \"./node_modules/highlight.js/lib/languages/pf.js\"));\nhljs.registerLanguage('php', __webpack_require__(/*! ./languages/php */ \"./node_modules/highlight.js/lib/languages/php.js\"));\nhljs.registerLanguage('pony', __webpack_require__(/*! ./languages/pony */ \"./node_modules/highlight.js/lib/languages/pony.js\"));\nhljs.registerLanguage('powershell', __webpack_require__(/*! ./languages/powershell */ \"./node_modules/highlight.js/lib/languages/powershell.js\"));\nhljs.registerLanguage('processing', __webpack_require__(/*! ./languages/processing */ \"./node_modules/highlight.js/lib/languages/processing.js\"));\nhljs.registerLanguage('profile', __webpack_require__(/*! ./languages/profile */ \"./node_modules/highlight.js/lib/languages/profile.js\"));\nhljs.registerLanguage('prolog', __webpack_require__(/*! ./languages/prolog */ \"./node_modules/highlight.js/lib/languages/prolog.js\"));\nhljs.registerLanguage('protobuf', __webpack_require__(/*! ./languages/protobuf */ \"./node_modules/highlight.js/lib/languages/protobuf.js\"));\nhljs.registerLanguage('puppet', __webpack_require__(/*! ./languages/puppet */ \"./node_modules/highlight.js/lib/languages/puppet.js\"));\nhljs.registerLanguage('purebasic', __webpack_require__(/*! ./languages/purebasic */ \"./node_modules/highlight.js/lib/languages/purebasic.js\"));\nhljs.registerLanguage('python', __webpack_require__(/*! ./languages/python */ \"./node_modules/highlight.js/lib/languages/python.js\"));\nhljs.registerLanguage('q', __webpack_require__(/*! ./languages/q */ \"./node_modules/highlight.js/lib/languages/q.js\"));\nhljs.registerLanguage('qml', __webpack_require__(/*! ./languages/qml */ \"./node_modules/highlight.js/lib/languages/qml.js\"));\nhljs.registerLanguage('r', __webpack_require__(/*! ./languages/r */ \"./node_modules/highlight.js/lib/languages/r.js\"));\nhljs.registerLanguage('rib', __webpack_require__(/*! ./languages/rib */ \"./node_modules/highlight.js/lib/languages/rib.js\"));\nhljs.registerLanguage('roboconf', __webpack_require__(/*! ./languages/roboconf */ \"./node_modules/highlight.js/lib/languages/roboconf.js\"));\nhljs.registerLanguage('routeros', __webpack_require__(/*! ./languages/routeros */ \"./node_modules/highlight.js/lib/languages/routeros.js\"));\nhljs.registerLanguage('rsl', __webpack_require__(/*! ./languages/rsl */ \"./node_modules/highlight.js/lib/languages/rsl.js\"));\nhljs.registerLanguage('ruleslanguage', __webpack_require__(/*! ./languages/ruleslanguage */ \"./node_modules/highlight.js/lib/languages/ruleslanguage.js\"));\nhljs.registerLanguage('rust', __webpack_require__(/*! ./languages/rust */ \"./node_modules/highlight.js/lib/languages/rust.js\"));\nhljs.registerLanguage('scala', __webpack_require__(/*! ./languages/scala */ \"./node_modules/highlight.js/lib/languages/scala.js\"));\nhljs.registerLanguage('scheme', __webpack_require__(/*! ./languages/scheme */ \"./node_modules/highlight.js/lib/languages/scheme.js\"));\nhljs.registerLanguage('scilab', __webpack_require__(/*! ./languages/scilab */ \"./node_modules/highlight.js/lib/languages/scilab.js\"));\nhljs.registerLanguage('scss', __webpack_require__(/*! ./languages/scss */ \"./node_modules/highlight.js/lib/languages/scss.js\"));\nhljs.registerLanguage('shell', __webpack_require__(/*! ./languages/shell */ \"./node_modules/highlight.js/lib/languages/shell.js\"));\nhljs.registerLanguage('smali', __webpack_require__(/*! ./languages/smali */ \"./node_modules/highlight.js/lib/languages/smali.js\"));\nhljs.registerLanguage('smalltalk', __webpack_require__(/*! ./languages/smalltalk */ \"./node_modules/highlight.js/lib/languages/smalltalk.js\"));\nhljs.registerLanguage('sml', __webpack_require__(/*! ./languages/sml */ \"./node_modules/highlight.js/lib/languages/sml.js\"));\nhljs.registerLanguage('sqf', __webpack_require__(/*! ./languages/sqf */ \"./node_modules/highlight.js/lib/languages/sqf.js\"));\nhljs.registerLanguage('sql', __webpack_require__(/*! ./languages/sql */ \"./node_modules/highlight.js/lib/languages/sql.js\"));\nhljs.registerLanguage('stan', __webpack_require__(/*! ./languages/stan */ \"./node_modules/highlight.js/lib/languages/stan.js\"));\nhljs.registerLanguage('stata', __webpack_require__(/*! ./languages/stata */ \"./node_modules/highlight.js/lib/languages/stata.js\"));\nhljs.registerLanguage('step21', __webpack_require__(/*! ./languages/step21 */ \"./node_modules/highlight.js/lib/languages/step21.js\"));\nhljs.registerLanguage('stylus', __webpack_require__(/*! ./languages/stylus */ \"./node_modules/highlight.js/lib/languages/stylus.js\"));\nhljs.registerLanguage('subunit', __webpack_require__(/*! ./languages/subunit */ \"./node_modules/highlight.js/lib/languages/subunit.js\"));\nhljs.registerLanguage('swift', __webpack_require__(/*! ./languages/swift */ \"./node_modules/highlight.js/lib/languages/swift.js\"));\nhljs.registerLanguage('taggerscript', __webpack_require__(/*! ./languages/taggerscript */ \"./node_modules/highlight.js/lib/languages/taggerscript.js\"));\nhljs.registerLanguage('yaml', __webpack_require__(/*! ./languages/yaml */ \"./node_modules/highlight.js/lib/languages/yaml.js\"));\nhljs.registerLanguage('tap', __webpack_require__(/*! ./languages/tap */ \"./node_modules/highlight.js/lib/languages/tap.js\"));\nhljs.registerLanguage('tcl', __webpack_require__(/*! ./languages/tcl */ \"./node_modules/highlight.js/lib/languages/tcl.js\"));\nhljs.registerLanguage('tex', __webpack_require__(/*! ./languages/tex */ \"./node_modules/highlight.js/lib/languages/tex.js\"));\nhljs.registerLanguage('thrift', __webpack_require__(/*! ./languages/thrift */ \"./node_modules/highlight.js/lib/languages/thrift.js\"));\nhljs.registerLanguage('tp', __webpack_require__(/*! ./languages/tp */ \"./node_modules/highlight.js/lib/languages/tp.js\"));\nhljs.registerLanguage('twig', __webpack_require__(/*! ./languages/twig */ \"./node_modules/highlight.js/lib/languages/twig.js\"));\nhljs.registerLanguage('typescript', __webpack_require__(/*! ./languages/typescript */ \"./node_modules/highlight.js/lib/languages/typescript.js\"));\nhljs.registerLanguage('vala', __webpack_require__(/*! ./languages/vala */ \"./node_modules/highlight.js/lib/languages/vala.js\"));\nhljs.registerLanguage('vbnet', __webpack_require__(/*! ./languages/vbnet */ \"./node_modules/highlight.js/lib/languages/vbnet.js\"));\nhljs.registerLanguage('vbscript', __webpack_require__(/*! ./languages/vbscript */ \"./node_modules/highlight.js/lib/languages/vbscript.js\"));\nhljs.registerLanguage('vbscript-html', __webpack_require__(/*! ./languages/vbscript-html */ \"./node_modules/highlight.js/lib/languages/vbscript-html.js\"));\nhljs.registerLanguage('verilog', __webpack_require__(/*! ./languages/verilog */ \"./node_modules/highlight.js/lib/languages/verilog.js\"));\nhljs.registerLanguage('vhdl', __webpack_require__(/*! ./languages/vhdl */ \"./node_modules/highlight.js/lib/languages/vhdl.js\"));\nhljs.registerLanguage('vim', __webpack_require__(/*! ./languages/vim */ \"./node_modules/highlight.js/lib/languages/vim.js\"));\nhljs.registerLanguage('x86asm', __webpack_require__(/*! ./languages/x86asm */ \"./node_modules/highlight.js/lib/languages/x86asm.js\"));\nhljs.registerLanguage('xl', __webpack_require__(/*! ./languages/xl */ \"./node_modules/highlight.js/lib/languages/xl.js\"));\nhljs.registerLanguage('xquery', __webpack_require__(/*! ./languages/xquery */ \"./node_modules/highlight.js/lib/languages/xquery.js\"));\nhljs.registerLanguage('zephir', __webpack_require__(/*! ./languages/zephir */ \"./node_modules/highlight.js/lib/languages/zephir.js\"));\n\nmodule.exports = hljs;\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/index.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/1c.js":
/*!*******************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/1c.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs){\n\n  // общий паттерн для определения идентификаторов\n  var UNDERSCORE_IDENT_RE = '[A-Za-zА-Яа-яёЁ_][A-Za-zА-Яа-яёЁ_0-9]+';\n  \n  // v7 уникальные ключевые слова, отсутствующие в v8 ==> keyword\n  var v7_keywords =\n  'далее ';\n\n  // v8 ключевые слова ==> keyword\n  var v8_keywords =\n  'возврат вызватьисключение выполнить для если и из или иначе иначеесли исключение каждого конецесли ' +\n  'конецпопытки конеццикла не новый перейти перем по пока попытка прервать продолжить тогда цикл экспорт ';\n\n  // keyword : ключевые слова\n  var KEYWORD = v7_keywords + v8_keywords;\n  \n  // v7 уникальные директивы, отсутствующие в v8 ==> meta-keyword\n  var v7_meta_keywords =\n  'загрузитьизфайла ';\n\n  // v8 ключевые слова в инструкциях препроцессора, директивах компиляции, аннотациях ==> meta-keyword\n  var v8_meta_keywords =\n  'вебклиент вместо внешнеесоединение клиент конецобласти мобильноеприложениеклиент мобильноеприложениесервер ' +\n  'наклиенте наклиентенасервере наклиентенасерверебезконтекста насервере насерверебезконтекста область перед ' +\n  'после сервер толстыйклиентобычноеприложение толстыйклиентуправляемоеприложение тонкийклиент ';\n\n  // meta-keyword : ключевые слова в инструкциях препроцессора, директивах компиляции, аннотациях\n  var METAKEYWORD = v7_meta_keywords + v8_meta_keywords;\n\n  // v7 системные константы ==> built_in\n  var v7_system_constants =\n  'разделительстраниц разделительстрок символтабуляции ';\n  \n  // v7 уникальные методы глобального контекста, отсутствующие в v8 ==> built_in\n  var v7_global_context_methods =\n  'ansitooem oemtoansi ввестивидсубконто ввестиперечисление ввестипериод ввестиплансчетов выбранныйплансчетов ' +\n  'датагод датамесяц датачисло заголовоксистемы значениевстроку значениеизстроки каталогиб каталогпользователя ' +\n  'кодсимв конгода конецпериодаби конецрассчитанногопериодаби конецстандартногоинтервала конквартала конмесяца ' +\n  'коннедели лог лог10 максимальноеколичествосубконто названиеинтерфейса названиенабораправ назначитьвид ' +\n  'назначитьсчет найтиссылки началопериодаби началостандартногоинтервала начгода начквартала начмесяца ' +\n  'начнедели номерднягода номерднянедели номернеделигода обработкаожидания основнойжурналрасчетов ' +\n  'основнойплансчетов основнойязык очиститьокносообщений периодстр получитьвремята получитьдатута ' +\n  'получитьдокументта получитьзначенияотбора получитьпозициюта получитьпустоезначение получитьта ' +\n  'префиксавтонумерации пропись пустоезначение разм разобратьпозициюдокумента рассчитатьрегистрына ' +\n  'рассчитатьрегистрыпо симв создатьобъект статусвозврата стрколичествострок сформироватьпозициюдокумента ' +\n  'счетпокоду текущеевремя типзначения типзначениястр установитьтана установитьтапо фиксшаблон шаблон ';\n  \n  // v8 методы глобального контекста ==> built_in\n  var v8_global_context_methods =\n  'acos asin atan base64значение base64строка cos exp log log10 pow sin sqrt tan xmlзначение xmlстрока ' +\n  'xmlтип xmlтипзнч активноеокно безопасныйрежим безопасныйрежимразделенияданных булево ввестидату ввестизначение ' +\n  'ввестистроку ввестичисло возможностьчтенияxml вопрос восстановитьзначение врег выгрузитьжурналрегистрации ' +\n  'выполнитьобработкуоповещения выполнитьпроверкуправдоступа вычислить год данныеформывзначение дата день деньгода ' +\n  'деньнедели добавитьмесяц заблокироватьданныедляредактирования заблокироватьработупользователя завершитьработусистемы ' +\n  'загрузитьвнешнююкомпоненту закрытьсправку записатьjson записатьxml записатьдатуjson записьжурналарегистрации ' +\n  'заполнитьзначениясвойств запроситьразрешениепользователя запуститьприложение запуститьсистему зафиксироватьтранзакцию ' +\n  'значениевданныеформы значениевстрокувнутр значениевфайл значениезаполнено значениеизстрокивнутр значениеизфайла ' +\n  'изxmlтипа импортмоделиxdto имякомпьютера имяпользователя инициализироватьпредопределенныеданные информацияобошибке ' +\n  'каталогбиблиотекимобильногоустройства каталогвременныхфайлов каталогдокументов каталогпрограммы кодироватьстроку ' +\n  'кодлокализацииинформационнойбазы кодсимвола командасистемы конецгода конецдня конецквартала конецмесяца конецминуты ' +\n  'конецнедели конецчаса конфигурациябазыданныхизмененадинамически конфигурацияизменена копироватьданныеформы ' +\n  'копироватьфайл краткоепредставлениеошибки лев макс местноевремя месяц мин минута монопольныйрежим найти ' +\n  'найтинедопустимыесимволыxml найтиокнопонавигационнойссылке найтипомеченныенаудаление найтипоссылкам найтифайлы ' +\n  'началогода началодня началоквартала началомесяца началоминуты началонедели началочаса начатьзапросразрешенияпользователя ' +\n  'начатьзапускприложения начатькопированиефайла начатьперемещениефайла начатьподключениевнешнейкомпоненты ' +\n  'начатьподключениерасширенияработыскриптографией начатьподключениерасширенияработысфайлами начатьпоискфайлов ' +\n  'начатьполучениекаталогавременныхфайлов начатьполучениекаталогадокументов начатьполучениерабочегокаталогаданныхпользователя ' +\n  'начатьполучениефайлов начатьпомещениефайла начатьпомещениефайлов начатьсозданиедвоичныхданныхизфайла начатьсозданиекаталога ' +\n  'начатьтранзакцию начатьудалениефайлов начатьустановкувнешнейкомпоненты начатьустановкурасширенияработыскриптографией ' +\n  'начатьустановкурасширенияработысфайлами неделягода необходимостьзавершениясоединения номерсеансаинформационнойбазы ' +\n  'номерсоединенияинформационнойбазы нрег нстр обновитьинтерфейс обновитьнумерациюобъектов обновитьповторноиспользуемыезначения ' +\n  'обработкапрерыванияпользователя объединитьфайлы окр описаниеошибки оповестить оповеститьобизменении ' +\n  'отключитьобработчикзапросанастроекклиенталицензирования отключитьобработчикожидания отключитьобработчикоповещения ' +\n  'открытьзначение открытьиндекссправки открытьсодержаниесправки открытьсправку открытьформу открытьформумодально ' +\n  'отменитьтранзакцию очиститьжурналрегистрации очиститьнастройкипользователя очиститьсообщения параметрыдоступа ' +\n  'перейтипонавигационнойссылке переместитьфайл подключитьвнешнююкомпоненту ' +\n  'подключитьобработчикзапросанастроекклиенталицензирования подключитьобработчикожидания подключитьобработчикоповещения ' +\n  'подключитьрасширениеработыскриптографией подключитьрасширениеработысфайлами подробноепредставлениеошибки ' +\n  'показатьвводдаты показатьвводзначения показатьвводстроки показатьвводчисла показатьвопрос показатьзначение ' +\n  'показатьинформациюобошибке показатьнакарте показатьоповещениепользователя показатьпредупреждение полноеимяпользователя ' +\n  'получитьcomобъект получитьxmlтип получитьадреспоместоположению получитьблокировкусеансов получитьвремязавершенияспящегосеанса ' +\n  'получитьвремязасыпанияпассивногосеанса получитьвремяожиданияблокировкиданных получитьданныевыбора ' +\n  'получитьдополнительныйпараметрклиенталицензирования получитьдопустимыекодылокализации получитьдопустимыечасовыепояса ' +\n  'получитьзаголовокклиентскогоприложения получитьзаголовоксистемы получитьзначенияотборажурналарегистрации ' +\n  'получитьидентификаторконфигурации получитьизвременногохранилища получитьимявременногофайла ' +\n  'получитьимяклиенталицензирования получитьинформациюэкрановклиента получитьиспользованиежурналарегистрации ' +\n  'получитьиспользованиесобытияжурналарегистрации получитькраткийзаголовокприложения получитьмакетоформления ' +\n  'получитьмаскувсефайлы получитьмаскувсефайлыклиента получитьмаскувсефайлысервера получитьместоположениепоадресу ' +\n  'получитьминимальнуюдлинупаролейпользователей получитьнавигационнуюссылку получитьнавигационнуюссылкуинформационнойбазы ' +\n  'получитьобновлениеконфигурациибазыданных получитьобновлениепредопределенныхданныхинформационнойбазы получитьобщиймакет ' +\n  'получитьобщуюформу получитьокна получитьоперативнуюотметкувремени получитьотключениебезопасногорежима ' +\n  'получитьпараметрыфункциональныхопцийинтерфейса получитьполноеимяпредопределенногозначения ' +\n  'получитьпредставлениянавигационныхссылок получитьпроверкусложностипаролейпользователей получитьразделительпути ' +\n  'получитьразделительпутиклиента получитьразделительпутисервера получитьсеансыинформационнойбазы ' +\n  'получитьскоростьклиентскогосоединения получитьсоединенияинформационнойбазы получитьсообщенияпользователю ' +\n  'получитьсоответствиеобъектаиформы получитьсоставстандартногоинтерфейсаodata получитьструктурухранениябазыданных ' +\n  'получитьтекущийсеансинформационнойбазы получитьфайл получитьфайлы получитьформу получитьфункциональнуюопцию ' +\n  'получитьфункциональнуюопциюинтерфейса получитьчасовойпоясинформационнойбазы пользователиос поместитьвовременноехранилище ' +\n  'поместитьфайл поместитьфайлы прав праводоступа предопределенноезначение представлениекодалокализации представлениепериода ' +\n  'представлениеправа представлениеприложения представлениесобытияжурналарегистрации представлениечасовогопояса предупреждение ' +\n  'прекратитьработусистемы привилегированныйрежим продолжитьвызов прочитатьjson прочитатьxml прочитатьдатуjson пустаястрока ' +\n  'рабочийкаталогданныхпользователя разблокироватьданныедляредактирования разделитьфайл разорватьсоединениесвнешнимисточникомданных ' +\n  'раскодироватьстроку рольдоступна секунда сигнал символ скопироватьжурналрегистрации смещениелетнеговремени ' +\n  'смещениестандартноговремени соединитьбуферыдвоичныхданных создатькаталог создатьфабрикуxdto сокрл сокрлп сокрп сообщить ' +\n  'состояние сохранитьзначение сохранитьнастройкипользователя сред стрдлина стрзаканчиваетсяна стрзаменить стрнайти стрначинаетсяс ' +\n  'строка строкасоединенияинформационнойбазы стрполучитьстроку стрразделить стрсоединить стрсравнить стрчисловхождений '+\n  'стрчислострок стршаблон текущаядата текущаядатасеанса текущаяуниверсальнаядата текущаяуниверсальнаядатавмиллисекундах ' +\n  'текущийвариантинтерфейсаклиентскогоприложения текущийвариантосновногошрифтаклиентскогоприложения текущийкодлокализации ' +\n  'текущийрежимзапуска текущийязык текущийязыксистемы тип типзнч транзакцияактивна трег удалитьданныеинформационнойбазы ' +\n  'удалитьизвременногохранилища удалитьобъекты удалитьфайлы универсальноевремя установитьбезопасныйрежим ' +\n  'установитьбезопасныйрежимразделенияданных установитьблокировкусеансов установитьвнешнююкомпоненту ' +\n  'установитьвремязавершенияспящегосеанса установитьвремязасыпанияпассивногосеанса установитьвремяожиданияблокировкиданных ' +\n  'установитьзаголовокклиентскогоприложения установитьзаголовоксистемы установитьиспользованиежурналарегистрации ' +\n  'установитьиспользованиесобытияжурналарегистрации установитькраткийзаголовокприложения ' +\n  'установитьминимальнуюдлинупаролейпользователей установитьмонопольныйрежим установитьнастройкиклиенталицензирования ' +\n  'установитьобновлениепредопределенныхданныхинформационнойбазы установитьотключениебезопасногорежима ' +\n  'установитьпараметрыфункциональныхопцийинтерфейса установитьпривилегированныйрежим ' +\n  'установитьпроверкусложностипаролейпользователей установитьрасширениеработыскриптографией ' +\n  'установитьрасширениеработысфайлами установитьсоединениесвнешнимисточникомданных установитьсоответствиеобъектаиформы ' +\n  'установитьсоставстандартногоинтерфейсаodata установитьчасовойпоясинформационнойбазы установитьчасовойпояссеанса ' +\n  'формат цел час часовойпояс часовойпояссеанса число числопрописью этоадресвременногохранилища ';\n\n  // v8 свойства глобального контекста ==> built_in\n  var v8_global_context_property =\n  'wsссылки библиотекакартинок библиотекамакетовоформлениякомпоновкиданных библиотекастилей бизнеспроцессы ' +\n  'внешниеисточникиданных внешниеобработки внешниеотчеты встроенныепокупки главныйинтерфейс главныйстиль ' +\n  'документы доставляемыеуведомления журналыдокументов задачи информацияобинтернетсоединении использованиерабочейдаты ' +\n  'историяработыпользователя константы критерииотбора метаданные обработки отображениерекламы отправкадоставляемыхуведомлений ' +\n  'отчеты панельзадачос параметрзапуска параметрысеанса перечисления планывидоврасчета планывидовхарактеристик ' +\n  'планыобмена планысчетов полнотекстовыйпоиск пользователиинформационнойбазы последовательности проверкавстроенныхпокупок ' +\n  'рабочаядата расширенияконфигурации регистрыбухгалтерии регистрынакопления регистрырасчета регистрысведений ' +\n  'регламентныезадания сериализаторxdto справочники средствагеопозиционирования средствакриптографии средствамультимедиа ' +\n  'средстваотображениярекламы средствапочты средствателефонии фабрикаxdto файловыепотоки фоновыезадания хранилищанастроек ' +\n  'хранилищевариантовотчетов хранилищенастроекданныхформ хранилищеобщихнастроек хранилищепользовательскихнастроекдинамическихсписков ' +\n  'хранилищепользовательскихнастроекотчетов хранилищесистемныхнастроек ';\n\n  // built_in : встроенные или библиотечные объекты (константы, классы, функции)\n  var BUILTIN =\n  v7_system_constants +\n  v7_global_context_methods + v8_global_context_methods +\n  v8_global_context_property;\n  \n  // v8 системные наборы значений ==> class\n  var v8_system_sets_of_values =\n  'webцвета windowsцвета windowsшрифты библиотекакартинок рамкистиля символы цветастиля шрифтыстиля ';\n\n  // v8 системные перечисления - интерфейсные ==> class\n  var v8_system_enums_interface =\n  'автоматическоесохранениеданныхформывнастройках автонумерациявформе автораздвижениесерий ' +\n  'анимациядиаграммы вариантвыравниванияэлементовизаголовков вариантуправлениявысотойтаблицы ' +\n  'вертикальнаяпрокруткаформы вертикальноеположение вертикальноеположениеэлемента видгруппыформы ' +\n  'виддекорацииформы виддополненияэлементаформы видизмененияданных видкнопкиформы видпереключателя ' +\n  'видподписейкдиаграмме видполяформы видфлажка влияниеразмеранапузырекдиаграммы горизонтальноеположение ' +\n  'горизонтальноеположениеэлемента группировкаколонок группировкаподчиненныхэлементовформы ' +\n  'группыиэлементы действиеперетаскивания дополнительныйрежимотображения допустимыедействияперетаскивания ' +\n  'интервалмеждуэлементамиформы использованиевывода использованиеполосыпрокрутки ' +\n  'используемоезначениеточкибиржевойдиаграммы историявыборапривводе источникзначенийоситочекдиаграммы ' +\n  'источникзначенияразмерапузырькадиаграммы категориягруппыкоманд максимумсерий начальноеотображениедерева ' +\n  'начальноеотображениесписка обновлениетекстаредактирования ориентациядендрограммы ориентациядиаграммы ' +\n  'ориентацияметокдиаграммы ориентацияметоксводнойдиаграммы ориентацияэлементаформы отображениевдиаграмме ' +\n  'отображениевлегендедиаграммы отображениегруппыкнопок отображениезаголовкашкалыдиаграммы ' +\n  'отображениезначенийсводнойдиаграммы отображениезначенияизмерительнойдиаграммы ' +\n  'отображениеинтерваладиаграммыганта отображениекнопки отображениекнопкивыбора отображениеобсужденийформы ' +\n  'отображениеобычнойгруппы отображениеотрицательныхзначенийпузырьковойдиаграммы отображениепанелипоиска ' +\n  'отображениеподсказки отображениепредупрежденияприредактировании отображениеразметкиполосырегулирования ' +\n  'отображениестраницформы отображениетаблицы отображениетекстазначениядиаграммыганта ' +\n  'отображениеуправленияобычнойгруппы отображениефигурыкнопки палитрацветовдиаграммы поведениеобычнойгруппы ' +\n  'поддержкамасштабадендрограммы поддержкамасштабадиаграммыганта поддержкамасштабасводнойдиаграммы ' +\n  'поисквтаблицепривводе положениезаголовкаэлементаформы положениекартинкикнопкиформы ' +\n  'положениекартинкиэлементаграфическойсхемы положениекоманднойпанелиформы положениекоманднойпанелиэлементаформы ' +\n  'положениеопорнойточкиотрисовки положениеподписейкдиаграмме положениеподписейшкалызначенийизмерительнойдиаграммы ' +\n  'положениесостоянияпросмотра положениестрокипоиска положениетекстасоединительнойлинии положениеуправленияпоиском ' +\n  'положениешкалывремени порядокотображенияточекгоризонтальнойгистограммы порядоксерийвлегендедиаграммы ' +\n  'размеркартинки расположениезаголовкашкалыдиаграммы растягиваниеповертикалидиаграммыганта ' +\n  'режимавтоотображениясостояния режимвводастроктаблицы режимвыборанезаполненного режимвыделениядаты ' +\n  'режимвыделениястрокитаблицы режимвыделениятаблицы режимизмененияразмера режимизменениясвязанногозначения ' +\n  'режимиспользованиядиалогапечати режимиспользованияпараметракоманды режиммасштабированияпросмотра ' +\n  'режимосновногоокнаклиентскогоприложения режимоткрытияокнаформы режимотображениявыделения ' +\n  'режимотображениягеографическойсхемы режимотображениязначенийсерии режимотрисовкисеткиграфическойсхемы ' +\n  'режимполупрозрачностидиаграммы режимпробеловдиаграммы режимразмещениянастранице режимредактированияколонки ' +\n  'режимсглаживаниядиаграммы режимсглаживанияиндикатора режимсписказадач сквозноевыравнивание ' +\n  'сохранениеданныхформывнастройках способзаполнениятекстазаголовкашкалыдиаграммы ' +\n  'способопределенияограничивающегозначениядиаграммы стандартнаягруппакоманд стандартноеоформление ' +\n  'статусоповещенияпользователя стильстрелки типаппроксимациилиниитрендадиаграммы типдиаграммы ' +\n  'типединицышкалывремени типимпортасерийслоягеографическойсхемы типлиниигеографическойсхемы типлиниидиаграммы ' +\n  'типмаркерагеографическойсхемы типмаркерадиаграммы типобластиоформления ' +\n  'типорганизацииисточникаданныхгеографическойсхемы типотображениясериислоягеографическойсхемы ' +\n  'типотображенияточечногообъектагеографическойсхемы типотображенияшкалыэлементалегендыгеографическойсхемы ' +\n  'типпоискаобъектовгеографическойсхемы типпроекциигеографическойсхемы типразмещенияизмерений ' +\n  'типразмещенияреквизитовизмерений типрамкиэлементауправления типсводнойдиаграммы ' +\n  'типсвязидиаграммыганта типсоединениязначенийпосериямдиаграммы типсоединенияточекдиаграммы ' +\n  'типсоединительнойлинии типстороныэлементаграфическойсхемы типформыотчета типшкалырадарнойдиаграммы ' +\n  'факторлиниитрендадиаграммы фигуракнопки фигурыграфическойсхемы фиксациявтаблице форматдняшкалывремени ' +\n  'форматкартинки ширинаподчиненныхэлементовформы ';\n\n  // v8 системные перечисления - свойства прикладных объектов ==> class\n  var v8_system_enums_objects_properties =\n  'виддвижениябухгалтерии виддвижениянакопления видпериодарегистрарасчета видсчета видточкимаршрутабизнеспроцесса ' +\n  'использованиеагрегатарегистранакопления использованиегруппиэлементов использованиережимапроведения ' +\n  'использованиесреза периодичностьагрегатарегистранакопления режимавтовремя режимзаписидокумента режимпроведениядокумента ';\n\n  // v8 системные перечисления - планы обмена ==> class\n  var v8_system_enums_exchange_plans =\n  'авторегистрацияизменений допустимыйномерсообщения отправкаэлементаданных получениеэлементаданных ';\n\n  // v8 системные перечисления - табличный документ ==> class\n  var v8_system_enums_tabular_document =\n  'использованиерасшифровкитабличногодокумента ориентациястраницы положениеитоговколоноксводнойтаблицы ' +\n  'положениеитоговстроксводнойтаблицы положениетекстаотносительнокартинки расположениезаголовкагруппировкитабличногодокумента ' +\n  'способчтениязначенийтабличногодокумента типдвустороннейпечати типзаполненияобластитабличногодокумента ' +\n  'типкурсоровтабличногодокумента типлиниирисункатабличногодокумента типлинииячейкитабличногодокумента ' +\n  'типнаправленияпереходатабличногодокумента типотображениявыделениятабличногодокумента типотображениялинийсводнойтаблицы ' +\n  'типразмещениятекстатабличногодокумента типрисункатабличногодокумента типсмещениятабличногодокумента ' +\n  'типузоратабличногодокумента типфайлатабличногодокумента точностьпечати чередованиерасположениястраниц ';\n\n  // v8 системные перечисления - планировщик ==> class\n  var v8_system_enums_sheduler =\n  'отображениевремениэлементовпланировщика ';\n\n  // v8 системные перечисления - форматированный документ ==> class\n  var v8_system_enums_formatted_document =\n  'типфайлаформатированногодокумента ';\n\n  // v8 системные перечисления - запрос ==> class\n  var v8_system_enums_query =\n  'обходрезультатазапроса типзаписизапроса ';\n\n  // v8 системные перечисления - построитель отчета ==> class\n  var v8_system_enums_report_builder =\n  'видзаполнениярасшифровкипостроителяотчета типдобавленияпредставлений типизмеренияпостроителяотчета типразмещенияитогов ';\n\n  // v8 системные перечисления - работа с файлами ==> class\n  var v8_system_enums_files =\n  'доступкфайлу режимдиалогавыборафайла режимоткрытияфайла ';\n\n  // v8 системные перечисления - построитель запроса ==> class\n  var v8_system_enums_query_builder =\n  'типизмеренияпостроителязапроса ';\n\n  // v8 системные перечисления - анализ данных ==> class\n  var v8_system_enums_data_analysis =\n  'видданныханализа методкластеризации типединицыинтервалавременианализаданных типзаполнениятаблицырезультатаанализаданных ' +\n  'типиспользованиячисловыхзначенийанализаданных типисточникаданныхпоискаассоциаций типколонкианализаданныхдереворешений ' +\n  'типколонкианализаданныхкластеризация типколонкианализаданныхобщаястатистика типколонкианализаданныхпоискассоциаций ' +\n  'типколонкианализаданныхпоискпоследовательностей типколонкимоделипрогноза типмерырасстоянияанализаданных ' +\n  'типотсеченияправилассоциации типполяанализаданных типстандартизациианализаданных типупорядочиванияправилассоциациианализаданных ' +\n  'типупорядочиванияшаблоновпоследовательностейанализаданных типупрощениядереварешений ';\n\n  // v8 системные перечисления - xml, json, xs, dom, xdto, web-сервисы ==> class\n  var v8_system_enums_xml_json_xs_dom_xdto_ws =\n  'wsнаправлениепараметра вариантxpathxs вариантзаписидатыjson вариантпростоготипаxs видгруппымоделиxs видфасетаxdto ' +\n  'действиепостроителяdom завершенностьпростоготипаxs завершенностьсоставноготипаxs завершенностьсхемыxs запрещенныеподстановкиxs ' +\n  'исключениягруппподстановкиxs категорияиспользованияатрибутаxs категорияограниченияидентичностиxs категорияограниченияпространствименxs ' +\n  'методнаследованияxs модельсодержимогоxs назначениетипаxml недопустимыеподстановкиxs обработкапробельныхсимволовxs обработкасодержимогоxs ' +\n  'ограничениезначенияxs параметрыотбораузловdom переносстрокjson позициявдокументеdom пробельныесимволыxml типатрибутаxml типзначенияjson ' +\n  'типканоническогоxml типкомпонентыxs типпроверкиxml типрезультатаdomxpath типузлаdom типузлаxml формаxml формапредставленияxs ' +\n  'форматдатыjson экранированиесимволовjson ';\n\n  // v8 системные перечисления - система компоновки данных ==> class\n  var v8_system_enums_data_composition_system =\n  'видсравнениякомпоновкиданных действиеобработкирасшифровкикомпоновкиданных направлениесортировкикомпоновкиданных ' +\n  'расположениевложенныхэлементоврезультатакомпоновкиданных расположениеитоговкомпоновкиданных расположениегруппировкикомпоновкиданных ' +\n  'расположениеполейгруппировкикомпоновкиданных расположениеполякомпоновкиданных расположениереквизитовкомпоновкиданных ' +\n  'расположениересурсовкомпоновкиданных типбухгалтерскогоостаткакомпоновкиданных типвыводатекстакомпоновкиданных ' +\n  'типгруппировкикомпоновкиданных типгруппыэлементовотборакомпоновкиданных типдополненияпериодакомпоновкиданных ' +\n  'типзаголовкаполейкомпоновкиданных типмакетагруппировкикомпоновкиданных типмакетаобластикомпоновкиданных типостаткакомпоновкиданных ' +\n  'типпериодакомпоновкиданных типразмещениятекстакомпоновкиданных типсвязинаборовданныхкомпоновкиданных типэлементарезультатакомпоновкиданных ' +\n  'расположениелегендыдиаграммыкомпоновкиданных типпримененияотборакомпоновкиданных режимотображенияэлементанастройкикомпоновкиданных ' +\n  'режимотображениянастроеккомпоновкиданных состояниеэлементанастройкикомпоновкиданных способвосстановлениянастроеккомпоновкиданных ' +\n  'режимкомпоновкирезультата использованиепараметракомпоновкиданных автопозицияресурсовкомпоновкиданных '+\n  'вариантиспользованиягруппировкикомпоновкиданных расположениересурсоввдиаграммекомпоновкиданных фиксациякомпоновкиданных ' +\n  'использованиеусловногооформлениякомпоновкиданных ';\n\n  // v8 системные перечисления - почта ==> class\n  var v8_system_enums_email =\n  'важностьинтернетпочтовогосообщения обработкатекстаинтернетпочтовогосообщения способкодированияинтернетпочтовоговложения ' +\n  'способкодированиянеasciiсимволовинтернетпочтовогосообщения типтекстапочтовогосообщения протоколинтернетпочты ' +\n  'статусразборапочтовогосообщения ';\n\n  // v8 системные перечисления - журнал регистрации ==> class\n  var v8_system_enums_logbook =\n  'режимтранзакциизаписижурналарегистрации статустранзакциизаписижурналарегистрации уровеньжурналарегистрации ';\n\n  // v8 системные перечисления - криптография ==> class\n  var v8_system_enums_cryptography =\n  'расположениехранилищасертификатовкриптографии режимвключениясертификатовкриптографии режимпроверкисертификатакриптографии ' +\n  'типхранилищасертификатовкриптографии ';\n\n  // v8 системные перечисления - ZIP ==> class\n  var v8_system_enums_zip =\n  'кодировкаименфайловвzipфайле методсжатияzip методшифрованияzip режимвосстановленияпутейфайловzip режимобработкиподкаталоговzip ' +\n  'режимсохраненияпутейzip уровеньсжатияzip ';\n\n  // v8 системные перечисления - \n  // Блокировка данных, Фоновые задания, Автоматизированное тестирование,\n  // Доставляемые уведомления, Встроенные покупки, Интернет, Работа с двоичными данными ==> class\n  var v8_system_enums_other =\n  'звуковоеоповещение направлениепереходакстроке позициявпотоке порядокбайтов режимблокировкиданных режимуправленияблокировкойданных ' +\n  'сервисвстроенныхпокупок состояниефоновогозадания типподписчикадоставляемыхуведомлений уровеньиспользованиязащищенногосоединенияftp ';\n\n  // v8 системные перечисления - схема запроса ==> class\n  var v8_system_enums_request_schema =\n  'направлениепорядкасхемызапроса типдополненияпериодамисхемызапроса типконтрольнойточкисхемызапроса типобъединениясхемызапроса ' +\n  'типпараметрадоступнойтаблицысхемызапроса типсоединениясхемызапроса ';\n\n  // v8 системные перечисления - свойства объектов метаданных ==> class\n  var v8_system_enums_properties_of_metadata_objects =\n  'httpметод автоиспользованиеобщегореквизита автопрефиксномеразадачи вариантвстроенногоязыка видиерархии видрегистранакопления ' +\n  'видтаблицывнешнегоисточникаданных записьдвиженийприпроведении заполнениепоследовательностей индексирование ' +\n  'использованиебазыпланавидоврасчета использованиебыстроговыбора использованиеобщегореквизита использованиеподчинения ' +\n  'использованиеполнотекстовогопоиска использованиеразделяемыхданныхобщегореквизита использованиереквизита ' +\n  'назначениеиспользованияприложения назначениерасширенияконфигурации направлениепередачи обновлениепредопределенныхданных ' +\n  'оперативноепроведение основноепредставлениевидарасчета основноепредставлениевидахарактеристики основноепредставлениезадачи ' +\n  'основноепредставлениепланаобмена основноепредставлениесправочника основноепредставлениесчета перемещениеграницыприпроведении ' +\n  'периодичностьномерабизнеспроцесса периодичностьномерадокумента периодичностьрегистрарасчета периодичностьрегистрасведений ' +\n  'повторноеиспользованиевозвращаемыхзначений полнотекстовыйпоискпривводепостроке принадлежностьобъекта проведение ' +\n  'разделениеаутентификацииобщегореквизита разделениеданныхобщегореквизита разделениерасширенийконфигурацииобщегореквизита '+\n  'режимавтонумерацииобъектов режимзаписирегистра режимиспользованиямодальности ' +\n  'режимиспользованиясинхронныхвызововрасширенийплатформыивнешнихкомпонент режимповторногоиспользованиясеансов ' +\n  'режимполученияданныхвыборапривводепостроке режимсовместимости режимсовместимостиинтерфейса ' +\n  'режимуправленияблокировкойданныхпоумолчанию сериикодовпланавидовхарактеристик сериикодовпланасчетов ' +\n  'сериикодовсправочника созданиепривводе способвыбора способпоискастрокипривводепостроке способредактирования ' +\n  'типданныхтаблицывнешнегоисточникаданных типкодапланавидоврасчета типкодасправочника типмакета типномерабизнеспроцесса ' +\n  'типномерадокумента типномеразадачи типформы удалениедвижений ';\n\n  // v8 системные перечисления - разные ==> class\n  var v8_system_enums_differents =\n  'важностьпроблемыприменениярасширенияконфигурации вариантинтерфейсаклиентскогоприложения вариантмасштабаформклиентскогоприложения ' +\n  'вариантосновногошрифтаклиентскогоприложения вариантстандартногопериода вариантстандартнойдатыначала видграницы видкартинки ' +\n  'видотображенияполнотекстовогопоиска видрамки видсравнения видцвета видчисловогозначения видшрифта допустимаядлина допустимыйзнак ' +\n  'использованиеbyteordermark использованиеметаданныхполнотекстовогопоиска источникрасширенийконфигурации клавиша кодвозвратадиалога ' +\n  'кодировкаxbase кодировкатекста направлениепоиска направлениесортировки обновлениепредопределенныхданных обновлениеприизмененииданных ' +\n  'отображениепанелиразделов проверказаполнения режимдиалогавопрос режимзапускаклиентскогоприложения режимокругления режимоткрытияформприложения ' +\n  'режимполнотекстовогопоиска скоростьклиентскогосоединения состояниевнешнегоисточникаданных состояниеобновленияконфигурациибазыданных ' +\n  'способвыборасертификатаwindows способкодированиястроки статуссообщения типвнешнейкомпоненты типплатформы типповеденияклавишиenter ' +\n  'типэлементаинформацииовыполненииобновленияконфигурациибазыданных уровеньизоляциитранзакций хешфункция частидаты';\n\n  // class: встроенные наборы значений, системные перечисления (содержат дочерние значения, обращения к которым через разыменование)\n  var CLASS =\n  v8_system_sets_of_values +\n  v8_system_enums_interface +\n  v8_system_enums_objects_properties +\n  v8_system_enums_exchange_plans +\n  v8_system_enums_tabular_document +\n  v8_system_enums_sheduler +\n  v8_system_enums_formatted_document +\n  v8_system_enums_query +\n  v8_system_enums_report_builder +\n  v8_system_enums_files +\n  v8_system_enums_query_builder +\n  v8_system_enums_data_analysis +\n  v8_system_enums_xml_json_xs_dom_xdto_ws +\n  v8_system_enums_data_composition_system +\n  v8_system_enums_email +\n  v8_system_enums_logbook +\n  v8_system_enums_cryptography +\n  v8_system_enums_zip +\n  v8_system_enums_other +\n  v8_system_enums_request_schema +\n  v8_system_enums_properties_of_metadata_objects +\n  v8_system_enums_differents;\n\n  // v8 общие объекты (у объектов есть конструктор, экземпляры создаются методом НОВЫЙ) ==> type\n  var v8_shared_object =\n  'comобъект ftpсоединение httpзапрос httpсервисответ httpсоединение wsопределения wsпрокси xbase анализданных аннотацияxs ' +\n  'блокировкаданных буфердвоичныхданных включениеxs выражениекомпоновкиданных генераторслучайныхчисел географическаясхема ' +\n  'географическиекоординаты графическаясхема группамоделиxs данныерасшифровкикомпоновкиданных двоичныеданные дендрограмма ' +\n  'диаграмма диаграммаганта диалогвыборафайла диалогвыборацвета диалогвыборашрифта диалограсписаниярегламентногозадания ' +\n  'диалогредактированиястандартногопериода диапазон документdom документhtml документацияxs доставляемоеуведомление ' +\n  'записьdom записьfastinfoset записьhtml записьjson записьxml записьzipфайла записьданных записьтекста записьузловdom ' +\n  'запрос защищенноесоединениеopenssl значенияполейрасшифровкикомпоновкиданных извлечениетекста импортxs интернетпочта ' +\n  'интернетпочтовоесообщение интернетпочтовыйпрофиль интернетпрокси интернетсоединение информациядляприложенияxs ' +\n  'использованиеатрибутаxs использованиесобытияжурналарегистрации источникдоступныхнастроеккомпоновкиданных ' +\n  'итераторузловdom картинка квалификаторыдаты квалификаторыдвоичныхданных квалификаторыстроки квалификаторычисла ' +\n  'компоновщикмакетакомпоновкиданных компоновщикнастроеккомпоновкиданных конструктормакетаоформлениякомпоновкиданных ' +\n  'конструкторнастроеккомпоновкиданных конструкторформатнойстроки линия макеткомпоновкиданных макетобластикомпоновкиданных ' +\n  'макетоформлениякомпоновкиданных маскаxs менеджеркриптографии наборсхемxml настройкикомпоновкиданных настройкисериализацииjson ' +\n  'обработкакартинок обработкарасшифровкикомпоновкиданных обходдереваdom объявлениеатрибутаxs объявлениенотацииxs ' +\n  'объявлениеэлементаxs описаниеиспользованиясобытиядоступжурналарегистрации ' +\n  'описаниеиспользованиясобытияотказвдоступежурналарегистрации описаниеобработкирасшифровкикомпоновкиданных ' +\n  'описаниепередаваемогофайла описаниетипов определениегруппыатрибутовxs определениегруппымоделиxs ' +\n  'определениеограниченияидентичностиxs определениепростоготипаxs определениесоставноготипаxs определениетипадокументаdom ' +\n  'определенияxpathxs отборкомпоновкиданных пакетотображаемыхдокументов параметрвыбора параметркомпоновкиданных ' +\n  'параметрызаписиjson параметрызаписиxml параметрычтенияxml переопределениеxs планировщик полеанализаданных ' +\n  'полекомпоновкиданных построительdom построительзапроса построительотчета построительотчетаанализаданных ' +\n  'построительсхемxml поток потоквпамяти почта почтовоесообщение преобразованиеxsl преобразованиекканоническомуxml ' +\n  'процессорвыводарезультатакомпоновкиданныхвколлекциюзначений процессорвыводарезультатакомпоновкиданныхвтабличныйдокумент ' +\n  'процессоркомпоновкиданных разыменовательпространствименdom рамка расписаниерегламентногозадания расширенноеимяxml ' +\n  'результатчтенияданных своднаядиаграмма связьпараметравыбора связьпотипу связьпотипукомпоновкиданных сериализаторxdto ' +\n  'сертификатклиентаwindows сертификатклиентафайл сертификаткриптографии сертификатыудостоверяющихцентровwindows ' +\n  'сертификатыудостоверяющихцентровфайл сжатиеданных системнаяинформация сообщениепользователю сочетаниеклавиш ' +\n  'сравнениезначений стандартнаядатаначала стандартныйпериод схемаxml схемакомпоновкиданных табличныйдокумент ' +\n  'текстовыйдокумент тестируемоеприложение типданныхxml уникальныйидентификатор фабрикаxdto файл файловыйпоток ' +\n  'фасетдлиныxs фасетколичестваразрядовдробнойчастиxs фасетмаксимальноговключающегозначенияxs ' +\n  'фасетмаксимальногоисключающегозначенияxs фасетмаксимальнойдлиныxs фасетминимальноговключающегозначенияxs ' +\n  'фасетминимальногоисключающегозначенияxs фасетминимальнойдлиныxs фасетобразцаxs фасетобщегоколичестваразрядовxs ' +\n  'фасетперечисленияxs фасетпробельныхсимволовxs фильтрузловdom форматированнаястрока форматированныйдокумент ' +\n  'фрагментxs хешированиеданных хранилищезначения цвет чтениеfastinfoset чтениеhtml чтениеjson чтениеxml чтениеzipфайла ' +\n  'чтениеданных чтениетекста чтениеузловdom шрифт элементрезультатакомпоновкиданных ';\n\n  // v8 универсальные коллекции значений ==> type\n  var v8_universal_collection =\n  'comsafearray деревозначений массив соответствие списокзначений структура таблицазначений фиксированнаяструктура ' +\n  'фиксированноесоответствие фиксированныймассив ';\n\n  // type : встроенные типы\n  var TYPE =\n  v8_shared_object +\n  v8_universal_collection;\n\n  // literal : примитивные типы\n  var LITERAL = 'null истина ложь неопределено';\n  \n  // number : числа\n  var NUMBERS = hljs.inherit(hljs.NUMBER_MODE);\n\n  // string : строки\n  var STRINGS = {\n    className: 'string',\n    begin: '\"|\\\\|', end: '\"|$',\n    contains: [{begin: '\"\"'}]\n  };\n\n  // number : даты\n  var DATE = {\n    begin: \"'\", end: \"'\", excludeBegin: true, excludeEnd: true,\n    contains: [\n      {\n        className: 'number',\n        begin: '\\\\d{4}([\\\\.\\\\\\\\/:-]?\\\\d{2}){0,5}'\n      }\n    ]\n  };\n  \n  // comment : комментарии\n  var COMMENTS = hljs.inherit(hljs.C_LINE_COMMENT_MODE);\n  \n  // meta : инструкции препроцессора, директивы компиляции\n  var META = {\n    className: 'meta',\n    lexemes: UNDERSCORE_IDENT_RE,\n    begin: '#|&', end: '$',\n    keywords: {'meta-keyword': KEYWORD + METAKEYWORD},\n    contains: [\n      COMMENTS\n    ]\n  };\n  \n  // symbol : метка goto\n  var SYMBOL = {\n    className: 'symbol',\n    begin: '~', end: ';|:', excludeEnd: true\n  };  \n  \n  // function : объявление процедур и функций\n  var FUNCTION = {\n    className: 'function',\n    lexemes: UNDERSCORE_IDENT_RE,\n    variants: [\n      {begin: 'процедура|функция', end: '\\\\)', keywords: 'процедура функция'},\n      {begin: 'конецпроцедуры|конецфункции', keywords: 'конецпроцедуры конецфункции'}\n    ],\n    contains: [\n      {\n        begin: '\\\\(', end: '\\\\)', endsParent : true,\n        contains: [\n          {\n            className: 'params',\n            lexemes: UNDERSCORE_IDENT_RE,\n            begin: UNDERSCORE_IDENT_RE, end: ',', excludeEnd: true, endsWithParent: true,\n            keywords: {\n              keyword: 'знач',\n              literal: LITERAL\n            },\n            contains: [\n              NUMBERS,\n              STRINGS,\n              DATE\n            ]\n          },\n          COMMENTS\n        ]\n      },\n      hljs.inherit(hljs.TITLE_MODE, {begin: UNDERSCORE_IDENT_RE})\n    ]\n  };\n\n  return {\n    case_insensitive: true,\n    lexemes: UNDERSCORE_IDENT_RE,\n    keywords: {\n      keyword: KEYWORD,\n      built_in: BUILTIN,\n      class: CLASS,\n      type: TYPE,\n      literal: LITERAL\n    },\n    contains: [\n      META,\n      FUNCTION,\n      COMMENTS,\n      SYMBOL,\n      NUMBERS,\n      STRINGS,\n      DATE\n    ]  \n  }\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/1c.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/abnf.js":
/*!*********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/abnf.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n    var regexes = {\n        ruleDeclaration: \"^[a-zA-Z][a-zA-Z0-9-]*\",\n        unexpectedChars: \"[!@#$^&',?+~`|:]\"\n    };\n\n    var keywords = [\n        \"ALPHA\",\n        \"BIT\",\n        \"CHAR\",\n        \"CR\",\n        \"CRLF\",\n        \"CTL\",\n        \"DIGIT\",\n        \"DQUOTE\",\n        \"HEXDIG\",\n        \"HTAB\",\n        \"LF\",\n        \"LWSP\",\n        \"OCTET\",\n        \"SP\",\n        \"VCHAR\",\n        \"WSP\"\n    ];\n\n    var commentMode = hljs.COMMENT(\";\", \"$\");\n\n    var terminalBinaryMode = {\n        className: \"symbol\",\n        begin: /%b[0-1]+(-[0-1]+|(\\.[0-1]+)+){0,1}/\n    };\n\n    var terminalDecimalMode = {\n        className: \"symbol\",\n        begin: /%d[0-9]+(-[0-9]+|(\\.[0-9]+)+){0,1}/\n    };\n\n    var terminalHexadecimalMode = {\n        className: \"symbol\",\n        begin: /%x[0-9A-F]+(-[0-9A-F]+|(\\.[0-9A-F]+)+){0,1}/,\n    };\n\n    var caseSensitivityIndicatorMode = {\n        className: \"symbol\",\n        begin: /%[si]/\n    };\n\n    var ruleDeclarationMode = {\n        begin: regexes.ruleDeclaration + '\\\\s*=',\n        returnBegin: true,\n        end: /=/,\n        relevance: 0,\n        contains: [{className: \"attribute\", begin: regexes.ruleDeclaration}]\n    };\n\n    return {\n      illegal: regexes.unexpectedChars,\n      keywords: keywords.join(\" \"),\n      contains: [\n          ruleDeclarationMode,\n          commentMode,\n          terminalBinaryMode,\n          terminalDecimalMode,\n          terminalHexadecimalMode,\n          caseSensitivityIndicatorMode,\n          hljs.QUOTE_STRING_MODE,\n          hljs.NUMBER_MODE\n      ]\n    };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/abnf.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/accesslog.js":
/*!**************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/accesslog.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  return {\n    contains: [\n      // IP\n      {\n        className: 'number',\n        begin: '\\\\b\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}(:\\\\d{1,5})?\\\\b'\n      },\n      // Other numbers\n      {\n        className: 'number',\n        begin: '\\\\b\\\\d+\\\\b',\n        relevance: 0\n      },\n      // Requests\n      {\n        className: 'string',\n        begin: '\"(GET|POST|HEAD|PUT|DELETE|CONNECT|OPTIONS|PATCH|TRACE)', end: '\"',\n        keywords: 'GET POST HEAD PUT DELETE CONNECT OPTIONS PATCH TRACE',\n        illegal: '\\\\n',\n        relevance: 10\n      },\n      // Dates\n      {\n        className: 'string',\n        begin: /\\[/, end: /\\]/,\n        illegal: '\\\\n'\n      },\n      // Strings\n      {\n        className: 'string',\n        begin: '\"', end: '\"',\n        illegal: '\\\\n'\n      }\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/accesslog.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/actionscript.js":
/*!*****************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/actionscript.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var IDENT_RE = '[a-zA-Z_$][a-zA-Z0-9_$]*';\n  var IDENT_FUNC_RETURN_TYPE_RE = '([*]|[a-zA-Z_$][a-zA-Z0-9_$]*)';\n\n  var AS3_REST_ARG_MODE = {\n    className: 'rest_arg',\n    begin: '[.]{3}', end: IDENT_RE,\n    relevance: 10\n  };\n\n  return {\n    aliases: ['as'],\n    keywords: {\n      keyword: 'as break case catch class const continue default delete do dynamic each ' +\n        'else extends final finally for function get if implements import in include ' +\n        'instanceof interface internal is namespace native new override package private ' +\n        'protected public return set static super switch this throw try typeof use var void ' +\n        'while with',\n      literal: 'true false null undefined'\n    },\n    contains: [\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.C_NUMBER_MODE,\n      {\n        className: 'class',\n        beginKeywords: 'package', end: '{',\n        contains: [hljs.TITLE_MODE]\n      },\n      {\n        className: 'class',\n        beginKeywords: 'class interface', end: '{', excludeEnd: true,\n        contains: [\n          {\n            beginKeywords: 'extends implements'\n          },\n          hljs.TITLE_MODE\n        ]\n      },\n      {\n        className: 'meta',\n        beginKeywords: 'import include', end: ';',\n        keywords: {'meta-keyword': 'import include'}\n      },\n      {\n        className: 'function',\n        beginKeywords: 'function', end: '[{;]', excludeEnd: true,\n        illegal: '\\\\S',\n        contains: [\n          hljs.TITLE_MODE,\n          {\n            className: 'params',\n            begin: '\\\\(', end: '\\\\)',\n            contains: [\n              hljs.APOS_STRING_MODE,\n              hljs.QUOTE_STRING_MODE,\n              hljs.C_LINE_COMMENT_MODE,\n              hljs.C_BLOCK_COMMENT_MODE,\n              AS3_REST_ARG_MODE\n            ]\n          },\n          {\n            begin: ':\\\\s*' + IDENT_FUNC_RETURN_TYPE_RE\n          }\n        ]\n      },\n      hljs.METHOD_GUARD\n    ],\n    illegal: /#/\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/actionscript.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/ada.js":
/*!********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/ada.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = // We try to support full Ada2012\n//\n// We highlight all appearances of types, keywords, literals (string, char, number, bool)\n// and titles (user defined function/procedure/package)\n// CSS classes are set accordingly\n//\n// Languages causing problems for language detection:\n// xml (broken by Foo : Bar type), elm (broken by Foo : Bar type), vbscript-html (broken by body keyword)\n// sql (ada default.txt has a lot of sql keywords)\n\nfunction(hljs) {\n    // Regular expression for Ada numeric literals.\n    // stolen form the VHDL highlighter\n\n    // Decimal literal:\n    var INTEGER_RE = '\\\\d(_|\\\\d)*';\n    var EXPONENT_RE = '[eE][-+]?' + INTEGER_RE;\n    var DECIMAL_LITERAL_RE = INTEGER_RE + '(\\\\.' + INTEGER_RE + ')?' + '(' + EXPONENT_RE + ')?';\n\n    // Based literal:\n    var BASED_INTEGER_RE = '\\\\w+';\n    var BASED_LITERAL_RE = INTEGER_RE + '#' + BASED_INTEGER_RE + '(\\\\.' + BASED_INTEGER_RE + ')?' + '#' + '(' + EXPONENT_RE + ')?';\n\n    var NUMBER_RE = '\\\\b(' + BASED_LITERAL_RE + '|' + DECIMAL_LITERAL_RE + ')';\n\n    // Identifier regex\n    var ID_REGEX = '[A-Za-z](_?[A-Za-z0-9.])*';\n\n    // bad chars, only allowed in literals\n    var BAD_CHARS = '[]{}%#\\'\\\"'\n\n    // Ada doesn't have block comments, only line comments\n    var COMMENTS = hljs.COMMENT('--', '$');\n\n    // variable declarations of the form\n    // Foo : Bar := Baz;\n    // where only Bar will be highlighted\n    var VAR_DECLS = {\n        // TODO: These spaces are not required by the Ada syntax\n        // however, I have yet to see handwritten Ada code where\n        // someone does not put spaces around :\n        begin: '\\\\s+:\\\\s+', end: '\\\\s*(:=|;|\\\\)|=>|$)',\n        // endsWithParent: true,\n        // returnBegin: true,\n        illegal: BAD_CHARS,\n        contains: [\n            {\n                // workaround to avoid highlighting\n                // named loops and declare blocks\n                beginKeywords: 'loop for declare others',\n                endsParent: true,\n            },\n            {\n                // properly highlight all modifiers\n                className: 'keyword',\n                beginKeywords: 'not null constant access function procedure in out aliased exception'\n            },\n            {\n                className: 'type',\n                begin: ID_REGEX,\n                endsParent: true,\n                relevance: 0,\n            }\n        ]\n    };\n\n    return {\n        case_insensitive: true,\n        keywords: {\n            keyword:\n                'abort else new return abs elsif not reverse abstract end ' +\n                'accept entry select access exception of separate aliased exit or some ' +\n                'all others subtype and for out synchronized array function overriding ' +\n                'at tagged generic package task begin goto pragma terminate ' +\n                'body private then if procedure type case in protected constant interface ' +\n                'is raise use declare range delay limited record when delta loop rem while ' +\n                'digits renames with do mod requeue xor',\n            literal:\n                'True False',\n        },\n        contains: [\n            COMMENTS,\n            // strings \"foobar\"\n            {\n                className: 'string',\n                begin: /\"/, end: /\"/,\n                contains: [{begin: /\"\"/, relevance: 0}]\n            },\n            // characters ''\n            {\n                // character literals always contain one char\n                className: 'string',\n                begin: /'.'/\n            },\n            {\n                // number literals\n                className: 'number',\n                begin: NUMBER_RE,\n                relevance: 0\n            },\n            {\n                // Attributes\n                className: 'symbol',\n                begin: \"'\" + ID_REGEX,\n            },\n            {\n                // package definition, maybe inside generic\n                className: 'title',\n                begin: '(\\\\bwith\\\\s+)?(\\\\bprivate\\\\s+)?\\\\bpackage\\\\s+(\\\\bbody\\\\s+)?', end: '(is|$)',\n                keywords: 'package body',\n                excludeBegin: true,\n                excludeEnd: true,\n                illegal: BAD_CHARS\n            },\n            {\n                // function/procedure declaration/definition\n                // maybe inside generic\n                begin: '(\\\\b(with|overriding)\\\\s+)?\\\\b(function|procedure)\\\\s+', end: '(\\\\bis|\\\\bwith|\\\\brenames|\\\\)\\\\s*;)',\n                keywords: 'overriding function procedure with is renames return',\n                // we need to re-match the 'function' keyword, so that\n                // the title mode below matches only exactly once\n                returnBegin: true,\n                contains:\n                [\n                    COMMENTS,\n                    {\n                        // name of the function/procedure\n                        className: 'title',\n                        begin: '(\\\\bwith\\\\s+)?\\\\b(function|procedure)\\\\s+',\n                        end: '(\\\\(|\\\\s+|$)',\n                        excludeBegin: true,\n                        excludeEnd: true,\n                        illegal: BAD_CHARS\n                    },\n                    // 'self'\n                    // // parameter types\n                    VAR_DECLS,\n                    {\n                        // return type\n                        className: 'type',\n                        begin: '\\\\breturn\\\\s+', end: '(\\\\s+|;|$)',\n                        keywords: 'return',\n                        excludeBegin: true,\n                        excludeEnd: true,\n                        // we are done with functions\n                        endsParent: true,\n                        illegal: BAD_CHARS\n\n                    },\n                ]\n            },\n            {\n                // new type declarations\n                // maybe inside generic\n                className: 'type',\n                begin: '\\\\b(sub)?type\\\\s+', end: '\\\\s+',\n                keywords: 'type',\n                excludeBegin: true,\n                illegal: BAD_CHARS\n            },\n\n            // see comment above the definition\n            VAR_DECLS,\n\n            // no markup\n            // relevance boosters for small snippets\n            // {begin: '\\\\s*=>\\\\s*'},\n            // {begin: '\\\\s*:=\\\\s*'},\n            // {begin: '\\\\s+:=\\\\s+'},\n        ]\n    };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/ada.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/apache.js":
/*!***********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/apache.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var NUMBER = {className: 'number', begin: '[\\\\$%]\\\\d+'};\n  return {\n    aliases: ['apacheconf'],\n    case_insensitive: true,\n    contains: [\n      hljs.HASH_COMMENT_MODE,\n      {className: 'section', begin: '</?', end: '>'},\n      {\n        className: 'attribute',\n        begin: /\\w+/,\n        relevance: 0,\n        // keywords aren’t needed for highlighting per se, they only boost relevance\n        // for a very generally defined mode (starts with a word, ends with line-end\n        keywords: {\n          nomarkup:\n            'order deny allow setenv rewriterule rewriteengine rewritecond documentroot ' +\n            'sethandler errordocument loadmodule options header listen serverroot ' +\n            'servername'\n        },\n        starts: {\n          end: /$/,\n          relevance: 0,\n          keywords: {\n            literal: 'on off all'\n          },\n          contains: [\n            {\n              className: 'meta',\n              begin: '\\\\s\\\\[', end: '\\\\]$'\n            },\n            {\n              className: 'variable',\n              begin: '[\\\\$%]\\\\{', end: '\\\\}',\n              contains: ['self', NUMBER]\n            },\n            NUMBER,\n            hljs.QUOTE_STRING_MODE\n          ]\n        }\n      }\n    ],\n    illegal: /\\S/\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/apache.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/applescript.js":
/*!****************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/applescript.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var STRING = hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: ''});\n  var PARAMS = {\n    className: 'params',\n    begin: '\\\\(', end: '\\\\)',\n    contains: ['self', hljs.C_NUMBER_MODE, STRING]\n  };\n  var COMMENT_MODE_1 = hljs.COMMENT('--', '$');\n  var COMMENT_MODE_2 = hljs.COMMENT(\n    '\\\\(\\\\*',\n    '\\\\*\\\\)',\n    {\n      contains: ['self', COMMENT_MODE_1] //allow nesting\n    }\n  );\n  var COMMENTS = [\n    COMMENT_MODE_1,\n    COMMENT_MODE_2,\n    hljs.HASH_COMMENT_MODE\n  ];\n\n  return {\n    aliases: ['osascript'],\n    keywords: {\n      keyword:\n        'about above after against and around as at back before beginning ' +\n        'behind below beneath beside between but by considering ' +\n        'contain contains continue copy div does eighth else end equal ' +\n        'equals error every exit fifth first for fourth from front ' +\n        'get given global if ignoring in into is it its last local me ' +\n        'middle mod my ninth not of on onto or over prop property put ref ' +\n        'reference repeat returning script second set seventh since ' +\n        'sixth some tell tenth that the|0 then third through thru ' +\n        'timeout times to transaction try until where while whose with ' +\n        'without',\n      literal:\n        'AppleScript false linefeed return pi quote result space tab true',\n      built_in:\n        'alias application boolean class constant date file integer list ' +\n        'number real record string text ' +\n        'activate beep count delay launch log offset read round ' +\n        'run say summarize write ' +\n        'character characters contents day frontmost id item length ' +\n        'month name paragraph paragraphs rest reverse running time version ' +\n        'weekday word words year'\n    },\n    contains: [\n      STRING,\n      hljs.C_NUMBER_MODE,\n      {\n        className: 'built_in',\n        begin:\n          '\\\\b(clipboard info|the clipboard|info for|list (disks|folder)|' +\n          'mount volume|path to|(close|open for) access|(get|set) eof|' +\n          'current date|do shell script|get volume settings|random number|' +\n          'set volume|system attribute|system info|time to GMT|' +\n          '(load|run|store) script|scripting components|' +\n          'ASCII (character|number)|localized string|' +\n          'choose (application|color|file|file name|' +\n          'folder|from list|remote application|URL)|' +\n          'display (alert|dialog))\\\\b|^\\\\s*return\\\\b'\n      },\n      {\n        className: 'literal',\n        begin:\n          '\\\\b(text item delimiters|current application|missing value)\\\\b'\n      },\n      {\n        className: 'keyword',\n        begin:\n          '\\\\b(apart from|aside from|instead of|out of|greater than|' +\n          \"isn't|(doesn't|does not) (equal|come before|come after|contain)|\" +\n          '(greater|less) than( or equal)?|(starts?|ends|begins?) with|' +\n          'contained by|comes (before|after)|a (ref|reference)|POSIX file|' +\n          'POSIX path|(date|time) string|quoted form)\\\\b'\n      },\n      {\n        beginKeywords: 'on',\n        illegal: '[${=;\\\\n]',\n        contains: [hljs.UNDERSCORE_TITLE_MODE, PARAMS]\n      }\n    ].concat(COMMENTS),\n    illegal: '//|->|=>|\\\\[\\\\['\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/applescript.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/arduino.js":
/*!************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/arduino.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var CPP = hljs.getLanguage('cpp').exports;\n\treturn {\n    keywords: {\n      keyword:\n        'boolean byte word string String array ' + CPP.keywords.keyword,\n      built_in:\n        'setup loop while catch for if do goto try switch case else ' +\n        'default break continue return ' +\n        'KeyboardController MouseController SoftwareSerial ' +\n        'EthernetServer EthernetClient LiquidCrystal ' +\n        'RobotControl GSMVoiceCall EthernetUDP EsploraTFT ' +\n        'HttpClient RobotMotor WiFiClient GSMScanner ' +\n        'FileSystem Scheduler GSMServer YunClient YunServer ' +\n        'IPAddress GSMClient GSMModem Keyboard Ethernet ' +\n        'Console GSMBand Esplora Stepper Process ' +\n        'WiFiUDP GSM_SMS Mailbox USBHost Firmata PImage ' +\n        'Client Server GSMPIN FileIO Bridge Serial ' +\n        'EEPROM Stream Mouse Audio Servo File Task ' +\n        'GPRS WiFi Wire TFT GSM SPI SD ' +\n        'runShellCommandAsynchronously analogWriteResolution ' +\n        'retrieveCallingNumber printFirmwareVersion ' +\n        'analogReadResolution sendDigitalPortPair ' +\n        'noListenOnLocalhost readJoystickButton setFirmwareVersion ' +\n        'readJoystickSwitch scrollDisplayRight getVoiceCallStatus ' +\n        'scrollDisplayLeft writeMicroseconds delayMicroseconds ' +\n        'beginTransmission getSignalStrength runAsynchronously ' +\n        'getAsynchronously listenOnLocalhost getCurrentCarrier ' +\n        'readAccelerometer messageAvailable sendDigitalPorts ' +\n        'lineFollowConfig countryNameWrite runShellCommand ' +\n        'readStringUntil rewindDirectory readTemperature ' +\n        'setClockDivider readLightSensor endTransmission ' +\n        'analogReference detachInterrupt countryNameRead ' +\n        'attachInterrupt encryptionType readBytesUntil ' +\n        'robotNameWrite readMicrophone robotNameRead cityNameWrite ' +\n        'userNameWrite readJoystickY readJoystickX mouseReleased ' +\n        'openNextFile scanNetworks noInterrupts digitalWrite ' +\n        'beginSpeaker mousePressed isActionDone mouseDragged ' +\n        'displayLogos noAutoscroll addParameter remoteNumber ' +\n        'getModifiers keyboardRead userNameRead waitContinue ' +\n        'processInput parseCommand printVersion readNetworks ' +\n        'writeMessage blinkVersion cityNameRead readMessage ' +\n        'setDataMode parsePacket isListening setBitOrder ' +\n        'beginPacket isDirectory motorsWrite drawCompass ' +\n        'digitalRead clearScreen serialEvent rightToLeft ' +\n        'setTextSize leftToRight requestFrom keyReleased ' +\n        'compassRead analogWrite interrupts WiFiServer ' +\n        'disconnect playMelody parseFloat autoscroll ' +\n        'getPINUsed setPINUsed setTimeout sendAnalog ' +\n        'readSlider analogRead beginWrite createChar ' +\n        'motorsStop keyPressed tempoWrite readButton ' +\n        'subnetMask debugPrint macAddress writeGreen ' +\n        'randomSeed attachGPRS readString sendString ' +\n        'remotePort releaseAll mouseMoved background ' +\n        'getXChange getYChange answerCall getResult ' +\n        'voiceCall endPacket constrain getSocket writeJSON ' +\n        'getButton available connected findUntil readBytes ' +\n        'exitValue readGreen writeBlue startLoop IPAddress ' +\n        'isPressed sendSysex pauseMode gatewayIP setCursor ' +\n        'getOemKey tuneWrite noDisplay loadImage switchPIN ' +\n        'onRequest onReceive changePIN playFile noBuffer ' +\n        'parseInt overflow checkPIN knobRead beginTFT ' +\n        'bitClear updateIR bitWrite position writeRGB ' +\n        'highByte writeRed setSpeed readBlue noStroke ' +\n        'remoteIP transfer shutdown hangCall beginSMS ' +\n        'endWrite attached maintain noCursor checkReg ' +\n        'checkPUK shiftOut isValid shiftIn pulseIn ' +\n        'connect println localIP pinMode getIMEI ' +\n        'display noBlink process getBand running beginSD ' +\n        'drawBMP lowByte setBand release bitRead prepare ' +\n        'pointTo readRed setMode noFill remove listen ' +\n        'stroke detach attach noTone exists buffer ' +\n        'height bitSet circle config cursor random ' +\n        'IRread setDNS endSMS getKey micros ' +\n        'millis begin print write ready flush width ' +\n        'isPIN blink clear press mkdir rmdir close ' +\n        'point yield image BSSID click delay ' +\n        'read text move peek beep rect line open ' +\n        'seek fill size turn stop home find ' +\n        'step tone sqrt RSSI SSID ' +\n        'end bit tan cos sin pow map abs max ' +\n        'min get run put',\n      literal:\n        'DIGITAL_MESSAGE FIRMATA_STRING ANALOG_MESSAGE ' +\n        'REPORT_DIGITAL REPORT_ANALOG INPUT_PULLUP ' +\n        'SET_PIN_MODE INTERNAL2V56 SYSTEM_RESET LED_BUILTIN ' +\n        'INTERNAL1V1 SYSEX_START INTERNAL EXTERNAL ' +\n        'DEFAULT OUTPUT INPUT HIGH LOW'\n    },\n    contains: [\n      CPP.preprocessor,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_NUMBER_MODE\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/arduino.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/armasm.js":
/*!***********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/armasm.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n    //local labels: %?[FB]?[AT]?\\d{1,2}\\w+\n  return {\n    case_insensitive: true,\n    aliases: ['arm'],\n    lexemes: '\\\\.?' + hljs.IDENT_RE,\n    keywords: {\n      meta:\n        //GNU preprocs\n        '.2byte .4byte .align .ascii .asciz .balign .byte .code .data .else .end .endif .endm .endr .equ .err .exitm .extern .global .hword .if .ifdef .ifndef .include .irp .long .macro .rept .req .section .set .skip .space .text .word .arm .thumb .code16 .code32 .force_thumb .thumb_func .ltorg '+\n        //ARM directives\n        'ALIAS ALIGN ARM AREA ASSERT ATTR CN CODE CODE16 CODE32 COMMON CP DATA DCB DCD DCDU DCDO DCFD DCFDU DCI DCQ DCQU DCW DCWU DN ELIF ELSE END ENDFUNC ENDIF ENDP ENTRY EQU EXPORT EXPORTAS EXTERN FIELD FILL FUNCTION GBLA GBLL GBLS GET GLOBAL IF IMPORT INCBIN INCLUDE INFO KEEP LCLA LCLL LCLS LTORG MACRO MAP MEND MEXIT NOFP OPT PRESERVE8 PROC QN READONLY RELOC REQUIRE REQUIRE8 RLIST FN ROUT SETA SETL SETS SN SPACE SUBT THUMB THUMBX TTL WHILE WEND ',\n      built_in:\n        'r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 '+ //standard registers\n        'pc lr sp ip sl sb fp '+ //typical regs plus backward compatibility\n        'a1 a2 a3 a4 v1 v2 v3 v4 v5 v6 v7 v8 f0 f1 f2 f3 f4 f5 f6 f7 '+ //more regs and fp\n        'p0 p1 p2 p3 p4 p5 p6 p7 p8 p9 p10 p11 p12 p13 p14 p15 '+ //coprocessor regs\n        'c0 c1 c2 c3 c4 c5 c6 c7 c8 c9 c10 c11 c12 c13 c14 c15 '+ //more coproc\n        'q0 q1 q2 q3 q4 q5 q6 q7 q8 q9 q10 q11 q12 q13 q14 q15 '+ //advanced SIMD NEON regs\n\n        //program status registers\n        'cpsr_c cpsr_x cpsr_s cpsr_f cpsr_cx cpsr_cxs cpsr_xs cpsr_xsf cpsr_sf cpsr_cxsf '+\n        'spsr_c spsr_x spsr_s spsr_f spsr_cx spsr_cxs spsr_xs spsr_xsf spsr_sf spsr_cxsf '+\n\n        //NEON and VFP registers\n        's0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 '+\n        's16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 '+\n        'd0 d1 d2 d3 d4 d5 d6 d7 d8 d9 d10 d11 d12 d13 d14 d15 '+\n        'd16 d17 d18 d19 d20 d21 d22 d23 d24 d25 d26 d27 d28 d29 d30 d31 ' +\n\n        '{PC} {VAR} {TRUE} {FALSE} {OPT} {CONFIG} {ENDIAN} {CODESIZE} {CPU} {FPU} {ARCHITECTURE} {PCSTOREOFFSET} {ARMASM_VERSION} {INTER} {ROPI} {RWPI} {SWST} {NOSWST} . @'\n    },\n    contains: [\n      {\n        className: 'keyword',\n        begin: '\\\\b('+     //mnemonics\n            'adc|'+\n            '(qd?|sh?|u[qh]?)?add(8|16)?|usada?8|(q|sh?|u[qh]?)?(as|sa)x|'+\n            'and|adrl?|sbc|rs[bc]|asr|b[lx]?|blx|bxj|cbn?z|tb[bh]|bic|'+\n            'bfc|bfi|[su]bfx|bkpt|cdp2?|clz|clrex|cmp|cmn|cpsi[ed]|cps|'+\n            'setend|dbg|dmb|dsb|eor|isb|it[te]{0,3}|lsl|lsr|ror|rrx|'+\n            'ldm(([id][ab])|f[ds])?|ldr((s|ex)?[bhd])?|movt?|mvn|mra|mar|'+\n            'mul|[us]mull|smul[bwt][bt]|smu[as]d|smmul|smmla|'+\n            'mla|umlaal|smlal?([wbt][bt]|d)|mls|smlsl?[ds]|smc|svc|sev|'+\n            'mia([bt]{2}|ph)?|mrr?c2?|mcrr2?|mrs|msr|orr|orn|pkh(tb|bt)|rbit|'+\n            'rev(16|sh)?|sel|[su]sat(16)?|nop|pop|push|rfe([id][ab])?|'+\n            'stm([id][ab])?|str(ex)?[bhd]?|(qd?)?sub|(sh?|q|u[qh]?)?sub(8|16)|'+\n            '[su]xt(a?h|a?b(16)?)|srs([id][ab])?|swpb?|swi|smi|tst|teq|'+\n            'wfe|wfi|yield'+\n        ')'+\n        '(eq|ne|cs|cc|mi|pl|vs|vc|hi|ls|ge|lt|gt|le|al|hs|lo)?'+ //condition codes\n        '[sptrx]?' ,                                             //legal postfixes\n        end: '\\\\s'\n      },\n      hljs.COMMENT('[;@]', '$', {relevance: 0}),\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.QUOTE_STRING_MODE,\n      {\n        className: 'string',\n        begin: '\\'',\n        end: '[^\\\\\\\\]\\'',\n        relevance: 0\n      },\n      {\n        className: 'title',\n        begin: '\\\\|', end: '\\\\|',\n        illegal: '\\\\n',\n        relevance: 0\n      },\n      {\n        className: 'number',\n        variants: [\n            {begin: '[#$=]?0x[0-9a-f]+'}, //hex\n            {begin: '[#$=]?0b[01]+'},     //bin\n            {begin: '[#$=]\\\\d+'},        //literal\n            {begin: '\\\\b\\\\d+'}           //bare number\n        ],\n        relevance: 0\n      },\n      {\n        className: 'symbol',\n        variants: [\n            {begin: '^[a-z_\\\\.\\\\$][a-z0-9_\\\\.\\\\$]+'}, //ARM syntax\n            {begin: '^\\\\s*[a-z_\\\\.\\\\$][a-z0-9_\\\\.\\\\$]+:'}, //GNU ARM syntax\n            {begin: '[=#]\\\\w+' }  //label reference\n        ],\n        relevance: 0\n      }\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/armasm.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/asciidoc.js":
/*!*************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/asciidoc.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  return {\n    aliases: ['adoc'],\n    contains: [\n      // block comment\n      hljs.COMMENT(\n        '^/{4,}\\\\n',\n        '\\\\n/{4,}$',\n        // can also be done as...\n        //'^/{4,}$',\n        //'^/{4,}$',\n        {\n          relevance: 10\n        }\n      ),\n      // line comment\n      hljs.COMMENT(\n        '^//',\n        '$',\n        {\n          relevance: 0\n        }\n      ),\n      // title\n      {\n        className: 'title',\n        begin: '^\\\\.\\\\w.*$'\n      },\n      // example, admonition & sidebar blocks\n      {\n        begin: '^[=\\\\*]{4,}\\\\n',\n        end: '\\\\n^[=\\\\*]{4,}$',\n        relevance: 10\n      },\n      // headings\n      {\n        className: 'section',\n        relevance: 10,\n        variants: [\n          {begin: '^(={1,5}) .+?( \\\\1)?$'},\n          {begin: '^[^\\\\[\\\\]\\\\n]+?\\\\n[=\\\\-~\\\\^\\\\+]{2,}$'},\n        ]\n      },\n      // document attributes\n      {\n        className: 'meta',\n        begin: '^:.+?:',\n        end: '\\\\s',\n        excludeEnd: true,\n        relevance: 10\n      },\n      // block attributes\n      {\n        className: 'meta',\n        begin: '^\\\\[.+?\\\\]$',\n        relevance: 0\n      },\n      // quoteblocks\n      {\n        className: 'quote',\n        begin: '^_{4,}\\\\n',\n        end: '\\\\n_{4,}$',\n        relevance: 10\n      },\n      // listing and literal blocks\n      {\n        className: 'code',\n        begin: '^[\\\\-\\\\.]{4,}\\\\n',\n        end: '\\\\n[\\\\-\\\\.]{4,}$',\n        relevance: 10\n      },\n      // passthrough blocks\n      {\n        begin: '^\\\\+{4,}\\\\n',\n        end: '\\\\n\\\\+{4,}$',\n        contains: [\n          {\n            begin: '<', end: '>',\n            subLanguage: 'xml',\n            relevance: 0\n          }\n        ],\n        relevance: 10\n      },\n      // lists (can only capture indicators)\n      {\n        className: 'bullet',\n        begin: '^(\\\\*+|\\\\-+|\\\\.+|[^\\\\n]+?::)\\\\s+'\n      },\n      // admonition\n      {\n        className: 'symbol',\n        begin: '^(NOTE|TIP|IMPORTANT|WARNING|CAUTION):\\\\s+',\n        relevance: 10\n      },\n      // inline strong\n      {\n        className: 'strong',\n        // must not follow a word character or be followed by an asterisk or space\n        begin: '\\\\B\\\\*(?![\\\\*\\\\s])',\n        end: '(\\\\n{2}|\\\\*)',\n        // allow escaped asterisk followed by word char\n        contains: [\n          {\n            begin: '\\\\\\\\*\\\\w',\n            relevance: 0\n          }\n        ]\n      },\n      // inline emphasis\n      {\n        className: 'emphasis',\n        // must not follow a word character or be followed by a single quote or space\n        begin: '\\\\B\\'(?![\\'\\\\s])',\n        end: '(\\\\n{2}|\\')',\n        // allow escaped single quote followed by word char\n        contains: [\n          {\n            begin: '\\\\\\\\\\'\\\\w',\n            relevance: 0\n          }\n        ],\n        relevance: 0\n      },\n      // inline emphasis (alt)\n      {\n        className: 'emphasis',\n        // must not follow a word character or be followed by an underline or space\n        begin: '_(?![_\\\\s])',\n        end: '(\\\\n{2}|_)',\n        relevance: 0\n      },\n      // inline smart quotes\n      {\n        className: 'string',\n        variants: [\n          {begin: \"``.+?''\"},\n          {begin: \"`.+?'\"}\n        ]\n      },\n      // inline code snippets (TODO should get same treatment as strong and emphasis)\n      {\n        className: 'code',\n        begin: '(`.+?`|\\\\+.+?\\\\+)',\n        relevance: 0\n      },\n      // indented literal block\n      {\n        className: 'code',\n        begin: '^[ \\\\t]',\n        end: '$',\n        relevance: 0\n      },\n      // horizontal rules\n      {\n        begin: '^\\'{3,}[ \\\\t]*$',\n        relevance: 10\n      },\n      // images and links\n      {\n        begin: '(link:)?(http|https|ftp|file|irc|image:?):\\\\S+\\\\[.*?\\\\]',\n        returnBegin: true,\n        contains: [\n          {\n            begin: '(link|image:?):',\n            relevance: 0\n          },\n          {\n            className: 'link',\n            begin: '\\\\w',\n            end: '[^\\\\[]+',\n            relevance: 0\n          },\n          {\n            className: 'string',\n            begin: '\\\\[',\n            end: '\\\\]',\n            excludeBegin: true,\n            excludeEnd: true,\n            relevance: 0\n          }\n        ],\n        relevance: 10\n      }\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/asciidoc.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/aspectj.js":
/*!************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/aspectj.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function (hljs) {\n  var KEYWORDS =\n    'false synchronized int abstract float private char boolean static null if const ' +\n    'for true while long throw strictfp finally protected import native final return void ' +\n    'enum else extends implements break transient new catch instanceof byte super volatile case ' +\n    'assert short package default double public try this switch continue throws privileged ' +\n    'aspectOf adviceexecution proceed cflowbelow cflow initialization preinitialization ' +\n    'staticinitialization withincode target within execution getWithinTypeName handler ' +\n    'thisJoinPoint thisJoinPointStaticPart thisEnclosingJoinPointStaticPart declare parents '+\n    'warning error soft precedence thisAspectInstance';\n  var SHORTKEYS = 'get set args call';\n  return {\n    keywords : KEYWORDS,\n    illegal : /<\\/|#/,\n    contains : [\n      hljs.COMMENT(\n        '/\\\\*\\\\*',\n        '\\\\*/',\n        {\n          relevance : 0,\n          contains : [\n            {\n              // eat up @'s in emails to prevent them to be recognized as doctags\n              begin: /\\w+@/, relevance: 0\n            },\n            {\n              className : 'doctag',\n              begin : '@[A-Za-z]+'\n            }\n          ]\n        }\n      ),\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      {\n        className : 'class',\n        beginKeywords : 'aspect',\n        end : /[{;=]/,\n        excludeEnd : true,\n        illegal : /[:;\"\\[\\]]/,\n        contains : [\n          {\n            beginKeywords : 'extends implements pertypewithin perthis pertarget percflowbelow percflow issingleton'\n          },\n          hljs.UNDERSCORE_TITLE_MODE,\n          {\n            begin : /\\([^\\)]*/,\n            end : /[)]+/,\n            keywords : KEYWORDS + ' ' + SHORTKEYS,\n            excludeEnd : false\n          }\n        ]\n      },\n      {\n        className : 'class',\n        beginKeywords : 'class interface',\n        end : /[{;=]/,\n        excludeEnd : true,\n        relevance: 0,\n        keywords : 'class interface',\n        illegal : /[:\"\\[\\]]/,\n        contains : [\n          {beginKeywords : 'extends implements'},\n          hljs.UNDERSCORE_TITLE_MODE\n        ]\n      },\n      {\n        // AspectJ Constructs\n        beginKeywords : 'pointcut after before around throwing returning',\n        end : /[)]/,\n        excludeEnd : false,\n        illegal : /[\"\\[\\]]/,\n        contains : [\n          {\n            begin : hljs.UNDERSCORE_IDENT_RE + '\\\\s*\\\\(',\n            returnBegin : true,\n            contains : [hljs.UNDERSCORE_TITLE_MODE]\n          }\n        ]\n      },\n      {\n        begin : /[:]/,\n        returnBegin : true,\n        end : /[{;]/,\n        relevance: 0,\n        excludeEnd : false,\n        keywords : KEYWORDS,\n        illegal : /[\"\\[\\]]/,\n        contains : [\n          {\n            begin : hljs.UNDERSCORE_IDENT_RE + '\\\\s*\\\\(',\n            keywords : KEYWORDS + ' ' + SHORTKEYS,\n            relevance: 0\n          },\n          hljs.QUOTE_STRING_MODE\n        ]\n      },\n      {\n        // this prevents 'new Name(...), or throw ...' from being recognized as a function definition\n        beginKeywords : 'new throw',\n        relevance : 0\n      },\n      {\n        // the function class is a bit different for AspectJ compared to the Java language\n        className : 'function',\n        begin : /\\w+ +\\w+(\\.)?\\w+\\s*\\([^\\)]*\\)\\s*((throws)[\\w\\s,]+)?[\\{;]/,\n        returnBegin : true,\n        end : /[{;=]/,\n        keywords : KEYWORDS,\n        excludeEnd : true,\n        contains : [\n          {\n            begin : hljs.UNDERSCORE_IDENT_RE + '\\\\s*\\\\(',\n            returnBegin : true,\n            relevance: 0,\n            contains : [hljs.UNDERSCORE_TITLE_MODE]\n          },\n          {\n            className : 'params',\n            begin : /\\(/, end : /\\)/,\n            relevance: 0,\n            keywords : KEYWORDS,\n            contains : [\n              hljs.APOS_STRING_MODE,\n              hljs.QUOTE_STRING_MODE,\n              hljs.C_NUMBER_MODE,\n              hljs.C_BLOCK_COMMENT_MODE\n            ]\n          },\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      },\n      hljs.C_NUMBER_MODE,\n      {\n        // annotation is also used in this language\n        className : 'meta',\n        begin : '@[A-Za-z]+'\n      }\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/aspectj.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/autohotkey.js":
/*!***************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/autohotkey.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var BACKTICK_ESCAPE = {\n    begin: '`[\\\\s\\\\S]'\n  };\n\n  return {\n    case_insensitive: true,\n    aliases: [ 'ahk' ],\n    keywords: {\n      keyword: 'Break Continue Critical Exit ExitApp Gosub Goto New OnExit Pause return SetBatchLines SetTimer Suspend Thread Throw Until ahk_id ahk_class ahk_pid ahk_exe ahk_group',\n      literal: 'A|0 true false NOT AND OR',\n      built_in: 'ComSpec Clipboard ClipboardAll ErrorLevel',\n    },\n    contains: [\n      {\n        className: 'built_in',\n        begin: 'A_[a-zA-Z0-9]+'\n      },\n      BACKTICK_ESCAPE,\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {contains: [BACKTICK_ESCAPE]}),\n      hljs.COMMENT(';', '$', {relevance: 0}),\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        className: 'number',\n        begin: hljs.NUMBER_RE,\n        relevance: 0\n      },\n      {\n        className: 'subst', // FIXED\n        begin: '%(?=[a-zA-Z0-9#_$@])', end: '%',\n        illegal: '[^a-zA-Z0-9#_$@]'\n      },\n      {\n        className: 'built_in',\n        begin: '^\\\\s*\\\\w+\\\\s*,'\n        //I don't really know if this is totally relevant\n      },\n      {\n        className: 'meta', \n        begin: '^\\\\s*#\\w+', end:'$',\n        relevance: 0\n      },\n      {\n        className: 'symbol',\n        contains: [BACKTICK_ESCAPE],\n        variants: [\n          {begin: '^[^\\\\n\";]+::(?!=)'},\n          {begin: '^[^\\\\n\";]+:(?!=)', relevance: 0} // zero relevance as it catches a lot of things\n                                                    // followed by a single ':' in many languages\n        ]\n      },\n      {\n        // consecutive commas, not for highlighting but just for relevance\n        begin: ',\\\\s*,'\n      }\n    ]\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/autohotkey.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/autoit.js":
/*!***********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/autoit.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n    var KEYWORDS = 'ByRef Case Const ContinueCase ContinueLoop ' +\n        'Default Dim Do Else ElseIf EndFunc EndIf EndSelect ' +\n        'EndSwitch EndWith Enum Exit ExitLoop For Func ' +\n        'Global If In Local Next ReDim Return Select Static ' +\n        'Step Switch Then To Until Volatile WEnd While With',\n\n        LITERAL = 'True False And Null Not Or',\n\n        BUILT_IN =\n          'Abs ACos AdlibRegister AdlibUnRegister Asc AscW ASin Assign ATan AutoItSetOption AutoItWinGetTitle AutoItWinSetTitle Beep Binary BinaryLen BinaryMid BinaryToString BitAND BitNOT BitOR BitRotate BitShift BitXOR BlockInput Break Call CDTray Ceiling Chr ChrW ClipGet ClipPut ConsoleRead ConsoleWrite ConsoleWriteError ControlClick ControlCommand ControlDisable ControlEnable ControlFocus ControlGetFocus ControlGetHandle ControlGetPos ControlGetText ControlHide ControlListView ControlMove ControlSend ControlSetText ControlShow ControlTreeView Cos Dec DirCopy DirCreate DirGetSize DirMove DirRemove DllCall DllCallAddress DllCallbackFree DllCallbackGetPtr DllCallbackRegister DllClose DllOpen DllStructCreate DllStructGetData DllStructGetPtr DllStructGetSize DllStructSetData DriveGetDrive DriveGetFileSystem DriveGetLabel DriveGetSerial DriveGetType DriveMapAdd DriveMapDel DriveMapGet DriveSetLabel DriveSpaceFree DriveSpaceTotal DriveStatus EnvGet EnvSet EnvUpdate Eval Execute Exp FileChangeDir FileClose FileCopy FileCreateNTFSLink FileCreateShortcut FileDelete FileExists FileFindFirstFile FileFindNextFile FileFlush FileGetAttrib FileGetEncoding FileGetLongName FileGetPos FileGetShortcut FileGetShortName FileGetSize FileGetTime FileGetVersion FileInstall FileMove FileOpen FileOpenDialog FileRead FileReadLine FileReadToArray FileRecycle FileRecycleEmpty FileSaveDialog FileSelectFolder FileSetAttrib FileSetEnd FileSetPos FileSetTime FileWrite FileWriteLine Floor FtpSetProxy FuncName GUICreate GUICtrlCreateAvi GUICtrlCreateButton GUICtrlCreateCheckbox GUICtrlCreateCombo GUICtrlCreateContextMenu GUICtrlCreateDate GUICtrlCreateDummy GUICtrlCreateEdit GUICtrlCreateGraphic GUICtrlCreateGroup GUICtrlCreateIcon GUICtrlCreateInput GUICtrlCreateLabel GUICtrlCreateList GUICtrlCreateListView GUICtrlCreateListViewItem GUICtrlCreateMenu GUICtrlCreateMenuItem GUICtrlCreateMonthCal GUICtrlCreateObj GUICtrlCreatePic GUICtrlCreateProgress GUICtrlCreateRadio GUICtrlCreateSlider GUICtrlCreateTab GUICtrlCreateTabItem GUICtrlCreateTreeView GUICtrlCreateTreeViewItem GUICtrlCreateUpdown GUICtrlDelete GUICtrlGetHandle GUICtrlGetState GUICtrlRead GUICtrlRecvMsg GUICtrlRegisterListViewSort GUICtrlSendMsg GUICtrlSendToDummy GUICtrlSetBkColor GUICtrlSetColor GUICtrlSetCursor GUICtrlSetData GUICtrlSetDefBkColor GUICtrlSetDefColor GUICtrlSetFont GUICtrlSetGraphic GUICtrlSetImage GUICtrlSetLimit GUICtrlSetOnEvent GUICtrlSetPos GUICtrlSetResizing GUICtrlSetState GUICtrlSetStyle GUICtrlSetTip GUIDelete GUIGetCursorInfo GUIGetMsg GUIGetStyle GUIRegisterMsg GUISetAccelerators GUISetBkColor GUISetCoord GUISetCursor GUISetFont GUISetHelp GUISetIcon GUISetOnEvent GUISetState GUISetStyle GUIStartGroup GUISwitch Hex HotKeySet HttpSetProxy HttpSetUserAgent HWnd InetClose InetGet InetGetInfo InetGetSize InetRead IniDelete IniRead IniReadSection IniReadSectionNames IniRenameSection IniWrite IniWriteSection InputBox Int IsAdmin IsArray IsBinary IsBool IsDeclared IsDllStruct IsFloat IsFunc IsHWnd IsInt IsKeyword IsNumber IsObj IsPtr IsString Log MemGetStats Mod MouseClick MouseClickDrag MouseDown MouseGetCursor MouseGetPos MouseMove MouseUp MouseWheel MsgBox Number ObjCreate ObjCreateInterface ObjEvent ObjGet ObjName OnAutoItExitRegister OnAutoItExitUnRegister Ping PixelChecksum PixelGetColor PixelSearch ProcessClose ProcessExists ProcessGetStats ProcessList ProcessSetPriority ProcessWait ProcessWaitClose ProgressOff ProgressOn ProgressSet Ptr Random RegDelete RegEnumKey RegEnumVal RegRead RegWrite Round Run RunAs RunAsWait RunWait Send SendKeepActive SetError SetExtended ShellExecute ShellExecuteWait Shutdown Sin Sleep SoundPlay SoundSetWaveVolume SplashImageOn SplashOff SplashTextOn Sqrt SRandom StatusbarGetText StderrRead StdinWrite StdioClose StdoutRead String StringAddCR StringCompare StringFormat StringFromASCIIArray StringInStr StringIsAlNum StringIsAlpha StringIsASCII StringIsDigit StringIsFloat StringIsInt StringIsLower StringIsSpace StringIsUpper StringIsXDigit StringLeft StringLen StringLower StringMid StringRegExp StringRegExpReplace StringReplace StringReverse StringRight StringSplit StringStripCR StringStripWS StringToASCIIArray StringToBinary StringTrimLeft StringTrimRight StringUpper Tan TCPAccept TCPCloseSocket TCPConnect TCPListen TCPNameToIP TCPRecv TCPSend TCPShutdown, UDPShutdown TCPStartup, UDPStartup TimerDiff TimerInit ToolTip TrayCreateItem TrayCreateMenu TrayGetMsg TrayItemDelete TrayItemGetHandle TrayItemGetState TrayItemGetText TrayItemSetOnEvent TrayItemSetState TrayItemSetText TraySetClick TraySetIcon TraySetOnEvent TraySetPauseIcon TraySetState TraySetToolTip TrayTip UBound UDPBind UDPCloseSocket UDPOpen UDPRecv UDPSend VarGetType WinActivate WinActive WinClose WinExists WinFlash WinGetCaretPos WinGetClassList WinGetClientSize WinGetHandle WinGetPos WinGetProcess WinGetState WinGetText WinGetTitle WinKill WinList WinMenuSelectItem WinMinimizeAll WinMinimizeAllUndo WinMove WinSetOnTop WinSetState WinSetTitle WinSetTrans WinWait',\n\n        COMMENT = {\n            variants: [\n              hljs.COMMENT(';', '$', {relevance: 0}),\n              hljs.COMMENT('#cs', '#ce'),\n              hljs.COMMENT('#comments-start', '#comments-end')\n            ]\n        },\n\n        VARIABLE = {\n            begin: '\\\\$[A-z0-9_]+'\n        },\n\n        STRING = {\n            className: 'string',\n            variants: [{\n                begin: /\"/,\n                end: /\"/,\n                contains: [{\n                    begin: /\"\"/,\n                    relevance: 0\n                }]\n            }, {\n                begin: /'/,\n                end: /'/,\n                contains: [{\n                    begin: /''/,\n                    relevance: 0\n                }]\n            }]\n        },\n\n        NUMBER = {\n            variants: [hljs.BINARY_NUMBER_MODE, hljs.C_NUMBER_MODE]\n        },\n\n        PREPROCESSOR = {\n            className: 'meta',\n            begin: '#',\n            end: '$',\n            keywords: {'meta-keyword': 'comments include include-once NoTrayIcon OnAutoItStartRegister pragma compile RequireAdmin'},\n            contains: [{\n                    begin: /\\\\\\n/,\n                    relevance: 0\n                }, {\n                    beginKeywords: 'include',\n                    keywords: {'meta-keyword': 'include'},\n                    end: '$',\n                    contains: [\n                        STRING, {\n                            className: 'meta-string',\n                            variants: [{\n                                begin: '<',\n                                end: '>'\n                            }, {\n                                begin: /\"/,\n                                end: /\"/,\n                                contains: [{\n                                    begin: /\"\"/,\n                                    relevance: 0\n                                }]\n                            }, {\n                                begin: /'/,\n                                end: /'/,\n                                contains: [{\n                                    begin: /''/,\n                                    relevance: 0\n                                }]\n                            }]\n                        }\n                    ]\n                },\n                STRING,\n                COMMENT\n            ]\n        },\n\n        CONSTANT = {\n            className: 'symbol',\n            // begin: '@',\n            // end: '$',\n            // keywords: 'AppDataCommonDir AppDataDir AutoItExe AutoItPID AutoItVersion AutoItX64 COM_EventObj CommonFilesDir Compiled ComputerName ComSpec CPUArch CR CRLF DesktopCommonDir DesktopDepth DesktopDir DesktopHeight DesktopRefresh DesktopWidth DocumentsCommonDir error exitCode exitMethod extended FavoritesCommonDir FavoritesDir GUI_CtrlHandle GUI_CtrlId GUI_DragFile GUI_DragId GUI_DropId GUI_WinHandle HomeDrive HomePath HomeShare HotKeyPressed HOUR IPAddress1 IPAddress2 IPAddress3 IPAddress4 KBLayout LF LocalAppDataDir LogonDNSDomain LogonDomain LogonServer MDAY MIN MON MSEC MUILang MyDocumentsDir NumParams OSArch OSBuild OSLang OSServicePack OSType OSVersion ProgramFilesDir ProgramsCommonDir ProgramsDir ScriptDir ScriptFullPath ScriptLineNumber ScriptName SEC StartMenuCommonDir StartMenuDir StartupCommonDir StartupDir SW_DISABLE SW_ENABLE SW_HIDE SW_LOCK SW_MAXIMIZE SW_MINIMIZE SW_RESTORE SW_SHOW SW_SHOWDEFAULT SW_SHOWMAXIMIZED SW_SHOWMINIMIZED SW_SHOWMINNOACTIVE SW_SHOWNA SW_SHOWNOACTIVATE SW_SHOWNORMAL SW_UNLOCK SystemDir TAB TempDir TRAY_ID TrayIconFlashing TrayIconVisible UserName UserProfileDir WDAY WindowsDir WorkingDir YDAY YEAR',\n            // relevance: 5\n            begin: '@[A-z0-9_]+'\n        },\n\n        FUNCTION = {\n            className: 'function',\n            beginKeywords: 'Func',\n            end: '$',\n            illegal: '\\\\$|\\\\[|%',\n            contains: [\n                hljs.UNDERSCORE_TITLE_MODE, {\n                    className: 'params',\n                    begin: '\\\\(',\n                    end: '\\\\)',\n                    contains: [\n                        VARIABLE,\n                        STRING,\n                        NUMBER\n                    ]\n                }\n            ]\n        };\n\n    return {\n        case_insensitive: true,\n        illegal: /\\/\\*/,\n        keywords: {\n            keyword: KEYWORDS,\n            built_in: BUILT_IN,\n            literal: LITERAL\n        },\n        contains: [\n            COMMENT,\n            VARIABLE,\n            STRING,\n            NUMBER,\n            PREPROCESSOR,\n            CONSTANT,\n            FUNCTION\n        ]\n    }\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/autoit.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/avrasm.js":
/*!***********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/avrasm.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  return {\n    case_insensitive: true,\n    lexemes: '\\\\.?' + hljs.IDENT_RE,\n    keywords: {\n      keyword:\n        /* mnemonic */\n        'adc add adiw and andi asr bclr bld brbc brbs brcc brcs break breq brge brhc brhs ' +\n        'brid brie brlo brlt brmi brne brpl brsh brtc brts brvc brvs bset bst call cbi cbr ' +\n        'clc clh cli cln clr cls clt clv clz com cp cpc cpi cpse dec eicall eijmp elpm eor ' +\n        'fmul fmuls fmulsu icall ijmp in inc jmp ld ldd ldi lds lpm lsl lsr mov movw mul ' +\n        'muls mulsu neg nop or ori out pop push rcall ret reti rjmp rol ror sbc sbr sbrc sbrs ' +\n        'sec seh sbi sbci sbic sbis sbiw sei sen ser ses set sev sez sleep spm st std sts sub ' +\n        'subi swap tst wdr',\n      built_in:\n        /* general purpose registers */\n        'r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r16 r17 r18 r19 r20 r21 r22 ' +\n        'r23 r24 r25 r26 r27 r28 r29 r30 r31 x|0 xh xl y|0 yh yl z|0 zh zl ' +\n        /* IO Registers (ATMega128) */\n        'ucsr1c udr1 ucsr1a ucsr1b ubrr1l ubrr1h ucsr0c ubrr0h tccr3c tccr3a tccr3b tcnt3h ' +\n        'tcnt3l ocr3ah ocr3al ocr3bh ocr3bl ocr3ch ocr3cl icr3h icr3l etimsk etifr tccr1c ' +\n        'ocr1ch ocr1cl twcr twdr twar twsr twbr osccal xmcra xmcrb eicra spmcsr spmcr portg ' +\n        'ddrg ping portf ddrf sreg sph spl xdiv rampz eicrb eimsk gimsk gicr eifr gifr timsk ' +\n        'tifr mcucr mcucsr tccr0 tcnt0 ocr0 assr tccr1a tccr1b tcnt1h tcnt1l ocr1ah ocr1al ' +\n        'ocr1bh ocr1bl icr1h icr1l tccr2 tcnt2 ocr2 ocdr wdtcr sfior eearh eearl eedr eecr ' +\n        'porta ddra pina portb ddrb pinb portc ddrc pinc portd ddrd pind spdr spsr spcr udr0 ' +\n        'ucsr0a ucsr0b ubrr0l acsr admux adcsr adch adcl porte ddre pine pinf',\n      meta:\n        '.byte .cseg .db .def .device .dseg .dw .endmacro .equ .eseg .exit .include .list ' +\n        '.listmac .macro .nolist .org .set'\n    },\n    contains: [\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.COMMENT(\n        ';',\n        '$',\n        {\n          relevance: 0\n        }\n      ),\n      hljs.C_NUMBER_MODE, // 0x..., decimal, float\n      hljs.BINARY_NUMBER_MODE, // 0b...\n      {\n        className: 'number',\n        begin: '\\\\b(\\\\$[a-zA-Z0-9]+|0o[0-7]+)' // $..., 0o...\n      },\n      hljs.QUOTE_STRING_MODE,\n      {\n        className: 'string',\n        begin: '\\'', end: '[^\\\\\\\\]\\'',\n        illegal: '[^\\\\\\\\][^\\']'\n      },\n      {className: 'symbol',  begin: '^[A-Za-z0-9_.$]+:'},\n      {className: 'meta', begin: '#', end: '$'},\n      {  // подстановка в «.macro»\n        className: 'subst',\n        begin: '@[0-9]+'\n      }\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/avrasm.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/awk.js":
/*!********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/awk.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var VARIABLE = {\n    className: 'variable',\n    variants: [\n      {begin: /\\$[\\w\\d#@][\\w\\d_]*/},\n      {begin: /\\$\\{(.*?)}/}\n    ]\n  };\n  var KEYWORDS = 'BEGIN END if else while do for in break continue delete next nextfile function func exit|10';\n  var STRING = {\n    className: 'string',\n    contains: [hljs.BACKSLASH_ESCAPE],\n    variants: [\n      {\n        begin: /(u|b)?r?'''/, end: /'''/,\n        relevance: 10\n      },\n      {\n        begin: /(u|b)?r?\"\"\"/, end: /\"\"\"/,\n        relevance: 10\n      },\n      {\n        begin: /(u|r|ur)'/, end: /'/,\n        relevance: 10\n      },\n      {\n        begin: /(u|r|ur)\"/, end: /\"/,\n        relevance: 10\n      },\n      {\n        begin: /(b|br)'/, end: /'/\n      },\n      {\n        begin: /(b|br)\"/, end: /\"/\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE\n    ]\n  };\n  return {\n\t keywords: {\n\t   keyword: KEYWORDS\n    },\n    contains: [\n      VARIABLE,\n      STRING,\n      hljs.REGEXP_MODE,\n      hljs.HASH_COMMENT_MODE,\n      hljs.NUMBER_MODE\n    ]\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/awk.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/axapta.js":
/*!***********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/axapta.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  return {\n    keywords: 'false int abstract private char boolean static null if for true ' +\n      'while long throw finally protected final return void enum else ' +\n      'break new catch byte super case short default double public try this switch ' +\n      'continue reverse firstfast firstonly forupdate nofetch sum avg minof maxof count ' +\n      'order group by asc desc index hint like dispaly edit client server ttsbegin ' +\n      'ttscommit str real date container anytype common div mod',\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_NUMBER_MODE,\n      {\n        className: 'meta',\n        begin: '#', end: '$'\n      },\n      {\n        className: 'class',\n        beginKeywords: 'class interface', end: '{', excludeEnd: true,\n        illegal: ':',\n        contains: [\n          {beginKeywords: 'extends implements'},\n          hljs.UNDERSCORE_TITLE_MODE\n        ]\n      }\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/axapta.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/bash.js":
/*!*********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/bash.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var VAR = {\n    className: 'variable',\n    variants: [\n      {begin: /\\$[\\w\\d#@][\\w\\d_]*/},\n      {begin: /\\$\\{(.*?)}/}\n    ]\n  };\n  var QUOTE_STRING = {\n    className: 'string',\n    begin: /\"/, end: /\"/,\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      VAR,\n      {\n        className: 'variable',\n        begin: /\\$\\(/, end: /\\)/,\n        contains: [hljs.BACKSLASH_ESCAPE]\n      }\n    ]\n  };\n  var APOS_STRING = {\n    className: 'string',\n    begin: /'/, end: /'/\n  };\n\n  return {\n    aliases: ['sh', 'zsh'],\n    lexemes: /\\b-?[a-z\\._]+\\b/,\n    keywords: {\n      keyword:\n        'if then else elif fi for while in do done case esac function',\n      literal:\n        'true false',\n      built_in:\n        // Shell built-ins\n        // http://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n        'break cd continue eval exec exit export getopts hash pwd readonly return shift test times ' +\n        'trap umask unset ' +\n        // Bash built-ins\n        'alias bind builtin caller command declare echo enable help let local logout mapfile printf ' +\n        'read readarray source type typeset ulimit unalias ' +\n        // Shell modifiers\n        'set shopt ' +\n        // Zsh built-ins\n        'autoload bg bindkey bye cap chdir clone comparguments compcall compctl compdescribe compfiles ' +\n        'compgroups compquote comptags comptry compvalues dirs disable disown echotc echoti emulate ' +\n        'fc fg float functions getcap getln history integer jobs kill limit log noglob popd print ' +\n        'pushd pushln rehash sched setcap setopt stat suspend ttyctl unfunction unhash unlimit ' +\n        'unsetopt vared wait whence where which zcompile zformat zftp zle zmodload zparseopts zprof ' +\n        'zpty zregexparse zsocket zstyle ztcp',\n      _:\n        '-ne -eq -lt -gt -f -d -e -s -l -a' // relevance booster\n    },\n    contains: [\n      {\n        className: 'meta',\n        begin: /^#![^\\n]+sh\\s*$/,\n        relevance: 10\n      },\n      {\n        className: 'function',\n        begin: /\\w[\\w\\d_]*\\s*\\(\\s*\\)\\s*\\{/,\n        returnBegin: true,\n        contains: [hljs.inherit(hljs.TITLE_MODE, {begin: /\\w[\\w\\d_]*/})],\n        relevance: 0\n      },\n      hljs.HASH_COMMENT_MODE,\n      QUOTE_STRING,\n      APOS_STRING,\n      VAR\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/bash.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/basic.js":
/*!**********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/basic.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  return {\n    case_insensitive: true,\n    illegal: '^\\.',\n    // Support explicitely typed variables that end with $%! or #.\n    lexemes: '[a-zA-Z][a-zA-Z0-9_\\$\\%\\!\\#]*',\n    keywords: {\n        keyword:\n          'ABS ASC AND ATN AUTO|0 BEEP BLOAD|10 BSAVE|10 CALL CALLS CDBL CHAIN CHDIR CHR$|10 CINT CIRCLE ' +\n          'CLEAR CLOSE CLS COLOR COM COMMON CONT COS CSNG CSRLIN CVD CVI CVS DATA DATE$ ' +\n          'DEFDBL DEFINT DEFSNG DEFSTR DEF|0 SEG USR DELETE DIM DRAW EDIT END ENVIRON ENVIRON$ ' +\n          'EOF EQV ERASE ERDEV ERDEV$ ERL ERR ERROR EXP FIELD FILES FIX FOR|0 FRE GET GOSUB|10 GOTO ' +\n          'HEX$ IF|0 THEN ELSE|0 INKEY$ INP INPUT INPUT# INPUT$ INSTR IMP INT IOCTL IOCTL$ KEY ON ' +\n          'OFF LIST KILL LEFT$ LEN LET LINE LLIST LOAD LOC LOCATE LOF LOG LPRINT USING LSET ' +\n          'MERGE MID$ MKDIR MKD$ MKI$ MKS$ MOD NAME NEW NEXT NOISE NOT OCT$ ON OR PEN PLAY STRIG OPEN OPTION ' +\n          'BASE OUT PAINT PALETTE PCOPY PEEK PMAP POINT POKE POS PRINT PRINT] PSET PRESET ' +\n          'PUT RANDOMIZE READ REM RENUM RESET|0 RESTORE RESUME RETURN|0 RIGHT$ RMDIR RND RSET ' +\n          'RUN SAVE SCREEN SGN SHELL SIN SOUND SPACE$ SPC SQR STEP STICK STOP STR$ STRING$ SWAP ' +\n          'SYSTEM TAB TAN TIME$ TIMER TROFF TRON TO USR VAL VARPTR VARPTR$ VIEW WAIT WHILE ' +\n          'WEND WIDTH WINDOW WRITE XOR'\n    },\n    contains: [\n      hljs.QUOTE_STRING_MODE,\n      hljs.COMMENT('REM', '$', {relevance: 10}),\n      hljs.COMMENT('\\'', '$', {relevance: 0}),\n      {\n        // Match line numbers\n        className: 'symbol',\n        begin: '^[0-9]+\\ ',\n        relevance: 10\n      },\n      {\n        // Match typed numeric constants (1000, 12.34!, 1.2e5, 1.5#, 1.2D2)\n        className: 'number',\n        begin: '\\\\b([0-9]+[0-9edED\\.]*[#\\!]?)',\n        relevance: 0\n      },\n      {\n        // Match hexadecimal numbers (&Hxxxx)\n        className: 'number',\n        begin: '(\\&[hH][0-9a-fA-F]{1,4})'\n      },\n      {\n        // Match octal numbers (&Oxxxxxx)\n        className: 'number',\n        begin: '(\\&[oO][0-7]{1,6})'\n      }\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/basic.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/bnf.js":
/*!********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/bnf.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs){\n  return {\n    contains: [\n      // Attribute\n      {\n        className: 'attribute',\n        begin: /</, end: />/\n      },\n      // Specific\n      {\n        begin: /::=/,\n        starts: {\n          end: /$/,\n          contains: [\n            {\n              begin: /</, end: />/\n            },\n            // Common\n            hljs.C_LINE_COMMENT_MODE,\n            hljs.C_BLOCK_COMMENT_MODE,\n            hljs.APOS_STRING_MODE,\n            hljs.QUOTE_STRING_MODE\n          ]\n        }\n      }\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/bnf.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/brainfuck.js":
/*!**************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/brainfuck.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs){\n  var LITERAL = {\n    className: 'literal',\n    begin: '[\\\\+\\\\-]',\n    relevance: 0\n  };\n  return {\n    aliases: ['bf'],\n    contains: [\n      hljs.COMMENT(\n        '[^\\\\[\\\\]\\\\.,\\\\+\\\\-<> \\r\\n]',\n        '[\\\\[\\\\]\\\\.,\\\\+\\\\-<> \\r\\n]',\n        {\n          returnEnd: true,\n          relevance: 0\n        }\n      ),\n      {\n        className: 'title',\n        begin: '[\\\\[\\\\]]',\n        relevance: 0\n      },\n      {\n        className: 'string',\n        begin: '[\\\\.,]',\n        relevance: 0\n      },\n      {\n        // this mode works as the only relevance counter\n        begin: /\\+\\+|\\-\\-/, returnBegin: true,\n        contains: [LITERAL]\n      },\n      LITERAL\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/brainfuck.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/cal.js":
/*!********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/cal.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var KEYWORDS =\n    'div mod in and or not xor asserterror begin case do downto else end exit for if of repeat then to ' +\n    'until while with var';\n  var LITERALS = 'false true';\n  var COMMENT_MODES = [\n    hljs.C_LINE_COMMENT_MODE,\n    hljs.COMMENT(\n      /\\{/,\n      /\\}/,\n      {\n        relevance: 0\n      }\n    ),\n    hljs.COMMENT(\n      /\\(\\*/,\n      /\\*\\)/,\n      {\n        relevance: 10\n      }\n    )\n  ];\n  var STRING = {\n    className: 'string',\n    begin: /'/, end: /'/,\n    contains: [{begin: /''/}]\n  };\n  var CHAR_STRING = {\n    className: 'string', begin: /(#\\d+)+/\n  };\n  var DATE = {\n      className: 'number',\n      begin: '\\\\b\\\\d+(\\\\.\\\\d+)?(DT|D|T)',\n      relevance: 0\n  };\n  var DBL_QUOTED_VARIABLE = {\n      className: 'string', // not a string technically but makes sense to be highlighted in the same style\n      begin: '\"',\n      end: '\"'\n  };\n\n  var PROCEDURE = {\n    className: 'function',\n    beginKeywords: 'procedure', end: /[:;]/,\n    keywords: 'procedure|10',\n    contains: [\n      hljs.TITLE_MODE,\n      {\n        className: 'params',\n        begin: /\\(/, end: /\\)/,\n        keywords: KEYWORDS,\n        contains: [STRING, CHAR_STRING]\n      }\n    ].concat(COMMENT_MODES)\n  };\n\n  var OBJECT = {\n    className: 'class',\n    begin: 'OBJECT (Table|Form|Report|Dataport|Codeunit|XMLport|MenuSuite|Page|Query) (\\\\d+) ([^\\\\r\\\\n]+)',\n    returnBegin: true,\n    contains: [\n      hljs.TITLE_MODE,\n        PROCEDURE\n    ]\n  };\n\n  return {\n    case_insensitive: true,\n    keywords: { keyword: KEYWORDS, literal: LITERALS },\n    illegal: /\\/\\*/,\n    contains: [\n      STRING, CHAR_STRING,\n      DATE, DBL_QUOTED_VARIABLE,\n      hljs.NUMBER_MODE,\n      OBJECT,\n      PROCEDURE\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/cal.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/capnproto.js":
/*!**************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/capnproto.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  return {\n    aliases: ['capnp'],\n    keywords: {\n      keyword:\n        'struct enum interface union group import using const annotation extends in of on as with from fixed',\n      built_in:\n        'Void Bool Int8 Int16 Int32 Int64 UInt8 UInt16 UInt32 UInt64 Float32 Float64 ' +\n        'Text Data AnyPointer AnyStruct Capability List',\n      literal:\n        'true false'\n    },\n    contains: [\n      hljs.QUOTE_STRING_MODE,\n      hljs.NUMBER_MODE,\n      hljs.HASH_COMMENT_MODE,\n      {\n        className: 'meta',\n        begin: /@0x[\\w\\d]{16};/,\n        illegal: /\\n/\n      },\n      {\n        className: 'symbol',\n        begin: /@\\d+\\b/\n      },\n      {\n        className: 'class',\n        beginKeywords: 'struct enum', end: /\\{/,\n        illegal: /\\n/,\n        contains: [\n          hljs.inherit(hljs.TITLE_MODE, {\n            starts: {endsWithParent: true, excludeEnd: true} // hack: eating everything after the first title\n          })\n        ]\n      },\n      {\n        className: 'class',\n        beginKeywords: 'interface', end: /\\{/,\n        illegal: /\\n/,\n        contains: [\n          hljs.inherit(hljs.TITLE_MODE, {\n            starts: {endsWithParent: true, excludeEnd: true} // hack: eating everything after the first title\n          })\n        ]\n      }\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/capnproto.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/ceylon.js":
/*!***********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/ceylon.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  // 2.3. Identifiers and keywords\n  var KEYWORDS =\n    'assembly module package import alias class interface object given value ' +\n    'assign void function new of extends satisfies abstracts in out return ' +\n    'break continue throw assert dynamic if else switch case for while try ' +\n    'catch finally then let this outer super is exists nonempty';\n  // 7.4.1 Declaration Modifiers\n  var DECLARATION_MODIFIERS =\n    'shared abstract formal default actual variable late native deprecated' +\n    'final sealed annotation suppressWarnings small';\n  // 7.4.2 Documentation\n  var DOCUMENTATION =\n    'doc by license see throws tagged';\n  var SUBST = {\n    className: 'subst', excludeBegin: true, excludeEnd: true,\n    begin: /``/, end: /``/,\n    keywords: KEYWORDS,\n    relevance: 10\n  };\n  var EXPRESSIONS = [\n    {\n      // verbatim string\n      className: 'string',\n      begin: '\"\"\"',\n      end: '\"\"\"',\n      relevance: 10\n    },\n    {\n      // string literal or template\n      className: 'string',\n      begin: '\"', end: '\"',\n      contains: [SUBST]\n    },\n    {\n      // character literal\n      className: 'string',\n      begin: \"'\",\n      end: \"'\"\n    },\n    {\n      // numeric literal\n      className: 'number',\n      begin: '#[0-9a-fA-F_]+|\\\\$[01_]+|[0-9_]+(?:\\\\.[0-9_](?:[eE][+-]?\\\\d+)?)?[kMGTPmunpf]?',\n      relevance: 0\n    }\n  ];\n  SUBST.contains = EXPRESSIONS;\n\n  return {\n    keywords: {\n      keyword: KEYWORDS + ' ' + DECLARATION_MODIFIERS,\n      meta: DOCUMENTATION\n    },\n    illegal: '\\\\$[^01]|#[^0-9a-fA-F]',\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.COMMENT('/\\\\*', '\\\\*/', {contains: ['self']}),\n      {\n        // compiler annotation\n        className: 'meta',\n        begin: '@[a-z]\\\\w*(?:\\\\:\\\"[^\\\"]*\\\")?'\n      }\n    ].concat(EXPRESSIONS)\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/ceylon.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/clean.js":
/*!**********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/clean.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  return {\n    aliases: ['clean','icl','dcl'],\n    keywords: {\n      keyword:\n        'if let in with where case of class instance otherwise ' +\n        'implementation definition system module from import qualified as ' +\n        'special code inline foreign export ccall stdcall generic derive ' +\n        'infix infixl infixr',\n      literal:\n        'True False'\n    },\n    contains: [\n\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_NUMBER_MODE,\n\n      {begin: '->|<-[|:]?|::|#!?|>>=|\\\\{\\\\||\\\\|\\\\}|:==|=:|\\\\.\\\\.|<>|`'} // relevance booster\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/clean.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/clojure-repl.js":
/*!*****************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/clojure-repl.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  return {\n    contains: [\n      {\n        className: 'meta',\n        begin: /^([\\w.-]+|\\s*#_)=>/,\n        starts: {\n          end: /$/,\n          subLanguage: 'clojure'\n        }\n      }\n    ]\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/clojure-repl.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/clojure.js":
/*!************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/clojure.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var keywords = {\n    'builtin-name':\n      // Clojure keywords\n      'def defonce cond apply if-not if-let if not not= = < > <= >= == + / * - rem '+\n      'quot neg? pos? delay? symbol? keyword? true? false? integer? empty? coll? list? '+\n      'set? ifn? fn? associative? sequential? sorted? counted? reversible? number? decimal? '+\n      'class? distinct? isa? float? rational? reduced? ratio? odd? even? char? seq? vector? '+\n      'string? map? nil? contains? zero? instance? not-every? not-any? libspec? -> ->> .. . '+\n      'inc compare do dotimes mapcat take remove take-while drop letfn drop-last take-last '+\n      'drop-while while intern condp case reduced cycle split-at split-with repeat replicate '+\n      'iterate range merge zipmap declare line-seq sort comparator sort-by dorun doall nthnext '+\n      'nthrest partition eval doseq await await-for let agent atom send send-off release-pending-sends '+\n      'add-watch mapv filterv remove-watch agent-error restart-agent set-error-handler error-handler '+\n      'set-error-mode! error-mode shutdown-agents quote var fn loop recur throw try monitor-enter '+\n      'monitor-exit defmacro defn defn- macroexpand macroexpand-1 for dosync and or '+\n      'when when-not when-let comp juxt partial sequence memoize constantly complement identity assert '+\n      'peek pop doto proxy defstruct first rest cons defprotocol cast coll deftype defrecord last butlast '+\n      'sigs reify second ffirst fnext nfirst nnext defmulti defmethod meta with-meta ns in-ns create-ns import '+\n      'refer keys select-keys vals key val rseq name namespace promise into transient persistent! conj! '+\n      'assoc! dissoc! pop! disj! use class type num float double short byte boolean bigint biginteger '+\n      'bigdec print-method print-dup throw-if printf format load compile get-in update-in pr pr-on newline '+\n      'flush read slurp read-line subvec with-open memfn time re-find re-groups rand-int rand mod locking '+\n      'assert-valid-fdecl alias resolve ref deref refset swap! reset! set-validator! compare-and-set! alter-meta! '+\n      'reset-meta! commute get-validator alter ref-set ref-history-count ref-min-history ref-max-history ensure sync io! '+\n      'new next conj set! to-array future future-call into-array aset gen-class reduce map filter find empty '+\n      'hash-map hash-set sorted-map sorted-map-by sorted-set sorted-set-by vec vector seq flatten reverse assoc dissoc list '+\n      'disj get union difference intersection extend extend-type extend-protocol int nth delay count concat chunk chunk-buffer '+\n      'chunk-append chunk-first chunk-rest max min dec unchecked-inc-int unchecked-inc unchecked-dec-inc unchecked-dec unchecked-negate '+\n      'unchecked-add-int unchecked-add unchecked-subtract-int unchecked-subtract chunk-next chunk-cons chunked-seq? prn vary-meta '+\n      'lazy-seq spread list* str find-keyword keyword symbol gensym force rationalize'\n   };\n\n  var SYMBOLSTART = 'a-zA-Z_\\\\-!.?+*=<>&#\\'';\n  var SYMBOL_RE = '[' + SYMBOLSTART + '][' + SYMBOLSTART + '0-9/;:]*';\n  var SIMPLE_NUMBER_RE = '[-+]?\\\\d+(\\\\.\\\\d+)?';\n\n  var SYMBOL = {\n    begin: SYMBOL_RE,\n    relevance: 0\n  };\n  var NUMBER = {\n    className: 'number', begin: SIMPLE_NUMBER_RE,\n    relevance: 0\n  };\n  var STRING = hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null});\n  var COMMENT = hljs.COMMENT(\n    ';',\n    '$',\n    {\n      relevance: 0\n    }\n  );\n  var LITERAL = {\n    className: 'literal',\n    begin: /\\b(true|false|nil)\\b/\n  };\n  var COLLECTION = {\n    begin: '[\\\\[\\\\{]', end: '[\\\\]\\\\}]'\n  };\n  var HINT = {\n    className: 'comment',\n    begin: '\\\\^' + SYMBOL_RE\n  };\n  var HINT_COL = hljs.COMMENT('\\\\^\\\\{', '\\\\}');\n  var KEY = {\n    className: 'symbol',\n    begin: '[:]{1,2}' + SYMBOL_RE\n  };\n  var LIST = {\n    begin: '\\\\(', end: '\\\\)'\n  };\n  var BODY = {\n    endsWithParent: true,\n    relevance: 0\n  };\n  var NAME = {\n    keywords: keywords,\n    lexemes: SYMBOL_RE,\n    className: 'name', begin: SYMBOL_RE,\n    starts: BODY\n  };\n  var DEFAULT_CONTAINS = [LIST, STRING, HINT, HINT_COL, COMMENT, KEY, COLLECTION, NUMBER, LITERAL, SYMBOL];\n\n  LIST.contains = [hljs.COMMENT('comment', ''), NAME, BODY];\n  BODY.contains = DEFAULT_CONTAINS;\n  COLLECTION.contains = DEFAULT_CONTAINS;\n  HINT_COL.contains = [COLLECTION];\n\n  return {\n    aliases: ['clj'],\n    illegal: /\\S/,\n    contains: [LIST, STRING, HINT, HINT_COL, COMMENT, KEY, COLLECTION, NUMBER, LITERAL]\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/clojure.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/cmake.js":
/*!**********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/cmake.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  return {\n    aliases: ['cmake.in'],\n    case_insensitive: true,\n    keywords: {\n      keyword:\n        'add_custom_command add_custom_target add_definitions add_dependencies ' +\n        'add_executable add_library add_subdirectory add_test aux_source_directory ' +\n        'break build_command cmake_minimum_required cmake_policy configure_file ' +\n        'create_test_sourcelist define_property else elseif enable_language enable_testing ' +\n        'endforeach endfunction endif endmacro endwhile execute_process export find_file ' +\n        'find_library find_package find_path find_program fltk_wrap_ui foreach function ' +\n        'get_cmake_property get_directory_property get_filename_component get_property ' +\n        'get_source_file_property get_target_property get_test_property if include ' +\n        'include_directories include_external_msproject include_regular_expression install ' +\n        'link_directories load_cache load_command macro mark_as_advanced message option ' +\n        'output_required_files project qt_wrap_cpp qt_wrap_ui remove_definitions return ' +\n        'separate_arguments set set_directory_properties set_property ' +\n        'set_source_files_properties set_target_properties set_tests_properties site_name ' +\n        'source_group string target_link_libraries try_compile try_run unset variable_watch ' +\n        'while build_name exec_program export_library_dependencies install_files ' +\n        'install_programs install_targets link_libraries make_directory remove subdir_depends ' +\n        'subdirs use_mangled_mesa utility_source variable_requires write_file ' +\n        'qt5_use_modules qt5_use_package qt5_wrap_cpp on off true false and or ' +\n        'equal less greater strless strgreater strequal matches'\n    },\n    contains: [\n      {\n        className: 'variable',\n        begin: '\\\\${', end: '}'\n      },\n      hljs.HASH_COMMENT_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.NUMBER_MODE\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/cmake.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/coffeescript.js":
/*!*****************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/coffeescript.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var KEYWORDS = {\n    keyword:\n      // JS keywords\n      'in if for while finally new do return else break catch instanceof throw try this ' +\n      'switch continue typeof delete debugger super yield import export from as default await ' +\n      // Coffee keywords\n      'then unless until loop of by when and or is isnt not',\n    literal:\n      // JS literals\n      'true false null undefined ' +\n      // Coffee literals\n      'yes no on off',\n    built_in:\n      'npm require console print module global window document'\n  };\n  var JS_IDENT_RE = '[A-Za-z$_][0-9A-Za-z$_]*';\n  var SUBST = {\n    className: 'subst',\n    begin: /#\\{/, end: /}/,\n    keywords: KEYWORDS\n  };\n  var EXPRESSIONS = [\n    hljs.BINARY_NUMBER_MODE,\n    hljs.inherit(hljs.C_NUMBER_MODE, {starts: {end: '(\\\\s*/)?', relevance: 0}}), // a number tries to eat the following slash to prevent treating it as a regexp\n    {\n      className: 'string',\n      variants: [\n        {\n          begin: /'''/, end: /'''/,\n          contains: [hljs.BACKSLASH_ESCAPE]\n        },\n        {\n          begin: /'/, end: /'/,\n          contains: [hljs.BACKSLASH_ESCAPE]\n        },\n        {\n          begin: /\"\"\"/, end: /\"\"\"/,\n          contains: [hljs.BACKSLASH_ESCAPE, SUBST]\n        },\n        {\n          begin: /\"/, end: /\"/,\n          contains: [hljs.BACKSLASH_ESCAPE, SUBST]\n        }\n      ]\n    },\n    {\n      className: 'regexp',\n      variants: [\n        {\n          begin: '///', end: '///',\n          contains: [SUBST, hljs.HASH_COMMENT_MODE]\n        },\n        {\n          begin: '//[gim]*',\n          relevance: 0\n        },\n        {\n          // regex can't start with space to parse x / 2 / 3 as two divisions\n          // regex can't start with *, and it supports an \"illegal\" in the main mode\n          begin: /\\/(?![ *])(\\\\\\/|.)*?\\/[gim]*(?=\\W|$)/\n        }\n      ]\n    },\n    {\n      begin: '@' + JS_IDENT_RE // relevance booster\n    },\n    {\n      subLanguage: 'javascript',\n      excludeBegin: true, excludeEnd: true,\n      variants: [\n        {\n          begin: '```', end: '```',\n        },\n        {\n          begin: '`', end: '`',\n        }\n      ]\n    }\n  ];\n  SUBST.contains = EXPRESSIONS;\n\n  var TITLE = hljs.inherit(hljs.TITLE_MODE, {begin: JS_IDENT_RE});\n  var PARAMS_RE = '(\\\\(.*\\\\))?\\\\s*\\\\B[-=]>';\n  var PARAMS = {\n    className: 'params',\n    begin: '\\\\([^\\\\(]', returnBegin: true,\n    /* We need another contained nameless mode to not have every nested\n    pair of parens to be called \"params\" */\n    contains: [{\n      begin: /\\(/, end: /\\)/,\n      keywords: KEYWORDS,\n      contains: ['self'].concat(EXPRESSIONS)\n    }]\n  };\n\n  return {\n    aliases: ['coffee', 'cson', 'iced'],\n    keywords: KEYWORDS,\n    illegal: /\\/\\*/,\n    contains: EXPRESSIONS.concat([\n      hljs.COMMENT('###', '###'),\n      hljs.HASH_COMMENT_MODE,\n      {\n        className: 'function',\n        begin: '^\\\\s*' + JS_IDENT_RE + '\\\\s*=\\\\s*' + PARAMS_RE, end: '[-=]>',\n        returnBegin: true,\n        contains: [TITLE, PARAMS]\n      },\n      {\n        // anonymous function start\n        begin: /[:\\(,=]\\s*/,\n        relevance: 0,\n        contains: [\n          {\n            className: 'function',\n            begin: PARAMS_RE, end: '[-=]>',\n            returnBegin: true,\n            contains: [PARAMS]\n          }\n        ]\n      },\n      {\n        className: 'class',\n        beginKeywords: 'class',\n        end: '$',\n        illegal: /[:=\"\\[\\]]/,\n        contains: [\n          {\n            beginKeywords: 'extends',\n            endsWithParent: true,\n            illegal: /[:=\"\\[\\]]/,\n            contains: [TITLE]\n          },\n          TITLE\n        ]\n      },\n      {\n        begin: JS_IDENT_RE + ':', end: ':',\n        returnBegin: true, returnEnd: true,\n        relevance: 0\n      }\n    ])\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/coffeescript.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/coq.js":
/*!********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/coq.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  return {\n    keywords: {\n      keyword:\n        '_ as at cofix else end exists exists2 fix for forall fun if IF in let ' +\n        'match mod Prop return Set then Type using where with ' +\n        'Abort About Add Admit Admitted All Arguments Assumptions Axiom Back BackTo ' +\n        'Backtrack Bind Blacklist Canonical Cd Check Class Classes Close Coercion ' +\n        'Coercions CoFixpoint CoInductive Collection Combined Compute Conjecture ' +\n        'Conjectures Constant constr Constraint Constructors Context Corollary ' +\n        'CreateHintDb Cut Declare Defined Definition Delimit Dependencies Dependent' +\n        'Derive Drop eauto End Equality Eval Example Existential Existentials ' +\n        'Existing Export exporting Extern Extract Extraction Fact Field Fields File ' +\n        'Fixpoint Focus for From Function Functional Generalizable Global Goal Grab ' +\n        'Grammar Graph Guarded Heap Hint HintDb Hints Hypotheses Hypothesis ident ' +\n        'Identity If Immediate Implicit Import Include Inductive Infix Info Initial ' +\n        'Inline Inspect Instance Instances Intro Intros Inversion Inversion_clear ' +\n        'Language Left Lemma Let Libraries Library Load LoadPath Local Locate Ltac ML ' +\n        'Mode Module Modules Monomorphic Morphism Next NoInline Notation Obligation ' +\n        'Obligations Opaque Open Optimize Options Parameter Parameters Parametric ' +\n        'Path Paths pattern Polymorphic Preterm Print Printing Program Projections ' +\n        'Proof Proposition Pwd Qed Quit Rec Record Recursive Redirect Relation Remark ' +\n        'Remove Require Reserved Reset Resolve Restart Rewrite Right Ring Rings Save ' +\n        'Scheme Scope Scopes Script Search SearchAbout SearchHead SearchPattern ' +\n        'SearchRewrite Section Separate Set Setoid Show Solve Sorted Step Strategies ' +\n        'Strategy Structure SubClass Table Tables Tactic Term Test Theorem Time ' +\n        'Timeout Transparent Type Typeclasses Types Undelimit Undo Unfocus Unfocused ' +\n        'Unfold Universe Universes Unset Unshelve using Variable Variables Variant ' +\n        'Verbose Visibility where with',\n      built_in:\n        'abstract absurd admit after apply as assert assumption at auto autorewrite ' +\n        'autounfold before bottom btauto by case case_eq cbn cbv change ' +\n        'classical_left classical_right clear clearbody cofix compare compute ' +\n        'congruence constr_eq constructor contradict contradiction cut cutrewrite ' +\n        'cycle decide decompose dependent destruct destruction dintuition ' +\n        'discriminate discrR do double dtauto eapply eassumption eauto ecase ' +\n        'econstructor edestruct ediscriminate eelim eexact eexists einduction ' +\n        'einjection eleft elim elimtype enough equality erewrite eright ' +\n        'esimplify_eq esplit evar exact exactly_once exfalso exists f_equal fail ' +\n        'field field_simplify field_simplify_eq first firstorder fix fold fourier ' +\n        'functional generalize generalizing gfail give_up has_evar hnf idtac in ' +\n        'induction injection instantiate intro intro_pattern intros intuition ' +\n        'inversion inversion_clear is_evar is_var lapply lazy left lia lra move ' +\n        'native_compute nia nsatz omega once pattern pose progress proof psatz quote ' +\n        'record red refine reflexivity remember rename repeat replace revert ' +\n        'revgoals rewrite rewrite_strat right ring ring_simplify rtauto set ' +\n        'setoid_reflexivity setoid_replace setoid_rewrite setoid_symmetry ' +\n        'setoid_transitivity shelve shelve_unifiable simpl simple simplify_eq solve ' +\n        'specialize split split_Rabs split_Rmult stepl stepr subst sum swap ' +\n        'symmetry tactic tauto time timeout top transitivity trivial try tryif ' +\n        'unfold unify until using vm_compute with'\n    },\n    contains: [\n      hljs.QUOTE_STRING_MODE,\n      hljs.COMMENT('\\\\(\\\\*', '\\\\*\\\\)'),\n      hljs.C_NUMBER_MODE,\n      {\n        className: 'type',\n        excludeBegin: true,\n        begin: '\\\\|\\\\s*',\n        end: '\\\\w+'\n      },\n      {begin: /[-=]>/} // relevance booster\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/coq.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/cos.js":
/*!********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/cos.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function cos (hljs) {\n\n  var STRINGS = {\n    className: 'string',\n    variants: [\n      {\n        begin: '\"',\n        end: '\"',\n        contains: [{ // escaped\n          begin: \"\\\"\\\"\",\n          relevance: 0\n        }]\n      }\n    ]\n  };\n\n  var NUMBERS = {\n    className: \"number\",\n    begin: \"\\\\b(\\\\d+(\\\\.\\\\d*)?|\\\\.\\\\d+)\",\n    relevance: 0\n  };\n\n  var COS_KEYWORDS =\n    'property parameter class classmethod clientmethod extends as break ' +\n    'catch close continue do d|0 else elseif for goto halt hang h|0 if job ' +\n    'j|0 kill k|0 lock l|0 merge new open quit q|0 read r|0 return set s|0 ' +\n    'tcommit throw trollback try tstart use view while write w|0 xecute x|0 ' +\n    'zkill znspace zn ztrap zwrite zw zzdump zzwrite print zbreak zinsert ' +\n    'zload zprint zremove zsave zzprint mv mvcall mvcrt mvdim mvprint zquit ' +\n    'zsync ascii';\n\n    // registered function - no need in them due to all functions are highlighted,\n    // but I'll just leave this here.\n\n    //\"$bit\", \"$bitcount\",\n    //\"$bitfind\", \"$bitlogic\", \"$case\", \"$char\", \"$classmethod\", \"$classname\",\n    //\"$compile\", \"$data\", \"$decimal\", \"$double\", \"$extract\", \"$factor\",\n    //\"$find\", \"$fnumber\", \"$get\", \"$increment\", \"$inumber\", \"$isobject\",\n    //\"$isvaliddouble\", \"$isvalidnum\", \"$justify\", \"$length\", \"$list\",\n    //\"$listbuild\", \"$listdata\", \"$listfind\", \"$listfromstring\", \"$listget\",\n    //\"$listlength\", \"$listnext\", \"$listsame\", \"$listtostring\", \"$listvalid\",\n    //\"$locate\", \"$match\", \"$method\", \"$name\", \"$nconvert\", \"$next\",\n    //\"$normalize\", \"$now\", \"$number\", \"$order\", \"$parameter\", \"$piece\",\n    //\"$prefetchoff\", \"$prefetchon\", \"$property\", \"$qlength\", \"$qsubscript\",\n    //\"$query\", \"$random\", \"$replace\", \"$reverse\", \"$sconvert\", \"$select\",\n    //\"$sortbegin\", \"$sortend\", \"$stack\", \"$text\", \"$translate\", \"$view\",\n    //\"$wascii\", \"$wchar\", \"$wextract\", \"$wfind\", \"$wiswide\", \"$wlength\",\n    //\"$wreverse\", \"$xecute\", \"$zabs\", \"$zarccos\", \"$zarcsin\", \"$zarctan\",\n    //\"$zcos\", \"$zcot\", \"$zcsc\", \"$zdate\", \"$zdateh\", \"$zdatetime\",\n    //\"$zdatetimeh\", \"$zexp\", \"$zhex\", \"$zln\", \"$zlog\", \"$zpower\", \"$zsec\",\n    //\"$zsin\", \"$zsqr\", \"$ztan\", \"$ztime\", \"$ztimeh\", \"$zboolean\",\n    //\"$zconvert\", \"$zcrc\", \"$zcyc\", \"$zdascii\", \"$zdchar\", \"$zf\",\n    //\"$ziswide\", \"$zlascii\", \"$zlchar\", \"$zname\", \"$zposition\", \"$zqascii\",\n    //\"$zqchar\", \"$zsearch\", \"$zseek\", \"$zstrip\", \"$zwascii\", \"$zwchar\",\n    //\"$zwidth\", \"$zwpack\", \"$zwbpack\", \"$zwunpack\", \"$zwbunpack\", \"$zzenkaku\",\n    //\"$change\", \"$mv\", \"$mvat\", \"$mvfmt\", \"$mvfmts\", \"$mviconv\",\n    //\"$mviconvs\", \"$mvinmat\", \"$mvlover\", \"$mvoconv\", \"$mvoconvs\", \"$mvraise\",\n    //\"$mvtrans\", \"$mvv\", \"$mvname\", \"$zbitand\", \"$zbitcount\", \"$zbitfind\",\n    //\"$zbitget\", \"$zbitlen\", \"$zbitnot\", \"$zbitor\", \"$zbitset\", \"$zbitstr\",\n    //\"$zbitxor\", \"$zincrement\", \"$znext\", \"$zorder\", \"$zprevious\", \"$zsort\",\n    //\"device\", \"$ecode\", \"$estack\", \"$etrap\", \"$halt\", \"$horolog\",\n    //\"$io\", \"$job\", \"$key\", \"$namespace\", \"$principal\", \"$quit\", \"$roles\",\n    //\"$storage\", \"$system\", \"$test\", \"$this\", \"$tlevel\", \"$username\",\n    //\"$x\", \"$y\", \"$za\", \"$zb\", \"$zchild\", \"$zeof\", \"$zeos\", \"$zerror\",\n    //\"$zhorolog\", \"$zio\", \"$zjob\", \"$zmode\", \"$znspace\", \"$zparent\", \"$zpi\",\n    //\"$zpos\", \"$zreference\", \"$zstorage\", \"$ztimestamp\", \"$ztimezone\",\n    //\"$ztrap\", \"$zversion\"\n\n  return {\n    case_insensitive: true,\n    aliases: [\"cos\", \"cls\"],\n    keywords: COS_KEYWORDS,\n    contains: [\n      NUMBERS,\n      STRINGS,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        className: \"comment\",\n        begin: /;/, end: \"$\",\n        relevance: 0\n      },\n      { // Functions and user-defined functions: write $ztime(60*60*3), $$myFunc(10), $$^Val(1)\n        className: \"built_in\",\n        begin: /(?:\\$\\$?|\\.\\.)\\^?[a-zA-Z]+/\n      },\n      { // Macro command: quit $$$OK\n        className: \"built_in\",\n        begin: /\\$\\$\\$[a-zA-Z]+/\n      },\n      { // Special (global) variables: write %request.Content; Built-in classes: %Library.Integer\n        className: \"built_in\",\n        begin: /%[a-z]+(?:\\.[a-z]+)*/\n      },\n      { // Global variable: set ^globalName = 12 write ^globalName\n        className: \"symbol\",\n        begin: /\\^%?[a-zA-Z][\\w]*/\n      },\n      { // Some control constructions: do ##class(Package.ClassName).Method(), ##super()\n        className: \"keyword\",\n        begin: /##class|##super|#define|#dim/\n      },\n\n      // sub-languages: are not fully supported by hljs by 11/15/2015\n      // left for the future implementation.\n      {\n        begin: /&sql\\(/,    end: /\\)/,\n        excludeBegin: true, excludeEnd: true,\n        subLanguage: \"sql\"\n      },\n      {\n        begin: /&(js|jscript|javascript)</, end: />/,\n        excludeBegin: true, excludeEnd: true,\n        subLanguage: \"javascript\"\n      },\n      {\n        // this brakes first and last tag, but this is the only way to embed a valid html\n        begin: /&html<\\s*</, end: />\\s*>/,\n        subLanguage: \"xml\"\n      }\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/cos.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/cpp.js":
/*!********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/cpp.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var CPP_PRIMITIVE_TYPES = {\n    className: 'keyword',\n    begin: '\\\\b[a-z\\\\d_]*_t\\\\b'\n  };\n\n  var STRINGS = {\n    className: 'string',\n    variants: [\n      {\n        begin: '(u8?|U)?L?\"', end: '\"',\n        illegal: '\\\\n',\n        contains: [hljs.BACKSLASH_ESCAPE]\n      },\n      {\n        begin: '(u8?|U)?R\"', end: '\"',\n        contains: [hljs.BACKSLASH_ESCAPE]\n      },\n      {\n        begin: '\\'\\\\\\\\?.', end: '\\'',\n        illegal: '.'\n      }\n    ]\n  };\n\n  var NUMBERS = {\n    className: 'number',\n    variants: [\n      { begin: '\\\\b(0b[01\\']+)' },\n      { begin: '(-?)\\\\b([\\\\d\\']+(\\\\.[\\\\d\\']*)?|\\\\.[\\\\d\\']+)(u|U|l|L|ul|UL|f|F|b|B)' },\n      { begin: '(-?)(\\\\b0[xX][a-fA-F0-9\\']+|(\\\\b[\\\\d\\']+(\\\\.[\\\\d\\']*)?|\\\\.[\\\\d\\']+)([eE][-+]?[\\\\d\\']+)?)' }\n    ],\n    relevance: 0\n  };\n\n  var PREPROCESSOR =       {\n    className: 'meta',\n    begin: /#\\s*[a-z]+\\b/, end: /$/,\n    keywords: {\n      'meta-keyword':\n        'if else elif endif define undef warning error line ' +\n        'pragma ifdef ifndef include'\n    },\n    contains: [\n      {\n        begin: /\\\\\\n/, relevance: 0\n      },\n      hljs.inherit(STRINGS, {className: 'meta-string'}),\n      {\n        className: 'meta-string',\n        begin: /<[^\\n>]*>/, end: /$/,\n        illegal: '\\\\n',\n      },\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE\n    ]\n  };\n\n  var FUNCTION_TITLE = hljs.IDENT_RE + '\\\\s*\\\\(';\n\n  var CPP_KEYWORDS = {\n    keyword: 'int float while private char catch import module export virtual operator sizeof ' +\n      'dynamic_cast|10 typedef const_cast|10 const for static_cast|10 union namespace ' +\n      'unsigned long volatile static protected bool template mutable if public friend ' +\n      'do goto auto void enum else break extern using asm case typeid ' +\n      'short reinterpret_cast|10 default double register explicit signed typename try this ' +\n      'switch continue inline delete alignof constexpr decltype ' +\n      'noexcept static_assert thread_local restrict _Bool complex _Complex _Imaginary ' +\n      'atomic_bool atomic_char atomic_schar ' +\n      'atomic_uchar atomic_short atomic_ushort atomic_int atomic_uint atomic_long atomic_ulong atomic_llong ' +\n      'atomic_ullong new throw return ' +\n      'and or not',\n    built_in: 'std string cin cout cerr clog stdin stdout stderr stringstream istringstream ostringstream ' +\n      'auto_ptr deque list queue stack vector map set bitset multiset multimap unordered_set ' +\n      'unordered_map unordered_multiset unordered_multimap array shared_ptr abort abs acos ' +\n      'asin atan2 atan calloc ceil cosh cos exit exp fabs floor fmod fprintf fputs free frexp ' +\n      'fscanf isalnum isalpha iscntrl isdigit isgraph islower isprint ispunct isspace isupper ' +\n      'isxdigit tolower toupper labs ldexp log10 log malloc realloc memchr memcmp memcpy memset modf pow ' +\n      'printf putchar puts scanf sinh sin snprintf sprintf sqrt sscanf strcat strchr strcmp ' +\n      'strcpy strcspn strlen strncat strncmp strncpy strpbrk strrchr strspn strstr tanh tan ' +\n      'vfprintf vprintf vsprintf endl initializer_list unique_ptr',\n    literal: 'true false nullptr NULL'\n  };\n\n  var EXPRESSION_CONTAINS = [\n    CPP_PRIMITIVE_TYPES,\n    hljs.C_LINE_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE,\n    NUMBERS,\n    STRINGS\n  ];\n\n  return {\n    aliases: ['c', 'cc', 'h', 'c++', 'h++', 'hpp'],\n    keywords: CPP_KEYWORDS,\n    illegal: '</',\n    contains: EXPRESSION_CONTAINS.concat([\n      PREPROCESSOR,\n      {\n        begin: '\\\\b(deque|list|queue|stack|vector|map|set|bitset|multiset|multimap|unordered_map|unordered_set|unordered_multiset|unordered_multimap|array)\\\\s*<', end: '>',\n        keywords: CPP_KEYWORDS,\n        contains: ['self', CPP_PRIMITIVE_TYPES]\n      },\n      {\n        begin: hljs.IDENT_RE + '::',\n        keywords: CPP_KEYWORDS\n      },\n      {\n        // This mode covers expression context where we can't expect a function\n        // definition and shouldn't highlight anything that looks like one:\n        // `return some()`, `else if()`, `(x*sum(1, 2))`\n        variants: [\n          {begin: /=/, end: /;/},\n          {begin: /\\(/, end: /\\)/},\n          {beginKeywords: 'new throw return else', end: /;/}\n        ],\n        keywords: CPP_KEYWORDS,\n        contains: EXPRESSION_CONTAINS.concat([\n          {\n            begin: /\\(/, end: /\\)/,\n            keywords: CPP_KEYWORDS,\n            contains: EXPRESSION_CONTAINS.concat(['self']),\n            relevance: 0\n          }\n        ]),\n        relevance: 0\n      },\n      {\n        className: 'function',\n        begin: '(' + hljs.IDENT_RE + '[\\\\*&\\\\s]+)+' + FUNCTION_TITLE,\n        returnBegin: true, end: /[{;=]/,\n        excludeEnd: true,\n        keywords: CPP_KEYWORDS,\n        illegal: /[^\\w\\s\\*&]/,\n        contains: [\n          {\n            begin: FUNCTION_TITLE, returnBegin: true,\n            contains: [hljs.TITLE_MODE],\n            relevance: 0\n          },\n          {\n            className: 'params',\n            begin: /\\(/, end: /\\)/,\n            keywords: CPP_KEYWORDS,\n            relevance: 0,\n            contains: [\n              hljs.C_LINE_COMMENT_MODE,\n              hljs.C_BLOCK_COMMENT_MODE,\n              STRINGS,\n              NUMBERS,\n              CPP_PRIMITIVE_TYPES\n            ]\n          },\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          PREPROCESSOR\n        ]\n      },\n      {\n        className: 'class',\n        beginKeywords: 'class struct', end: /[{;:]/,\n        contains: [\n          {begin: /</, end: />/, contains: ['self']}, // skip generic stuff\n          hljs.TITLE_MODE\n        ]\n      }\n    ]),\n    exports: {\n      preprocessor: PREPROCESSOR,\n      strings: STRINGS,\n      keywords: CPP_KEYWORDS\n    }\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/cpp.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/crmsh.js":
/*!**********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/crmsh.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var RESOURCES = 'primitive rsc_template';\n\n  var COMMANDS = 'group clone ms master location colocation order fencing_topology ' +\n      'rsc_ticket acl_target acl_group user role ' +\n      'tag xml';\n\n  var PROPERTY_SETS = 'property rsc_defaults op_defaults';\n\n  var KEYWORDS = 'params meta operations op rule attributes utilization';\n\n  var OPERATORS = 'read write deny defined not_defined in_range date spec in ' +\n      'ref reference attribute type xpath version and or lt gt tag ' +\n      'lte gte eq ne \\\\';\n\n  var TYPES = 'number string';\n\n  var LITERALS = 'Master Started Slave Stopped start promote demote stop monitor true false';\n\n  return {\n    aliases: ['crm', 'pcmk'],\n    case_insensitive: true,\n    keywords: {\n      keyword: KEYWORDS + ' ' + OPERATORS + ' ' + TYPES,\n      literal: LITERALS\n    },\n    contains: [\n      hljs.HASH_COMMENT_MODE,\n      {\n        beginKeywords: 'node',\n        starts: {\n          end: '\\\\s*([\\\\w_-]+:)?',\n          starts: {\n            className: 'title',\n            end: '\\\\s*[\\\\$\\\\w_][\\\\w_-]*'\n          }\n        }\n      },\n      {\n        beginKeywords: RESOURCES,\n        starts: {\n          className: 'title',\n          end: '\\\\s*[\\\\$\\\\w_][\\\\w_-]*',\n          starts: {\n            end: '\\\\s*@?[\\\\w_][\\\\w_\\\\.:-]*'\n          }\n        }\n      },\n      {\n        begin: '\\\\b(' + COMMANDS.split(' ').join('|') + ')\\\\s+',\n        keywords: COMMANDS,\n        starts: {\n          className: 'title',\n          end: '[\\\\$\\\\w_][\\\\w_-]*'\n        }\n      },\n      {\n        beginKeywords: PROPERTY_SETS,\n        starts: {\n          className: 'title',\n          end: '\\\\s*([\\\\w_-]+:)?'\n        }\n      },\n      hljs.QUOTE_STRING_MODE,\n      {\n        className: 'meta',\n        begin: '(ocf|systemd|service|lsb):[\\\\w_:-]+',\n        relevance: 0\n      },\n      {\n        className: 'number',\n        begin: '\\\\b\\\\d+(\\\\.\\\\d+)?(ms|s|h|m)?',\n        relevance: 0\n      },\n      {\n        className: 'literal',\n        begin: '[-]?(infinity|inf)',\n        relevance: 0\n      },\n      {\n        className: 'attr',\n        begin: /([A-Za-z\\$_\\#][\\w_-]+)=/,\n        relevance: 0\n      },\n      {\n        className: 'tag',\n        begin: '</?',\n        end: '/?>',\n        relevance: 0\n      }\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/crmsh.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/crystal.js":
/*!************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/crystal.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var NUM_SUFFIX = '(_[uif](8|16|32|64))?';\n  var CRYSTAL_IDENT_RE = '[a-zA-Z_]\\\\w*[!?=]?';\n  var RE_STARTER = '!=|!==|%|%=|&|&&|&=|\\\\*|\\\\*=|\\\\+|\\\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|' +\n    '>>|>|\\\\[|\\\\{|\\\\(|\\\\^|\\\\^=|\\\\||\\\\|=|\\\\|\\\\||~';\n  var CRYSTAL_METHOD_RE = '[a-zA-Z_]\\\\w*[!?=]?|[-+~]\\\\@|<<|>>|=~|===?|<=>|[<>]=?|\\\\*\\\\*|[-/+%^&*~`|]|\\\\[\\\\][=?]?';\n  var CRYSTAL_KEYWORDS = {\n    keyword:\n      'abstract alias as as? asm begin break case class def do else elsif end ensure enum extend for fun if ' +\n      'include instance_sizeof is_a? lib macro module next nil? of out pointerof private protected rescue responds_to? ' +\n      'return require select self sizeof struct super then type typeof union uninitialized unless until when while with yield ' +\n      '__DIR__ __END_LINE__ __FILE__ __LINE__',\n    literal: 'false nil true'\n  };\n  var SUBST = {\n    className: 'subst',\n    begin: '#{', end: '}',\n    keywords: CRYSTAL_KEYWORDS\n  };\n  var EXPANSION = {\n    className: 'template-variable',\n    variants: [\n      {begin: '\\\\{\\\\{', end: '\\\\}\\\\}'},\n      {begin: '\\\\{%', end: '%\\\\}'}\n    ],\n    keywords: CRYSTAL_KEYWORDS\n  };\n\n  function recursiveParen(begin, end) {\n    var\n    contains = [{begin: begin, end: end}];\n    contains[0].contains = contains;\n    return contains;\n  }\n  var STRING = {\n    className: 'string',\n    contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n    variants: [\n      {begin: /'/, end: /'/},\n      {begin: /\"/, end: /\"/},\n      {begin: /`/, end: /`/},\n      {begin: '%w?\\\\(', end: '\\\\)', contains: recursiveParen('\\\\(', '\\\\)')},\n      {begin: '%w?\\\\[', end: '\\\\]', contains: recursiveParen('\\\\[', '\\\\]')},\n      {begin: '%w?{', end: '}', contains: recursiveParen('{', '}')},\n      {begin: '%w?<', end: '>', contains: recursiveParen('<', '>')},\n      {begin: '%w?/', end: '/'},\n      {begin: '%w?%', end: '%'},\n      {begin: '%w?-', end: '-'},\n      {begin: '%w?\\\\|', end: '\\\\|'},\n      {begin: /<<-\\w+$/, end: /^\\s*\\w+$/},\n    ],\n    relevance: 0,\n  };\n  var Q_STRING = {\n    className: 'string',\n    variants: [\n      {begin: '%q\\\\(', end: '\\\\)', contains: recursiveParen('\\\\(', '\\\\)')},\n      {begin: '%q\\\\[', end: '\\\\]', contains: recursiveParen('\\\\[', '\\\\]')},\n      {begin: '%q{', end: '}', contains: recursiveParen('{', '}')},\n      {begin: '%q<', end: '>', contains: recursiveParen('<', '>')},\n      {begin: '%q/', end: '/'},\n      {begin: '%q%', end: '%'},\n      {begin: '%q-', end: '-'},\n      {begin: '%q\\\\|', end: '\\\\|'},\n      {begin: /<<-'\\w+'$/, end: /^\\s*\\w+$/},\n    ],\n    relevance: 0,\n  };\n  var REGEXP = {\n    begin: '(' + RE_STARTER + ')\\\\s*',\n    contains: [\n      {\n        className: 'regexp',\n        contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n        variants: [\n          {begin: '//[a-z]*', relevance: 0},\n          {begin: '/', end: '/[a-z]*'},\n          {begin: '%r\\\\(', end: '\\\\)', contains: recursiveParen('\\\\(', '\\\\)')},\n          {begin: '%r\\\\[', end: '\\\\]', contains: recursiveParen('\\\\[', '\\\\]')},\n          {begin: '%r{', end: '}', contains: recursiveParen('{', '}')},\n          {begin: '%r<', end: '>', contains: recursiveParen('<', '>')},\n          {begin: '%r/', end: '/'},\n          {begin: '%r%', end: '%'},\n          {begin: '%r-', end: '-'},\n          {begin: '%r\\\\|', end: '\\\\|'},\n        ]\n      }\n    ],\n    relevance: 0\n  };\n  var REGEXP2 = {\n    className: 'regexp',\n    contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n    variants: [\n      {begin: '%r\\\\(', end: '\\\\)', contains: recursiveParen('\\\\(', '\\\\)')},\n      {begin: '%r\\\\[', end: '\\\\]', contains: recursiveParen('\\\\[', '\\\\]')},\n      {begin: '%r{', end: '}', contains: recursiveParen('{', '}')},\n      {begin: '%r<', end: '>', contains: recursiveParen('<', '>')},\n      {begin: '%r/', end: '/'},\n      {begin: '%r%', end: '%'},\n      {begin: '%r-', end: '-'},\n      {begin: '%r\\\\|', end: '\\\\|'},\n    ],\n    relevance: 0\n  };\n  var ATTRIBUTE = {\n    className: 'meta',\n    begin: '@\\\\[', end: '\\\\]',\n    contains: [\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {className: 'meta-string'})\n    ]\n  };\n  var CRYSTAL_DEFAULT_CONTAINS = [\n    EXPANSION,\n    STRING,\n    Q_STRING,\n    REGEXP,\n    REGEXP2,\n    ATTRIBUTE,\n    hljs.HASH_COMMENT_MODE,\n    {\n      className: 'class',\n      beginKeywords: 'class module struct', end: '$|;',\n      illegal: /=/,\n      contains: [\n        hljs.HASH_COMMENT_MODE,\n        hljs.inherit(hljs.TITLE_MODE, {begin: '[A-Za-z_]\\\\w*(::\\\\w+)*(\\\\?|\\\\!)?'}),\n        {begin: '<'} // relevance booster for inheritance\n      ]\n    },\n    {\n      className: 'class',\n      beginKeywords: 'lib enum union', end: '$|;',\n      illegal: /=/,\n      contains: [\n        hljs.HASH_COMMENT_MODE,\n        hljs.inherit(hljs.TITLE_MODE, {begin: '[A-Za-z_]\\\\w*(::\\\\w+)*(\\\\?|\\\\!)?'}),\n      ],\n      relevance: 10\n    },\n    {\n      className: 'function',\n      beginKeywords: 'def', end: /\\B\\b/,\n      contains: [\n        hljs.inherit(hljs.TITLE_MODE, {\n          begin: CRYSTAL_METHOD_RE,\n          endsParent: true\n        })\n      ]\n    },\n    {\n      className: 'function',\n      beginKeywords: 'fun macro', end: /\\B\\b/,\n      contains: [\n        hljs.inherit(hljs.TITLE_MODE, {\n          begin: CRYSTAL_METHOD_RE,\n          endsParent: true\n        })\n      ],\n      relevance: 5\n    },\n    {\n      className: 'symbol',\n      begin: hljs.UNDERSCORE_IDENT_RE + '(\\\\!|\\\\?)?:',\n      relevance: 0\n    },\n    {\n      className: 'symbol',\n      begin: ':',\n      contains: [STRING, {begin: CRYSTAL_METHOD_RE}],\n      relevance: 0\n    },\n    {\n      className: 'number',\n      variants: [\n        { begin: '\\\\b0b([01_]*[01])' + NUM_SUFFIX },\n        { begin: '\\\\b0o([0-7_]*[0-7])' + NUM_SUFFIX },\n        { begin: '\\\\b0x([A-Fa-f0-9_]*[A-Fa-f0-9])' + NUM_SUFFIX },\n        { begin: '\\\\b(([0-9][0-9_]*[0-9]|[0-9])(\\\\.[0-9_]*[0-9])?([eE][+-]?[0-9_]*[0-9])?)' + NUM_SUFFIX}\n      ],\n      relevance: 0\n    }\n  ];\n  SUBST.contains = CRYSTAL_DEFAULT_CONTAINS;\n  EXPANSION.contains = CRYSTAL_DEFAULT_CONTAINS.slice(1); // without EXPANSION\n\n  return {\n    aliases: ['cr'],\n    lexemes: CRYSTAL_IDENT_RE,\n    keywords: CRYSTAL_KEYWORDS,\n    contains: CRYSTAL_DEFAULT_CONTAINS\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/crystal.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/cs.js":
/*!*******************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/cs.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var KEYWORDS = {\n    keyword:\n      // Normal keywords.\n      'abstract as base bool break byte case catch char checked const continue decimal ' +\n      'default delegate do double enum event explicit extern finally fixed float ' +\n      'for foreach goto if implicit in int interface internal is lock long nameof ' +\n      'object operator out override params private protected public readonly ref sbyte ' +\n      'sealed short sizeof stackalloc static string struct switch this try typeof ' +\n      'uint ulong unchecked unsafe ushort using virtual void volatile while ' +\n      // Contextual keywords.\n      'add alias ascending async await by descending dynamic equals from get global group into join ' +\n      'let on orderby partial remove select set value var where yield',\n    literal:\n      'null false true'\n  };\n\n  var VERBATIM_STRING = {\n    className: 'string',\n    begin: '@\"', end: '\"',\n    contains: [{begin: '\"\"'}]\n  };\n  var VERBATIM_STRING_NO_LF = hljs.inherit(VERBATIM_STRING, {illegal: /\\n/});\n  var SUBST = {\n    className: 'subst',\n    begin: '{', end: '}',\n    keywords: KEYWORDS\n  };\n  var SUBST_NO_LF = hljs.inherit(SUBST, {illegal: /\\n/});\n  var INTERPOLATED_STRING = {\n    className: 'string',\n    begin: /\\$\"/, end: '\"',\n    illegal: /\\n/,\n    contains: [{begin: '{{'}, {begin: '}}'}, hljs.BACKSLASH_ESCAPE, SUBST_NO_LF]\n  };\n  var INTERPOLATED_VERBATIM_STRING = {\n    className: 'string',\n    begin: /\\$@\"/, end: '\"',\n    contains: [{begin: '{{'}, {begin: '}}'}, {begin: '\"\"'}, SUBST]\n  };\n  var INTERPOLATED_VERBATIM_STRING_NO_LF = hljs.inherit(INTERPOLATED_VERBATIM_STRING, {\n    illegal: /\\n/,\n    contains: [{begin: '{{'}, {begin: '}}'}, {begin: '\"\"'}, SUBST_NO_LF]\n  });\n  SUBST.contains = [\n    INTERPOLATED_VERBATIM_STRING,\n    INTERPOLATED_STRING,\n    VERBATIM_STRING,\n    hljs.APOS_STRING_MODE,\n    hljs.QUOTE_STRING_MODE,\n    hljs.C_NUMBER_MODE,\n    hljs.C_BLOCK_COMMENT_MODE\n  ];\n  SUBST_NO_LF.contains = [\n    INTERPOLATED_VERBATIM_STRING_NO_LF,\n    INTERPOLATED_STRING,\n    VERBATIM_STRING_NO_LF,\n    hljs.APOS_STRING_MODE,\n    hljs.QUOTE_STRING_MODE,\n    hljs.C_NUMBER_MODE,\n    hljs.inherit(hljs.C_BLOCK_COMMENT_MODE, {illegal: /\\n/})\n  ];\n  var STRING = {\n    variants: [\n      INTERPOLATED_VERBATIM_STRING,\n      INTERPOLATED_STRING,\n      VERBATIM_STRING,\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE\n    ]\n  };\n\n  var TYPE_IDENT_RE = hljs.IDENT_RE + '(<' + hljs.IDENT_RE + '(\\\\s*,\\\\s*' + hljs.IDENT_RE + ')*>)?(\\\\[\\\\])?';\n\n  return {\n    aliases: ['csharp'],\n    keywords: KEYWORDS,\n    illegal: /::/,\n    contains: [\n      hljs.COMMENT(\n        '///',\n        '$',\n        {\n          returnBegin: true,\n          contains: [\n            {\n              className: 'doctag',\n              variants: [\n                {\n                  begin: '///', relevance: 0\n                },\n                {\n                  begin: '<!--|-->'\n                },\n                {\n                  begin: '</?', end: '>'\n                }\n              ]\n            }\n          ]\n        }\n      ),\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        className: 'meta',\n        begin: '#', end: '$',\n        keywords: {\n          'meta-keyword': 'if else elif endif define undef warning error line region endregion pragma checksum'\n        }\n      },\n      STRING,\n      hljs.C_NUMBER_MODE,\n      {\n        beginKeywords: 'class interface', end: /[{;=]/,\n        illegal: /[^\\s:]/,\n        contains: [\n          hljs.TITLE_MODE,\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      },\n      {\n        beginKeywords: 'namespace', end: /[{;=]/,\n        illegal: /[^\\s:]/,\n        contains: [\n          hljs.inherit(hljs.TITLE_MODE, {begin: '[a-zA-Z](\\\\.?\\\\w)*'}),\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      },\n      {\n        // [Attributes(\"\")]\n        className: 'meta',\n        begin: '^\\\\s*\\\\[', excludeBegin: true, end: '\\\\]', excludeEnd: true,\n        contains: [\n          {className: 'meta-string', begin: /\"/, end: /\"/}\n        ]\n      },\n      {\n        // Expression keywords prevent 'keyword Name(...)' from being\n        // recognized as a function definition\n        beginKeywords: 'new return throw await else',\n        relevance: 0\n      },\n      {\n        className: 'function',\n        begin: '(' + TYPE_IDENT_RE + '\\\\s+)+' + hljs.IDENT_RE + '\\\\s*\\\\(', returnBegin: true,\n        end: /[{;=]/, excludeEnd: true,\n        keywords: KEYWORDS,\n        contains: [\n          {\n            begin: hljs.IDENT_RE + '\\\\s*\\\\(', returnBegin: true,\n            contains: [hljs.TITLE_MODE],\n            relevance: 0\n          },\n          {\n            className: 'params',\n            begin: /\\(/, end: /\\)/,\n            excludeBegin: true,\n            excludeEnd: true,\n            keywords: KEYWORDS,\n            relevance: 0,\n            contains: [\n              STRING,\n              hljs.C_NUMBER_MODE,\n              hljs.C_BLOCK_COMMENT_MODE\n            ]\n          },\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      }\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/cs.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/csp.js":
/*!********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/csp.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  return {\n    case_insensitive: false,\n    lexemes: '[a-zA-Z][a-zA-Z0-9_-]*',\n    keywords: {\n      keyword: 'base-uri child-src connect-src default-src font-src form-action' +\n        ' frame-ancestors frame-src img-src media-src object-src plugin-types' +\n        ' report-uri sandbox script-src style-src', \n    },\n    contains: [\n    {\n      className: 'string',\n      begin: \"'\", end: \"'\"\n    },\n    {\n      className: 'attribute',\n      begin: '^Content', end: ':', excludeEnd: true,\n    },\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/csp.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/css.js":
/*!********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/css.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var IDENT_RE = '[a-zA-Z-][a-zA-Z0-9_-]*';\n  var RULE = {\n    begin: /[A-Z\\_\\.\\-]+\\s*:/, returnBegin: true, end: ';', endsWithParent: true,\n    contains: [\n      {\n        className: 'attribute',\n        begin: /\\S/, end: ':', excludeEnd: true,\n        starts: {\n          endsWithParent: true, excludeEnd: true,\n          contains: [\n            {\n              begin: /[\\w-]+\\(/, returnBegin: true,\n              contains: [\n                {\n                  className: 'built_in',\n                  begin: /[\\w-]+/\n                },\n                {\n                  begin: /\\(/, end: /\\)/,\n                  contains: [\n                    hljs.APOS_STRING_MODE,\n                    hljs.QUOTE_STRING_MODE\n                  ]\n                }\n              ]\n            },\n            hljs.CSS_NUMBER_MODE,\n            hljs.QUOTE_STRING_MODE,\n            hljs.APOS_STRING_MODE,\n            hljs.C_BLOCK_COMMENT_MODE,\n            {\n              className: 'number', begin: '#[0-9A-Fa-f]+'\n            },\n            {\n              className: 'meta', begin: '!important'\n            }\n          ]\n        }\n      }\n    ]\n  };\n\n  return {\n    case_insensitive: true,\n    illegal: /[=\\/|'\\$]/,\n    contains: [\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        className: 'selector-id', begin: /#[A-Za-z0-9_-]+/\n      },\n      {\n        className: 'selector-class', begin: /\\.[A-Za-z0-9_-]+/\n      },\n      {\n        className: 'selector-attr',\n        begin: /\\[/, end: /\\]/,\n        illegal: '$'\n      },\n      {\n        className: 'selector-pseudo',\n        begin: /:(:)?[a-zA-Z0-9\\_\\-\\+\\(\\)\"'.]+/\n      },\n      {\n        begin: '@(font-face|page)',\n        lexemes: '[a-z-]+',\n        keywords: 'font-face page'\n      },\n      {\n        begin: '@', end: '[{;]', // at_rule eating first \"{\" is a good thing\n                                 // because it doesn’t let it to be parsed as\n                                 // a rule set but instead drops parser into\n                                 // the default mode which is how it should be.\n        illegal: /:/, // break on Less variables @var: ...\n        contains: [\n          {\n            className: 'keyword',\n            begin: /\\w+/\n          },\n          {\n            begin: /\\s/, endsWithParent: true, excludeEnd: true,\n            relevance: 0,\n            contains: [\n              hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE,\n              hljs.CSS_NUMBER_MODE\n            ]\n          }\n        ]\n      },\n      {\n        className: 'selector-tag', begin: IDENT_RE,\n        relevance: 0\n      },\n      {\n        begin: '{', end: '}',\n        illegal: /\\S/,\n        contains: [\n          hljs.C_BLOCK_COMMENT_MODE,\n          RULE,\n        ]\n      }\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/css.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/d.js":
/*!******************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/d.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = /**\n * Known issues:\n *\n * - invalid hex string literals will be recognized as a double quoted strings\n *   but 'x' at the beginning of string will not be matched\n *\n * - delimited string literals are not checked for matching end delimiter\n *   (not possible to do with js regexp)\n *\n * - content of token string is colored as a string (i.e. no keyword coloring inside a token string)\n *   also, content of token string is not validated to contain only valid D tokens\n *\n * - special token sequence rule is not strictly following D grammar (anything following #line\n *   up to the end of line is matched as special token sequence)\n */\n\nfunction(hljs) {\n  /**\n   * Language keywords\n   *\n   * @type {Object}\n   */\n  var D_KEYWORDS = {\n    keyword:\n      'abstract alias align asm assert auto body break byte case cast catch class ' +\n      'const continue debug default delete deprecated do else enum export extern final ' +\n      'finally for foreach foreach_reverse|10 goto if immutable import in inout int ' +\n      'interface invariant is lazy macro mixin module new nothrow out override package ' +\n      'pragma private protected public pure ref return scope shared static struct ' +\n      'super switch synchronized template this throw try typedef typeid typeof union ' +\n      'unittest version void volatile while with __FILE__ __LINE__ __gshared|10 ' +\n      '__thread __traits __DATE__ __EOF__ __TIME__ __TIMESTAMP__ __VENDOR__ __VERSION__',\n    built_in:\n      'bool cdouble cent cfloat char creal dchar delegate double dstring float function ' +\n      'idouble ifloat ireal long real short string ubyte ucent uint ulong ushort wchar ' +\n      'wstring',\n    literal:\n      'false null true'\n  };\n\n  /**\n   * Number literal regexps\n   *\n   * @type {String}\n   */\n  var decimal_integer_re = '(0|[1-9][\\\\d_]*)',\n    decimal_integer_nosus_re = '(0|[1-9][\\\\d_]*|\\\\d[\\\\d_]*|[\\\\d_]+?\\\\d)',\n    binary_integer_re = '0[bB][01_]+',\n    hexadecimal_digits_re = '([\\\\da-fA-F][\\\\da-fA-F_]*|_[\\\\da-fA-F][\\\\da-fA-F_]*)',\n    hexadecimal_integer_re = '0[xX]' + hexadecimal_digits_re,\n\n    decimal_exponent_re = '([eE][+-]?' + decimal_integer_nosus_re + ')',\n    decimal_float_re = '(' + decimal_integer_nosus_re + '(\\\\.\\\\d*|' + decimal_exponent_re + ')|' +\n                '\\\\d+\\\\.' + decimal_integer_nosus_re + decimal_integer_nosus_re + '|' +\n                '\\\\.' + decimal_integer_re + decimal_exponent_re + '?' +\n              ')',\n    hexadecimal_float_re = '(0[xX](' +\n                  hexadecimal_digits_re + '\\\\.' + hexadecimal_digits_re + '|'+\n                  '\\\\.?' + hexadecimal_digits_re +\n                 ')[pP][+-]?' + decimal_integer_nosus_re + ')',\n\n    integer_re = '(' +\n      decimal_integer_re + '|' +\n      binary_integer_re  + '|' +\n       hexadecimal_integer_re   +\n    ')',\n\n    float_re = '(' +\n      hexadecimal_float_re + '|' +\n      decimal_float_re  +\n    ')';\n\n  /**\n   * Escape sequence supported in D string and character literals\n   *\n   * @type {String}\n   */\n  var escape_sequence_re = '\\\\\\\\(' +\n              '[\\'\"\\\\?\\\\\\\\abfnrtv]|' +  // common escapes\n              'u[\\\\dA-Fa-f]{4}|' +     // four hex digit unicode codepoint\n              '[0-7]{1,3}|' +       // one to three octal digit ascii char code\n              'x[\\\\dA-Fa-f]{2}|' +    // two hex digit ascii char code\n              'U[\\\\dA-Fa-f]{8}' +      // eight hex digit unicode codepoint\n              ')|' +\n              '&[a-zA-Z\\\\d]{2,};';      // named character entity\n\n  /**\n   * D integer number literals\n   *\n   * @type {Object}\n   */\n  var D_INTEGER_MODE = {\n    className: 'number',\n      begin: '\\\\b' + integer_re + '(L|u|U|Lu|LU|uL|UL)?',\n      relevance: 0\n  };\n\n  /**\n   * [D_FLOAT_MODE description]\n   * @type {Object}\n   */\n  var D_FLOAT_MODE = {\n    className: 'number',\n    begin: '\\\\b(' +\n        float_re + '([fF]|L|i|[fF]i|Li)?|' +\n        integer_re + '(i|[fF]i|Li)' +\n      ')',\n    relevance: 0\n  };\n\n  /**\n   * D character literal\n   *\n   * @type {Object}\n   */\n  var D_CHARACTER_MODE = {\n    className: 'string',\n    begin: '\\'(' + escape_sequence_re + '|.)', end: '\\'',\n    illegal: '.'\n  };\n\n  /**\n   * D string escape sequence\n   *\n   * @type {Object}\n   */\n  var D_ESCAPE_SEQUENCE = {\n    begin: escape_sequence_re,\n    relevance: 0\n  };\n\n  /**\n   * D double quoted string literal\n   *\n   * @type {Object}\n   */\n  var D_STRING_MODE = {\n    className: 'string',\n    begin: '\"',\n    contains: [D_ESCAPE_SEQUENCE],\n    end: '\"[cwd]?'\n  };\n\n  /**\n   * D wysiwyg and delimited string literals\n   *\n   * @type {Object}\n   */\n  var D_WYSIWYG_DELIMITED_STRING_MODE = {\n    className: 'string',\n    begin: '[rq]\"',\n    end: '\"[cwd]?',\n    relevance: 5\n  };\n\n  /**\n   * D alternate wysiwyg string literal\n   *\n   * @type {Object}\n   */\n  var D_ALTERNATE_WYSIWYG_STRING_MODE = {\n    className: 'string',\n    begin: '`',\n    end: '`[cwd]?'\n  };\n\n  /**\n   * D hexadecimal string literal\n   *\n   * @type {Object}\n   */\n  var D_HEX_STRING_MODE = {\n    className: 'string',\n    begin: 'x\"[\\\\da-fA-F\\\\s\\\\n\\\\r]*\"[cwd]?',\n    relevance: 10\n  };\n\n  /**\n   * D delimited string literal\n   *\n   * @type {Object}\n   */\n  var D_TOKEN_STRING_MODE = {\n    className: 'string',\n    begin: 'q\"\\\\{',\n    end: '\\\\}\"'\n  };\n\n  /**\n   * Hashbang support\n   *\n   * @type {Object}\n   */\n  var D_HASHBANG_MODE = {\n    className: 'meta',\n    begin: '^#!',\n    end: '$',\n    relevance: 5\n  };\n\n  /**\n   * D special token sequence\n   *\n   * @type {Object}\n   */\n  var D_SPECIAL_TOKEN_SEQUENCE_MODE = {\n    className: 'meta',\n    begin: '#(line)',\n    end: '$',\n    relevance: 5\n  };\n\n  /**\n   * D attributes\n   *\n   * @type {Object}\n   */\n  var D_ATTRIBUTE_MODE = {\n    className: 'keyword',\n    begin: '@[a-zA-Z_][a-zA-Z_\\\\d]*'\n  };\n\n  /**\n   * D nesting comment\n   *\n   * @type {Object}\n   */\n  var D_NESTING_COMMENT_MODE = hljs.COMMENT(\n    '\\\\/\\\\+',\n    '\\\\+\\\\/',\n    {\n      contains: ['self'],\n      relevance: 10\n    }\n  );\n\n  return {\n    lexemes: hljs.UNDERSCORE_IDENT_RE,\n    keywords: D_KEYWORDS,\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n        hljs.C_BLOCK_COMMENT_MODE,\n        D_NESTING_COMMENT_MODE,\n        D_HEX_STRING_MODE,\n        D_STRING_MODE,\n        D_WYSIWYG_DELIMITED_STRING_MODE,\n        D_ALTERNATE_WYSIWYG_STRING_MODE,\n        D_TOKEN_STRING_MODE,\n        D_FLOAT_MODE,\n        D_INTEGER_MODE,\n        D_CHARACTER_MODE,\n        D_HASHBANG_MODE,\n        D_SPECIAL_TOKEN_SEQUENCE_MODE,\n        D_ATTRIBUTE_MODE\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/d.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/dart.js":
/*!*********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/dart.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function (hljs) {\n  var SUBST = {\n    className: 'subst',\n    begin: '\\\\$\\\\{', end: '}',\n    keywords: 'true false null this is new super'\n  };\n\n  var STRING = {\n    className: 'string',\n    variants: [\n      {\n        begin: 'r\\'\\'\\'', end: '\\'\\'\\''\n      },\n      {\n        begin: 'r\"\"\"', end: '\"\"\"'\n      },\n      {\n        begin: 'r\\'', end: '\\'',\n        illegal: '\\\\n'\n      },\n      {\n        begin: 'r\"', end: '\"',\n        illegal: '\\\\n'\n      },\n      {\n        begin: '\\'\\'\\'', end: '\\'\\'\\'',\n        contains: [hljs.BACKSLASH_ESCAPE, SUBST]\n      },\n      {\n        begin: '\"\"\"', end: '\"\"\"',\n        contains: [hljs.BACKSLASH_ESCAPE, SUBST]\n      },\n      {\n        begin: '\\'', end: '\\'',\n        illegal: '\\\\n',\n        contains: [hljs.BACKSLASH_ESCAPE, SUBST]\n      },\n      {\n        begin: '\"', end: '\"',\n        illegal: '\\\\n',\n        contains: [hljs.BACKSLASH_ESCAPE, SUBST]\n      }\n    ]\n  };\n  SUBST.contains = [\n    hljs.C_NUMBER_MODE, STRING\n  ];\n\n  var KEYWORDS = {\n    keyword: 'assert async await break case catch class const continue default do else enum extends false final ' +\n      'finally for if in is new null rethrow return super switch sync this throw true try var void while with yield ' +\n      'abstract as dynamic export external factory get implements import library operator part set static typedef',\n    built_in:\n      // dart:core\n      'print Comparable DateTime Duration Function Iterable Iterator List Map Match Null Object Pattern RegExp Set ' +\n      'Stopwatch String StringBuffer StringSink Symbol Type Uri bool double int num ' +\n      // dart:html\n      'document window querySelector querySelectorAll Element ElementList'\n  };\n\n  return {\n    keywords: KEYWORDS,\n    contains: [\n      STRING,\n      hljs.COMMENT(\n        '/\\\\*\\\\*',\n        '\\\\*/',\n        {\n          subLanguage: 'markdown'\n        }\n      ),\n      hljs.COMMENT(\n        '///',\n        '$',\n        {\n          subLanguage: 'markdown'\n        }\n      ),\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        className: 'class',\n        beginKeywords: 'class interface', end: '{', excludeEnd: true,\n        contains: [\n          {\n            beginKeywords: 'extends implements'\n          },\n          hljs.UNDERSCORE_TITLE_MODE\n        ]\n      },\n      hljs.C_NUMBER_MODE,\n      {\n        className: 'meta', begin: '@[A-Za-z]+'\n      },\n      {\n        begin: '=>' // No markup, just a relevance booster\n      }\n    ]\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/dart.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/delphi.js":
/*!***********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/delphi.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var KEYWORDS =\n    'exports register file shl array record property for mod while set ally label uses raise not ' +\n    'stored class safecall var interface or private static exit index inherited to else stdcall ' +\n    'override shr asm far resourcestring finalization packed virtual out and protected library do ' +\n    'xorwrite goto near function end div overload object unit begin string on inline repeat until ' +\n    'destructor write message program with read initialization except default nil if case cdecl in ' +\n    'downto threadvar of try pascal const external constructor type public then implementation ' +\n    'finally published procedure absolute reintroduce operator as is abstract alias assembler ' +\n    'bitpacked break continue cppdecl cvar enumerator experimental platform deprecated ' +\n    'unimplemented dynamic export far16 forward generic helper implements interrupt iochecks ' +\n    'local name nodefault noreturn nostackframe oldfpccall otherwise saveregisters softfloat ' +\n    'specialize strict unaligned varargs ';\n  var COMMENT_MODES = [\n    hljs.C_LINE_COMMENT_MODE,\n    hljs.COMMENT(/\\{/, /\\}/, {relevance: 0}),\n    hljs.COMMENT(/\\(\\*/, /\\*\\)/, {relevance: 10})\n  ];\n  var DIRECTIVE = {\n    className: 'meta',\n    variants: [\n      {begin: /\\{\\$/, end: /\\}/},\n      {begin: /\\(\\*\\$/, end: /\\*\\)/}\n    ]\n  };\n  var STRING = {\n    className: 'string',\n    begin: /'/, end: /'/,\n    contains: [{begin: /''/}]\n  };\n  var CHAR_STRING = {\n    className: 'string', begin: /(#\\d+)+/\n  };\n  var CLASS = {\n    begin: hljs.IDENT_RE + '\\\\s*=\\\\s*class\\\\s*\\\\(', returnBegin: true,\n    contains: [\n      hljs.TITLE_MODE\n    ]\n  };\n  var FUNCTION = {\n    className: 'function',\n    beginKeywords: 'function constructor destructor procedure', end: /[:;]/,\n    keywords: 'function constructor|10 destructor|10 procedure|10',\n    contains: [\n      hljs.TITLE_MODE,\n      {\n        className: 'params',\n        begin: /\\(/, end: /\\)/,\n        keywords: KEYWORDS,\n        contains: [STRING, CHAR_STRING, DIRECTIVE].concat(COMMENT_MODES)\n      },\n      DIRECTIVE\n    ].concat(COMMENT_MODES)\n  };\n  return {\n    aliases: ['dpr', 'dfm', 'pas', 'pascal', 'freepascal', 'lazarus', 'lpr', 'lfm'],\n    case_insensitive: true,\n    keywords: KEYWORDS,\n    illegal: /\"|\\$[G-Zg-z]|\\/\\*|<\\/|\\|/,\n    contains: [\n      STRING, CHAR_STRING,\n      hljs.NUMBER_MODE,\n      CLASS,\n      FUNCTION,\n      DIRECTIVE\n    ].concat(COMMENT_MODES)\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/delphi.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/diff.js":
/*!*********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/diff.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  return {\n    aliases: ['patch'],\n    contains: [\n      {\n        className: 'meta',\n        relevance: 10,\n        variants: [\n          {begin: /^@@ +\\-\\d+,\\d+ +\\+\\d+,\\d+ +@@$/},\n          {begin: /^\\*\\*\\* +\\d+,\\d+ +\\*\\*\\*\\*$/},\n          {begin: /^\\-\\-\\- +\\d+,\\d+ +\\-\\-\\-\\-$/}\n        ]\n      },\n      {\n        className: 'comment',\n        variants: [\n          {begin: /Index: /, end: /$/},\n          {begin: /={3,}/, end: /$/},\n          {begin: /^\\-{3}/, end: /$/},\n          {begin: /^\\*{3} /, end: /$/},\n          {begin: /^\\+{3}/, end: /$/},\n          {begin: /\\*{5}/, end: /\\*{5}$/}\n        ]\n      },\n      {\n        className: 'addition',\n        begin: '^\\\\+', end: '$'\n      },\n      {\n        className: 'deletion',\n        begin: '^\\\\-', end: '$'\n      },\n      {\n        className: 'addition',\n        begin: '^\\\\!', end: '$'\n      }\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/diff.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/django.js":
/*!***********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/django.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var FILTER = {\n    begin: /\\|[A-Za-z]+:?/,\n    keywords: {\n      name:\n        'truncatewords removetags linebreaksbr yesno get_digit timesince random striptags ' +\n        'filesizeformat escape linebreaks length_is ljust rjust cut urlize fix_ampersands ' +\n        'title floatformat capfirst pprint divisibleby add make_list unordered_list urlencode ' +\n        'timeuntil urlizetrunc wordcount stringformat linenumbers slice date dictsort ' +\n        'dictsortreversed default_if_none pluralize lower join center default ' +\n        'truncatewords_html upper length phone2numeric wordwrap time addslashes slugify first ' +\n        'escapejs force_escape iriencode last safe safeseq truncatechars localize unlocalize ' +\n        'localtime utc timezone'\n    },\n    contains: [\n      hljs.QUOTE_STRING_MODE,\n      hljs.APOS_STRING_MODE\n    ]\n  };\n\n  return {\n    aliases: ['jinja'],\n    case_insensitive: true,\n    subLanguage: 'xml',\n    contains: [\n      hljs.COMMENT(/\\{%\\s*comment\\s*%}/, /\\{%\\s*endcomment\\s*%}/),\n      hljs.COMMENT(/\\{#/, /#}/),\n      {\n        className: 'template-tag',\n        begin: /\\{%/, end: /%}/,\n        contains: [\n          {\n            className: 'name',\n            begin: /\\w+/,\n            keywords: {\n              name:\n                'comment endcomment load templatetag ifchanged endifchanged if endif firstof for ' +\n                'endfor ifnotequal endifnotequal widthratio extends include spaceless ' +\n                'endspaceless regroup ifequal endifequal ssi now with cycle url filter ' +\n                'endfilter debug block endblock else autoescape endautoescape csrf_token empty elif ' +\n                'endwith static trans blocktrans endblocktrans get_static_prefix get_media_prefix ' +\n                'plural get_current_language language get_available_languages ' +\n                'get_current_language_bidi get_language_info get_language_info_list localize ' +\n                'endlocalize localtime endlocaltime timezone endtimezone get_current_timezone ' +\n                'verbatim'\n            },\n            starts: {\n              endsWithParent: true,\n              keywords: 'in by as',\n              contains: [FILTER],\n              relevance: 0\n            }\n          }\n        ]\n      },\n      {\n        className: 'template-variable',\n        begin: /\\{\\{/, end: /}}/,\n        contains: [FILTER]\n      }\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/django.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/dns.js":
/*!********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/dns.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  return {\n    aliases: ['bind', 'zone'],\n    keywords: {\n      keyword:\n        'IN A AAAA AFSDB APL CAA CDNSKEY CDS CERT CNAME DHCID DLV DNAME DNSKEY DS HIP IPSECKEY KEY KX ' +\n        'LOC MX NAPTR NS NSEC NSEC3 NSEC3PARAM PTR RRSIG RP SIG SOA SRV SSHFP TA TKEY TLSA TSIG TXT'\n    },\n    contains: [\n      hljs.COMMENT(';', '$', {relevance: 0}),\n      {\n        className: 'meta',\n        begin: /^\\$(TTL|GENERATE|INCLUDE|ORIGIN)\\b/\n      },\n      // IPv6\n      {\n        className: 'number',\n        begin: '((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:)))\\\\b'\n      },\n      // IPv4\n      {\n        className: 'number',\n        begin: '((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\\\b'\n      },\n      hljs.inherit(hljs.NUMBER_MODE, {begin: /\\b\\d+[dhwm]?/})\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/dns.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/dockerfile.js":
/*!***************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/dockerfile.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  return {\n    aliases: ['docker'],\n    case_insensitive: true,\n    keywords: 'from maintainer expose env arg user onbuild stopsignal',\n    contains: [\n      hljs.HASH_COMMENT_MODE,\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.NUMBER_MODE,\n      {\n        beginKeywords: 'run cmd entrypoint volume add copy workdir label healthcheck shell',\n        starts: {\n          end: /[^\\\\]\\n/,\n          subLanguage: 'bash'\n        }\n      }\n    ],\n    illegal: '</'\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/dockerfile.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/dos.js":
/*!********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/dos.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var COMMENT = hljs.COMMENT(\n    /^\\s*@?rem\\b/, /$/,\n    {\n      relevance: 10\n    }\n  );\n  var LABEL = {\n    className: 'symbol',\n    begin: '^\\\\s*[A-Za-z._?][A-Za-z0-9_$#@~.?]*(:|\\\\s+label)',\n    relevance: 0\n  };\n  return {\n    aliases: ['bat', 'cmd'],\n    case_insensitive: true,\n    illegal: /\\/\\*/,\n    keywords: {\n      keyword:\n        'if else goto for in do call exit not exist errorlevel defined ' +\n        'equ neq lss leq gtr geq',\n      built_in:\n        'prn nul lpt3 lpt2 lpt1 con com4 com3 com2 com1 aux ' +\n        'shift cd dir echo setlocal endlocal set pause copy ' +\n        'append assoc at attrib break cacls cd chcp chdir chkdsk chkntfs cls cmd color ' +\n        'comp compact convert date dir diskcomp diskcopy doskey erase fs ' +\n        'find findstr format ftype graftabl help keyb label md mkdir mode more move path ' +\n        'pause print popd pushd promt rd recover rem rename replace restore rmdir shift' +\n        'sort start subst time title tree type ver verify vol ' +\n        // winutils\n        'ping net ipconfig taskkill xcopy ren del'\n    },\n    contains: [\n      {\n        className: 'variable', begin: /%%[^ ]|%[^ ]+?%|![^ ]+?!/\n      },\n      {\n        className: 'function',\n        begin: LABEL.begin, end: 'goto:eof',\n        contains: [\n          hljs.inherit(hljs.TITLE_MODE, {begin: '([_a-zA-Z]\\\\w*\\\\.)*([_a-zA-Z]\\\\w*:)?[_a-zA-Z]\\\\w*'}),\n          COMMENT\n        ]\n      },\n      {\n        className: 'number', begin: '\\\\b\\\\d+',\n        relevance: 0\n      },\n      COMMENT\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/dos.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/dsconfig.js":
/*!*************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/dsconfig.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var QUOTED_PROPERTY = {\n    className: 'string',\n    begin: /\"/, end: /\"/\n  };\n  var APOS_PROPERTY = {\n    className: 'string',\n    begin: /'/, end: /'/\n  };\n  var UNQUOTED_PROPERTY = {\n    className: 'string',\n    begin: '[\\\\w-?]+:\\\\w+', end: '\\\\W',\n    relevance: 0\n  };\n  var VALUELESS_PROPERTY = {\n    className: 'string',\n    begin: '\\\\w+-?\\\\w+', end: '\\\\W',\n    relevance: 0\n  };\n\n  return {\n    keywords: 'dsconfig',\n    contains: [\n      {\n        className: 'keyword',\n        begin: '^dsconfig', end: '\\\\s', excludeEnd: true,\n        relevance: 10\n      },\n      {\n        className: 'built_in',\n        begin: '(list|create|get|set|delete)-(\\\\w+)', end: '\\\\s', excludeEnd: true,\n        illegal: '!@#$%^&*()',\n        relevance: 10\n      },\n      {\n        className: 'built_in',\n        begin: '--(\\\\w+)', end: '\\\\s', excludeEnd: true\n      },\n      QUOTED_PROPERTY,\n      APOS_PROPERTY,\n      UNQUOTED_PROPERTY,\n      VALUELESS_PROPERTY,\n      hljs.HASH_COMMENT_MODE\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/dsconfig.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/dts.js":
/*!********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/dts.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var STRINGS = {\n    className: 'string',\n    variants: [\n      hljs.inherit(hljs.QUOTE_STRING_MODE, { begin: '((u8?|U)|L)?\"' }),\n      {\n        begin: '(u8?|U)?R\"', end: '\"',\n        contains: [hljs.BACKSLASH_ESCAPE]\n      },\n      {\n        begin: '\\'\\\\\\\\?.', end: '\\'',\n        illegal: '.'\n      }\n    ]\n  };\n\n  var NUMBERS = {\n    className: 'number',\n    variants: [\n      { begin: '\\\\b(\\\\d+(\\\\.\\\\d*)?|\\\\.\\\\d+)(u|U|l|L|ul|UL|f|F)' },\n      { begin: hljs.C_NUMBER_RE }\n    ],\n    relevance: 0\n  };\n\n  var PREPROCESSOR = {\n    className: 'meta',\n    begin: '#', end: '$',\n    keywords: {'meta-keyword': 'if else elif endif define undef ifdef ifndef'},\n    contains: [\n      {\n        begin: /\\\\\\n/, relevance: 0\n      },\n      {\n        beginKeywords: 'include', end: '$',\n        keywords: {'meta-keyword': 'include'},\n        contains: [\n          hljs.inherit(STRINGS, {className: 'meta-string'}),\n          {\n            className: 'meta-string',\n            begin: '<', end: '>',\n            illegal: '\\\\n'\n          }\n        ]\n      },\n      STRINGS,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE\n    ]\n  };\n\n  var DTS_REFERENCE = {\n    className: 'variable',\n    begin: '\\\\&[a-z\\\\d_]*\\\\b'\n  };\n\n  var DTS_KEYWORD = {\n    className: 'meta-keyword',\n    begin: '/[a-z][a-z\\\\d-]*/'\n  };\n\n  var DTS_LABEL = {\n    className: 'symbol',\n    begin: '^\\\\s*[a-zA-Z_][a-zA-Z\\\\d_]*:'\n  };\n\n  var DTS_CELL_PROPERTY = {\n    className: 'params',\n    begin: '<',\n    end: '>',\n    contains: [\n      NUMBERS,\n      DTS_REFERENCE\n    ]\n  };\n\n  var DTS_NODE = {\n    className: 'class',\n    begin: /[a-zA-Z_][a-zA-Z\\d_@]*\\s{/,\n    end: /[{;=]/,\n    returnBegin: true,\n    excludeEnd: true\n  };\n\n  var DTS_ROOT_NODE = {\n    className: 'class',\n    begin: '/\\\\s*{',\n    end: '};',\n    relevance: 10,\n    contains: [\n      DTS_REFERENCE,\n      DTS_KEYWORD,\n      DTS_LABEL,\n      DTS_NODE,\n      DTS_CELL_PROPERTY,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      NUMBERS,\n      STRINGS\n    ]\n  };\n\n  return {\n    keywords: \"\",\n    contains: [\n      DTS_ROOT_NODE,\n      DTS_REFERENCE,\n      DTS_KEYWORD,\n      DTS_LABEL,\n      DTS_NODE,\n      DTS_CELL_PROPERTY,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      NUMBERS,\n      STRINGS,\n      PREPROCESSOR,\n      {\n        begin: hljs.IDENT_RE + '::',\n        keywords: \"\"\n      }\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/dts.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/dust.js":
/*!*********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/dust.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var EXPRESSION_KEYWORDS = 'if eq ne lt lte gt gte select default math sep';\n  return {\n    aliases: ['dst'],\n    case_insensitive: true,\n    subLanguage: 'xml',\n    contains: [\n      {\n        className: 'template-tag',\n        begin: /\\{[#\\/]/, end: /\\}/, illegal: /;/,\n        contains: [\n          {\n            className: 'name',\n            begin: /[a-zA-Z\\.-]+/,\n            starts: {\n              endsWithParent: true, relevance: 0,\n              contains: [\n                hljs.QUOTE_STRING_MODE\n              ]\n            }\n          }\n        ]\n      },\n      {\n        className: 'template-variable',\n        begin: /\\{/, end: /\\}/, illegal: /;/,\n        keywords: EXPRESSION_KEYWORDS\n      }\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/dust.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/ebnf.js":
/*!*********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/ebnf.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n    var commentMode = hljs.COMMENT(/\\(\\*/, /\\*\\)/);\n\n    var nonTerminalMode = {\n        className: \"attribute\",\n        begin: /^[ ]*[a-zA-Z][a-zA-Z-]*([\\s-]+[a-zA-Z][a-zA-Z]*)*/\n    };\n\n    var specialSequenceMode = {\n        className: \"meta\",\n        begin: /\\?.*\\?/\n    };\n\n    var ruleBodyMode = {\n        begin: /=/, end: /;/,\n        contains: [\n            commentMode,\n            specialSequenceMode,\n            // terminals\n            hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE\n        ]\n    };\n\n    return {\n        illegal: /\\S/,\n        contains: [\n            commentMode,\n            nonTerminalMode,\n            ruleBodyMode\n        ]\n    };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/ebnf.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/elixir.js":
/*!***********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/elixir.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var ELIXIR_IDENT_RE = '[a-zA-Z_][a-zA-Z0-9_]*(\\\\!|\\\\?)?';\n  var ELIXIR_METHOD_RE = '[a-zA-Z_]\\\\w*[!?=]?|[-+~]\\\\@|<<|>>|=~|===?|<=>|[<>]=?|\\\\*\\\\*|[-/+%^&*~`|]|\\\\[\\\\]=?';\n  var ELIXIR_KEYWORDS =\n    'and false then defined module in return redo retry end for true self when ' +\n    'next until do begin unless nil break not case cond alias while ensure or ' +\n    'include use alias fn quote';\n  var SUBST = {\n    className: 'subst',\n    begin: '#\\\\{', end: '}',\n    lexemes: ELIXIR_IDENT_RE,\n    keywords: ELIXIR_KEYWORDS\n  };\n  var STRING = {\n    className: 'string',\n    contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n    variants: [\n      {\n        begin: /'/, end: /'/\n      },\n      {\n        begin: /\"/, end: /\"/\n      }\n    ]\n  };\n  var FUNCTION = {\n    className: 'function',\n    beginKeywords: 'def defp defmacro', end: /\\B\\b/, // the mode is ended by the title\n    contains: [\n      hljs.inherit(hljs.TITLE_MODE, {\n        begin: ELIXIR_IDENT_RE,\n        endsParent: true\n      })\n    ]\n  };\n  var CLASS = hljs.inherit(FUNCTION, {\n    className: 'class',\n    beginKeywords: 'defimpl defmodule defprotocol defrecord', end: /\\bdo\\b|$|;/\n  });\n  var ELIXIR_DEFAULT_CONTAINS = [\n    STRING,\n    hljs.HASH_COMMENT_MODE,\n    CLASS,\n    FUNCTION,\n    {\n      className: 'symbol',\n      begin: ':(?!\\\\s)',\n      contains: [STRING, {begin: ELIXIR_METHOD_RE}],\n      relevance: 0\n    },\n    {\n      className: 'symbol',\n      begin: ELIXIR_IDENT_RE + ':',\n      relevance: 0\n    },\n    {\n      className: 'number',\n      begin: '(\\\\b0[0-7_]+)|(\\\\b0x[0-9a-fA-F_]+)|(\\\\b[1-9][0-9_]*(\\\\.[0-9_]+)?)|[0_]\\\\b',\n      relevance: 0\n    },\n    {\n      className: 'variable',\n      begin: '(\\\\$\\\\W)|((\\\\$|\\\\@\\\\@?)(\\\\w+))'\n    },\n    {\n      begin: '->'\n    },\n    { // regexp container\n      begin: '(' + hljs.RE_STARTERS_RE + ')\\\\s*',\n      contains: [\n        hljs.HASH_COMMENT_MODE,\n        {\n          className: 'regexp',\n          illegal: '\\\\n',\n          contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n          variants: [\n            {\n              begin: '/', end: '/[a-z]*'\n            },\n            {\n              begin: '%r\\\\[', end: '\\\\][a-z]*'\n            }\n          ]\n        }\n      ],\n      relevance: 0\n    }\n  ];\n  SUBST.contains = ELIXIR_DEFAULT_CONTAINS;\n\n  return {\n    lexemes: ELIXIR_IDENT_RE,\n    keywords: ELIXIR_KEYWORDS,\n    contains: ELIXIR_DEFAULT_CONTAINS\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/elixir.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/elm.js":
/*!********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/elm.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var COMMENT = {\n    variants: [\n      hljs.COMMENT('--', '$'),\n      hljs.COMMENT(\n        '{-',\n        '-}',\n        {\n          contains: ['self']\n        }\n      )\n    ]\n  };\n\n  var CONSTRUCTOR = {\n    className: 'type',\n    begin: '\\\\b[A-Z][\\\\w\\']*', // TODO: other constructors (built-in, infix).\n    relevance: 0\n  };\n\n  var LIST = {\n    begin: '\\\\(', end: '\\\\)',\n    illegal: '\"',\n    contains: [\n      {className: 'type', begin: '\\\\b[A-Z][\\\\w]*(\\\\((\\\\.\\\\.|,|\\\\w+)\\\\))?'},\n      COMMENT\n    ]\n  };\n\n  var RECORD = {\n    begin: '{', end: '}',\n    contains: LIST.contains\n  };\n\n  return {\n    keywords:\n      'let in if then else case of where module import exposing ' +\n      'type alias as infix infixl infixr port effect command subscription',\n    contains: [\n\n      // Top-level constructions.\n\n      {\n        beginKeywords: 'port effect module', end: 'exposing',\n        keywords: 'port effect module where command subscription exposing',\n        contains: [LIST, COMMENT],\n        illegal: '\\\\W\\\\.|;'\n      },\n      {\n        begin: 'import', end: '$',\n        keywords: 'import as exposing',\n        contains: [LIST, COMMENT],\n        illegal: '\\\\W\\\\.|;'\n      },\n      {\n        begin: 'type', end: '$',\n        keywords: 'type alias',\n        contains: [CONSTRUCTOR, LIST, RECORD, COMMENT]\n      },\n      {\n        beginKeywords: 'infix infixl infixr', end: '$',\n        contains: [hljs.C_NUMBER_MODE, COMMENT]\n      },\n      {\n        begin: 'port', end: '$',\n        keywords: 'port',\n        contains: [COMMENT]\n      },\n\n      // Literals and names.\n\n      // TODO: characters.\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_NUMBER_MODE,\n      CONSTRUCTOR,\n      hljs.inherit(hljs.TITLE_MODE, {begin: '^[_a-z][\\\\w\\']*'}),\n      COMMENT,\n\n      {begin: '->|<-'} // No markup, relevance booster\n    ],\n    illegal: /;/\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/elm.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/erb.js":
/*!********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/erb.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  return {\n    subLanguage: 'xml',\n    contains: [\n      hljs.COMMENT('<%#', '%>'),\n      {\n        begin: '<%[%=-]?', end: '[%-]?%>',\n        subLanguage: 'ruby',\n        excludeBegin: true,\n        excludeEnd: true\n      }\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/erb.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/erlang-repl.js":
/*!****************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/erlang-repl.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  return {\n    keywords: {\n      built_in:\n        'spawn spawn_link self',\n      keyword:\n        'after and andalso|10 band begin bnot bor bsl bsr bxor case catch cond div end fun if ' +\n        'let not of or orelse|10 query receive rem try when xor'\n    },\n    contains: [\n      {\n        className: 'meta', begin: '^[0-9]+> ',\n        relevance: 10\n      },\n      hljs.COMMENT('%', '$'),\n      {\n        className: 'number',\n        begin: '\\\\b(\\\\d+#[a-fA-F0-9]+|\\\\d+(\\\\.\\\\d+)?([eE][-+]?\\\\d+)?)',\n        relevance: 0\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      {\n        begin: '\\\\?(::)?([A-Z]\\\\w*(::)?)+'\n      },\n      {\n        begin: '->'\n      },\n      {\n        begin: 'ok'\n      },\n      {\n        begin: '!'\n      },\n      {\n        begin: '(\\\\b[a-z\\'][a-zA-Z0-9_\\']*:[a-z\\'][a-zA-Z0-9_\\']*)|(\\\\b[a-z\\'][a-zA-Z0-9_\\']*)',\n        relevance: 0\n      },\n      {\n        begin: '[A-Z][a-zA-Z0-9_\\']*',\n        relevance: 0\n      }\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/erlang-repl.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/erlang.js":
/*!***********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/erlang.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var BASIC_ATOM_RE = '[a-z\\'][a-zA-Z0-9_\\']*';\n  var FUNCTION_NAME_RE = '(' + BASIC_ATOM_RE + ':' + BASIC_ATOM_RE + '|' + BASIC_ATOM_RE + ')';\n  var ERLANG_RESERVED = {\n    keyword:\n      'after and andalso|10 band begin bnot bor bsl bzr bxor case catch cond div end fun if ' +\n      'let not of orelse|10 query receive rem try when xor',\n    literal:\n      'false true'\n  };\n\n  var COMMENT = hljs.COMMENT('%', '$');\n  var NUMBER = {\n    className: 'number',\n    begin: '\\\\b(\\\\d+#[a-fA-F0-9]+|\\\\d+(\\\\.\\\\d+)?([eE][-+]?\\\\d+)?)',\n    relevance: 0\n  };\n  var NAMED_FUN = {\n    begin: 'fun\\\\s+' + BASIC_ATOM_RE + '/\\\\d+'\n  };\n  var FUNCTION_CALL = {\n    begin: FUNCTION_NAME_RE + '\\\\(', end: '\\\\)',\n    returnBegin: true,\n    relevance: 0,\n    contains: [\n      {\n        begin: FUNCTION_NAME_RE, relevance: 0\n      },\n      {\n        begin: '\\\\(', end: '\\\\)', endsWithParent: true,\n        returnEnd: true,\n        relevance: 0\n        // \"contains\" defined later\n      }\n    ]\n  };\n  var TUPLE = {\n    begin: '{', end: '}',\n    relevance: 0\n    // \"contains\" defined later\n  };\n  var VAR1 = {\n    begin: '\\\\b_([A-Z][A-Za-z0-9_]*)?',\n    relevance: 0\n  };\n  var VAR2 = {\n    begin: '[A-Z][a-zA-Z0-9_]*',\n    relevance: 0\n  };\n  var RECORD_ACCESS = {\n    begin: '#' + hljs.UNDERSCORE_IDENT_RE,\n    relevance: 0,\n    returnBegin: true,\n    contains: [\n      {\n        begin: '#' + hljs.UNDERSCORE_IDENT_RE,\n        relevance: 0\n      },\n      {\n        begin: '{', end: '}',\n        relevance: 0\n        // \"contains\" defined later\n      }\n    ]\n  };\n\n  var BLOCK_STATEMENTS = {\n    beginKeywords: 'fun receive if try case', end: 'end',\n    keywords: ERLANG_RESERVED\n  };\n  BLOCK_STATEMENTS.contains = [\n    COMMENT,\n    NAMED_FUN,\n    hljs.inherit(hljs.APOS_STRING_MODE, {className: ''}),\n    BLOCK_STATEMENTS,\n    FUNCTION_CALL,\n    hljs.QUOTE_STRING_MODE,\n    NUMBER,\n    TUPLE,\n    VAR1, VAR2,\n    RECORD_ACCESS\n  ];\n\n  var BASIC_MODES = [\n    COMMENT,\n    NAMED_FUN,\n    BLOCK_STATEMENTS,\n    FUNCTION_CALL,\n    hljs.QUOTE_STRING_MODE,\n    NUMBER,\n    TUPLE,\n    VAR1, VAR2,\n    RECORD_ACCESS\n  ];\n  FUNCTION_CALL.contains[1].contains = BASIC_MODES;\n  TUPLE.contains = BASIC_MODES;\n  RECORD_ACCESS.contains[1].contains = BASIC_MODES;\n\n  var PARAMS = {\n    className: 'params',\n    begin: '\\\\(', end: '\\\\)',\n    contains: BASIC_MODES\n  };\n  return {\n    aliases: ['erl'],\n    keywords: ERLANG_RESERVED,\n    illegal: '(</|\\\\*=|\\\\+=|-=|/\\\\*|\\\\*/|\\\\(\\\\*|\\\\*\\\\))',\n    contains: [\n      {\n        className: 'function',\n        begin: '^' + BASIC_ATOM_RE + '\\\\s*\\\\(', end: '->',\n        returnBegin: true,\n        illegal: '\\\\(|#|//|/\\\\*|\\\\\\\\|:|;',\n        contains: [\n          PARAMS,\n          hljs.inherit(hljs.TITLE_MODE, {begin: BASIC_ATOM_RE})\n        ],\n        starts: {\n          end: ';|\\\\.',\n          keywords: ERLANG_RESERVED,\n          contains: BASIC_MODES\n        }\n      },\n      COMMENT,\n      {\n        begin: '^-', end: '\\\\.',\n        relevance: 0,\n        excludeEnd: true,\n        returnBegin: true,\n        lexemes: '-' + hljs.IDENT_RE,\n        keywords:\n          '-module -record -undef -export -ifdef -ifndef -author -copyright -doc -vsn ' +\n          '-import -include -include_lib -compile -define -else -endif -file -behaviour ' +\n          '-behavior -spec',\n        contains: [PARAMS]\n      },\n      NUMBER,\n      hljs.QUOTE_STRING_MODE,\n      RECORD_ACCESS,\n      VAR1, VAR2,\n      TUPLE,\n      {begin: /\\.$/} // relevance booster\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/erlang.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/excel.js":
/*!**********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/excel.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  return {\n    aliases: ['xlsx', 'xls'],\n    case_insensitive: true,\n    lexemes: /[a-zA-Z][\\w\\.]*/,\n    // built-in functions imported from https://web.archive.org/web/20160513042710/https://support.office.com/en-us/article/Excel-functions-alphabetical-b3944572-255d-4efb-bb96-c6d90033e188\n    keywords: {\n        built_in: 'ABS ACCRINT ACCRINTM ACOS ACOSH ACOT ACOTH AGGREGATE ADDRESS AMORDEGRC AMORLINC AND ARABIC AREAS ASC ASIN ASINH ATAN ATAN2 ATANH AVEDEV AVERAGE AVERAGEA AVERAGEIF AVERAGEIFS BAHTTEXT BASE BESSELI BESSELJ BESSELK BESSELY BETADIST BETA.DIST BETAINV BETA.INV BIN2DEC BIN2HEX BIN2OCT BINOMDIST BINOM.DIST BINOM.DIST.RANGE BINOM.INV BITAND BITLSHIFT BITOR BITRSHIFT BITXOR CALL CEILING CEILING.MATH CEILING.PRECISE CELL CHAR CHIDIST CHIINV CHITEST CHISQ.DIST CHISQ.DIST.RT CHISQ.INV CHISQ.INV.RT CHISQ.TEST CHOOSE CLEAN CODE COLUMN COLUMNS COMBIN COMBINA COMPLEX CONCAT CONCATENATE CONFIDENCE CONFIDENCE.NORM CONFIDENCE.T CONVERT CORREL COS COSH COT COTH COUNT COUNTA COUNTBLANK COUNTIF COUNTIFS COUPDAYBS COUPDAYS COUPDAYSNC COUPNCD COUPNUM COUPPCD COVAR COVARIANCE.P COVARIANCE.S CRITBINOM CSC CSCH CUBEKPIMEMBER CUBEMEMBER CUBEMEMBERPROPERTY CUBERANKEDMEMBER CUBESET CUBESETCOUNT CUBEVALUE CUMIPMT CUMPRINC DATE DATEDIF DATEVALUE DAVERAGE DAY DAYS DAYS360 DB DBCS DCOUNT DCOUNTA DDB DEC2BIN DEC2HEX DEC2OCT DECIMAL DEGREES DELTA DEVSQ DGET DISC DMAX DMIN DOLLAR DOLLARDE DOLLARFR DPRODUCT DSTDEV DSTDEVP DSUM DURATION DVAR DVARP EDATE EFFECT ENCODEURL EOMONTH ERF ERF.PRECISE ERFC ERFC.PRECISE ERROR.TYPE EUROCONVERT EVEN EXACT EXP EXPON.DIST EXPONDIST FACT FACTDOUBLE FALSE|0 F.DIST FDIST F.DIST.RT FILTERXML FIND FINDB F.INV F.INV.RT FINV FISHER FISHERINV FIXED FLOOR FLOOR.MATH FLOOR.PRECISE FORECAST FORECAST.ETS FORECAST.ETS.CONFINT FORECAST.ETS.SEASONALITY FORECAST.ETS.STAT FORECAST.LINEAR FORMULATEXT FREQUENCY F.TEST FTEST FV FVSCHEDULE GAMMA GAMMA.DIST GAMMADIST GAMMA.INV GAMMAINV GAMMALN GAMMALN.PRECISE GAUSS GCD GEOMEAN GESTEP GETPIVOTDATA GROWTH HARMEAN HEX2BIN HEX2DEC HEX2OCT HLOOKUP HOUR HYPERLINK HYPGEOM.DIST HYPGEOMDIST IF|0 IFERROR IFNA IFS IMABS IMAGINARY IMARGUMENT IMCONJUGATE IMCOS IMCOSH IMCOT IMCSC IMCSCH IMDIV IMEXP IMLN IMLOG10 IMLOG2 IMPOWER IMPRODUCT IMREAL IMSEC IMSECH IMSIN IMSINH IMSQRT IMSUB IMSUM IMTAN INDEX INDIRECT INFO INT INTERCEPT INTRATE IPMT IRR ISBLANK ISERR ISERROR ISEVEN ISFORMULA ISLOGICAL ISNA ISNONTEXT ISNUMBER ISODD ISREF ISTEXT ISO.CEILING ISOWEEKNUM ISPMT JIS KURT LARGE LCM LEFT LEFTB LEN LENB LINEST LN LOG LOG10 LOGEST LOGINV LOGNORM.DIST LOGNORMDIST LOGNORM.INV LOOKUP LOWER MATCH MAX MAXA MAXIFS MDETERM MDURATION MEDIAN MID MIDBs MIN MINIFS MINA MINUTE MINVERSE MIRR MMULT MOD MODE MODE.MULT MODE.SNGL MONTH MROUND MULTINOMIAL MUNIT N NA NEGBINOM.DIST NEGBINOMDIST NETWORKDAYS NETWORKDAYS.INTL NOMINAL NORM.DIST NORMDIST NORMINV NORM.INV NORM.S.DIST NORMSDIST NORM.S.INV NORMSINV NOT NOW NPER NPV NUMBERVALUE OCT2BIN OCT2DEC OCT2HEX ODD ODDFPRICE ODDFYIELD ODDLPRICE ODDLYIELD OFFSET OR PDURATION PEARSON PERCENTILE.EXC PERCENTILE.INC PERCENTILE PERCENTRANK.EXC PERCENTRANK.INC PERCENTRANK PERMUT PERMUTATIONA PHI PHONETIC PI PMT POISSON.DIST POISSON POWER PPMT PRICE PRICEDISC PRICEMAT PROB PRODUCT PROPER PV QUARTILE QUARTILE.EXC QUARTILE.INC QUOTIENT RADIANS RAND RANDBETWEEN RANK.AVG RANK.EQ RANK RATE RECEIVED REGISTER.ID REPLACE REPLACEB REPT RIGHT RIGHTB ROMAN ROUND ROUNDDOWN ROUNDUP ROW ROWS RRI RSQ RTD SEARCH SEARCHB SEC SECH SECOND SERIESSUM SHEET SHEETS SIGN SIN SINH SKEW SKEW.P SLN SLOPE SMALL SQL.REQUEST SQRT SQRTPI STANDARDIZE STDEV STDEV.P STDEV.S STDEVA STDEVP STDEVPA STEYX SUBSTITUTE SUBTOTAL SUM SUMIF SUMIFS SUMPRODUCT SUMSQ SUMX2MY2 SUMX2PY2 SUMXMY2 SWITCH SYD T TAN TANH TBILLEQ TBILLPRICE TBILLYIELD T.DIST T.DIST.2T T.DIST.RT TDIST TEXT TEXTJOIN TIME TIMEVALUE T.INV T.INV.2T TINV TODAY TRANSPOSE TREND TRIM TRIMMEAN TRUE|0 TRUNC T.TEST TTEST TYPE UNICHAR UNICODE UPPER VALUE VAR VAR.P VAR.S VARA VARP VARPA VDB VLOOKUP WEBSERVICE WEEKDAY WEEKNUM WEIBULL WEIBULL.DIST WORKDAY WORKDAY.INTL XIRR XNPV XOR YEAR YEARFRAC YIELD YIELDDISC YIELDMAT Z.TEST ZTEST'\n    },\n    contains: [\n      {\n        /* matches a beginning equal sign found in Excel formula examples */ \n        begin: /^=/,\n        end: /[^=]/, returnEnd: true, illegal: /=/, /* only allow single equal sign at front of line */\n        relevance: 10\n      },\n      /* technically, there can be more than 2 letters in column names, but this prevents conflict with some keywords */\n      {\n        /* matches a reference to a single cell */\n        className: 'symbol',\n        begin: /\\b[A-Z]{1,2}\\d+\\b/,\n        end: /[^\\d]/, excludeEnd: true,\n        relevance: 0\n      },\n      {\n        /* matches a reference to a range of cells */\n        className: 'symbol',\n        begin: /[A-Z]{0,2}\\d*:[A-Z]{0,2}\\d*/,\n        relevance: 0\n      },\n      hljs.BACKSLASH_ESCAPE,\n      hljs.QUOTE_STRING_MODE,\n      {\n        className: 'number',\n        begin: hljs.NUMBER_RE + '(%)?',\n        relevance: 0\n      },\n      /* Excel formula comments are done by putting the comment in a function call to N() */\n      hljs.COMMENT(/\\bN\\(/,/\\)/,\n      {\n        excludeBegin: true,\n        excludeEnd: true,\n        illegal: /\\n/\n      })\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/excel.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/fix.js":
/*!********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/fix.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  return {\n    contains: [\n    {\n      begin: /[^\\u2401\\u0001]+/,\n      end: /[\\u2401\\u0001]/,\n      excludeEnd: true,\n      returnBegin: true,\n      returnEnd: false,\n      contains: [\n      {\n        begin: /([^\\u2401\\u0001=]+)/,\n        end: /=([^\\u2401\\u0001=]+)/,\n        returnEnd: true,\n        returnBegin: false,\n        className: 'attr'\n      },\n      {\n        begin: /=/,\n        end: /([\\u2401\\u0001])/,\n        excludeEnd: true,\n        excludeBegin: true,\n        className: 'string'\n      }]\n    }],\n    case_insensitive: true\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/fix.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/flix.js":
/*!*********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/flix.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function (hljs) {\n\n    var CHAR = {\n        className: 'string',\n        begin: /'(.|\\\\[xXuU][a-zA-Z0-9]+)'/\n    };\n\n    var STRING = {\n        className: 'string',\n        variants: [\n            {\n                begin: '\"', end: '\"'\n            }\n        ]\n    };\n\n    var NAME = {\n        className: 'title',\n        begin: /[^0-9\\n\\t \"'(),.`{}\\[\\]:;][^\\n\\t \"'(),.`{}\\[\\]:;]+|[^0-9\\n\\t \"'(),.`{}\\[\\]:;=]/\n    };\n\n    var METHOD = {\n        className: 'function',\n        beginKeywords: 'def',\n        end: /[:={\\[(\\n;]/,\n        excludeEnd: true,\n        contains: [NAME]\n    };\n\n    return {\n        keywords: {\n            literal: 'true false',\n            keyword: 'case class def else enum if impl import in lat rel index let match namespace switch type yield with'\n        },\n        contains: [\n            hljs.C_LINE_COMMENT_MODE,\n            hljs.C_BLOCK_COMMENT_MODE,\n            CHAR,\n            STRING,\n            METHOD,\n            hljs.C_NUMBER_MODE\n        ]\n    };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/flix.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/fortran.js":
/*!************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/fortran.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var PARAMS = {\n    className: 'params',\n    begin: '\\\\(', end: '\\\\)'\n  };\n\n  var F_KEYWORDS = {\n    literal: '.False. .True.',\n    keyword: 'kind do while private call intrinsic where elsewhere ' +\n      'type endtype endmodule endselect endinterface end enddo endif if forall endforall only contains default return stop then ' +\n      'public subroutine|10 function program .and. .or. .not. .le. .eq. .ge. .gt. .lt. ' +\n      'goto save else use module select case ' +\n      'access blank direct exist file fmt form formatted iostat name named nextrec number opened rec recl sequential status unformatted unit ' +\n      'continue format pause cycle exit ' +\n      'c_null_char c_alert c_backspace c_form_feed flush wait decimal round iomsg ' +\n      'synchronous nopass non_overridable pass protected volatile abstract extends import ' +\n      'non_intrinsic value deferred generic final enumerator class associate bind enum ' +\n      'c_int c_short c_long c_long_long c_signed_char c_size_t c_int8_t c_int16_t c_int32_t c_int64_t c_int_least8_t c_int_least16_t ' +\n      'c_int_least32_t c_int_least64_t c_int_fast8_t c_int_fast16_t c_int_fast32_t c_int_fast64_t c_intmax_t C_intptr_t c_float c_double ' +\n      'c_long_double c_float_complex c_double_complex c_long_double_complex c_bool c_char c_null_ptr c_null_funptr ' +\n      'c_new_line c_carriage_return c_horizontal_tab c_vertical_tab iso_c_binding c_loc c_funloc c_associated  c_f_pointer ' +\n      'c_ptr c_funptr iso_fortran_env character_storage_size error_unit file_storage_size input_unit iostat_end iostat_eor ' +\n      'numeric_storage_size output_unit c_f_procpointer ieee_arithmetic ieee_support_underflow_control ' +\n      'ieee_get_underflow_mode ieee_set_underflow_mode newunit contiguous recursive ' +\n      'pad position action delim readwrite eor advance nml interface procedure namelist include sequence elemental pure ' +\n      'integer real character complex logical dimension allocatable|10 parameter ' +\n      'external implicit|10 none double precision assign intent optional pointer ' +\n      'target in out common equivalence data',\n    built_in: 'alog alog10 amax0 amax1 amin0 amin1 amod cabs ccos cexp clog csin csqrt dabs dacos dasin datan datan2 dcos dcosh ddim dexp dint ' +\n      'dlog dlog10 dmax1 dmin1 dmod dnint dsign dsin dsinh dsqrt dtan dtanh float iabs idim idint idnint ifix isign max0 max1 min0 min1 sngl ' +\n      'algama cdabs cdcos cdexp cdlog cdsin cdsqrt cqabs cqcos cqexp cqlog cqsin cqsqrt dcmplx dconjg derf derfc dfloat dgamma dimag dlgama ' +\n      'iqint qabs qacos qasin qatan qatan2 qcmplx qconjg qcos qcosh qdim qerf qerfc qexp qgamma qimag qlgama qlog qlog10 qmax1 qmin1 qmod ' +\n      'qnint qsign qsin qsinh qsqrt qtan qtanh abs acos aimag aint anint asin atan atan2 char cmplx conjg cos cosh exp ichar index int log ' +\n      'log10 max min nint sign sin sinh sqrt tan tanh print write dim lge lgt lle llt mod nullify allocate deallocate ' +\n      'adjustl adjustr all allocated any associated bit_size btest ceiling count cshift date_and_time digits dot_product ' +\n      'eoshift epsilon exponent floor fraction huge iand ibclr ibits ibset ieor ior ishft ishftc lbound len_trim matmul ' +\n      'maxexponent maxloc maxval merge minexponent minloc minval modulo mvbits nearest pack present product ' +\n      'radix random_number random_seed range repeat reshape rrspacing scale scan selected_int_kind selected_real_kind ' +\n      'set_exponent shape size spacing spread sum system_clock tiny transpose trim ubound unpack verify achar iachar transfer ' +\n      'dble entry dprod cpu_time command_argument_count get_command get_command_argument get_environment_variable is_iostat_end ' +\n      'ieee_arithmetic ieee_support_underflow_control ieee_get_underflow_mode ieee_set_underflow_mode ' +\n      'is_iostat_eor move_alloc new_line selected_char_kind same_type_as extends_type_of'  +\n      'acosh asinh atanh bessel_j0 bessel_j1 bessel_jn bessel_y0 bessel_y1 bessel_yn erf erfc erfc_scaled gamma log_gamma hypot norm2 ' +\n      'atomic_define atomic_ref execute_command_line leadz trailz storage_size merge_bits ' +\n      'bge bgt ble blt dshiftl dshiftr findloc iall iany iparity image_index lcobound ucobound maskl maskr ' +\n      'num_images parity popcnt poppar shifta shiftl shiftr this_image'\n  };\n  return {\n    case_insensitive: true,\n    aliases: ['f90', 'f95'],\n    keywords: F_KEYWORDS,\n    illegal: /\\/\\*/,\n    contains: [\n      hljs.inherit(hljs.APOS_STRING_MODE, {className: 'string', relevance: 0}),\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {className: 'string', relevance: 0}),\n      {\n        className: 'function',\n        beginKeywords: 'subroutine function program',\n        illegal: '[${=\\\\n]',\n        contains: [hljs.UNDERSCORE_TITLE_MODE, PARAMS]\n      },\n      hljs.COMMENT('!', '$', {relevance: 0}),\n      {\n        className: 'number',\n        begin: '(?=\\\\b|\\\\+|\\\\-|\\\\.)(?=\\\\.\\\\d|\\\\d)(?:\\\\d+)?(?:\\\\.?\\\\d*)(?:[de][+-]?\\\\d+)?\\\\b\\\\.?',\n        relevance: 0\n      }\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/fortran.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/fsharp.js":
/*!***********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/fsharp.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var TYPEPARAM = {\n    begin: '<', end: '>',\n    contains: [\n      hljs.inherit(hljs.TITLE_MODE, {begin: /'[a-zA-Z0-9_]+/})\n    ]\n  };\n\n  return {\n    aliases: ['fs'],\n    keywords:\n      'abstract and as assert base begin class default delegate do done ' +\n      'downcast downto elif else end exception extern false finally for ' +\n      'fun function global if in inherit inline interface internal lazy let ' +\n      'match member module mutable namespace new null of open or ' +\n      'override private public rec return sig static struct then to ' +\n      'true try type upcast use val void when while with yield',\n    illegal: /\\/\\*/,\n    contains: [\n      {\n        // monad builder keywords (matches before non-bang kws)\n        className: 'keyword',\n        begin: /\\b(yield|return|let|do)!/\n      },\n      {\n        className: 'string',\n        begin: '@\"', end: '\"',\n        contains: [{begin: '\"\"'}]\n      },\n      {\n        className: 'string',\n        begin: '\"\"\"', end: '\"\"\"'\n      },\n      hljs.COMMENT('\\\\(\\\\*', '\\\\*\\\\)'),\n      {\n        className: 'class',\n        beginKeywords: 'type', end: '\\\\(|=|$', excludeEnd: true,\n        contains: [\n          hljs.UNDERSCORE_TITLE_MODE,\n          TYPEPARAM\n        ]\n      },\n      {\n        className: 'meta',\n        begin: '\\\\[<', end: '>\\\\]',\n        relevance: 10\n      },\n      {\n        className: 'symbol',\n        begin: '\\\\B(\\'[A-Za-z])\\\\b',\n        contains: [hljs.BACKSLASH_ESCAPE]\n      },\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null}),\n      hljs.C_NUMBER_MODE\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/fsharp.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/gams.js":
/*!*********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/gams.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function (hljs) {\n  var KEYWORDS = {\n    'keyword':\n      'abort acronym acronyms alias all and assign binary card diag display ' +\n      'else eq file files for free ge gt if integer le loop lt maximizing ' +\n      'minimizing model models ne negative no not option options or ord ' +\n      'positive prod put putpage puttl repeat sameas semicont semiint smax ' +\n      'smin solve sos1 sos2 sum system table then until using while xor yes',\n    'literal': 'eps inf na',\n    'built-in':\n      'abs arccos arcsin arctan arctan2 Beta betaReg binomial ceil centropy ' +\n      'cos cosh cvPower div div0 eDist entropy errorf execSeed exp fact ' +\n      'floor frac gamma gammaReg log logBeta logGamma log10 log2 mapVal max ' +\n      'min mod ncpCM ncpF ncpVUpow ncpVUsin normal pi poly power ' +\n      'randBinomial randLinear randTriangle round rPower sigmoid sign ' +\n      'signPower sin sinh slexp sllog10 slrec sqexp sqlog10 sqr sqrec sqrt ' +\n      'tan tanh trunc uniform uniformInt vcPower bool_and bool_eqv bool_imp ' +\n      'bool_not bool_or bool_xor ifThen rel_eq rel_ge rel_gt rel_le rel_lt ' +\n      'rel_ne gday gdow ghour gleap gmillisec gminute gmonth gsecond gyear ' +\n      'jdate jnow jstart jtime errorLevel execError gamsRelease gamsVersion ' +\n      'handleCollect handleDelete handleStatus handleSubmit heapFree ' +\n      'heapLimit heapSize jobHandle jobKill jobStatus jobTerminate ' +\n      'licenseLevel licenseStatus maxExecError sleep timeClose timeComp ' +\n      'timeElapsed timeExec timeStart'\n  };\n  var PARAMS = {\n    className: 'params',\n    begin: /\\(/, end: /\\)/,\n    excludeBegin: true,\n    excludeEnd: true,\n  };\n  var SYMBOLS = {\n    className: 'symbol',\n    variants: [\n      {begin: /\\=[lgenxc]=/},\n      {begin: /\\$/},\n    ]\n  };\n  var QSTR = { // One-line quoted comment string\n    className: 'comment',\n    variants: [\n      {begin: '\\'', end: '\\''},\n      {begin: '\"', end: '\"'},\n    ],\n    illegal: '\\\\n',\n    contains: [hljs.BACKSLASH_ESCAPE]\n  };\n  var ASSIGNMENT = {\n    begin: '/',\n    end: '/',\n    keywords: KEYWORDS,\n    contains: [\n      QSTR,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.APOS_STRING_MODE,\n      hljs.C_NUMBER_MODE,\n    ],\n  };\n  var DESCTEXT = { // Parameter/set/variable description text\n    begin: /[a-z][a-z0-9_]*(\\([a-z0-9_, ]*\\))?[ \\t]+/,\n    excludeBegin: true,\n    end: '$',\n    endsWithParent: true,\n    contains: [\n      QSTR,\n      ASSIGNMENT,\n      {\n        className: 'comment',\n        begin: /([ ]*[a-z0-9&#*=?@>\\\\<:\\-,()$\\[\\]_.{}!+%^]+)+/,\n        relevance: 0\n      },\n    ],\n  };\n\n  return {\n    aliases: ['gms'],\n    case_insensitive: true,\n    keywords: KEYWORDS,\n    contains: [\n      hljs.COMMENT(/^\\$ontext/, /^\\$offtext/),\n      {\n        className: 'meta',\n        begin: '^\\\\$[a-z0-9]+',\n        end: '$',\n        returnBegin: true,\n        contains: [\n          {\n            className: 'meta-keyword',\n            begin: '^\\\\$[a-z0-9]+',\n          }\n        ]\n      },\n      hljs.COMMENT('^\\\\*', '$'),\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.APOS_STRING_MODE,\n      // Declarations\n      {\n        beginKeywords:\n          'set sets parameter parameters variable variables ' +\n          'scalar scalars equation equations',\n        end: ';',\n        contains: [\n          hljs.COMMENT('^\\\\*', '$'),\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          hljs.QUOTE_STRING_MODE,\n          hljs.APOS_STRING_MODE,\n          ASSIGNMENT,\n          DESCTEXT,\n        ]\n      },\n      { // table environment\n        beginKeywords: 'table',\n        end: ';',\n        returnBegin: true,\n        contains: [\n          { // table header row\n            beginKeywords: 'table',\n            end: '$',\n            contains: [DESCTEXT],\n          },\n          hljs.COMMENT('^\\\\*', '$'),\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          hljs.QUOTE_STRING_MODE,\n          hljs.APOS_STRING_MODE,\n          hljs.C_NUMBER_MODE,\n          // Table does not contain DESCTEXT or ASSIGNMENT\n        ]\n      },\n      // Function definitions\n      {\n        className: 'function',\n        begin: /^[a-z][a-z0-9_,\\-+' ()$]+\\.{2}/,\n        returnBegin: true,\n        contains: [\n              { // Function title\n                className: 'title',\n                begin: /^[a-z0-9_]+/,\n              },\n              PARAMS,\n              SYMBOLS,\n            ],\n      },\n      hljs.C_NUMBER_MODE,\n      SYMBOLS,\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/gams.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/gauss.js":
/*!**********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/gauss.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var KEYWORDS = {\n    keyword: 'and bool break call callexe checkinterrupt clear clearg closeall cls comlog compile ' +\n              'continue create debug declare delete disable dlibrary dllcall do dos ed edit else ' +\n              'elseif enable end endfor endif endp endo errorlog errorlogat expr external fn ' +\n              'for format goto gosub graph if keyword let lib library line load loadarray loadexe ' +\n              'loadf loadk loadm loadp loads loadx local locate loopnextindex lprint lpwidth lshow ' +\n              'matrix msym ndpclex new not open or output outwidth plot plotsym pop prcsn print ' +\n              'printdos proc push retp return rndcon rndmod rndmult rndseed run save saveall screen ' +\n              'scroll setarray show sparse stop string struct system trace trap threadfor ' +\n              'threadendfor threadbegin threadjoin threadstat threadend until use while winprint',\n    built_in: 'abs acf aconcat aeye amax amean AmericanBinomCall AmericanBinomCall_Greeks AmericanBinomCall_ImpVol ' +\n              'AmericanBinomPut AmericanBinomPut_Greeks AmericanBinomPut_ImpVol AmericanBSCall AmericanBSCall_Greeks ' +\n              'AmericanBSCall_ImpVol AmericanBSPut AmericanBSPut_Greeks AmericanBSPut_ImpVol amin amult annotationGetDefaults ' +\n              'annotationSetBkd annotationSetFont annotationSetLineColor annotationSetLineStyle annotationSetLineThickness ' +\n              'annualTradingDays arccos arcsin areshape arrayalloc arrayindex arrayinit arraytomat asciiload asclabel astd ' +\n              'astds asum atan atan2 atranspose axmargin balance band bandchol bandcholsol bandltsol bandrv bandsolpd bar ' +\n              'base10 begwind besselj bessely beta box boxcox cdfBeta cdfBetaInv cdfBinomial cdfBinomialInv cdfBvn cdfBvn2 ' +\n              'cdfBvn2e cdfCauchy cdfCauchyInv cdfChic cdfChii cdfChinc cdfChincInv cdfExp cdfExpInv cdfFc cdfFnc cdfFncInv ' +\n              'cdfGam cdfGenPareto cdfHyperGeo cdfLaplace cdfLaplaceInv cdfLogistic cdfLogisticInv cdfmControlCreate cdfMvn ' +\n              'cdfMvn2e cdfMvnce cdfMvne cdfMvt2e cdfMvtce cdfMvte cdfN cdfN2 cdfNc cdfNegBinomial cdfNegBinomialInv cdfNi ' +\n              'cdfPoisson cdfPoissonInv cdfRayleigh cdfRayleighInv cdfTc cdfTci cdfTnc cdfTvn cdfWeibull cdfWeibullInv cdir ' +\n              'ceil ChangeDir chdir chiBarSquare chol choldn cholsol cholup chrs close code cols colsf combinate combinated ' +\n              'complex con cond conj cons ConScore contour conv convertsatostr convertstrtosa corrm corrms corrvc corrx corrxs ' +\n              'cos cosh counts countwts crossprd crout croutp csrcol csrlin csvReadM csvReadSA cumprodc cumsumc curve cvtos ' +\n              'datacreate datacreatecomplex datalist dataload dataloop dataopen datasave date datestr datestring datestrymd ' +\n              'dayinyr dayofweek dbAddDatabase dbClose dbCommit dbCreateQuery dbExecQuery dbGetConnectOptions dbGetDatabaseName ' +\n              'dbGetDriverName dbGetDrivers dbGetHostName dbGetLastErrorNum dbGetLastErrorText dbGetNumericalPrecPolicy ' +\n              'dbGetPassword dbGetPort dbGetTableHeaders dbGetTables dbGetUserName dbHasFeature dbIsDriverAvailable dbIsOpen ' +\n              'dbIsOpenError dbOpen dbQueryBindValue dbQueryClear dbQueryCols dbQueryExecPrepared dbQueryFetchAllM dbQueryFetchAllSA ' +\n              'dbQueryFetchOneM dbQueryFetchOneSA dbQueryFinish dbQueryGetBoundValue dbQueryGetBoundValues dbQueryGetField ' +\n              'dbQueryGetLastErrorNum dbQueryGetLastErrorText dbQueryGetLastInsertID dbQueryGetLastQuery dbQueryGetPosition ' +\n              'dbQueryIsActive dbQueryIsForwardOnly dbQueryIsNull dbQueryIsSelect dbQueryIsValid dbQueryPrepare dbQueryRows ' +\n              'dbQuerySeek dbQuerySeekFirst dbQuerySeekLast dbQuerySeekNext dbQuerySeekPrevious dbQuerySetForwardOnly ' +\n              'dbRemoveDatabase dbRollback dbSetConnectOptions dbSetDatabaseName dbSetHostName dbSetNumericalPrecPolicy ' +\n              'dbSetPort dbSetUserName dbTransaction DeleteFile delif delrows denseToSp denseToSpRE denToZero design det detl ' +\n              'dfft dffti diag diagrv digamma doswin DOSWinCloseall DOSWinOpen dotfeq dotfeqmt dotfge dotfgemt dotfgt dotfgtmt ' +\n              'dotfle dotflemt dotflt dotfltmt dotfne dotfnemt draw drop dsCreate dstat dstatmt dstatmtControlCreate dtdate dtday ' +\n              'dttime dttodtv dttostr dttoutc dtvnormal dtvtodt dtvtoutc dummy dummybr dummydn eig eigh eighv eigv elapsedTradingDays ' +\n              'endwind envget eof eqSolve eqSolvemt eqSolvemtControlCreate eqSolvemtOutCreate eqSolveset erf erfc erfccplx erfcplx error ' +\n              'etdays ethsec etstr EuropeanBinomCall EuropeanBinomCall_Greeks EuropeanBinomCall_ImpVol EuropeanBinomPut ' +\n              'EuropeanBinomPut_Greeks EuropeanBinomPut_ImpVol EuropeanBSCall EuropeanBSCall_Greeks EuropeanBSCall_ImpVol ' +\n              'EuropeanBSPut EuropeanBSPut_Greeks EuropeanBSPut_ImpVol exctsmpl exec execbg exp extern eye fcheckerr fclearerr feq ' +\n              'feqmt fflush fft ffti fftm fftmi fftn fge fgemt fgets fgetsa fgetsat fgetst fgt fgtmt fileinfo filesa fle flemt ' +\n              'floor flt fltmt fmod fne fnemt fonts fopen formatcv formatnv fputs fputst fseek fstrerror ftell ftocv ftos ftostrC ' +\n              'gamma gammacplx gammaii gausset gdaAppend gdaCreate gdaDStat gdaDStatMat gdaGetIndex gdaGetName gdaGetNames gdaGetOrders ' +\n              'gdaGetType gdaGetTypes gdaGetVarInfo gdaIsCplx gdaLoad gdaPack gdaRead gdaReadByIndex gdaReadSome gdaReadSparse ' +\n              'gdaReadStruct gdaReportVarInfo gdaSave gdaUpdate gdaUpdateAndPack gdaVars gdaWrite gdaWrite32 gdaWriteSome getarray ' +\n              'getdims getf getGAUSShome getmatrix getmatrix4D getname getnamef getNextTradingDay getNextWeekDay getnr getorders ' +\n              'getpath getPreviousTradingDay getPreviousWeekDay getRow getscalar3D getscalar4D getTrRow getwind glm gradcplx gradMT ' +\n              'gradMTm gradMTT gradMTTm gradp graphprt graphset hasimag header headermt hess hessMT hessMTg hessMTgw hessMTm ' +\n              'hessMTmw hessMTT hessMTTg hessMTTgw hessMTTm hessMTw hessp hist histf histp hsec imag indcv indexcat indices indices2 ' +\n              'indicesf indicesfn indnv indsav integrate1d integrateControlCreate intgrat2 intgrat3 inthp1 inthp2 inthp3 inthp4 ' +\n              'inthpControlCreate intquad1 intquad2 intquad3 intrleav intrleavsa intrsect intsimp inv invpd invswp iscplx iscplxf ' +\n              'isden isinfnanmiss ismiss key keyav keyw lag lag1 lagn lapEighb lapEighi lapEighvb lapEighvi lapgEig lapgEigh lapgEighv ' +\n              'lapgEigv lapgSchur lapgSvdcst lapgSvds lapgSvdst lapSvdcusv lapSvds lapSvdusv ldlp ldlsol linSolve listwise ln lncdfbvn ' +\n              'lncdfbvn2 lncdfmvn lncdfn lncdfn2 lncdfnc lnfact lngammacplx lnpdfmvn lnpdfmvt lnpdfn lnpdft loadd loadstruct loadwind ' +\n              'loess loessmt loessmtControlCreate log loglog logx logy lower lowmat lowmat1 ltrisol lu lusol machEpsilon make makevars ' +\n              'makewind margin matalloc matinit mattoarray maxbytes maxc maxindc maxv maxvec mbesselei mbesselei0 mbesselei1 mbesseli ' +\n              'mbesseli0 mbesseli1 meanc median mergeby mergevar minc minindc minv miss missex missrv moment momentd movingave ' +\n              'movingaveExpwgt movingaveWgt nextindex nextn nextnevn nextwind ntos null null1 numCombinations ols olsmt olsmtControlCreate ' +\n              'olsqr olsqr2 olsqrmt ones optn optnevn orth outtyp pacf packedToSp packr parse pause pdfCauchy pdfChi pdfExp pdfGenPareto ' +\n              'pdfHyperGeo pdfLaplace pdfLogistic pdfn pdfPoisson pdfRayleigh pdfWeibull pi pinv pinvmt plotAddArrow plotAddBar plotAddBox ' +\n              'plotAddHist plotAddHistF plotAddHistP plotAddPolar plotAddScatter plotAddShape plotAddTextbox plotAddTS plotAddXY plotArea ' +\n              'plotBar plotBox plotClearLayout plotContour plotCustomLayout plotGetDefaults plotHist plotHistF plotHistP plotLayout ' +\n              'plotLogLog plotLogX plotLogY plotOpenWindow plotPolar plotSave plotScatter plotSetAxesPen plotSetBar plotSetBarFill ' +\n              'plotSetBarStacked plotSetBkdColor plotSetFill plotSetGrid plotSetLegend plotSetLineColor plotSetLineStyle plotSetLineSymbol ' +\n              'plotSetLineThickness plotSetNewWindow plotSetTitle plotSetWhichYAxis plotSetXAxisShow plotSetXLabel plotSetXRange ' +\n              'plotSetXTicInterval plotSetXTicLabel plotSetYAxisShow plotSetYLabel plotSetYRange plotSetZAxisShow plotSetZLabel ' +\n              'plotSurface plotTS plotXY polar polychar polyeval polygamma polyint polymake polymat polymroot polymult polyroot ' +\n              'pqgwin previousindex princomp printfm printfmt prodc psi putarray putf putvals pvCreate pvGetIndex pvGetParNames ' +\n              'pvGetParVector pvLength pvList pvPack pvPacki pvPackm pvPackmi pvPacks pvPacksi pvPacksm pvPacksmi pvPutParVector ' +\n              'pvTest pvUnpack QNewton QNewtonmt QNewtonmtControlCreate QNewtonmtOutCreate QNewtonSet QProg QProgmt QProgmtInCreate ' +\n              'qqr qqre qqrep qr qre qrep qrsol qrtsol qtyr qtyre qtyrep quantile quantiled qyr qyre qyrep qz rank rankindx readr ' +\n              'real reclassify reclassifyCuts recode recserar recsercp recserrc rerun rescale reshape rets rev rfft rffti rfftip rfftn ' +\n              'rfftnp rfftp rndBernoulli rndBeta rndBinomial rndCauchy rndChiSquare rndCon rndCreateState rndExp rndGamma rndGeo rndGumbel ' +\n              'rndHyperGeo rndi rndKMbeta rndKMgam rndKMi rndKMn rndKMnb rndKMp rndKMu rndKMvm rndLaplace rndLCbeta rndLCgam rndLCi rndLCn ' +\n              'rndLCnb rndLCp rndLCu rndLCvm rndLogNorm rndMTu rndMVn rndMVt rndn rndnb rndNegBinomial rndp rndPoisson rndRayleigh ' +\n              'rndStateSkip rndu rndvm rndWeibull rndWishart rotater round rows rowsf rref sampleData satostrC saved saveStruct savewind ' +\n              'scale scale3d scalerr scalinfnanmiss scalmiss schtoc schur searchsourcepath seekr select selif seqa seqm setdif setdifsa ' +\n              'setvars setvwrmode setwind shell shiftr sin singleindex sinh sleep solpd sortc sortcc sortd sorthc sorthcc sortind ' +\n              'sortindc sortmc sortr sortrc spBiconjGradSol spChol spConjGradSol spCreate spDenseSubmat spDiagRvMat spEigv spEye spLDL ' +\n              'spline spLU spNumNZE spOnes spreadSheetReadM spreadSheetReadSA spreadSheetWrite spScale spSubmat spToDense spTrTDense ' +\n              'spTScalar spZeros sqpSolve sqpSolveMT sqpSolveMTControlCreate sqpSolveMTlagrangeCreate sqpSolveMToutCreate sqpSolveSet ' +\n              'sqrt statements stdc stdsc stocv stof strcombine strindx strlen strput strrindx strsect strsplit strsplitPad strtodt ' +\n              'strtof strtofcplx strtriml strtrimr strtrunc strtruncl strtruncpad strtruncr submat subscat substute subvec sumc sumr ' +\n              'surface svd svd1 svd2 svdcusv svds svdusv sysstate tab tan tanh tempname threadBegin threadEnd threadEndFor threadFor ' +\n              'threadJoin threadStat time timedt timestr timeutc title tkf2eps tkf2ps tocart todaydt toeplitz token topolar trapchk ' +\n              'trigamma trimr trunc type typecv typef union unionsa uniqindx uniqindxsa unique uniquesa upmat upmat1 upper utctodt ' +\n              'utctodtv utrisol vals varCovMS varCovXS varget vargetl varmall varmares varput varputl vartypef vcm vcms vcx vcxs ' +\n              'vec vech vecr vector vget view viewxyz vlist vnamecv volume vput vread vtypecv wait waitc walkindex where window ' +\n              'writer xlabel xlsGetSheetCount xlsGetSheetSize xlsGetSheetTypes xlsMakeRange xlsReadM xlsReadSA xlsWrite xlsWriteM ' +\n              'xlsWriteSA xpnd xtics xy xyz ylabel ytics zeros zeta zlabel ztics cdfEmpirical dot h5create h5open h5read h5readAttribute ' +\n              'h5write h5writeAttribute ldl plotAddErrorBar plotAddSurface plotCDFEmpirical plotSetColormap plotSetContourLabels ' +\n              'plotSetLegendFont plotSetTextInterpreter plotSetXTicCount plotSetYTicCount plotSetZLevels powerm strjoin strtrim sylvester',\n    literal: 'DB_AFTER_LAST_ROW DB_ALL_TABLES DB_BATCH_OPERATIONS DB_BEFORE_FIRST_ROW DB_BLOB DB_EVENT_NOTIFICATIONS ' +\n             'DB_FINISH_QUERY DB_HIGH_PRECISION DB_LAST_INSERT_ID DB_LOW_PRECISION_DOUBLE DB_LOW_PRECISION_INT32 ' +\n             'DB_LOW_PRECISION_INT64 DB_LOW_PRECISION_NUMBERS DB_MULTIPLE_RESULT_SETS DB_NAMED_PLACEHOLDERS ' +\n             'DB_POSITIONAL_PLACEHOLDERS DB_PREPARED_QUERIES DB_QUERY_SIZE DB_SIMPLE_LOCKING DB_SYSTEM_TABLES DB_TABLES ' +\n             'DB_TRANSACTIONS DB_UNICODE DB_VIEWS'\n  };\n\n  var PREPROCESSOR =\n  {\n    className: 'meta',\n    begin: '#', end: '$',\n    keywords: {'meta-keyword': 'define definecs|10 undef ifdef ifndef iflight ifdllcall ifmac ifos2win ifunix else endif lineson linesoff srcfile srcline'},\n    contains: [\n      {\n        begin: /\\\\\\n/, relevance: 0\n      },\n      {\n        beginKeywords: 'include', end: '$',\n        keywords: {'meta-keyword': 'include'},\n        contains: [\n          {\n            className: 'meta-string',\n            begin: '\"', end: '\"',\n            illegal: '\\\\n'\n          }\n        ]\n      },\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE\n    ]\n  };\n\n  var FUNCTION_TITLE = hljs.UNDERSCORE_IDENT_RE + '\\\\s*\\\\(?';\n  var PARSE_PARAMS = [\n    {\n      className: 'params',\n      begin: /\\(/, end: /\\)/,\n      keywords: KEYWORDS,\n      relevance: 0,\n      contains: [\n        hljs.C_NUMBER_MODE,\n        hljs.C_LINE_COMMENT_MODE,\n        hljs.C_BLOCK_COMMENT_MODE\n      ]\n    }\n  ];\n\n  return {\n    aliases: ['gss'],\n    case_insensitive: true, // language is case-insensitive\n    keywords: KEYWORDS,\n    illegal: '(\\\\{[%#]|[%#]\\\\})',\n    contains: [\n      hljs.C_NUMBER_MODE,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.COMMENT('@', '@'),\n      PREPROCESSOR,\n      {\n        className: 'string',\n        begin: '\"', end: '\"',\n        contains: [hljs.BACKSLASH_ESCAPE]\n      },\n      {\n        className: 'function',\n        beginKeywords: 'proc keyword',\n        end: ';',\n        excludeEnd: true,\n        keywords: KEYWORDS,\n        contains: [\n          {\n            begin: FUNCTION_TITLE, returnBegin: true,\n            contains: [hljs.UNDERSCORE_TITLE_MODE],\n            relevance: 0\n          },\n          hljs.C_NUMBER_MODE,\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          PREPROCESSOR\n        ].concat(PARSE_PARAMS)\n      },\n      {\n        className: 'function',\n        beginKeywords: 'fn',\n        end: ';',\n        excludeEnd: true,\n        keywords: KEYWORDS,\n        contains: [\n          {\n            begin: FUNCTION_TITLE + hljs.IDENT_RE + '\\\\)?\\\\s*\\\\=\\\\s*', returnBegin: true,\n            contains: [hljs.UNDERSCORE_TITLE_MODE],\n            relevance: 0\n          },\n          hljs.C_NUMBER_MODE,\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE\n        ].concat(PARSE_PARAMS)\n      },\n      {\n        className: 'function',\n        begin: '\\\\bexternal (proc|keyword|fn)\\\\s+',\n        end: ';',\n        excludeEnd: true,\n        keywords: KEYWORDS,\n        contains: [\n          {\n            begin: FUNCTION_TITLE, returnBegin: true,\n            contains: [hljs.UNDERSCORE_TITLE_MODE],\n            relevance: 0\n          },\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      },\n      {\n        className: 'function',\n        begin: '\\\\bexternal (matrix|string|array|sparse matrix|struct ' + hljs.IDENT_RE + ')\\\\s+',\n        end: ';',\n        excludeEnd: true,\n        keywords: KEYWORDS,\n        contains: [\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      }\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/gauss.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/gcode.js":
/*!**********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/gcode.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n    var GCODE_IDENT_RE = '[A-Z_][A-Z0-9_.]*';\n    var GCODE_CLOSE_RE = '\\\\%';\n    var GCODE_KEYWORDS =\n      'IF DO WHILE ENDWHILE CALL ENDIF SUB ENDSUB GOTO REPEAT ENDREPEAT ' +\n      'EQ LT GT NE GE LE OR XOR';\n    var GCODE_START = {\n        className: 'meta',\n        begin: '([O])([0-9]+)'\n    };\n    var GCODE_CODE = [\n        hljs.C_LINE_COMMENT_MODE,\n        hljs.C_BLOCK_COMMENT_MODE,\n        hljs.COMMENT(/\\(/, /\\)/),\n        hljs.inherit(hljs.C_NUMBER_MODE, {begin: '([-+]?([0-9]*\\\\.?[0-9]+\\\\.?))|' + hljs.C_NUMBER_RE}),\n        hljs.inherit(hljs.APOS_STRING_MODE, {illegal: null}),\n        hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null}),\n        {\n            className: 'name',\n            begin: '([G])([0-9]+\\\\.?[0-9]?)'\n        },\n        {\n            className: 'name',\n            begin: '([M])([0-9]+\\\\.?[0-9]?)'\n        },\n        {\n            className: 'attr',\n            begin: '(VC|VS|#)',\n            end: '(\\\\d+)'\n        },\n        {\n            className: 'attr',\n            begin: '(VZOFX|VZOFY|VZOFZ)'\n        },\n        {\n            className: 'built_in',\n            begin: '(ATAN|ABS|ACOS|ASIN|SIN|COS|EXP|FIX|FUP|ROUND|LN|TAN)(\\\\[)',\n            end: '([-+]?([0-9]*\\\\.?[0-9]+\\\\.?))(\\\\])'\n        },\n        {\n            className: 'symbol',\n            variants: [\n                {\n                    begin: 'N', end: '\\\\d+',\n                    illegal: '\\\\W'\n                }\n            ]\n        }\n    ];\n\n    return {\n        aliases: ['nc'],\n        // Some implementations (CNC controls) of G-code are interoperable with uppercase and lowercase letters seamlessly.\n        // However, most prefer all uppercase and uppercase is customary.\n        case_insensitive: true,\n        lexemes: GCODE_IDENT_RE,\n        keywords: GCODE_KEYWORDS,\n        contains: [\n            {\n                className: 'meta',\n                begin: GCODE_CLOSE_RE\n            },\n            GCODE_START\n        ].concat(GCODE_CODE)\n    };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/gcode.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/gherkin.js":
/*!************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/gherkin.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function (hljs) {\n  return {\n    aliases: ['feature'],\n    keywords: 'Feature Background Ability Business\\ Need Scenario Scenarios Scenario\\ Outline Scenario\\ Template Examples Given And Then But When',\n    contains: [\n      {\n        className: 'symbol',\n        begin: '\\\\*',\n        relevance: 0\n      },\n      {\n        className: 'meta',\n        begin: '@[^@\\\\s]+'\n      },\n      {\n        begin: '\\\\|', end: '\\\\|\\\\w*$',\n        contains: [\n          {\n            className: 'string',\n            begin: '[^|]+'\n          }\n        ]\n      },\n      {\n        className: 'variable',\n        begin: '<', end: '>'\n      },\n      hljs.HASH_COMMENT_MODE,\n      {\n        className: 'string',\n        begin: '\"\"\"', end: '\"\"\"'\n      },\n      hljs.QUOTE_STRING_MODE\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/gherkin.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/glsl.js":
/*!*********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/glsl.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  return {\n    keywords: {\n      keyword:\n        // Statements\n        'break continue discard do else for if return while switch case default ' +\n        // Qualifiers\n        'attribute binding buffer ccw centroid centroid varying coherent column_major const cw ' +\n        'depth_any depth_greater depth_less depth_unchanged early_fragment_tests equal_spacing ' +\n        'flat fractional_even_spacing fractional_odd_spacing highp in index inout invariant ' +\n        'invocations isolines layout line_strip lines lines_adjacency local_size_x local_size_y ' +\n        'local_size_z location lowp max_vertices mediump noperspective offset origin_upper_left ' +\n        'out packed patch pixel_center_integer point_mode points precise precision quads r11f_g11f_b10f '+\n        'r16 r16_snorm r16f r16i r16ui r32f r32i r32ui r8 r8_snorm r8i r8ui readonly restrict ' +\n        'rg16 rg16_snorm rg16f rg16i rg16ui rg32f rg32i rg32ui rg8 rg8_snorm rg8i rg8ui rgb10_a2 ' +\n        'rgb10_a2ui rgba16 rgba16_snorm rgba16f rgba16i rgba16ui rgba32f rgba32i rgba32ui rgba8 ' +\n        'rgba8_snorm rgba8i rgba8ui row_major sample shared smooth std140 std430 stream triangle_strip ' +\n        'triangles triangles_adjacency uniform varying vertices volatile writeonly',\n      type:\n        'atomic_uint bool bvec2 bvec3 bvec4 dmat2 dmat2x2 dmat2x3 dmat2x4 dmat3 dmat3x2 dmat3x3 ' +\n        'dmat3x4 dmat4 dmat4x2 dmat4x3 dmat4x4 double dvec2 dvec3 dvec4 float iimage1D iimage1DArray ' +\n        'iimage2D iimage2DArray iimage2DMS iimage2DMSArray iimage2DRect iimage3D iimageBuffer' +\n        'iimageCube iimageCubeArray image1D image1DArray image2D image2DArray image2DMS image2DMSArray ' +\n        'image2DRect image3D imageBuffer imageCube imageCubeArray int isampler1D isampler1DArray ' +\n        'isampler2D isampler2DArray isampler2DMS isampler2DMSArray isampler2DRect isampler3D ' +\n        'isamplerBuffer isamplerCube isamplerCubeArray ivec2 ivec3 ivec4 mat2 mat2x2 mat2x3 ' +\n        'mat2x4 mat3 mat3x2 mat3x3 mat3x4 mat4 mat4x2 mat4x3 mat4x4 sampler1D sampler1DArray ' +\n        'sampler1DArrayShadow sampler1DShadow sampler2D sampler2DArray sampler2DArrayShadow ' +\n        'sampler2DMS sampler2DMSArray sampler2DRect sampler2DRectShadow sampler2DShadow sampler3D ' +\n        'samplerBuffer samplerCube samplerCubeArray samplerCubeArrayShadow samplerCubeShadow ' +\n        'image1D uimage1DArray uimage2D uimage2DArray uimage2DMS uimage2DMSArray uimage2DRect ' +\n        'uimage3D uimageBuffer uimageCube uimageCubeArray uint usampler1D usampler1DArray ' +\n        'usampler2D usampler2DArray usampler2DMS usampler2DMSArray usampler2DRect usampler3D ' +\n        'samplerBuffer usamplerCube usamplerCubeArray uvec2 uvec3 uvec4 vec2 vec3 vec4 void',\n      built_in:\n        // Constants\n        'gl_MaxAtomicCounterBindings gl_MaxAtomicCounterBufferSize gl_MaxClipDistances gl_MaxClipPlanes ' +\n        'gl_MaxCombinedAtomicCounterBuffers gl_MaxCombinedAtomicCounters gl_MaxCombinedImageUniforms ' +\n        'gl_MaxCombinedImageUnitsAndFragmentOutputs gl_MaxCombinedTextureImageUnits gl_MaxComputeAtomicCounterBuffers ' +\n        'gl_MaxComputeAtomicCounters gl_MaxComputeImageUniforms gl_MaxComputeTextureImageUnits ' +\n        'gl_MaxComputeUniformComponents gl_MaxComputeWorkGroupCount gl_MaxComputeWorkGroupSize ' +\n        'gl_MaxDrawBuffers gl_MaxFragmentAtomicCounterBuffers gl_MaxFragmentAtomicCounters ' +\n        'gl_MaxFragmentImageUniforms gl_MaxFragmentInputComponents gl_MaxFragmentInputVectors ' +\n        'gl_MaxFragmentUniformComponents gl_MaxFragmentUniformVectors gl_MaxGeometryAtomicCounterBuffers ' +\n        'gl_MaxGeometryAtomicCounters gl_MaxGeometryImageUniforms gl_MaxGeometryInputComponents ' +\n        'gl_MaxGeometryOutputComponents gl_MaxGeometryOutputVertices gl_MaxGeometryTextureImageUnits ' +\n        'gl_MaxGeometryTotalOutputComponents gl_MaxGeometryUniformComponents gl_MaxGeometryVaryingComponents ' +\n        'gl_MaxImageSamples gl_MaxImageUnits gl_MaxLights gl_MaxPatchVertices gl_MaxProgramTexelOffset ' +\n        'gl_MaxTessControlAtomicCounterBuffers gl_MaxTessControlAtomicCounters gl_MaxTessControlImageUniforms ' +\n        'gl_MaxTessControlInputComponents gl_MaxTessControlOutputComponents gl_MaxTessControlTextureImageUnits ' +\n        'gl_MaxTessControlTotalOutputComponents gl_MaxTessControlUniformComponents ' +\n        'gl_MaxTessEvaluationAtomicCounterBuffers gl_MaxTessEvaluationAtomicCounters ' +\n        'gl_MaxTessEvaluationImageUniforms gl_MaxTessEvaluationInputComponents gl_MaxTessEvaluationOutputComponents ' +\n        'gl_MaxTessEvaluationTextureImageUnits gl_MaxTessEvaluationUniformComponents ' +\n        'gl_MaxTessGenLevel gl_MaxTessPatchComponents gl_MaxTextureCoords gl_MaxTextureImageUnits ' +\n        'gl_MaxTextureUnits gl_MaxVaryingComponents gl_MaxVaryingFloats gl_MaxVaryingVectors ' +\n        'gl_MaxVertexAtomicCounterBuffers gl_MaxVertexAtomicCounters gl_MaxVertexAttribs gl_MaxVertexImageUniforms ' +\n        'gl_MaxVertexOutputComponents gl_MaxVertexOutputVectors gl_MaxVertexTextureImageUnits ' +\n        'gl_MaxVertexUniformComponents gl_MaxVertexUniformVectors gl_MaxViewports gl_MinProgramTexelOffset ' +\n        // Variables\n        'gl_BackColor gl_BackLightModelProduct gl_BackLightProduct gl_BackMaterial ' +\n        'gl_BackSecondaryColor gl_ClipDistance gl_ClipPlane gl_ClipVertex gl_Color ' +\n        'gl_DepthRange gl_EyePlaneQ gl_EyePlaneR gl_EyePlaneS gl_EyePlaneT gl_Fog gl_FogCoord ' +\n        'gl_FogFragCoord gl_FragColor gl_FragCoord gl_FragData gl_FragDepth gl_FrontColor ' +\n        'gl_FrontFacing gl_FrontLightModelProduct gl_FrontLightProduct gl_FrontMaterial ' +\n        'gl_FrontSecondaryColor gl_GlobalInvocationID gl_InstanceID gl_InvocationID gl_Layer gl_LightModel ' +\n        'gl_LightSource gl_LocalInvocationID gl_LocalInvocationIndex gl_ModelViewMatrix ' +\n        'gl_ModelViewMatrixInverse gl_ModelViewMatrixInverseTranspose gl_ModelViewMatrixTranspose ' +\n        'gl_ModelViewProjectionMatrix gl_ModelViewProjectionMatrixInverse gl_ModelViewProjectionMatrixInverseTranspose ' +\n        'gl_ModelViewProjectionMatrixTranspose gl_MultiTexCoord0 gl_MultiTexCoord1 gl_MultiTexCoord2 ' +\n        'gl_MultiTexCoord3 gl_MultiTexCoord4 gl_MultiTexCoord5 gl_MultiTexCoord6 gl_MultiTexCoord7 ' +\n        'gl_Normal gl_NormalMatrix gl_NormalScale gl_NumSamples gl_NumWorkGroups gl_ObjectPlaneQ ' +\n        'gl_ObjectPlaneR gl_ObjectPlaneS gl_ObjectPlaneT gl_PatchVerticesIn gl_Point gl_PointCoord ' +\n        'gl_PointSize gl_Position gl_PrimitiveID gl_PrimitiveIDIn gl_ProjectionMatrix gl_ProjectionMatrixInverse ' +\n        'gl_ProjectionMatrixInverseTranspose gl_ProjectionMatrixTranspose gl_SampleID gl_SampleMask ' +\n        'gl_SampleMaskIn gl_SamplePosition gl_SecondaryColor gl_TessCoord gl_TessLevelInner gl_TessLevelOuter ' +\n        'gl_TexCoord gl_TextureEnvColor gl_TextureMatrix gl_TextureMatrixInverse gl_TextureMatrixInverseTranspose ' +\n        'gl_TextureMatrixTranspose gl_Vertex gl_VertexID gl_ViewportIndex gl_WorkGroupID gl_WorkGroupSize gl_in gl_out ' +\n        // Functions\n        'EmitStreamVertex EmitVertex EndPrimitive EndStreamPrimitive abs acos acosh all any asin ' +\n        'asinh atan atanh atomicAdd atomicAnd atomicCompSwap atomicCounter atomicCounterDecrement ' +\n        'atomicCounterIncrement atomicExchange atomicMax atomicMin atomicOr atomicXor barrier ' +\n        'bitCount bitfieldExtract bitfieldInsert bitfieldReverse ceil clamp cos cosh cross ' +\n        'dFdx dFdy degrees determinant distance dot equal exp exp2 faceforward findLSB findMSB ' +\n        'floatBitsToInt floatBitsToUint floor fma fract frexp ftransform fwidth greaterThan ' +\n        'greaterThanEqual groupMemoryBarrier imageAtomicAdd imageAtomicAnd imageAtomicCompSwap ' +\n        'imageAtomicExchange imageAtomicMax imageAtomicMin imageAtomicOr imageAtomicXor imageLoad ' +\n        'imageSize imageStore imulExtended intBitsToFloat interpolateAtCentroid interpolateAtOffset ' +\n        'interpolateAtSample inverse inversesqrt isinf isnan ldexp length lessThan lessThanEqual log ' +\n        'log2 matrixCompMult max memoryBarrier memoryBarrierAtomicCounter memoryBarrierBuffer ' +\n        'memoryBarrierImage memoryBarrierShared min mix mod modf noise1 noise2 noise3 noise4 ' +\n        'normalize not notEqual outerProduct packDouble2x32 packHalf2x16 packSnorm2x16 packSnorm4x8 ' +\n        'packUnorm2x16 packUnorm4x8 pow radians reflect refract round roundEven shadow1D shadow1DLod ' +\n        'shadow1DProj shadow1DProjLod shadow2D shadow2DLod shadow2DProj shadow2DProjLod sign sin sinh ' +\n        'smoothstep sqrt step tan tanh texelFetch texelFetchOffset texture texture1D texture1DLod ' +\n        'texture1DProj texture1DProjLod texture2D texture2DLod texture2DProj texture2DProjLod ' +\n        'texture3D texture3DLod texture3DProj texture3DProjLod textureCube textureCubeLod ' +\n        'textureGather textureGatherOffset textureGatherOffsets textureGrad textureGradOffset ' +\n        'textureLod textureLodOffset textureOffset textureProj textureProjGrad textureProjGradOffset ' +\n        'textureProjLod textureProjLodOffset textureProjOffset textureQueryLevels textureQueryLod ' +\n        'textureSize transpose trunc uaddCarry uintBitsToFloat umulExtended unpackDouble2x32 ' +\n        'unpackHalf2x16 unpackSnorm2x16 unpackSnorm4x8 unpackUnorm2x16 unpackUnorm4x8 usubBorrow',\n      literal: 'true false'\n    },\n    illegal: '\"',\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.C_NUMBER_MODE,\n      {\n        className: 'meta',\n        begin: '#', end: '$'\n      }\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/glsl.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/go.js":
/*!*******************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/go.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var GO_KEYWORDS = {\n    keyword:\n      'break default func interface select case map struct chan else goto package switch ' +\n      'const fallthrough if range type continue for import return var go defer ' +\n      'bool byte complex64 complex128 float32 float64 int8 int16 int32 int64 string uint8 ' +\n      'uint16 uint32 uint64 int uint uintptr rune',\n    literal:\n       'true false iota nil',\n    built_in:\n      'append cap close complex copy imag len make new panic print println real recover delete'\n  };\n  return {\n    aliases: ['golang'],\n    keywords: GO_KEYWORDS,\n    illegal: '</',\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        className: 'string',\n        variants: [\n          hljs.QUOTE_STRING_MODE,\n          {begin: '\\'', end: '[^\\\\\\\\]\\''},\n          {begin: '`', end: '`'},\n        ]\n      },\n      {\n        className: 'number',\n        variants: [\n          {begin: hljs.C_NUMBER_RE + '[dflsi]', relevance: 1},\n          hljs.C_NUMBER_MODE\n        ]\n      },\n      {\n        begin: /:=/ // relevance booster\n      },\n      {\n        className: 'function',\n        beginKeywords: 'func', end: /\\s*\\{/, excludeEnd: true,\n        contains: [\n          hljs.TITLE_MODE,\n          {\n            className: 'params',\n            begin: /\\(/, end: /\\)/,\n            keywords: GO_KEYWORDS,\n            illegal: /[\"']/\n          }\n        ]\n      }\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/go.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/golo.js":
/*!*********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/golo.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n    return {\n      keywords: {\n        keyword:\n          'println readln print import module function local return let var ' +\n          'while for foreach times in case when match with break continue ' +\n          'augment augmentation each find filter reduce ' +\n          'if then else otherwise try catch finally raise throw orIfNull ' +\n          'DynamicObject|10 DynamicVariable struct Observable map set vector list array',\n        literal:\n          'true false null'\n      },\n      contains: [\n        hljs.HASH_COMMENT_MODE,\n        hljs.QUOTE_STRING_MODE,\n        hljs.C_NUMBER_MODE,\n        {\n          className: 'meta', begin: '@[A-Za-z]+'\n        }\n      ]\n    }\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/golo.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/gradle.js":
/*!***********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/gradle.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  return {\n    case_insensitive: true,\n    keywords: {\n      keyword:\n        'task project allprojects subprojects artifacts buildscript configurations ' +\n        'dependencies repositories sourceSets description delete from into include ' +\n        'exclude source classpath destinationDir includes options sourceCompatibility ' +\n        'targetCompatibility group flatDir doLast doFirst flatten todir fromdir ant ' +\n        'def abstract break case catch continue default do else extends final finally ' +\n        'for if implements instanceof native new private protected public return static ' +\n        'switch synchronized throw throws transient try volatile while strictfp package ' +\n        'import false null super this true antlrtask checkstyle codenarc copy boolean ' +\n        'byte char class double float int interface long short void compile runTime ' +\n        'file fileTree abs any append asList asWritable call collect compareTo count ' +\n        'div dump each eachByte eachFile eachLine every find findAll flatten getAt ' +\n        'getErr getIn getOut getText grep immutable inject inspect intersect invokeMethods ' +\n        'isCase join leftShift minus multiply newInputStream newOutputStream newPrintWriter ' +\n        'newReader newWriter next plus pop power previous print println push putAt read ' +\n        'readBytes readLines reverse reverseEach round size sort splitEachLine step subMap ' +\n        'times toInteger toList tokenize upto waitForOrKill withPrintWriter withReader ' +\n        'withStream withWriter withWriterAppend write writeLine'\n    },\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.NUMBER_MODE,\n      hljs.REGEXP_MODE\n\n    ]\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/gradle.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/groovy.js":
/*!***********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/groovy.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n    return {\n        keywords: {\n            literal : 'true false null',\n            keyword:\n            'byte short char int long boolean float double void ' +\n            // groovy specific keywords\n            'def as in assert trait ' +\n            // common keywords with Java\n            'super this abstract static volatile transient public private protected synchronized final ' +\n            'class interface enum if else for while switch case break default continue ' +\n            'throw throws try catch finally implements extends new import package return instanceof'\n        },\n\n        contains: [\n            hljs.COMMENT(\n                '/\\\\*\\\\*',\n                '\\\\*/',\n                {\n                    relevance : 0,\n                    contains : [\n                      {\n                          // eat up @'s in emails to prevent them to be recognized as doctags\n                          begin: /\\w+@/, relevance: 0\n                      },\n                      {\n                          className : 'doctag',\n                          begin : '@[A-Za-z]+'\n                      }\n                    ]\n                }\n            ),\n            hljs.C_LINE_COMMENT_MODE,\n            hljs.C_BLOCK_COMMENT_MODE,\n            {\n                className: 'string',\n                begin: '\"\"\"', end: '\"\"\"'\n            },\n            {\n                className: 'string',\n                begin: \"'''\", end: \"'''\"\n            },\n            {\n                className: 'string',\n                begin: \"\\\\$/\", end: \"/\\\\$\",\n                relevance: 10\n            },\n            hljs.APOS_STRING_MODE,\n            {\n                className: 'regexp',\n                begin: /~?\\/[^\\/\\n]+\\//,\n                contains: [\n                    hljs.BACKSLASH_ESCAPE\n                ]\n            },\n            hljs.QUOTE_STRING_MODE,\n            {\n                className: 'meta',\n                begin: \"^#!/usr/bin/env\", end: '$',\n                illegal: '\\n'\n            },\n            hljs.BINARY_NUMBER_MODE,\n            {\n                className: 'class',\n                beginKeywords: 'class interface trait enum', end: '{',\n                illegal: ':',\n                contains: [\n                    {beginKeywords: 'extends implements'},\n                    hljs.UNDERSCORE_TITLE_MODE\n                ]\n            },\n            hljs.C_NUMBER_MODE,\n            {\n                className: 'meta', begin: '@[A-Za-z]+'\n            },\n            {\n                // highlight map keys and named parameters as strings\n                className: 'string', begin: /[^\\?]{0}[A-Za-z0-9_$]+ *:/\n            },\n            {\n                // catch middle element of the ternary operator\n                // to avoid highlight it as a label, named parameter, or map key\n                begin: /\\?/, end: /\\:/\n            },\n            {\n                // highlight labeled statements\n                className: 'symbol', begin: '^\\\\s*[A-Za-z0-9_$]+:',\n                relevance: 0\n            }\n        ],\n        illegal: /#|<\\//\n    }\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/groovy.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/haml.js":
/*!*********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/haml.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = // TODO support filter tags like :javascript, support inline HTML\nfunction(hljs) {\n  return {\n    case_insensitive: true,\n    contains: [\n      {\n        className: 'meta',\n        begin: '^!!!( (5|1\\\\.1|Strict|Frameset|Basic|Mobile|RDFa|XML\\\\b.*))?$',\n        relevance: 10\n      },\n      // FIXME these comments should be allowed to span indented lines\n      hljs.COMMENT(\n        '^\\\\s*(!=#|=#|-#|/).*$',\n        false,\n        {\n          relevance: 0\n        }\n      ),\n      {\n        begin: '^\\\\s*(-|=|!=)(?!#)',\n        starts: {\n          end: '\\\\n',\n          subLanguage: 'ruby'\n        }\n      },\n      {\n        className: 'tag',\n        begin: '^\\\\s*%',\n        contains: [\n          {\n            className: 'selector-tag',\n            begin: '\\\\w+'\n          },\n          {\n            className: 'selector-id',\n            begin: '#[\\\\w-]+'\n          },\n          {\n            className: 'selector-class',\n            begin: '\\\\.[\\\\w-]+'\n          },\n          {\n            begin: '{\\\\s*',\n            end: '\\\\s*}',\n            contains: [\n              {\n                begin: ':\\\\w+\\\\s*=>',\n                end: ',\\\\s+',\n                returnBegin: true,\n                endsWithParent: true,\n                contains: [\n                  {\n                    className: 'attr',\n                    begin: ':\\\\w+'\n                  },\n                  hljs.APOS_STRING_MODE,\n                  hljs.QUOTE_STRING_MODE,\n                  {\n                    begin: '\\\\w+',\n                    relevance: 0\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            begin: '\\\\(\\\\s*',\n            end: '\\\\s*\\\\)',\n            excludeEnd: true,\n            contains: [\n              {\n                begin: '\\\\w+\\\\s*=',\n                end: '\\\\s+',\n                returnBegin: true,\n                endsWithParent: true,\n                contains: [\n                  {\n                    className: 'attr',\n                    begin: '\\\\w+',\n                    relevance: 0\n                  },\n                  hljs.APOS_STRING_MODE,\n                  hljs.QUOTE_STRING_MODE,\n                  {\n                    begin: '\\\\w+',\n                    relevance: 0\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      },\n      {\n        begin: '^\\\\s*[=~]\\\\s*'\n      },\n      {\n        begin: '#{',\n        starts: {\n          end: '}',\n          subLanguage: 'ruby'\n        }\n      }\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/haml.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/handlebars.js":
/*!***************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/handlebars.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var BUILT_INS = {'builtin-name': 'each in with if else unless bindattr action collection debugger log outlet template unbound view yield'};\n  return {\n    aliases: ['hbs', 'html.hbs', 'html.handlebars'],\n    case_insensitive: true,\n    subLanguage: 'xml',\n    contains: [\n    hljs.COMMENT('{{!(--)?', '(--)?}}'),\n      {\n        className: 'template-tag',\n        begin: /\\{\\{[#\\/]/, end: /\\}\\}/,\n        contains: [\n          {\n            className: 'name',\n            begin: /[a-zA-Z\\.-]+/,\n            keywords: BUILT_INS,\n            starts: {\n              endsWithParent: true, relevance: 0,\n              contains: [\n                hljs.QUOTE_STRING_MODE\n              ]\n            }\n          }\n        ]\n      },\n      {\n        className: 'template-variable',\n        begin: /\\{\\{/, end: /\\}\\}/,\n        keywords: BUILT_INS\n      }\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/handlebars.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/haskell.js":
/*!************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/haskell.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var COMMENT = {\n    variants: [\n      hljs.COMMENT('--', '$'),\n      hljs.COMMENT(\n        '{-',\n        '-}',\n        {\n          contains: ['self']\n        }\n      )\n    ]\n  };\n\n  var PRAGMA = {\n    className: 'meta',\n    begin: '{-#', end: '#-}'\n  };\n\n  var PREPROCESSOR = {\n    className: 'meta',\n    begin: '^#', end: '$'\n  };\n\n  var CONSTRUCTOR = {\n    className: 'type',\n    begin: '\\\\b[A-Z][\\\\w\\']*', // TODO: other constructors (build-in, infix).\n    relevance: 0\n  };\n\n  var LIST = {\n    begin: '\\\\(', end: '\\\\)',\n    illegal: '\"',\n    contains: [\n      PRAGMA,\n      PREPROCESSOR,\n      {className: 'type', begin: '\\\\b[A-Z][\\\\w]*(\\\\((\\\\.\\\\.|,|\\\\w+)\\\\))?'},\n      hljs.inherit(hljs.TITLE_MODE, {begin: '[_a-z][\\\\w\\']*'}),\n      COMMENT\n    ]\n  };\n\n  var RECORD = {\n    begin: '{', end: '}',\n    contains: LIST.contains\n  };\n\n  return {\n    aliases: ['hs'],\n    keywords:\n      'let in if then else case of where do module import hiding ' +\n      'qualified type data newtype deriving class instance as default ' +\n      'infix infixl infixr foreign export ccall stdcall cplusplus ' +\n      'jvm dotnet safe unsafe family forall mdo proc rec',\n    contains: [\n\n      // Top-level constructions.\n\n      {\n        beginKeywords: 'module', end: 'where',\n        keywords: 'module where',\n        contains: [LIST, COMMENT],\n        illegal: '\\\\W\\\\.|;'\n      },\n      {\n        begin: '\\\\bimport\\\\b', end: '$',\n        keywords: 'import qualified as hiding',\n        contains: [LIST, COMMENT],\n        illegal: '\\\\W\\\\.|;'\n      },\n\n      {\n        className: 'class',\n        begin: '^(\\\\s*)?(class|instance)\\\\b', end: 'where',\n        keywords: 'class family instance where',\n        contains: [CONSTRUCTOR, LIST, COMMENT]\n      },\n      {\n        className: 'class',\n        begin: '\\\\b(data|(new)?type)\\\\b', end: '$',\n        keywords: 'data family type newtype deriving',\n        contains: [PRAGMA, CONSTRUCTOR, LIST, RECORD, COMMENT]\n      },\n      {\n        beginKeywords: 'default', end: '$',\n        contains: [CONSTRUCTOR, LIST, COMMENT]\n      },\n      {\n        beginKeywords: 'infix infixl infixr', end: '$',\n        contains: [hljs.C_NUMBER_MODE, COMMENT]\n      },\n      {\n        begin: '\\\\bforeign\\\\b', end: '$',\n        keywords: 'foreign import export ccall stdcall cplusplus jvm ' +\n                  'dotnet safe unsafe',\n        contains: [CONSTRUCTOR, hljs.QUOTE_STRING_MODE, COMMENT]\n      },\n      {\n        className: 'meta',\n        begin: '#!\\\\/usr\\\\/bin\\\\/env\\ runhaskell', end: '$'\n      },\n\n      // \"Whitespaces\".\n\n      PRAGMA,\n      PREPROCESSOR,\n\n      // Literals and names.\n\n      // TODO: characters.\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_NUMBER_MODE,\n      CONSTRUCTOR,\n      hljs.inherit(hljs.TITLE_MODE, {begin: '^[_a-z][\\\\w\\']*'}),\n\n      COMMENT,\n\n      {begin: '->|<-'} // No markup, relevance booster\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/haskell.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/haxe.js":
/*!*********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/haxe.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var IDENT_RE = '[a-zA-Z_$][a-zA-Z0-9_$]*';\n  var IDENT_FUNC_RETURN_TYPE_RE = '([*]|[a-zA-Z_$][a-zA-Z0-9_$]*)';\n\n  var HAXE_BASIC_TYPES = 'Int Float String Bool Dynamic Void Array ';\n\n  return {\n    aliases: ['hx'],\n    keywords: {\n      keyword: 'break case cast catch continue default do dynamic else enum extern ' +\n               'for function here if import in inline never new override package private get set ' +\n               'public return static super switch this throw trace try typedef untyped using var while ' +\n               HAXE_BASIC_TYPES,\n      built_in:\n        'trace this',\n      literal:\n        'true false null _'\n    },\n    contains: [\n      { className: 'string', // interpolate-able strings\n        begin: '\\'', end: '\\'',\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          { className: 'subst', // interpolation\n            begin: '\\\\$\\\\{', end: '\\\\}'\n          },\n          { className: 'subst', // interpolation\n            begin: '\\\\$', end: '\\\\W}'\n          }\n        ]\n      },\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.C_NUMBER_MODE,\n      { className: 'meta', // compiler meta\n        begin: '@:', end: '$'\n      },\n      { className: 'meta', // compiler conditionals\n        begin: '#', end: '$',\n        keywords: {'meta-keyword': 'if else elseif end error'}\n      },\n      { className: 'type', // function types\n        begin: ':[ \\t]*', end: '[^A-Za-z0-9_ \\t\\\\->]',\n        excludeBegin: true, excludeEnd: true,\n        relevance: 0\n      },\n      { className: 'type', // types\n        begin: ':[ \\t]*', end: '\\\\W',\n        excludeBegin: true, excludeEnd: true\n      },\n      { className: 'type', // instantiation\n        begin: 'new *', end: '\\\\W',\n        excludeBegin: true, excludeEnd: true\n      },\n      { className: 'class', // enums\n        beginKeywords: 'enum', end: '\\\\{',\n        contains: [\n          hljs.TITLE_MODE\n        ]\n      },\n      { className: 'class', // abstracts\n        beginKeywords: 'abstract', end: '[\\\\{$]',\n        contains: [\n          { className: 'type',\n            begin: '\\\\(', end: '\\\\)',\n            excludeBegin: true, excludeEnd: true\n          },\n          { className: 'type',\n            begin: 'from +', end: '\\\\W',\n            excludeBegin: true, excludeEnd: true\n          },\n          { className: 'type',\n            begin: 'to +', end: '\\\\W',\n            excludeBegin: true, excludeEnd: true\n          },\n          hljs.TITLE_MODE\n        ],\n        keywords: {\n          keyword: 'abstract from to'\n        }\n      },\n      { className: 'class', // classes\n        begin: '\\\\b(class|interface) +', end: '[\\\\{$]',  excludeEnd: true,\n        keywords: 'class interface',\n        contains: [\n          { className: 'keyword',\n            begin: '\\\\b(extends|implements) +',\n            keywords: 'extends implements',\n            contains: [\n              {\n                className: 'type',\n                begin: hljs.IDENT_RE,\n                relevance: 0\n              }\n            ]\n          },\n          hljs.TITLE_MODE\n        ]\n      },\n      { className: 'function',\n        beginKeywords: 'function', end: '\\\\(', excludeEnd: true,\n        illegal: '\\\\S',\n        contains: [\n          hljs.TITLE_MODE\n        ]\n      }\n    ],\n    illegal: /<\\//\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/haxe.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/hsp.js":
/*!********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/hsp.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  return {\n    case_insensitive: true,\n    lexemes: /[\\w\\._]+/,\n    keywords: 'goto gosub return break repeat loop continue wait await dim sdim foreach dimtype dup dupptr end stop newmod delmod mref run exgoto on mcall assert logmes newlab resume yield onexit onerror onkey onclick oncmd exist delete mkdir chdir dirlist bload bsave bcopy memfile if else poke wpoke lpoke getstr chdpm memexpand memcpy memset notesel noteadd notedel noteload notesave randomize noteunsel noteget split strrep setease button chgdisp exec dialog mmload mmplay mmstop mci pset pget syscolor mes print title pos circle cls font sysfont objsize picload color palcolor palette redraw width gsel gcopy gzoom gmode bmpsave hsvcolor getkey listbox chkbox combox input mesbox buffer screen bgscr mouse objsel groll line clrobj boxf objprm objmode stick grect grotate gsquare gradf objimage objskip objenable celload celdiv celput newcom querycom delcom cnvstow comres axobj winobj sendmsg comevent comevarg sarrayconv callfunc cnvwtos comevdisp libptr system hspstat hspver stat cnt err strsize looplev sublev iparam wparam lparam refstr refdval int rnd strlen length length2 length3 length4 vartype gettime peek wpeek lpeek varptr varuse noteinfo instr abs limit getease str strmid strf getpath strtrim sin cos tan atan sqrt double absf expf logf limitf powf geteasef mousex mousey mousew hwnd hinstance hdc ginfo objinfo dirinfo sysinfo thismod __hspver__ __hsp30__ __date__ __time__ __line__ __file__ _debug __hspdef__ and or xor not screen_normal screen_palette screen_hide screen_fixedsize screen_tool screen_frame gmode_gdi gmode_mem gmode_rgb0 gmode_alpha gmode_rgb0alpha gmode_add gmode_sub gmode_pixela ginfo_mx ginfo_my ginfo_act ginfo_sel ginfo_wx1 ginfo_wy1 ginfo_wx2 ginfo_wy2 ginfo_vx ginfo_vy ginfo_sizex ginfo_sizey ginfo_winx ginfo_winy ginfo_mesx ginfo_mesy ginfo_r ginfo_g ginfo_b ginfo_paluse ginfo_dispx ginfo_dispy ginfo_cx ginfo_cy ginfo_intid ginfo_newid ginfo_sx ginfo_sy objinfo_mode objinfo_bmscr objinfo_hwnd notemax notesize dir_cur dir_exe dir_win dir_sys dir_cmdline dir_desktop dir_mydoc dir_tv font_normal font_bold font_italic font_underline font_strikeout font_antialias objmode_normal objmode_guifont objmode_usefont gsquare_grad msgothic msmincho do until while wend for next _break _continue switch case default swbreak swend ddim ldim alloc m_pi rad2deg deg2rad ease_linear ease_quad_in ease_quad_out ease_quad_inout ease_cubic_in ease_cubic_out ease_cubic_inout ease_quartic_in ease_quartic_out ease_quartic_inout ease_bounce_in ease_bounce_out ease_bounce_inout ease_shake_in ease_shake_out ease_shake_inout ease_loop',\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.APOS_STRING_MODE,\n\n      {\n        // multi-line string\n        className: 'string',\n        begin: '{\"', end: '\"}',\n        contains: [hljs.BACKSLASH_ESCAPE]\n      },\n\n      hljs.COMMENT(';', '$', {relevance: 0}),\n\n      {\n        // pre-processor\n        className: 'meta',\n        begin: '#', end: '$',\n        keywords: {'meta-keyword': 'addion cfunc cmd cmpopt comfunc const defcfunc deffunc define else endif enum epack func global if ifdef ifndef include modcfunc modfunc modinit modterm module pack packopt regcmd runtime undef usecom uselib'},\n        contains: [\n          hljs.inherit(hljs.QUOTE_STRING_MODE, {className: 'meta-string'}),\n          hljs.NUMBER_MODE,\n          hljs.C_NUMBER_MODE,\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      },\n\n      {\n        // label\n        className: 'symbol',\n        begin: '^\\\\*(\\\\w+|@)'\n      },\n\n      hljs.NUMBER_MODE,\n      hljs.C_NUMBER_MODE\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/hsp.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/htmlbars.js":
/*!*************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/htmlbars.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var BUILT_INS = 'action collection component concat debugger each each-in else get hash if input link-to loc log mut outlet partial query-params render textarea unbound unless with yield view';\n\n  var ATTR_ASSIGNMENT = {\n    illegal: /\\}\\}/,\n    begin: /[a-zA-Z0-9_]+=/,\n    returnBegin: true,\n    relevance: 0,\n    contains: [\n      {\n        className: 'attr', begin: /[a-zA-Z0-9_]+/\n      }\n    ]\n  };\n\n  var SUB_EXPR = {\n    illegal: /\\}\\}/,\n    begin: /\\)/, end: /\\)/,\n    contains: [\n      {\n        begin: /[a-zA-Z\\.\\-]+/,\n        keywords: {built_in: BUILT_INS},\n        starts: {\n          endsWithParent: true, relevance: 0,\n          contains: [\n            hljs.QUOTE_STRING_MODE,\n          ]\n        }\n      }\n    ]\n  };\n\n  var TAG_INNARDS = {\n    endsWithParent: true, relevance: 0,\n    keywords: {keyword: 'as', built_in: BUILT_INS},\n    contains: [\n      hljs.QUOTE_STRING_MODE,\n      ATTR_ASSIGNMENT,\n      hljs.NUMBER_MODE\n    ]\n  };\n\n  return {\n    case_insensitive: true,\n    subLanguage: 'xml',\n    contains: [\n      hljs.COMMENT('{{!(--)?', '(--)?}}'),\n      {\n        className: 'template-tag',\n        begin: /\\{\\{[#\\/]/, end: /\\}\\}/,\n        contains: [\n          {\n            className: 'name',\n            begin: /[a-zA-Z\\.\\-]+/,\n            keywords: {'builtin-name': BUILT_INS},\n            starts: TAG_INNARDS\n          }\n        ]\n      },\n      {\n        className: 'template-variable',\n        begin: /\\{\\{[a-zA-Z][a-zA-Z\\-]+/, end: /\\}\\}/,\n        keywords: {keyword: 'as', built_in: BUILT_INS},\n        contains: [\n          hljs.QUOTE_STRING_MODE\n        ]\n      }\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/htmlbars.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/http.js":
/*!*********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/http.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var VERSION = 'HTTP/[0-9\\\\.]+';\n  return {\n    aliases: ['https'],\n    illegal: '\\\\S',\n    contains: [\n      {\n        begin: '^' + VERSION, end: '$',\n        contains: [{className: 'number', begin: '\\\\b\\\\d{3}\\\\b'}]\n      },\n      {\n        begin: '^[A-Z]+ (.*?) ' + VERSION + '$', returnBegin: true, end: '$',\n        contains: [\n          {\n            className: 'string',\n            begin: ' ', end: ' ',\n            excludeBegin: true, excludeEnd: true\n          },\n          {\n            begin: VERSION\n          },\n          {\n            className: 'keyword',\n            begin: '[A-Z]+'\n          }\n        ]\n      },\n      {\n        className: 'attribute',\n        begin: '^\\\\w', end: ': ', excludeEnd: true,\n        illegal: '\\\\n|\\\\s|=',\n        starts: {end: '$', relevance: 0}\n      },\n      {\n        begin: '\\\\n\\\\n',\n        starts: {subLanguage: [], endsWithParent: true}\n      }\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/http.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/hy.js":
/*!*******************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/hy.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var keywords = {\n    'builtin-name':\n      // keywords\n      '!= % %= & &= * ** **= *= *map ' +\n      '+ += , --build-class-- --import-- -= . / // //= ' +\n      '/= < << <<= <= = > >= >> >>= ' +\n      '@ @= ^ ^= abs accumulate all and any ap-compose ' +\n      'ap-dotimes ap-each ap-each-while ap-filter ap-first ap-if ap-last ap-map ap-map-when ap-pipe ' +\n      'ap-reduce ap-reject apply as-> ascii assert assoc bin break butlast ' +\n      'callable calling-module-name car case cdr chain chr coll? combinations compile ' +\n      'compress cond cons cons? continue count curry cut cycle dec ' +\n      'def default-method defclass defmacro defmacro-alias defmacro/g! defmain defmethod defmulti defn ' +\n      'defn-alias defnc defnr defreader defseq del delattr delete-route dict-comp dir ' +\n      'disassemble dispatch-reader-macro distinct divmod do doto drop drop-last drop-while empty? ' +\n      'end-sequence eval eval-and-compile eval-when-compile even? every? except exec filter first ' +\n      'flatten float? fn fnc fnr for for* format fraction genexpr ' +\n      'gensym get getattr global globals group-by hasattr hash hex id ' +\n      'identity if if* if-not if-python2 import in inc input instance? ' +\n      'integer integer-char? integer? interleave interpose is is-coll is-cons is-empty is-even ' +\n      'is-every is-float is-instance is-integer is-integer-char is-iterable is-iterator is-keyword is-neg is-none ' +\n      'is-not is-numeric is-odd is-pos is-string is-symbol is-zero isinstance islice issubclass ' +\n      'iter iterable? iterate iterator? keyword keyword? lambda last len let ' +\n      'lif lif-not list* list-comp locals loop macro-error macroexpand macroexpand-1 macroexpand-all ' +\n      'map max merge-with method-decorator min multi-decorator multicombinations name neg? next ' +\n      'none? nonlocal not not-in not? nth numeric? oct odd? open ' +\n      'or ord partition permutations pos? post-route postwalk pow prewalk print ' +\n      'product profile/calls profile/cpu put-route quasiquote quote raise range read read-str ' +\n      'recursive-replace reduce remove repeat repeatedly repr require rest round route ' +\n      'route-with-methods rwm second seq set-comp setattr setv some sorted string ' +\n      'string? sum switch symbol? take take-nth take-while tee try unless ' +\n      'unquote unquote-splicing vars walk when while with with* with-decorator with-gensyms ' +\n      'xi xor yield yield-from zero? zip zip-longest | |= ~'\n   };\n\n  var SYMBOLSTART = 'a-zA-Z_\\\\-!.?+*=<>&#\\'';\n  var SYMBOL_RE = '[' + SYMBOLSTART + '][' + SYMBOLSTART + '0-9/;:]*';\n  var SIMPLE_NUMBER_RE = '[-+]?\\\\d+(\\\\.\\\\d+)?';\n\n  var SHEBANG = {\n    className: 'meta',\n    begin: '^#!', end: '$'\n  };\n\n  var SYMBOL = {\n    begin: SYMBOL_RE,\n    relevance: 0\n  };\n  var NUMBER = {\n    className: 'number', begin: SIMPLE_NUMBER_RE,\n    relevance: 0\n  };\n  var STRING = hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null});\n  var COMMENT = hljs.COMMENT(\n    ';',\n    '$',\n    {\n      relevance: 0\n    }\n  );\n  var LITERAL = {\n    className: 'literal',\n    begin: /\\b([Tt]rue|[Ff]alse|nil|None)\\b/\n  };\n  var COLLECTION = {\n    begin: '[\\\\[\\\\{]', end: '[\\\\]\\\\}]'\n  };\n  var HINT = {\n    className: 'comment',\n    begin: '\\\\^' + SYMBOL_RE\n  };\n  var HINT_COL = hljs.COMMENT('\\\\^\\\\{', '\\\\}');\n  var KEY = {\n    className: 'symbol',\n    begin: '[:]{1,2}' + SYMBOL_RE\n  };\n  var LIST = {\n    begin: '\\\\(', end: '\\\\)'\n  };\n  var BODY = {\n    endsWithParent: true,\n    relevance: 0\n  };\n  var NAME = {\n    keywords: keywords,\n    lexemes: SYMBOL_RE,\n    className: 'name', begin: SYMBOL_RE,\n    starts: BODY\n  };\n  var DEFAULT_CONTAINS = [LIST, STRING, HINT, HINT_COL, COMMENT, KEY, COLLECTION, NUMBER, LITERAL, SYMBOL];\n\n  LIST.contains = [hljs.COMMENT('comment', ''), NAME, BODY];\n  BODY.contains = DEFAULT_CONTAINS;\n  COLLECTION.contains = DEFAULT_CONTAINS;\n\n  return {\n    aliases: ['hylang'],\n    illegal: /\\S/,\n    contains: [SHEBANG, LIST, STRING, HINT, HINT_COL, COMMENT, KEY, COLLECTION, NUMBER, LITERAL]\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/hy.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/inform7.js":
/*!************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/inform7.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var START_BRACKET = '\\\\[';\n  var END_BRACKET = '\\\\]';\n  return {\n    aliases: ['i7'],\n    case_insensitive: true,\n    keywords: {\n      // Some keywords more or less unique to I7, for relevance.\n      keyword:\n        // kind:\n        'thing room person man woman animal container ' +\n        'supporter backdrop door ' +\n        // characteristic:\n        'scenery open closed locked inside gender ' +\n        // verb:\n        'is are say understand ' +\n        // misc keyword:\n        'kind of rule'\n    },\n    contains: [\n      {\n        className: 'string',\n        begin: '\"', end: '\"',\n        relevance: 0,\n        contains: [\n          {\n            className: 'subst',\n            begin: START_BRACKET, end: END_BRACKET\n          }\n        ]\n      },\n      {\n        className: 'section',\n        begin: /^(Volume|Book|Part|Chapter|Section|Table)\\b/,\n        end: '$'\n      },\n      {\n        // Rule definition\n        // This is here for relevance.\n        begin: /^(Check|Carry out|Report|Instead of|To|Rule|When|Before|After)\\b/,\n        end: ':',\n        contains: [\n          {\n            //Rule name\n            begin: '\\\\(This', end: '\\\\)'\n          }\n        ]\n      },\n      {\n        className: 'comment',\n        begin: START_BRACKET, end: END_BRACKET,\n        contains: ['self']\n      }\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/inform7.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/ini.js":
/*!********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/ini.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var STRING = {\n    className: \"string\",\n    contains: [hljs.BACKSLASH_ESCAPE],\n    variants: [\n      {\n        begin: \"'''\", end: \"'''\",\n        relevance: 10\n      }, {\n        begin: '\"\"\"', end: '\"\"\"',\n        relevance: 10\n      }, {\n        begin: '\"', end: '\"'\n      }, {\n        begin: \"'\", end: \"'\"\n      }\n    ]\n  };\n  return {\n    aliases: ['toml'],\n    case_insensitive: true,\n    illegal: /\\S/,\n    contains: [\n      hljs.COMMENT(';', '$'),\n      hljs.HASH_COMMENT_MODE,\n      {\n        className: 'section',\n        begin: /^\\s*\\[+/, end: /\\]+/\n      },\n      {\n        begin: /^[a-z0-9\\[\\]_-]+\\s*=\\s*/, end: '$',\n        returnBegin: true,\n        contains: [\n          {\n            className: 'attr',\n            begin: /[a-z0-9\\[\\]_-]+/\n          },\n          {\n            begin: /=/, endsWithParent: true,\n            relevance: 0,\n            contains: [\n              {\n                className: 'literal',\n                begin: /\\bon|off|true|false|yes|no\\b/\n              },\n              {\n                className: 'variable',\n                variants: [\n                  {begin: /\\$[\\w\\d\"][\\w\\d_]*/},\n                  {begin: /\\$\\{(.*?)}/}\n                ]\n              },\n              STRING,\n              {\n                className: 'number',\n                begin: /([\\+\\-]+)?[\\d]+_[\\d_]+/\n              },\n              hljs.NUMBER_MODE\n            ]\n          }\n        ]\n      }\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/ini.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/irpf90.js":
/*!***********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/irpf90.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var PARAMS = {\n    className: 'params',\n    begin: '\\\\(', end: '\\\\)'\n  };\n\n  var F_KEYWORDS = {\n    literal: '.False. .True.',\n    keyword: 'kind do while private call intrinsic where elsewhere ' +\n      'type endtype endmodule endselect endinterface end enddo endif if forall endforall only contains default return stop then ' +\n      'public subroutine|10 function program .and. .or. .not. .le. .eq. .ge. .gt. .lt. ' +\n      'goto save else use module select case ' +\n      'access blank direct exist file fmt form formatted iostat name named nextrec number opened rec recl sequential status unformatted unit ' +\n      'continue format pause cycle exit ' +\n      'c_null_char c_alert c_backspace c_form_feed flush wait decimal round iomsg ' +\n      'synchronous nopass non_overridable pass protected volatile abstract extends import ' +\n      'non_intrinsic value deferred generic final enumerator class associate bind enum ' +\n      'c_int c_short c_long c_long_long c_signed_char c_size_t c_int8_t c_int16_t c_int32_t c_int64_t c_int_least8_t c_int_least16_t ' +\n      'c_int_least32_t c_int_least64_t c_int_fast8_t c_int_fast16_t c_int_fast32_t c_int_fast64_t c_intmax_t C_intptr_t c_float c_double ' +\n      'c_long_double c_float_complex c_double_complex c_long_double_complex c_bool c_char c_null_ptr c_null_funptr ' +\n      'c_new_line c_carriage_return c_horizontal_tab c_vertical_tab iso_c_binding c_loc c_funloc c_associated  c_f_pointer ' +\n      'c_ptr c_funptr iso_fortran_env character_storage_size error_unit file_storage_size input_unit iostat_end iostat_eor ' +\n      'numeric_storage_size output_unit c_f_procpointer ieee_arithmetic ieee_support_underflow_control ' +\n      'ieee_get_underflow_mode ieee_set_underflow_mode newunit contiguous recursive ' +\n      'pad position action delim readwrite eor advance nml interface procedure namelist include sequence elemental pure ' +\n      'integer real character complex logical dimension allocatable|10 parameter ' +\n      'external implicit|10 none double precision assign intent optional pointer ' +\n      'target in out common equivalence data ' +\n      // IRPF90 special keywords\n      'begin_provider &begin_provider end_provider begin_shell end_shell begin_template end_template subst assert touch ' +\n      'soft_touch provide no_dep free irp_if irp_else irp_endif irp_write irp_read',\n    built_in: 'alog alog10 amax0 amax1 amin0 amin1 amod cabs ccos cexp clog csin csqrt dabs dacos dasin datan datan2 dcos dcosh ddim dexp dint ' +\n      'dlog dlog10 dmax1 dmin1 dmod dnint dsign dsin dsinh dsqrt dtan dtanh float iabs idim idint idnint ifix isign max0 max1 min0 min1 sngl ' +\n      'algama cdabs cdcos cdexp cdlog cdsin cdsqrt cqabs cqcos cqexp cqlog cqsin cqsqrt dcmplx dconjg derf derfc dfloat dgamma dimag dlgama ' +\n      'iqint qabs qacos qasin qatan qatan2 qcmplx qconjg qcos qcosh qdim qerf qerfc qexp qgamma qimag qlgama qlog qlog10 qmax1 qmin1 qmod ' +\n      'qnint qsign qsin qsinh qsqrt qtan qtanh abs acos aimag aint anint asin atan atan2 char cmplx conjg cos cosh exp ichar index int log ' +\n      'log10 max min nint sign sin sinh sqrt tan tanh print write dim lge lgt lle llt mod nullify allocate deallocate ' +\n      'adjustl adjustr all allocated any associated bit_size btest ceiling count cshift date_and_time digits dot_product ' +\n      'eoshift epsilon exponent floor fraction huge iand ibclr ibits ibset ieor ior ishft ishftc lbound len_trim matmul ' +\n      'maxexponent maxloc maxval merge minexponent minloc minval modulo mvbits nearest pack present product ' +\n      'radix random_number random_seed range repeat reshape rrspacing scale scan selected_int_kind selected_real_kind ' +\n      'set_exponent shape size spacing spread sum system_clock tiny transpose trim ubound unpack verify achar iachar transfer ' +\n      'dble entry dprod cpu_time command_argument_count get_command get_command_argument get_environment_variable is_iostat_end ' +\n      'ieee_arithmetic ieee_support_underflow_control ieee_get_underflow_mode ieee_set_underflow_mode ' +\n      'is_iostat_eor move_alloc new_line selected_char_kind same_type_as extends_type_of'  +\n      'acosh asinh atanh bessel_j0 bessel_j1 bessel_jn bessel_y0 bessel_y1 bessel_yn erf erfc erfc_scaled gamma log_gamma hypot norm2 ' +\n      'atomic_define atomic_ref execute_command_line leadz trailz storage_size merge_bits ' +\n      'bge bgt ble blt dshiftl dshiftr findloc iall iany iparity image_index lcobound ucobound maskl maskr ' +\n      'num_images parity popcnt poppar shifta shiftl shiftr this_image ' +\n      // IRPF90 special built_ins\n      'IRP_ALIGN irp_here'\n  };\n  return {\n    case_insensitive: true,\n    keywords: F_KEYWORDS,\n    illegal: /\\/\\*/,\n    contains: [\n      hljs.inherit(hljs.APOS_STRING_MODE, {className: 'string', relevance: 0}),\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {className: 'string', relevance: 0}),\n      {\n        className: 'function',\n        beginKeywords: 'subroutine function program',\n        illegal: '[${=\\\\n]',\n        contains: [hljs.UNDERSCORE_TITLE_MODE, PARAMS]\n      },\n      hljs.COMMENT('!', '$', {relevance: 0}),\n      hljs.COMMENT('begin_doc', 'end_doc', {relevance: 10}),\n      {\n        className: 'number',\n        begin: '(?=\\\\b|\\\\+|\\\\-|\\\\.)(?=\\\\.\\\\d|\\\\d)(?:\\\\d+)?(?:\\\\.?\\\\d*)(?:[de][+-]?\\\\d+)?\\\\b\\\\.?',\n        relevance: 0\n      }\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/irpf90.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/java.js":
/*!*********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/java.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var JAVA_IDENT_RE = '[\\u00C0-\\u02B8a-zA-Z_$][\\u00C0-\\u02B8a-zA-Z_$0-9]*';\n  var GENERIC_IDENT_RE = JAVA_IDENT_RE + '(<' + JAVA_IDENT_RE + '(\\\\s*,\\\\s*' + JAVA_IDENT_RE + ')*>)?';\n  var KEYWORDS =\n    'false synchronized int abstract float private char boolean static null if const ' +\n    'for true while long strictfp finally protected import native final void ' +\n    'enum else break transient catch instanceof byte super volatile case assert short ' +\n    'package default double public try this switch continue throws protected public private ' +\n    'module requires exports do';\n\n  // https://docs.oracle.com/javase/7/docs/technotes/guides/language/underscores-literals.html\n  var JAVA_NUMBER_RE = '\\\\b' +\n    '(' +\n      '0[bB]([01]+[01_]+[01]+|[01]+)' + // 0b...\n      '|' +\n      '0[xX]([a-fA-F0-9]+[a-fA-F0-9_]+[a-fA-F0-9]+|[a-fA-F0-9]+)' + // 0x...\n      '|' +\n      '(' +\n        '([\\\\d]+[\\\\d_]+[\\\\d]+|[\\\\d]+)(\\\\.([\\\\d]+[\\\\d_]+[\\\\d]+|[\\\\d]+))?' +\n        '|' +\n        '\\\\.([\\\\d]+[\\\\d_]+[\\\\d]+|[\\\\d]+)' +\n      ')' +\n      '([eE][-+]?\\\\d+)?' + // octal, decimal, float\n    ')' +\n    '[lLfF]?';\n  var JAVA_NUMBER_MODE = {\n    className: 'number',\n    begin: JAVA_NUMBER_RE,\n    relevance: 0\n  };\n\n  return {\n    aliases: ['jsp'],\n    keywords: KEYWORDS,\n    illegal: /<\\/|#/,\n    contains: [\n      hljs.COMMENT(\n        '/\\\\*\\\\*',\n        '\\\\*/',\n        {\n          relevance : 0,\n          contains : [\n            {\n              // eat up @'s in emails to prevent them to be recognized as doctags\n              begin: /\\w+@/, relevance: 0\n            },\n            {\n              className : 'doctag',\n              begin : '@[A-Za-z]+'\n            }\n          ]\n        }\n      ),\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      {\n        className: 'class',\n        beginKeywords: 'class interface', end: /[{;=]/, excludeEnd: true,\n        keywords: 'class interface',\n        illegal: /[:\"\\[\\]]/,\n        contains: [\n          {beginKeywords: 'extends implements'},\n          hljs.UNDERSCORE_TITLE_MODE\n        ]\n      },\n      {\n        // Expression keywords prevent 'keyword Name(...)' from being\n        // recognized as a function definition\n        beginKeywords: 'new throw return else',\n        relevance: 0\n      },\n      {\n        className: 'function',\n        begin: '(' + GENERIC_IDENT_RE + '\\\\s+)+' + hljs.UNDERSCORE_IDENT_RE + '\\\\s*\\\\(', returnBegin: true, end: /[{;=]/,\n        excludeEnd: true,\n        keywords: KEYWORDS,\n        contains: [\n          {\n            begin: hljs.UNDERSCORE_IDENT_RE + '\\\\s*\\\\(', returnBegin: true,\n            relevance: 0,\n            contains: [hljs.UNDERSCORE_TITLE_MODE]\n          },\n          {\n            className: 'params',\n            begin: /\\(/, end: /\\)/,\n            keywords: KEYWORDS,\n            relevance: 0,\n            contains: [\n              hljs.APOS_STRING_MODE,\n              hljs.QUOTE_STRING_MODE,\n              hljs.C_NUMBER_MODE,\n              hljs.C_BLOCK_COMMENT_MODE\n            ]\n          },\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      },\n      JAVA_NUMBER_MODE,\n      {\n        className: 'meta', begin: '@[A-Za-z]+'\n      }\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/java.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/javascript.js":
/*!***************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/javascript.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var IDENT_RE = '[A-Za-z$_][0-9A-Za-z$_]*';\n  var KEYWORDS = {\n    keyword:\n      'in of if for while finally var new function do return void else break catch ' +\n      'instanceof with throw case default try this switch continue typeof delete ' +\n      'let yield const export super debugger as async await static ' +\n      // ECMAScript 6 modules import\n      'import from as'\n    ,\n    literal:\n      'true false null undefined NaN Infinity',\n    built_in:\n      'eval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent ' +\n      'encodeURI encodeURIComponent escape unescape Object Function Boolean Error ' +\n      'EvalError InternalError RangeError ReferenceError StopIteration SyntaxError ' +\n      'TypeError URIError Number Math Date String RegExp Array Float32Array ' +\n      'Float64Array Int16Array Int32Array Int8Array Uint16Array Uint32Array ' +\n      'Uint8Array Uint8ClampedArray ArrayBuffer DataView JSON Intl arguments require ' +\n      'module console window document Symbol Set Map WeakSet WeakMap Proxy Reflect ' +\n      'Promise'\n  };\n  var EXPRESSIONS;\n  var NUMBER = {\n    className: 'number',\n    variants: [\n      { begin: '\\\\b(0[bB][01]+)' },\n      { begin: '\\\\b(0[oO][0-7]+)' },\n      { begin: hljs.C_NUMBER_RE }\n    ],\n    relevance: 0\n  };\n  var SUBST = {\n    className: 'subst',\n    begin: '\\\\$\\\\{', end: '\\\\}',\n    keywords: KEYWORDS,\n    contains: []  // defined later\n  };\n  var TEMPLATE_STRING = {\n    className: 'string',\n    begin: '`', end: '`',\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      SUBST\n    ]\n  };\n  SUBST.contains = [\n    hljs.APOS_STRING_MODE,\n    hljs.QUOTE_STRING_MODE,\n    TEMPLATE_STRING,\n    NUMBER,\n    hljs.REGEXP_MODE\n  ]\n  var PARAMS_CONTAINS = SUBST.contains.concat([\n    hljs.C_BLOCK_COMMENT_MODE,\n    hljs.C_LINE_COMMENT_MODE\n  ]);\n\n  return {\n    aliases: ['js', 'jsx'],\n    keywords: KEYWORDS,\n    contains: [\n      {\n        className: 'meta',\n        relevance: 10,\n        begin: /^\\s*['\"]use (strict|asm)['\"]/\n      },\n      {\n        className: 'meta',\n        begin: /^#!/, end: /$/\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      TEMPLATE_STRING,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      NUMBER,\n      { // object attr container\n        begin: /[{,]\\s*/, relevance: 0,\n        contains: [\n          {\n            begin: IDENT_RE + '\\\\s*:', returnBegin: true,\n            relevance: 0,\n            contains: [{className: 'attr', begin: IDENT_RE, relevance: 0}]\n          }\n        ]\n      },\n      { // \"value\" container\n        begin: '(' + hljs.RE_STARTERS_RE + '|\\\\b(case|return|throw)\\\\b)\\\\s*',\n        keywords: 'return throw case',\n        contains: [\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          hljs.REGEXP_MODE,\n          {\n            className: 'function',\n            begin: '(\\\\(.*?\\\\)|' + IDENT_RE + ')\\\\s*=>', returnBegin: true,\n            end: '\\\\s*=>',\n            contains: [\n              {\n                className: 'params',\n                variants: [\n                  {\n                    begin: IDENT_RE\n                  },\n                  {\n                    begin: /\\(\\s*\\)/,\n                  },\n                  {\n                    begin: /\\(/, end: /\\)/,\n                    excludeBegin: true, excludeEnd: true,\n                    keywords: KEYWORDS,\n                    contains: PARAMS_CONTAINS\n                  }\n                ]\n              }\n            ]\n          },\n          { // E4X / JSX\n            begin: /</, end: /(\\/\\w+|\\w+\\/)>/,\n            subLanguage: 'xml',\n            contains: [\n              {begin: /<\\w+\\s*\\/>/, skip: true},\n              {\n                begin: /<\\w+/, end: /(\\/\\w+|\\w+\\/)>/, skip: true,\n                contains: [\n                  {begin: /<\\w+\\s*\\/>/, skip: true},\n                  'self'\n                ]\n              }\n            ]\n          }\n        ],\n        relevance: 0\n      },\n      {\n        className: 'function',\n        beginKeywords: 'function', end: /\\{/, excludeEnd: true,\n        contains: [\n          hljs.inherit(hljs.TITLE_MODE, {begin: IDENT_RE}),\n          {\n            className: 'params',\n            begin: /\\(/, end: /\\)/,\n            excludeBegin: true,\n            excludeEnd: true,\n            contains: PARAMS_CONTAINS\n          }\n        ],\n        illegal: /\\[|%/\n      },\n      {\n        begin: /\\$[(.]/ // relevance booster for a pattern common to JS libs: `$(something)` and `$.something`\n      },\n      hljs.METHOD_GUARD,\n      { // ES6 class\n        className: 'class',\n        beginKeywords: 'class', end: /[{;=]/, excludeEnd: true,\n        illegal: /[:\"\\[\\]]/,\n        contains: [\n          {beginKeywords: 'extends'},\n          hljs.UNDERSCORE_TITLE_MODE\n        ]\n      },\n      {\n        beginKeywords: 'constructor', end: /\\{/, excludeEnd: true\n      }\n    ],\n    illegal: /#(?!!)/\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/javascript.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/jboss-cli.js":
/*!**************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/jboss-cli.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function (hljs) {\n  var PARAM = {\n    begin: /[\\w-]+ *=/, returnBegin: true,\n    relevance: 0,\n    contains: [{className: 'attr', begin: /[\\w-]+/}]\n  };\n  var PARAMSBLOCK = {\n    className: 'params',\n    begin: /\\(/,\n    end: /\\)/,\n    contains: [PARAM],\n    relevance : 0\n  };\n  var OPERATION = {\n    className: 'function',\n    begin: /:[\\w\\-.]+/,\n    relevance: 0\n  };\n  var PATH = {\n    className: 'string',\n    begin: /\\B(([\\/.])[\\w\\-.\\/=]+)+/,\n  };\n  var COMMAND_PARAMS = {\n    className: 'params',\n    begin: /--[\\w\\-=\\/]+/,\n  };\n  return {\n    aliases: ['wildfly-cli'],\n    lexemes: '[a-z\\-]+',\n    keywords: {\n      keyword: 'alias batch cd clear command connect connection-factory connection-info data-source deploy ' +\n      'deployment-info deployment-overlay echo echo-dmr help history if jdbc-driver-info jms-queue|20 jms-topic|20 ls ' +\n      'patch pwd quit read-attribute read-operation reload rollout-plan run-batch set shutdown try unalias ' +\n      'undeploy unset version xa-data-source', // module\n      literal: 'true false'\n    },\n    contains: [\n      hljs.HASH_COMMENT_MODE,\n      hljs.QUOTE_STRING_MODE,\n      COMMAND_PARAMS,\n      OPERATION,\n      PATH,\n      PARAMSBLOCK\n    ]\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/jboss-cli.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/json.js":
/*!*********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/json.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var LITERALS = {literal: 'true false null'};\n  var TYPES = [\n    hljs.QUOTE_STRING_MODE,\n    hljs.C_NUMBER_MODE\n  ];\n  var VALUE_CONTAINER = {\n    end: ',', endsWithParent: true, excludeEnd: true,\n    contains: TYPES,\n    keywords: LITERALS\n  };\n  var OBJECT = {\n    begin: '{', end: '}',\n    contains: [\n      {\n        className: 'attr',\n        begin: /\"/, end: /\"/,\n        contains: [hljs.BACKSLASH_ESCAPE],\n        illegal: '\\\\n',\n      },\n      hljs.inherit(VALUE_CONTAINER, {begin: /:/})\n    ],\n    illegal: '\\\\S'\n  };\n  var ARRAY = {\n    begin: '\\\\[', end: '\\\\]',\n    contains: [hljs.inherit(VALUE_CONTAINER)], // inherit is a workaround for a bug that makes shared modes with endsWithParent compile only the ending of one of the parents\n    illegal: '\\\\S'\n  };\n  TYPES.splice(TYPES.length, 0, OBJECT, ARRAY);\n  return {\n    contains: TYPES,\n    keywords: LITERALS,\n    illegal: '\\\\S'\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/json.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/julia-repl.js":
/*!***************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/julia-repl.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  return {\n    contains: [\n      {\n        className: 'meta',\n        begin: /^julia>/,\n        relevance: 10,\n        starts: {\n          // end the highlighting if we are on a new line and the line does not have at\n          // least six spaces in the beginning\n          end: /^(?![ ]{6})/,\n          subLanguage: 'julia'\n      },\n      // jldoctest Markdown blocks are used in the Julia manual and package docs indicate\n      // code snippets that should be verified when the documentation is built. They can be\n      // either REPL-like or script-like, but are usually REPL-like and therefore we apply\n      // julia-repl highlighting to them. More information can be found in Documenter's\n      // manual: https://juliadocs.github.io/Documenter.jl/latest/man/doctests.html\n      aliases: ['jldoctest']\n      }\n    ]\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/julia-repl.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/julia.js":
/*!**********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/julia.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  // Since there are numerous special names in Julia, it is too much trouble\n  // to maintain them by hand. Hence these names (i.e. keywords, literals and\n  // built-ins) are automatically generated from Julia v0.6 itself through\n  // the following scripts for each.\n\n  var KEYWORDS = {\n    // # keyword generator, multi-word keywords handled manually below\n    // foreach(println, [\"in\", \"isa\", \"where\"])\n    // for kw in Base.REPLCompletions.complete_keyword(\"\")\n    //     if !(contains(kw, \" \") || kw == \"struct\")\n    //         println(kw)\n    //     end\n    // end\n    keyword:\n      'in isa where ' +\n      'baremodule begin break catch ccall const continue do else elseif end export false finally for function ' +\n      'global if import importall let local macro module quote return true try using while ' +\n      // legacy, to be deprecated in the next release\n      'type immutable abstract bitstype typealias ',\n\n    // # literal generator\n    // println(\"true\")\n    // println(\"false\")\n    // for name in Base.REPLCompletions.completions(\"\", 0)[1]\n    //     try\n    //         v = eval(Symbol(name))\n    //         if !(v isa Function || v isa Type || v isa TypeVar || v isa Module || v isa Colon)\n    //             println(name)\n    //         end\n    //     end\n    // end\n    literal:\n      'true false ' +\n      'ARGS C_NULL DevNull ENDIAN_BOM ENV I Inf Inf16 Inf32 Inf64 InsertionSort JULIA_HOME LOAD_PATH MergeSort ' +\n      'NaN NaN16 NaN32 NaN64 PROGRAM_FILE QuickSort RoundDown RoundFromZero RoundNearest RoundNearestTiesAway ' +\n      'RoundNearestTiesUp RoundToZero RoundUp STDERR STDIN STDOUT VERSION catalan e|0 eu|0 eulergamma golden im ' +\n      'nothing pi γ π φ ',\n\n    // # built_in generator:\n    // for name in Base.REPLCompletions.completions(\"\", 0)[1]\n    //     try\n    //         v = eval(Symbol(name))\n    //         if v isa Type || v isa TypeVar\n    //             println(name)\n    //         end\n    //     end\n    // end\n    built_in:\n      'ANY AbstractArray AbstractChannel AbstractFloat AbstractMatrix AbstractRNG AbstractSerializer AbstractSet ' +\n      'AbstractSparseArray AbstractSparseMatrix AbstractSparseVector AbstractString AbstractUnitRange AbstractVecOrMat ' +\n      'AbstractVector Any ArgumentError Array AssertionError Associative Base64DecodePipe Base64EncodePipe Bidiagonal '+\n      'BigFloat BigInt BitArray BitMatrix BitVector Bool BoundsError BufferStream CachingPool CapturedException ' +\n      'CartesianIndex CartesianRange Cchar Cdouble Cfloat Channel Char Cint Cintmax_t Clong Clonglong ClusterManager ' +\n      'Cmd CodeInfo Colon Complex Complex128 Complex32 Complex64 CompositeException Condition ConjArray ConjMatrix ' +\n      'ConjVector Cptrdiff_t Cshort Csize_t Cssize_t Cstring Cuchar Cuint Cuintmax_t Culong Culonglong Cushort Cwchar_t ' +\n      'Cwstring DataType Date DateFormat DateTime DenseArray DenseMatrix DenseVecOrMat DenseVector Diagonal Dict ' +\n      'DimensionMismatch Dims DirectIndexString Display DivideError DomainError EOFError EachLine Enum Enumerate ' +\n      'ErrorException Exception ExponentialBackOff Expr Factorization FileMonitor Float16 Float32 Float64 Function ' +\n      'Future GlobalRef GotoNode HTML Hermitian IO IOBuffer IOContext IOStream IPAddr IPv4 IPv6 IndexCartesian IndexLinear ' +\n      'IndexStyle InexactError InitError Int Int128 Int16 Int32 Int64 Int8 IntSet Integer InterruptException ' +\n      'InvalidStateException Irrational KeyError LabelNode LinSpace LineNumberNode LoadError LowerTriangular MIME Matrix ' +\n      'MersenneTwister Method MethodError MethodTable Module NTuple NewvarNode NullException Nullable Number ObjectIdDict ' +\n      'OrdinalRange OutOfMemoryError OverflowError Pair ParseError PartialQuickSort PermutedDimsArray Pipe ' +\n      'PollingFileWatcher ProcessExitedException Ptr QuoteNode RandomDevice Range RangeIndex Rational RawFD ' +\n      'ReadOnlyMemoryError Real ReentrantLock Ref Regex RegexMatch RemoteChannel RemoteException RevString RoundingMode ' +\n      'RowVector SSAValue SegmentationFault SerializationState Set SharedArray SharedMatrix SharedVector Signed ' +\n      'SimpleVector Slot SlotNumber SparseMatrixCSC SparseVector StackFrame StackOverflowError StackTrace StepRange ' +\n      'StepRangeLen StridedArray StridedMatrix StridedVecOrMat StridedVector String SubArray SubString SymTridiagonal ' +\n      'Symbol Symmetric SystemError TCPSocket Task Text TextDisplay Timer Tridiagonal Tuple Type TypeError TypeMapEntry ' +\n      'TypeMapLevel TypeName TypeVar TypedSlot UDPSocket UInt UInt128 UInt16 UInt32 UInt64 UInt8 UndefRefError UndefVarError ' +\n      'UnicodeError UniformScaling Union UnionAll UnitRange Unsigned UpperTriangular Val Vararg VecElement VecOrMat Vector ' +\n      'VersionNumber Void WeakKeyDict WeakRef WorkerConfig WorkerPool '\n  };\n\n  // ref: http://julia.readthedocs.org/en/latest/manual/variables/#allowed-variable-names\n  var VARIABLE_NAME_RE = '[A-Za-z_\\\\u00A1-\\\\uFFFF][A-Za-z_0-9\\\\u00A1-\\\\uFFFF]*';\n\n  // placeholder for recursive self-reference\n  var DEFAULT = {\n    lexemes: VARIABLE_NAME_RE, keywords: KEYWORDS, illegal: /<\\//\n  };\n\n  // ref: http://julia.readthedocs.org/en/latest/manual/integers-and-floating-point-numbers/\n  var NUMBER = {\n    className: 'number',\n    // supported numeric literals:\n    //  * binary literal (e.g. 0x10)\n    //  * octal literal (e.g. 0o76543210)\n    //  * hexadecimal literal (e.g. 0xfedcba876543210)\n    //  * hexadecimal floating point literal (e.g. 0x1p0, 0x1.2p2)\n    //  * decimal literal (e.g. 9876543210, 100_000_000)\n    //  * floating pointe literal (e.g. 1.2, 1.2f, .2, 1., 1.2e10, 1.2e-10)\n    begin: /(\\b0x[\\d_]*(\\.[\\d_]*)?|0x\\.\\d[\\d_]*)p[-+]?\\d+|\\b0[box][a-fA-F0-9][a-fA-F0-9_]*|(\\b\\d[\\d_]*(\\.[\\d_]*)?|\\.\\d[\\d_]*)([eEfF][-+]?\\d+)?/,\n    relevance: 0\n  };\n\n  var CHAR = {\n    className: 'string',\n    begin: /'(.|\\\\[xXuU][a-zA-Z0-9]+)'/\n  };\n\n  var INTERPOLATION = {\n    className: 'subst',\n    begin: /\\$\\(/, end: /\\)/,\n    keywords: KEYWORDS\n  };\n\n  var INTERPOLATED_VARIABLE = {\n    className: 'variable',\n    begin: '\\\\$' + VARIABLE_NAME_RE\n  };\n\n  // TODO: neatly escape normal code in string literal\n  var STRING = {\n    className: 'string',\n    contains: [hljs.BACKSLASH_ESCAPE, INTERPOLATION, INTERPOLATED_VARIABLE],\n    variants: [\n      { begin: /\\w*\"\"\"/, end: /\"\"\"\\w*/, relevance: 10 },\n      { begin: /\\w*\"/, end: /\"\\w*/ }\n    ]\n  };\n\n  var COMMAND = {\n    className: 'string',\n    contains: [hljs.BACKSLASH_ESCAPE, INTERPOLATION, INTERPOLATED_VARIABLE],\n    begin: '`', end: '`'\n  };\n\n  var MACROCALL = {\n    className: 'meta',\n    begin: '@' + VARIABLE_NAME_RE\n  };\n\n  var COMMENT = {\n    className: 'comment',\n    variants: [\n      { begin: '#=', end: '=#', relevance: 10 },\n      { begin: '#', end: '$' }\n    ]\n  };\n\n  DEFAULT.contains = [\n    NUMBER,\n    CHAR,\n    STRING,\n    COMMAND,\n    MACROCALL,\n    COMMENT,\n    hljs.HASH_COMMENT_MODE,\n    {\n      className: 'keyword',\n      begin:\n        '\\\\b(((abstract|primitive)\\\\s+)type|(mutable\\\\s+)?struct)\\\\b'\n    },\n    {begin: /<:/}  // relevance booster\n  ];\n  INTERPOLATION.contains = DEFAULT.contains;\n\n  return DEFAULT;\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/julia.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/kotlin.js":
/*!***********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/kotlin.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var KEYWORDS = {\n    keyword:\n      'abstract as val var vararg get set class object open private protected public noinline ' +\n      'crossinline dynamic final enum if else do while for when throw try catch finally ' +\n      'import package is in fun override companion reified inline lateinit init' +\n      'interface annotation data sealed internal infix operator out by constructor super ' +\n      // to be deleted soon\n      'trait volatile transient native default',\n    built_in:\n      'Byte Short Char Int Long Boolean Float Double Void Unit Nothing',\n    literal:\n      'true false null'\n  };\n  var KEYWORDS_WITH_LABEL = {\n    className: 'keyword',\n    begin: /\\b(break|continue|return|this)\\b/,\n    starts: {\n      contains: [\n        {\n          className: 'symbol',\n          begin: /@\\w+/\n        }\n      ]\n    }\n  };\n  var LABEL = {\n    className: 'symbol', begin: hljs.UNDERSCORE_IDENT_RE + '@'\n  };\n\n  // for string templates\n  var SUBST = {\n    className: 'subst',\n    begin: '\\\\${', end: '}', contains: [hljs.APOS_STRING_MODE, hljs.C_NUMBER_MODE]\n  };\n  var VARIABLE = {\n    className: 'variable', begin: '\\\\$' + hljs.UNDERSCORE_IDENT_RE\n  };\n  var STRING = {\n    className: 'string',\n    variants: [\n      {\n        begin: '\"\"\"', end: '\"\"\"',\n        contains: [VARIABLE, SUBST]\n      },\n      // Can't use built-in modes easily, as we want to use STRING in the meta\n      // context as 'meta-string' and there's no syntax to remove explicitly set\n      // classNames in built-in modes.\n      {\n        begin: '\\'', end: '\\'',\n        illegal: /\\n/,\n        contains: [hljs.BACKSLASH_ESCAPE]\n      },\n      {\n        begin: '\"', end: '\"',\n        illegal: /\\n/,\n        contains: [hljs.BACKSLASH_ESCAPE, VARIABLE, SUBST]\n      }\n    ]\n  };\n\n  var ANNOTATION_USE_SITE = {\n    className: 'meta', begin: '@(?:file|property|field|get|set|receiver|param|setparam|delegate)\\\\s*:(?:\\\\s*' + hljs.UNDERSCORE_IDENT_RE + ')?'\n  };\n  var ANNOTATION = {\n    className: 'meta', begin: '@' + hljs.UNDERSCORE_IDENT_RE,\n    contains: [\n      {\n        begin: /\\(/, end: /\\)/,\n        contains: [\n          hljs.inherit(STRING, {className: 'meta-string'})\n        ]\n      }\n    ]\n  };\n\n  return {\n    keywords: KEYWORDS,\n    contains : [\n      hljs.COMMENT(\n        '/\\\\*\\\\*',\n        '\\\\*/',\n        {\n          relevance : 0,\n          contains : [{\n            className : 'doctag',\n            begin : '@[A-Za-z]+'\n          }]\n        }\n      ),\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      KEYWORDS_WITH_LABEL,\n      LABEL,\n      ANNOTATION_USE_SITE,\n      ANNOTATION,\n      {\n        className: 'function',\n        beginKeywords: 'fun', end: '[(]|$',\n        returnBegin: true,\n        excludeEnd: true,\n        keywords: KEYWORDS,\n        illegal: /fun\\s+(<.*>)?[^\\s\\(]+(\\s+[^\\s\\(]+)\\s*=/,\n        relevance: 5,\n        contains: [\n          {\n            begin: hljs.UNDERSCORE_IDENT_RE + '\\\\s*\\\\(', returnBegin: true,\n            relevance: 0,\n            contains: [hljs.UNDERSCORE_TITLE_MODE]\n          },\n          {\n            className: 'type',\n            begin: /</, end: />/, keywords: 'reified',\n            relevance: 0\n          },\n          {\n            className: 'params',\n            begin: /\\(/, end: /\\)/,\n            endsParent: true,\n            keywords: KEYWORDS,\n            relevance: 0,\n            contains: [\n              {\n                begin: /:/, end: /[=,\\/]/, endsWithParent: true,\n                contains: [\n                  {className: 'type', begin: hljs.UNDERSCORE_IDENT_RE},\n                  hljs.C_LINE_COMMENT_MODE,\n                  hljs.C_BLOCK_COMMENT_MODE\n                ],\n                relevance: 0\n              },\n              hljs.C_LINE_COMMENT_MODE,\n              hljs.C_BLOCK_COMMENT_MODE,\n              ANNOTATION_USE_SITE,\n              ANNOTATION,\n              STRING,\n              hljs.C_NUMBER_MODE\n            ]\n          },\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      },\n      {\n        className: 'class',\n        beginKeywords: 'class interface trait', end: /[:\\{(]|$/, // remove 'trait' when removed from KEYWORDS\n        excludeEnd: true,\n        illegal: 'extends implements',\n        contains: [\n          {beginKeywords: 'public protected internal private constructor'},\n          hljs.UNDERSCORE_TITLE_MODE,\n          {\n            className: 'type',\n            begin: /</, end: />/, excludeBegin: true, excludeEnd: true,\n            relevance: 0\n          },\n          {\n            className: 'type',\n            begin: /[,:]\\s*/, end: /[<\\(,]|$/, excludeBegin: true, returnEnd: true\n          },\n          ANNOTATION_USE_SITE,\n          ANNOTATION\n        ]\n      },\n      STRING,\n      {\n        className: 'meta',\n        begin: \"^#!/usr/bin/env\", end: '$',\n        illegal: '\\n'\n      },\n      hljs.C_NUMBER_MODE\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/kotlin.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/lasso.js":
/*!**********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/lasso.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var LASSO_IDENT_RE = '[a-zA-Z_][\\\\w.]*';\n  var LASSO_ANGLE_RE = '<\\\\?(lasso(script)?|=)';\n  var LASSO_CLOSE_RE = '\\\\]|\\\\?>';\n  var LASSO_KEYWORDS = {\n    literal:\n      'true false none minimal full all void and or not ' +\n      'bw nbw ew new cn ncn lt lte gt gte eq neq rx nrx ft',\n    built_in:\n      'array date decimal duration integer map pair string tag xml null ' +\n      'boolean bytes keyword list locale queue set stack staticarray ' +\n      'local var variable global data self inherited currentcapture givenblock',\n    keyword:\n      'cache database_names database_schemanames database_tablenames ' +\n      'define_tag define_type email_batch encode_set html_comment handle ' +\n      'handle_error header if inline iterate ljax_target link ' +\n      'link_currentaction link_currentgroup link_currentrecord link_detail ' +\n      'link_firstgroup link_firstrecord link_lastgroup link_lastrecord ' +\n      'link_nextgroup link_nextrecord link_prevgroup link_prevrecord log ' +\n      'loop namespace_using output_none portal private protect records ' +\n      'referer referrer repeating resultset rows search_args ' +\n      'search_arguments select sort_args sort_arguments thread_atomic ' +\n      'value_list while abort case else fail_if fail_ifnot fail if_empty ' +\n      'if_false if_null if_true loop_abort loop_continue loop_count params ' +\n      'params_up return return_value run_children soap_definetag ' +\n      'soap_lastrequest soap_lastresponse tag_name ascending average by ' +\n      'define descending do equals frozen group handle_failure import in ' +\n      'into join let match max min on order parent protected provide public ' +\n      'require returnhome skip split_thread sum take thread to trait type ' +\n      'where with yield yieldhome'\n  };\n  var HTML_COMMENT = hljs.COMMENT(\n    '<!--',\n    '-->',\n    {\n      relevance: 0\n    }\n  );\n  var LASSO_NOPROCESS = {\n    className: 'meta',\n    begin: '\\\\[noprocess\\\\]',\n    starts: {\n      end: '\\\\[/noprocess\\\\]',\n      returnEnd: true,\n      contains: [HTML_COMMENT]\n    }\n  };\n  var LASSO_START = {\n    className: 'meta',\n    begin: '\\\\[/noprocess|' + LASSO_ANGLE_RE\n  };\n  var LASSO_DATAMEMBER = {\n    className: 'symbol',\n    begin: '\\'' + LASSO_IDENT_RE + '\\''\n  };\n  var LASSO_CODE = [\n    hljs.C_LINE_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE,\n    hljs.inherit(hljs.C_NUMBER_MODE, {begin: hljs.C_NUMBER_RE + '|(-?infinity|NaN)\\\\b'}),\n    hljs.inherit(hljs.APOS_STRING_MODE, {illegal: null}),\n    hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null}),\n    {\n      className: 'string',\n      begin: '`', end: '`'\n    },\n    { // variables\n      variants: [\n        {\n          begin: '[#$]' + LASSO_IDENT_RE\n        },\n        {\n          begin: '#', end: '\\\\d+',\n          illegal: '\\\\W'\n        }\n      ]\n    },\n    {\n      className: 'type',\n      begin: '::\\\\s*', end: LASSO_IDENT_RE,\n      illegal: '\\\\W'\n    },\n    {\n      className: 'params',\n      variants: [\n        {\n          begin: '-(?!infinity)' + LASSO_IDENT_RE,\n          relevance: 0\n        },\n        {\n          begin: '(\\\\.\\\\.\\\\.)'\n        }\n      ]\n    },\n    {\n      begin: /(->|\\.)\\s*/,\n      relevance: 0,\n      contains: [LASSO_DATAMEMBER]\n    },\n    {\n      className: 'class',\n      beginKeywords: 'define',\n      returnEnd: true, end: '\\\\(|=>',\n      contains: [\n        hljs.inherit(hljs.TITLE_MODE, {begin: LASSO_IDENT_RE + '(=(?!>))?|[-+*/%](?!>)'})\n      ]\n    }\n  ];\n  return {\n    aliases: ['ls', 'lassoscript'],\n    case_insensitive: true,\n    lexemes: LASSO_IDENT_RE + '|&[lg]t;',\n    keywords: LASSO_KEYWORDS,\n    contains: [\n      {\n        className: 'meta',\n        begin: LASSO_CLOSE_RE,\n        relevance: 0,\n        starts: { // markup\n          end: '\\\\[|' + LASSO_ANGLE_RE,\n          returnEnd: true,\n          relevance: 0,\n          contains: [HTML_COMMENT]\n        }\n      },\n      LASSO_NOPROCESS,\n      LASSO_START,\n      {\n        className: 'meta',\n        begin: '\\\\[no_square_brackets',\n        starts: {\n          end: '\\\\[/no_square_brackets\\\\]', // not implemented in the language\n          lexemes: LASSO_IDENT_RE + '|&[lg]t;',\n          keywords: LASSO_KEYWORDS,\n          contains: [\n            {\n              className: 'meta',\n              begin: LASSO_CLOSE_RE,\n              relevance: 0,\n              starts: {\n                end: '\\\\[noprocess\\\\]|' + LASSO_ANGLE_RE,\n                returnEnd: true,\n                contains: [HTML_COMMENT]\n              }\n            },\n            LASSO_NOPROCESS,\n            LASSO_START\n          ].concat(LASSO_CODE)\n        }\n      },\n      {\n        className: 'meta',\n        begin: '\\\\[',\n        relevance: 0\n      },\n      {\n        className: 'meta',\n        begin: '^#!', end:'lasso9$',\n        relevance: 10\n      }\n    ].concat(LASSO_CODE)\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/lasso.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/ldif.js":
/*!*********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/ldif.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  return {\n    contains: [\n      {\n        className: 'attribute',\n        begin: '^dn', end: ': ', excludeEnd: true,\n        starts: {end: '$', relevance: 0},\n        relevance: 10\n      },\n      {\n        className: 'attribute',\n        begin: '^\\\\w', end: ': ', excludeEnd: true,\n        starts: {end: '$', relevance: 0}\n      },\n      {\n        className: 'literal',\n        begin: '^-', end: '$'\n      },\n      hljs.HASH_COMMENT_MODE\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/ldif.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/leaf.js":
/*!*********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/leaf.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function (hljs) {\n  return {\n    contains: [\n      {\n        className: 'function',\n        begin: '#+' + '[A-Za-z_0-9]*' + '\\\\(',\n        end:' {',\n        returnBegin: true,\n        excludeEnd: true,\n        contains : [\n          {\n            className: 'keyword',\n            begin: '#+'\n          },\n          {\n            className: 'title',\n            begin: '[A-Za-z_][A-Za-z_0-9]*'\n          },\n          {\n            className: 'params',\n            begin: '\\\\(', end: '\\\\)',\n            endsParent: true,\n            contains: [\n              {\n                className: 'string',\n                begin: '\"',\n                end: '\"'\n              },\n              {\n                className: 'variable',\n                begin: '[A-Za-z_][A-Za-z_0-9]*'\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/leaf.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/less.js":
/*!*********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/less.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var IDENT_RE        = '[\\\\w-]+'; // yes, Less identifiers may begin with a digit\n  var INTERP_IDENT_RE = '(' + IDENT_RE + '|@{' + IDENT_RE + '})';\n\n  /* Generic Modes */\n\n  var RULES = [], VALUE = []; // forward def. for recursive modes\n\n  var STRING_MODE = function(c) { return {\n    // Less strings are not multiline (also include '~' for more consistent coloring of \"escaped\" strings)\n    className: 'string', begin: '~?' + c + '.*?' + c\n  };};\n\n  var IDENT_MODE = function(name, begin, relevance) { return {\n    className: name, begin: begin, relevance: relevance\n  };};\n\n  var PARENS_MODE = {\n    // used only to properly balance nested parens inside mixin call, def. arg list\n    begin: '\\\\(', end: '\\\\)', contains: VALUE, relevance: 0\n  };\n\n  // generic Less highlighter (used almost everywhere except selectors):\n  VALUE.push(\n    hljs.C_LINE_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE,\n    STRING_MODE(\"'\"),\n    STRING_MODE('\"'),\n    hljs.CSS_NUMBER_MODE, // fixme: it does not include dot for numbers like .5em :(\n    {\n      begin: '(url|data-uri)\\\\(',\n      starts: {className: 'string', end: '[\\\\)\\\\n]', excludeEnd: true}\n    },\n    IDENT_MODE('number', '#[0-9A-Fa-f]+\\\\b'),\n    PARENS_MODE,\n    IDENT_MODE('variable', '@@?' + IDENT_RE, 10),\n    IDENT_MODE('variable', '@{'  + IDENT_RE + '}'),\n    IDENT_MODE('built_in', '~?`[^`]*?`'), // inline javascript (or whatever host language) *multiline* string\n    { // @media features (it’s here to not duplicate things in AT_RULE_MODE with extra PARENS_MODE overriding):\n      className: 'attribute', begin: IDENT_RE + '\\\\s*:', end: ':', returnBegin: true, excludeEnd: true\n    },\n    {\n      className: 'meta',\n      begin: '!important'\n    }\n  );\n\n  var VALUE_WITH_RULESETS = VALUE.concat({\n    begin: '{', end: '}', contains: RULES\n  });\n\n  var MIXIN_GUARD_MODE = {\n    beginKeywords: 'when', endsWithParent: true,\n    contains: [{beginKeywords: 'and not'}].concat(VALUE) // using this form to override VALUE’s 'function' match\n  };\n\n  /* Rule-Level Modes */\n\n  var RULE_MODE = {\n    begin: INTERP_IDENT_RE + '\\\\s*:', returnBegin: true, end: '[;}]',\n    relevance: 0,\n    contains: [\n      {\n        className: 'attribute',\n        begin: INTERP_IDENT_RE, end: ':', excludeEnd: true,\n        starts: {\n          endsWithParent: true, illegal: '[<=$]',\n          relevance: 0,\n          contains: VALUE\n        }\n      }\n    ]\n  };\n\n  var AT_RULE_MODE = {\n    className: 'keyword',\n    begin: '@(import|media|charset|font-face|(-[a-z]+-)?keyframes|supports|document|namespace|page|viewport|host)\\\\b',\n    starts: {end: '[;{}]', returnEnd: true, contains: VALUE, relevance: 0}\n  };\n\n  // variable definitions and calls\n  var VAR_RULE_MODE = {\n    className: 'variable',\n    variants: [\n      // using more strict pattern for higher relevance to increase chances of Less detection.\n      // this is *the only* Less specific statement used in most of the sources, so...\n      // (we’ll still often loose to the css-parser unless there's '//' comment,\n      // simply because 1 variable just can't beat 99 properties :)\n      {begin: '@' + IDENT_RE + '\\\\s*:', relevance: 15},\n      {begin: '@' + IDENT_RE}\n    ],\n    starts: {end: '[;}]', returnEnd: true, contains: VALUE_WITH_RULESETS}\n  };\n\n  var SELECTOR_MODE = {\n    // first parse unambiguous selectors (i.e. those not starting with tag)\n    // then fall into the scary lookahead-discriminator variant.\n    // this mode also handles mixin definitions and calls\n    variants: [{\n      begin: '[\\\\.#:&\\\\[>]', end: '[;{}]'  // mixin calls end with ';'\n      }, {\n      begin: INTERP_IDENT_RE, end: '{'\n    }],\n    returnBegin: true,\n    returnEnd:   true,\n    illegal: '[<=\\'$\"]',\n    relevance: 0,\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      MIXIN_GUARD_MODE,\n      IDENT_MODE('keyword',  'all\\\\b'),\n      IDENT_MODE('variable', '@{'  + IDENT_RE + '}'),     // otherwise it’s identified as tag\n      IDENT_MODE('selector-tag',  INTERP_IDENT_RE + '%?', 0), // '%' for more consistent coloring of @keyframes \"tags\"\n      IDENT_MODE('selector-id', '#' + INTERP_IDENT_RE),\n      IDENT_MODE('selector-class', '\\\\.' + INTERP_IDENT_RE, 0),\n      IDENT_MODE('selector-tag',  '&', 0),\n      {className: 'selector-attr', begin: '\\\\[', end: '\\\\]'},\n      {className: 'selector-pseudo', begin: /:(:)?[a-zA-Z0-9\\_\\-\\+\\(\\)\"'.]+/},\n      {begin: '\\\\(', end: '\\\\)', contains: VALUE_WITH_RULESETS}, // argument list of parametric mixins\n      {begin: '!important'} // eat !important after mixin call or it will be colored as tag\n    ]\n  };\n\n  RULES.push(\n    hljs.C_LINE_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE,\n    AT_RULE_MODE,\n    VAR_RULE_MODE,\n    RULE_MODE,\n    SELECTOR_MODE\n  );\n\n  return {\n    case_insensitive: true,\n    illegal: '[=>\\'/<($\"]',\n    contains: RULES\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/less.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/lisp.js":
/*!*********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/lisp.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var LISP_IDENT_RE = '[a-zA-Z_\\\\-\\\\+\\\\*\\\\/\\\\<\\\\=\\\\>\\\\&\\\\#][a-zA-Z0-9_\\\\-\\\\+\\\\*\\\\/\\\\<\\\\=\\\\>\\\\&\\\\#!]*';\n  var MEC_RE = '\\\\|[^]*?\\\\|';\n  var LISP_SIMPLE_NUMBER_RE = '(\\\\-|\\\\+)?\\\\d+(\\\\.\\\\d+|\\\\/\\\\d+)?((d|e|f|l|s|D|E|F|L|S)(\\\\+|\\\\-)?\\\\d+)?';\n  var SHEBANG = {\n    className: 'meta',\n    begin: '^#!', end: '$'\n  };\n  var LITERAL = {\n    className: 'literal',\n    begin: '\\\\b(t{1}|nil)\\\\b'\n  };\n  var NUMBER = {\n    className: 'number',\n    variants: [\n      {begin: LISP_SIMPLE_NUMBER_RE, relevance: 0},\n      {begin: '#(b|B)[0-1]+(/[0-1]+)?'},\n      {begin: '#(o|O)[0-7]+(/[0-7]+)?'},\n      {begin: '#(x|X)[0-9a-fA-F]+(/[0-9a-fA-F]+)?'},\n      {begin: '#(c|C)\\\\(' + LISP_SIMPLE_NUMBER_RE + ' +' + LISP_SIMPLE_NUMBER_RE, end: '\\\\)'}\n    ]\n  };\n  var STRING = hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null});\n  var COMMENT = hljs.COMMENT(\n    ';', '$',\n    {\n      relevance: 0\n    }\n  );\n  var VARIABLE = {\n    begin: '\\\\*', end: '\\\\*'\n  };\n  var KEYWORD = {\n    className: 'symbol',\n    begin: '[:&]' + LISP_IDENT_RE\n  };\n  var IDENT = {\n    begin: LISP_IDENT_RE,\n    relevance: 0\n  };\n  var MEC = {\n    begin: MEC_RE\n  };\n  var QUOTED_LIST = {\n    begin: '\\\\(', end: '\\\\)',\n    contains: ['self', LITERAL, STRING, NUMBER, IDENT]\n  };\n  var QUOTED = {\n    contains: [NUMBER, STRING, VARIABLE, KEYWORD, QUOTED_LIST, IDENT],\n    variants: [\n      {\n        begin: '[\\'`]\\\\(', end: '\\\\)'\n      },\n      {\n        begin: '\\\\(quote ', end: '\\\\)',\n        keywords: {name: 'quote'}\n      },\n      {\n        begin: '\\'' + MEC_RE\n      }\n    ]\n  };\n  var QUOTED_ATOM = {\n    variants: [\n      {begin: '\\'' + LISP_IDENT_RE},\n      {begin: '#\\'' + LISP_IDENT_RE + '(::' + LISP_IDENT_RE + ')*'}\n    ]\n  };\n  var LIST = {\n    begin: '\\\\(\\\\s*', end: '\\\\)'\n  };\n  var BODY = {\n    endsWithParent: true,\n    relevance: 0\n  };\n  LIST.contains = [\n    {\n      className: 'name',\n      variants: [\n        {begin: LISP_IDENT_RE},\n        {begin: MEC_RE}\n      ]\n    },\n    BODY\n  ];\n  BODY.contains = [QUOTED, QUOTED_ATOM, LIST, LITERAL, NUMBER, STRING, COMMENT, VARIABLE, KEYWORD, MEC, IDENT];\n\n  return {\n    illegal: /\\S/,\n    contains: [\n      NUMBER,\n      SHEBANG,\n      LITERAL,\n      STRING,\n      COMMENT,\n      QUOTED,\n      QUOTED_ATOM,\n      LIST,\n      IDENT\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/lisp.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/livecodeserver.js":
/*!*******************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/livecodeserver.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var VARIABLE = {\n    begin: '\\\\b[gtps][A-Z]+[A-Za-z0-9_\\\\-]*\\\\b|\\\\$_[A-Z]+',\n    relevance: 0\n  };\n  var COMMENT_MODES = [\n    hljs.C_BLOCK_COMMENT_MODE,\n    hljs.HASH_COMMENT_MODE,\n    hljs.COMMENT('--', '$'),\n    hljs.COMMENT('[^:]//', '$')\n  ];\n  var TITLE1 = hljs.inherit(hljs.TITLE_MODE, {\n    variants: [\n      {begin: '\\\\b_*rig[A-Z]+[A-Za-z0-9_\\\\-]*'},\n      {begin: '\\\\b_[a-z0-9\\\\-]+'}\n    ]\n  });\n  var TITLE2 = hljs.inherit(hljs.TITLE_MODE, {begin: '\\\\b([A-Za-z0-9_\\\\-]+)\\\\b'});\n  return {\n    case_insensitive: false,\n    keywords: {\n      keyword:\n        '$_COOKIE $_FILES $_GET $_GET_BINARY $_GET_RAW $_POST $_POST_BINARY $_POST_RAW $_SESSION $_SERVER ' +\n        'codepoint codepoints segment segments codeunit codeunits sentence sentences trueWord trueWords paragraph ' +\n        'after byte bytes english the until http forever descending using line real8 with seventh ' +\n        'for stdout finally element word words fourth before black ninth sixth characters chars stderr ' +\n        'uInt1 uInt1s uInt2 uInt2s stdin string lines relative rel any fifth items from middle mid ' +\n        'at else of catch then third it file milliseconds seconds second secs sec int1 int1s int4 ' +\n        'int4s internet int2 int2s normal text item last long detailed effective uInt4 uInt4s repeat ' +\n        'end repeat URL in try into switch to words https token binfile each tenth as ticks tick ' +\n        'system real4 by dateItems without char character ascending eighth whole dateTime numeric short ' +\n        'first ftp integer abbreviated abbr abbrev private case while if ' +\n        'div mod wrap and or bitAnd bitNot bitOr bitXor among not in a an within ' +\n        'contains ends with begins the keys of keys',\n      literal:\n        'SIX TEN FORMFEED NINE ZERO NONE SPACE FOUR FALSE COLON CRLF PI COMMA ENDOFFILE EOF EIGHT FIVE ' +\n        'QUOTE EMPTY ONE TRUE RETURN CR LINEFEED RIGHT BACKSLASH NULL SEVEN TAB THREE TWO ' +\n        'six ten formfeed nine zero none space four false colon crlf pi comma endoffile eof eight five ' +\n        'quote empty one true return cr linefeed right backslash null seven tab three two ' +\n        'RIVERSION RISTATE FILE_READ_MODE FILE_WRITE_MODE FILE_WRITE_MODE DIR_WRITE_MODE FILE_READ_UMASK ' +\n        'FILE_WRITE_UMASK DIR_READ_UMASK DIR_WRITE_UMASK',\n      built_in:\n        'put abs acos aliasReference annuity arrayDecode arrayEncode asin atan atan2 average avg avgDev base64Decode ' +\n        'base64Encode baseConvert binaryDecode binaryEncode byteOffset byteToNum cachedURL cachedURLs charToNum ' +\n        'cipherNames codepointOffset codepointProperty codepointToNum codeunitOffset commandNames compound compress ' +\n        'constantNames cos date dateFormat decompress directories ' +\n        'diskSpace DNSServers exp exp1 exp2 exp10 extents files flushEvents folders format functionNames geometricMean global ' +\n        'globals hasMemory harmonicMean hostAddress hostAddressToName hostName hostNameToAddress isNumber ISOToMac itemOffset ' +\n        'keys len length libURLErrorData libUrlFormData libURLftpCommand libURLLastHTTPHeaders libURLLastRHHeaders ' +\n        'libUrlMultipartFormAddPart libUrlMultipartFormData libURLVersion lineOffset ln ln1 localNames log log2 log10 ' +\n        'longFilePath lower macToISO matchChunk matchText matrixMultiply max md5Digest median merge millisec ' +\n        'millisecs millisecond milliseconds min monthNames nativeCharToNum normalizeText num number numToByte numToChar ' +\n        'numToCodepoint numToNativeChar offset open openfiles openProcesses openProcessIDs openSockets ' +\n        'paragraphOffset paramCount param params peerAddress pendingMessages platform popStdDev populationStandardDeviation ' +\n        'populationVariance popVariance processID random randomBytes replaceText result revCreateXMLTree revCreateXMLTreeFromFile ' +\n        'revCurrentRecord revCurrentRecordIsFirst revCurrentRecordIsLast revDatabaseColumnCount revDatabaseColumnIsNull ' +\n        'revDatabaseColumnLengths revDatabaseColumnNames revDatabaseColumnNamed revDatabaseColumnNumbered ' +\n        'revDatabaseColumnTypes revDatabaseConnectResult revDatabaseCursors revDatabaseID revDatabaseTableNames ' +\n        'revDatabaseType revDataFromQuery revdb_closeCursor revdb_columnbynumber revdb_columncount revdb_columnisnull ' +\n        'revdb_columnlengths revdb_columnnames revdb_columntypes revdb_commit revdb_connect revdb_connections ' +\n        'revdb_connectionerr revdb_currentrecord revdb_cursorconnection revdb_cursorerr revdb_cursors revdb_dbtype ' +\n        'revdb_disconnect revdb_execute revdb_iseof revdb_isbof revdb_movefirst revdb_movelast revdb_movenext ' +\n        'revdb_moveprev revdb_query revdb_querylist revdb_recordcount revdb_rollback revdb_tablenames ' +\n        'revGetDatabaseDriverPath revNumberOfRecords revOpenDatabase revOpenDatabases revQueryDatabase ' +\n        'revQueryDatabaseBlob revQueryResult revQueryIsAtStart revQueryIsAtEnd revUnixFromMacPath revXMLAttribute ' +\n        'revXMLAttributes revXMLAttributeValues revXMLChildContents revXMLChildNames revXMLCreateTreeFromFileWithNamespaces ' +\n        'revXMLCreateTreeWithNamespaces revXMLDataFromXPathQuery revXMLEvaluateXPath revXMLFirstChild revXMLMatchingNode ' +\n        'revXMLNextSibling revXMLNodeContents revXMLNumberOfChildren revXMLParent revXMLPreviousSibling ' +\n        'revXMLRootNode revXMLRPC_CreateRequest revXMLRPC_Documents revXMLRPC_Error ' +\n        'revXMLRPC_GetHost revXMLRPC_GetMethod revXMLRPC_GetParam revXMLText revXMLRPC_Execute ' +\n        'revXMLRPC_GetParamCount revXMLRPC_GetParamNode revXMLRPC_GetParamType revXMLRPC_GetPath revXMLRPC_GetPort ' +\n        'revXMLRPC_GetProtocol revXMLRPC_GetRequest revXMLRPC_GetResponse revXMLRPC_GetSocket revXMLTree ' +\n        'revXMLTrees revXMLValidateDTD revZipDescribeItem revZipEnumerateItems revZipOpenArchives round sampVariance ' +\n        'sec secs seconds sentenceOffset sha1Digest shell shortFilePath sin specialFolderPath sqrt standardDeviation statRound ' +\n        'stdDev sum sysError systemVersion tan tempName textDecode textEncode tick ticks time to tokenOffset toLower toUpper ' +\n        'transpose truewordOffset trunc uniDecode uniEncode upper URLDecode URLEncode URLStatus uuid value variableNames ' +\n        'variance version waitDepth weekdayNames wordOffset xsltApplyStylesheet xsltApplyStylesheetFromFile xsltLoadStylesheet ' +\n        'xsltLoadStylesheetFromFile add breakpoint cancel clear local variable file word line folder directory URL close socket process ' +\n        'combine constant convert create new alias folder directory decrypt delete variable word line folder ' +\n        'directory URL dispatch divide do encrypt filter get include intersect kill libURLDownloadToFile ' +\n        'libURLFollowHttpRedirects libURLftpUpload libURLftpUploadFile libURLresetAll libUrlSetAuthCallback ' +\n        'libURLSetCustomHTTPHeaders libUrlSetExpect100 libURLSetFTPListCommand libURLSetFTPMode libURLSetFTPStopTime ' +\n        'libURLSetStatusCallback load multiply socket prepare process post seek rel relative read from process rename ' +\n        'replace require resetAll resolve revAddXMLNode revAppendXML revCloseCursor revCloseDatabase revCommitDatabase ' +\n        'revCopyFile revCopyFolder revCopyXMLNode revDeleteFolder revDeleteXMLNode revDeleteAllXMLTrees ' +\n        'revDeleteXMLTree revExecuteSQL revGoURL revInsertXMLNode revMoveFolder revMoveToFirstRecord revMoveToLastRecord ' +\n        'revMoveToNextRecord revMoveToPreviousRecord revMoveToRecord revMoveXMLNode revPutIntoXMLNode revRollBackDatabase ' +\n        'revSetDatabaseDriverPath revSetXMLAttribute revXMLRPC_AddParam revXMLRPC_DeleteAllDocuments revXMLAddDTD ' +\n        'revXMLRPC_Free revXMLRPC_FreeAll revXMLRPC_DeleteDocument revXMLRPC_DeleteParam revXMLRPC_SetHost ' +\n        'revXMLRPC_SetMethod revXMLRPC_SetPort revXMLRPC_SetProtocol revXMLRPC_SetSocket revZipAddItemWithData ' +\n        'revZipAddItemWithFile revZipAddUncompressedItemWithData revZipAddUncompressedItemWithFile revZipCancel ' +\n        'revZipCloseArchive revZipDeleteItem revZipExtractItemToFile revZipExtractItemToVariable revZipSetProgressCallback ' +\n        'revZipRenameItem revZipReplaceItemWithData revZipReplaceItemWithFile revZipOpenArchive send set sort split start stop ' +\n        'subtract union unload wait write'\n    },\n    contains: [\n      VARIABLE,\n      {\n        className: 'keyword',\n        begin: '\\\\bend\\\\sif\\\\b'\n      },\n      {\n        className: 'function',\n        beginKeywords: 'function', end: '$',\n        contains: [\n          VARIABLE,\n          TITLE2,\n          hljs.APOS_STRING_MODE,\n          hljs.QUOTE_STRING_MODE,\n          hljs.BINARY_NUMBER_MODE,\n          hljs.C_NUMBER_MODE,\n          TITLE1\n        ]\n      },\n      {\n        className: 'function',\n        begin: '\\\\bend\\\\s+', end: '$',\n        keywords: 'end',\n        contains: [\n          TITLE2,\n          TITLE1\n        ],\n        relevance: 0\n      },\n      {\n        beginKeywords: 'command on', end: '$',\n        contains: [\n          VARIABLE,\n          TITLE2,\n          hljs.APOS_STRING_MODE,\n          hljs.QUOTE_STRING_MODE,\n          hljs.BINARY_NUMBER_MODE,\n          hljs.C_NUMBER_MODE,\n          TITLE1\n        ]\n      },\n      {\n        className: 'meta',\n        variants: [\n          {\n            begin: '<\\\\?(rev|lc|livecode)',\n            relevance: 10\n          },\n          { begin: '<\\\\?' },\n          { begin: '\\\\?>' }\n        ]\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.BINARY_NUMBER_MODE,\n      hljs.C_NUMBER_MODE,\n      TITLE1\n    ].concat(COMMENT_MODES),\n    illegal: ';$|^\\\\[|^=|&|{'\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/livecodeserver.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/livescript.js":
/*!***************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/livescript.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var KEYWORDS = {\n    keyword:\n      // JS keywords\n      'in if for while finally new do return else break catch instanceof throw try this ' +\n      'switch continue typeof delete debugger case default function var with ' +\n      // LiveScript keywords\n      'then unless until loop of by when and or is isnt not it that otherwise from to til fallthrough super ' +\n      'case default function var void const let enum export import native ' +\n      '__hasProp __extends __slice __bind __indexOf',\n    literal:\n      // JS literals\n      'true false null undefined ' +\n      // LiveScript literals\n      'yes no on off it that void',\n    built_in:\n      'npm require console print module global window document'\n  };\n  var JS_IDENT_RE = '[A-Za-z$_](?:\\-[0-9A-Za-z$_]|[0-9A-Za-z$_])*';\n  var TITLE = hljs.inherit(hljs.TITLE_MODE, {begin: JS_IDENT_RE});\n  var SUBST = {\n    className: 'subst',\n    begin: /#\\{/, end: /}/,\n    keywords: KEYWORDS\n  };\n  var SUBST_SIMPLE = {\n    className: 'subst',\n    begin: /#[A-Za-z$_]/, end: /(?:\\-[0-9A-Za-z$_]|[0-9A-Za-z$_])*/,\n    keywords: KEYWORDS\n  };\n  var EXPRESSIONS = [\n    hljs.BINARY_NUMBER_MODE,\n    {\n      className: 'number',\n      begin: '(\\\\b0[xX][a-fA-F0-9_]+)|(\\\\b\\\\d(\\\\d|_\\\\d)*(\\\\.(\\\\d(\\\\d|_\\\\d)*)?)?(_*[eE]([-+]\\\\d(_\\\\d|\\\\d)*)?)?[_a-z]*)',\n      relevance: 0,\n      starts: {end: '(\\\\s*/)?', relevance: 0} // a number tries to eat the following slash to prevent treating it as a regexp\n    },\n    {\n      className: 'string',\n      variants: [\n        {\n          begin: /'''/, end: /'''/,\n          contains: [hljs.BACKSLASH_ESCAPE]\n        },\n        {\n          begin: /'/, end: /'/,\n          contains: [hljs.BACKSLASH_ESCAPE]\n        },\n        {\n          begin: /\"\"\"/, end: /\"\"\"/,\n          contains: [hljs.BACKSLASH_ESCAPE, SUBST, SUBST_SIMPLE]\n        },\n        {\n          begin: /\"/, end: /\"/,\n          contains: [hljs.BACKSLASH_ESCAPE, SUBST, SUBST_SIMPLE]\n        },\n        {\n          begin: /\\\\/, end: /(\\s|$)/,\n          excludeEnd: true\n        }\n      ]\n    },\n    {\n      className: 'regexp',\n      variants: [\n        {\n          begin: '//', end: '//[gim]*',\n          contains: [SUBST, hljs.HASH_COMMENT_MODE]\n        },\n        {\n          // regex can't start with space to parse x / 2 / 3 as two divisions\n          // regex can't start with *, and it supports an \"illegal\" in the main mode\n          begin: /\\/(?![ *])(\\\\\\/|.)*?\\/[gim]*(?=\\W|$)/\n        }\n      ]\n    },\n    {\n      begin: '@' + JS_IDENT_RE\n    },\n    {\n      begin: '``', end: '``',\n      excludeBegin: true, excludeEnd: true,\n      subLanguage: 'javascript'\n    }\n  ];\n  SUBST.contains = EXPRESSIONS;\n\n  var PARAMS = {\n    className: 'params',\n    begin: '\\\\(', returnBegin: true,\n    /* We need another contained nameless mode to not have every nested\n    pair of parens to be called \"params\" */\n    contains: [\n      {\n        begin: /\\(/, end: /\\)/,\n        keywords: KEYWORDS,\n        contains: ['self'].concat(EXPRESSIONS)\n      }\n    ]\n  };\n\n  return {\n    aliases: ['ls'],\n    keywords: KEYWORDS,\n    illegal: /\\/\\*/,\n    contains: EXPRESSIONS.concat([\n      hljs.COMMENT('\\\\/\\\\*', '\\\\*\\\\/'),\n      hljs.HASH_COMMENT_MODE,\n      {\n        className: 'function',\n        contains: [TITLE, PARAMS],\n        returnBegin: true,\n        variants: [\n          {\n            begin: '(' + JS_IDENT_RE + '\\\\s*(?:=|:=)\\\\s*)?(\\\\(.*\\\\))?\\\\s*\\\\B\\\\->\\\\*?', end: '\\\\->\\\\*?'\n          },\n          {\n            begin: '(' + JS_IDENT_RE + '\\\\s*(?:=|:=)\\\\s*)?!?(\\\\(.*\\\\))?\\\\s*\\\\B[-~]{1,2}>\\\\*?', end: '[-~]{1,2}>\\\\*?'\n          },\n          {\n            begin: '(' + JS_IDENT_RE + '\\\\s*(?:=|:=)\\\\s*)?(\\\\(.*\\\\))?\\\\s*\\\\B!?[-~]{1,2}>\\\\*?', end: '!?[-~]{1,2}>\\\\*?'\n          }\n        ]\n      },\n      {\n        className: 'class',\n        beginKeywords: 'class',\n        end: '$',\n        illegal: /[:=\"\\[\\]]/,\n        contains: [\n          {\n            beginKeywords: 'extends',\n            endsWithParent: true,\n            illegal: /[:=\"\\[\\]]/,\n            contains: [TITLE]\n          },\n          TITLE\n        ]\n      },\n      {\n        begin: JS_IDENT_RE + ':', end: ':',\n        returnBegin: true, returnEnd: true,\n        relevance: 0\n      }\n    ])\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/livescript.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/llvm.js":
/*!*********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/llvm.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var identifier = '([-a-zA-Z$._][\\\\w\\\\-$.]*)';\n  return {\n    //lexemes: '[.%]?' + hljs.IDENT_RE,\n    keywords:\n      'begin end true false declare define global ' +\n      'constant private linker_private internal ' +\n      'available_externally linkonce linkonce_odr weak ' +\n      'weak_odr appending dllimport dllexport common ' +\n      'default hidden protected extern_weak external ' +\n      'thread_local zeroinitializer undef null to tail ' +\n      'target triple datalayout volatile nuw nsw nnan ' +\n      'ninf nsz arcp fast exact inbounds align ' +\n      'addrspace section alias module asm sideeffect ' +\n      'gc dbg linker_private_weak attributes blockaddress ' +\n      'initialexec localdynamic localexec prefix unnamed_addr ' +\n      'ccc fastcc coldcc x86_stdcallcc x86_fastcallcc ' +\n      'arm_apcscc arm_aapcscc arm_aapcs_vfpcc ptx_device ' +\n      'ptx_kernel intel_ocl_bicc msp430_intrcc spir_func ' +\n      'spir_kernel x86_64_sysvcc x86_64_win64cc x86_thiscallcc ' +\n      'cc c signext zeroext inreg sret nounwind ' +\n      'noreturn noalias nocapture byval nest readnone ' +\n      'readonly inlinehint noinline alwaysinline optsize ssp ' +\n      'sspreq noredzone noimplicitfloat naked builtin cold ' +\n      'nobuiltin noduplicate nonlazybind optnone returns_twice ' +\n      'sanitize_address sanitize_memory sanitize_thread sspstrong ' +\n      'uwtable returned type opaque eq ne slt sgt ' +\n      'sle sge ult ugt ule uge oeq one olt ogt ' +\n      'ole oge ord uno ueq une x acq_rel acquire ' +\n      'alignstack atomic catch cleanup filter inteldialect ' +\n      'max min monotonic nand personality release seq_cst ' +\n      'singlethread umax umin unordered xchg add fadd ' +\n      'sub fsub mul fmul udiv sdiv fdiv urem srem ' +\n      'frem shl lshr ashr and or xor icmp fcmp ' +\n      'phi call trunc zext sext fptrunc fpext uitofp ' +\n      'sitofp fptoui fptosi inttoptr ptrtoint bitcast ' +\n      'addrspacecast select va_arg ret br switch invoke ' +\n      'unwind unreachable indirectbr landingpad resume ' +\n      'malloc alloca free load store getelementptr ' +\n      'extractelement insertelement shufflevector getresult ' +\n      'extractvalue insertvalue atomicrmw cmpxchg fence ' +\n      'argmemonly double',\n    contains: [\n      {\n        className: 'keyword',\n        begin: 'i\\\\d+'\n      },\n      hljs.COMMENT(\n        ';', '\\\\n', {relevance: 0}\n      ),\n      // Double quote string\n      hljs.QUOTE_STRING_MODE,\n      {\n        className: 'string',\n        variants: [\n          // Double-quoted string\n          { begin: '\"', end: '[^\\\\\\\\]\"' },\n        ],\n        relevance: 0\n      },\n      {\n        className: 'title',\n        variants: [\n          { begin: '@' + identifier },\n          { begin: '@\\\\d+' },\n          { begin: '!' + identifier },\n          { begin: '!\\\\d+' + identifier }\n        ]\n      },\n      {\n        className: 'symbol',\n        variants: [\n          { begin: '%' + identifier },\n          { begin: '%\\\\d+' },\n          { begin: '#\\\\d+' },\n        ]\n      },\n      {\n        className: 'number',\n        variants: [\n            { begin: '0[xX][a-fA-F0-9]+' },\n            { begin: '-?\\\\d+(?:[.]\\\\d+)?(?:[eE][-+]?\\\\d+(?:[.]\\\\d+)?)?' }\n        ],\n        relevance: 0\n      },\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/llvm.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/lsl.js":
/*!********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/lsl.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n\n    var LSL_STRING_ESCAPE_CHARS = {\n        className: 'subst',\n        begin: /\\\\[tn\"\\\\]/\n    };\n\n    var LSL_STRINGS = {\n        className: 'string',\n        begin: '\"',\n        end: '\"',\n        contains: [\n            LSL_STRING_ESCAPE_CHARS\n        ]\n    };\n\n    var LSL_NUMBERS = {\n        className: 'number',\n        begin: hljs.C_NUMBER_RE\n    };\n\n    var LSL_CONSTANTS = {\n        className: 'literal',\n        variants: [\n            {\n                begin: '\\\\b(?:PI|TWO_PI|PI_BY_TWO|DEG_TO_RAD|RAD_TO_DEG|SQRT2)\\\\b'\n            },\n            {\n                begin: '\\\\b(?:XP_ERROR_(?:EXPERIENCES_DISABLED|EXPERIENCE_(?:DISABLED|SUSPENDED)|INVALID_(?:EXPERIENCE|PARAMETERS)|KEY_NOT_FOUND|MATURITY_EXCEEDED|NONE|NOT_(?:FOUND|PERMITTED(?:_LAND)?)|NO_EXPERIENCE|QUOTA_EXCEEDED|RETRY_UPDATE|STORAGE_EXCEPTION|STORE_DISABLED|THROTTLED|UNKNOWN_ERROR)|JSON_APPEND|STATUS_(?:PHYSICS|ROTATE_[XYZ]|PHANTOM|SANDBOX|BLOCK_GRAB(?:_OBJECT)?|(?:DIE|RETURN)_AT_EDGE|CAST_SHADOWS|OK|MALFORMED_PARAMS|TYPE_MISMATCH|BOUNDS_ERROR|NOT_(?:FOUND|SUPPORTED)|INTERNAL_ERROR|WHITELIST_FAILED)|AGENT(?:_(?:BY_(?:LEGACY_|USER)NAME|FLYING|ATTACHMENTS|SCRIPTED|MOUSELOOK|SITTING|ON_OBJECT|AWAY|WALKING|IN_AIR|TYPING|CROUCHING|BUSY|ALWAYS_RUN|AUTOPILOT|LIST_(?:PARCEL(?:_OWNER)?|REGION)))?|CAMERA_(?:PITCH|DISTANCE|BEHINDNESS_(?:ANGLE|LAG)|(?:FOCUS|POSITION)(?:_(?:THRESHOLD|LOCKED|LAG))?|FOCUS_OFFSET|ACTIVE)|ANIM_ON|LOOP|REVERSE|PING_PONG|SMOOTH|ROTATE|SCALE|ALL_SIDES|LINK_(?:ROOT|SET|ALL_(?:OTHERS|CHILDREN)|THIS)|ACTIVE|PASS(?:IVE|_(?:ALWAYS|IF_NOT_HANDLED|NEVER))|SCRIPTED|CONTROL_(?:FWD|BACK|(?:ROT_)?(?:LEFT|RIGHT)|UP|DOWN|(?:ML_)?LBUTTON)|PERMISSION_(?:RETURN_OBJECTS|DEBIT|OVERRIDE_ANIMATIONS|SILENT_ESTATE_MANAGEMENT|TAKE_CONTROLS|TRIGGER_ANIMATION|ATTACH|CHANGE_LINKS|(?:CONTROL|TRACK)_CAMERA|TELEPORT)|INVENTORY_(?:TEXTURE|SOUND|OBJECT|SCRIPT|LANDMARK|CLOTHING|NOTECARD|BODYPART|ANIMATION|GESTURE|ALL|NONE)|CHANGED_(?:INVENTORY|COLOR|SHAPE|SCALE|TEXTURE|LINK|ALLOWED_DROP|OWNER|REGION(?:_START)?|TELEPORT|MEDIA)|OBJECT_(?:CLICK_ACTION|HOVER_HEIGHT|LAST_OWNER_ID|(?:PHYSICS|SERVER|STREAMING)_COST|UNKNOWN_DETAIL|CHARACTER_TIME|PHANTOM|PHYSICS|TEMP_ON_REZ|NAME|DESC|POS|PRIM_(?:COUNT|EQUIVALENCE)|RETURN_(?:PARCEL(?:_OWNER)?|REGION)|REZZER_KEY|ROO?T|VELOCITY|OMEGA|OWNER|GROUP|CREATOR|ATTACHED_POINT|RENDER_WEIGHT|(?:BODY_SHAPE|PATHFINDING)_TYPE|(?:RUNNING|TOTAL)_SCRIPT_COUNT|TOTAL_INVENTORY_COUNT|SCRIPT_(?:MEMORY|TIME))|TYPE_(?:INTEGER|FLOAT|STRING|KEY|VECTOR|ROTATION|INVALID)|(?:DEBUG|PUBLIC)_CHANNEL|ATTACH_(?:AVATAR_CENTER|CHEST|HEAD|BACK|PELVIS|MOUTH|CHIN|NECK|NOSE|BELLY|[LR](?:SHOULDER|HAND|FOOT|EAR|EYE|[UL](?:ARM|LEG)|HIP)|(?:LEFT|RIGHT)_PEC|HUD_(?:CENTER_[12]|TOP_(?:RIGHT|CENTER|LEFT)|BOTTOM(?:_(?:RIGHT|LEFT))?)|[LR]HAND_RING1|TAIL_(?:BASE|TIP)|[LR]WING|FACE_(?:JAW|[LR]EAR|[LR]EYE|TOUNGE)|GROIN|HIND_[LR]FOOT)|LAND_(?:LEVEL|RAISE|LOWER|SMOOTH|NOISE|REVERT)|DATA_(?:ONLINE|NAME|BORN|SIM_(?:POS|STATUS|RATING)|PAYINFO)|PAYMENT_INFO_(?:ON_FILE|USED)|REMOTE_DATA_(?:CHANNEL|REQUEST|REPLY)|PSYS_(?:PART_(?:BF_(?:ZERO|ONE(?:_MINUS_(?:DEST_COLOR|SOURCE_(ALPHA|COLOR)))?|DEST_COLOR|SOURCE_(ALPHA|COLOR))|BLEND_FUNC_(DEST|SOURCE)|FLAGS|(?:START|END)_(?:COLOR|ALPHA|SCALE|GLOW)|MAX_AGE|(?:RIBBON|WIND|INTERP_(?:COLOR|SCALE)|BOUNCE|FOLLOW_(?:SRC|VELOCITY)|TARGET_(?:POS|LINEAR)|EMISSIVE)_MASK)|SRC_(?:MAX_AGE|PATTERN|ANGLE_(?:BEGIN|END)|BURST_(?:RATE|PART_COUNT|RADIUS|SPEED_(?:MIN|MAX))|ACCEL|TEXTURE|TARGET_KEY|OMEGA|PATTERN_(?:DROP|EXPLODE|ANGLE(?:_CONE(?:_EMPTY)?)?)))|VEHICLE_(?:REFERENCE_FRAME|TYPE_(?:NONE|SLED|CAR|BOAT|AIRPLANE|BALLOON)|(?:LINEAR|ANGULAR)_(?:FRICTION_TIMESCALE|MOTOR_DIRECTION)|LINEAR_MOTOR_OFFSET|HOVER_(?:HEIGHT|EFFICIENCY|TIMESCALE)|BUOYANCY|(?:LINEAR|ANGULAR)_(?:DEFLECTION_(?:EFFICIENCY|TIMESCALE)|MOTOR_(?:DECAY_)?TIMESCALE)|VERTICAL_ATTRACTION_(?:EFFICIENCY|TIMESCALE)|BANKING_(?:EFFICIENCY|MIX|TIMESCALE)|FLAG_(?:NO_DEFLECTION_UP|LIMIT_(?:ROLL_ONLY|MOTOR_UP)|HOVER_(?:(?:WATER|TERRAIN|UP)_ONLY|GLOBAL_HEIGHT)|MOUSELOOK_(?:STEER|BANK)|CAMERA_DECOUPLED))|PRIM_(?:ALPHA_MODE(?:_(?:BLEND|EMISSIVE|MASK|NONE))?|NORMAL|SPECULAR|TYPE(?:_(?:BOX|CYLINDER|PRISM|SPHERE|TORUS|TUBE|RING|SCULPT))?|HOLE_(?:DEFAULT|CIRCLE|SQUARE|TRIANGLE)|MATERIAL(?:_(?:STONE|METAL|GLASS|WOOD|FLESH|PLASTIC|RUBBER))?|SHINY_(?:NONE|LOW|MEDIUM|HIGH)|BUMP_(?:NONE|BRIGHT|DARK|WOOD|BARK|BRICKS|CHECKER|CONCRETE|TILE|STONE|DISKS|GRAVEL|BLOBS|SIDING|LARGETILE|STUCCO|SUCTION|WEAVE)|TEXGEN_(?:DEFAULT|PLANAR)|SCULPT_(?:TYPE_(?:SPHERE|TORUS|PLANE|CYLINDER|MASK)|FLAG_(?:MIRROR|INVERT))|PHYSICS(?:_(?:SHAPE_(?:CONVEX|NONE|PRIM|TYPE)))?|(?:POS|ROT)_LOCAL|SLICE|TEXT|FLEXIBLE|POINT_LIGHT|TEMP_ON_REZ|PHANTOM|POSITION|SIZE|ROTATION|TEXTURE|NAME|OMEGA|DESC|LINK_TARGET|COLOR|BUMP_SHINY|FULLBRIGHT|TEXGEN|GLOW|MEDIA_(?:ALT_IMAGE_ENABLE|CONTROLS|(?:CURRENT|HOME)_URL|AUTO_(?:LOOP|PLAY|SCALE|ZOOM)|FIRST_CLICK_INTERACT|(?:WIDTH|HEIGHT)_PIXELS|WHITELIST(?:_ENABLE)?|PERMS_(?:INTERACT|CONTROL)|PARAM_MAX|CONTROLS_(?:STANDARD|MINI)|PERM_(?:NONE|OWNER|GROUP|ANYONE)|MAX_(?:URL_LENGTH|WHITELIST_(?:SIZE|COUNT)|(?:WIDTH|HEIGHT)_PIXELS)))|MASK_(?:BASE|OWNER|GROUP|EVERYONE|NEXT)|PERM_(?:TRANSFER|MODIFY|COPY|MOVE|ALL)|PARCEL_(?:MEDIA_COMMAND_(?:STOP|PAUSE|PLAY|LOOP|TEXTURE|URL|TIME|AGENT|UNLOAD|AUTO_ALIGN|TYPE|SIZE|DESC|LOOP_SET)|FLAG_(?:ALLOW_(?:FLY|(?:GROUP_)?SCRIPTS|LANDMARK|TERRAFORM|DAMAGE|CREATE_(?:GROUP_)?OBJECTS)|USE_(?:ACCESS_(?:GROUP|LIST)|BAN_LIST|LAND_PASS_LIST)|LOCAL_SOUND_ONLY|RESTRICT_PUSHOBJECT|ALLOW_(?:GROUP|ALL)_OBJECT_ENTRY)|COUNT_(?:TOTAL|OWNER|GROUP|OTHER|SELECTED|TEMP)|DETAILS_(?:NAME|DESC|OWNER|GROUP|AREA|ID|SEE_AVATARS))|LIST_STAT_(?:MAX|MIN|MEAN|MEDIAN|STD_DEV|SUM(?:_SQUARES)?|NUM_COUNT|GEOMETRIC_MEAN|RANGE)|PAY_(?:HIDE|DEFAULT)|REGION_FLAG_(?:ALLOW_DAMAGE|FIXED_SUN|BLOCK_TERRAFORM|SANDBOX|DISABLE_(?:COLLISIONS|PHYSICS)|BLOCK_FLY|ALLOW_DIRECT_TELEPORT|RESTRICT_PUSHOBJECT)|HTTP_(?:METHOD|MIMETYPE|BODY_(?:MAXLENGTH|TRUNCATED)|CUSTOM_HEADER|PRAGMA_NO_CACHE|VERBOSE_THROTTLE|VERIFY_CERT)|STRING_(?:TRIM(?:_(?:HEAD|TAIL))?)|CLICK_ACTION_(?:NONE|TOUCH|SIT|BUY|PAY|OPEN(?:_MEDIA)?|PLAY|ZOOM)|TOUCH_INVALID_FACE|PROFILE_(?:NONE|SCRIPT_MEMORY)|RC_(?:DATA_FLAGS|DETECT_PHANTOM|GET_(?:LINK_NUM|NORMAL|ROOT_KEY)|MAX_HITS|REJECT_(?:TYPES|AGENTS|(?:NON)?PHYSICAL|LAND))|RCERR_(?:CAST_TIME_EXCEEDED|SIM_PERF_LOW|UNKNOWN)|ESTATE_ACCESS_(?:ALLOWED_(?:AGENT|GROUP)_(?:ADD|REMOVE)|BANNED_AGENT_(?:ADD|REMOVE))|DENSITY|FRICTION|RESTITUTION|GRAVITY_MULTIPLIER|KFM_(?:COMMAND|CMD_(?:PLAY|STOP|PAUSE)|MODE|FORWARD|LOOP|PING_PONG|REVERSE|DATA|ROTATION|TRANSLATION)|ERR_(?:GENERIC|PARCEL_PERMISSIONS|MALFORMED_PARAMS|RUNTIME_PERMISSIONS|THROTTLED)|CHARACTER_(?:CMD_(?:(?:SMOOTH_)?STOP|JUMP)|DESIRED_(?:TURN_)?SPEED|RADIUS|STAY_WITHIN_PARCEL|LENGTH|ORIENTATION|ACCOUNT_FOR_SKIPPED_FRAMES|AVOIDANCE_MODE|TYPE(?:_(?:[ABCD]|NONE))?|MAX_(?:DECEL|TURN_RADIUS|(?:ACCEL|SPEED)))|PURSUIT_(?:OFFSET|FUZZ_FACTOR|GOAL_TOLERANCE|INTERCEPT)|REQUIRE_LINE_OF_SIGHT|FORCE_DIRECT_PATH|VERTICAL|HORIZONTAL|AVOID_(?:CHARACTERS|DYNAMIC_OBSTACLES|NONE)|PU_(?:EVADE_(?:HIDDEN|SPOTTED)|FAILURE_(?:DYNAMIC_PATHFINDING_DISABLED|INVALID_(?:GOAL|START)|NO_(?:NAVMESH|VALID_DESTINATION)|OTHER|TARGET_GONE|(?:PARCEL_)?UNREACHABLE)|(?:GOAL|SLOWDOWN_DISTANCE)_REACHED)|TRAVERSAL_TYPE(?:_(?:FAST|NONE|SLOW))?|CONTENT_TYPE_(?:ATOM|FORM|HTML|JSON|LLSD|RSS|TEXT|XHTML|XML)|GCNP_(?:RADIUS|STATIC)|(?:PATROL|WANDER)_PAUSE_AT_WAYPOINTS|OPT_(?:AVATAR|CHARACTER|EXCLUSION_VOLUME|LEGACY_LINKSET|MATERIAL_VOLUME|OTHER|STATIC_OBSTACLE|WALKABLE)|SIM_STAT_PCT_CHARS_STEPPED)\\\\b'\n            },\n            {\n                begin: '\\\\b(?:FALSE|TRUE)\\\\b'\n            },\n            {\n                begin: '\\\\b(?:ZERO_ROTATION)\\\\b'\n            },\n            {\n                begin: '\\\\b(?:EOF|JSON_(?:ARRAY|DELETE|FALSE|INVALID|NULL|NUMBER|OBJECT|STRING|TRUE)|NULL_KEY|TEXTURE_(?:BLANK|DEFAULT|MEDIA|PLYWOOD|TRANSPARENT)|URL_REQUEST_(?:GRANTED|DENIED))\\\\b'\n            },\n            {\n                begin: '\\\\b(?:ZERO_VECTOR|TOUCH_INVALID_(?:TEXCOORD|VECTOR))\\\\b'\n            }\n        ]\n    };\n\n    var LSL_FUNCTIONS = {\n        className: 'built_in',\n        begin: '\\\\b(?:ll(?:AgentInExperience|(?:Create|DataSize|Delete|KeyCount|Keys|Read|Update)KeyValue|GetExperience(?:Details|ErrorMessage)|ReturnObjectsBy(?:ID|Owner)|Json(?:2List|[GS]etValue|ValueType)|Sin|Cos|Tan|Atan2|Sqrt|Pow|Abs|Fabs|Frand|Floor|Ceil|Round|Vec(?:Mag|Norm|Dist)|Rot(?:Between|2(?:Euler|Fwd|Left|Up))|(?:Euler|Axes)2Rot|Whisper|(?:Region|Owner)?Say|Shout|Listen(?:Control|Remove)?|Sensor(?:Repeat|Remove)?|Detected(?:Name|Key|Owner|Type|Pos|Vel|Grab|Rot|Group|LinkNumber)|Die|Ground|Wind|(?:[GS]et)(?:AnimationOverride|MemoryLimit|PrimMediaParams|ParcelMusicURL|Object(?:Desc|Name)|PhysicsMaterial|Status|Scale|Color|Alpha|Texture|Pos|Rot|Force|Torque)|ResetAnimationOverride|(?:Scale|Offset|Rotate)Texture|(?:Rot)?Target(?:Remove)?|(?:Stop)?MoveToTarget|Apply(?:Rotational)?Impulse|Set(?:KeyframedMotion|ContentType|RegionPos|(?:Angular)?Velocity|Buoyancy|HoverHeight|ForceAndTorque|TimerEvent|ScriptState|Damage|TextureAnim|Sound(?:Queueing|Radius)|Vehicle(?:Type|(?:Float|Vector|Rotation)Param)|(?:Touch|Sit)?Text|Camera(?:Eye|At)Offset|PrimitiveParams|ClickAction|Link(?:Alpha|Color|PrimitiveParams(?:Fast)?|Texture(?:Anim)?|Camera|Media)|RemoteScriptAccessPin|PayPrice|LocalRot)|ScaleByFactor|Get(?:(?:Max|Min)ScaleFactor|ClosestNavPoint|StaticPath|SimStats|Env|PrimitiveParams|Link(?:PrimitiveParams|Number(?:OfSides)?|Key|Name|Media)|HTTPHeader|FreeURLs|Object(?:Details|PermMask|PrimCount)|Parcel(?:MaxPrims|Details|Prim(?:Count|Owners))|Attached(?:List)?|(?:SPMax|Free|Used)Memory|Region(?:Name|TimeDilation|FPS|Corner|AgentCount)|Root(?:Position|Rotation)|UnixTime|(?:Parcel|Region)Flags|(?:Wall|GMT)clock|SimulatorHostname|BoundingBox|GeometricCenter|Creator|NumberOf(?:Prims|NotecardLines|Sides)|Animation(?:List)?|(?:Camera|Local)(?:Pos|Rot)|Vel|Accel|Omega|Time(?:stamp|OfDay)|(?:Object|CenterOf)?Mass|MassMKS|Energy|Owner|(?:Owner)?Key|SunDirection|Texture(?:Offset|Scale|Rot)|Inventory(?:Number|Name|Key|Type|Creator|PermMask)|Permissions(?:Key)?|StartParameter|List(?:Length|EntryType)|Date|Agent(?:Size|Info|Language|List)|LandOwnerAt|NotecardLine|Script(?:Name|State))|(?:Get|Reset|GetAndReset)Time|PlaySound(?:Slave)?|LoopSound(?:Master|Slave)?|(?:Trigger|Stop|Preload)Sound|(?:(?:Get|Delete)Sub|Insert)String|To(?:Upper|Lower)|Give(?:InventoryList|Money)|RezObject|(?:Stop)?LookAt|Sleep|CollisionFilter|(?:Take|Release)Controls|DetachFromAvatar|AttachToAvatar(?:Temp)?|InstantMessage|(?:GetNext)?Email|StopHover|MinEventDelay|RotLookAt|String(?:Length|Trim)|(?:Start|Stop)Animation|TargetOmega|Request(?:Experience)?Permissions|(?:Create|Break)Link|BreakAllLinks|(?:Give|Remove)Inventory|Water|PassTouches|Request(?:Agent|Inventory)Data|TeleportAgent(?:Home|GlobalCoords)?|ModifyLand|CollisionSound|ResetScript|MessageLinked|PushObject|PassCollisions|AxisAngle2Rot|Rot2(?:Axis|Angle)|A(?:cos|sin)|AngleBetween|AllowInventoryDrop|SubStringIndex|List2(?:CSV|Integer|Json|Float|String|Key|Vector|Rot|List(?:Strided)?)|DeleteSubList|List(?:Statistics|Sort|Randomize|(?:Insert|Find|Replace)List)|EdgeOfWorld|AdjustSoundVolume|Key2Name|TriggerSoundLimited|EjectFromLand|(?:CSV|ParseString)2List|OverMyLand|SameGroup|UnSit|Ground(?:Slope|Normal|Contour)|GroundRepel|(?:Set|Remove)VehicleFlags|(?:AvatarOn)?(?:Link)?SitTarget|Script(?:Danger|Profiler)|Dialog|VolumeDetect|ResetOtherScript|RemoteLoadScriptPin|(?:Open|Close)RemoteDataChannel|SendRemoteData|RemoteDataReply|(?:Integer|String)ToBase64|XorBase64|Log(?:10)?|Base64To(?:String|Integer)|ParseStringKeepNulls|RezAtRoot|RequestSimulatorData|ForceMouselook|(?:Load|Release|(?:E|Une)scape)URL|ParcelMedia(?:CommandList|Query)|ModPow|MapDestination|(?:RemoveFrom|AddTo|Reset)Land(?:Pass|Ban)List|(?:Set|Clear)CameraParams|HTTP(?:Request|Response)|TextBox|DetectedTouch(?:UV|Face|Pos|(?:N|Bin)ormal|ST)|(?:MD5|SHA1|DumpList2)String|Request(?:Secure)?URL|Clear(?:Prim|Link)Media|(?:Link)?ParticleSystem|(?:Get|Request)(?:Username|DisplayName)|RegionSayTo|CastRay|GenerateKey|TransferLindenDollars|ManageEstateAccess|(?:Create|Delete)Character|ExecCharacterCmd|Evade|FleeFrom|NavigateTo|PatrolPoints|Pursue|UpdateCharacter|WanderWithin))\\\\b'\n    };\n\n    return {\n        illegal: ':',\n        contains: [\n            LSL_STRINGS,\n            {\n                className: 'comment',\n                variants: [\n                    hljs.COMMENT('//', '$'),\n                    hljs.COMMENT('/\\\\*', '\\\\*/')\n                ]\n            },\n            LSL_NUMBERS,\n            {\n                className: 'section',\n                variants: [\n                    {\n                        begin: '\\\\b(?:state|default)\\\\b'\n                    },\n                    {\n                        begin: '\\\\b(?:state_(?:entry|exit)|touch(?:_(?:start|end))?|(?:land_)?collision(?:_(?:start|end))?|timer|listen|(?:no_)?sensor|control|(?:not_)?at_(?:rot_)?target|money|email|experience_permissions(?:_denied)?|run_time_permissions|changed|attach|dataserver|moving_(?:start|end)|link_message|(?:on|object)_rez|remote_data|http_re(?:sponse|quest)|path_update|transaction_result)\\\\b'\n                    }\n                ]\n            },\n            LSL_FUNCTIONS,\n            LSL_CONSTANTS,\n            {\n                className: 'type',\n                begin: '\\\\b(?:integer|float|string|key|vector|quaternion|rotation|list)\\\\b'\n            }\n        ]\n    };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/lsl.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/lua.js":
/*!********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/lua.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var OPENING_LONG_BRACKET = '\\\\[=*\\\\[';\n  var CLOSING_LONG_BRACKET = '\\\\]=*\\\\]';\n  var LONG_BRACKETS = {\n    begin: OPENING_LONG_BRACKET, end: CLOSING_LONG_BRACKET,\n    contains: ['self']\n  };\n  var COMMENTS = [\n    hljs.COMMENT('--(?!' + OPENING_LONG_BRACKET + ')', '$'),\n    hljs.COMMENT(\n      '--' + OPENING_LONG_BRACKET,\n      CLOSING_LONG_BRACKET,\n      {\n        contains: [LONG_BRACKETS],\n        relevance: 10\n      }\n    )\n  ];\n  return {\n    lexemes: hljs.UNDERSCORE_IDENT_RE,\n    keywords: {\n      literal: \"true false nil\",\n      keyword: \"and break do else elseif end for goto if in local not or repeat return then until while\",\n      built_in:\n        //Metatags and globals:\n        '_G _ENV _VERSION __index __newindex __mode __call __metatable __tostring __len ' +\n        '__gc __add __sub __mul __div __mod __pow __concat __unm __eq __lt __le assert ' +\n        //Standard methods and properties:\n        'collectgarbage dofile error getfenv getmetatable ipairs load loadfile loadstring' +\n        'module next pairs pcall print rawequal rawget rawset require select setfenv' +\n        'setmetatable tonumber tostring type unpack xpcall arg self' +\n        //Library methods and properties (one line per library):\n        'coroutine resume yield status wrap create running debug getupvalue ' +\n        'debug sethook getmetatable gethook setmetatable setlocal traceback setfenv getinfo setupvalue getlocal getregistry getfenv ' +\n        'io lines write close flush open output type read stderr stdin input stdout popen tmpfile ' +\n        'math log max acos huge ldexp pi cos tanh pow deg tan cosh sinh random randomseed frexp ceil floor rad abs sqrt modf asin min mod fmod log10 atan2 exp sin atan ' +\n        'os exit setlocale date getenv difftime remove time clock tmpname rename execute package preload loadlib loaded loaders cpath config path seeall ' +\n        'string sub upper len gfind rep find match char dump gmatch reverse byte format gsub lower ' +\n        'table setn insert getn foreachi maxn foreach concat sort remove'\n    },\n    contains: COMMENTS.concat([\n      {\n        className: 'function',\n        beginKeywords: 'function', end: '\\\\)',\n        contains: [\n          hljs.inherit(hljs.TITLE_MODE, {begin: '([_a-zA-Z]\\\\w*\\\\.)*([_a-zA-Z]\\\\w*:)?[_a-zA-Z]\\\\w*'}),\n          {\n            className: 'params',\n            begin: '\\\\(', endsWithParent: true,\n            contains: COMMENTS\n          }\n        ].concat(COMMENTS)\n      },\n      hljs.C_NUMBER_MODE,\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      {\n        className: 'string',\n        begin: OPENING_LONG_BRACKET, end: CLOSING_LONG_BRACKET,\n        contains: [LONG_BRACKETS],\n        relevance: 5\n      }\n    ])\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/lua.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/makefile.js":
/*!*************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/makefile.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  /* Variables: simple (eg $(var)) and special (eg $@) */\n  var VARIABLE = {\n    className: 'variable',\n    variants: [\n      {\n        begin: '\\\\$\\\\(' + hljs.UNDERSCORE_IDENT_RE + '\\\\)',\n        contains: [hljs.BACKSLASH_ESCAPE],\n      },\n      {\n        begin: /\\$[@%<?\\^\\+\\*]/\n      },\n    ]\n  };\n  /* Quoted string with variables inside */\n  var QUOTE_STRING = {\n    className: 'string',\n    begin: /\"/, end: /\"/,\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      VARIABLE,\n    ]\n  };\n  /* Function: $(func arg,...) */\n  var FUNC = {\n    className: 'variable',\n    begin: /\\$\\([\\w-]+\\s/, end: /\\)/,\n    keywords: {\n      built_in:\n        'subst patsubst strip findstring filter filter-out sort ' +\n        'word wordlist firstword lastword dir notdir suffix basename ' +\n        'addsuffix addprefix join wildcard realpath abspath error warning ' +\n        'shell origin flavor foreach if or and call eval file value',\n    },\n    contains: [\n      VARIABLE,\n    ]\n  };\n  /* Variable assignment */\n  var VAR_ASSIG = {\n    begin: '^' + hljs.UNDERSCORE_IDENT_RE + '\\\\s*[:+?]?=',\n    illegal: '\\\\n',\n    returnBegin: true,\n    contains: [\n      {\n        begin: '^' + hljs.UNDERSCORE_IDENT_RE, end: '[:+?]?=',\n        excludeEnd: true,\n      }\n    ]\n  };\n  /* Meta targets (.PHONY) */\n  var META = {\n    className: 'meta',\n    begin: /^\\.PHONY:/, end: /$/,\n    keywords: {'meta-keyword': '.PHONY'},\n    lexemes: /[\\.\\w]+/\n  };\n  /* Targets */\n  var TARGET = {\n    className: 'section',\n    begin: /^[^\\s]+:/, end: /$/,\n    contains: [VARIABLE,]\n  };\n  return {\n    aliases: ['mk', 'mak'],\n    keywords:\n      'define endef undefine ifdef ifndef ifeq ifneq else endif ' +\n      'include -include sinclude override export unexport private vpath',\n    lexemes: /[\\w-]+/,\n    contains: [\n      hljs.HASH_COMMENT_MODE,\n      VARIABLE,\n      QUOTE_STRING,\n      FUNC,\n      VAR_ASSIG,\n      META,\n      TARGET,\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/makefile.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/markdown.js":
/*!*************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/markdown.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  return {\n    aliases: ['md', 'mkdown', 'mkd'],\n    contains: [\n      // highlight headers\n      {\n        className: 'section',\n        variants: [\n          { begin: '^#{1,6}', end: '$' },\n          { begin: '^.+?\\\\n[=-]{2,}$' }\n        ]\n      },\n      // inline html\n      {\n        begin: '<', end: '>',\n        subLanguage: 'xml',\n        relevance: 0\n      },\n      // lists (indicators only)\n      {\n        className: 'bullet',\n        begin: '^([*+-]|(\\\\d+\\\\.))\\\\s+'\n      },\n      // strong segments\n      {\n        className: 'strong',\n        begin: '[*_]{2}.+?[*_]{2}'\n      },\n      // emphasis segments\n      {\n        className: 'emphasis',\n        variants: [\n          { begin: '\\\\*.+?\\\\*' },\n          { begin: '_.+?_'\n          , relevance: 0\n          }\n        ]\n      },\n      // blockquotes\n      {\n        className: 'quote',\n        begin: '^>\\\\s+', end: '$'\n      },\n      // code snippets\n      {\n        className: 'code',\n        variants: [\n          {\n            begin: '^```\\w*\\s*$', end: '^```\\s*$'\n          },\n          {\n            begin: '`.+?`'\n          },\n          {\n            begin: '^( {4}|\\t)', end: '$',\n            relevance: 0\n          }\n        ]\n      },\n      // horizontal rules\n      {\n        begin: '^[-\\\\*]{3,}', end: '$'\n      },\n      // using links - title and link\n      {\n        begin: '\\\\[.+?\\\\][\\\\(\\\\[].*?[\\\\)\\\\]]',\n        returnBegin: true,\n        contains: [\n          {\n            className: 'string',\n            begin: '\\\\[', end: '\\\\]',\n            excludeBegin: true,\n            returnEnd: true,\n            relevance: 0\n          },\n          {\n            className: 'link',\n            begin: '\\\\]\\\\(', end: '\\\\)',\n            excludeBegin: true, excludeEnd: true\n          },\n          {\n            className: 'symbol',\n            begin: '\\\\]\\\\[', end: '\\\\]',\n            excludeBegin: true, excludeEnd: true\n          }\n        ],\n        relevance: 10\n      },\n      {\n        begin: /^\\[[^\\n]+\\]:/,\n        returnBegin: true,\n        contains: [\n          {\n            className: 'symbol',\n            begin: /\\[/, end: /\\]/,\n            excludeBegin: true, excludeEnd: true\n          },\n          {\n            className: 'link',\n            begin: /:\\s*/, end: /$/,\n            excludeBegin: true\n          }\n        ]\n      }\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/markdown.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/mathematica.js":
/*!****************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/mathematica.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  return {\n    aliases: ['mma'],\n    lexemes: '(\\\\$|\\\\b)' + hljs.IDENT_RE + '\\\\b',\n    keywords: 'AbelianGroup Abort AbortKernels AbortProtect Above Abs Absolute AbsoluteCorrelation AbsoluteCorrelationFunction AbsoluteCurrentValue AbsoluteDashing AbsoluteFileName AbsoluteOptions AbsolutePointSize AbsoluteThickness AbsoluteTime AbsoluteTiming AccountingForm Accumulate Accuracy AccuracyGoal ActionDelay ActionMenu ActionMenuBox ActionMenuBoxOptions Active ActiveItem ActiveStyle AcyclicGraphQ AddOnHelpPath AddTo AdjacencyGraph AdjacencyList AdjacencyMatrix AdjustmentBox AdjustmentBoxOptions AdjustTimeSeriesForecast AffineTransform After AiryAi AiryAiPrime AiryAiZero AiryBi AiryBiPrime AiryBiZero AlgebraicIntegerQ AlgebraicNumber AlgebraicNumberDenominator AlgebraicNumberNorm AlgebraicNumberPolynomial AlgebraicNumberTrace AlgebraicRules AlgebraicRulesData Algebraics AlgebraicUnitQ Alignment AlignmentMarker AlignmentPoint All AllowedDimensions AllowGroupClose AllowInlineCells AllowKernelInitialization AllowReverseGroupClose AllowScriptLevelChange AlphaChannel AlternatingGroup AlternativeHypothesis Alternatives AmbientLight Analytic AnchoredSearch And AndersonDarlingTest AngerJ AngleBracket AngularGauge Animate AnimationCycleOffset AnimationCycleRepetitions AnimationDirection AnimationDisplayTime AnimationRate AnimationRepetitions AnimationRunning Animator AnimatorBox AnimatorBoxOptions AnimatorElements Annotation Annuity AnnuityDue Antialiasing Antisymmetric Apart ApartSquareFree Appearance AppearanceElements AppellF1 Append AppendTo Apply ArcCos ArcCosh ArcCot ArcCoth ArcCsc ArcCsch ArcSec ArcSech ArcSin ArcSinDistribution ArcSinh ArcTan ArcTanh Arg ArgMax ArgMin ArgumentCountQ ARIMAProcess ArithmeticGeometricMean ARMAProcess ARProcess Array ArrayComponents ArrayDepth ArrayFlatten ArrayPad ArrayPlot ArrayQ ArrayReshape ArrayRules Arrays Arrow Arrow3DBox ArrowBox Arrowheads AspectRatio AspectRatioFixed Assert Assuming Assumptions AstronomicalData Asynchronous AsynchronousTaskObject AsynchronousTasks AtomQ Attributes AugmentedSymmetricPolynomial AutoAction AutoDelete AutoEvaluateEvents AutoGeneratedPackage AutoIndent AutoIndentSpacings AutoItalicWords AutoloadPath AutoMatch Automatic AutomaticImageSize AutoMultiplicationSymbol AutoNumberFormatting AutoOpenNotebooks AutoOpenPalettes AutorunSequencing AutoScaling AutoScroll AutoSpacing AutoStyleOptions AutoStyleWords Axes AxesEdge AxesLabel AxesOrigin AxesStyle Axis ' +\n      'BabyMonsterGroupB Back Background BackgroundTasksSettings Backslash Backsubstitution Backward Band BandpassFilter BandstopFilter BarabasiAlbertGraphDistribution BarChart BarChart3D BarLegend BarlowProschanImportance BarnesG BarOrigin BarSpacing BartlettHannWindow BartlettWindow BaseForm Baseline BaselinePosition BaseStyle BatesDistribution BattleLemarieWavelet Because BeckmannDistribution Beep Before Begin BeginDialogPacket BeginFrontEndInteractionPacket BeginPackage BellB BellY Below BenfordDistribution BeniniDistribution BenktanderGibratDistribution BenktanderWeibullDistribution BernoulliB BernoulliDistribution BernoulliGraphDistribution BernoulliProcess BernsteinBasis BesselFilterModel BesselI BesselJ BesselJZero BesselK BesselY BesselYZero Beta BetaBinomialDistribution BetaDistribution BetaNegativeBinomialDistribution BetaPrimeDistribution BetaRegularized BetweennessCentrality BezierCurve BezierCurve3DBox BezierCurve3DBoxOptions BezierCurveBox BezierCurveBoxOptions BezierFunction BilateralFilter Binarize BinaryFormat BinaryImageQ BinaryRead BinaryReadList BinaryWrite BinCounts BinLists Binomial BinomialDistribution BinomialProcess BinormalDistribution BiorthogonalSplineWavelet BipartiteGraphQ BirnbaumImportance BirnbaumSaundersDistribution BitAnd BitClear BitGet BitLength BitNot BitOr BitSet BitShiftLeft BitShiftRight BitXor Black BlackmanHarrisWindow BlackmanNuttallWindow BlackmanWindow Blank BlankForm BlankNullSequence BlankSequence Blend Block BlockRandom BlomqvistBeta BlomqvistBetaTest Blue Blur BodePlot BohmanWindow Bold Bookmarks Boole BooleanConsecutiveFunction BooleanConvert BooleanCountingFunction BooleanFunction BooleanGraph BooleanMaxterms BooleanMinimize BooleanMinterms Booleans BooleanTable BooleanVariables BorderDimensions BorelTannerDistribution Bottom BottomHatTransform BoundaryStyle Bounds Box BoxBaselineShift BoxData BoxDimensions Boxed Boxes BoxForm BoxFormFormatTypes BoxFrame BoxID BoxMargins BoxMatrix BoxRatios BoxRotation BoxRotationPoint BoxStyle BoxWhiskerChart Bra BracketingBar BraKet BrayCurtisDistance BreadthFirstScan Break Brown BrownForsytheTest BrownianBridgeProcess BrowserCategory BSplineBasis BSplineCurve BSplineCurve3DBox BSplineCurveBox BSplineCurveBoxOptions BSplineFunction BSplineSurface BSplineSurface3DBox BubbleChart BubbleChart3D BubbleScale BubbleSizes BulletGauge BusinessDayQ ButterflyGraph ButterworthFilterModel Button ButtonBar ButtonBox ButtonBoxOptions ButtonCell ButtonContents ButtonData ButtonEvaluator ButtonExpandable ButtonFrame ButtonFunction ButtonMargins ButtonMinHeight ButtonNote ButtonNotebook ButtonSource ButtonStyle ButtonStyleMenuListing Byte ByteCount ByteOrdering ' +\n      'C CachedValue CacheGraphics CalendarData CalendarType CallPacket CanberraDistance Cancel CancelButton CandlestickChart Cap CapForm CapitalDifferentialD CardinalBSplineBasis CarmichaelLambda Cases Cashflow Casoratian Catalan CatalanNumber Catch CauchyDistribution CauchyWindow CayleyGraph CDF CDFDeploy CDFInformation CDFWavelet Ceiling Cell CellAutoOverwrite CellBaseline CellBoundingBox CellBracketOptions CellChangeTimes CellContents CellContext CellDingbat CellDynamicExpression CellEditDuplicate CellElementsBoundingBox CellElementSpacings CellEpilog CellEvaluationDuplicate CellEvaluationFunction CellEventActions CellFrame CellFrameColor CellFrameLabelMargins CellFrameLabels CellFrameMargins CellGroup CellGroupData CellGrouping CellGroupingRules CellHorizontalScrolling CellID CellLabel CellLabelAutoDelete CellLabelMargins CellLabelPositioning CellMargins CellObject CellOpen CellPrint CellProlog Cells CellSize CellStyle CellTags CellularAutomaton CensoredDistribution Censoring Center CenterDot CentralMoment CentralMomentGeneratingFunction CForm ChampernowneNumber ChanVeseBinarize Character CharacterEncoding CharacterEncodingsPath CharacteristicFunction CharacteristicPolynomial CharacterRange Characters ChartBaseStyle ChartElementData ChartElementDataFunction ChartElementFunction ChartElements ChartLabels ChartLayout ChartLegends ChartStyle Chebyshev1FilterModel Chebyshev2FilterModel ChebyshevDistance ChebyshevT ChebyshevU Check CheckAbort CheckAll Checkbox CheckboxBar CheckboxBox CheckboxBoxOptions ChemicalData ChessboardDistance ChiDistribution ChineseRemainder ChiSquareDistribution ChoiceButtons ChoiceDialog CholeskyDecomposition Chop Circle CircleBox CircleDot CircleMinus CirclePlus CircleTimes CirculantGraph CityData Clear ClearAll ClearAttributes ClearSystemCache ClebschGordan ClickPane Clip ClipboardNotebook ClipFill ClippingStyle ClipPlanes ClipRange Clock ClockGauge ClockwiseContourIntegral Close Closed CloseKernels ClosenessCentrality Closing ClosingAutoSave ClosingEvent ClusteringComponents CMYKColor Coarse Coefficient CoefficientArrays CoefficientDomain CoefficientList CoefficientRules CoifletWavelet Collect Colon ColonForm ColorCombine ColorConvert ColorData ColorDataFunction ColorFunction ColorFunctionScaling Colorize ColorNegate ColorOutput ColorProfileData ColorQuantize ColorReplace ColorRules ColorSelectorSettings ColorSeparate ColorSetter ColorSetterBox ColorSetterBoxOptions ColorSlider ColorSpace Column ColumnAlignments ColumnBackgrounds ColumnForm ColumnLines ColumnsEqual ColumnSpacings ColumnWidths CommonDefaultFormatTypes Commonest CommonestFilter CommonUnits CommunityBoundaryStyle CommunityGraphPlot CommunityLabels CommunityRegionStyle CompatibleUnitQ CompilationOptions CompilationTarget Compile Compiled CompiledFunction Complement CompleteGraph CompleteGraphQ CompleteKaryTree CompletionsListPacket Complex Complexes ComplexExpand ComplexInfinity ComplexityFunction ComponentMeasurements ' +\n      'ComponentwiseContextMenu Compose ComposeList ComposeSeries Composition CompoundExpression CompoundPoissonDistribution CompoundPoissonProcess CompoundRenewalProcess Compress CompressedData Condition ConditionalExpression Conditioned Cone ConeBox ConfidenceLevel ConfidenceRange ConfidenceTransform ConfigurationPath Congruent Conjugate ConjugateTranspose Conjunction Connect ConnectedComponents ConnectedGraphQ ConnesWindow ConoverTest ConsoleMessage ConsoleMessagePacket ConsolePrint Constant ConstantArray Constants ConstrainedMax ConstrainedMin ContentPadding ContentsBoundingBox ContentSelectable ContentSize Context ContextMenu Contexts ContextToFilename ContextToFileName Continuation Continue ContinuedFraction ContinuedFractionK ContinuousAction ContinuousMarkovProcess ContinuousTimeModelQ ContinuousWaveletData ContinuousWaveletTransform ContourDetect ContourGraphics ContourIntegral ContourLabels ContourLines ContourPlot ContourPlot3D Contours ContourShading ContourSmoothing ContourStyle ContraharmonicMean Control ControlActive ControlAlignment ControllabilityGramian ControllabilityMatrix ControllableDecomposition ControllableModelQ ControllerDuration ControllerInformation ControllerInformationData ControllerLinking ControllerManipulate ControllerMethod ControllerPath ControllerState ControlPlacement ControlsRendering ControlType Convergents ConversionOptions ConversionRules ConvertToBitmapPacket ConvertToPostScript ConvertToPostScriptPacket Convolve ConwayGroupCo1 ConwayGroupCo2 ConwayGroupCo3 CoordinateChartData CoordinatesToolOptions CoordinateTransform CoordinateTransformData CoprimeQ Coproduct CopulaDistribution Copyable CopyDirectory CopyFile CopyTag CopyToClipboard CornerFilter CornerNeighbors Correlation CorrelationDistance CorrelationFunction CorrelationTest Cos Cosh CoshIntegral CosineDistance CosineWindow CosIntegral Cot Coth Count CounterAssignments CounterBox CounterBoxOptions CounterClockwiseContourIntegral CounterEvaluator CounterFunction CounterIncrements CounterStyle CounterStyleMenuListing CountRoots CountryData Covariance CovarianceEstimatorFunction CovarianceFunction CoxianDistribution CoxIngersollRossProcess CoxModel CoxModelFit CramerVonMisesTest CreateArchive CreateDialog CreateDirectory CreateDocument CreateIntermediateDirectories CreatePalette CreatePalettePacket CreateScheduledTask CreateTemporary CreateWindow CriticalityFailureImportance CriticalitySuccessImportance CriticalSection Cross CrossingDetect CrossMatrix Csc Csch CubeRoot Cubics Cuboid CuboidBox Cumulant CumulantGeneratingFunction Cup CupCap Curl CurlyDoubleQuote CurlyQuote CurrentImage CurrentlySpeakingPacket CurrentValue CurvatureFlowFilter CurveClosed Cyan CycleGraph CycleIndexPolynomial Cycles CyclicGroup Cyclotomic Cylinder CylinderBox CylindricalDecomposition ' +\n      'D DagumDistribution DamerauLevenshteinDistance DampingFactor Darker Dashed Dashing DataCompression DataDistribution DataRange DataReversed Date DateDelimiters DateDifference DateFunction DateList DateListLogPlot DateListPlot DatePattern DatePlus DateRange DateString DateTicksFormat DaubechiesWavelet DavisDistribution DawsonF DayCount DayCountConvention DayMatchQ DayName DayPlus DayRange DayRound DeBruijnGraph Debug DebugTag Decimal DeclareKnownSymbols DeclarePackage Decompose Decrement DedekindEta Default DefaultAxesStyle DefaultBaseStyle DefaultBoxStyle DefaultButton DefaultColor DefaultControlPlacement DefaultDuplicateCellStyle DefaultDuration DefaultElement DefaultFaceGridsStyle DefaultFieldHintStyle DefaultFont DefaultFontProperties DefaultFormatType DefaultFormatTypeForStyle DefaultFrameStyle DefaultFrameTicksStyle DefaultGridLinesStyle DefaultInlineFormatType DefaultInputFormatType DefaultLabelStyle DefaultMenuStyle DefaultNaturalLanguage DefaultNewCellStyle DefaultNewInlineCellStyle DefaultNotebook DefaultOptions DefaultOutputFormatType DefaultStyle DefaultStyleDefinitions DefaultTextFormatType DefaultTextInlineFormatType DefaultTicksStyle DefaultTooltipStyle DefaultValues Defer DefineExternal DefineInputStreamMethod DefineOutputStreamMethod Definition Degree DegreeCentrality DegreeGraphDistribution DegreeLexicographic DegreeReverseLexicographic Deinitialization Del Deletable Delete DeleteBorderComponents DeleteCases DeleteContents DeleteDirectory DeleteDuplicates DeleteFile DeleteSmallComponents DeleteWithContents DeletionWarning Delimiter DelimiterFlashTime DelimiterMatching Delimiters Denominator DensityGraphics DensityHistogram DensityPlot DependentVariables Deploy Deployed Depth DepthFirstScan Derivative DerivativeFilter DescriptorStateSpace DesignMatrix Det DGaussianWavelet DiacriticalPositioning Diagonal DiagonalMatrix Dialog DialogIndent DialogInput DialogLevel DialogNotebook DialogProlog DialogReturn DialogSymbols Diamond DiamondMatrix DiceDissimilarity DictionaryLookup DifferenceDelta DifferenceOrder DifferenceRoot DifferenceRootReduce Differences DifferentialD DifferentialRoot DifferentialRootReduce DifferentiatorFilter DigitBlock DigitBlockMinimum DigitCharacter DigitCount DigitQ DihedralGroup Dilation Dimensions DiracComb DiracDelta DirectedEdge DirectedEdges DirectedGraph DirectedGraphQ DirectedInfinity Direction Directive Directory DirectoryName DirectoryQ DirectoryStack DirichletCharacter DirichletConvolve DirichletDistribution DirichletL DirichletTransform DirichletWindow DisableConsolePrintPacket DiscreteChirpZTransform DiscreteConvolve DiscreteDelta DiscreteHadamardTransform DiscreteIndicator DiscreteLQEstimatorGains DiscreteLQRegulatorGains DiscreteLyapunovSolve DiscreteMarkovProcess DiscretePlot DiscretePlot3D DiscreteRatio DiscreteRiccatiSolve DiscreteShift DiscreteTimeModelQ DiscreteUniformDistribution DiscreteVariables DiscreteWaveletData DiscreteWaveletPacketTransform ' +\n      'DiscreteWaveletTransform Discriminant Disjunction Disk DiskBox DiskMatrix Dispatch DispersionEstimatorFunction Display DisplayAllSteps DisplayEndPacket DisplayFlushImagePacket DisplayForm DisplayFunction DisplayPacket DisplayRules DisplaySetSizePacket DisplayString DisplayTemporary DisplayWith DisplayWithRef DisplayWithVariable DistanceFunction DistanceTransform Distribute Distributed DistributedContexts DistributeDefinitions DistributionChart DistributionDomain DistributionFitTest DistributionParameterAssumptions DistributionParameterQ Dithering Div Divergence Divide DivideBy Dividers Divisible Divisors DivisorSigma DivisorSum DMSList DMSString Do DockedCells DocumentNotebook DominantColors DOSTextFormat Dot DotDashed DotEqual Dotted DoubleBracketingBar DoubleContourIntegral DoubleDownArrow DoubleLeftArrow DoubleLeftRightArrow DoubleLeftTee DoubleLongLeftArrow DoubleLongLeftRightArrow DoubleLongRightArrow DoubleRightArrow DoubleRightTee DoubleUpArrow DoubleUpDownArrow DoubleVerticalBar DoublyInfinite Down DownArrow DownArrowBar DownArrowUpArrow DownLeftRightVector DownLeftTeeVector DownLeftVector DownLeftVectorBar DownRightTeeVector DownRightVector DownRightVectorBar Downsample DownTee DownTeeArrow DownValues DragAndDrop DrawEdges DrawFrontFaces DrawHighlighted Drop DSolve Dt DualLinearProgramming DualSystemsModel DumpGet DumpSave DuplicateFreeQ Dynamic DynamicBox DynamicBoxOptions DynamicEvaluationTimeout DynamicLocation DynamicModule DynamicModuleBox DynamicModuleBoxOptions DynamicModuleParent DynamicModuleValues DynamicName DynamicNamespace DynamicReference DynamicSetting DynamicUpdating DynamicWrapper DynamicWrapperBox DynamicWrapperBoxOptions ' +\n      'E EccentricityCentrality EdgeAdd EdgeBetweennessCentrality EdgeCapacity EdgeCapForm EdgeColor EdgeConnectivity EdgeCost EdgeCount EdgeCoverQ EdgeDashing EdgeDelete EdgeDetect EdgeForm EdgeIndex EdgeJoinForm EdgeLabeling EdgeLabels EdgeLabelStyle EdgeList EdgeOpacity EdgeQ EdgeRenderingFunction EdgeRules EdgeShapeFunction EdgeStyle EdgeThickness EdgeWeight Editable EditButtonSettings EditCellTagsSettings EditDistance EffectiveInterest Eigensystem Eigenvalues EigenvectorCentrality Eigenvectors Element ElementData Eliminate EliminationOrder EllipticE EllipticExp EllipticExpPrime EllipticF EllipticFilterModel EllipticK EllipticLog EllipticNomeQ EllipticPi EllipticReducedHalfPeriods EllipticTheta EllipticThetaPrime EmitSound EmphasizeSyntaxErrors EmpiricalDistribution Empty EmptyGraphQ EnableConsolePrintPacket Enabled Encode End EndAdd EndDialogPacket EndFrontEndInteractionPacket EndOfFile EndOfLine EndOfString EndPackage EngineeringForm Enter EnterExpressionPacket EnterTextPacket Entropy EntropyFilter Environment Epilog Equal EqualColumns EqualRows EqualTilde EquatedTo Equilibrium EquirippleFilterKernel Equivalent Erf Erfc Erfi ErlangB ErlangC ErlangDistribution Erosion ErrorBox ErrorBoxOptions ErrorNorm ErrorPacket ErrorsDialogSettings EstimatedDistribution EstimatedProcess EstimatorGains EstimatorRegulator EuclideanDistance EulerE EulerGamma EulerianGraphQ EulerPhi Evaluatable Evaluate Evaluated EvaluatePacket EvaluationCell EvaluationCompletionAction EvaluationElements EvaluationMode EvaluationMonitor EvaluationNotebook EvaluationObject EvaluationOrder Evaluator EvaluatorNames EvenQ EventData EventEvaluator EventHandler EventHandlerTag EventLabels ExactBlackmanWindow ExactNumberQ ExactRootIsolation ExampleData Except ExcludedForms ExcludePods Exclusions ExclusionsStyle Exists Exit ExitDialog Exp Expand ExpandAll ExpandDenominator ExpandFileName ExpandNumerator Expectation ExpectationE ExpectedValue ExpGammaDistribution ExpIntegralE ExpIntegralEi Exponent ExponentFunction ExponentialDistribution ExponentialFamily ExponentialGeneratingFunction ExponentialMovingAverage ExponentialPowerDistribution ExponentPosition ExponentStep Export ExportAutoReplacements ExportPacket ExportString Expression ExpressionCell ExpressionPacket ExpToTrig ExtendedGCD Extension ExtentElementFunction ExtentMarkers ExtentSize ExternalCall ExternalDataCharacterEncoding Extract ExtractArchive ExtremeValueDistribution ' +\n      'FaceForm FaceGrids FaceGridsStyle Factor FactorComplete Factorial Factorial2 FactorialMoment FactorialMomentGeneratingFunction FactorialPower FactorInteger FactorList FactorSquareFree FactorSquareFreeList FactorTerms FactorTermsList Fail FailureDistribution False FARIMAProcess FEDisableConsolePrintPacket FeedbackSector FeedbackSectorStyle FeedbackType FEEnableConsolePrintPacket Fibonacci FieldHint FieldHintStyle FieldMasked FieldSize File FileBaseName FileByteCount FileDate FileExistsQ FileExtension FileFormat FileHash FileInformation FileName FileNameDepth FileNameDialogSettings FileNameDrop FileNameJoin FileNames FileNameSetter FileNameSplit FileNameTake FilePrint FileType FilledCurve FilledCurveBox Filling FillingStyle FillingTransform FilterRules FinancialBond FinancialData FinancialDerivative FinancialIndicator Find FindArgMax FindArgMin FindClique FindClusters FindCurvePath FindDistributionParameters FindDivisions FindEdgeCover FindEdgeCut FindEulerianCycle FindFaces FindFile FindFit FindGeneratingFunction FindGeoLocation FindGeometricTransform FindGraphCommunities FindGraphIsomorphism FindGraphPartition FindHamiltonianCycle FindIndependentEdgeSet FindIndependentVertexSet FindInstance FindIntegerNullVector FindKClan FindKClique FindKClub FindKPlex FindLibrary FindLinearRecurrence FindList FindMaximum FindMaximumFlow FindMaxValue FindMinimum FindMinimumCostFlow FindMinimumCut FindMinValue FindPermutation FindPostmanTour FindProcessParameters FindRoot FindSequenceFunction FindSettings FindShortestPath FindShortestTour FindThreshold FindVertexCover FindVertexCut Fine FinishDynamic FiniteAbelianGroupCount FiniteGroupCount FiniteGroupData First FirstPassageTimeDistribution FischerGroupFi22 FischerGroupFi23 FischerGroupFi24Prime FisherHypergeometricDistribution FisherRatioTest FisherZDistribution Fit FitAll FittedModel FixedPoint FixedPointList FlashSelection Flat Flatten FlattenAt FlatTopWindow FlipView Floor FlushPrintOutputPacket Fold FoldList Font FontColor FontFamily FontForm FontName FontOpacity FontPostScriptName FontProperties FontReencoding FontSize FontSlant FontSubstitutions FontTracking FontVariations FontWeight For ForAll Format FormatRules FormatType FormatTypeAutoConvert FormatValues FormBox FormBoxOptions FortranForm Forward ForwardBackward Fourier FourierCoefficient FourierCosCoefficient FourierCosSeries FourierCosTransform FourierDCT FourierDCTFilter FourierDCTMatrix FourierDST FourierDSTMatrix FourierMatrix FourierParameters FourierSequenceTransform FourierSeries FourierSinCoefficient FourierSinSeries FourierSinTransform FourierTransform FourierTrigSeries FractionalBrownianMotionProcess FractionalPart FractionBox FractionBoxOptions FractionLine Frame FrameBox FrameBoxOptions Framed FrameInset FrameLabel Frameless FrameMargins FrameStyle FrameTicks FrameTicksStyle FRatioDistribution FrechetDistribution FreeQ FrequencySamplingFilterKernel FresnelC FresnelS Friday FrobeniusNumber FrobeniusSolve ' +\n      'FromCharacterCode FromCoefficientRules FromContinuedFraction FromDate FromDigits FromDMS Front FrontEndDynamicExpression FrontEndEventActions FrontEndExecute FrontEndObject FrontEndResource FrontEndResourceString FrontEndStackSize FrontEndToken FrontEndTokenExecute FrontEndValueCache FrontEndVersion FrontFaceColor FrontFaceOpacity Full FullAxes FullDefinition FullForm FullGraphics FullOptions FullSimplify Function FunctionExpand FunctionInterpolation FunctionSpace FussellVeselyImportance ' +\n      'GaborFilter GaborMatrix GaborWavelet GainMargins GainPhaseMargins Gamma GammaDistribution GammaRegularized GapPenalty Gather GatherBy GaugeFaceElementFunction GaugeFaceStyle GaugeFrameElementFunction GaugeFrameSize GaugeFrameStyle GaugeLabels GaugeMarkers GaugeStyle GaussianFilter GaussianIntegers GaussianMatrix GaussianWindow GCD GegenbauerC General GeneralizedLinearModelFit GenerateConditions GeneratedCell GeneratedParameters GeneratingFunction Generic GenericCylindricalDecomposition GenomeData GenomeLookup GeodesicClosing GeodesicDilation GeodesicErosion GeodesicOpening GeoDestination GeodesyData GeoDirection GeoDistance GeoGridPosition GeometricBrownianMotionProcess GeometricDistribution GeometricMean GeometricMeanFilter GeometricTransformation GeometricTransformation3DBox GeometricTransformation3DBoxOptions GeometricTransformationBox GeometricTransformationBoxOptions GeoPosition GeoPositionENU GeoPositionXYZ GeoProjectionData GestureHandler GestureHandlerTag Get GetBoundingBoxSizePacket GetContext GetEnvironment GetFileName GetFrontEndOptionsDataPacket GetLinebreakInformationPacket GetMenusPacket GetPageBreakInformationPacket Glaisher GlobalClusteringCoefficient GlobalPreferences GlobalSession Glow GoldenRatio GompertzMakehamDistribution GoodmanKruskalGamma GoodmanKruskalGammaTest Goto Grad Gradient GradientFilter GradientOrientationFilter Graph GraphAssortativity GraphCenter GraphComplement GraphData GraphDensity GraphDiameter GraphDifference GraphDisjointUnion ' +\n      'GraphDistance GraphDistanceMatrix GraphElementData GraphEmbedding GraphHighlight GraphHighlightStyle GraphHub Graphics Graphics3D Graphics3DBox Graphics3DBoxOptions GraphicsArray GraphicsBaseline GraphicsBox GraphicsBoxOptions GraphicsColor GraphicsColumn GraphicsComplex GraphicsComplex3DBox GraphicsComplex3DBoxOptions GraphicsComplexBox GraphicsComplexBoxOptions GraphicsContents GraphicsData GraphicsGrid GraphicsGridBox GraphicsGroup GraphicsGroup3DBox GraphicsGroup3DBoxOptions GraphicsGroupBox GraphicsGroupBoxOptions GraphicsGrouping GraphicsHighlightColor GraphicsRow GraphicsSpacing GraphicsStyle GraphIntersection GraphLayout GraphLinkEfficiency GraphPeriphery GraphPlot GraphPlot3D GraphPower GraphPropertyDistribution GraphQ GraphRadius GraphReciprocity GraphRoot GraphStyle GraphUnion Gray GrayLevel GreatCircleDistance Greater GreaterEqual GreaterEqualLess GreaterFullEqual GreaterGreater GreaterLess GreaterSlantEqual GreaterTilde Green Grid GridBaseline GridBox GridBoxAlignment GridBoxBackground GridBoxDividers GridBoxFrame GridBoxItemSize GridBoxItemStyle GridBoxOptions GridBoxSpacings GridCreationSettings GridDefaultElement GridElementStyleOptions GridFrame GridFrameMargins GridGraph GridLines GridLinesStyle GroebnerBasis GroupActionBase GroupCentralizer GroupElementFromWord GroupElementPosition GroupElementQ GroupElements GroupElementToWord GroupGenerators GroupMultiplicationTable GroupOrbits GroupOrder GroupPageBreakWithin GroupSetwiseStabilizer GroupStabilizer GroupStabilizerChain Gudermannian GumbelDistribution ' +\n      'HaarWavelet HadamardMatrix HalfNormalDistribution HamiltonianGraphQ HammingDistance HammingWindow HankelH1 HankelH2 HankelMatrix HannPoissonWindow HannWindow HaradaNortonGroupHN HararyGraph HarmonicMean HarmonicMeanFilter HarmonicNumber Hash HashTable Haversine HazardFunction Head HeadCompose Heads HeavisideLambda HeavisidePi HeavisideTheta HeldGroupHe HeldPart HelpBrowserLookup HelpBrowserNotebook HelpBrowserSettings HermiteDecomposition HermiteH HermitianMatrixQ HessenbergDecomposition Hessian HexadecimalCharacter Hexahedron HexahedronBox HexahedronBoxOptions HiddenSurface HighlightGraph HighlightImage HighpassFilter HigmanSimsGroupHS HilbertFilter HilbertMatrix Histogram Histogram3D HistogramDistribution HistogramList HistogramTransform HistogramTransformInterpolation HitMissTransform HITSCentrality HodgeDual HoeffdingD HoeffdingDTest Hold HoldAll HoldAllComplete HoldComplete HoldFirst HoldForm HoldPattern HoldRest HolidayCalendar HomeDirectory HomePage Horizontal HorizontalForm HorizontalGauge HorizontalScrollPosition HornerForm HotellingTSquareDistribution HoytDistribution HTMLSave Hue HumpDownHump HumpEqual HurwitzLerchPhi HurwitzZeta HyperbolicDistribution HypercubeGraph HyperexponentialDistribution Hyperfactorial Hypergeometric0F1 Hypergeometric0F1Regularized Hypergeometric1F1 Hypergeometric1F1Regularized Hypergeometric2F1 Hypergeometric2F1Regularized HypergeometricDistribution HypergeometricPFQ HypergeometricPFQRegularized HypergeometricU Hyperlink HyperlinkCreationSettings Hyphenation HyphenationOptions HypoexponentialDistribution HypothesisTestData ' +\n      'I Identity IdentityMatrix If IgnoreCase Im Image Image3D Image3DSlices ImageAccumulate ImageAdd ImageAdjust ImageAlign ImageApply ImageAspectRatio ImageAssemble ImageCache ImageCacheValid ImageCapture ImageChannels ImageClip ImageColorSpace ImageCompose ImageConvolve ImageCooccurrence ImageCorners ImageCorrelate ImageCorrespondingPoints ImageCrop ImageData ImageDataPacket ImageDeconvolve ImageDemosaic ImageDifference ImageDimensions ImageDistance ImageEffect ImageFeatureTrack ImageFileApply ImageFileFilter ImageFileScan ImageFilter ImageForestingComponents ImageForwardTransformation ImageHistogram ImageKeypoints ImageLevels ImageLines ImageMargins ImageMarkers ImageMeasurements ImageMultiply ImageOffset ImagePad ImagePadding ImagePartition ImagePeriodogram ImagePerspectiveTransformation ImageQ ImageRangeCache ImageReflect ImageRegion ImageResize ImageResolution ImageRotate ImageRotated ImageScaled ImageScan ImageSize ImageSizeAction ImageSizeCache ImageSizeMultipliers ImageSizeRaw ImageSubtract ImageTake ImageTransformation ImageTrim ImageType ImageValue ImageValuePositions Implies Import ImportAutoReplacements ImportString ImprovementImportance In IncidenceGraph IncidenceList IncidenceMatrix IncludeConstantBasis IncludeFileExtension IncludePods IncludeSingularTerm Increment Indent IndentingNewlineSpacings IndentMaxFraction IndependenceTest IndependentEdgeSetQ IndependentUnit IndependentVertexSetQ Indeterminate IndexCreationOptions Indexed IndexGraph IndexTag Inequality InexactNumberQ InexactNumbers Infinity Infix Information Inherited InheritScope Initialization InitializationCell InitializationCellEvaluation InitializationCellWarning InlineCounterAssignments InlineCounterIncrements InlineRules Inner Inpaint Input InputAliases InputAssumptions InputAutoReplacements InputField InputFieldBox InputFieldBoxOptions InputForm InputGrouping InputNamePacket InputNotebook InputPacket InputSettings InputStream InputString InputStringPacket InputToBoxFormPacket Insert InsertionPointObject InsertResults Inset Inset3DBox Inset3DBoxOptions InsetBox InsetBoxOptions Install InstallService InString Integer IntegerDigits IntegerExponent IntegerLength IntegerPart IntegerPartitions IntegerQ Integers IntegerString Integral Integrate Interactive InteractiveTradingChart Interlaced Interleaving InternallyBalancedDecomposition InterpolatingFunction InterpolatingPolynomial Interpolation InterpolationOrder InterpolationPoints InterpolationPrecision Interpretation InterpretationBox InterpretationBoxOptions InterpretationFunction ' +\n      'InterpretTemplate InterquartileRange Interrupt InterruptSettings Intersection Interval IntervalIntersection IntervalMemberQ IntervalUnion Inverse InverseBetaRegularized InverseCDF InverseChiSquareDistribution InverseContinuousWaveletTransform InverseDistanceTransform InverseEllipticNomeQ InverseErf InverseErfc InverseFourier InverseFourierCosTransform InverseFourierSequenceTransform InverseFourierSinTransform InverseFourierTransform InverseFunction InverseFunctions InverseGammaDistribution InverseGammaRegularized InverseGaussianDistribution InverseGudermannian InverseHaversine InverseJacobiCD InverseJacobiCN InverseJacobiCS InverseJacobiDC InverseJacobiDN InverseJacobiDS InverseJacobiNC InverseJacobiND InverseJacobiNS InverseJacobiSC InverseJacobiSD InverseJacobiSN InverseLaplaceTransform InversePermutation InverseRadon InverseSeries InverseSurvivalFunction InverseWaveletTransform InverseWeierstrassP InverseZTransform Invisible InvisibleApplication InvisibleTimes IrreduciblePolynomialQ IsolatingInterval IsomorphicGraphQ IsotopeData Italic Item ItemBox ItemBoxOptions ItemSize ItemStyle ItoProcess ' +\n      'JaccardDissimilarity JacobiAmplitude Jacobian JacobiCD JacobiCN JacobiCS JacobiDC JacobiDN JacobiDS JacobiNC JacobiND JacobiNS JacobiP JacobiSC JacobiSD JacobiSN JacobiSymbol JacobiZeta JankoGroupJ1 JankoGroupJ2 JankoGroupJ3 JankoGroupJ4 JarqueBeraALMTest JohnsonDistribution Join Joined JoinedCurve JoinedCurveBox JoinForm JordanDecomposition JordanModelDecomposition ' +\n      'K KagiChart KaiserBesselWindow KaiserWindow KalmanEstimator KalmanFilter KarhunenLoeveDecomposition KaryTree KatzCentrality KCoreComponents KDistribution KelvinBei KelvinBer KelvinKei KelvinKer KendallTau KendallTauTest KernelExecute KernelMixtureDistribution KernelObject Kernels Ket Khinchin KirchhoffGraph KirchhoffMatrix KleinInvariantJ KnightTourGraph KnotData KnownUnitQ KolmogorovSmirnovTest KroneckerDelta KroneckerModelDecomposition KroneckerProduct KroneckerSymbol KuiperTest KumaraswamyDistribution Kurtosis KuwaharaFilter ' +\n      'Label Labeled LabeledSlider LabelingFunction LabelStyle LaguerreL LambdaComponents LambertW LanczosWindow LandauDistribution Language LanguageCategory LaplaceDistribution LaplaceTransform Laplacian LaplacianFilter LaplacianGaussianFilter Large Larger Last Latitude LatitudeLongitude LatticeData LatticeReduce Launch LaunchKernels LayeredGraphPlot LayerSizeFunction LayoutInformation LCM LeafCount LeapYearQ LeastSquares LeastSquaresFilterKernel Left LeftArrow LeftArrowBar LeftArrowRightArrow LeftDownTeeVector LeftDownVector LeftDownVectorBar LeftRightArrow LeftRightVector LeftTee LeftTeeArrow LeftTeeVector LeftTriangle LeftTriangleBar LeftTriangleEqual LeftUpDownVector LeftUpTeeVector LeftUpVector LeftUpVectorBar LeftVector LeftVectorBar LegendAppearance Legended LegendFunction LegendLabel LegendLayout LegendMargins LegendMarkers LegendMarkerSize LegendreP LegendreQ LegendreType Length LengthWhile LerchPhi Less LessEqual LessEqualGreater LessFullEqual LessGreater LessLess LessSlantEqual LessTilde LetterCharacter LetterQ Level LeveneTest LeviCivitaTensor LevyDistribution Lexicographic LibraryFunction LibraryFunctionError LibraryFunctionInformation LibraryFunctionLoad LibraryFunctionUnload LibraryLoad LibraryUnload LicenseID LiftingFilterData LiftingWaveletTransform LightBlue LightBrown LightCyan Lighter LightGray LightGreen Lighting LightingAngle LightMagenta LightOrange LightPink LightPurple LightRed LightSources LightYellow Likelihood Limit LimitsPositioning LimitsPositioningTokens LindleyDistribution Line Line3DBox LinearFilter LinearFractionalTransform LinearModelFit LinearOffsetFunction LinearProgramming LinearRecurrence LinearSolve LinearSolveFunction LineBox LineBreak LinebreakAdjustments LineBreakChart LineBreakWithin LineColor LineForm LineGraph LineIndent LineIndentMaxFraction LineIntegralConvolutionPlot LineIntegralConvolutionScale LineLegend LineOpacity LineSpacing LineWrapParts LinkActivate LinkClose LinkConnect LinkConnectedQ LinkCreate LinkError LinkFlush LinkFunction LinkHost LinkInterrupt LinkLaunch LinkMode LinkObject LinkOpen LinkOptions LinkPatterns LinkProtocol LinkRead LinkReadHeld LinkReadyQ Links LinkWrite LinkWriteHeld LiouvilleLambda List Listable ListAnimate ListContourPlot ListContourPlot3D ListConvolve ListCorrelate ListCurvePathPlot ListDeconvolve ListDensityPlot Listen ListFourierSequenceTransform ListInterpolation ListLineIntegralConvolutionPlot ListLinePlot ListLogLinearPlot ListLogLogPlot ListLogPlot ListPicker ListPickerBox ListPickerBoxBackground ListPickerBoxOptions ListPlay ListPlot ListPlot3D ListPointPlot3D ListPolarPlot ListQ ListStreamDensityPlot ListStreamPlot ListSurfacePlot3D ListVectorDensityPlot ListVectorPlot ListVectorPlot3D ListZTransform Literal LiteralSearch LocalClusteringCoefficient LocalizeVariables LocationEquivalenceTest LocationTest Locator LocatorAutoCreate LocatorBox LocatorBoxOptions LocatorCentering LocatorPane LocatorPaneBox LocatorPaneBoxOptions ' +\n      'LocatorRegion Locked Log Log10 Log2 LogBarnesG LogGamma LogGammaDistribution LogicalExpand LogIntegral LogisticDistribution LogitModelFit LogLikelihood LogLinearPlot LogLogisticDistribution LogLogPlot LogMultinormalDistribution LogNormalDistribution LogPlot LogRankTest LogSeriesDistribution LongEqual Longest LongestAscendingSequence LongestCommonSequence LongestCommonSequencePositions LongestCommonSubsequence LongestCommonSubsequencePositions LongestMatch LongForm Longitude LongLeftArrow LongLeftRightArrow LongRightArrow Loopback LoopFreeGraphQ LowerCaseQ LowerLeftArrow LowerRightArrow LowerTriangularize LowpassFilter LQEstimatorGains LQGRegulator LQOutputRegulatorGains LQRegulatorGains LUBackSubstitution LucasL LuccioSamiComponents LUDecomposition LyapunovSolve LyonsGroupLy ' +\n      'MachineID MachineName MachineNumberQ MachinePrecision MacintoshSystemPageSetup Magenta Magnification Magnify MainSolve MaintainDynamicCaches Majority MakeBoxes MakeExpression MakeRules MangoldtLambda ManhattanDistance Manipulate Manipulator MannWhitneyTest MantissaExponent Manual Map MapAll MapAt MapIndexed MAProcess MapThread MarcumQ MardiaCombinedTest MardiaKurtosisTest MardiaSkewnessTest MarginalDistribution MarkovProcessProperties Masking MatchingDissimilarity MatchLocalNameQ MatchLocalNames MatchQ Material MathematicaNotation MathieuC MathieuCharacteristicA MathieuCharacteristicB MathieuCharacteristicExponent MathieuCPrime MathieuGroupM11 MathieuGroupM12 MathieuGroupM22 MathieuGroupM23 MathieuGroupM24 MathieuS MathieuSPrime MathMLForm MathMLText Matrices MatrixExp MatrixForm MatrixFunction MatrixLog MatrixPlot MatrixPower MatrixQ MatrixRank Max MaxBend MaxDetect MaxExtraBandwidths MaxExtraConditions MaxFeatures MaxFilter Maximize MaxIterations MaxMemoryUsed MaxMixtureKernels MaxPlotPoints MaxPoints MaxRecursion MaxStableDistribution MaxStepFraction MaxSteps MaxStepSize MaxValue MaxwellDistribution McLaughlinGroupMcL Mean MeanClusteringCoefficient MeanDegreeConnectivity MeanDeviation MeanFilter MeanGraphDistance MeanNeighborDegree MeanShift MeanShiftFilter Median MedianDeviation MedianFilter Medium MeijerG MeixnerDistribution MemberQ MemoryConstrained MemoryInUse Menu MenuAppearance MenuCommandKey MenuEvaluator MenuItem MenuPacket MenuSortingValue MenuStyle MenuView MergeDifferences Mesh MeshFunctions MeshRange MeshShading MeshStyle Message MessageDialog MessageList MessageName MessageOptions MessagePacket Messages MessagesNotebook MetaCharacters MetaInformation Method MethodOptions MexicanHatWavelet MeyerWavelet Min MinDetect MinFilter MinimalPolynomial MinimalStateSpaceModel Minimize Minors MinRecursion MinSize MinStableDistribution Minus MinusPlus MinValue Missing MissingDataMethod MittagLefflerE MixedRadix MixedRadixQuantity MixtureDistribution Mod Modal Mode Modular ModularLambda Module Modulus MoebiusMu Moment Momentary MomentConvert MomentEvaluate MomentGeneratingFunction Monday Monitor MonomialList MonomialOrder MonsterGroupM MorletWavelet MorphologicalBinarize MorphologicalBranchPoints MorphologicalComponents MorphologicalEulerNumber MorphologicalGraph MorphologicalPerimeter MorphologicalTransform Most MouseAnnotation MouseAppearance MouseAppearanceTag MouseButtons Mouseover MousePointerNote MousePosition MovingAverage MovingMedian MoyalDistribution MultiedgeStyle MultilaunchWarning MultiLetterItalics MultiLetterStyle MultilineFunction Multinomial MultinomialDistribution MultinormalDistribution MultiplicativeOrder Multiplicity Multiselection MultivariateHypergeometricDistribution MultivariatePoissonDistribution MultivariateTDistribution ' +\n      'N NakagamiDistribution NameQ Names NamespaceBox Nand NArgMax NArgMin NBernoulliB NCache NDSolve NDSolveValue Nearest NearestFunction NeedCurrentFrontEndPackagePacket NeedCurrentFrontEndSymbolsPacket NeedlemanWunschSimilarity Needs Negative NegativeBinomialDistribution NegativeMultinomialDistribution NeighborhoodGraph Nest NestedGreaterGreater NestedLessLess NestedScriptRules NestList NestWhile NestWhileList NevilleThetaC NevilleThetaD NevilleThetaN NevilleThetaS NewPrimitiveStyle NExpectation Next NextPrime NHoldAll NHoldFirst NHoldRest NicholsGridLines NicholsPlot NIntegrate NMaximize NMaxValue NMinimize NMinValue NominalVariables NonAssociative NoncentralBetaDistribution NoncentralChiSquareDistribution NoncentralFRatioDistribution NoncentralStudentTDistribution NonCommutativeMultiply NonConstants None NonlinearModelFit NonlocalMeansFilter NonNegative NonPositive Nor NorlundB Norm Normal NormalDistribution NormalGrouping Normalize NormalizedSquaredEuclideanDistance NormalsFunction NormFunction Not NotCongruent NotCupCap NotDoubleVerticalBar Notebook NotebookApply NotebookAutoSave NotebookClose NotebookConvertSettings NotebookCreate NotebookCreateReturnObject NotebookDefault NotebookDelete NotebookDirectory NotebookDynamicExpression NotebookEvaluate NotebookEventActions NotebookFileName NotebookFind NotebookFindReturnObject NotebookGet NotebookGetLayoutInformationPacket NotebookGetMisspellingsPacket NotebookInformation NotebookInterfaceObject NotebookLocate NotebookObject NotebookOpen NotebookOpenReturnObject NotebookPath NotebookPrint NotebookPut NotebookPutReturnObject NotebookRead NotebookResetGeneratedCells Notebooks NotebookSave NotebookSaveAs NotebookSelection NotebookSetupLayoutInformationPacket NotebooksMenu NotebookWrite NotElement NotEqualTilde NotExists NotGreater NotGreaterEqual NotGreaterFullEqual NotGreaterGreater NotGreaterLess NotGreaterSlantEqual NotGreaterTilde NotHumpDownHump NotHumpEqual NotLeftTriangle NotLeftTriangleBar NotLeftTriangleEqual NotLess NotLessEqual NotLessFullEqual NotLessGreater NotLessLess NotLessSlantEqual NotLessTilde NotNestedGreaterGreater NotNestedLessLess NotPrecedes NotPrecedesEqual NotPrecedesSlantEqual NotPrecedesTilde NotReverseElement NotRightTriangle NotRightTriangleBar NotRightTriangleEqual NotSquareSubset NotSquareSubsetEqual NotSquareSuperset NotSquareSupersetEqual NotSubset NotSubsetEqual NotSucceeds NotSucceedsEqual NotSucceedsSlantEqual NotSucceedsTilde NotSuperset NotSupersetEqual NotTilde NotTildeEqual NotTildeFullEqual NotTildeTilde NotVerticalBar NProbability NProduct NProductFactors NRoots NSolve NSum NSumTerms Null NullRecords NullSpace NullWords Number NumberFieldClassNumber NumberFieldDiscriminant NumberFieldFundamentalUnits NumberFieldIntegralBasis NumberFieldNormRepresentatives NumberFieldRegulator NumberFieldRootsOfUnity NumberFieldSignature NumberForm NumberFormat NumberMarks NumberMultiplier NumberPadding NumberPoint NumberQ NumberSeparator ' +\n      'NumberSigns NumberString Numerator NumericFunction NumericQ NuttallWindow NValues NyquistGridLines NyquistPlot ' +\n      'O ObservabilityGramian ObservabilityMatrix ObservableDecomposition ObservableModelQ OddQ Off Offset OLEData On ONanGroupON OneIdentity Opacity Open OpenAppend Opener OpenerBox OpenerBoxOptions OpenerView OpenFunctionInspectorPacket Opening OpenRead OpenSpecialOptions OpenTemporary OpenWrite Operate OperatingSystem OptimumFlowData Optional OptionInspectorSettings OptionQ Options OptionsPacket OptionsPattern OptionValue OptionValueBox OptionValueBoxOptions Or Orange Order OrderDistribution OrderedQ Ordering Orderless OrnsteinUhlenbeckProcess Orthogonalize Out Outer OutputAutoOverwrite OutputControllabilityMatrix OutputControllableModelQ OutputForm OutputFormData OutputGrouping OutputMathEditExpression OutputNamePacket OutputResponse OutputSizeLimit OutputStream Over OverBar OverDot Overflow OverHat Overlaps Overlay OverlayBox OverlayBoxOptions Overscript OverscriptBox OverscriptBoxOptions OverTilde OverVector OwenT OwnValues ' +\n      'PackingMethod PaddedForm Padding PadeApproximant PadLeft PadRight PageBreakAbove PageBreakBelow PageBreakWithin PageFooterLines PageFooters PageHeaderLines PageHeaders PageHeight PageRankCentrality PageWidth PairedBarChart PairedHistogram PairedSmoothHistogram PairedTTest PairedZTest PaletteNotebook PalettePath Pane PaneBox PaneBoxOptions Panel PanelBox PanelBoxOptions Paneled PaneSelector PaneSelectorBox PaneSelectorBoxOptions PaperWidth ParabolicCylinderD ParagraphIndent ParagraphSpacing ParallelArray ParallelCombine ParallelDo ParallelEvaluate Parallelization Parallelize ParallelMap ParallelNeeds ParallelProduct ParallelSubmit ParallelSum ParallelTable ParallelTry Parameter ParameterEstimator ParameterMixtureDistribution ParameterVariables ParametricFunction ParametricNDSolve ParametricNDSolveValue ParametricPlot ParametricPlot3D ParentConnect ParentDirectory ParentForm Parenthesize ParentList ParetoDistribution Part PartialCorrelationFunction PartialD ParticleData Partition PartitionsP PartitionsQ ParzenWindow PascalDistribution PassEventsDown PassEventsUp Paste PasteBoxFormInlineCells PasteButton Path PathGraph PathGraphQ Pattern PatternSequence PatternTest PauliMatrix PaulWavelet Pause PausedTime PDF PearsonChiSquareTest PearsonCorrelationTest PearsonDistribution PerformanceGoal PeriodicInterpolation Periodogram PeriodogramArray PermutationCycles PermutationCyclesQ PermutationGroup PermutationLength PermutationList PermutationListQ PermutationMax PermutationMin PermutationOrder PermutationPower PermutationProduct PermutationReplace Permutations PermutationSupport Permute PeronaMalikFilter Perpendicular PERTDistribution PetersenGraph PhaseMargins Pi Pick PIDData PIDDerivativeFilter PIDFeedforward PIDTune Piecewise PiecewiseExpand PieChart PieChart3D PillaiTrace PillaiTraceTest Pink Pivoting PixelConstrained PixelValue PixelValuePositions Placed Placeholder PlaceholderReplace Plain PlanarGraphQ Play PlayRange Plot Plot3D Plot3Matrix PlotDivision PlotJoined PlotLabel PlotLayout PlotLegends PlotMarkers PlotPoints PlotRange PlotRangeClipping PlotRangePadding PlotRegion PlotStyle Plus PlusMinus Pochhammer PodStates PodWidth Point Point3DBox PointBox PointFigureChart PointForm PointLegend PointSize PoissonConsulDistribution PoissonDistribution PoissonProcess PoissonWindow PolarAxes PolarAxesOrigin PolarGridLines PolarPlot PolarTicks PoleZeroMarkers PolyaAeppliDistribution PolyGamma Polygon Polygon3DBox Polygon3DBoxOptions PolygonBox PolygonBoxOptions PolygonHoleScale PolygonIntersections PolygonScale PolyhedronData PolyLog PolynomialExtendedGCD PolynomialForm PolynomialGCD PolynomialLCM PolynomialMod PolynomialQ PolynomialQuotient PolynomialQuotientRemainder PolynomialReduce PolynomialRemainder Polynomials PopupMenu PopupMenuBox PopupMenuBoxOptions PopupView PopupWindow Position Positive PositiveDefiniteMatrixQ PossibleZeroQ Postfix PostScript Power PowerDistribution PowerExpand PowerMod PowerModList ' +\n      'PowerSpectralDensity PowersRepresentations PowerSymmetricPolynomial Precedence PrecedenceForm Precedes PrecedesEqual PrecedesSlantEqual PrecedesTilde Precision PrecisionGoal PreDecrement PredictionRoot PreemptProtect PreferencesPath Prefix PreIncrement Prepend PrependTo PreserveImageOptions Previous PriceGraphDistribution PrimaryPlaceholder Prime PrimeNu PrimeOmega PrimePi PrimePowerQ PrimeQ Primes PrimeZetaP PrimitiveRoot PrincipalComponents PrincipalValue Print PrintAction PrintForm PrintingCopies PrintingOptions PrintingPageRange PrintingStartingPageNumber PrintingStyleEnvironment PrintPrecision PrintTemporary Prism PrismBox PrismBoxOptions PrivateCellOptions PrivateEvaluationOptions PrivateFontOptions PrivateFrontEndOptions PrivateNotebookOptions PrivatePaths Probability ProbabilityDistribution ProbabilityPlot ProbabilityPr ProbabilityScalePlot ProbitModelFit ProcessEstimator ProcessParameterAssumptions ProcessParameterQ ProcessStateDomain ProcessTimeDomain Product ProductDistribution ProductLog ProgressIndicator ProgressIndicatorBox ProgressIndicatorBoxOptions Projection Prolog PromptForm Properties Property PropertyList PropertyValue Proportion Proportional Protect Protected ProteinData Pruning PseudoInverse Purple Put PutAppend Pyramid PyramidBox PyramidBoxOptions ' +\n      'QBinomial QFactorial QGamma QHypergeometricPFQ QPochhammer QPolyGamma QRDecomposition QuadraticIrrationalQ Quantile QuantilePlot Quantity QuantityForm QuantityMagnitude QuantityQ QuantityUnit Quartics QuartileDeviation Quartiles QuartileSkewness QueueingNetworkProcess QueueingProcess QueueProperties Quiet Quit Quotient QuotientRemainder ' +\n      'RadialityCentrality RadicalBox RadicalBoxOptions RadioButton RadioButtonBar RadioButtonBox RadioButtonBoxOptions Radon RamanujanTau RamanujanTauL RamanujanTauTheta RamanujanTauZ Random RandomChoice RandomComplex RandomFunction RandomGraph RandomImage RandomInteger RandomPermutation RandomPrime RandomReal RandomSample RandomSeed RandomVariate RandomWalkProcess Range RangeFilter RangeSpecification RankedMax RankedMin Raster Raster3D Raster3DBox Raster3DBoxOptions RasterArray RasterBox RasterBoxOptions Rasterize RasterSize Rational RationalFunctions Rationalize Rationals Ratios Raw RawArray RawBoxes RawData RawMedium RayleighDistribution Re Read ReadList ReadProtected Real RealBlockDiagonalForm RealDigits RealExponent Reals Reap Record RecordLists RecordSeparators Rectangle RectangleBox RectangleBoxOptions RectangleChart RectangleChart3D RecurrenceFilter RecurrenceTable RecurringDigitsForm Red Reduce RefBox ReferenceLineStyle ReferenceMarkers ReferenceMarkerStyle Refine ReflectionMatrix ReflectionTransform Refresh RefreshRate RegionBinarize RegionFunction RegionPlot RegionPlot3D RegularExpression Regularization Reinstall Release ReleaseHold ReliabilityDistribution ReliefImage ReliefPlot Remove RemoveAlphaChannel RemoveAsynchronousTask Removed RemoveInputStreamMethod RemoveOutputStreamMethod RemoveProperty RemoveScheduledTask RenameDirectory RenameFile RenderAll RenderingOptions RenewalProcess RenkoChart Repeated RepeatedNull RepeatedString Replace ReplaceAll ReplaceHeldPart ReplaceImageValue ReplaceList ReplacePart ReplacePixelValue ReplaceRepeated Resampling Rescale RescalingTransform ResetDirectory ResetMenusPacket ResetScheduledTask Residue Resolve Rest Resultant ResumePacket Return ReturnExpressionPacket ReturnInputFormPacket ReturnPacket ReturnTextPacket Reverse ReverseBiorthogonalSplineWavelet ReverseElement ReverseEquilibrium ReverseGraph ReverseUpEquilibrium RevolutionAxis RevolutionPlot3D RGBColor RiccatiSolve RiceDistribution RidgeFilter RiemannR RiemannSiegelTheta RiemannSiegelZ Riffle Right RightArrow RightArrowBar RightArrowLeftArrow RightCosetRepresentative RightDownTeeVector RightDownVector RightDownVectorBar RightTee RightTeeArrow RightTeeVector RightTriangle RightTriangleBar RightTriangleEqual RightUpDownVector RightUpTeeVector RightUpVector RightUpVectorBar RightVector RightVectorBar RiskAchievementImportance RiskReductionImportance RogersTanimotoDissimilarity Root RootApproximant RootIntervals RootLocusPlot RootMeanSquare RootOfUnityQ RootReduce Roots RootSum Rotate RotateLabel RotateLeft RotateRight RotationAction RotationBox RotationBoxOptions RotationMatrix RotationTransform Round RoundImplies RoundingRadius Row RowAlignments RowBackgrounds RowBox RowHeights RowLines RowMinHeight RowReduce RowsEqual RowSpacings RSolve RudvalisGroupRu Rule RuleCondition RuleDelayed RuleForm RulerUnits Run RunScheduledTask RunThrough RuntimeAttributes RuntimeOptions RussellRaoDissimilarity ' +\n      'SameQ SameTest SampleDepth SampledSoundFunction SampledSoundList SampleRate SamplingPeriod SARIMAProcess SARMAProcess SatisfiabilityCount SatisfiabilityInstances SatisfiableQ Saturday Save Saveable SaveAutoDelete SaveDefinitions SawtoothWave Scale Scaled ScaleDivisions ScaledMousePosition ScaleOrigin ScalePadding ScaleRanges ScaleRangeStyle ScalingFunctions ScalingMatrix ScalingTransform Scan ScheduledTaskActiveQ ScheduledTaskData ScheduledTaskObject ScheduledTasks SchurDecomposition ScientificForm ScreenRectangle ScreenStyleEnvironment ScriptBaselineShifts ScriptLevel ScriptMinSize ScriptRules ScriptSizeMultipliers Scrollbars ScrollingOptions ScrollPosition Sec Sech SechDistribution SectionGrouping SectorChart SectorChart3D SectorOrigin SectorSpacing SeedRandom Select Selectable SelectComponents SelectedCells SelectedNotebook Selection SelectionAnimate SelectionCell SelectionCellCreateCell SelectionCellDefaultStyle SelectionCellParentStyle SelectionCreateCell SelectionDebuggerTag SelectionDuplicateCell SelectionEvaluate SelectionEvaluateCreateCell SelectionMove SelectionPlaceholder SelectionSetStyle SelectWithContents SelfLoops SelfLoopStyle SemialgebraicComponentInstances SendMail Sequence SequenceAlignment SequenceForm SequenceHold SequenceLimit Series SeriesCoefficient SeriesData SessionTime Set SetAccuracy SetAlphaChannel SetAttributes Setbacks SetBoxFormNamesPacket SetDelayed SetDirectory SetEnvironment SetEvaluationNotebook SetFileDate SetFileLoadingContext SetNotebookStatusLine SetOptions SetOptionsPacket SetPrecision SetProperty SetSelectedNotebook SetSharedFunction SetSharedVariable SetSpeechParametersPacket SetStreamPosition SetSystemOptions Setter SetterBar SetterBox SetterBoxOptions Setting SetValue Shading Shallow ShannonWavelet ShapiroWilkTest Share Sharpen ShearingMatrix ShearingTransform ShenCastanMatrix Short ShortDownArrow Shortest ShortestMatch ShortestPathFunction ShortLeftArrow ShortRightArrow ShortUpArrow Show ShowAutoStyles ShowCellBracket ShowCellLabel ShowCellTags ShowClosedCellArea ShowContents ShowControls ShowCursorTracker ShowGroupOpenCloseIcon ShowGroupOpener ShowInvisibleCharacters ShowPageBreaks ShowPredictiveInterface ShowSelection ShowShortBoxForm ShowSpecialCharacters ShowStringCharacters ShowSyntaxStyles ShrinkingDelay ShrinkWrapBoundingBox SiegelTheta SiegelTukeyTest Sign Signature SignedRankTest SignificanceLevel SignPadding SignTest SimilarityRules SimpleGraph SimpleGraphQ Simplify Sin Sinc SinghMaddalaDistribution SingleEvaluation SingleLetterItalics SingleLetterStyle SingularValueDecomposition SingularValueList SingularValuePlot SingularValues Sinh SinhIntegral SinIntegral SixJSymbol Skeleton SkeletonTransform SkellamDistribution Skewness SkewNormalDistribution Skip SliceDistribution Slider Slider2D Slider2DBox Slider2DBoxOptions SliderBox SliderBoxOptions SlideView Slot SlotSequence Small SmallCircle Smaller SmithDelayCompensator SmithWatermanSimilarity ' +\n      'SmoothDensityHistogram SmoothHistogram SmoothHistogram3D SmoothKernelDistribution SocialMediaData Socket SokalSneathDissimilarity Solve SolveAlways SolveDelayed Sort SortBy Sound SoundAndGraphics SoundNote SoundVolume Sow Space SpaceForm Spacer Spacings Span SpanAdjustments SpanCharacterRounding SpanFromAbove SpanFromBoth SpanFromLeft SpanLineThickness SpanMaxSize SpanMinSize SpanningCharacters SpanSymmetric SparseArray SpatialGraphDistribution Speak SpeakTextPacket SpearmanRankTest SpearmanRho Spectrogram SpectrogramArray Specularity SpellingCorrection SpellingDictionaries SpellingDictionariesPath SpellingOptions SpellingSuggestionsPacket Sphere SphereBox SphericalBesselJ SphericalBesselY SphericalHankelH1 SphericalHankelH2 SphericalHarmonicY SphericalPlot3D SphericalRegion SpheroidalEigenvalue SpheroidalJoiningFactor SpheroidalPS SpheroidalPSPrime SpheroidalQS SpheroidalQSPrime SpheroidalRadialFactor SpheroidalS1 SpheroidalS1Prime SpheroidalS2 SpheroidalS2Prime Splice SplicedDistribution SplineClosed SplineDegree SplineKnots SplineWeights Split SplitBy SpokenString Sqrt SqrtBox SqrtBoxOptions Square SquaredEuclideanDistance SquareFreeQ SquareIntersection SquaresR SquareSubset SquareSubsetEqual SquareSuperset SquareSupersetEqual SquareUnion SquareWave StabilityMargins StabilityMarginsStyle StableDistribution Stack StackBegin StackComplete StackInhibit StandardDeviation StandardDeviationFilter StandardForm Standardize StandbyDistribution Star StarGraph StartAsynchronousTask StartingStepSize StartOfLine StartOfString StartScheduledTask StartupSound StateDimensions StateFeedbackGains StateOutputEstimator StateResponse StateSpaceModel StateSpaceRealization StateSpaceTransform StationaryDistribution StationaryWaveletPacketTransform StationaryWaveletTransform StatusArea StatusCentrality StepMonitor StieltjesGamma StirlingS1 StirlingS2 StopAsynchronousTask StopScheduledTask StrataVariables StratonovichProcess StreamColorFunction StreamColorFunctionScaling StreamDensityPlot StreamPlot StreamPoints StreamPosition Streams StreamScale StreamStyle String StringBreak StringByteCount StringCases StringCount StringDrop StringExpression StringForm StringFormat StringFreeQ StringInsert StringJoin StringLength StringMatchQ StringPosition StringQ StringReplace StringReplaceList StringReplacePart StringReverse StringRotateLeft StringRotateRight StringSkeleton StringSplit StringTake StringToStream StringTrim StripBoxes StripOnInput StripWrapperBoxes StrokeForm StructuralImportance StructuredArray StructuredSelection StruveH StruveL Stub StudentTDistribution Style StyleBox StyleBoxAutoDelete StyleBoxOptions StyleData StyleDefinitions StyleForm StyleKeyMapping StyleMenuListing StyleNameDialogSettings StyleNames StylePrint StyleSheetPath Subfactorial Subgraph SubMinus SubPlus SubresultantPolynomialRemainders ' +\n      'SubresultantPolynomials Subresultants Subscript SubscriptBox SubscriptBoxOptions Subscripted Subset SubsetEqual Subsets SubStar Subsuperscript SubsuperscriptBox SubsuperscriptBoxOptions Subtract SubtractFrom SubValues Succeeds SucceedsEqual SucceedsSlantEqual SucceedsTilde SuchThat Sum SumConvergence Sunday SuperDagger SuperMinus SuperPlus Superscript SuperscriptBox SuperscriptBoxOptions Superset SupersetEqual SuperStar Surd SurdForm SurfaceColor SurfaceGraphics SurvivalDistribution SurvivalFunction SurvivalModel SurvivalModelFit SuspendPacket SuzukiDistribution SuzukiGroupSuz SwatchLegend Switch Symbol SymbolName SymletWavelet Symmetric SymmetricGroup SymmetricMatrixQ SymmetricPolynomial SymmetricReduction Symmetrize SymmetrizedArray SymmetrizedArrayRules SymmetrizedDependentComponents SymmetrizedIndependentComponents SymmetrizedReplacePart SynchronousInitialization SynchronousUpdating Syntax SyntaxForm SyntaxInformation SyntaxLength SyntaxPacket SyntaxQ SystemDialogInput SystemException SystemHelpPath SystemInformation SystemInformationData SystemOpen SystemOptions SystemsModelDelay SystemsModelDelayApproximate SystemsModelDelete SystemsModelDimensions SystemsModelExtract SystemsModelFeedbackConnect SystemsModelLabels SystemsModelOrder SystemsModelParallelConnect SystemsModelSeriesConnect SystemsModelStateFeedbackConnect SystemStub ' +\n      'Tab TabFilling Table TableAlignments TableDepth TableDirections TableForm TableHeadings TableSpacing TableView TableViewBox TabSpacings TabView TabViewBox TabViewBoxOptions TagBox TagBoxNote TagBoxOptions TaggingRules TagSet TagSetDelayed TagStyle TagUnset Take TakeWhile Tally Tan Tanh TargetFunctions TargetUnits TautologyQ TelegraphProcess TemplateBox TemplateBoxOptions TemplateSlotSequence TemporalData Temporary TemporaryVariable TensorContract TensorDimensions TensorExpand TensorProduct TensorQ TensorRank TensorReduce TensorSymmetry TensorTranspose TensorWedge Tetrahedron TetrahedronBox TetrahedronBoxOptions TeXForm TeXSave Text Text3DBox Text3DBoxOptions TextAlignment TextBand TextBoundingBox TextBox TextCell TextClipboardType TextData TextForm TextJustification TextLine TextPacket TextParagraph TextRecognize TextRendering TextStyle Texture TextureCoordinateFunction TextureCoordinateScaling Therefore ThermometerGauge Thick Thickness Thin Thinning ThisLink ThompsonGroupTh Thread ThreeJSymbol Threshold Through Throw Thumbnail Thursday Ticks TicksStyle Tilde TildeEqual TildeFullEqual TildeTilde TimeConstrained TimeConstraint Times TimesBy TimeSeriesForecast TimeSeriesInvertibility TimeUsed TimeValue TimeZone Timing Tiny TitleGrouping TitsGroupT ToBoxes ToCharacterCode ToColor ToContinuousTimeModel ToDate ToDiscreteTimeModel ToeplitzMatrix ToExpression ToFileName Together Toggle ToggleFalse Toggler TogglerBar TogglerBox TogglerBoxOptions ToHeldExpression ToInvertibleTimeSeries TokenWords Tolerance ToLowerCase ToNumberField TooBig Tooltip TooltipBox TooltipBoxOptions TooltipDelay TooltipStyle Top TopHatTransform TopologicalSort ToRadicals ToRules ToString Total TotalHeight TotalVariationFilter TotalWidth TouchscreenAutoZoom TouchscreenControlPlacement ToUpperCase Tr Trace TraceAbove TraceAction TraceBackward TraceDepth TraceDialog TraceForward TraceInternal TraceLevel TraceOff TraceOn TraceOriginal TracePrint TraceScan TrackedSymbols TradingChart TraditionalForm TraditionalFunctionNotation TraditionalNotation TraditionalOrder TransferFunctionCancel TransferFunctionExpand TransferFunctionFactor TransferFunctionModel TransferFunctionPoles TransferFunctionTransform TransferFunctionZeros TransformationFunction TransformationFunctions TransformationMatrix TransformedDistribution TransformedField Translate TranslationTransform TransparentColor Transpose TreeForm TreeGraph TreeGraphQ TreePlot TrendStyle TriangleWave TriangularDistribution Trig TrigExpand TrigFactor TrigFactorList Trigger TrigReduce TrigToExp TrimmedMean True TrueQ TruncatedDistribution TsallisQExponentialDistribution TsallisQGaussianDistribution TTest Tube TubeBezierCurveBox TubeBezierCurveBoxOptions TubeBox TubeBSplineCurveBox TubeBSplineCurveBoxOptions Tuesday TukeyLambdaDistribution TukeyWindow Tuples TuranGraph TuringMachine ' +\n      'Transparent ' +\n      'UnateQ Uncompress Undefined UnderBar Underflow Underlined Underoverscript UnderoverscriptBox UnderoverscriptBoxOptions Underscript UnderscriptBox UnderscriptBoxOptions UndirectedEdge UndirectedGraph UndirectedGraphQ UndocumentedTestFEParserPacket UndocumentedTestGetSelectionPacket Unequal Unevaluated UniformDistribution UniformGraphDistribution UniformSumDistribution Uninstall Union UnionPlus Unique UnitBox UnitConvert UnitDimensions Unitize UnitRootTest UnitSimplify UnitStep UnitTriangle UnitVector Unprotect UnsameQ UnsavedVariables Unset UnsetShared UntrackedVariables Up UpArrow UpArrowBar UpArrowDownArrow Update UpdateDynamicObjects UpdateDynamicObjectsSynchronous UpdateInterval UpDownArrow UpEquilibrium UpperCaseQ UpperLeftArrow UpperRightArrow UpperTriangularize Upsample UpSet UpSetDelayed UpTee UpTeeArrow UpValues URL URLFetch URLFetchAsynchronous URLSave URLSaveAsynchronous UseGraphicsRange Using UsingFrontEnd ' +\n      'V2Get ValidationLength Value ValueBox ValueBoxOptions ValueForm ValueQ ValuesData Variables Variance VarianceEquivalenceTest VarianceEstimatorFunction VarianceGammaDistribution VarianceTest VectorAngle VectorColorFunction VectorColorFunctionScaling VectorDensityPlot VectorGlyphData VectorPlot VectorPlot3D VectorPoints VectorQ Vectors VectorScale VectorStyle Vee Verbatim Verbose VerboseConvertToPostScriptPacket VerifyConvergence VerifySolutions VerifyTestAssumptions Version VersionNumber VertexAdd VertexCapacity VertexColors VertexComponent VertexConnectivity VertexCoordinateRules VertexCoordinates VertexCorrelationSimilarity VertexCosineSimilarity VertexCount VertexCoverQ VertexDataCoordinates VertexDegree VertexDelete VertexDiceSimilarity VertexEccentricity VertexInComponent VertexInDegree VertexIndex VertexJaccardSimilarity VertexLabeling VertexLabels VertexLabelStyle VertexList VertexNormals VertexOutComponent VertexOutDegree VertexQ VertexRenderingFunction VertexReplace VertexShape VertexShapeFunction VertexSize VertexStyle VertexTextureCoordinates VertexWeight Vertical VerticalBar VerticalForm VerticalGauge VerticalSeparator VerticalSlider VerticalTilde ViewAngle ViewCenter ViewMatrix ViewPoint ViewPointSelectorSettings ViewPort ViewRange ViewVector ViewVertical VirtualGroupData Visible VisibleCell VoigtDistribution VonMisesDistribution ' +\n      'WaitAll WaitAsynchronousTask WaitNext WaitUntil WakebyDistribution WalleniusHypergeometricDistribution WaringYuleDistribution WatershedComponents WatsonUSquareTest WattsStrogatzGraphDistribution WaveletBestBasis WaveletFilterCoefficients WaveletImagePlot WaveletListPlot WaveletMapIndexed WaveletMatrixPlot WaveletPhi WaveletPsi WaveletScale WaveletScalogram WaveletThreshold WeaklyConnectedComponents WeaklyConnectedGraphQ WeakStationarity WeatherData WeberE Wedge Wednesday WeibullDistribution WeierstrassHalfPeriods WeierstrassInvariants WeierstrassP WeierstrassPPrime WeierstrassSigma WeierstrassZeta WeightedAdjacencyGraph WeightedAdjacencyMatrix WeightedData WeightedGraphQ Weights WelchWindow WheelGraph WhenEvent Which While White Whitespace WhitespaceCharacter WhittakerM WhittakerW WienerFilter WienerProcess WignerD WignerSemicircleDistribution WilksW WilksWTest WindowClickSelect WindowElements WindowFloating WindowFrame WindowFrameElements WindowMargins WindowMovable WindowOpacity WindowSelected WindowSize WindowStatusArea WindowTitle WindowToolbars WindowWidth With WolframAlpha WolframAlphaDate WolframAlphaQuantity WolframAlphaResult Word WordBoundary WordCharacter WordData WordSearch WordSeparators WorkingPrecision Write WriteString Wronskian ' +\n      'XMLElement XMLObject Xnor Xor ' +\n      'Yellow YuleDissimilarity ' +\n      'ZernikeR ZeroSymmetric ZeroTest ZeroWidthTimes Zeta ZetaZero ZipfDistribution ZTest ZTransform ' +\n      '$Aborted $ActivationGroupID $ActivationKey $ActivationUserRegistered $AddOnsDirectory $AssertFunction $Assumptions $AsynchronousTask $BaseDirectory $BatchInput $BatchOutput $BoxForms $ByteOrdering $Canceled $CharacterEncoding $CharacterEncodings $CommandLine $CompilationTarget $ConditionHold $ConfiguredKernels $Context $ContextPath $ControlActiveSetting $CreationDate $CurrentLink $DateStringFormat $DefaultFont $DefaultFrontEnd $DefaultImagingDevice $DefaultPath $Display $DisplayFunction $DistributedContexts $DynamicEvaluation $Echo $Epilog $ExportFormats $Failed $FinancialDataSource $FormatType $FrontEnd $FrontEndSession $GeoLocation $HistoryLength $HomeDirectory $HTTPCookies $IgnoreEOF $ImagingDevices $ImportFormats $InitialDirectory $Input $InputFileName $InputStreamMethods $Inspector $InstallationDate $InstallationDirectory $InterfaceEnvironment $IterationLimit $KernelCount $KernelID $Language $LaunchDirectory $LibraryPath $LicenseExpirationDate $LicenseID $LicenseProcesses $LicenseServer $LicenseSubprocesses $LicenseType $Line $Linked $LinkSupported $LoadedFiles $MachineAddresses $MachineDomain $MachineDomains $MachineEpsilon $MachineID $MachineName $MachinePrecision $MachineType $MaxExtraPrecision $MaxLicenseProcesses $MaxLicenseSubprocesses $MaxMachineNumber $MaxNumber $MaxPiecewiseCases $MaxPrecision $MaxRootDegree $MessageGroups $MessageList $MessagePrePrint $Messages $MinMachineNumber $MinNumber $MinorReleaseNumber $MinPrecision $ModuleNumber $NetworkLicense $NewMessage $NewSymbol $Notebooks $NumberMarks $Off $OperatingSystem $Output $OutputForms $OutputSizeLimit $OutputStreamMethods $Packages $ParentLink $ParentProcessID $PasswordFile $PatchLevelID $Path $PathnameSeparator $PerformanceGoal $PipeSupported $Post $Pre $PreferencesDirectory $PrePrint $PreRead $PrintForms $PrintLiteral $ProcessID $ProcessorCount $ProcessorType $ProductInformation $ProgramName $RandomState $RecursionLimit $ReleaseNumber $RootDirectory $ScheduledTask $ScriptCommandLine $SessionID $SetParentLink $SharedFunctions $SharedVariables $SoundDisplay $SoundDisplayFunction $SuppressInputFormHeads $SynchronousEvaluation $SyntaxHandler $System $SystemCharacterEncoding $SystemID $SystemWordLength $TemporaryDirectory $TemporaryPrefix $TextStyle $TimedOut $TimeUnit $TimeZone $TopDirectory $TraceOff $TraceOn $TracePattern $TracePostAction $TracePreAction $Urgent $UserAddOnsDirectory $UserBaseDirectory $UserDocumentsDirectory $UserName $Version $VersionNumber',\n    contains: [\n      {\n        className: 'comment',\n        begin: /\\(\\*/, end: /\\*\\)/\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_NUMBER_MODE,\n      {\n        begin: /\\{/, end: /\\}/,\n        illegal: /:/\n      }\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/mathematica.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/matlab.js":
/*!***********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/matlab.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var COMMON_CONTAINS = [\n    hljs.C_NUMBER_MODE,\n    {\n      className: 'string',\n      begin: '\\'', end: '\\'',\n      contains: [hljs.BACKSLASH_ESCAPE, {begin: '\\'\\''}]\n    }\n  ];\n  var TRANSPOSE = {\n    relevance: 0,\n    contains: [\n      {\n        begin: /'['\\.]*/\n      }\n    ]\n  };\n\n  return {\n    keywords: {\n      keyword:\n        'break case catch classdef continue else elseif end enumerated events for function ' +\n        'global if methods otherwise parfor persistent properties return spmd switch try while',\n      built_in:\n        'sin sind sinh asin asind asinh cos cosd cosh acos acosd acosh tan tand tanh atan ' +\n        'atand atan2 atanh sec secd sech asec asecd asech csc cscd csch acsc acscd acsch cot ' +\n        'cotd coth acot acotd acoth hypot exp expm1 log log1p log10 log2 pow2 realpow reallog ' +\n        'realsqrt sqrt nthroot nextpow2 abs angle complex conj imag real unwrap isreal ' +\n        'cplxpair fix floor ceil round mod rem sign airy besselj bessely besselh besseli ' +\n        'besselk beta betainc betaln ellipj ellipke erf erfc erfcx erfinv expint gamma ' +\n        'gammainc gammaln psi legendre cross dot factor isprime primes gcd lcm rat rats perms ' +\n        'nchoosek factorial cart2sph cart2pol pol2cart sph2cart hsv2rgb rgb2hsv zeros ones ' +\n        'eye repmat rand randn linspace logspace freqspace meshgrid accumarray size length ' +\n        'ndims numel disp isempty isequal isequalwithequalnans cat reshape diag blkdiag tril ' +\n        'triu fliplr flipud flipdim rot90 find sub2ind ind2sub bsxfun ndgrid permute ipermute ' +\n        'shiftdim circshift squeeze isscalar isvector ans eps realmax realmin pi i inf nan ' +\n        'isnan isinf isfinite j why compan gallery hadamard hankel hilb invhilb magic pascal ' +\n        'rosser toeplitz vander wilkinson'\n    },\n    illegal: '(//|\"|#|/\\\\*|\\\\s+/\\\\w+)',\n    contains: [\n      {\n        className: 'function',\n        beginKeywords: 'function', end: '$',\n        contains: [\n          hljs.UNDERSCORE_TITLE_MODE,\n          {\n            className: 'params',\n            variants: [\n              {begin: '\\\\(', end: '\\\\)'},\n              {begin: '\\\\[', end: '\\\\]'}\n            ]\n          }\n        ]\n      },\n      {\n        begin: /[a-zA-Z_][a-zA-Z_0-9]*'['\\.]*/,\n        returnBegin: true,\n        relevance: 0,\n        contains: [\n          {begin: /[a-zA-Z_][a-zA-Z_0-9]*/, relevance: 0},\n          TRANSPOSE.contains[0]\n        ]\n      },\n      {\n        begin: '\\\\[', end: '\\\\]',\n        contains: COMMON_CONTAINS,\n        relevance: 0,\n        starts: TRANSPOSE\n      },\n      {\n        begin: '\\\\{', end: /}/,\n        contains: COMMON_CONTAINS,\n        relevance: 0,\n        starts: TRANSPOSE\n      },\n      {\n        // transpose operators at the end of a function call\n        begin: /\\)/,\n        relevance: 0,\n        starts: TRANSPOSE\n      },\n      hljs.COMMENT('^\\\\s*\\\\%\\\\{\\\\s*$', '^\\\\s*\\\\%\\\\}\\\\s*$'),\n      hljs.COMMENT('\\\\%', '$')\n    ].concat(COMMON_CONTAINS)\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/matlab.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/maxima.js":
/*!***********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/maxima.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var KEYWORDS = 'if then else elseif for thru do while unless step in and or not';\n  var LITERALS = 'true false unknown inf minf ind und %e %i %pi %phi %gamma';\n  var BUILTIN_FUNCTIONS =\n        ' abasep abs absint absolute_real_time acos acosh acot acoth acsc acsch activate'\n      + ' addcol add_edge add_edges addmatrices addrow add_vertex add_vertices adjacency_matrix'\n      + ' adjoin adjoint af agd airy airy_ai airy_bi airy_dai airy_dbi algsys alg_type'\n      + ' alias allroots alphacharp alphanumericp amortization %and annuity_fv'\n      + ' annuity_pv antid antidiff AntiDifference append appendfile apply apply1 apply2'\n      + ' applyb1 apropos args arit_amortization arithmetic arithsum array arrayapply'\n      + ' arrayinfo arraymake arraysetapply ascii asec asech asin asinh askinteger'\n      + ' asksign assoc assoc_legendre_p assoc_legendre_q assume assume_external_byte_order'\n      + ' asympa at atan atan2 atanh atensimp atom atvalue augcoefmatrix augmented_lagrangian_method'\n      + ' av average_degree backtrace bars barsplot barsplot_description base64 base64_decode'\n      + ' bashindices batch batchload bc2 bdvac belln benefit_cost bern bernpoly bernstein_approx'\n      + ' bernstein_expand bernstein_poly bessel bessel_i bessel_j bessel_k bessel_simplify'\n      + ' bessel_y beta beta_incomplete beta_incomplete_generalized beta_incomplete_regularized'\n      + ' bezout bfallroots bffac bf_find_root bf_fmin_cobyla bfhzeta bfloat bfloatp'\n      + ' bfpsi bfpsi0 bfzeta biconnected_components bimetric binomial bipartition'\n      + ' block blockmatrixp bode_gain bode_phase bothcoef box boxplot boxplot_description'\n      + ' break bug_report build_info|10 buildq build_sample burn cabs canform canten'\n      + ' cardinality carg cartan cartesian_product catch cauchy_matrix cbffac cdf_bernoulli'\n      + ' cdf_beta cdf_binomial cdf_cauchy cdf_chi2 cdf_continuous_uniform cdf_discrete_uniform'\n      + ' cdf_exp cdf_f cdf_gamma cdf_general_finite_discrete cdf_geometric cdf_gumbel'\n      + ' cdf_hypergeometric cdf_laplace cdf_logistic cdf_lognormal cdf_negative_binomial'\n      + ' cdf_noncentral_chi2 cdf_noncentral_student_t cdf_normal cdf_pareto cdf_poisson'\n      + ' cdf_rank_sum cdf_rayleigh cdf_signed_rank cdf_student_t cdf_weibull cdisplay'\n      + ' ceiling central_moment cequal cequalignore cf cfdisrep cfexpand cgeodesic'\n      + ' cgreaterp cgreaterpignore changename changevar chaosgame charat charfun charfun2'\n      + ' charlist charp charpoly chdir chebyshev_t chebyshev_u checkdiv check_overlaps'\n      + ' chinese cholesky christof chromatic_index chromatic_number cint circulant_graph'\n      + ' clear_edge_weight clear_rules clear_vertex_label clebsch_gordan clebsch_graph'\n      + ' clessp clesspignore close closefile cmetric coeff coefmatrix cograd col collapse'\n      + ' collectterms columnop columnspace columnswap columnvector combination combine'\n      + ' comp2pui compare compfile compile compile_file complement_graph complete_bipartite_graph'\n      + ' complete_graph complex_number_p components compose_functions concan concat'\n      + ' conjugate conmetderiv connected_components connect_vertices cons constant'\n      + ' constantp constituent constvalue cont2part content continuous_freq contortion'\n      + ' contour_plot contract contract_edge contragrad contrib_ode convert coord'\n      + ' copy copy_file copy_graph copylist copymatrix cor cos cosh cot coth cov cov1'\n      + ' covdiff covect covers crc24sum create_graph create_list csc csch csetup cspline'\n      + ' ctaylor ct_coordsys ctransform ctranspose cube_graph cuboctahedron_graph'\n      + ' cunlisp cv cycle_digraph cycle_graph cylindrical days360 dblint deactivate'\n      + ' declare declare_constvalue declare_dimensions declare_fundamental_dimensions'\n      + ' declare_fundamental_units declare_qty declare_translated declare_unit_conversion'\n      + ' declare_units declare_weights decsym defcon define define_alt_display define_variable'\n      + ' defint defmatch defrule defstruct deftaylor degree_sequence del delete deleten'\n      + ' delta demo demoivre denom depends derivdegree derivlist describe desolve'\n      + ' determinant dfloat dgauss_a dgauss_b dgeev dgemm dgeqrf dgesv dgesvd diag'\n      + ' diagmatrix diag_matrix diagmatrixp diameter diff digitcharp dimacs_export'\n      + ' dimacs_import dimension dimensionless dimensions dimensions_as_list direct'\n      + ' directory discrete_freq disjoin disjointp disolate disp dispcon dispform'\n      + ' dispfun dispJordan display disprule dispterms distrib divide divisors divsum'\n      + ' dkummer_m dkummer_u dlange dodecahedron_graph dotproduct dotsimp dpart'\n      + ' draw draw2d draw3d drawdf draw_file draw_graph dscalar echelon edge_coloring'\n      + ' edge_connectivity edges eigens_by_jacobi eigenvalues eigenvectors eighth'\n      + ' einstein eivals eivects elapsed_real_time elapsed_run_time ele2comp ele2polynome'\n      + ' ele2pui elem elementp elevation_grid elim elim_allbut eliminate eliminate_using'\n      + ' ellipse elliptic_e elliptic_ec elliptic_eu elliptic_f elliptic_kc elliptic_pi'\n      + ' ematrix empty_graph emptyp endcons entermatrix entertensor entier equal equalp'\n      + ' equiv_classes erf erfc erf_generalized erfi errcatch error errormsg errors'\n      + ' euler ev eval_string evenp every evolution evolution2d evundiff example exp'\n      + ' expand expandwrt expandwrt_factored expint expintegral_chi expintegral_ci'\n      + ' expintegral_e expintegral_e1 expintegral_ei expintegral_e_simplify expintegral_li'\n      + ' expintegral_shi expintegral_si explicit explose exponentialize express expt'\n      + ' exsec extdiff extract_linear_equations extremal_subset ezgcd %f f90 facsum'\n      + ' factcomb factor factorfacsum factorial factorout factorsum facts fast_central_elements'\n      + ' fast_linsolve fasttimes featurep fernfale fft fib fibtophi fifth filename_merge'\n      + ' file_search file_type fillarray findde find_root find_root_abs find_root_error'\n      + ' find_root_rel first fix flatten flength float floatnump floor flower_snark'\n      + ' flush flush1deriv flushd flushnd flush_output fmin_cobyla forget fortran'\n      + ' fourcos fourexpand fourier fourier_elim fourint fourintcos fourintsin foursimp'\n      + ' foursin fourth fposition frame_bracket freeof freshline fresnel_c fresnel_s'\n      + ' from_adjacency_matrix frucht_graph full_listify fullmap fullmapl fullratsimp'\n      + ' fullratsubst fullsetify funcsolve fundamental_dimensions fundamental_units'\n      + ' fundef funmake funp fv g0 g1 gamma gamma_greek gamma_incomplete gamma_incomplete_generalized'\n      + ' gamma_incomplete_regularized gauss gauss_a gauss_b gaussprob gcd gcdex gcdivide'\n      + ' gcfac gcfactor gd generalized_lambert_w genfact gen_laguerre genmatrix gensym'\n      + ' geo_amortization geo_annuity_fv geo_annuity_pv geomap geometric geometric_mean'\n      + ' geosum get getcurrentdirectory get_edge_weight getenv get_lu_factors get_output_stream_string'\n      + ' get_pixel get_plot_option get_tex_environment get_tex_environment_default'\n      + ' get_vertex_label gfactor gfactorsum ggf girth global_variances gn gnuplot_close'\n      + ' gnuplot_replot gnuplot_reset gnuplot_restart gnuplot_start go Gosper GosperSum'\n      + ' gr2d gr3d gradef gramschmidt graph6_decode graph6_encode graph6_export graph6_import'\n      + ' graph_center graph_charpoly graph_eigenvalues graph_flow graph_order graph_periphery'\n      + ' graph_product graph_size graph_union great_rhombicosidodecahedron_graph great_rhombicuboctahedron_graph'\n      + ' grid_graph grind grobner_basis grotzch_graph hamilton_cycle hamilton_path'\n      + ' hankel hankel_1 hankel_2 harmonic harmonic_mean hav heawood_graph hermite'\n      + ' hessian hgfred hilbertmap hilbert_matrix hipow histogram histogram_description'\n      + ' hodge horner hypergeometric i0 i1 %ibes ic1 ic2 ic_convert ichr1 ichr2 icosahedron_graph'\n      + ' icosidodecahedron_graph icurvature ident identfor identity idiff idim idummy'\n      + ' ieqn %if ifactors iframes ifs igcdex igeodesic_coords ilt image imagpart'\n      + ' imetric implicit implicit_derivative implicit_plot indexed_tensor indices'\n      + ' induced_subgraph inferencep inference_result infix info_display init_atensor'\n      + ' init_ctensor in_neighbors innerproduct inpart inprod inrt integerp integer_partitions'\n      + ' integrate intersect intersection intervalp intopois intosum invariant1 invariant2'\n      + ' inverse_fft inverse_jacobi_cd inverse_jacobi_cn inverse_jacobi_cs inverse_jacobi_dc'\n      + ' inverse_jacobi_dn inverse_jacobi_ds inverse_jacobi_nc inverse_jacobi_nd inverse_jacobi_ns'\n      + ' inverse_jacobi_sc inverse_jacobi_sd inverse_jacobi_sn invert invert_by_adjoint'\n      + ' invert_by_lu inv_mod irr is is_biconnected is_bipartite is_connected is_digraph'\n      + ' is_edge_in_graph is_graph is_graph_or_digraph ishow is_isomorphic isolate'\n      + ' isomorphism is_planar isqrt isreal_p is_sconnected is_tree is_vertex_in_graph'\n      + ' items_inference %j j0 j1 jacobi jacobian jacobi_cd jacobi_cn jacobi_cs jacobi_dc'\n      + ' jacobi_dn jacobi_ds jacobi_nc jacobi_nd jacobi_ns jacobi_p jacobi_sc jacobi_sd'\n      + ' jacobi_sn JF jn join jordan julia julia_set julia_sin %k kdels kdelta kill'\n      + ' killcontext kostka kron_delta kronecker_product kummer_m kummer_u kurtosis'\n      + ' kurtosis_bernoulli kurtosis_beta kurtosis_binomial kurtosis_chi2 kurtosis_continuous_uniform'\n      + ' kurtosis_discrete_uniform kurtosis_exp kurtosis_f kurtosis_gamma kurtosis_general_finite_discrete'\n      + ' kurtosis_geometric kurtosis_gumbel kurtosis_hypergeometric kurtosis_laplace'\n      + ' kurtosis_logistic kurtosis_lognormal kurtosis_negative_binomial kurtosis_noncentral_chi2'\n      + ' kurtosis_noncentral_student_t kurtosis_normal kurtosis_pareto kurtosis_poisson'\n      + ' kurtosis_rayleigh kurtosis_student_t kurtosis_weibull label labels lagrange'\n      + ' laguerre lambda lambert_w laplace laplacian_matrix last lbfgs lc2kdt lcharp'\n      + ' lc_l lcm lc_u ldefint ldisp ldisplay legendre_p legendre_q leinstein length'\n      + ' let letrules letsimp levi_civita lfreeof lgtreillis lhs li liediff limit'\n      + ' Lindstedt linear linearinterpol linear_program linear_regression line_graph'\n      + ' linsolve listarray list_correlations listify list_matrix_entries list_nc_monomials'\n      + ' listoftens listofvars listp lmax lmin load loadfile local locate_matrix_entry'\n      + ' log logcontract log_gamma lopow lorentz_gauge lowercasep lpart lratsubst'\n      + ' lreduce lriemann lsquares_estimates lsquares_estimates_approximate lsquares_estimates_exact'\n      + ' lsquares_mse lsquares_residual_mse lsquares_residuals lsum ltreillis lu_backsub'\n      + ' lucas lu_factor %m macroexpand macroexpand1 make_array makebox makefact makegamma'\n      + ' make_graph make_level_picture makelist makeOrders make_poly_continent make_poly_country'\n      + ' make_polygon make_random_state make_rgb_picture makeset make_string_input_stream'\n      + ' make_string_output_stream make_transform mandelbrot mandelbrot_set map mapatom'\n      + ' maplist matchdeclare matchfix mat_cond mat_fullunblocker mat_function mathml_display'\n      + ' mat_norm matrix matrixmap matrixp matrix_size mattrace mat_trace mat_unblocker'\n      + ' max max_clique max_degree max_flow maximize_lp max_independent_set max_matching'\n      + ' maybe md5sum mean mean_bernoulli mean_beta mean_binomial mean_chi2 mean_continuous_uniform'\n      + ' mean_deviation mean_discrete_uniform mean_exp mean_f mean_gamma mean_general_finite_discrete'\n      + ' mean_geometric mean_gumbel mean_hypergeometric mean_laplace mean_logistic'\n      + ' mean_lognormal mean_negative_binomial mean_noncentral_chi2 mean_noncentral_student_t'\n      + ' mean_normal mean_pareto mean_poisson mean_rayleigh mean_student_t mean_weibull'\n      + ' median median_deviation member mesh metricexpandall mgf1_sha1 min min_degree'\n      + ' min_edge_cut minfactorial minimalPoly minimize_lp minimum_spanning_tree minor'\n      + ' minpack_lsquares minpack_solve min_vertex_cover min_vertex_cut mkdir mnewton'\n      + ' mod mode_declare mode_identity ModeMatrix moebius mon2schur mono monomial_dimensions'\n      + ' multibernstein_poly multi_display_for_texinfo multi_elem multinomial multinomial_coeff'\n      + ' multi_orbit multiplot_mode multi_pui multsym multthru mycielski_graph nary'\n      + ' natural_unit nc_degree ncexpt ncharpoly negative_picture neighbors new newcontext'\n      + ' newdet new_graph newline newton new_variable next_prime nicedummies niceindices'\n      + ' ninth nofix nonarray noncentral_moment nonmetricity nonnegintegerp nonscalarp'\n      + ' nonzeroandfreeof notequal nounify nptetrad npv nroots nterms ntermst'\n      + ' nthroot nullity nullspace num numbered_boundaries numberp number_to_octets'\n      + ' num_distinct_partitions numerval numfactor num_partitions nusum nzeta nzetai'\n      + ' nzetar octets_to_number octets_to_oid odd_girth oddp ode2 ode_check odelin'\n      + ' oid_to_octets op opena opena_binary openr openr_binary openw openw_binary'\n      + ' operatorp opsubst optimize %or orbit orbits ordergreat ordergreatp orderless'\n      + ' orderlessp orthogonal_complement orthopoly_recur orthopoly_weight outermap'\n      + ' out_neighbors outofpois pade parabolic_cylinder_d parametric parametric_surface'\n      + ' parg parGosper parse_string parse_timedate part part2cont partfrac partition'\n      + ' partition_set partpol path_digraph path_graph pathname_directory pathname_name'\n      + ' pathname_type pdf_bernoulli pdf_beta pdf_binomial pdf_cauchy pdf_chi2 pdf_continuous_uniform'\n      + ' pdf_discrete_uniform pdf_exp pdf_f pdf_gamma pdf_general_finite_discrete'\n      + ' pdf_geometric pdf_gumbel pdf_hypergeometric pdf_laplace pdf_logistic pdf_lognormal'\n      + ' pdf_negative_binomial pdf_noncentral_chi2 pdf_noncentral_student_t pdf_normal'\n      + ' pdf_pareto pdf_poisson pdf_rank_sum pdf_rayleigh pdf_signed_rank pdf_student_t'\n      + ' pdf_weibull pearson_skewness permanent permut permutation permutations petersen_graph'\n      + ' petrov pickapart picture_equalp picturep piechart piechart_description planar_embedding'\n      + ' playback plog plot2d plot3d plotdf ploteq plsquares pochhammer points poisdiff'\n      + ' poisexpt poisint poismap poisplus poissimp poissubst poistimes poistrim polar'\n      + ' polarform polartorect polar_to_xy poly_add poly_buchberger poly_buchberger_criterion'\n      + ' poly_colon_ideal poly_content polydecomp poly_depends_p poly_elimination_ideal'\n      + ' poly_exact_divide poly_expand poly_expt poly_gcd polygon poly_grobner poly_grobner_equal'\n      + ' poly_grobner_member poly_grobner_subsetp poly_ideal_intersection poly_ideal_polysaturation'\n      + ' poly_ideal_polysaturation1 poly_ideal_saturation poly_ideal_saturation1 poly_lcm'\n      + ' poly_minimization polymod poly_multiply polynome2ele polynomialp poly_normal_form'\n      + ' poly_normalize poly_normalize_list poly_polysaturation_extension poly_primitive_part'\n      + ' poly_pseudo_divide poly_reduced_grobner poly_reduction poly_saturation_extension'\n      + ' poly_s_polynomial poly_subtract polytocompanion pop postfix potential power_mod'\n      + ' powerseries powerset prefix prev_prime primep primes principal_components'\n      + ' print printf printfile print_graph printpois printprops prodrac product properties'\n      + ' propvars psi psubst ptriangularize pui pui2comp pui2ele pui2polynome pui_direct'\n      + ' puireduc push put pv qput qrange qty quad_control quad_qag quad_qagi quad_qagp'\n      + ' quad_qags quad_qawc quad_qawf quad_qawo quad_qaws quadrilateral quantile'\n      + ' quantile_bernoulli quantile_beta quantile_binomial quantile_cauchy quantile_chi2'\n      + ' quantile_continuous_uniform quantile_discrete_uniform quantile_exp quantile_f'\n      + ' quantile_gamma quantile_general_finite_discrete quantile_geometric quantile_gumbel'\n      + ' quantile_hypergeometric quantile_laplace quantile_logistic quantile_lognormal'\n      + ' quantile_negative_binomial quantile_noncentral_chi2 quantile_noncentral_student_t'\n      + ' quantile_normal quantile_pareto quantile_poisson quantile_rayleigh quantile_student_t'\n      + ' quantile_weibull quartile_skewness quit qunit quotient racah_v racah_w radcan'\n      + ' radius random random_bernoulli random_beta random_binomial random_bipartite_graph'\n      + ' random_cauchy random_chi2 random_continuous_uniform random_digraph random_discrete_uniform'\n      + ' random_exp random_f random_gamma random_general_finite_discrete random_geometric'\n      + ' random_graph random_graph1 random_gumbel random_hypergeometric random_laplace'\n      + ' random_logistic random_lognormal random_negative_binomial random_network'\n      + ' random_noncentral_chi2 random_noncentral_student_t random_normal random_pareto'\n      + ' random_permutation random_poisson random_rayleigh random_regular_graph random_student_t'\n      + ' random_tournament random_tree random_weibull range rank rat ratcoef ratdenom'\n      + ' ratdiff ratdisrep ratexpand ratinterpol rational rationalize ratnumer ratnump'\n      + ' ratp ratsimp ratsubst ratvars ratweight read read_array read_binary_array'\n      + ' read_binary_list read_binary_matrix readbyte readchar read_hashed_array readline'\n      + ' read_list read_matrix read_nested_list readonly read_xpm real_imagpart_to_conjugate'\n      + ' realpart realroots rearray rectangle rectform rectform_log_if_constant recttopolar'\n      + ' rediff reduce_consts reduce_order region region_boundaries region_boundaries_plus'\n      + ' rem remainder remarray rembox remcomps remcon remcoord remfun remfunction'\n      + ' remlet remove remove_constvalue remove_dimensions remove_edge remove_fundamental_dimensions'\n      + ' remove_fundamental_units remove_plot_option remove_vertex rempart remrule'\n      + ' remsym remvalue rename rename_file reset reset_displays residue resolvante'\n      + ' resolvante_alternee1 resolvante_bipartite resolvante_diedrale resolvante_klein'\n      + ' resolvante_klein3 resolvante_produit_sym resolvante_unitaire resolvante_vierer'\n      + ' rest resultant return reveal reverse revert revert2 rgb2level rhs ricci riemann'\n      + ' rinvariant risch rk rmdir rncombine romberg room rootscontract round row'\n      + ' rowop rowswap rreduce run_testsuite %s save saving scalarp scaled_bessel_i'\n      + ' scaled_bessel_i0 scaled_bessel_i1 scalefactors scanmap scatterplot scatterplot_description'\n      + ' scene schur2comp sconcat scopy scsimp scurvature sdowncase sec sech second'\n      + ' sequal sequalignore set_alt_display setdifference set_draw_defaults set_edge_weight'\n      + ' setelmx setequalp setify setp set_partitions set_plot_option set_prompt set_random_state'\n      + ' set_tex_environment set_tex_environment_default setunits setup_autoload set_up_dot_simplifications'\n      + ' set_vertex_label seventh sexplode sf sha1sum sha256sum shortest_path shortest_weighted_path'\n      + ' show showcomps showratvars sierpinskiale sierpinskimap sign signum similaritytransform'\n      + ' simp_inequality simplify_sum simplode simpmetderiv simtran sin sinh sinsert'\n      + ' sinvertcase sixth skewness skewness_bernoulli skewness_beta skewness_binomial'\n      + ' skewness_chi2 skewness_continuous_uniform skewness_discrete_uniform skewness_exp'\n      + ' skewness_f skewness_gamma skewness_general_finite_discrete skewness_geometric'\n      + ' skewness_gumbel skewness_hypergeometric skewness_laplace skewness_logistic'\n      + ' skewness_lognormal skewness_negative_binomial skewness_noncentral_chi2 skewness_noncentral_student_t'\n      + ' skewness_normal skewness_pareto skewness_poisson skewness_rayleigh skewness_student_t'\n      + ' skewness_weibull slength smake small_rhombicosidodecahedron_graph small_rhombicuboctahedron_graph'\n      + ' smax smin smismatch snowmap snub_cube_graph snub_dodecahedron_graph solve'\n      + ' solve_rec solve_rec_rat some somrac sort sparse6_decode sparse6_encode sparse6_export'\n      + ' sparse6_import specint spherical spherical_bessel_j spherical_bessel_y spherical_hankel1'\n      + ' spherical_hankel2 spherical_harmonic spherical_to_xyz splice split sposition'\n      + ' sprint sqfr sqrt sqrtdenest sremove sremovefirst sreverse ssearch ssort sstatus'\n      + ' ssubst ssubstfirst staircase standardize standardize_inverse_trig starplot'\n      + ' starplot_description status std std1 std_bernoulli std_beta std_binomial'\n      + ' std_chi2 std_continuous_uniform std_discrete_uniform std_exp std_f std_gamma'\n      + ' std_general_finite_discrete std_geometric std_gumbel std_hypergeometric std_laplace'\n      + ' std_logistic std_lognormal std_negative_binomial std_noncentral_chi2 std_noncentral_student_t'\n      + ' std_normal std_pareto std_poisson std_rayleigh std_student_t std_weibull'\n      + ' stemplot stirling stirling1 stirling2 strim striml strimr string stringout'\n      + ' stringp strong_components struve_h struve_l sublis sublist sublist_indices'\n      + ' submatrix subsample subset subsetp subst substinpart subst_parallel substpart'\n      + ' substring subvar subvarp sum sumcontract summand_to_rec supcase supcontext'\n      + ' symbolp symmdifference symmetricp system take_channel take_inference tan'\n      + ' tanh taylor taylorinfo taylorp taylor_simplifier taytorat tcl_output tcontract'\n      + ' tellrat tellsimp tellsimpafter tentex tenth test_mean test_means_difference'\n      + ' test_normality test_proportion test_proportions_difference test_rank_sum'\n      + ' test_sign test_signed_rank test_variance test_variance_ratio tex tex1 tex_display'\n      + ' texput %th third throw time timedate timer timer_info tldefint tlimit todd_coxeter'\n      + ' toeplitz tokens to_lisp topological_sort to_poly to_poly_solve totaldisrep'\n      + ' totalfourier totient tpartpol trace tracematrix trace_options transform_sample'\n      + ' translate translate_file transpose treefale tree_reduce treillis treinat'\n      + ' triangle triangularize trigexpand trigrat trigreduce trigsimp trunc truncate'\n      + ' truncated_cube_graph truncated_dodecahedron_graph truncated_icosahedron_graph'\n      + ' truncated_tetrahedron_graph tr_warnings_get tube tutte_graph ueivects uforget'\n      + ' ultraspherical underlying_graph undiff union unique uniteigenvectors unitp'\n      + ' units unit_step unitvector unorder unsum untellrat untimer'\n      + ' untrace uppercasep uricci uriemann uvect vandermonde_matrix var var1 var_bernoulli'\n      + ' var_beta var_binomial var_chi2 var_continuous_uniform var_discrete_uniform'\n      + ' var_exp var_f var_gamma var_general_finite_discrete var_geometric var_gumbel'\n      + ' var_hypergeometric var_laplace var_logistic var_lognormal var_negative_binomial'\n      + ' var_noncentral_chi2 var_noncentral_student_t var_normal var_pareto var_poisson'\n      + ' var_rayleigh var_student_t var_weibull vector vectorpotential vectorsimp'\n      + ' verbify vers vertex_coloring vertex_connectivity vertex_degree vertex_distance'\n      + ' vertex_eccentricity vertex_in_degree vertex_out_degree vertices vertices_to_cycle'\n      + ' vertices_to_path %w weyl wheel_graph wiener_index wigner_3j wigner_6j'\n      + ' wigner_9j with_stdout write_binary_data writebyte write_data writefile wronskian'\n      + ' xreduce xthru %y Zeilberger zeroequiv zerofor zeromatrix zeromatrixp zeta'\n      + ' zgeev zheev zlange zn_add_table zn_carmichael_lambda zn_characteristic_factors'\n      + ' zn_determinant zn_factor_generators zn_invert_by_lu zn_log zn_mult_table'\n      + ' absboxchar activecontexts adapt_depth additive adim aform algebraic'\n      + ' algepsilon algexact aliases allbut all_dotsimp_denoms allocation allsym alphabetic'\n      + ' animation antisymmetric arrays askexp assume_pos assume_pos_pred assumescalar'\n      + ' asymbol atomgrad atrig1 axes axis_3d axis_bottom axis_left axis_right axis_top'\n      + ' azimuth background background_color backsubst berlefact bernstein_explicit'\n      + ' besselexpand beta_args_sum_to_integer beta_expand bftorat bftrunc bindtest'\n      + ' border boundaries_array box boxchar breakup %c capping cauchysum cbrange'\n      + ' cbtics center cflength cframe_flag cnonmet_flag color color_bar color_bar_tics'\n      + ' colorbox columns commutative complex cone context contexts contour contour_levels'\n      + ' cosnpiflag ctaypov ctaypt ctayswitch ctayvar ct_coords ctorsion_flag ctrgsimp'\n      + ' cube current_let_rule_package cylinder data_file_name debugmode decreasing'\n      + ' default_let_rule_package delay dependencies derivabbrev derivsubst detout'\n      + ' diagmetric diff dim dimensions dispflag display2d|10 display_format_internal'\n      + ' distribute_over doallmxops domain domxexpt domxmxops domxnctimes dontfactor'\n      + ' doscmxops doscmxplus dot0nscsimp dot0simp dot1simp dotassoc dotconstrules'\n      + ' dotdistrib dotexptsimp dotident dotscrules draw_graph_program draw_realpart'\n      + ' edge_color edge_coloring edge_partition edge_type edge_width %edispflag'\n      + ' elevation %emode endphi endtheta engineering_format_floats enhanced3d %enumer'\n      + ' epsilon_lp erfflag erf_representation errormsg error_size error_syms error_type'\n      + ' %e_to_numlog eval even evenfun evflag evfun ev_point expandwrt_denom expintexpand'\n      + ' expintrep expon expop exptdispflag exptisolate exptsubst facexpand facsum_combine'\n      + ' factlim factorflag factorial_expand factors_only fb feature features'\n      + ' file_name file_output_append file_search_demo file_search_lisp file_search_maxima|10'\n      + ' file_search_tests file_search_usage file_type_lisp file_type_maxima|10 fill_color'\n      + ' fill_density filled_func fixed_vertices flipflag float2bf font font_size'\n      + ' fortindent fortspaces fpprec fpprintprec functions gamma_expand gammalim'\n      + ' gdet genindex gensumnum GGFCFMAX GGFINFINITY globalsolve gnuplot_command'\n      + ' gnuplot_curve_styles gnuplot_curve_titles gnuplot_default_term_command gnuplot_dumb_term_command'\n      + ' gnuplot_file_args gnuplot_file_name gnuplot_out_file gnuplot_pdf_term_command'\n      + ' gnuplot_pm3d gnuplot_png_term_command gnuplot_postamble gnuplot_preamble'\n      + ' gnuplot_ps_term_command gnuplot_svg_term_command gnuplot_term gnuplot_view_args'\n      + ' Gosper_in_Zeilberger gradefs grid grid2d grind halfangles head_angle head_both'\n      + ' head_length head_type height hypergeometric_representation %iargs ibase'\n      + ' icc1 icc2 icounter idummyx ieqnprint ifb ifc1 ifc2 ifg ifgi ifr iframe_bracket_form'\n      + ' ifri igeowedge_flag ikt1 ikt2 imaginary inchar increasing infeval'\n      + ' infinity inflag infolists inm inmc1 inmc2 intanalysis integer integervalued'\n      + ' integrate_use_rootsof integration_constant integration_constant_counter interpolate_color'\n      + ' intfaclim ip_grid ip_grid_in irrational isolate_wrt_times iterations itr'\n      + ' julia_parameter %k1 %k2 keepfloat key key_pos kinvariant kt label label_alignment'\n      + ' label_orientation labels lassociative lbfgs_ncorrections lbfgs_nfeval_max'\n      + ' leftjust legend letrat let_rule_packages lfg lg lhospitallim limsubst linear'\n      + ' linear_solver linechar linel|10 linenum line_type linewidth line_width linsolve_params'\n      + ' linsolvewarn lispdisp listarith listconstvars listdummyvars lmxchar load_pathname'\n      + ' loadprint logabs logarc logcb logconcoeffp logexpand lognegint logsimp logx'\n      + ' logx_secondary logy logy_secondary logz lriem m1pbranch macroexpansion macros'\n      + ' mainvar manual_demo maperror mapprint matrix_element_add matrix_element_mult'\n      + ' matrix_element_transpose maxapplydepth maxapplyheight maxima_tempdir|10 maxima_userdir|10'\n      + ' maxnegex MAX_ORD maxposex maxpsifracdenom maxpsifracnum maxpsinegint maxpsiposint'\n      + ' maxtayorder mesh_lines_color method mod_big_prime mode_check_errorp'\n      + ' mode_checkp mode_check_warnp mod_test mod_threshold modular_linear_solver'\n      + ' modulus multiplicative multiplicities myoptions nary negdistrib negsumdispflag'\n      + ' newline newtonepsilon newtonmaxiter nextlayerfactor niceindicespref nm nmc'\n      + ' noeval nolabels nonegative_lp noninteger nonscalar noun noundisp nouns np'\n      + ' npi nticks ntrig numer numer_pbranch obase odd oddfun opacity opproperties'\n      + ' opsubst optimprefix optionset orientation origin orthopoly_returns_intervals'\n      + ' outative outchar packagefile palette partswitch pdf_file pfeformat phiresolution'\n      + ' %piargs piece pivot_count_sx pivot_max_sx plot_format plot_options plot_realpart'\n      + ' png_file pochhammer_max_index points pointsize point_size points_joined point_type'\n      + ' poislim poisson poly_coefficient_ring poly_elimination_order polyfactor poly_grobner_algorithm'\n      + ' poly_grobner_debug poly_monomial_order poly_primary_elimination_order poly_return_term_list'\n      + ' poly_secondary_elimination_order poly_top_reduction_only posfun position'\n      + ' powerdisp pred prederror primep_number_of_tests product_use_gamma program'\n      + ' programmode promote_float_to_bigfloat prompt proportional_axes props psexpand'\n      + ' ps_file radexpand radius radsubstflag rassociative ratalgdenom ratchristof'\n      + ' ratdenomdivide rateinstein ratepsilon ratfac rational ratmx ratprint ratriemann'\n      + ' ratsimpexpons ratvarswitch ratweights ratweyl ratwtlvl real realonly redraw'\n      + ' refcheck resolution restart resultant ric riem rmxchar %rnum_list rombergabs'\n      + ' rombergit rombergmin rombergtol rootsconmode rootsepsilon run_viewer same_xy'\n      + ' same_xyz savedef savefactors scalar scalarmatrixp scale scale_lp setcheck'\n      + ' setcheckbreak setval show_edge_color show_edges show_edge_type show_edge_width'\n      + ' show_id show_label showtime show_vertex_color show_vertex_size show_vertex_type'\n      + ' show_vertices show_weight simp simplified_output simplify_products simpproduct'\n      + ' simpsum sinnpiflag solvedecomposes solveexplicit solvefactors solvenullwarn'\n      + ' solveradcan solvetrigwarn space sparse sphere spring_embedding_depth sqrtdispflag'\n      + ' stardisp startphi starttheta stats_numer stringdisp structures style sublis_apply_lambda'\n      + ' subnumsimp sumexpand sumsplitfact surface surface_hide svg_file symmetric'\n      + ' tab taylordepth taylor_logexpand taylor_order_coefficients taylor_truncate_polynomials'\n      + ' tensorkill terminal testsuite_files thetaresolution timer_devalue title tlimswitch'\n      + ' tr track transcompile transform transform_xy translate_fast_arrays transparent'\n      + ' transrun tr_array_as_ref tr_bound_function_applyp tr_file_tty_messagesp tr_float_can_branch_complex'\n      + ' tr_function_call_default trigexpandplus trigexpandtimes triginverses trigsign'\n      + ' trivial_solutions tr_numer tr_optimize_max_loop tr_semicompile tr_state_vars'\n      + ' tr_warn_bad_function_calls tr_warn_fexpr tr_warn_meval tr_warn_mode'\n      + ' tr_warn_undeclared tr_warn_undefined_variable tstep ttyoff tube_extremes'\n      + ' ufg ug %unitexpand unit_vectors uric uriem use_fast_arrays user_preamble'\n      + ' usersetunits values vect_cross verbose vertex_color vertex_coloring vertex_partition'\n      + ' vertex_size vertex_type view warnings weyl width windowname windowtitle wired_surface'\n      + ' wireframe xaxis xaxis_color xaxis_secondary xaxis_type xaxis_width xlabel'\n      + ' xlabel_secondary xlength xrange xrange_secondary xtics xtics_axis xtics_rotate'\n      + ' xtics_rotate_secondary xtics_secondary xtics_secondary_axis xu_grid x_voxel'\n      + ' xy_file xyplane xy_scale yaxis yaxis_color yaxis_secondary yaxis_type yaxis_width'\n      + ' ylabel ylabel_secondary ylength yrange yrange_secondary ytics ytics_axis'\n      + ' ytics_rotate ytics_rotate_secondary ytics_secondary ytics_secondary_axis'\n      + ' yv_grid y_voxel yx_ratio zaxis zaxis_color zaxis_type zaxis_width zeroa zerob'\n      + ' zerobern zeta%pi zlabel zlabel_rotate zlength zmin zn_primroot_limit zn_primroot_pretest';\n  var SYMBOLS = '_ __ %|0 %%|0';\n\n  return {\n    lexemes: '[A-Za-z_%][0-9A-Za-z_%]*',\n    keywords: {\n      keyword: KEYWORDS,\n      literal: LITERALS,\n      built_in: BUILTIN_FUNCTIONS,\n      symbol: SYMBOLS,\n    },\n    contains: [\n      {\n        className: 'comment',\n        begin: '/\\\\*',\n        end: '\\\\*/',\n        contains: ['self']\n      },\n      hljs.QUOTE_STRING_MODE,\n      {\n        className: 'number',\n        relevance: 0,\n        variants: [\n          {\n            // float number w/ exponent\n            // hmm, I wonder if we ought to include other exponent markers?\n            begin: '\\\\b(\\\\d+|\\\\d+\\\\.|\\\\.\\\\d+|\\\\d+\\\\.\\\\d+)[Ee][-+]?\\\\d+\\\\b',\n          },\n          {\n            // bigfloat number\n            begin: '\\\\b(\\\\d+|\\\\d+\\\\.|\\\\.\\\\d+|\\\\d+\\\\.\\\\d+)[Bb][-+]?\\\\d+\\\\b',\n            relevance: 10\n          },\n          {\n            // float number w/out exponent\n            // Doesn't seem to recognize floats which start with '.'\n            begin: '\\\\b(\\\\.\\\\d+|\\\\d+\\\\.\\\\d+)\\\\b',\n          },\n          {\n            // integer in base up to 36\n            // Doesn't seem to recognize integers which end with '.'\n            begin: '\\\\b(\\\\d+|0[0-9A-Za-z]+)\\\\.?\\\\b',\n          }\n        ]\n      }\n    ],\n    illegal: /@/\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/maxima.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/mel.js":
/*!********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/mel.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  return {\n    keywords:\n      'int float string vector matrix if else switch case default while do for in break ' +\n      'continue global proc return about abs addAttr addAttributeEditorNodeHelp addDynamic ' +\n      'addNewShelfTab addPP addPanelCategory addPrefixToName advanceToNextDrivenKey ' +\n      'affectedNet affects aimConstraint air alias aliasAttr align alignCtx alignCurve ' +\n      'alignSurface allViewFit ambientLight angle angleBetween animCone animCurveEditor ' +\n      'animDisplay animView annotate appendStringArray applicationName applyAttrPreset ' +\n      'applyTake arcLenDimContext arcLengthDimension arclen arrayMapper art3dPaintCtx ' +\n      'artAttrCtx artAttrPaintVertexCtx artAttrSkinPaintCtx artAttrTool artBuildPaintMenu ' +\n      'artFluidAttrCtx artPuttyCtx artSelectCtx artSetPaintCtx artUserPaintCtx assignCommand ' +\n      'assignInputDevice assignViewportFactories attachCurve attachDeviceAttr attachSurface ' +\n      'attrColorSliderGrp attrCompatibility attrControlGrp attrEnumOptionMenu ' +\n      'attrEnumOptionMenuGrp attrFieldGrp attrFieldSliderGrp attrNavigationControlGrp ' +\n      'attrPresetEditWin attributeExists attributeInfo attributeMenu attributeQuery ' +\n      'autoKeyframe autoPlace bakeClip bakeFluidShading bakePartialHistory bakeResults ' +\n      'bakeSimulation basename basenameEx batchRender bessel bevel bevelPlus binMembership ' +\n      'bindSkin blend2 blendShape blendShapeEditor blendShapePanel blendTwoAttr blindDataType ' +\n      'boneLattice boundary boxDollyCtx boxZoomCtx bufferCurve buildBookmarkMenu ' +\n      'buildKeyframeMenu button buttonManip CBG cacheFile cacheFileCombine cacheFileMerge ' +\n      'cacheFileTrack camera cameraView canCreateManip canvas capitalizeString catch ' +\n      'catchQuiet ceil changeSubdivComponentDisplayLevel changeSubdivRegion channelBox ' +\n      'character characterMap characterOutlineEditor characterize chdir checkBox checkBoxGrp ' +\n      'checkDefaultRenderGlobals choice circle circularFillet clamp clear clearCache clip ' +\n      'clipEditor clipEditorCurrentTimeCtx clipSchedule clipSchedulerOutliner clipTrimBefore ' +\n      'closeCurve closeSurface cluster cmdFileOutput cmdScrollFieldExecuter ' +\n      'cmdScrollFieldReporter cmdShell coarsenSubdivSelectionList collision color ' +\n      'colorAtPoint colorEditor colorIndex colorIndexSliderGrp colorSliderButtonGrp ' +\n      'colorSliderGrp columnLayout commandEcho commandLine commandPort compactHairSystem ' +\n      'componentEditor compositingInterop computePolysetVolume condition cone confirmDialog ' +\n      'connectAttr connectControl connectDynamic connectJoint connectionInfo constrain ' +\n      'constrainValue constructionHistory container containsMultibyte contextInfo control ' +\n      'convertFromOldLayers convertIffToPsd convertLightmap convertSolidTx convertTessellation ' +\n      'convertUnit copyArray copyFlexor copyKey copySkinWeights cos cpButton cpCache ' +\n      'cpClothSet cpCollision cpConstraint cpConvClothToMesh cpForces cpGetSolverAttr cpPanel ' +\n      'cpProperty cpRigidCollisionFilter cpSeam cpSetEdit cpSetSolverAttr cpSolver ' +\n      'cpSolverTypes cpTool cpUpdateClothUVs createDisplayLayer createDrawCtx createEditor ' +\n      'createLayeredPsdFile createMotionField createNewShelf createNode createRenderLayer ' +\n      'createSubdivRegion cross crossProduct ctxAbort ctxCompletion ctxEditMode ctxTraverse ' +\n      'currentCtx currentTime currentTimeCtx currentUnit curve curveAddPtCtx ' +\n      'curveCVCtx curveEPCtx curveEditorCtx curveIntersect curveMoveEPCtx curveOnSurface ' +\n      'curveSketchCtx cutKey cycleCheck cylinder dagPose date defaultLightListCheckBox ' +\n      'defaultNavigation defineDataServer defineVirtualDevice deformer deg_to_rad delete ' +\n      'deleteAttr deleteShadingGroupsAndMaterials deleteShelfTab deleteUI deleteUnusedBrushes ' +\n      'delrandstr detachCurve detachDeviceAttr detachSurface deviceEditor devicePanel dgInfo ' +\n      'dgdirty dgeval dgtimer dimWhen directKeyCtx directionalLight dirmap dirname disable ' +\n      'disconnectAttr disconnectJoint diskCache displacementToPoly displayAffected ' +\n      'displayColor displayCull displayLevelOfDetail displayPref displayRGBColor ' +\n      'displaySmoothness displayStats displayString displaySurface distanceDimContext ' +\n      'distanceDimension doBlur dolly dollyCtx dopeSheetEditor dot dotProduct ' +\n      'doubleProfileBirailSurface drag dragAttrContext draggerContext dropoffLocator ' +\n      'duplicate duplicateCurve duplicateSurface dynCache dynControl dynExport dynExpression ' +\n      'dynGlobals dynPaintEditor dynParticleCtx dynPref dynRelEdPanel dynRelEditor ' +\n      'dynamicLoad editAttrLimits editDisplayLayerGlobals editDisplayLayerMembers ' +\n      'editRenderLayerAdjustment editRenderLayerGlobals editRenderLayerMembers editor ' +\n      'editorTemplate effector emit emitter enableDevice encodeString endString endsWith env ' +\n      'equivalent equivalentTol erf error eval evalDeferred evalEcho event ' +\n      'exactWorldBoundingBox exclusiveLightCheckBox exec executeForEachObject exists exp ' +\n      'expression expressionEditorListen extendCurve extendSurface extrude fcheck fclose feof ' +\n      'fflush fgetline fgetword file fileBrowserDialog fileDialog fileExtension fileInfo ' +\n      'filetest filletCurve filter filterCurve filterExpand filterStudioImport ' +\n      'findAllIntersections findAnimCurves findKeyframe findMenuItem findRelatedSkinCluster ' +\n      'finder firstParentOf fitBspline flexor floatEq floatField floatFieldGrp floatScrollBar ' +\n      'floatSlider floatSlider2 floatSliderButtonGrp floatSliderGrp floor flow fluidCacheInfo ' +\n      'fluidEmitter fluidVoxelInfo flushUndo fmod fontDialog fopen formLayout format fprint ' +\n      'frameLayout fread freeFormFillet frewind fromNativePath fwrite gamma gauss ' +\n      'geometryConstraint getApplicationVersionAsFloat getAttr getClassification ' +\n      'getDefaultBrush getFileList getFluidAttr getInputDeviceRange getMayaPanelTypes ' +\n      'getModifiers getPanel getParticleAttr getPluginResource getenv getpid glRender ' +\n      'glRenderEditor globalStitch gmatch goal gotoBindPose grabColor gradientControl ' +\n      'gradientControlNoAttr graphDollyCtx graphSelectContext graphTrackCtx gravity grid ' +\n      'gridLayout group groupObjectsByName HfAddAttractorToAS HfAssignAS HfBuildEqualMap ' +\n      'HfBuildFurFiles HfBuildFurImages HfCancelAFR HfConnectASToHF HfCreateAttractor ' +\n      'HfDeleteAS HfEditAS HfPerformCreateAS HfRemoveAttractorFromAS HfSelectAttached ' +\n      'HfSelectAttractors HfUnAssignAS hardenPointCurve hardware hardwareRenderPanel ' +\n      'headsUpDisplay headsUpMessage help helpLine hermite hide hilite hitTest hotBox hotkey ' +\n      'hotkeyCheck hsv_to_rgb hudButton hudSlider hudSliderButton hwReflectionMap hwRender ' +\n      'hwRenderLoad hyperGraph hyperPanel hyperShade hypot iconTextButton iconTextCheckBox ' +\n      'iconTextRadioButton iconTextRadioCollection iconTextScrollList iconTextStaticLabel ' +\n      'ikHandle ikHandleCtx ikHandleDisplayScale ikSolver ikSplineHandleCtx ikSystem ' +\n      'ikSystemInfo ikfkDisplayMethod illustratorCurves image imfPlugins inheritTransform ' +\n      'insertJoint insertJointCtx insertKeyCtx insertKnotCurve insertKnotSurface instance ' +\n      'instanceable instancer intField intFieldGrp intScrollBar intSlider intSliderGrp ' +\n      'interToUI internalVar intersect iprEngine isAnimCurve isConnected isDirty isParentOf ' +\n      'isSameObject isTrue isValidObjectName isValidString isValidUiName isolateSelect ' +\n      'itemFilter itemFilterAttr itemFilterRender itemFilterType joint jointCluster jointCtx ' +\n      'jointDisplayScale jointLattice keyTangent keyframe keyframeOutliner ' +\n      'keyframeRegionCurrentTimeCtx keyframeRegionDirectKeyCtx keyframeRegionDollyCtx ' +\n      'keyframeRegionInsertKeyCtx keyframeRegionMoveKeyCtx keyframeRegionScaleKeyCtx ' +\n      'keyframeRegionSelectKeyCtx keyframeRegionSetKeyCtx keyframeRegionTrackCtx ' +\n      'keyframeStats lassoContext lattice latticeDeformKeyCtx launch launchImageEditor ' +\n      'layerButton layeredShaderPort layeredTexturePort layout layoutDialog lightList ' +\n      'lightListEditor lightListPanel lightlink lineIntersection linearPrecision linstep ' +\n      'listAnimatable listAttr listCameras listConnections listDeviceAttachments listHistory ' +\n      'listInputDeviceAxes listInputDeviceButtons listInputDevices listMenuAnnotation ' +\n      'listNodeTypes listPanelCategories listRelatives listSets listTransforms ' +\n      'listUnselected listerEditor loadFluid loadNewShelf loadPlugin ' +\n      'loadPluginLanguageResources loadPrefObjects localizedPanelLabel lockNode loft log ' +\n      'longNameOf lookThru ls lsThroughFilter lsType lsUI Mayatomr mag makeIdentity makeLive ' +\n      'makePaintable makeRoll makeSingleSurface makeTubeOn makebot manipMoveContext ' +\n      'manipMoveLimitsCtx manipOptions manipRotateContext manipRotateLimitsCtx ' +\n      'manipScaleContext manipScaleLimitsCtx marker match max memory menu menuBarLayout ' +\n      'menuEditor menuItem menuItemToShelf menuSet menuSetPref messageLine min minimizeApp ' +\n      'mirrorJoint modelCurrentTimeCtx modelEditor modelPanel mouse movIn movOut move ' +\n      'moveIKtoFK moveKeyCtx moveVertexAlongDirection multiProfileBirailSurface mute ' +\n      'nParticle nameCommand nameField namespace namespaceInfo newPanelItems newton nodeCast ' +\n      'nodeIconButton nodeOutliner nodePreset nodeType noise nonLinear normalConstraint ' +\n      'normalize nurbsBoolean nurbsCopyUVSet nurbsCube nurbsEditUV nurbsPlane nurbsSelect ' +\n      'nurbsSquare nurbsToPoly nurbsToPolygonsPref nurbsToSubdiv nurbsToSubdivPref ' +\n      'nurbsUVSet nurbsViewDirectionVector objExists objectCenter objectLayer objectType ' +\n      'objectTypeUI obsoleteProc oceanNurbsPreviewPlane offsetCurve offsetCurveOnSurface ' +\n      'offsetSurface openGLExtension openMayaPref optionMenu optionMenuGrp optionVar orbit ' +\n      'orbitCtx orientConstraint outlinerEditor outlinerPanel overrideModifier ' +\n      'paintEffectsDisplay pairBlend palettePort paneLayout panel panelConfiguration ' +\n      'panelHistory paramDimContext paramDimension paramLocator parent parentConstraint ' +\n      'particle particleExists particleInstancer particleRenderInfo partition pasteKey ' +\n      'pathAnimation pause pclose percent performanceOptions pfxstrokes pickWalk picture ' +\n      'pixelMove planarSrf plane play playbackOptions playblast plugAttr plugNode pluginInfo ' +\n      'pluginResourceUtil pointConstraint pointCurveConstraint pointLight pointMatrixMult ' +\n      'pointOnCurve pointOnSurface pointPosition poleVectorConstraint polyAppend ' +\n      'polyAppendFacetCtx polyAppendVertex polyAutoProjection polyAverageNormal ' +\n      'polyAverageVertex polyBevel polyBlendColor polyBlindData polyBoolOp polyBridgeEdge ' +\n      'polyCacheMonitor polyCheck polyChipOff polyClipboard polyCloseBorder polyCollapseEdge ' +\n      'polyCollapseFacet polyColorBlindData polyColorDel polyColorPerVertex polyColorSet ' +\n      'polyCompare polyCone polyCopyUV polyCrease polyCreaseCtx polyCreateFacet ' +\n      'polyCreateFacetCtx polyCube polyCut polyCutCtx polyCylinder polyCylindricalProjection ' +\n      'polyDelEdge polyDelFacet polyDelVertex polyDuplicateAndConnect polyDuplicateEdge ' +\n      'polyEditUV polyEditUVShell polyEvaluate polyExtrudeEdge polyExtrudeFacet ' +\n      'polyExtrudeVertex polyFlipEdge polyFlipUV polyForceUV polyGeoSampler polyHelix ' +\n      'polyInfo polyInstallAction polyLayoutUV polyListComponentConversion polyMapCut ' +\n      'polyMapDel polyMapSew polyMapSewMove polyMergeEdge polyMergeEdgeCtx polyMergeFacet ' +\n      'polyMergeFacetCtx polyMergeUV polyMergeVertex polyMirrorFace polyMoveEdge ' +\n      'polyMoveFacet polyMoveFacetUV polyMoveUV polyMoveVertex polyNormal polyNormalPerVertex ' +\n      'polyNormalizeUV polyOptUvs polyOptions polyOutput polyPipe polyPlanarProjection ' +\n      'polyPlane polyPlatonicSolid polyPoke polyPrimitive polyPrism polyProjection ' +\n      'polyPyramid polyQuad polyQueryBlindData polyReduce polySelect polySelectConstraint ' +\n      'polySelectConstraintMonitor polySelectCtx polySelectEditCtx polySeparate ' +\n      'polySetToFaceNormal polySewEdge polyShortestPathCtx polySmooth polySoftEdge ' +\n      'polySphere polySphericalProjection polySplit polySplitCtx polySplitEdge polySplitRing ' +\n      'polySplitVertex polyStraightenUVBorder polySubdivideEdge polySubdivideFacet ' +\n      'polyToSubdiv polyTorus polyTransfer polyTriangulate polyUVSet polyUnite polyWedgeFace ' +\n      'popen popupMenu pose pow preloadRefEd print progressBar progressWindow projFileViewer ' +\n      'projectCurve projectTangent projectionContext projectionManip promptDialog propModCtx ' +\n      'propMove psdChannelOutliner psdEditTextureFile psdExport psdTextureFile putenv pwd ' +\n      'python querySubdiv quit rad_to_deg radial radioButton radioButtonGrp radioCollection ' +\n      'radioMenuItemCollection rampColorPort rand randomizeFollicles randstate rangeControl ' +\n      'readTake rebuildCurve rebuildSurface recordAttr recordDevice redo reference ' +\n      'referenceEdit referenceQuery refineSubdivSelectionList refresh refreshAE ' +\n      'registerPluginResource rehash reloadImage removeJoint removeMultiInstance ' +\n      'removePanelCategory rename renameAttr renameSelectionList renameUI render ' +\n      'renderGlobalsNode renderInfo renderLayerButton renderLayerParent ' +\n      'renderLayerPostProcess renderLayerUnparent renderManip renderPartition ' +\n      'renderQualityNode renderSettings renderThumbnailUpdate renderWindowEditor ' +\n      'renderWindowSelectContext renderer reorder reorderDeformers requires reroot ' +\n      'resampleFluid resetAE resetPfxToPolyCamera resetTool resolutionNode retarget ' +\n      'reverseCurve reverseSurface revolve rgb_to_hsv rigidBody rigidSolver roll rollCtx ' +\n      'rootOf rot rotate rotationInterpolation roundConstantRadius rowColumnLayout rowLayout ' +\n      'runTimeCommand runup sampleImage saveAllShelves saveAttrPreset saveFluid saveImage ' +\n      'saveInitialState saveMenu savePrefObjects savePrefs saveShelf saveToolSettings scale ' +\n      'scaleBrushBrightness scaleComponents scaleConstraint scaleKey scaleKeyCtx sceneEditor ' +\n      'sceneUIReplacement scmh scriptCtx scriptEditorInfo scriptJob scriptNode scriptTable ' +\n      'scriptToShelf scriptedPanel scriptedPanelType scrollField scrollLayout sculpt ' +\n      'searchPathArray seed selLoadSettings select selectContext selectCurveCV selectKey ' +\n      'selectKeyCtx selectKeyframeRegionCtx selectMode selectPref selectPriority selectType ' +\n      'selectedNodes selectionConnection separator setAttr setAttrEnumResource ' +\n      'setAttrMapping setAttrNiceNameResource setConstraintRestPosition ' +\n      'setDefaultShadingGroup setDrivenKeyframe setDynamic setEditCtx setEditor setFluidAttr ' +\n      'setFocus setInfinity setInputDeviceMapping setKeyCtx setKeyPath setKeyframe ' +\n      'setKeyframeBlendshapeTargetWts setMenuMode setNodeNiceNameResource setNodeTypeFlag ' +\n      'setParent setParticleAttr setPfxToPolyCamera setPluginResource setProject ' +\n      'setStampDensity setStartupMessage setState setToolTo setUITemplate setXformManip sets ' +\n      'shadingConnection shadingGeometryRelCtx shadingLightRelCtx shadingNetworkCompare ' +\n      'shadingNode shapeCompare shelfButton shelfLayout shelfTabLayout shellField ' +\n      'shortNameOf showHelp showHidden showManipCtx showSelectionInTitle ' +\n      'showShadingGroupAttrEditor showWindow sign simplify sin singleProfileBirailSurface ' +\n      'size sizeBytes skinCluster skinPercent smoothCurve smoothTangentSurface smoothstep ' +\n      'snap2to2 snapKey snapMode snapTogetherCtx snapshot soft softMod softModCtx sort sound ' +\n      'soundControl source spaceLocator sphere sphrand spotLight spotLightPreviewPort ' +\n      'spreadSheetEditor spring sqrt squareSurface srtContext stackTrace startString ' +\n      'startsWith stitchAndExplodeShell stitchSurface stitchSurfacePoints strcmp ' +\n      'stringArrayCatenate stringArrayContains stringArrayCount stringArrayInsertAtIndex ' +\n      'stringArrayIntersector stringArrayRemove stringArrayRemoveAtIndex ' +\n      'stringArrayRemoveDuplicates stringArrayRemoveExact stringArrayToString ' +\n      'stringToStringArray strip stripPrefixFromName stroke subdAutoProjection ' +\n      'subdCleanTopology subdCollapse subdDuplicateAndConnect subdEditUV ' +\n      'subdListComponentConversion subdMapCut subdMapSewMove subdMatchTopology subdMirror ' +\n      'subdToBlind subdToPoly subdTransferUVsToCache subdiv subdivCrease ' +\n      'subdivDisplaySmoothness substitute substituteAllString substituteGeometry substring ' +\n      'surface surfaceSampler surfaceShaderList swatchDisplayPort switchTable symbolButton ' +\n      'symbolCheckBox sysFile system tabLayout tan tangentConstraint texLatticeDeformContext ' +\n      'texManipContext texMoveContext texMoveUVShellContext texRotateContext texScaleContext ' +\n      'texSelectContext texSelectShortestPathCtx texSmudgeUVContext texWinToolCtx text ' +\n      'textCurves textField textFieldButtonGrp textFieldGrp textManip textScrollList ' +\n      'textToShelf textureDisplacePlane textureHairColor texturePlacementContext ' +\n      'textureWindow threadCount threePointArcCtx timeControl timePort timerX toNativePath ' +\n      'toggle toggleAxis toggleWindowVisibility tokenize tokenizeList tolerance tolower ' +\n      'toolButton toolCollection toolDropped toolHasOptions toolPropertyWindow torus toupper ' +\n      'trace track trackCtx transferAttributes transformCompare transformLimits translator ' +\n      'trim trunc truncateFluidCache truncateHairCache tumble tumbleCtx turbulence ' +\n      'twoPointArcCtx uiRes uiTemplate unassignInputDevice undo undoInfo ungroup uniform unit ' +\n      'unloadPlugin untangleUV untitledFileName untrim upAxis updateAE userCtx uvLink ' +\n      'uvSnapshot validateShelfName vectorize view2dToolCtx viewCamera viewClipPlane ' +\n      'viewFit viewHeadOn viewLookAt viewManip viewPlace viewSet visor volumeAxis vortex ' +\n      'waitCursor warning webBrowser webBrowserPrefs whatIs window windowPref wire ' +\n      'wireContext workspace wrinkle wrinkleContext writeTake xbmLangPathList xform',\n    illegal: '</',\n    contains: [\n      hljs.C_NUMBER_MODE,\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      {\n        className: 'string',\n        begin: '`', end: '`',\n        contains: [hljs.BACKSLASH_ESCAPE]\n      },\n      { // eats variables\n        begin: '[\\\\$\\\\%\\\\@](\\\\^\\\\w\\\\b|#\\\\w+|[^\\\\s\\\\w{]|{\\\\w+}|\\\\w+)'\n      },\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/mel.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/mercury.js":
/*!************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/mercury.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var KEYWORDS = {\n    keyword:\n      'module use_module import_module include_module end_module initialise ' +\n      'mutable initialize finalize finalise interface implementation pred ' +\n      'mode func type inst solver any_pred any_func is semidet det nondet ' +\n      'multi erroneous failure cc_nondet cc_multi typeclass instance where ' +\n      'pragma promise external trace atomic or_else require_complete_switch ' +\n      'require_det require_semidet require_multi require_nondet ' +\n      'require_cc_multi require_cc_nondet require_erroneous require_failure',\n    meta:\n      // pragma\n      'inline no_inline type_spec source_file fact_table obsolete memo ' +\n      'loop_check minimal_model terminates does_not_terminate ' +\n      'check_termination promise_equivalent_clauses ' +\n      // preprocessor\n      'foreign_proc foreign_decl foreign_code foreign_type ' +\n      'foreign_import_module foreign_export_enum foreign_export ' +\n      'foreign_enum may_call_mercury will_not_call_mercury thread_safe ' +\n      'not_thread_safe maybe_thread_safe promise_pure promise_semipure ' +\n      'tabled_for_io local untrailed trailed attach_to_io_state ' +\n      'can_pass_as_mercury_type stable will_not_throw_exception ' +\n      'may_modify_trail will_not_modify_trail may_duplicate ' +\n      'may_not_duplicate affects_liveness does_not_affect_liveness ' +\n      'doesnt_affect_liveness no_sharing unknown_sharing sharing',\n    built_in:\n      'some all not if then else true fail false try catch catch_any ' +\n      'semidet_true semidet_false semidet_fail impure_true impure semipure'\n  };\n\n  var COMMENT = hljs.COMMENT('%', '$');\n\n  var NUMCODE = {\n    className: 'number',\n    begin: \"0'.\\\\|0[box][0-9a-fA-F]*\"\n  };\n\n  var ATOM = hljs.inherit(hljs.APOS_STRING_MODE, {relevance: 0});\n  var STRING = hljs.inherit(hljs.QUOTE_STRING_MODE, {relevance: 0});\n  var STRING_FMT = {\n    className: 'subst',\n    begin: '\\\\\\\\[abfnrtv]\\\\|\\\\\\\\x[0-9a-fA-F]*\\\\\\\\\\\\|%[-+# *.0-9]*[dioxXucsfeEgGp]',\n    relevance: 0\n  };\n  STRING.contains.push(STRING_FMT);\n\n  var IMPLICATION = {\n    className: 'built_in',\n    variants: [\n      {begin: '<=>'},\n      {begin: '<=', relevance: 0},\n      {begin: '=>', relevance: 0},\n      {begin: '/\\\\\\\\'},\n      {begin: '\\\\\\\\/'}\n    ]\n  };\n\n  var HEAD_BODY_CONJUNCTION = {\n    className: 'built_in',\n    variants: [\n      {begin: ':-\\\\|-->'},\n      {begin: '=', relevance: 0}\n    ]\n  };\n\n  return {\n    aliases: ['m', 'moo'],\n    keywords: KEYWORDS,\n    contains: [\n      IMPLICATION,\n      HEAD_BODY_CONJUNCTION,\n      COMMENT,\n      hljs.C_BLOCK_COMMENT_MODE,\n      NUMCODE,\n      hljs.NUMBER_MODE,\n      ATOM,\n      STRING,\n      {begin: /:-/} // relevance booster\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/mercury.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/mipsasm.js":
/*!************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/mipsasm.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n    //local labels: %?[FB]?[AT]?\\d{1,2}\\w+\n  return {\n    case_insensitive: true,\n    aliases: ['mips'],\n    lexemes: '\\\\.?' + hljs.IDENT_RE,\n    keywords: {\n      meta:\n        //GNU preprocs\n        '.2byte .4byte .align .ascii .asciz .balign .byte .code .data .else .end .endif .endm .endr .equ .err .exitm .extern .global .hword .if .ifdef .ifndef .include .irp .long .macro .rept .req .section .set .skip .space .text .word .ltorg ',\n      built_in:\n        '$0 $1 $2 $3 $4 $5 $6 $7 $8 $9 $10 $11 $12 $13 $14 $15 ' + // integer registers\n        '$16 $17 $18 $19 $20 $21 $22 $23 $24 $25 $26 $27 $28 $29 $30 $31 ' + // integer registers\n        'zero at v0 v1 a0 a1 a2 a3 a4 a5 a6 a7 ' + // integer register aliases\n        't0 t1 t2 t3 t4 t5 t6 t7 t8 t9 s0 s1 s2 s3 s4 s5 s6 s7 s8 ' + // integer register aliases\n        'k0 k1 gp sp fp ra ' + // integer register aliases\n        '$f0 $f1 $f2 $f2 $f4 $f5 $f6 $f7 $f8 $f9 $f10 $f11 $f12 $f13 $f14 $f15 ' + // floating-point registers\n        '$f16 $f17 $f18 $f19 $f20 $f21 $f22 $f23 $f24 $f25 $f26 $f27 $f28 $f29 $f30 $f31 ' + // floating-point registers\n        'Context Random EntryLo0 EntryLo1 Context PageMask Wired EntryHi ' + // Coprocessor 0 registers\n        'HWREna BadVAddr Count Compare SR IntCtl SRSCtl SRSMap Cause EPC PRId ' + // Coprocessor 0 registers\n        'EBase Config Config1 Config2 Config3 LLAddr Debug DEPC DESAVE CacheErr ' + // Coprocessor 0 registers\n        'ECC ErrorEPC TagLo DataLo TagHi DataHi WatchLo WatchHi PerfCtl PerfCnt ' // Coprocessor 0 registers\n    },\n    contains: [\n      {\n        className: 'keyword',\n        begin: '\\\\b('+     //mnemonics\n            // 32-bit integer instructions\n            'addi?u?|andi?|b(al)?|beql?|bgez(al)?l?|bgtzl?|blezl?|bltz(al)?l?|' +\n            'bnel?|cl[oz]|divu?|ext|ins|j(al)?|jalr(\\.hb)?|jr(\\.hb)?|lbu?|lhu?|' +\n            'll|lui|lw[lr]?|maddu?|mfhi|mflo|movn|movz|move|msubu?|mthi|mtlo|mul|' +\n            'multu?|nop|nor|ori?|rotrv?|sb|sc|se[bh]|sh|sllv?|slti?u?|srav?|' +\n            'srlv?|subu?|sw[lr]?|xori?|wsbh|' +\n            // floating-point instructions\n            'abs\\.[sd]|add\\.[sd]|alnv.ps|bc1[ft]l?|' +\n            'c\\.(s?f|un|u?eq|[ou]lt|[ou]le|ngle?|seq|l[et]|ng[et])\\.[sd]|' +\n            '(ceil|floor|round|trunc)\\.[lw]\\.[sd]|cfc1|cvt\\.d\\.[lsw]|' +\n            'cvt\\.l\\.[dsw]|cvt\\.ps\\.s|cvt\\.s\\.[dlw]|cvt\\.s\\.p[lu]|cvt\\.w\\.[dls]|' +\n            'div\\.[ds]|ldx?c1|luxc1|lwx?c1|madd\\.[sd]|mfc1|mov[fntz]?\\.[ds]|' +\n            'msub\\.[sd]|mth?c1|mul\\.[ds]|neg\\.[ds]|nmadd\\.[ds]|nmsub\\.[ds]|' +\n            'p[lu][lu]\\.ps|recip\\.fmt|r?sqrt\\.[ds]|sdx?c1|sub\\.[ds]|suxc1|' +\n            'swx?c1|' +\n            // system control instructions\n            'break|cache|d?eret|[de]i|ehb|mfc0|mtc0|pause|prefx?|rdhwr|' +\n            'rdpgpr|sdbbp|ssnop|synci?|syscall|teqi?|tgei?u?|tlb(p|r|w[ir])|' +\n            'tlti?u?|tnei?|wait|wrpgpr'+\n        ')',\n        end: '\\\\s'\n      },\n      hljs.COMMENT('[;#]', '$'),\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.QUOTE_STRING_MODE,\n      {\n        className: 'string',\n        begin: '\\'',\n        end: '[^\\\\\\\\]\\'',\n        relevance: 0\n      },\n      {\n        className: 'title',\n        begin: '\\\\|', end: '\\\\|',\n        illegal: '\\\\n',\n        relevance: 0\n      },\n      {\n        className: 'number',\n        variants: [\n            {begin: '0x[0-9a-f]+'}, //hex\n            {begin: '\\\\b-?\\\\d+'}           //bare number\n        ],\n        relevance: 0\n      },\n      {\n        className: 'symbol',\n        variants: [\n            {begin: '^\\\\s*[a-z_\\\\.\\\\$][a-z0-9_\\\\.\\\\$]+:'}, //GNU MIPS syntax\n            {begin: '^\\\\s*[0-9]+:'}, // numbered local labels\n            {begin: '[0-9]+[bf]' }  // number local label reference (backwards, forwards)\n        ],\n        relevance: 0\n      }\n    ],\n    illegal: '\\/'\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/mipsasm.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/mizar.js":
/*!**********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/mizar.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  return {\n    keywords:\n      'environ vocabularies notations constructors definitions ' +\n      'registrations theorems schemes requirements begin end definition ' +\n      'registration cluster existence pred func defpred deffunc theorem ' +\n      'proof let take assume then thus hence ex for st holds consider ' +\n      'reconsider such that and in provided of as from be being by means ' +\n      'equals implies iff redefine define now not or attr is mode ' +\n      'suppose per cases set thesis contradiction scheme reserve struct ' +\n      'correctness compatibility coherence symmetry assymetry ' +\n      'reflexivity irreflexivity connectedness uniqueness commutativity ' +\n      'idempotence involutiveness projectivity',\n    contains: [\n      hljs.COMMENT('::', '$')\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/mizar.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/mojolicious.js":
/*!****************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/mojolicious.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  return {\n    subLanguage: 'xml',\n    contains: [\n      {\n        className: 'meta',\n        begin: '^__(END|DATA)__$'\n      },\n    // mojolicious line\n      {\n        begin: \"^\\\\s*%{1,2}={0,2}\", end: '$',\n        subLanguage: 'perl'\n      },\n    // mojolicious block\n      {\n        begin: \"<%{1,2}={0,2}\",\n        end: \"={0,1}%>\",\n        subLanguage: 'perl',\n        excludeBegin: true,\n        excludeEnd: true\n      }\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/mojolicious.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/monkey.js":
/*!***********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/monkey.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var NUMBER = {\n    className: 'number', relevance: 0,\n    variants: [\n      {\n        begin: '[$][a-fA-F0-9]+'\n      },\n      hljs.NUMBER_MODE\n    ]\n  };\n\n  return {\n    case_insensitive: true,\n    keywords: {\n      keyword: 'public private property continue exit extern new try catch ' +\n        'eachin not abstract final select case default const local global field ' +\n        'end if then else elseif endif while wend repeat until forever for ' +\n        'to step next return module inline throw import',\n\n      built_in: 'DebugLog DebugStop Error Print ACos ACosr ASin ASinr ATan ATan2 ATan2r ATanr Abs Abs Ceil ' +\n        'Clamp Clamp Cos Cosr Exp Floor Log Max Max Min Min Pow Sgn Sgn Sin Sinr Sqrt Tan Tanr Seed PI HALFPI TWOPI',\n\n      literal: 'true false null and or shl shr mod'\n    },\n    illegal: /\\/\\*/,\n    contains: [\n      hljs.COMMENT('#rem', '#end'),\n      hljs.COMMENT(\n        \"'\",\n        '$',\n        {\n          relevance: 0\n        }\n      ),\n      {\n        className: 'function',\n        beginKeywords: 'function method', end: '[(=:]|$',\n        illegal: /\\n/,\n        contains: [\n          hljs.UNDERSCORE_TITLE_MODE\n        ]\n      },\n      {\n        className: 'class',\n        beginKeywords: 'class interface', end: '$',\n        contains: [\n          {\n            beginKeywords: 'extends implements'\n          },\n          hljs.UNDERSCORE_TITLE_MODE\n        ]\n      },\n      {\n        className: 'built_in',\n        begin: '\\\\b(self|super)\\\\b'\n      },\n      {\n        className: 'meta',\n        begin: '\\\\s*#', end: '$',\n        keywords: {'meta-keyword': 'if else elseif endif end then'}\n      },\n      {\n        className: 'meta',\n        begin: '^\\\\s*strict\\\\b'\n      },\n      {\n        beginKeywords: 'alias', end: '=',\n        contains: [hljs.UNDERSCORE_TITLE_MODE]\n      },\n      hljs.QUOTE_STRING_MODE,\n      NUMBER\n    ]\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/monkey.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/moonscript.js":
/*!***************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/moonscript.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var KEYWORDS = {\n    keyword:\n      // Moonscript keywords\n      'if then not for in while do return else elseif break continue switch and or ' +\n      'unless when class extends super local import export from using',\n    literal:\n      'true false nil',\n    built_in:\n      '_G _VERSION assert collectgarbage dofile error getfenv getmetatable ipairs load ' +\n      'loadfile loadstring module next pairs pcall print rawequal rawget rawset require ' +\n      'select setfenv setmetatable tonumber tostring type unpack xpcall coroutine debug ' +\n      'io math os package string table'\n  };\n  var JS_IDENT_RE = '[A-Za-z$_][0-9A-Za-z$_]*';\n  var SUBST = {\n    className: 'subst',\n    begin: /#\\{/, end: /}/,\n    keywords: KEYWORDS\n  };\n  var EXPRESSIONS = [\n    hljs.inherit(hljs.C_NUMBER_MODE,\n      {starts: {end: '(\\\\s*/)?', relevance: 0}}), // a number tries to eat the following slash to prevent treating it as a regexp\n    {\n      className: 'string',\n      variants: [\n        {\n          begin: /'/, end: /'/,\n          contains: [hljs.BACKSLASH_ESCAPE]\n        },\n        {\n          begin: /\"/, end: /\"/,\n          contains: [hljs.BACKSLASH_ESCAPE, SUBST]\n        }\n      ]\n    },\n    {\n      className: 'built_in',\n      begin: '@__' + hljs.IDENT_RE\n    },\n    {\n      begin: '@' + hljs.IDENT_RE // relevance booster on par with CoffeeScript\n    },\n    {\n      begin: hljs.IDENT_RE + '\\\\\\\\' + hljs.IDENT_RE // inst\\method\n    }\n  ];\n  SUBST.contains = EXPRESSIONS;\n\n  var TITLE = hljs.inherit(hljs.TITLE_MODE, {begin: JS_IDENT_RE});\n  var PARAMS_RE = '(\\\\(.*\\\\))?\\\\s*\\\\B[-=]>';\n  var PARAMS = {\n    className: 'params',\n    begin: '\\\\([^\\\\(]', returnBegin: true,\n    /* We need another contained nameless mode to not have every nested\n    pair of parens to be called \"params\" */\n    contains: [{\n      begin: /\\(/, end: /\\)/,\n      keywords: KEYWORDS,\n      contains: ['self'].concat(EXPRESSIONS)\n    }]\n  };\n\n  return {\n    aliases: ['moon'],\n    keywords: KEYWORDS,\n    illegal: /\\/\\*/,\n    contains: EXPRESSIONS.concat([\n      hljs.COMMENT('--', '$'),\n      {\n        className: 'function',  // function: -> =>\n        begin: '^\\\\s*' + JS_IDENT_RE + '\\\\s*=\\\\s*' + PARAMS_RE, end: '[-=]>',\n        returnBegin: true,\n        contains: [TITLE, PARAMS]\n      },\n      {\n        begin: /[\\(,:=]\\s*/, // anonymous function start\n        relevance: 0,\n        contains: [\n          {\n            className: 'function',\n            begin: PARAMS_RE, end: '[-=]>',\n            returnBegin: true,\n            contains: [PARAMS]\n          }\n        ]\n      },\n      {\n        className: 'class',\n        beginKeywords: 'class',\n        end: '$',\n        illegal: /[:=\"\\[\\]]/,\n        contains: [\n          {\n            beginKeywords: 'extends',\n            endsWithParent: true,\n            illegal: /[:=\"\\[\\]]/,\n            contains: [TITLE]\n          },\n          TITLE\n        ]\n      },\n      {\n        className: 'name',    // table\n        begin: JS_IDENT_RE + ':', end: ':',\n        returnBegin: true, returnEnd: true,\n        relevance: 0\n      }\n    ])\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/moonscript.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/n1ql.js":
/*!*********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/n1ql.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  return {\n    case_insensitive: true,\n    contains: [\n      {\n        beginKeywords:\n          'build create index delete drop explain infer|10 insert merge prepare select update upsert|10',\n        end: /;/, endsWithParent: true,\n        keywords: {\n          // Taken from http://developer.couchbase.com/documentation/server/current/n1ql/n1ql-language-reference/reservedwords.html\n          keyword:\n            'all alter analyze and any array as asc begin between binary boolean break bucket build by call ' +\n            'case cast cluster collate collection commit connect continue correlate cover create database ' +\n            'dataset datastore declare decrement delete derived desc describe distinct do drop each element ' +\n            'else end every except exclude execute exists explain fetch first flatten for force from ' +\n            'function grant group gsi having if ignore ilike in include increment index infer inline inner ' +\n            'insert intersect into is join key keys keyspace known last left let letting like limit lsm map ' +\n            'mapping matched materialized merge minus namespace nest not number object offset on ' +\n            'option or order outer over parse partition password path pool prepare primary private privilege ' +\n            'procedure public raw realm reduce rename return returning revoke right role rollback satisfies ' +\n            'schema select self semi set show some start statistics string system then to transaction trigger ' +\n            'truncate under union unique unknown unnest unset update upsert use user using validate value ' +\n            'valued values via view when where while with within work xor',\n          // Taken from http://developer.couchbase.com/documentation/server/4.5/n1ql/n1ql-language-reference/literals.html\n          literal:\n            'true false null missing|5',\n          // Taken from http://developer.couchbase.com/documentation/server/4.5/n1ql/n1ql-language-reference/functions.html\n          built_in:\n            'array_agg array_append array_concat array_contains array_count array_distinct array_ifnull array_length ' +\n            'array_max array_min array_position array_prepend array_put array_range array_remove array_repeat array_replace ' +\n            'array_reverse array_sort array_sum avg count max min sum greatest least ifmissing ifmissingornull ifnull ' +\n            'missingif nullif ifinf ifnan ifnanorinf naninf neginfif posinfif clock_millis clock_str date_add_millis ' +\n            'date_add_str date_diff_millis date_diff_str date_part_millis date_part_str date_trunc_millis date_trunc_str ' +\n            'duration_to_str millis str_to_millis millis_to_str millis_to_utc millis_to_zone_name now_millis now_str ' +\n            'str_to_duration str_to_utc str_to_zone_name decode_json encode_json encoded_size poly_length base64 base64_encode ' +\n            'base64_decode meta uuid abs acos asin atan atan2 ceil cos degrees e exp ln log floor pi power radians random ' +\n            'round sign sin sqrt tan trunc object_length object_names object_pairs object_inner_pairs object_values ' +\n            'object_inner_values object_add object_put object_remove object_unwrap regexp_contains regexp_like regexp_position ' +\n            'regexp_replace contains initcap length lower ltrim position repeat replace rtrim split substr title trim upper ' +\n            'isarray isatom isboolean isnumber isobject isstring type toarray toatom toboolean tonumber toobject tostring'\n        },\n        contains: [\n          {\n            className: 'string',\n            begin: '\\'', end: '\\'',\n            contains: [hljs.BACKSLASH_ESCAPE],\n            relevance: 0\n          },\n          {\n            className: 'string',\n            begin: '\"', end: '\"',\n            contains: [hljs.BACKSLASH_ESCAPE],\n            relevance: 0\n          },\n          {\n            className: 'symbol',\n            begin: '`', end: '`',\n            contains: [hljs.BACKSLASH_ESCAPE],\n            relevance: 2\n          },\n          hljs.C_NUMBER_MODE,\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      },\n      hljs.C_BLOCK_COMMENT_MODE\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/n1ql.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/nginx.js":
/*!**********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/nginx.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var VAR = {\n    className: 'variable',\n    variants: [\n      {begin: /\\$\\d+/},\n      {begin: /\\$\\{/, end: /}/},\n      {begin: '[\\\\$\\\\@]' + hljs.UNDERSCORE_IDENT_RE}\n    ]\n  };\n  var DEFAULT = {\n    endsWithParent: true,\n    lexemes: '[a-z/_]+',\n    keywords: {\n      literal:\n        'on off yes no true false none blocked debug info notice warn error crit ' +\n        'select break last permanent redirect kqueue rtsig epoll poll /dev/poll'\n    },\n    relevance: 0,\n    illegal: '=>',\n    contains: [\n      hljs.HASH_COMMENT_MODE,\n      {\n        className: 'string',\n        contains: [hljs.BACKSLASH_ESCAPE, VAR],\n        variants: [\n          {begin: /\"/, end: /\"/},\n          {begin: /'/, end: /'/}\n        ]\n      },\n      // this swallows entire URLs to avoid detecting numbers within\n      {\n        begin: '([a-z]+):/', end: '\\\\s', endsWithParent: true, excludeEnd: true,\n        contains: [VAR]\n      },\n      {\n        className: 'regexp',\n        contains: [hljs.BACKSLASH_ESCAPE, VAR],\n        variants: [\n          {begin: \"\\\\s\\\\^\", end: \"\\\\s|{|;\", returnEnd: true},\n          // regexp locations (~, ~*)\n          {begin: \"~\\\\*?\\\\s+\", end: \"\\\\s|{|;\", returnEnd: true},\n          // *.example.com\n          {begin: \"\\\\*(\\\\.[a-z\\\\-]+)+\"},\n          // sub.example.*\n          {begin: \"([a-z\\\\-]+\\\\.)+\\\\*\"}\n        ]\n      },\n      // IP\n      {\n        className: 'number',\n        begin: '\\\\b\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}(:\\\\d{1,5})?\\\\b'\n      },\n      // units\n      {\n        className: 'number',\n        begin: '\\\\b\\\\d+[kKmMgGdshdwy]*\\\\b',\n        relevance: 0\n      },\n      VAR\n    ]\n  };\n\n  return {\n    aliases: ['nginxconf'],\n    contains: [\n      hljs.HASH_COMMENT_MODE,\n      {\n        begin: hljs.UNDERSCORE_IDENT_RE + '\\\\s+{', returnBegin: true,\n        end: '{',\n        contains: [\n          {\n            className: 'section',\n            begin: hljs.UNDERSCORE_IDENT_RE\n          }\n        ],\n        relevance: 0\n      },\n      {\n        begin: hljs.UNDERSCORE_IDENT_RE + '\\\\s', end: ';|{', returnBegin: true,\n        contains: [\n          {\n            className: 'attribute',\n            begin: hljs.UNDERSCORE_IDENT_RE,\n            starts: DEFAULT\n          }\n        ],\n        relevance: 0\n      }\n    ],\n    illegal: '[^\\\\s\\\\}]'\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/nginx.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/nimrod.js":
/*!***********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/nimrod.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  return {\n    aliases: ['nim'],\n    keywords: {\n      keyword:\n        'addr and as asm bind block break case cast const continue converter ' +\n        'discard distinct div do elif else end enum except export finally ' +\n        'for from generic if import in include interface is isnot iterator ' +\n        'let macro method mixin mod nil not notin object of or out proc ptr ' +\n        'raise ref return shl shr static template try tuple type using var ' +\n        'when while with without xor yield',\n      literal:\n        'shared guarded stdin stdout stderr result true false',\n      built_in:\n        'int int8 int16 int32 int64 uint uint8 uint16 uint32 uint64 float ' +\n        'float32 float64 bool char string cstring pointer expr stmt void ' +\n        'auto any range array openarray varargs seq set clong culong cchar ' +\n        'cschar cshort cint csize clonglong cfloat cdouble clongdouble ' +\n        'cuchar cushort cuint culonglong cstringarray semistatic'\n    },\n    contains: [ {\n        className: 'meta', // Actually pragma\n        begin: /{\\./,\n        end: /\\.}/,\n        relevance: 10\n      }, {\n        className: 'string',\n        begin: /[a-zA-Z]\\w*\"/,\n        end: /\"/,\n        contains: [{begin: /\"\"/}]\n      }, {\n        className: 'string',\n        begin: /([a-zA-Z]\\w*)?\"\"\"/,\n        end: /\"\"\"/\n      },\n      hljs.QUOTE_STRING_MODE,\n      {\n        className: 'type',\n        begin: /\\b[A-Z]\\w+\\b/,\n        relevance: 0\n      }, {\n        className: 'number',\n        relevance: 0,\n        variants: [\n          {begin: /\\b(0[xX][0-9a-fA-F][_0-9a-fA-F]*)('?[iIuU](8|16|32|64))?/},\n          {begin: /\\b(0o[0-7][_0-7]*)('?[iIuUfF](8|16|32|64))?/},\n          {begin: /\\b(0(b|B)[01][_01]*)('?[iIuUfF](8|16|32|64))?/},\n          {begin: /\\b(\\d[_\\d]*)('?[iIuUfF](8|16|32|64))?/}\n        ]\n      },\n      hljs.HASH_COMMENT_MODE\n    ]\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/nimrod.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/nix.js":
/*!********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/nix.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var NIX_KEYWORDS = {\n    keyword:\n      'rec with let in inherit assert if else then',\n    literal:\n      'true false or and null',\n    built_in:\n      'import abort baseNameOf dirOf isNull builtins map removeAttrs throw ' +\n      'toString derivation'\n  };\n  var ANTIQUOTE = {\n    className: 'subst',\n    begin: /\\$\\{/,\n    end: /}/,\n    keywords: NIX_KEYWORDS\n  };\n  var ATTRS = {\n    begin: /[a-zA-Z0-9-_]+(\\s*=)/, returnBegin: true,\n    relevance: 0,\n    contains: [\n      {\n        className: 'attr',\n        begin: /\\S+/\n      }\n    ]\n  };\n  var STRING = {\n    className: 'string',\n    contains: [ANTIQUOTE],\n    variants: [\n      {begin: \"''\", end: \"''\"},\n      {begin: '\"', end: '\"'}\n    ]\n  };\n  var EXPRESSIONS = [\n    hljs.NUMBER_MODE,\n    hljs.HASH_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE,\n    STRING,\n    ATTRS\n  ];\n  ANTIQUOTE.contains = EXPRESSIONS;\n  return {\n    aliases: [\"nixos\"],\n    keywords: NIX_KEYWORDS,\n    contains: EXPRESSIONS\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/nix.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/nsis.js":
/*!*********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/nsis.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var CONSTANTS = {\n    className: 'variable',\n    begin: /\\$(ADMINTOOLS|APPDATA|CDBURN_AREA|CMDLINE|COMMONFILES32|COMMONFILES64|COMMONFILES|COOKIES|DESKTOP|DOCUMENTS|EXEDIR|EXEFILE|EXEPATH|FAVORITES|FONTS|HISTORY|HWNDPARENT|INSTDIR|INTERNET_CACHE|LANGUAGE|LOCALAPPDATA|MUSIC|NETHOOD|OUTDIR|PICTURES|PLUGINSDIR|PRINTHOOD|PROFILE|PROGRAMFILES32|PROGRAMFILES64|PROGRAMFILES|QUICKLAUNCH|RECENT|RESOURCES_LOCALIZED|RESOURCES|SENDTO|SMPROGRAMS|SMSTARTUP|STARTMENU|SYSDIR|TEMP|TEMPLATES|VIDEOS|WINDIR)/\n  };\n\n  var DEFINES = {\n    // ${defines}\n    className: 'variable',\n    begin: /\\$+{[\\w\\.:-]+}/\n  };\n\n  var VARIABLES = {\n    // $variables\n    className: 'variable',\n    begin: /\\$+\\w+/,\n    illegal: /\\(\\){}/\n  };\n\n  var LANGUAGES = {\n    // $(language_strings)\n    className: 'variable',\n    begin: /\\$+\\([\\w\\^\\.:-]+\\)/\n  };\n\n  var PARAMETERS = {\n    // command parameters\n    className: 'params',\n    begin: '(ARCHIVE|FILE_ATTRIBUTE_ARCHIVE|FILE_ATTRIBUTE_NORMAL|FILE_ATTRIBUTE_OFFLINE|FILE_ATTRIBUTE_READONLY|FILE_ATTRIBUTE_SYSTEM|FILE_ATTRIBUTE_TEMPORARY|HKCR|HKCU|HKDD|HKEY_CLASSES_ROOT|HKEY_CURRENT_CONFIG|HKEY_CURRENT_USER|HKEY_DYN_DATA|HKEY_LOCAL_MACHINE|HKEY_PERFORMANCE_DATA|HKEY_USERS|HKLM|HKPD|HKU|IDABORT|IDCANCEL|IDIGNORE|IDNO|IDOK|IDRETRY|IDYES|MB_ABORTRETRYIGNORE|MB_DEFBUTTON1|MB_DEFBUTTON2|MB_DEFBUTTON3|MB_DEFBUTTON4|MB_ICONEXCLAMATION|MB_ICONINFORMATION|MB_ICONQUESTION|MB_ICONSTOP|MB_OK|MB_OKCANCEL|MB_RETRYCANCEL|MB_RIGHT|MB_RTLREADING|MB_SETFOREGROUND|MB_TOPMOST|MB_USERICON|MB_YESNO|NORMAL|OFFLINE|READONLY|SHCTX|SHELL_CONTEXT|SYSTEM|TEMPORARY)'\n  };\n\n  var COMPILER = {\n    // !compiler_flags\n    className: 'keyword',\n    begin: /\\!(addincludedir|addplugindir|appendfile|cd|define|delfile|echo|else|endif|error|execute|finalize|getdllversionsystem|ifdef|ifmacrodef|ifmacrondef|ifndef|if|include|insertmacro|macroend|macro|makensis|packhdr|searchparse|searchreplace|tempfile|undef|verbose|warning)/\n  };\n\n  var METACHARS = {\n    // $\\n, $\\r, $\\t, $$\n    className: 'subst',\n    begin: /\\$(\\\\[nrt]|\\$)/\n  };\n\n  var PLUGINS = {\n    // plug::ins\n    className: 'class',\n    begin: /\\w+\\:\\:\\w+/\n  };\n\n    var STRING = {\n      className: 'string',\n      variants: [\n        {\n          begin: '\"', end: '\"'\n        },\n        {\n          begin: '\\'', end: '\\''\n        },\n        {\n          begin: '`', end: '`'\n        }\n      ],\n      illegal: /\\n/,\n      contains: [\n        METACHARS,\n        CONSTANTS,\n        DEFINES,\n        VARIABLES,\n        LANGUAGES\n      ]\n  };\n\n  return {\n    case_insensitive: false,\n    keywords: {\n      keyword:\n      'Abort AddBrandingImage AddSize AllowRootDirInstall AllowSkipFiles AutoCloseWindow BGFont BGGradient BrandingText BringToFront Call CallInstDLL Caption ChangeUI CheckBitmap ClearErrors CompletedText ComponentText CopyFiles CRCCheck CreateDirectory CreateFont CreateShortCut Delete DeleteINISec DeleteINIStr DeleteRegKey DeleteRegValue DetailPrint DetailsButtonText DirText DirVar DirVerify EnableWindow EnumRegKey EnumRegValue Exch Exec ExecShell ExecWait ExpandEnvStrings File FileBufSize FileClose FileErrorText FileOpen FileRead FileReadByte FileReadUTF16LE FileReadWord FileSeek FileWrite FileWriteByte FileWriteUTF16LE FileWriteWord FindClose FindFirst FindNext FindWindow FlushINI FunctionEnd GetCurInstType GetCurrentAddress GetDlgItem GetDLLVersion GetDLLVersionLocal GetErrorLevel GetFileTime GetFileTimeLocal GetFullPathName GetFunctionAddress GetInstDirError GetLabelAddress GetTempFileName Goto HideWindow Icon IfAbort IfErrors IfFileExists IfRebootFlag IfSilent InitPluginsDir InstallButtonText InstallColors InstallDir InstallDirRegKey InstProgressFlags InstType InstTypeGetText InstTypeSetText IntCmp IntCmpU IntFmt IntOp IsWindow LangString LicenseBkColor LicenseData LicenseForceSelection LicenseLangString LicenseText LoadLanguageFile LockWindow LogSet LogText ManifestDPIAware ManifestSupportedOS MessageBox MiscButtonText Name Nop OutFile Page PageCallbacks PageExEnd Pop Push Quit ReadEnvStr ReadINIStr ReadRegDWORD ReadRegStr Reboot RegDLL Rename RequestExecutionLevel ReserveFile Return RMDir SearchPath SectionEnd SectionGetFlags SectionGetInstTypes SectionGetSize SectionGetText SectionGroupEnd SectionIn SectionSetFlags SectionSetInstTypes SectionSetSize SectionSetText SendMessage SetAutoClose SetBrandingImage SetCompress SetCompressor SetCompressorDictSize SetCtlColors SetCurInstType SetDatablockOptimize SetDateSave SetDetailsPrint SetDetailsView SetErrorLevel SetErrors SetFileAttributes SetFont SetOutPath SetOverwrite SetRebootFlag SetRegView SetShellVarContext SetSilent ShowInstDetails ShowUninstDetails ShowWindow SilentInstall SilentUnInstall Sleep SpaceTexts StrCmp StrCmpS StrCpy StrLen SubCaption Unicode UninstallButtonText UninstallCaption UninstallIcon UninstallSubCaption UninstallText UninstPage UnRegDLL Var VIAddVersionKey VIFileVersion VIProductVersion WindowIcon WriteINIStr WriteRegBin WriteRegDWORD WriteRegExpandStr WriteRegStr WriteUninstaller XPStyle',\n      literal:\n      'admin all auto both bottom bzip2 colored components current custom directory false force hide highest ifdiff ifnewer instfiles lastused leave left license listonly lzma nevershow none normal notset off on open print right show silent silentlog smooth textonly top true try un.components un.custom un.directory un.instfiles un.license uninstConfirm user Win10 Win7 Win8 WinVista zlib'\n    },\n    contains: [\n      hljs.HASH_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.COMMENT(\n        ';',\n        '$',\n        {\n          relevance: 0\n        }\n      ),\n      {\n        className: 'function',\n        beginKeywords: 'Function PageEx Section SectionGroup', end: '$'\n      },\n      STRING,\n      COMPILER,\n      DEFINES,\n      VARIABLES,\n      LANGUAGES,\n      PARAMETERS,\n      PLUGINS,\n      hljs.NUMBER_MODE\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/nsis.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/objectivec.js":
/*!***************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/objectivec.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var API_CLASS = {\n    className: 'built_in',\n    begin: '\\\\b(AV|CA|CF|CG|CI|CL|CM|CN|CT|MK|MP|MTK|MTL|NS|SCN|SK|UI|WK|XC)\\\\w+',\n  };\n  var OBJC_KEYWORDS = {\n    keyword:\n      'int float while char export sizeof typedef const struct for union ' +\n      'unsigned long volatile static bool mutable if do return goto void ' +\n      'enum else break extern asm case short default double register explicit ' +\n      'signed typename this switch continue wchar_t inline readonly assign ' +\n      'readwrite self @synchronized id typeof ' +\n      'nonatomic super unichar IBOutlet IBAction strong weak copy ' +\n      'in out inout bycopy byref oneway __strong __weak __block __autoreleasing ' +\n      '@private @protected @public @try @property @end @throw @catch @finally ' +\n      '@autoreleasepool @synthesize @dynamic @selector @optional @required ' +\n      '@encode @package @import @defs @compatibility_alias ' +\n      '__bridge __bridge_transfer __bridge_retained __bridge_retain ' +\n      '__covariant __contravariant __kindof ' +\n      '_Nonnull _Nullable _Null_unspecified ' +\n      '__FUNCTION__ __PRETTY_FUNCTION__ __attribute__ ' +\n      'getter setter retain unsafe_unretained ' +\n      'nonnull nullable null_unspecified null_resettable class instancetype ' +\n      'NS_DESIGNATED_INITIALIZER NS_UNAVAILABLE NS_REQUIRES_SUPER ' +\n      'NS_RETURNS_INNER_POINTER NS_INLINE NS_AVAILABLE NS_DEPRECATED ' +\n      'NS_ENUM NS_OPTIONS NS_SWIFT_UNAVAILABLE ' +\n      'NS_ASSUME_NONNULL_BEGIN NS_ASSUME_NONNULL_END ' +\n      'NS_REFINED_FOR_SWIFT NS_SWIFT_NAME NS_SWIFT_NOTHROW ' +\n      'NS_DURING NS_HANDLER NS_ENDHANDLER NS_VALUERETURN NS_VOIDRETURN',\n    literal:\n      'false true FALSE TRUE nil YES NO NULL',\n    built_in:\n      'BOOL dispatch_once_t dispatch_queue_t dispatch_sync dispatch_async dispatch_once'\n  };\n  var LEXEMES = /[a-zA-Z@][a-zA-Z0-9_]*/;\n  var CLASS_KEYWORDS = '@interface @class @protocol @implementation';\n  return {\n    aliases: ['mm', 'objc', 'obj-c'],\n    keywords: OBJC_KEYWORDS,\n    lexemes: LEXEMES,\n    illegal: '</',\n    contains: [\n      API_CLASS,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.C_NUMBER_MODE,\n      hljs.QUOTE_STRING_MODE,\n      {\n        className: 'string',\n        variants: [\n          {\n            begin: '@\"', end: '\"',\n            illegal: '\\\\n',\n            contains: [hljs.BACKSLASH_ESCAPE]\n          },\n          {\n            begin: '\\'', end: '[^\\\\\\\\]\\'',\n            illegal: '[^\\\\\\\\][^\\']'\n          }\n        ]\n      },\n      {\n        className: 'meta',\n        begin: '#',\n        end: '$',\n        contains: [\n          {\n            className: 'meta-string',\n            variants: [\n              { begin: '\\\"', end: '\\\"' },\n              { begin: '<', end: '>' }\n            ]\n          }\n        ]\n      },\n      {\n        className: 'class',\n        begin: '(' + CLASS_KEYWORDS.split(' ').join('|') + ')\\\\b', end: '({|$)', excludeEnd: true,\n        keywords: CLASS_KEYWORDS, lexemes: LEXEMES,\n        contains: [\n          hljs.UNDERSCORE_TITLE_MODE\n        ]\n      },\n      {\n        begin: '\\\\.'+hljs.UNDERSCORE_IDENT_RE,\n        relevance: 0\n      }\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/objectivec.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/ocaml.js":
/*!**********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/ocaml.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  /* missing support for heredoc-like string (OCaml 4.0.2+) */\n  return {\n    aliases: ['ml'],\n    keywords: {\n      keyword:\n        'and as assert asr begin class constraint do done downto else end ' +\n        'exception external for fun function functor if in include ' +\n        'inherit! inherit initializer land lazy let lor lsl lsr lxor match method!|10 method ' +\n        'mod module mutable new object of open! open or private rec sig struct ' +\n        'then to try type val! val virtual when while with ' +\n        /* camlp4 */\n        'parser value',\n      built_in:\n        /* built-in types */\n        'array bool bytes char exn|5 float int int32 int64 list lazy_t|5 nativeint|5 string unit ' +\n        /* (some) types in Pervasives */\n        'in_channel out_channel ref',\n      literal:\n        'true false'\n    },\n    illegal: /\\/\\/|>>/,\n    lexemes: '[a-z_]\\\\w*!?',\n    contains: [\n      {\n        className: 'literal',\n        begin: '\\\\[(\\\\|\\\\|)?\\\\]|\\\\(\\\\)',\n        relevance: 0\n      },\n      hljs.COMMENT(\n        '\\\\(\\\\*',\n        '\\\\*\\\\)',\n        {\n          contains: ['self']\n        }\n      ),\n      { /* type variable */\n        className: 'symbol',\n        begin: '\\'[A-Za-z_](?!\\')[\\\\w\\']*'\n        /* the grammar is ambiguous on how 'a'b should be interpreted but not the compiler */\n      },\n      { /* polymorphic variant */\n        className: 'type',\n        begin: '`[A-Z][\\\\w\\']*'\n      },\n      { /* module or constructor */\n        className: 'type',\n        begin: '\\\\b[A-Z][\\\\w\\']*',\n        relevance: 0\n      },\n      { /* don't color identifiers, but safely catch all identifiers with '*/\n        begin: '[a-z_]\\\\w*\\'[\\\\w\\']*', relevance: 0\n      },\n      hljs.inherit(hljs.APOS_STRING_MODE, {className: 'string', relevance: 0}),\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null}),\n      {\n        className: 'number',\n        begin:\n          '\\\\b(0[xX][a-fA-F0-9_]+[Lln]?|' +\n          '0[oO][0-7_]+[Lln]?|' +\n          '0[bB][01_]+[Lln]?|' +\n          '[0-9][0-9_]*([Lln]|(\\\\.[0-9_]*)?([eE][-+]?[0-9_]+)?)?)',\n        relevance: 0\n      },\n      {\n        begin: /[-=]>/ // relevance booster\n      }\n    ]\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/ocaml.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/openscad.js":
/*!*************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/openscad.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n\tvar SPECIAL_VARS = {\n\t\tclassName: 'keyword',\n\t\tbegin: '\\\\$(f[asn]|t|vp[rtd]|children)'\n\t},\n\tLITERALS = {\n\t\tclassName: 'literal',\n\t\tbegin: 'false|true|PI|undef'\n\t},\n\tNUMBERS = {\n\t\tclassName: 'number',\n\t\tbegin: '\\\\b\\\\d+(\\\\.\\\\d+)?(e-?\\\\d+)?', //adds 1e5, 1e-10\n\t\trelevance: 0\n\t},\n\tSTRING = hljs.inherit(hljs.QUOTE_STRING_MODE,{illegal: null}),\n\tPREPRO = {\n\t\tclassName: 'meta',\n\t\tkeywords: {'meta-keyword': 'include use'},\n\t\tbegin: 'include|use <',\n\t\tend: '>'\n\t},\n\tPARAMS = {\n\t\tclassName: 'params',\n\t\tbegin: '\\\\(', end: '\\\\)',\n\t\tcontains: ['self', NUMBERS, STRING, SPECIAL_VARS, LITERALS]\n\t},\n\tMODIFIERS = {\n\t\tbegin: '[*!#%]',\n\t\trelevance: 0\n\t},\n\tFUNCTIONS = {\n\t\tclassName: 'function',\n\t\tbeginKeywords: 'module function',\n\t\tend: '\\\\=|\\\\{',\n\t\tcontains: [PARAMS, hljs.UNDERSCORE_TITLE_MODE]\n\t};\n\n\treturn {\n\t\taliases: ['scad'],\n\t\tkeywords: {\n\t\t\tkeyword: 'function module include use for intersection_for if else \\\\%',\n\t\t\tliteral: 'false true PI undef',\n\t\t\tbuilt_in: 'circle square polygon text sphere cube cylinder polyhedron translate rotate scale resize mirror multmatrix color offset hull minkowski union difference intersection abs sign sin cos tan acos asin atan atan2 floor round ceil ln log pow sqrt exp rands min max concat lookup str chr search version version_num norm cross parent_module echo import import_dxf dxf_linear_extrude linear_extrude rotate_extrude surface projection render children dxf_cross dxf_dim let assign'\n\t\t},\n\t\tcontains: [\n\t\t\thljs.C_LINE_COMMENT_MODE,\n\t\t\thljs.C_BLOCK_COMMENT_MODE,\n\t\t\tNUMBERS,\n\t\t\tPREPRO,\n\t\t\tSTRING,\n\t\t\tSPECIAL_VARS,\n\t\t\tMODIFIERS,\n\t\t\tFUNCTIONS\n\t\t]\n\t}\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/openscad.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/oxygene.js":
/*!************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/oxygene.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var OXYGENE_KEYWORDS = 'abstract add and array as asc aspect assembly async begin break block by case class concat const copy constructor continue '+\n    'create default delegate desc distinct div do downto dynamic each else empty end ensure enum equals event except exit extension external false '+\n    'final finalize finalizer finally flags for forward from function future global group has if implementation implements implies in index inherited '+\n    'inline interface into invariants is iterator join locked locking loop matching method mod module namespace nested new nil not notify nullable of '+\n    'old on operator or order out override parallel params partial pinned private procedure property protected public queryable raise read readonly '+\n    'record reintroduce remove repeat require result reverse sealed select self sequence set shl shr skip static step soft take then to true try tuple '+\n    'type union unit unsafe until uses using var virtual raises volatile where while with write xor yield await mapped deprecated stdcall cdecl pascal '+\n    'register safecall overload library platform reference packed strict published autoreleasepool selector strong weak unretained';\n  var CURLY_COMMENT =  hljs.COMMENT(\n    '{',\n    '}',\n    {\n      relevance: 0\n    }\n  );\n  var PAREN_COMMENT = hljs.COMMENT(\n    '\\\\(\\\\*',\n    '\\\\*\\\\)',\n    {\n      relevance: 10\n    }\n  );\n  var STRING = {\n    className: 'string',\n    begin: '\\'', end: '\\'',\n    contains: [{begin: '\\'\\''}]\n  };\n  var CHAR_STRING = {\n    className: 'string', begin: '(#\\\\d+)+'\n  };\n  var FUNCTION = {\n    className: 'function',\n    beginKeywords: 'function constructor destructor procedure method', end: '[:;]',\n    keywords: 'function constructor|10 destructor|10 procedure|10 method|10',\n    contains: [\n      hljs.TITLE_MODE,\n      {\n        className: 'params',\n        begin: '\\\\(', end: '\\\\)',\n        keywords: OXYGENE_KEYWORDS,\n        contains: [STRING, CHAR_STRING]\n      },\n      CURLY_COMMENT, PAREN_COMMENT\n    ]\n  };\n  return {\n    case_insensitive: true,\n    lexemes: /\\.?\\w+/,\n    keywords: OXYGENE_KEYWORDS,\n    illegal: '(\"|\\\\$[G-Zg-z]|\\\\/\\\\*|</|=>|->)',\n    contains: [\n      CURLY_COMMENT, PAREN_COMMENT, hljs.C_LINE_COMMENT_MODE,\n      STRING, CHAR_STRING,\n      hljs.NUMBER_MODE,\n      FUNCTION,\n      {\n        className: 'class',\n        begin: '=\\\\bclass\\\\b', end: 'end;',\n        keywords: OXYGENE_KEYWORDS,\n        contains: [\n          STRING, CHAR_STRING,\n          CURLY_COMMENT, PAREN_COMMENT, hljs.C_LINE_COMMENT_MODE,\n          FUNCTION\n        ]\n      }\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/oxygene.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/parser3.js":
/*!************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/parser3.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var CURLY_SUBCOMMENT = hljs.COMMENT(\n    '{',\n    '}',\n    {\n      contains: ['self']\n    }\n  );\n  return {\n    subLanguage: 'xml', relevance: 0,\n    contains: [\n      hljs.COMMENT('^#', '$'),\n      hljs.COMMENT(\n        '\\\\^rem{',\n        '}',\n        {\n          relevance: 10,\n          contains: [\n            CURLY_SUBCOMMENT\n          ]\n        }\n      ),\n      {\n        className: 'meta',\n        begin: '^@(?:BASE|USE|CLASS|OPTIONS)$',\n        relevance: 10\n      },\n      {\n        className: 'title',\n        begin: '@[\\\\w\\\\-]+\\\\[[\\\\w^;\\\\-]*\\\\](?:\\\\[[\\\\w^;\\\\-]*\\\\])?(?:.*)$'\n      },\n      {\n        className: 'variable',\n        begin: '\\\\$\\\\{?[\\\\w\\\\-\\\\.\\\\:]+\\\\}?'\n      },\n      {\n        className: 'keyword',\n        begin: '\\\\^[\\\\w\\\\-\\\\.\\\\:]+'\n      },\n      {\n        className: 'number',\n        begin: '\\\\^#[0-9a-fA-F]+'\n      },\n      hljs.C_NUMBER_MODE\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/parser3.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/perl.js":
/*!*********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/perl.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var PERL_KEYWORDS = 'getpwent getservent quotemeta msgrcv scalar kill dbmclose undef lc ' +\n    'ma syswrite tr send umask sysopen shmwrite vec qx utime local oct semctl localtime ' +\n    'readpipe do return format read sprintf dbmopen pop getpgrp not getpwnam rewinddir qq' +\n    'fileno qw endprotoent wait sethostent bless s|0 opendir continue each sleep endgrent ' +\n    'shutdown dump chomp connect getsockname die socketpair close flock exists index shmget' +\n    'sub for endpwent redo lstat msgctl setpgrp abs exit select print ref gethostbyaddr ' +\n    'unshift fcntl syscall goto getnetbyaddr join gmtime symlink semget splice x|0 ' +\n    'getpeername recv log setsockopt cos last reverse gethostbyname getgrnam study formline ' +\n    'endhostent times chop length gethostent getnetent pack getprotoent getservbyname rand ' +\n    'mkdir pos chmod y|0 substr endnetent printf next open msgsnd readdir use unlink ' +\n    'getsockopt getpriority rindex wantarray hex system getservbyport endservent int chr ' +\n    'untie rmdir prototype tell listen fork shmread ucfirst setprotoent else sysseek link ' +\n    'getgrgid shmctl waitpid unpack getnetbyname reset chdir grep split require caller ' +\n    'lcfirst until warn while values shift telldir getpwuid my getprotobynumber delete and ' +\n    'sort uc defined srand accept package seekdir getprotobyname semop our rename seek if q|0 ' +\n    'chroot sysread setpwent no crypt getc chown sqrt write setnetent setpriority foreach ' +\n    'tie sin msgget map stat getlogin unless elsif truncate exec keys glob tied closedir' +\n    'ioctl socket readlink eval xor readline binmode setservent eof ord bind alarm pipe ' +\n    'atan2 getgrent exp time push setgrent gt lt or ne m|0 break given say state when';\n  var SUBST = {\n    className: 'subst',\n    begin: '[$@]\\\\{', end: '\\\\}',\n    keywords: PERL_KEYWORDS\n  };\n  var METHOD = {\n    begin: '->{', end: '}'\n    // contains defined later\n  };\n  var VAR = {\n    variants: [\n      {begin: /\\$\\d/},\n      {begin: /[\\$%@](\\^\\w\\b|#\\w+(::\\w+)*|{\\w+}|\\w+(::\\w*)*)/},\n      {begin: /[\\$%@][^\\s\\w{]/, relevance: 0}\n    ]\n  };\n  var STRING_CONTAINS = [hljs.BACKSLASH_ESCAPE, SUBST, VAR];\n  var PERL_DEFAULT_CONTAINS = [\n    VAR,\n    hljs.HASH_COMMENT_MODE,\n    hljs.COMMENT(\n      '^\\\\=\\\\w',\n      '\\\\=cut',\n      {\n        endsWithParent: true\n      }\n    ),\n    METHOD,\n    {\n      className: 'string',\n      contains: STRING_CONTAINS,\n      variants: [\n        {\n          begin: 'q[qwxr]?\\\\s*\\\\(', end: '\\\\)',\n          relevance: 5\n        },\n        {\n          begin: 'q[qwxr]?\\\\s*\\\\[', end: '\\\\]',\n          relevance: 5\n        },\n        {\n          begin: 'q[qwxr]?\\\\s*\\\\{', end: '\\\\}',\n          relevance: 5\n        },\n        {\n          begin: 'q[qwxr]?\\\\s*\\\\|', end: '\\\\|',\n          relevance: 5\n        },\n        {\n          begin: 'q[qwxr]?\\\\s*\\\\<', end: '\\\\>',\n          relevance: 5\n        },\n        {\n          begin: 'qw\\\\s+q', end: 'q',\n          relevance: 5\n        },\n        {\n          begin: '\\'', end: '\\'',\n          contains: [hljs.BACKSLASH_ESCAPE]\n        },\n        {\n          begin: '\"', end: '\"'\n        },\n        {\n          begin: '`', end: '`',\n          contains: [hljs.BACKSLASH_ESCAPE]\n        },\n        {\n          begin: '{\\\\w+}',\n          contains: [],\n          relevance: 0\n        },\n        {\n          begin: '\\-?\\\\w+\\\\s*\\\\=\\\\>',\n          contains: [],\n          relevance: 0\n        }\n      ]\n    },\n    {\n      className: 'number',\n      begin: '(\\\\b0[0-7_]+)|(\\\\b0x[0-9a-fA-F_]+)|(\\\\b[1-9][0-9_]*(\\\\.[0-9_]+)?)|[0_]\\\\b',\n      relevance: 0\n    },\n    { // regexp container\n      begin: '(\\\\/\\\\/|' + hljs.RE_STARTERS_RE + '|\\\\b(split|return|print|reverse|grep)\\\\b)\\\\s*',\n      keywords: 'split return print reverse grep',\n      relevance: 0,\n      contains: [\n        hljs.HASH_COMMENT_MODE,\n        {\n          className: 'regexp',\n          begin: '(s|tr|y)/(\\\\\\\\.|[^/])*/(\\\\\\\\.|[^/])*/[a-z]*',\n          relevance: 10\n        },\n        {\n          className: 'regexp',\n          begin: '(m|qr)?/', end: '/[a-z]*',\n          contains: [hljs.BACKSLASH_ESCAPE],\n          relevance: 0 // allows empty \"//\" which is a common comment delimiter in other languages\n        }\n      ]\n    },\n    {\n      className: 'function',\n      beginKeywords: 'sub', end: '(\\\\s*\\\\(.*?\\\\))?[;{]', excludeEnd: true,\n      relevance: 5,\n      contains: [hljs.TITLE_MODE]\n    },\n    {\n      begin: '-\\\\w\\\\b',\n      relevance: 0\n    },\n    {\n      begin: \"^__DATA__$\",\n      end: \"^__END__$\",\n      subLanguage: 'mojolicious',\n      contains: [\n        {\n            begin: \"^@@.*\",\n            end: \"$\",\n            className: \"comment\"\n        }\n      ]\n    }\n  ];\n  SUBST.contains = PERL_DEFAULT_CONTAINS;\n  METHOD.contains = PERL_DEFAULT_CONTAINS;\n\n  return {\n    aliases: ['pl', 'pm'],\n    lexemes: /[\\w\\.]+/,\n    keywords: PERL_KEYWORDS,\n    contains: PERL_DEFAULT_CONTAINS\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/perl.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/pf.js":
/*!*******************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/pf.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var MACRO = {\n    className: 'variable',\n    begin: /\\$[\\w\\d#@][\\w\\d_]*/\n  };\n  var TABLE = {\n    className: 'variable',\n    begin: /<(?!\\/)/, end: />/\n  };\n  var QUOTE_STRING = {\n    className: 'string',\n    begin: /\"/, end: /\"/\n  };\n\n  return {\n    aliases: ['pf.conf'],\n    lexemes: /[a-z0-9_<>-]+/,\n    keywords: {\n      built_in: /* block match pass are \"actions\" in pf.conf(5), the rest are\n                 * lexically similar top-level commands.\n                 */\n        'block match pass load anchor|5 antispoof|10 set table',\n      keyword:\n        'in out log quick on rdomain inet inet6 proto from port os to route' +\n        'allow-opts divert-packet divert-reply divert-to flags group icmp-type' +\n        'icmp6-type label once probability recieved-on rtable prio queue' +\n        'tos tag tagged user keep fragment for os drop' +\n        'af-to|10 binat-to|10 nat-to|10 rdr-to|10 bitmask least-stats random round-robin' +\n        'source-hash static-port' +\n        'dup-to reply-to route-to' +\n        'parent bandwidth default min max qlimit' +\n        'block-policy debug fingerprints hostid limit loginterface optimization' +\n        'reassemble ruleset-optimization basic none profile skip state-defaults' +\n        'state-policy timeout' +\n        'const counters persist' +\n        'no modulate synproxy state|5 floating if-bound no-sync pflow|10 sloppy' +\n        'source-track global rule max-src-nodes max-src-states max-src-conn' +\n        'max-src-conn-rate overload flush' +\n        'scrub|5 max-mss min-ttl no-df|10 random-id',\n      literal:\n        'all any no-route self urpf-failed egress|5 unknown'\n    },\n    contains: [\n      hljs.HASH_COMMENT_MODE,\n      hljs.NUMBER_MODE,\n      hljs.QUOTE_STRING_MODE,\n      MACRO,\n      TABLE\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/pf.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/php.js":
/*!********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/php.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var VARIABLE = {\n    begin: '\\\\$+[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*'\n  };\n  var PREPROCESSOR = {\n    className: 'meta', begin: /<\\?(php)?|\\?>/\n  };\n  var STRING = {\n    className: 'string',\n    contains: [hljs.BACKSLASH_ESCAPE, PREPROCESSOR],\n    variants: [\n      {\n        begin: 'b\"', end: '\"'\n      },\n      {\n        begin: 'b\\'', end: '\\''\n      },\n      hljs.inherit(hljs.APOS_STRING_MODE, {illegal: null}),\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null})\n    ]\n  };\n  var NUMBER = {variants: [hljs.BINARY_NUMBER_MODE, hljs.C_NUMBER_MODE]};\n  return {\n    aliases: ['php3', 'php4', 'php5', 'php6'],\n    case_insensitive: true,\n    keywords:\n      'and include_once list abstract global private echo interface as static endswitch ' +\n      'array null if endwhile or const for endforeach self var while isset public ' +\n      'protected exit foreach throw elseif include __FILE__ empty require_once do xor ' +\n      'return parent clone use __CLASS__ __LINE__ else break print eval new ' +\n      'catch __METHOD__ case exception default die require __FUNCTION__ ' +\n      'enddeclare final try switch continue endfor endif declare unset true false ' +\n      'trait goto instanceof insteadof __DIR__ __NAMESPACE__ ' +\n      'yield finally',\n    contains: [\n      hljs.HASH_COMMENT_MODE,\n      hljs.COMMENT('//', '$', {contains: [PREPROCESSOR]}),\n      hljs.COMMENT(\n        '/\\\\*',\n        '\\\\*/',\n        {\n          contains: [\n            {\n              className: 'doctag',\n              begin: '@[A-Za-z]+'\n            }\n          ]\n        }\n      ),\n      hljs.COMMENT(\n        '__halt_compiler.+?;',\n        false,\n        {\n          endsWithParent: true,\n          keywords: '__halt_compiler',\n          lexemes: hljs.UNDERSCORE_IDENT_RE\n        }\n      ),\n      {\n        className: 'string',\n        begin: /<<<['\"]?\\w+['\"]?$/, end: /^\\w+;?$/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          {\n            className: 'subst',\n            variants: [\n              {begin: /\\$\\w+/},\n              {begin: /\\{\\$/, end: /\\}/}\n            ]\n          }\n        ]\n      },\n      PREPROCESSOR,\n      {\n        className: 'keyword', begin: /\\$this\\b/\n      },\n      VARIABLE,\n      {\n        // swallow composed identifiers to avoid parsing them as keywords\n        begin: /(::|->)+[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*/\n      },\n      {\n        className: 'function',\n        beginKeywords: 'function', end: /[;{]/, excludeEnd: true,\n        illegal: '\\\\$|\\\\[|%',\n        contains: [\n          hljs.UNDERSCORE_TITLE_MODE,\n          {\n            className: 'params',\n            begin: '\\\\(', end: '\\\\)',\n            contains: [\n              'self',\n              VARIABLE,\n              hljs.C_BLOCK_COMMENT_MODE,\n              STRING,\n              NUMBER\n            ]\n          }\n        ]\n      },\n      {\n        className: 'class',\n        beginKeywords: 'class interface', end: '{', excludeEnd: true,\n        illegal: /[:\\(\\$\"]/,\n        contains: [\n          {beginKeywords: 'extends implements'},\n          hljs.UNDERSCORE_TITLE_MODE\n        ]\n      },\n      {\n        beginKeywords: 'namespace', end: ';',\n        illegal: /[\\.']/,\n        contains: [hljs.UNDERSCORE_TITLE_MODE]\n      },\n      {\n        beginKeywords: 'use', end: ';',\n        contains: [hljs.UNDERSCORE_TITLE_MODE]\n      },\n      {\n        begin: '=>' // No markup, just a relevance booster\n      },\n      STRING,\n      NUMBER\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/php.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/pony.js":
/*!*********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/pony.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var KEYWORDS = {\n    keyword:\n      'actor addressof and as be break class compile_error compile_intrinsic' +\n      'consume continue delegate digestof do else elseif embed end error' +\n      'for fun if ifdef in interface is isnt lambda let match new not object' +\n      'or primitive recover repeat return struct then trait try type until ' +\n      'use var where while with xor',\n    meta:\n      'iso val tag trn box ref',\n    literal:\n      'this false true'\n  };\n\n  var TRIPLE_QUOTE_STRING_MODE = {\n    className: 'string',\n    begin: '\"\"\"', end: '\"\"\"',\n    relevance: 10\n  };\n\n  var QUOTE_STRING_MODE = {\n    className: 'string',\n    begin: '\"', end: '\"',\n    contains: [hljs.BACKSLASH_ESCAPE]\n  };\n\n  var SINGLE_QUOTE_CHAR_MODE = {\n    className: 'string',\n    begin: '\\'', end: '\\'',\n    contains: [hljs.BACKSLASH_ESCAPE],\n    relevance: 0\n  };\n\n  var TYPE_NAME = {\n    className: 'type',\n    begin: '\\\\b_?[A-Z][\\\\w]*',\n    relevance: 0\n  };\n\n  var PRIMED_NAME = {\n    begin: hljs.IDENT_RE + '\\'', relevance: 0\n  };\n\n  var CLASS = {\n    className: 'class',\n    beginKeywords: 'class actor', end: '$',\n    contains: [\n      hljs.TITLE_MODE,\n      hljs.C_LINE_COMMENT_MODE\n    ]\n  }\n\n  var FUNCTION = {\n    className: 'function',\n    beginKeywords: 'new fun', end: '=>',\n    contains: [\n      hljs.TITLE_MODE,\n      {\n        begin: /\\(/, end: /\\)/,\n        contains: [\n          TYPE_NAME,\n          PRIMED_NAME,\n          hljs.C_NUMBER_MODE,\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      },\n      {\n        begin: /:/, endsWithParent: true,\n        contains: [TYPE_NAME]\n      },\n      hljs.C_LINE_COMMENT_MODE\n    ]\n  }\n\n  return {\n    keywords: KEYWORDS,\n    contains: [\n      CLASS,\n      FUNCTION,\n      TYPE_NAME,\n      TRIPLE_QUOTE_STRING_MODE,\n      QUOTE_STRING_MODE,\n      SINGLE_QUOTE_CHAR_MODE,\n      PRIMED_NAME,\n      hljs.C_NUMBER_MODE,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/pony.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/powershell.js":
/*!***************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/powershell.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var BACKTICK_ESCAPE = {\n    begin: '`[\\\\s\\\\S]',\n    relevance: 0\n  };\n  var VAR = {\n    className: 'variable',\n    variants: [\n      {begin: /\\$[\\w\\d][\\w\\d_:]*/}\n    ]\n  };\n  var LITERAL = {\n    className: 'literal',\n    begin: /\\$(null|true|false)\\b/\n  };\n  var QUOTE_STRING = {\n    className: 'string',\n    variants: [\n      { begin: /\"/, end: /\"/ },\n      { begin: /@\"/, end: /^\"@/ }\n    ],\n    contains: [\n      BACKTICK_ESCAPE,\n      VAR,\n      {\n        className: 'variable',\n        begin: /\\$[A-z]/, end: /[^A-z]/\n      }\n    ]\n  };\n  var APOS_STRING = {\n    className: 'string',\n    variants: [\n      { begin: /'/, end: /'/ },\n      { begin: /@'/, end: /^'@/ }\n    ]\n  };\n\n  var PS_HELPTAGS = {\n    className: 'doctag',\n    variants: [\n      /* no paramater help tags */ \n      { begin: /\\.(synopsis|description|example|inputs|outputs|notes|link|component|role|functionality)/ },\n      /* one parameter help tags */\n      { begin: /\\.(parameter|forwardhelptargetname|forwardhelpcategory|remotehelprunspace|externalhelp)\\s+\\S+/ }\n    ]\n  };\n  var PS_COMMENT = hljs.inherit(\n    hljs.COMMENT(null, null),\n    {\n      variants: [\n        /* single-line comment */\n        { begin: /#/, end: /$/ },\n        /* multi-line comment */\n        { begin: /<#/, end: /#>/ }\n      ],\n      contains: [PS_HELPTAGS]\n    }\n  );\n\n  return {\n    aliases: ['ps'],\n    lexemes: /-?[A-z\\.\\-]+/,\n    case_insensitive: true,\n    keywords: {\n      keyword: 'if else foreach return function do while until elseif begin for trap data dynamicparam end break throw param continue finally in switch exit filter try process catch',\n      built_in: 'Add-Computer Add-Content Add-History Add-JobTrigger Add-Member Add-PSSnapin Add-Type Checkpoint-Computer Clear-Content Clear-EventLog Clear-History Clear-Host Clear-Item Clear-ItemProperty Clear-Variable Compare-Object Complete-Transaction Connect-PSSession Connect-WSMan Convert-Path ConvertFrom-Csv ConvertFrom-Json ConvertFrom-SecureString ConvertFrom-StringData ConvertTo-Csv ConvertTo-Html ConvertTo-Json ConvertTo-SecureString ConvertTo-Xml Copy-Item Copy-ItemProperty Debug-Process Disable-ComputerRestore Disable-JobTrigger Disable-PSBreakpoint Disable-PSRemoting Disable-PSSessionConfiguration Disable-WSManCredSSP Disconnect-PSSession Disconnect-WSMan Disable-ScheduledJob Enable-ComputerRestore Enable-JobTrigger Enable-PSBreakpoint Enable-PSRemoting Enable-PSSessionConfiguration Enable-ScheduledJob Enable-WSManCredSSP Enter-PSSession Exit-PSSession Export-Alias Export-Clixml Export-Console Export-Counter Export-Csv Export-FormatData Export-ModuleMember Export-PSSession ForEach-Object Format-Custom Format-List Format-Table Format-Wide Get-Acl Get-Alias Get-AuthenticodeSignature Get-ChildItem Get-Command Get-ComputerRestorePoint Get-Content Get-ControlPanelItem Get-Counter Get-Credential Get-Culture Get-Date Get-Event Get-EventLog Get-EventSubscriber Get-ExecutionPolicy Get-FormatData Get-Host Get-HotFix Get-Help Get-History Get-IseSnippet Get-Item Get-ItemProperty Get-Job Get-JobTrigger Get-Location Get-Member Get-Module Get-PfxCertificate Get-Process Get-PSBreakpoint Get-PSCallStack Get-PSDrive Get-PSProvider Get-PSSession Get-PSSessionConfiguration Get-PSSnapin Get-Random Get-ScheduledJob Get-ScheduledJobOption Get-Service Get-TraceSource Get-Transaction Get-TypeData Get-UICulture Get-Unique Get-Variable Get-Verb Get-WinEvent Get-WmiObject Get-WSManCredSSP Get-WSManInstance Group-Object Import-Alias Import-Clixml Import-Counter Import-Csv Import-IseSnippet Import-LocalizedData Import-PSSession Import-Module Invoke-AsWorkflow Invoke-Command Invoke-Expression Invoke-History Invoke-Item Invoke-RestMethod Invoke-WebRequest Invoke-WmiMethod Invoke-WSManAction Join-Path Limit-EventLog Measure-Command Measure-Object Move-Item Move-ItemProperty New-Alias New-Event New-EventLog New-IseSnippet New-Item New-ItemProperty New-JobTrigger New-Object New-Module New-ModuleManifest New-PSDrive New-PSSession New-PSSessionConfigurationFile New-PSSessionOption New-PSTransportOption New-PSWorkflowExecutionOption New-PSWorkflowSession New-ScheduledJobOption New-Service New-TimeSpan New-Variable New-WebServiceProxy New-WinEvent New-WSManInstance New-WSManSessionOption Out-Default Out-File Out-GridView Out-Host Out-Null Out-Printer Out-String Pop-Location Push-Location Read-Host Receive-Job Register-EngineEvent Register-ObjectEvent Register-PSSessionConfiguration Register-ScheduledJob Register-WmiEvent Remove-Computer Remove-Event Remove-EventLog Remove-Item Remove-ItemProperty Remove-Job Remove-JobTrigger Remove-Module Remove-PSBreakpoint Remove-PSDrive Remove-PSSession Remove-PSSnapin Remove-TypeData Remove-Variable Remove-WmiObject Remove-WSManInstance Rename-Computer Rename-Item Rename-ItemProperty Reset-ComputerMachinePassword Resolve-Path Restart-Computer Restart-Service Restore-Computer Resume-Job Resume-Service Save-Help Select-Object Select-String Select-Xml Send-MailMessage Set-Acl Set-Alias Set-AuthenticodeSignature Set-Content Set-Date Set-ExecutionPolicy Set-Item Set-ItemProperty Set-JobTrigger Set-Location Set-PSBreakpoint Set-PSDebug Set-PSSessionConfiguration Set-ScheduledJob Set-ScheduledJobOption Set-Service Set-StrictMode Set-TraceSource Set-Variable Set-WmiInstance Set-WSManInstance Set-WSManQuickConfig Show-Command Show-ControlPanelItem Show-EventLog Sort-Object Split-Path Start-Job Start-Process Start-Service Start-Sleep Start-Transaction Start-Transcript Stop-Computer Stop-Job Stop-Process Stop-Service Stop-Transcript Suspend-Job Suspend-Service Tee-Object Test-ComputerSecureChannel Test-Connection Test-ModuleManifest Test-Path Test-PSSessionConfigurationFile Trace-Command Unblock-File Undo-Transaction Unregister-Event Unregister-PSSessionConfiguration Unregister-ScheduledJob Update-FormatData Update-Help Update-List Update-TypeData Use-Transaction Wait-Event Wait-Job Wait-Process Where-Object Write-Debug Write-Error Write-EventLog Write-Host Write-Output Write-Progress Write-Verbose Write-Warning Add-MDTPersistentDrive Disable-MDTMonitorService Enable-MDTMonitorService Get-MDTDeploymentShareStatistics Get-MDTMonitorData Get-MDTOperatingSystemCatalog Get-MDTPersistentDrive Import-MDTApplication Import-MDTDriver Import-MDTOperatingSystem Import-MDTPackage Import-MDTTaskSequence New-MDTDatabase Remove-MDTMonitorData Remove-MDTPersistentDrive Restore-MDTPersistentDrive Set-MDTMonitorData Test-MDTDeploymentShare Test-MDTMonitorData Update-MDTDatabaseSchema Update-MDTDeploymentShare Update-MDTLinkedDS Update-MDTMedia Update-MDTMedia Add-VamtProductKey Export-VamtData Find-VamtManagedMachine Get-VamtConfirmationId Get-VamtProduct Get-VamtProductKey Import-VamtData Initialize-VamtData Install-VamtConfirmationId Install-VamtProductActivation Install-VamtProductKey Update-VamtProduct',\n      nomarkup: '-ne -eq -lt -gt -ge -le -not -like -notlike -match -notmatch -contains -notcontains -in -notin -replace'\n    },\n    contains: [\n      BACKTICK_ESCAPE,\n      hljs.NUMBER_MODE,\n      QUOTE_STRING,\n      APOS_STRING,\n      LITERAL,\n      VAR,\n      PS_COMMENT\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/powershell.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/processing.js":
/*!***************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/processing.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  return {\n    keywords: {\n      keyword: 'BufferedReader PVector PFont PImage PGraphics HashMap boolean byte char color ' +\n        'double float int long String Array FloatDict FloatList IntDict IntList JSONArray JSONObject ' +\n        'Object StringDict StringList Table TableRow XML ' +\n        // Java keywords\n        'false synchronized int abstract float private char boolean static null if const ' +\n        'for true while long throw strictfp finally protected import native final return void ' +\n        'enum else break transient new catch instanceof byte super volatile case assert short ' +\n        'package default double public try this switch continue throws protected public private',\n      literal: 'P2D P3D HALF_PI PI QUARTER_PI TAU TWO_PI',\n      title: 'setup draw',\n      built_in: 'displayHeight displayWidth mouseY mouseX mousePressed pmouseX pmouseY key ' +\n        'keyCode pixels focused frameCount frameRate height width ' +\n        'size createGraphics beginDraw createShape loadShape PShape arc ellipse line point ' +\n        'quad rect triangle bezier bezierDetail bezierPoint bezierTangent curve curveDetail curvePoint ' +\n        'curveTangent curveTightness shape shapeMode beginContour beginShape bezierVertex curveVertex ' +\n        'endContour endShape quadraticVertex vertex ellipseMode noSmooth rectMode smooth strokeCap ' +\n        'strokeJoin strokeWeight mouseClicked mouseDragged mouseMoved mousePressed mouseReleased ' +\n        'mouseWheel keyPressed keyPressedkeyReleased keyTyped print println save saveFrame day hour ' +\n        'millis minute month second year background clear colorMode fill noFill noStroke stroke alpha ' +\n        'blue brightness color green hue lerpColor red saturation modelX modelY modelZ screenX screenY ' +\n        'screenZ ambient emissive shininess specular add createImage beginCamera camera endCamera frustum ' +\n        'ortho perspective printCamera printProjection cursor frameRate noCursor exit loop noLoop popStyle ' +\n        'pushStyle redraw binary boolean byte char float hex int str unbinary unhex join match matchAll nf ' +\n        'nfc nfp nfs split splitTokens trim append arrayCopy concat expand reverse shorten sort splice subset ' +\n        'box sphere sphereDetail createInput createReader loadBytes loadJSONArray loadJSONObject loadStrings ' +\n        'loadTable loadXML open parseXML saveTable selectFolder selectInput beginRaw beginRecord createOutput ' +\n        'createWriter endRaw endRecord PrintWritersaveBytes saveJSONArray saveJSONObject saveStream saveStrings ' +\n        'saveXML selectOutput popMatrix printMatrix pushMatrix resetMatrix rotate rotateX rotateY rotateZ scale ' +\n        'shearX shearY translate ambientLight directionalLight lightFalloff lights lightSpecular noLights normal ' +\n        'pointLight spotLight image imageMode loadImage noTint requestImage tint texture textureMode textureWrap ' +\n        'blend copy filter get loadPixels set updatePixels blendMode loadShader PShaderresetShader shader createFont ' +\n        'loadFont text textFont textAlign textLeading textMode textSize textWidth textAscent textDescent abs ceil ' +\n        'constrain dist exp floor lerp log mag map max min norm pow round sq sqrt acos asin atan atan2 cos degrees ' +\n        'radians sin tan noise noiseDetail noiseSeed random randomGaussian randomSeed'\n    },\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_NUMBER_MODE\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/processing.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/profile.js":
/*!************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/profile.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  return {\n    contains: [\n      hljs.C_NUMBER_MODE,\n      {\n        begin: '[a-zA-Z_][\\\\da-zA-Z_]+\\\\.[\\\\da-zA-Z_]{1,3}', end: ':',\n        excludeEnd: true\n      },\n      {\n        begin: '(ncalls|tottime|cumtime)', end: '$',\n        keywords: 'ncalls tottime|10 cumtime|10 filename',\n        relevance: 10\n      },\n      {\n        begin: 'function calls', end: '$',\n        contains: [hljs.C_NUMBER_MODE],\n        relevance: 10\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      {\n        className: 'string',\n        begin: '\\\\(', end: '\\\\)$',\n        excludeBegin: true, excludeEnd: true,\n        relevance: 0\n      }\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/profile.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/prolog.js":
/*!***********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/prolog.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n\n  var ATOM = {\n\n    begin: /[a-z][A-Za-z0-9_]*/,\n    relevance: 0\n  };\n\n  var VAR = {\n\n    className: 'symbol',\n    variants: [\n      {begin: /[A-Z][a-zA-Z0-9_]*/},\n      {begin: /_[A-Za-z0-9_]*/},\n    ],\n    relevance: 0\n  };\n\n  var PARENTED = {\n\n    begin: /\\(/,\n    end: /\\)/,\n    relevance: 0\n  };\n\n  var LIST = {\n\n    begin: /\\[/,\n    end: /\\]/\n  };\n\n  var LINE_COMMENT = {\n\n    className: 'comment',\n    begin: /%/, end: /$/,\n    contains: [hljs.PHRASAL_WORDS_MODE]\n  };\n\n  var BACKTICK_STRING = {\n\n    className: 'string',\n    begin: /`/, end: /`/,\n    contains: [hljs.BACKSLASH_ESCAPE]\n  };\n\n  var CHAR_CODE = {\n\n    className: 'string', // 0'a etc.\n    begin: /0\\'(\\\\\\'|.)/\n  };\n\n  var SPACE_CODE = {\n\n    className: 'string',\n    begin: /0\\'\\\\s/ // 0'\\s\n  };\n\n  var PRED_OP = { // relevance booster\n    begin: /:-/\n  };\n\n  var inner = [\n\n    ATOM,\n    VAR,\n    PARENTED,\n    PRED_OP,\n    LIST,\n    LINE_COMMENT,\n    hljs.C_BLOCK_COMMENT_MODE,\n    hljs.QUOTE_STRING_MODE,\n    hljs.APOS_STRING_MODE,\n    BACKTICK_STRING,\n    CHAR_CODE,\n    SPACE_CODE,\n    hljs.C_NUMBER_MODE\n  ];\n\n  PARENTED.contains = inner;\n  LIST.contains = inner;\n\n  return {\n    contains: inner.concat([\n      {begin: /\\.$/} // relevance booster\n    ])\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/prolog.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/protobuf.js":
/*!*************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/protobuf.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  return {\n    keywords: {\n      keyword: 'package import option optional required repeated group',\n      built_in: 'double float int32 int64 uint32 uint64 sint32 sint64 ' +\n        'fixed32 fixed64 sfixed32 sfixed64 bool string bytes',\n      literal: 'true false'\n    },\n    contains: [\n      hljs.QUOTE_STRING_MODE,\n      hljs.NUMBER_MODE,\n      hljs.C_LINE_COMMENT_MODE,\n      {\n        className: 'class',\n        beginKeywords: 'message enum service', end: /\\{/,\n        illegal: /\\n/,\n        contains: [\n          hljs.inherit(hljs.TITLE_MODE, {\n            starts: {endsWithParent: true, excludeEnd: true} // hack: eating everything after the first title\n          })\n        ]\n      },\n      {\n        className: 'function',\n        beginKeywords: 'rpc',\n        end: /;/, excludeEnd: true,\n        keywords: 'rpc returns'\n      },\n      {\n        begin: /^\\s*[A-Z_]+/,\n        end: /\\s*=/, excludeEnd: true\n      }\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/protobuf.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/puppet.js":
/*!***********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/puppet.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n\n  var PUPPET_KEYWORDS = {\n    keyword:\n    /* language keywords */\n      'and case default else elsif false if in import enherits node or true undef unless main settings $string ',\n    literal:\n    /* metaparameters */\n      'alias audit before loglevel noop require subscribe tag ' +\n    /* normal attributes */\n      'owner ensure group mode name|0 changes context force incl lens load_path onlyif provider returns root show_diff type_check ' +\n      'en_address ip_address realname command environment hour monute month monthday special target weekday '+\n      'creates cwd ogoutput refresh refreshonly tries try_sleep umask backup checksum content ctime force ignore ' +\n      'links mtime purge recurse recurselimit replace selinux_ignore_defaults selrange selrole seltype seluser source ' +\n      'souirce_permissions sourceselect validate_cmd validate_replacement allowdupe attribute_membership auth_membership forcelocal gid '+\n      'ia_load_module members system host_aliases ip allowed_trunk_vlans description device_url duplex encapsulation etherchannel ' +\n      'native_vlan speed principals allow_root auth_class auth_type authenticate_user k_of_n mechanisms rule session_owner shared options ' +\n      'device fstype enable hasrestart directory present absent link atboot blockdevice device dump pass remounts poller_tag use ' +\n      'message withpath adminfile allow_virtual allowcdrom category configfiles flavor install_options instance package_settings platform ' +\n      'responsefile status uninstall_options vendor unless_system_user unless_uid binary control flags hasstatus manifest pattern restart running ' +\n      'start stop allowdupe auths expiry gid groups home iterations key_membership keys managehome membership password password_max_age ' +\n      'password_min_age profile_membership profiles project purge_ssh_keys role_membership roles salt shell uid baseurl cost descr enabled ' +\n      'enablegroups exclude failovermethod gpgcheck gpgkey http_caching include includepkgs keepalive metadata_expire metalink mirrorlist ' +\n      'priority protect proxy proxy_password proxy_username repo_gpgcheck s3_enabled skip_if_unavailable sslcacert sslclientcert sslclientkey ' +\n      'sslverify mounted',\n    built_in:\n    /* core facts */\n      'architecture augeasversion blockdevices boardmanufacturer boardproductname boardserialnumber cfkey dhcp_servers ' +\n      'domain ec2_ ec2_userdata facterversion filesystems ldom fqdn gid hardwareisa hardwaremodel hostname id|0 interfaces '+\n      'ipaddress ipaddress_ ipaddress6 ipaddress6_ iphostnumber is_virtual kernel kernelmajversion kernelrelease kernelversion ' +\n      'kernelrelease kernelversion lsbdistcodename lsbdistdescription lsbdistid lsbdistrelease lsbmajdistrelease lsbminordistrelease ' +\n      'lsbrelease macaddress macaddress_ macosx_buildversion macosx_productname macosx_productversion macosx_productverson_major ' +\n      'macosx_productversion_minor manufacturer memoryfree memorysize netmask metmask_ network_ operatingsystem operatingsystemmajrelease '+\n      'operatingsystemrelease osfamily partitions path physicalprocessorcount processor processorcount productname ps puppetversion '+\n      'rubysitedir rubyversion selinux selinux_config_mode selinux_config_policy selinux_current_mode selinux_current_mode selinux_enforced '+\n      'selinux_policyversion serialnumber sp_ sshdsakey sshecdsakey sshrsakey swapencrypted swapfree swapsize timezone type uniqueid uptime '+\n      'uptime_days uptime_hours uptime_seconds uuid virtual vlans xendomains zfs_version zonenae zones zpool_version'\n  };\n\n  var COMMENT = hljs.COMMENT('#', '$');\n\n  var IDENT_RE = '([A-Za-z_]|::)(\\\\w|::)*';\n\n  var TITLE = hljs.inherit(hljs.TITLE_MODE, {begin: IDENT_RE});\n\n  var VARIABLE = {className: 'variable', begin: '\\\\$' + IDENT_RE};\n\n  var STRING = {\n    className: 'string',\n    contains: [hljs.BACKSLASH_ESCAPE, VARIABLE],\n    variants: [\n      {begin: /'/, end: /'/},\n      {begin: /\"/, end: /\"/}\n    ]\n  };\n\n  return {\n    aliases: ['pp'],\n    contains: [\n      COMMENT,\n      VARIABLE,\n      STRING,\n      {\n        beginKeywords: 'class', end: '\\\\{|;',\n        illegal: /=/,\n        contains: [TITLE, COMMENT]\n      },\n      {\n        beginKeywords: 'define', end: /\\{/,\n        contains: [\n          {\n            className: 'section', begin: hljs.IDENT_RE, endsParent: true\n          }\n        ]\n      },\n      {\n        begin: hljs.IDENT_RE + '\\\\s+\\\\{', returnBegin: true,\n        end: /\\S/,\n        contains: [\n          {\n            className: 'keyword',\n            begin: hljs.IDENT_RE\n          },\n          {\n            begin: /\\{/, end: /\\}/,\n            keywords: PUPPET_KEYWORDS,\n            relevance: 0,\n            contains: [\n              STRING,\n              COMMENT,\n              {\n                begin:'[a-zA-Z_]+\\\\s*=>',\n                returnBegin: true, end: '=>',\n                contains: [\n                  {\n                    className: 'attr',\n                    begin: hljs.IDENT_RE,\n                  }\n                ]\n              },\n              {\n                className: 'number',\n                begin: '(\\\\b0[0-7_]+)|(\\\\b0x[0-9a-fA-F_]+)|(\\\\b[1-9][0-9_]*(\\\\.[0-9_]+)?)|[0_]\\\\b',\n                relevance: 0\n              },\n              VARIABLE\n            ]\n          }\n        ],\n        relevance: 0\n      }\n    ]\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/puppet.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/purebasic.js":
/*!**************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/purebasic.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = // Base deafult colors in PB IDE: background: #FFFFDF; foreground: #000000;\n\nfunction(hljs) {\n  var STRINGS = { // PB IDE color: #0080FF (Azure Radiance)\n    className: 'string',\n    begin: '(~)?\"', end: '\"',\n    illegal: '\\\\n'\n  };\n  var CONSTANTS = { // PB IDE color: #924B72 (Cannon Pink)\n    //  \"#\" + a letter or underscore + letters, digits or underscores + (optional) \"$\"\n    className: 'symbol',\n    begin: '#[a-zA-Z_]\\\\w*\\\\$?'\n  };\n\n  return {\n    aliases: ['pb', 'pbi'],\n    keywords: // PB IDE color: #006666 (Blue Stone) + Bold\n      // The following keywords list was taken and adapted from GuShH's PureBasic language file for GeSHi...\n      'And As Break CallDebugger Case CompilerCase CompilerDefault CompilerElse CompilerEndIf CompilerEndSelect ' +\n      'CompilerError CompilerIf CompilerSelect Continue Data DataSection EndDataSection Debug DebugLevel ' +\n      'Default Define Dim DisableASM DisableDebugger DisableExplicit Else ElseIf EnableASM ' +\n      'EnableDebugger EnableExplicit End EndEnumeration EndIf EndImport EndInterface EndMacro EndProcedure ' +\n      'EndSelect EndStructure EndStructureUnion EndWith Enumeration Extends FakeReturn For Next ForEach ' +\n      'ForEver Global Gosub Goto If Import ImportC IncludeBinary IncludeFile IncludePath Interface Macro ' +\n      'NewList Not Or ProcedureReturn Protected Prototype ' +\n      'PrototypeC Read ReDim Repeat Until Restore Return Select Shared Static Step Structure StructureUnion ' +\n      'Swap To Wend While With XIncludeFile XOr ' +\n      'Procedure ProcedureC ProcedureCDLL ProcedureDLL Declare DeclareC DeclareCDLL DeclareDLL',\n    contains: [\n      // COMMENTS | PB IDE color: #00AAAA (Persian Green)\n      hljs.COMMENT(';', '$', {relevance: 0}),\n\n      { // PROCEDURES DEFINITIONS\n        className: 'function',\n        begin: '\\\\b(Procedure|Declare)(C|CDLL|DLL)?\\\\b',\n        end: '\\\\(',\n        excludeEnd: true,\n        returnBegin: true,\n        contains: [\n          { // PROCEDURE KEYWORDS | PB IDE color: #006666 (Blue Stone) + Bold\n            className: 'keyword',\n            begin: '(Procedure|Declare)(C|CDLL|DLL)?',\n            excludeEnd: true\n          },\n          { // PROCEDURE RETURN TYPE SETTING | PB IDE color: #000000 (Black)\n            className: 'type',\n            begin: '\\\\.\\\\w*'\n            // end: ' ',\n          },\n          hljs.UNDERSCORE_TITLE_MODE // PROCEDURE NAME | PB IDE color: #006666 (Blue Stone)\n        ]\n      },\n      STRINGS,\n      CONSTANTS\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/purebasic.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/python.js":
/*!***********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/python.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var KEYWORDS = {\n    keyword:\n      'and elif is global as in if from raise for except finally print import pass return ' +\n      'exec else break not with class assert yield try while continue del or def lambda ' +\n      'async await nonlocal|10 None True False',\n    built_in:\n      'Ellipsis NotImplemented'\n  };\n  var PROMPT = {\n    className: 'meta',  begin: /^(>>>|\\.\\.\\.) /\n  };\n  var SUBST = {\n    className: 'subst',\n    begin: /\\{/, end: /\\}/,\n    keywords: KEYWORDS,\n    illegal: /#/\n  };\n  var STRING = {\n    className: 'string',\n    contains: [hljs.BACKSLASH_ESCAPE],\n    variants: [\n      {\n        begin: /(u|b)?r?'''/, end: /'''/,\n        contains: [PROMPT],\n        relevance: 10\n      },\n      {\n        begin: /(u|b)?r?\"\"\"/, end: /\"\"\"/,\n        contains: [PROMPT],\n        relevance: 10\n      },\n      {\n        begin: /(fr|rf|f)'''/, end: /'''/,\n        contains: [PROMPT, SUBST]\n      },\n      {\n        begin: /(fr|rf|f)\"\"\"/, end: /\"\"\"/,\n        contains: [PROMPT, SUBST]\n      },\n      {\n        begin: /(u|r|ur)'/, end: /'/,\n        relevance: 10\n      },\n      {\n        begin: /(u|r|ur)\"/, end: /\"/,\n        relevance: 10\n      },\n      {\n        begin: /(b|br)'/, end: /'/\n      },\n      {\n        begin: /(b|br)\"/, end: /\"/\n      },\n      {\n        begin: /(fr|rf|f)'/, end: /'/,\n        contains: [SUBST]\n      },\n      {\n        begin: /(fr|rf|f)\"/, end: /\"/,\n        contains: [SUBST]\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE\n    ]\n  };\n  var NUMBER = {\n    className: 'number', relevance: 0,\n    variants: [\n      {begin: hljs.BINARY_NUMBER_RE + '[lLjJ]?'},\n      {begin: '\\\\b(0o[0-7]+)[lLjJ]?'},\n      {begin: hljs.C_NUMBER_RE + '[lLjJ]?'}\n    ]\n  };\n  var PARAMS = {\n    className: 'params',\n    begin: /\\(/, end: /\\)/,\n    contains: ['self', PROMPT, NUMBER, STRING]\n  };\n  SUBST.contains = [STRING, NUMBER, PROMPT];\n  return {\n    aliases: ['py', 'gyp'],\n    keywords: KEYWORDS,\n    illegal: /(<\\/|->|\\?)|=>/,\n    contains: [\n      PROMPT,\n      NUMBER,\n      STRING,\n      hljs.HASH_COMMENT_MODE,\n      {\n        variants: [\n          {className: 'function', beginKeywords: 'def'},\n          {className: 'class', beginKeywords: 'class'}\n        ],\n        end: /:/,\n        illegal: /[${=;\\n,]/,\n        contains: [\n          hljs.UNDERSCORE_TITLE_MODE,\n          PARAMS,\n          {\n            begin: /->/, endsWithParent: true,\n            keywords: 'None'\n          }\n        ]\n      },\n      {\n        className: 'meta',\n        begin: /^[\\t ]*@/, end: /$/\n      },\n      {\n        begin: /\\b(print|exec)\\(/ // don’t highlight keywords-turned-functions in Python 3\n      }\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/python.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/q.js":
/*!******************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/q.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var Q_KEYWORDS = {\n  keyword:\n    'do while select delete by update from',\n  literal:\n    '0b 1b',\n  built_in:\n    'neg not null string reciprocal floor ceiling signum mod xbar xlog and or each scan over prior mmu lsq inv md5 ltime gtime count first var dev med cov cor all any rand sums prds mins maxs fills deltas ratios avgs differ prev next rank reverse iasc idesc asc desc msum mcount mavg mdev xrank mmin mmax xprev rotate distinct group where flip type key til get value attr cut set upsert raze union inter except cross sv vs sublist enlist read0 read1 hopen hclose hdel hsym hcount peach system ltrim rtrim trim lower upper ssr view tables views cols xcols keys xkey xcol xasc xdesc fkeys meta lj aj aj0 ij pj asof uj ww wj wj1 fby xgroup ungroup ej save load rsave rload show csv parse eval min max avg wavg wsum sin cos tan sum',\n  type:\n    '`float `double int `timestamp `timespan `datetime `time `boolean `symbol `char `byte `short `long `real `month `date `minute `second `guid'\n  };\n  return {\n  aliases:['k', 'kdb'],\n  keywords: Q_KEYWORDS,\n  lexemes: /(`?)[A-Za-z0-9_]+\\b/,\n  contains: [\n  hljs.C_LINE_COMMENT_MODE,\n    hljs.QUOTE_STRING_MODE,\n    hljs.C_NUMBER_MODE\n     ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/q.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/qml.js":
/*!********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/qml.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var KEYWORDS = {\n      keyword:\n        'in of on if for while finally var new function do return void else break catch ' +\n        'instanceof with throw case default try this switch continue typeof delete ' +\n        'let yield const export super debugger as async await import',\n      literal:\n        'true false null undefined NaN Infinity',\n      built_in:\n        'eval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent ' +\n        'encodeURI encodeURIComponent escape unescape Object Function Boolean Error ' +\n        'EvalError InternalError RangeError ReferenceError StopIteration SyntaxError ' +\n        'TypeError URIError Number Math Date String RegExp Array Float32Array ' +\n        'Float64Array Int16Array Int32Array Int8Array Uint16Array Uint32Array ' +\n        'Uint8Array Uint8ClampedArray ArrayBuffer DataView JSON Intl arguments require ' +\n        'module console window document Symbol Set Map WeakSet WeakMap Proxy Reflect ' +\n        'Behavior bool color coordinate date double enumeration font geocircle georectangle ' +\n        'geoshape int list matrix4x4 parent point quaternion real rect ' +\n        'size string url variant vector2d vector3d vector4d' +\n        'Promise'\n    };\n\n  var QML_IDENT_RE = '[a-zA-Z_][a-zA-Z0-9\\\\._]*';\n\n  // Isolate property statements. Ends at a :, =, ;, ,, a comment or end of line.\n  // Use property class.\n  var PROPERTY = {\n      className: 'keyword',\n      begin: '\\\\bproperty\\\\b',\n      starts: {\n        className: 'string',\n        end: '(:|=|;|,|//|/\\\\*|$)',\n        returnEnd: true\n      }\n  };\n\n  // Isolate signal statements. Ends at a ) a comment or end of line.\n  // Use property class.\n  var SIGNAL = {\n      className: 'keyword',\n      begin: '\\\\bsignal\\\\b',\n      starts: {\n        className: 'string',\n        end: '(\\\\(|:|=|;|,|//|/\\\\*|$)',\n        returnEnd: true\n      }\n  };\n\n  // id: is special in QML. When we see id: we want to mark the id: as attribute and\n  // emphasize the token following.\n  var ID_ID = {\n      className: 'attribute',\n      begin: '\\\\bid\\\\s*:',\n      starts: {\n        className: 'string',\n        end: QML_IDENT_RE,\n        returnEnd: false\n      }\n  };\n\n  // Find QML object attribute. An attribute is a QML identifier followed by :.\n  // Unfortunately it's hard to know where it ends, as it may contain scalars,\n  // objects, object definitions, or javascript. The true end is either when the parent\n  // ends or the next attribute is detected.\n  var QML_ATTRIBUTE = {\n    begin: QML_IDENT_RE + '\\\\s*:',\n    returnBegin: true,\n    contains: [\n      {\n        className: 'attribute',\n        begin: QML_IDENT_RE,\n        end: '\\\\s*:',\n        excludeEnd: true,\n        relevance: 0\n      }\n    ],\n    relevance: 0\n  };\n\n  // Find QML object. A QML object is a QML identifier followed by { and ends at the matching }.\n  // All we really care about is finding IDENT followed by { and just mark up the IDENT and ignore the {.\n  var QML_OBJECT = {\n    begin: QML_IDENT_RE + '\\\\s*{', end: '{',\n    returnBegin: true,\n    relevance: 0,\n    contains: [\n      hljs.inherit(hljs.TITLE_MODE, {begin: QML_IDENT_RE})\n    ]\n  };\n\n  return {\n    aliases: ['qt'],\n    case_insensitive: false,\n    keywords: KEYWORDS,\n    contains: [\n      {\n        className: 'meta',\n        begin: /^\\s*['\"]use (strict|asm)['\"]/\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      { // template string\n        className: 'string',\n        begin: '`', end: '`',\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          {\n            className: 'subst',\n            begin: '\\\\$\\\\{', end: '\\\\}'\n          }\n        ]\n      },\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        className: 'number',\n        variants: [\n          { begin: '\\\\b(0[bB][01]+)' },\n          { begin: '\\\\b(0[oO][0-7]+)' },\n          { begin: hljs.C_NUMBER_RE }\n        ],\n        relevance: 0\n      },\n      { // \"value\" container\n        begin: '(' + hljs.RE_STARTERS_RE + '|\\\\b(case|return|throw)\\\\b)\\\\s*',\n        keywords: 'return throw case',\n        contains: [\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          hljs.REGEXP_MODE,\n          { // E4X / JSX\n            begin: /</, end: />\\s*[);\\]]/,\n            relevance: 0,\n            subLanguage: 'xml'\n          }\n        ],\n        relevance: 0\n      },\n      SIGNAL,\n      PROPERTY,\n      {\n        className: 'function',\n        beginKeywords: 'function', end: /\\{/, excludeEnd: true,\n        contains: [\n          hljs.inherit(hljs.TITLE_MODE, {begin: /[A-Za-z$_][0-9A-Za-z$_]*/}),\n          {\n            className: 'params',\n            begin: /\\(/, end: /\\)/,\n            excludeBegin: true,\n            excludeEnd: true,\n            contains: [\n              hljs.C_LINE_COMMENT_MODE,\n              hljs.C_BLOCK_COMMENT_MODE\n            ]\n          }\n        ],\n        illegal: /\\[|%/\n      },\n      {\n        begin: '\\\\.' + hljs.IDENT_RE, relevance: 0 // hack: prevents detection of keywords after dots\n      },\n      ID_ID,\n      QML_ATTRIBUTE,\n      QML_OBJECT\n    ],\n    illegal: /#/\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/qml.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/r.js":
/*!******************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/r.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var IDENT_RE = '([a-zA-Z]|\\\\.[a-zA-Z.])[a-zA-Z0-9._]*';\n\n  return {\n    contains: [\n      hljs.HASH_COMMENT_MODE,\n      {\n        begin: IDENT_RE,\n        lexemes: IDENT_RE,\n        keywords: {\n          keyword:\n            'function if in break next repeat else for return switch while try tryCatch ' +\n            'stop warning require library attach detach source setMethod setGeneric ' +\n            'setGroupGeneric setClass ...',\n          literal:\n            'NULL NA TRUE FALSE T F Inf NaN NA_integer_|10 NA_real_|10 NA_character_|10 ' +\n            'NA_complex_|10'\n        },\n        relevance: 0\n      },\n      {\n        // hex value\n        className: 'number',\n        begin: \"0[xX][0-9a-fA-F]+[Li]?\\\\b\",\n        relevance: 0\n      },\n      {\n        // explicit integer\n        className: 'number',\n        begin: \"\\\\d+(?:[eE][+\\\\-]?\\\\d*)?L\\\\b\",\n        relevance: 0\n      },\n      {\n        // number with trailing decimal\n        className: 'number',\n        begin: \"\\\\d+\\\\.(?!\\\\d)(?:i\\\\b)?\",\n        relevance: 0\n      },\n      {\n        // number\n        className: 'number',\n        begin: \"\\\\d+(?:\\\\.\\\\d*)?(?:[eE][+\\\\-]?\\\\d*)?i?\\\\b\",\n        relevance: 0\n      },\n      {\n        // number with leading decimal\n        className: 'number',\n        begin: \"\\\\.\\\\d+(?:[eE][+\\\\-]?\\\\d*)?i?\\\\b\",\n        relevance: 0\n      },\n\n      {\n        // escaped identifier\n        begin: '`',\n        end: '`',\n        relevance: 0\n      },\n\n      {\n        className: 'string',\n        contains: [hljs.BACKSLASH_ESCAPE],\n        variants: [\n          {begin: '\"', end: '\"'},\n          {begin: \"'\", end: \"'\"}\n        ]\n      }\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/r.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/rib.js":
/*!********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/rib.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  return {\n    keywords:\n      'ArchiveRecord AreaLightSource Atmosphere Attribute AttributeBegin AttributeEnd Basis ' +\n      'Begin Blobby Bound Clipping ClippingPlane Color ColorSamples ConcatTransform Cone ' +\n      'CoordinateSystem CoordSysTransform CropWindow Curves Cylinder DepthOfField Detail ' +\n      'DetailRange Disk Displacement Display End ErrorHandler Exposure Exterior Format ' +\n      'FrameAspectRatio FrameBegin FrameEnd GeneralPolygon GeometricApproximation Geometry ' +\n      'Hider Hyperboloid Identity Illuminate Imager Interior LightSource ' +\n      'MakeCubeFaceEnvironment MakeLatLongEnvironment MakeShadow MakeTexture Matte ' +\n      'MotionBegin MotionEnd NuPatch ObjectBegin ObjectEnd ObjectInstance Opacity Option ' +\n      'Orientation Paraboloid Patch PatchMesh Perspective PixelFilter PixelSamples ' +\n      'PixelVariance Points PointsGeneralPolygons PointsPolygons Polygon Procedural Projection ' +\n      'Quantize ReadArchive RelativeDetail ReverseOrientation Rotate Scale ScreenWindow ' +\n      'ShadingInterpolation ShadingRate Shutter Sides Skew SolidBegin SolidEnd Sphere ' +\n      'SubdivisionMesh Surface TextureCoordinates Torus Transform TransformBegin TransformEnd ' +\n      'TransformPoints Translate TrimCurve WorldBegin WorldEnd',\n    illegal: '</',\n    contains: [\n      hljs.HASH_COMMENT_MODE,\n      hljs.C_NUMBER_MODE,\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/rib.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/roboconf.js":
/*!*************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/roboconf.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var IDENTIFIER = '[a-zA-Z-_][^\\\\n{]+\\\\{';\n\n  var PROPERTY = {\n    className: 'attribute',\n    begin: /[a-zA-Z-_]+/, end: /\\s*:/, excludeEnd: true,\n    starts: {\n      end: ';',\n      relevance: 0,\n      contains: [\n        {\n          className: 'variable',\n          begin: /\\.[a-zA-Z-_]+/\n        },\n        {\n          className: 'keyword',\n          begin: /\\(optional\\)/\n        }\n      ]\n    }\n  };\n\n  return {\n    aliases: ['graph', 'instances'],\n    case_insensitive: true,\n    keywords: 'import',\n    contains: [\n      // Facet sections\n      {\n        begin: '^facet ' + IDENTIFIER,\n        end: '}',\n        keywords: 'facet',\n        contains: [\n          PROPERTY,\n          hljs.HASH_COMMENT_MODE\n        ]\n      },\n\n      // Instance sections\n      {\n        begin: '^\\\\s*instance of ' + IDENTIFIER,\n        end: '}',\n        keywords: 'name count channels instance-data instance-state instance of',\n        illegal: /\\S/,\n        contains: [\n          'self',\n          PROPERTY,\n          hljs.HASH_COMMENT_MODE\n        ]\n      },\n\n      // Component sections\n      {\n        begin: '^' + IDENTIFIER,\n        end: '}',\n        contains: [\n          PROPERTY,\n          hljs.HASH_COMMENT_MODE\n        ]\n      },\n\n      // Comments\n      hljs.HASH_COMMENT_MODE\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/roboconf.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/routeros.js":
/*!*************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/routeros.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = // Colors from RouterOS terminal:\n//   green        - #0E9A00\n//   teal         - #0C9A9A\n//   purple       - #99069A\n//   light-brown  - #9A9900\n\nfunction(hljs) {\n\n  var STATEMENTS = 'foreach do while for if from to step else on-error and or not in';\n\n  // Global commands: Every global command should start with \":\" token, otherwise it will be treated as variable.\n  var GLOBAL_COMMANDS = 'global local beep delay put len typeof pick log time set find environment terminal error execute parse resolve toarray tobool toid toip toip6 tonum tostr totime';\n\n  // Common commands: Following commands available from most sub-menus:\n  var COMMON_COMMANDS = 'add remove enable disable set get print export edit find run debug error info warning';\n\n  var LITERALS = 'true false yes no nothing nil null';\n\n  var OBJECTS = 'traffic-flow traffic-generator firewall scheduler aaa accounting address-list address align area bandwidth-server bfd bgp bridge client clock community config connection console customer default dhcp-client dhcp-server discovery dns e-mail ethernet filter firewall firmware gps graphing group hardware health hotspot identity igmp-proxy incoming instance interface ip ipsec ipv6 irq l2tp-server lcd ldp logging mac-server mac-winbox mangle manual mirror mme mpls nat nd neighbor network note ntp ospf ospf-v3 ovpn-server page peer pim ping policy pool port ppp pppoe-client pptp-server prefix profile proposal proxy queue radius resource rip ripng route routing screen script security-profiles server service service-port settings shares smb sms sniffer snmp snooper socks sstp-server system tool tracking type upgrade upnp user-manager users user vlan secret vrrp watchdog web-access wireless pptp pppoe lan wan layer7-protocol lease simple raw';\n\n  // print parameters\n  // Several parameters are available for print command:\n  // ToDo: var PARAMETERS_PRINT = 'append as-value brief detail count-only file follow follow-only from interval terse value-list without-paging where info';\n  // ToDo: var OPERATORS = '&& and ! not || or in ~ ^ & << >> + - * /';\n  // ToDo: var TYPES = 'num number bool boolean str string ip ip6-prefix id time array';\n  // ToDo: The following tokens serve as delimiters in the grammar: ()  []  {}  :   ;   $   / \n\n  var VAR_PREFIX = 'global local set for foreach';\n\n  var VAR = {\n    className: 'variable',\n    variants: [\n      {begin: /\\$[\\w\\d#@][\\w\\d_]*/},\n      {begin: /\\$\\{(.*?)}/}\n    ]\n  };\n  \n  var QUOTE_STRING = {\n    className: 'string',\n    begin: /\"/, end: /\"/,\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      VAR,\n      {\n        className: 'variable',\n        begin: /\\$\\(/, end: /\\)/,\n        contains: [hljs.BACKSLASH_ESCAPE]\n      }\n    ]\n  };\n  \n  var APOS_STRING = {\n    className: 'string',\n    begin: /'/, end: /'/\n  };\n  \n  var IPADDR = '((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\\\b';\n  var IPADDR_wBITMASK =  IPADDR+'/(3[0-2]|[1-2][0-9]|\\\\d)';\n  //////////////////////////////////////////////////////////////////////\n  return {\n    aliases: ['routeros', 'mikrotik'],\n    case_insensitive: true,\n    lexemes: /:?[\\w-]+/,\n    keywords: {\n      literal: LITERALS,\n      keyword: STATEMENTS + ' :' + STATEMENTS.split(' ').join(' :') + ' :' + GLOBAL_COMMANDS.split(' ').join(' :'),\n    },\n    contains: [\n      { // недопустимые конструкции\n        variants: [\n          { begin: /^@/, end: /$/, },               // dns\n          { begin: /\\/\\*/, end: /\\*\\//, },          // -- comment\n          { begin: /%%/, end: /$/, },               // -- comment\n          { begin: /^'/, end: /$/, },               // Monkey one line comment\n          { begin: /^\\s*\\/[\\w-]+=/, end: /$/, },    // jboss-cli\n          { begin: /\\/\\//, end: /$/, },             // Stan comment\n          { begin: /^\\[\\</, end: /\\>\\]$/, },        // F# class declaration?\n          { begin: /<\\//, end: />/, },              // HTML tags\n          { begin: /^facet /, end: /\\}/, },         // roboconf - лютый костыль )))\n          { begin: '^1\\\\.\\\\.(\\\\d+)$', end: /$/, },  // tap  \n        ],\n        illegal: /./,\n      },\n      hljs.COMMENT('^#', '$'),\n      QUOTE_STRING,\n      APOS_STRING,\n      VAR,\n      { // attribute=value\n        begin: /[\\w-]+\\=([^\\s\\{\\}\\[\\]\\(\\)]+)/, \n        relevance: 0,\n        returnBegin: true,\n        contains: [\n          {\n            className: 'attribute',\n            begin: /[^=]+/\n          },\n          {\n            begin: /=/, \n            endsWithParent:  true,\n            relevance: 0,\n            contains: [\n              QUOTE_STRING,\n              APOS_STRING,\n              VAR,\n              {\n                className: 'literal',\n                begin: '\\\\b(' + LITERALS.split(' ').join('|') + ')\\\\b',\n              },\n              /*{\n                // IPv4 addresses and subnets\n                className: 'number',\n                variants: [\n                  {begin: IPADDR_wBITMASK+'(,'+IPADDR_wBITMASK+')*'}, //192.168.0.0/24,1.2.3.0/24\n                  {begin: IPADDR+'-'+IPADDR},       // 192.168.0.1-192.168.0.3\n                  {begin: IPADDR+'(,'+IPADDR+')*'}, // 192.168.0.1,192.168.0.34,192.168.24.1,192.168.0.1\n                ]\n              }, // */\n              /*{\n                // MAC addresses and DHCP Client IDs\n                className: 'number',\n                begin: /\\b(1:)?([0-9A-Fa-f]{1,2}[:-]){5}([0-9A-Fa-f]){1,2}\\b/,\n              }, //*/\n              {\n                // Не форматировать не классифицированные значения. Необходимо для исключения подсветки значений как built_in.\n                // className: 'number',  \n                begin: /(\"[^\"]*\"|[^\\s\\{\\}\\[\\]]+)/,\n              }, //*/\n            ]\n          } //*/\n        ]\n      },//*/\n      {\n        // HEX values\n        className: 'number',\n        begin: /\\*[0-9a-fA-F]+/,\n      }, //*/\n\n      { \n        begin: '\\\\b(' + COMMON_COMMANDS.split(' ').join('|') + ')([\\\\s\\[\\(]|\\])',\n        returnBegin: true,\n        contains: [\n          {\n            className: 'builtin-name', //'function',\n            begin: /\\w+/,\n          },\n        ],  \n      },\n      \n      { \n        className: 'built_in',\n        variants: [\n          {begin: '(\\\\.\\\\./|/|\\\\s)((' + OBJECTS.split(' ').join('|') + ');?\\\\s)+',relevance: 10,},\n          {begin: /\\.\\./,},\n        ],\n      },//*/\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/routeros.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/rsl.js":
/*!********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/rsl.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  return {\n    keywords: {\n      keyword:\n        'float color point normal vector matrix while for if do return else break extern continue',\n      built_in:\n        'abs acos ambient area asin atan atmosphere attribute calculatenormal ceil cellnoise ' +\n        'clamp comp concat cos degrees depth Deriv diffuse distance Du Dv environment exp ' +\n        'faceforward filterstep floor format fresnel incident length lightsource log match ' +\n        'max min mod noise normalize ntransform opposite option phong pnoise pow printf ' +\n        'ptlined radians random reflect refract renderinfo round setcomp setxcomp setycomp ' +\n        'setzcomp shadow sign sin smoothstep specular specularbrdf spline sqrt step tan ' +\n        'texture textureinfo trace transform vtransform xcomp ycomp zcomp'\n    },\n    illegal: '</',\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.APOS_STRING_MODE,\n      hljs.C_NUMBER_MODE,\n      {\n        className: 'meta',\n        begin: '#', end: '$'\n      },\n      {\n        className: 'class',\n        beginKeywords: 'surface displacement light volume imager', end: '\\\\('\n      },\n      {\n        beginKeywords: 'illuminate illuminance gather', end: '\\\\('\n      }\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/rsl.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/ruby.js":
/*!*********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/ruby.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var RUBY_METHOD_RE = '[a-zA-Z_]\\\\w*[!?=]?|[-+~]\\\\@|<<|>>|=~|===?|<=>|[<>]=?|\\\\*\\\\*|[-/+%^&*~`|]|\\\\[\\\\]=?';\n  var RUBY_KEYWORDS = {\n    keyword:\n      'and then defined module in return redo if BEGIN retry end for self when ' +\n      'next until do begin unless END rescue else break undef not super class case ' +\n      'require yield alias while ensure elsif or include attr_reader attr_writer attr_accessor',\n    literal:\n      'true false nil'\n  };\n  var YARDOCTAG = {\n    className: 'doctag',\n    begin: '@[A-Za-z]+'\n  };\n  var IRB_OBJECT = {\n    begin: '#<', end: '>'\n  };\n  var COMMENT_MODES = [\n    hljs.COMMENT(\n      '#',\n      '$',\n      {\n        contains: [YARDOCTAG]\n      }\n    ),\n    hljs.COMMENT(\n      '^\\\\=begin',\n      '^\\\\=end',\n      {\n        contains: [YARDOCTAG],\n        relevance: 10\n      }\n    ),\n    hljs.COMMENT('^__END__', '\\\\n$')\n  ];\n  var SUBST = {\n    className: 'subst',\n    begin: '#\\\\{', end: '}',\n    keywords: RUBY_KEYWORDS\n  };\n  var STRING = {\n    className: 'string',\n    contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n    variants: [\n      {begin: /'/, end: /'/},\n      {begin: /\"/, end: /\"/},\n      {begin: /`/, end: /`/},\n      {begin: '%[qQwWx]?\\\\(', end: '\\\\)'},\n      {begin: '%[qQwWx]?\\\\[', end: '\\\\]'},\n      {begin: '%[qQwWx]?{', end: '}'},\n      {begin: '%[qQwWx]?<', end: '>'},\n      {begin: '%[qQwWx]?/', end: '/'},\n      {begin: '%[qQwWx]?%', end: '%'},\n      {begin: '%[qQwWx]?-', end: '-'},\n      {begin: '%[qQwWx]?\\\\|', end: '\\\\|'},\n      {\n        // \\B in the beginning suppresses recognition of ?-sequences where ?\n        // is the last character of a preceding identifier, as in: `func?4`\n        begin: /\\B\\?(\\\\\\d{1,3}|\\\\x[A-Fa-f0-9]{1,2}|\\\\u[A-Fa-f0-9]{4}|\\\\?\\S)\\b/\n      },\n      {\n        begin: /<<(-?)\\w+$/, end: /^\\s*\\w+$/,\n      }\n    ]\n  };\n  var PARAMS = {\n    className: 'params',\n    begin: '\\\\(', end: '\\\\)', endsParent: true,\n    keywords: RUBY_KEYWORDS\n  };\n\n  var RUBY_DEFAULT_CONTAINS = [\n    STRING,\n    IRB_OBJECT,\n    {\n      className: 'class',\n      beginKeywords: 'class module', end: '$|;',\n      illegal: /=/,\n      contains: [\n        hljs.inherit(hljs.TITLE_MODE, {begin: '[A-Za-z_]\\\\w*(::\\\\w+)*(\\\\?|\\\\!)?'}),\n        {\n          begin: '<\\\\s*',\n          contains: [{\n            begin: '(' + hljs.IDENT_RE + '::)?' + hljs.IDENT_RE\n          }]\n        }\n      ].concat(COMMENT_MODES)\n    },\n    {\n      className: 'function',\n      beginKeywords: 'def', end: '$|;',\n      contains: [\n        hljs.inherit(hljs.TITLE_MODE, {begin: RUBY_METHOD_RE}),\n        PARAMS\n      ].concat(COMMENT_MODES)\n    },\n    {\n      // swallow namespace qualifiers before symbols\n      begin: hljs.IDENT_RE + '::'\n    },\n    {\n      className: 'symbol',\n      begin: hljs.UNDERSCORE_IDENT_RE + '(\\\\!|\\\\?)?:',\n      relevance: 0\n    },\n    {\n      className: 'symbol',\n      begin: ':(?!\\\\s)',\n      contains: [STRING, {begin: RUBY_METHOD_RE}],\n      relevance: 0\n    },\n    {\n      className: 'number',\n      begin: '(\\\\b0[0-7_]+)|(\\\\b0x[0-9a-fA-F_]+)|(\\\\b[1-9][0-9_]*(\\\\.[0-9_]+)?)|[0_]\\\\b',\n      relevance: 0\n    },\n    {\n      begin: '(\\\\$\\\\W)|((\\\\$|\\\\@\\\\@?)(\\\\w+))' // variables\n    },\n    {\n      className: 'params',\n      begin: /\\|/, end: /\\|/,\n      keywords: RUBY_KEYWORDS\n    },\n    { // regexp container\n      begin: '(' + hljs.RE_STARTERS_RE + '|unless)\\\\s*',\n      keywords: 'unless',\n      contains: [\n        IRB_OBJECT,\n        {\n          className: 'regexp',\n          contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n          illegal: /\\n/,\n          variants: [\n            {begin: '/', end: '/[a-z]*'},\n            {begin: '%r{', end: '}[a-z]*'},\n            {begin: '%r\\\\(', end: '\\\\)[a-z]*'},\n            {begin: '%r!', end: '![a-z]*'},\n            {begin: '%r\\\\[', end: '\\\\][a-z]*'}\n          ]\n        }\n      ].concat(COMMENT_MODES),\n      relevance: 0\n    }\n  ].concat(COMMENT_MODES);\n\n  SUBST.contains = RUBY_DEFAULT_CONTAINS;\n  PARAMS.contains = RUBY_DEFAULT_CONTAINS;\n\n  var SIMPLE_PROMPT = \"[>?]>\";\n  var DEFAULT_PROMPT = \"[\\\\w#]+\\\\(\\\\w+\\\\):\\\\d+:\\\\d+>\";\n  var RVM_PROMPT = \"(\\\\w+-)?\\\\d+\\\\.\\\\d+\\\\.\\\\d(p\\\\d+)?[^>]+>\";\n\n  var IRB_DEFAULT = [\n    {\n      begin: /^\\s*=>/,\n      starts: {\n        end: '$', contains: RUBY_DEFAULT_CONTAINS\n      }\n    },\n    {\n      className: 'meta',\n      begin: '^('+SIMPLE_PROMPT+\"|\"+DEFAULT_PROMPT+'|'+RVM_PROMPT+')',\n      starts: {\n        end: '$', contains: RUBY_DEFAULT_CONTAINS\n      }\n    }\n  ];\n\n  return {\n    aliases: ['rb', 'gemspec', 'podspec', 'thor', 'irb'],\n    keywords: RUBY_KEYWORDS,\n    illegal: /\\/\\*/,\n    contains: COMMENT_MODES.concat(IRB_DEFAULT).concat(RUBY_DEFAULT_CONTAINS)\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/ruby.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/ruleslanguage.js":
/*!******************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/ruleslanguage.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  return {\n    keywords: {\n       keyword: 'BILL_PERIOD BILL_START BILL_STOP RS_EFFECTIVE_START RS_EFFECTIVE_STOP RS_JURIS_CODE RS_OPCO_CODE ' +\n         'INTDADDATTRIBUTE|5 INTDADDVMSG|5 INTDBLOCKOP|5 INTDBLOCKOPNA|5 INTDCLOSE|5 INTDCOUNT|5 ' +\n         'INTDCOUNTSTATUSCODE|5 INTDCREATEMASK|5 INTDCREATEDAYMASK|5 INTDCREATEFACTORMASK|5 ' +\n         'INTDCREATEHANDLE|5 INTDCREATEOVERRIDEDAYMASK|5 INTDCREATEOVERRIDEMASK|5 ' +\n         'INTDCREATESTATUSCODEMASK|5 INTDCREATETOUPERIOD|5 INTDDELETE|5 INTDDIPTEST|5 INTDEXPORT|5 ' +\n         'INTDGETERRORCODE|5 INTDGETERRORMESSAGE|5 INTDISEQUAL|5 INTDJOIN|5 INTDLOAD|5 INTDLOADACTUALCUT|5 ' +\n         'INTDLOADDATES|5 INTDLOADHIST|5 INTDLOADLIST|5 INTDLOADLISTDATES|5 INTDLOADLISTENERGY|5 ' +\n         'INTDLOADLISTHIST|5 INTDLOADRELATEDCHANNEL|5 INTDLOADSP|5 INTDLOADSTAGING|5 INTDLOADUOM|5 ' +\n         'INTDLOADUOMDATES|5 INTDLOADUOMHIST|5 INTDLOADVERSION|5 INTDOPEN|5 INTDREADFIRST|5 INTDREADNEXT|5 ' +\n         'INTDRECCOUNT|5 INTDRELEASE|5 INTDREPLACE|5 INTDROLLAVG|5 INTDROLLPEAK|5 INTDSCALAROP|5 INTDSCALE|5 ' +\n         'INTDSETATTRIBUTE|5 INTDSETDSTPARTICIPANT|5 INTDSETSTRING|5 INTDSETVALUE|5 INTDSETVALUESTATUS|5 ' +\n         'INTDSHIFTSTARTTIME|5 INTDSMOOTH|5 INTDSORT|5 INTDSPIKETEST|5 INTDSUBSET|5 INTDTOU|5 ' +\n         'INTDTOURELEASE|5 INTDTOUVALUE|5 INTDUPDATESTATS|5 INTDVALUE|5 STDEV INTDDELETEEX|5 ' +\n         'INTDLOADEXACTUAL|5 INTDLOADEXCUT|5 INTDLOADEXDATES|5 INTDLOADEX|5 INTDLOADEXRELATEDCHANNEL|5 ' +\n         'INTDSAVEEX|5 MVLOAD|5 MVLOADACCT|5 MVLOADACCTDATES|5 MVLOADACCTHIST|5 MVLOADDATES|5 MVLOADHIST|5 ' +\n         'MVLOADLIST|5 MVLOADLISTDATES|5 MVLOADLISTHIST|5 IF FOR NEXT DONE SELECT END CALL ABORT CLEAR CHANNEL FACTOR LIST NUMBER ' +\n         'OVERRIDE SET WEEK DISTRIBUTIONNODE ELSE WHEN THEN OTHERWISE IENUM CSV INCLUDE LEAVE RIDER SAVE DELETE ' +\n         'NOVALUE SECTION WARN SAVE_UPDATE DETERMINANT LABEL REPORT REVENUE EACH ' +\n         'IN FROM TOTAL CHARGE BLOCK AND OR CSV_FILE RATE_CODE AUXILIARY_DEMAND ' +\n         'UIDACCOUNT RS BILL_PERIOD_SELECT HOURS_PER_MONTH INTD_ERROR_STOP SEASON_SCHEDULE_NAME ' +\n         'ACCOUNTFACTOR ARRAYUPPERBOUND CALLSTOREDPROC GETADOCONNECTION GETCONNECT GETDATASOURCE ' +\n         'GETQUALIFIER GETUSERID HASVALUE LISTCOUNT LISTOP LISTUPDATE LISTVALUE PRORATEFACTOR RSPRORATE ' +\n         'SETBINPATH SETDBMONITOR WQ_OPEN BILLINGHOURS DATE DATEFROMFLOAT DATETIMEFROMSTRING ' +\n         'DATETIMETOSTRING DATETOFLOAT DAY DAYDIFF DAYNAME DBDATETIME HOUR MINUTE MONTH MONTHDIFF ' +\n         'MONTHHOURS MONTHNAME ROUNDDATE SAMEWEEKDAYLASTYEAR SECOND WEEKDAY WEEKDIFF YEAR YEARDAY ' +\n         'YEARSTR COMPSUM HISTCOUNT HISTMAX HISTMIN HISTMINNZ HISTVALUE MAXNRANGE MAXRANGE MINRANGE ' +\n         'COMPIKVA COMPKVA COMPKVARFROMKQKW COMPLF IDATTR FLAG LF2KW LF2KWH MAXKW POWERFACTOR ' +\n         'READING2USAGE AVGSEASON MAXSEASON MONTHLYMERGE SEASONVALUE SUMSEASON ACCTREADDATES ' +\n         'ACCTTABLELOAD CONFIGADD CONFIGGET CREATEOBJECT CREATEREPORT EMAILCLIENT EXPBLKMDMUSAGE ' +\n         'EXPMDMUSAGE EXPORT_USAGE FACTORINEFFECT GETUSERSPECIFIEDSTOP INEFFECT ISHOLIDAY RUNRATE ' +\n         'SAVE_PROFILE SETREPORTTITLE USEREXIT WATFORRUNRATE TO TABLE ACOS ASIN ATAN ATAN2 BITAND CEIL ' +\n         'COS COSECANT COSH COTANGENT DIVQUOT DIVREM EXP FABS FLOOR FMOD FREPM FREXPN LOG LOG10 MAX MAXN ' +\n         'MIN MINNZ MODF POW ROUND ROUND2VALUE ROUNDINT SECANT SIN SINH SQROOT TAN TANH FLOAT2STRING ' +\n         'FLOAT2STRINGNC INSTR LEFT LEN LTRIM MID RIGHT RTRIM STRING STRINGNC TOLOWER TOUPPER TRIM ' +\n         'NUMDAYS READ_DATE STAGING',\n       built_in: 'IDENTIFIER OPTIONS XML_ELEMENT XML_OP XML_ELEMENT_OF DOMDOCCREATE DOMDOCLOADFILE DOMDOCLOADXML ' +\n         'DOMDOCSAVEFILE DOMDOCGETROOT DOMDOCADDPI DOMNODEGETNAME DOMNODEGETTYPE DOMNODEGETVALUE DOMNODEGETCHILDCT ' +\n         'DOMNODEGETFIRSTCHILD DOMNODEGETSIBLING DOMNODECREATECHILDELEMENT DOMNODESETATTRIBUTE ' +\n         'DOMNODEGETCHILDELEMENTCT DOMNODEGETFIRSTCHILDELEMENT DOMNODEGETSIBLINGELEMENT DOMNODEGETATTRIBUTECT ' +\n         'DOMNODEGETATTRIBUTEI DOMNODEGETATTRIBUTEBYNAME DOMNODEGETBYNAME'\n    },\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_NUMBER_MODE,\n      {\n        className: 'literal',\n        variants: [\n          {begin: '#\\\\s+[a-zA-Z\\\\ \\\\.]*', relevance: 0}, // looks like #-comment\n          {begin: '#[a-zA-Z\\\\ \\\\.]+'}\n        ]\n      }\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/ruleslanguage.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/rust.js":
/*!*********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/rust.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var NUM_SUFFIX = '([ui](8|16|32|64|128|size)|f(32|64))\\?';\n  var KEYWORDS =\n    'alignof as be box break const continue crate do else enum extern ' +\n    'false fn for if impl in let loop match mod mut offsetof once priv ' +\n    'proc pub pure ref return self Self sizeof static struct super trait true ' +\n    'type typeof unsafe unsized use virtual while where yield move default';\n  var BUILTINS =\n    // functions\n    'drop ' +\n    // types\n    'i8 i16 i32 i64 i128 isize ' +\n    'u8 u16 u32 u64 u128 usize ' +\n    'f32 f64 ' +\n    'str char bool ' +\n    'Box Option Result String Vec ' +\n    // traits\n    'Copy Send Sized Sync Drop Fn FnMut FnOnce ToOwned Clone Debug ' +\n    'PartialEq PartialOrd Eq Ord AsRef AsMut Into From Default Iterator ' +\n    'Extend IntoIterator DoubleEndedIterator ExactSizeIterator ' +\n    'SliceConcatExt ToString ' +\n    // macros\n    'assert! assert_eq! bitflags! bytes! cfg! col! concat! concat_idents! ' +\n    'debug_assert! debug_assert_eq! env! panic! file! format! format_args! ' +\n    'include_bin! include_str! line! local_data_key! module_path! ' +\n    'option_env! print! println! select! stringify! try! unimplemented! ' +\n    'unreachable! vec! write! writeln! macro_rules! assert_ne! debug_assert_ne!';\n  return {\n    aliases: ['rs'],\n    keywords: {\n      keyword:\n        KEYWORDS,\n      literal:\n        'true false Some None Ok Err',\n      built_in:\n        BUILTINS\n    },\n    lexemes: hljs.IDENT_RE + '!?',\n    illegal: '</',\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.COMMENT('/\\\\*', '\\\\*/', {contains: ['self']}),\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {begin: /b?\"/, illegal: null}),\n      {\n        className: 'string',\n        variants: [\n           { begin: /r(#*)\"(.|\\n)*?\"\\1(?!#)/ },\n           { begin: /b?'\\\\?(x\\w{2}|u\\w{4}|U\\w{8}|.)'/ }\n        ]\n      },\n      {\n        className: 'symbol',\n        begin: /'[a-zA-Z_][a-zA-Z0-9_]*/\n      },\n      {\n        className: 'number',\n        variants: [\n          { begin: '\\\\b0b([01_]+)' + NUM_SUFFIX },\n          { begin: '\\\\b0o([0-7_]+)' + NUM_SUFFIX },\n          { begin: '\\\\b0x([A-Fa-f0-9_]+)' + NUM_SUFFIX },\n          { begin: '\\\\b(\\\\d[\\\\d_]*(\\\\.[0-9_]+)?([eE][+-]?[0-9_]+)?)' +\n                   NUM_SUFFIX\n          }\n        ],\n        relevance: 0\n      },\n      {\n        className: 'function',\n        beginKeywords: 'fn', end: '(\\\\(|<)', excludeEnd: true,\n        contains: [hljs.UNDERSCORE_TITLE_MODE]\n      },\n      {\n        className: 'meta',\n        begin: '#\\\\!?\\\\[', end: '\\\\]',\n        contains: [\n          {\n            className: 'meta-string',\n            begin: /\"/, end: /\"/\n          }\n        ]\n      },\n      {\n        className: 'class',\n        beginKeywords: 'type', end: ';',\n        contains: [\n          hljs.inherit(hljs.UNDERSCORE_TITLE_MODE, {endsParent: true})\n        ],\n        illegal: '\\\\S'\n      },\n      {\n        className: 'class',\n        beginKeywords: 'trait enum struct union', end: '{',\n        contains: [\n          hljs.inherit(hljs.UNDERSCORE_TITLE_MODE, {endsParent: true})\n        ],\n        illegal: '[\\\\w\\\\d]'\n      },\n      {\n        begin: hljs.IDENT_RE + '::',\n        keywords: {built_in: BUILTINS}\n      },\n      {\n        begin: '->'\n      }\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/rust.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/scala.js":
/*!**********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/scala.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n\n  var ANNOTATION = { className: 'meta', begin: '@[A-Za-z]+' };\n\n  // used in strings for escaping/interpolation/substitution\n  var SUBST = {\n    className: 'subst',\n    variants: [\n      {begin: '\\\\$[A-Za-z0-9_]+'},\n      {begin: '\\\\${', end: '}'}\n    ]\n  };\n\n  var STRING = {\n    className: 'string',\n    variants: [\n      {\n        begin: '\"', end: '\"',\n        illegal: '\\\\n',\n        contains: [hljs.BACKSLASH_ESCAPE]\n      },\n      {\n        begin: '\"\"\"', end: '\"\"\"',\n        relevance: 10\n      },\n      {\n        begin: '[a-z]+\"', end: '\"',\n        illegal: '\\\\n',\n        contains: [hljs.BACKSLASH_ESCAPE, SUBST]\n      },\n      {\n        className: 'string',\n        begin: '[a-z]+\"\"\"', end: '\"\"\"',\n        contains: [SUBST],\n        relevance: 10\n      }\n    ]\n\n  };\n\n  var SYMBOL = {\n    className: 'symbol',\n    begin: '\\'\\\\w[\\\\w\\\\d_]*(?!\\')'\n  };\n\n  var TYPE = {\n    className: 'type',\n    begin: '\\\\b[A-Z][A-Za-z0-9_]*',\n    relevance: 0\n  };\n\n  var NAME = {\n    className: 'title',\n    begin: /[^0-9\\n\\t \"'(),.`{}\\[\\]:;][^\\n\\t \"'(),.`{}\\[\\]:;]+|[^0-9\\n\\t \"'(),.`{}\\[\\]:;=]/,\n    relevance: 0\n  };\n\n  var CLASS = {\n    className: 'class',\n    beginKeywords: 'class object trait type',\n    end: /[:={\\[\\n;]/,\n    excludeEnd: true,\n    contains: [\n      {\n        beginKeywords: 'extends with',\n        relevance: 10\n      },\n      {\n        begin: /\\[/,\n        end: /\\]/,\n        excludeBegin: true,\n        excludeEnd: true,\n        relevance: 0,\n        contains: [TYPE]\n      },\n      {\n        className: 'params',\n        begin: /\\(/,\n        end: /\\)/,\n        excludeBegin: true,\n        excludeEnd: true,\n        relevance: 0,\n        contains: [TYPE]\n      },\n      NAME\n    ]\n  };\n\n  var METHOD = {\n    className: 'function',\n    beginKeywords: 'def',\n    end: /[:={\\[(\\n;]/,\n    excludeEnd: true,\n    contains: [NAME]\n  };\n\n  return {\n    keywords: {\n      literal: 'true false null',\n      keyword: 'type yield lazy override def with val var sealed abstract private trait object if forSome for while throw finally protected extends import final return else break new catch super class case package default try this match continue throws implicit'\n    },\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      STRING,\n      SYMBOL,\n      TYPE,\n      METHOD,\n      CLASS,\n      hljs.C_NUMBER_MODE,\n      ANNOTATION\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/scala.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/scheme.js":
/*!***********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/scheme.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var SCHEME_IDENT_RE = '[^\\\\(\\\\)\\\\[\\\\]\\\\{\\\\}\",\\'`;#|\\\\\\\\\\\\s]+';\n  var SCHEME_SIMPLE_NUMBER_RE = '(\\\\-|\\\\+)?\\\\d+([./]\\\\d+)?';\n  var SCHEME_COMPLEX_NUMBER_RE = SCHEME_SIMPLE_NUMBER_RE + '[+\\\\-]' + SCHEME_SIMPLE_NUMBER_RE + 'i';\n  var BUILTINS = {\n    'builtin-name':\n      'case-lambda call/cc class define-class exit-handler field import ' +\n      'inherit init-field interface let*-values let-values let/ec mixin ' +\n      'opt-lambda override protect provide public rename require ' +\n      'require-for-syntax syntax syntax-case syntax-error unit/sig unless ' +\n      'when with-syntax and begin call-with-current-continuation ' +\n      'call-with-input-file call-with-output-file case cond define ' +\n      'define-syntax delay do dynamic-wind else for-each if lambda let let* ' +\n      'let-syntax letrec letrec-syntax map or syntax-rules \\' * + , ,@ - ... / ' +\n      '; < <= = => > >= ` abs acos angle append apply asin assoc assq assv atan ' +\n      'boolean? caar cadr call-with-input-file call-with-output-file ' +\n      'call-with-values car cdddar cddddr cdr ceiling char->integer ' +\n      'char-alphabetic? char-ci<=? char-ci<? char-ci=? char-ci>=? char-ci>? ' +\n      'char-downcase char-lower-case? char-numeric? char-ready? char-upcase ' +\n      'char-upper-case? char-whitespace? char<=? char<? char=? char>=? char>? ' +\n      'char? close-input-port close-output-port complex? cons cos ' +\n      'current-input-port current-output-port denominator display eof-object? ' +\n      'eq? equal? eqv? eval even? exact->inexact exact? exp expt floor ' +\n      'force gcd imag-part inexact->exact inexact? input-port? integer->char ' +\n      'integer? interaction-environment lcm length list list->string ' +\n      'list->vector list-ref list-tail list? load log magnitude make-polar ' +\n      'make-rectangular make-string make-vector max member memq memv min ' +\n      'modulo negative? newline not null-environment null? number->string ' +\n      'number? numerator odd? open-input-file open-output-file output-port? ' +\n      'pair? peek-char port? positive? procedure? quasiquote quote quotient ' +\n      'rational? rationalize read read-char real-part real? remainder reverse ' +\n      'round scheme-report-environment set! set-car! set-cdr! sin sqrt string ' +\n      'string->list string->number string->symbol string-append string-ci<=? ' +\n      'string-ci<? string-ci=? string-ci>=? string-ci>? string-copy ' +\n      'string-fill! string-length string-ref string-set! string<=? string<? ' +\n      'string=? string>=? string>? string? substring symbol->string symbol? ' +\n      'tan transcript-off transcript-on truncate values vector ' +\n      'vector->list vector-fill! vector-length vector-ref vector-set! ' +\n      'with-input-from-file with-output-to-file write write-char zero?'\n  };\n\n  var SHEBANG = {\n    className: 'meta',\n    begin: '^#!',\n    end: '$'\n  };\n\n  var LITERAL = {\n    className: 'literal',\n    begin: '(#t|#f|#\\\\\\\\' + SCHEME_IDENT_RE + '|#\\\\\\\\.)'\n  };\n\n  var NUMBER = {\n    className: 'number',\n    variants: [\n      { begin: SCHEME_SIMPLE_NUMBER_RE, relevance: 0 },\n      { begin: SCHEME_COMPLEX_NUMBER_RE, relevance: 0 },\n      { begin: '#b[0-1]+(/[0-1]+)?' },\n      { begin: '#o[0-7]+(/[0-7]+)?' },\n      { begin: '#x[0-9a-f]+(/[0-9a-f]+)?' }\n    ]\n  };\n\n  var STRING = hljs.QUOTE_STRING_MODE;\n\n  var REGULAR_EXPRESSION = {\n    className: 'regexp',\n    begin: '#[pr]x\"',\n    end: '[^\\\\\\\\]\"'\n  };\n\n  var COMMENT_MODES = [\n    hljs.COMMENT(\n      ';',\n      '$',\n      {\n        relevance: 0\n      }\n    ),\n    hljs.COMMENT('#\\\\|', '\\\\|#')\n  ];\n\n  var IDENT = {\n    begin: SCHEME_IDENT_RE,\n    relevance: 0\n  };\n\n  var QUOTED_IDENT = {\n    className: 'symbol',\n    begin: '\\'' + SCHEME_IDENT_RE\n  };\n\n  var BODY = {\n    endsWithParent: true,\n    relevance: 0\n  };\n\n  var QUOTED_LIST = {\n    variants: [\n      { begin: /'/ },\n      { begin: '`' }\n    ],\n    contains: [\n      {\n        begin: '\\\\(', end: '\\\\)',\n        contains: ['self', LITERAL, STRING, NUMBER, IDENT, QUOTED_IDENT]\n      }\n    ]\n  };\n\n  var NAME = {\n    className: 'name',\n    begin: SCHEME_IDENT_RE,\n    lexemes: SCHEME_IDENT_RE,\n    keywords: BUILTINS\n  };\n\n  var LAMBDA = {\n    begin: /lambda/, endsWithParent: true, returnBegin: true,\n    contains: [\n      NAME,\n      {\n        begin: /\\(/, end: /\\)/, endsParent: true,\n        contains: [IDENT],\n      }\n    ]\n  };\n\n  var LIST = {\n    variants: [\n      { begin: '\\\\(', end: '\\\\)' },\n      { begin: '\\\\[', end: '\\\\]' }\n    ],\n    contains: [LAMBDA, NAME, BODY]\n  };\n\n  BODY.contains = [LITERAL, NUMBER, STRING, IDENT, QUOTED_IDENT, QUOTED_LIST, LIST].concat(COMMENT_MODES);\n\n  return {\n    illegal: /\\S/,\n    contains: [SHEBANG, NUMBER, STRING, QUOTED_IDENT, QUOTED_LIST, LIST].concat(COMMENT_MODES)\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/scheme.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/scilab.js":
/*!***********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/scilab.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n\n  var COMMON_CONTAINS = [\n    hljs.C_NUMBER_MODE,\n    {\n      className: 'string',\n      begin: '\\'|\\\"', end: '\\'|\\\"',\n      contains: [hljs.BACKSLASH_ESCAPE, {begin: '\\'\\''}]\n    }\n  ];\n\n  return {\n    aliases: ['sci'],\n    lexemes: /%?\\w+/,\n    keywords: {\n      keyword: 'abort break case clear catch continue do elseif else endfunction end for function '+\n        'global if pause return resume select try then while',\n      literal:\n        '%f %F %t %T %pi %eps %inf %nan %e %i %z %s',\n      built_in: // Scilab has more than 2000 functions. Just list the most commons\n       'abs and acos asin atan ceil cd chdir clearglobal cosh cos cumprod deff disp error '+\n       'exec execstr exists exp eye gettext floor fprintf fread fsolve imag isdef isempty '+\n       'isinfisnan isvector lasterror length load linspace list listfiles log10 log2 log '+\n       'max min msprintf mclose mopen ones or pathconvert poly printf prod pwd rand real '+\n       'round sinh sin size gsort sprintf sqrt strcat strcmps tring sum system tanh tan '+\n       'type typename warning zeros matrix'\n    },\n    illegal: '(\"|#|/\\\\*|\\\\s+/\\\\w+)',\n    contains: [\n      {\n        className: 'function',\n        beginKeywords: 'function', end: '$',\n        contains: [\n          hljs.UNDERSCORE_TITLE_MODE,\n          {\n            className: 'params',\n            begin: '\\\\(', end: '\\\\)'\n          }\n        ]\n      },\n      {\n        begin: '[a-zA-Z_][a-zA-Z_0-9]*(\\'+[\\\\.\\']*|[\\\\.\\']+)', end: '',\n        relevance: 0\n      },\n      {\n        begin: '\\\\[', end: '\\\\]\\'*[\\\\.\\']*',\n        relevance: 0,\n        contains: COMMON_CONTAINS\n      },\n      hljs.COMMENT('//', '$')\n    ].concat(COMMON_CONTAINS)\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/scilab.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/scss.js":
/*!*********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/scss.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var IDENT_RE = '[a-zA-Z-][a-zA-Z0-9_-]*';\n  var VARIABLE = {\n    className: 'variable',\n    begin: '(\\\\$' + IDENT_RE + ')\\\\b'\n  };\n  var HEXCOLOR = {\n    className: 'number', begin: '#[0-9A-Fa-f]+'\n  };\n  var DEF_INTERNALS = {\n    className: 'attribute',\n    begin: '[A-Z\\\\_\\\\.\\\\-]+', end: ':',\n    excludeEnd: true,\n    illegal: '[^\\\\s]',\n    starts: {\n      endsWithParent: true, excludeEnd: true,\n      contains: [\n        HEXCOLOR,\n        hljs.CSS_NUMBER_MODE,\n        hljs.QUOTE_STRING_MODE,\n        hljs.APOS_STRING_MODE,\n        hljs.C_BLOCK_COMMENT_MODE,\n        {\n          className: 'meta', begin: '!important'\n        }\n      ]\n    }\n  };\n  return {\n    case_insensitive: true,\n    illegal: '[=/|\\']',\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        className: 'selector-id', begin: '\\\\#[A-Za-z0-9_-]+',\n        relevance: 0\n      },\n      {\n        className: 'selector-class', begin: '\\\\.[A-Za-z0-9_-]+',\n        relevance: 0\n      },\n      {\n        className: 'selector-attr', begin: '\\\\[', end: '\\\\]',\n        illegal: '$'\n      },\n      {\n        className: 'selector-tag', // begin: IDENT_RE, end: '[,|\\\\s]'\n        begin: '\\\\b(a|abbr|acronym|address|area|article|aside|audio|b|base|big|blockquote|body|br|button|canvas|caption|cite|code|col|colgroup|command|datalist|dd|del|details|dfn|div|dl|dt|em|embed|fieldset|figcaption|figure|footer|form|frame|frameset|(h[1-6])|head|header|hgroup|hr|html|i|iframe|img|input|ins|kbd|keygen|label|legend|li|link|map|mark|meta|meter|nav|noframes|noscript|object|ol|optgroup|option|output|p|param|pre|progress|q|rp|rt|ruby|samp|script|section|select|small|span|strike|strong|style|sub|sup|table|tbody|td|textarea|tfoot|th|thead|time|title|tr|tt|ul|var|video)\\\\b',\n        relevance: 0\n      },\n      {\n        begin: ':(visited|valid|root|right|required|read-write|read-only|out-range|optional|only-of-type|only-child|nth-of-type|nth-last-of-type|nth-last-child|nth-child|not|link|left|last-of-type|last-child|lang|invalid|indeterminate|in-range|hover|focus|first-of-type|first-line|first-letter|first-child|first|enabled|empty|disabled|default|checked|before|after|active)'\n      },\n      {\n        begin: '::(after|before|choices|first-letter|first-line|repeat-index|repeat-item|selection|value)'\n      },\n      VARIABLE,\n      {\n        className: 'attribute',\n        begin: '\\\\b(z-index|word-wrap|word-spacing|word-break|width|widows|white-space|visibility|vertical-align|unicode-bidi|transition-timing-function|transition-property|transition-duration|transition-delay|transition|transform-style|transform-origin|transform|top|text-underline-position|text-transform|text-shadow|text-rendering|text-overflow|text-indent|text-decoration-style|text-decoration-line|text-decoration-color|text-decoration|text-align-last|text-align|tab-size|table-layout|right|resize|quotes|position|pointer-events|perspective-origin|perspective|page-break-inside|page-break-before|page-break-after|padding-top|padding-right|padding-left|padding-bottom|padding|overflow-y|overflow-x|overflow-wrap|overflow|outline-width|outline-style|outline-offset|outline-color|outline|orphans|order|opacity|object-position|object-fit|normal|none|nav-up|nav-right|nav-left|nav-index|nav-down|min-width|min-height|max-width|max-height|mask|marks|margin-top|margin-right|margin-left|margin-bottom|margin|list-style-type|list-style-position|list-style-image|list-style|line-height|letter-spacing|left|justify-content|initial|inherit|ime-mode|image-orientation|image-resolution|image-rendering|icon|hyphens|height|font-weight|font-variant-ligatures|font-variant|font-style|font-stretch|font-size-adjust|font-size|font-language-override|font-kerning|font-feature-settings|font-family|font|float|flex-wrap|flex-shrink|flex-grow|flex-flow|flex-direction|flex-basis|flex|filter|empty-cells|display|direction|cursor|counter-reset|counter-increment|content|column-width|column-span|column-rule-width|column-rule-style|column-rule-color|column-rule|column-gap|column-fill|column-count|columns|color|clip-path|clip|clear|caption-side|break-inside|break-before|break-after|box-sizing|box-shadow|box-decoration-break|bottom|border-width|border-top-width|border-top-style|border-top-right-radius|border-top-left-radius|border-top-color|border-top|border-style|border-spacing|border-right-width|border-right-style|border-right-color|border-right|border-radius|border-left-width|border-left-style|border-left-color|border-left|border-image-width|border-image-source|border-image-slice|border-image-repeat|border-image-outset|border-image|border-color|border-collapse|border-bottom-width|border-bottom-style|border-bottom-right-radius|border-bottom-left-radius|border-bottom-color|border-bottom|border|background-size|background-repeat|background-position|background-origin|background-image|background-color|background-clip|background-attachment|background-blend-mode|background|backface-visibility|auto|animation-timing-function|animation-play-state|animation-name|animation-iteration-count|animation-fill-mode|animation-duration|animation-direction|animation-delay|animation|align-self|align-items|align-content)\\\\b',\n        illegal: '[^\\\\s]'\n      },\n      {\n        begin: '\\\\b(whitespace|wait|w-resize|visible|vertical-text|vertical-ideographic|uppercase|upper-roman|upper-alpha|underline|transparent|top|thin|thick|text|text-top|text-bottom|tb-rl|table-header-group|table-footer-group|sw-resize|super|strict|static|square|solid|small-caps|separate|se-resize|scroll|s-resize|rtl|row-resize|ridge|right|repeat|repeat-y|repeat-x|relative|progress|pointer|overline|outside|outset|oblique|nowrap|not-allowed|normal|none|nw-resize|no-repeat|no-drop|newspaper|ne-resize|n-resize|move|middle|medium|ltr|lr-tb|lowercase|lower-roman|lower-alpha|loose|list-item|line|line-through|line-edge|lighter|left|keep-all|justify|italic|inter-word|inter-ideograph|inside|inset|inline|inline-block|inherit|inactive|ideograph-space|ideograph-parenthesis|ideograph-numeric|ideograph-alpha|horizontal|hidden|help|hand|groove|fixed|ellipsis|e-resize|double|dotted|distribute|distribute-space|distribute-letter|distribute-all-lines|disc|disabled|default|decimal|dashed|crosshair|collapse|col-resize|circle|char|center|capitalize|break-word|break-all|bottom|both|bolder|bold|block|bidi-override|below|baseline|auto|always|all-scroll|absolute|table|table-cell)\\\\b'\n      },\n      {\n        begin: ':', end: ';',\n        contains: [\n          VARIABLE,\n          HEXCOLOR,\n          hljs.CSS_NUMBER_MODE,\n          hljs.QUOTE_STRING_MODE,\n          hljs.APOS_STRING_MODE,\n          {\n            className: 'meta', begin: '!important'\n          }\n        ]\n      },\n      {\n        begin: '@', end: '[{;]',\n        keywords: 'mixin include extend for if else each while charset import debug media page content font-face namespace warn',\n        contains: [\n          VARIABLE,\n          hljs.QUOTE_STRING_MODE,\n          hljs.APOS_STRING_MODE,\n          HEXCOLOR,\n          hljs.CSS_NUMBER_MODE,\n          {\n            begin: '\\\\s[A-Za-z0-9_.-]+',\n            relevance: 0\n          }\n        ]\n      }\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/scss.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/shell.js":
/*!**********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/shell.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  return {\n    aliases: ['console'],\n    contains: [\n      {\n        className: 'meta',\n        begin: '^\\\\s{0,3}[\\\\w\\\\d\\\\[\\\\]()@-]*[>%$#]',\n        starts: {\n          end: '$', subLanguage: 'bash'\n        }\n      },\n    ]\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/shell.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/smali.js":
/*!**********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/smali.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var smali_instr_low_prio = ['add', 'and', 'cmp', 'cmpg', 'cmpl', 'const', 'div', 'double', 'float', 'goto', 'if', 'int', 'long', 'move', 'mul', 'neg', 'new', 'nop', 'not', 'or', 'rem', 'return', 'shl', 'shr', 'sput', 'sub', 'throw', 'ushr', 'xor'];\n  var smali_instr_high_prio = ['aget', 'aput', 'array', 'check', 'execute', 'fill', 'filled', 'goto/16', 'goto/32', 'iget', 'instance', 'invoke', 'iput', 'monitor', 'packed', 'sget', 'sparse'];\n  var smali_keywords = ['transient', 'constructor', 'abstract', 'final', 'synthetic', 'public', 'private', 'protected', 'static', 'bridge', 'system'];\n  return {\n    aliases: ['smali'],\n    contains: [\n      {\n        className: 'string',\n        begin: '\"', end: '\"',\n        relevance: 0\n      },\n      hljs.COMMENT(\n        '#',\n        '$',\n        {\n          relevance: 0\n        }\n      ),\n      {\n        className: 'keyword',\n        variants: [\n          {begin: '\\\\s*\\\\.end\\\\s[a-zA-Z0-9]*'},\n          {begin: '^[ ]*\\\\.[a-zA-Z]*', relevance: 0},\n          {begin: '\\\\s:[a-zA-Z_0-9]*', relevance: 0},\n          {begin: '\\\\s(' + smali_keywords.join('|') + ')'}\n        ]\n      },\n      {\n        className: 'built_in',\n        variants : [\n          {\n            begin: '\\\\s('+smali_instr_low_prio.join('|')+')\\\\s'\n          },\n          {\n            begin: '\\\\s('+smali_instr_low_prio.join('|')+')((\\\\-|/)[a-zA-Z0-9]+)+\\\\s',\n            relevance: 10\n          },\n          {\n            begin: '\\\\s('+smali_instr_high_prio.join('|')+')((\\\\-|/)[a-zA-Z0-9]+)*\\\\s',\n            relevance: 10\n          },\n        ]\n      },\n      {\n        className: 'class',\n        begin: 'L[^\\(;:\\n]*;',\n        relevance: 0\n      },\n      {\n        begin: '[vp][0-9]+',\n      }\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/smali.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/smalltalk.js":
/*!**************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/smalltalk.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var VAR_IDENT_RE = '[a-z][a-zA-Z0-9_]*';\n  var CHAR = {\n    className: 'string',\n    begin: '\\\\$.{1}'\n  };\n  var SYMBOL = {\n    className: 'symbol',\n    begin: '#' + hljs.UNDERSCORE_IDENT_RE\n  };\n  return {\n    aliases: ['st'],\n    keywords: 'self super nil true false thisContext', // only 6\n    contains: [\n      hljs.COMMENT('\"', '\"'),\n      hljs.APOS_STRING_MODE,\n      {\n        className: 'type',\n        begin: '\\\\b[A-Z][A-Za-z0-9_]*',\n        relevance: 0\n      },\n      {\n        begin: VAR_IDENT_RE + ':',\n        relevance: 0\n      },\n      hljs.C_NUMBER_MODE,\n      SYMBOL,\n      CHAR,\n      {\n        // This looks more complicated than needed to avoid combinatorial\n        // explosion under V8. It effectively means `| var1 var2 ... |` with\n        // whitespace adjacent to `|` being optional.\n        begin: '\\\\|[ ]*' + VAR_IDENT_RE + '([ ]+' + VAR_IDENT_RE + ')*[ ]*\\\\|',\n        returnBegin: true, end: /\\|/,\n        illegal: /\\S/,\n        contains: [{begin: '(\\\\|[ ]*)?' + VAR_IDENT_RE}]\n      },\n      {\n        begin: '\\\\#\\\\(', end: '\\\\)',\n        contains: [\n          hljs.APOS_STRING_MODE,\n          CHAR,\n          hljs.C_NUMBER_MODE,\n          SYMBOL\n        ]\n      }\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/smalltalk.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/sml.js":
/*!********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/sml.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  return {\n    aliases: ['ml'],\n    keywords: {\n      keyword:\n        /* according to Definition of Standard ML 97  */\n        'abstype and andalso as case datatype do else end eqtype ' +\n        'exception fn fun functor handle if in include infix infixr ' +\n        'let local nonfix of op open orelse raise rec sharing sig ' +\n        'signature struct structure then type val with withtype where while',\n      built_in:\n        /* built-in types according to basis library */\n        'array bool char exn int list option order real ref string substring vector unit word',\n      literal:\n        'true false NONE SOME LESS EQUAL GREATER nil'\n    },\n    illegal: /\\/\\/|>>/,\n    lexemes: '[a-z_]\\\\w*!?',\n    contains: [\n      {\n        className: 'literal',\n        begin: /\\[(\\|\\|)?\\]|\\(\\)/,\n        relevance: 0\n      },\n      hljs.COMMENT(\n        '\\\\(\\\\*',\n        '\\\\*\\\\)',\n        {\n          contains: ['self']\n        }\n      ),\n      { /* type variable */\n        className: 'symbol',\n        begin: '\\'[A-Za-z_](?!\\')[\\\\w\\']*'\n        /* the grammar is ambiguous on how 'a'b should be interpreted but not the compiler */\n      },\n      { /* polymorphic variant */\n        className: 'type',\n        begin: '`[A-Z][\\\\w\\']*'\n      },\n      { /* module or constructor */\n        className: 'type',\n        begin: '\\\\b[A-Z][\\\\w\\']*',\n        relevance: 0\n      },\n      { /* don't color identifiers, but safely catch all identifiers with '*/\n        begin: '[a-z_]\\\\w*\\'[\\\\w\\']*'\n      },\n      hljs.inherit(hljs.APOS_STRING_MODE, {className: 'string', relevance: 0}),\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null}),\n      {\n        className: 'number',\n        begin:\n          '\\\\b(0[xX][a-fA-F0-9_]+[Lln]?|' +\n          '0[oO][0-7_]+[Lln]?|' +\n          '0[bB][01_]+[Lln]?|' +\n          '[0-9][0-9_]*([Lln]|(\\\\.[0-9_]*)?([eE][-+]?[0-9_]+)?)?)',\n        relevance: 0\n      },\n      {\n        begin: /[-=]>/ // relevance booster\n      }\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/sml.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/sqf.js":
/*!********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/sqf.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var CPP = hljs.getLanguage('cpp').exports;\n\n  // In SQF, a variable start with _\n  var VARIABLE = {\n    className: 'variable',\n    begin: /\\b_+[a-zA-Z_]\\w*/\n  };\n\n  // In SQF, a function should fit myTag_fnc_myFunction pattern\n  // https://community.bistudio.com/wiki/Functions_Library_(Arma_3)#Adding_a_Function\n  var FUNCTION = {\n    className: 'title',\n    begin: /[a-zA-Z][a-zA-Z0-9]+_fnc_\\w*/\n  };\n\n  // In SQF strings, quotes matching the start are escaped by adding a consecutive.\n  // Example of single escaped quotes: \" \"\" \" and  ' '' '.\n  var STRINGS = {\n    className: 'string',\n    variants: [\n      {\n        begin: '\"',\n        end: '\"',\n        contains: [{begin: '\"\"', relevance: 0}]\n      },\n      {\n        begin: '\\'',\n        end: '\\'',\n        contains: [{begin: '\\'\\'', relevance: 0}]\n      }\n    ]\n  };\n\n  return {\n    aliases: ['sqf'],\n    case_insensitive: true,\n    keywords: {\n      keyword:\n        'case catch default do else exit exitWith for forEach from if ' +\n        'switch then throw to try waitUntil while with',\n      built_in:\n        'abs accTime acos action actionIDs actionKeys actionKeysImages actionKeysNames ' +\n        'actionKeysNamesArray actionName actionParams activateAddons activatedAddons activateKey ' +\n        'add3DENConnection add3DENEventHandler add3DENLayer addAction addBackpack addBackpackCargo ' +\n        'addBackpackCargoGlobal addBackpackGlobal addCamShake addCuratorAddons addCuratorCameraArea ' +\n        'addCuratorEditableObjects addCuratorEditingArea addCuratorPoints addEditorObject addEventHandler ' +\n        'addGoggles addGroupIcon addHandgunItem addHeadgear addItem addItemCargo addItemCargoGlobal ' +\n        'addItemPool addItemToBackpack addItemToUniform addItemToVest addLiveStats addMagazine ' +\n        'addMagazineAmmoCargo addMagazineCargo addMagazineCargoGlobal addMagazineGlobal addMagazinePool ' +\n        'addMagazines addMagazineTurret addMenu addMenuItem addMissionEventHandler addMPEventHandler ' +\n        'addMusicEventHandler addOwnedMine addPlayerScores addPrimaryWeaponItem ' +\n        'addPublicVariableEventHandler addRating addResources addScore addScoreSide addSecondaryWeaponItem ' +\n        'addSwitchableUnit addTeamMember addToRemainsCollector addUniform addVehicle addVest addWaypoint ' +\n        'addWeapon addWeaponCargo addWeaponCargoGlobal addWeaponGlobal addWeaponItem addWeaponPool ' +\n        'addWeaponTurret agent agents AGLToASL aimedAtTarget aimPos airDensityRTD airportSide ' +\n        'AISFinishHeal alive all3DENEntities allControls allCurators allCutLayers allDead allDeadMen ' +\n        'allDisplays allGroups allMapMarkers allMines allMissionObjects allow3DMode allowCrewInImmobile ' +\n        'allowCuratorLogicIgnoreAreas allowDamage allowDammage allowFileOperations allowFleeing allowGetIn ' +\n        'allowSprint allPlayers allSites allTurrets allUnits allUnitsUAV allVariables ammo and animate ' +\n        'animateDoor animateSource animationNames animationPhase animationSourcePhase animationState ' +\n        'append apply armoryPoints arrayIntersect asin ASLToAGL ASLToATL assert assignAsCargo ' +\n        'assignAsCargoIndex assignAsCommander assignAsDriver assignAsGunner assignAsTurret assignCurator ' +\n        'assignedCargo assignedCommander assignedDriver assignedGunner assignedItems assignedTarget ' +\n        'assignedTeam assignedVehicle assignedVehicleRole assignItem assignTeam assignToAirport atan atan2 ' +\n        'atg ATLToASL attachedObject attachedObjects attachedTo attachObject attachTo attackEnabled ' +\n        'backpack backpackCargo backpackContainer backpackItems backpackMagazines backpackSpaceFor ' +\n        'behaviour benchmark binocular blufor boundingBox boundingBoxReal boundingCenter breakOut breakTo ' +\n        'briefingName buildingExit buildingPos buttonAction buttonSetAction cadetMode call callExtension ' +\n        'camCommand camCommit camCommitPrepared camCommitted camConstuctionSetParams camCreate camDestroy ' +\n        'cameraEffect cameraEffectEnableHUD cameraInterest cameraOn cameraView campaignConfigFile ' +\n        'camPreload camPreloaded camPrepareBank camPrepareDir camPrepareDive camPrepareFocus camPrepareFov ' +\n        'camPrepareFovRange camPreparePos camPrepareRelPos camPrepareTarget camSetBank camSetDir ' +\n        'camSetDive camSetFocus camSetFov camSetFovRange camSetPos camSetRelPos camSetTarget camTarget ' +\n        'camUseNVG canAdd canAddItemToBackpack canAddItemToUniform canAddItemToVest ' +\n        'cancelSimpleTaskDestination canFire canMove canSlingLoad canStand canSuspend canUnloadInCombat ' +\n        'canVehicleCargo captive captiveNum cbChecked cbSetChecked ceil channelEnabled cheatsEnabled ' +\n        'checkAIFeature checkVisibility civilian className clearAllItemsFromBackpack clearBackpackCargo ' +\n        'clearBackpackCargoGlobal clearGroupIcons clearItemCargo clearItemCargoGlobal clearItemPool ' +\n        'clearMagazineCargo clearMagazineCargoGlobal clearMagazinePool clearOverlay clearRadio ' +\n        'clearWeaponCargo clearWeaponCargoGlobal clearWeaponPool clientOwner closeDialog closeDisplay ' +\n        'closeOverlay collapseObjectTree collect3DENHistory combatMode commandArtilleryFire commandChat ' +\n        'commander commandFire commandFollow commandFSM commandGetOut commandingMenu commandMove ' +\n        'commandRadio commandStop commandSuppressiveFire commandTarget commandWatch comment commitOverlay ' +\n        'compile compileFinal completedFSM composeText configClasses configFile configHierarchy configName ' +\n        'configNull configProperties configSourceAddonList configSourceMod configSourceModList ' +\n        'connectTerminalToUAV controlNull controlsGroupCtrl copyFromClipboard copyToClipboard ' +\n        'copyWaypoints cos count countEnemy countFriendly countSide countType countUnknown ' +\n        'create3DENComposition create3DENEntity createAgent createCenter createDialog createDiaryLink ' +\n        'createDiaryRecord createDiarySubject createDisplay createGearDialog createGroup ' +\n        'createGuardedPoint createLocation createMarker createMarkerLocal createMenu createMine ' +\n        'createMissionDisplay createMPCampaignDisplay createSimpleObject createSimpleTask createSite ' +\n        'createSoundSource createTask createTeam createTrigger createUnit createVehicle createVehicleCrew ' +\n        'createVehicleLocal crew ctrlActivate ctrlAddEventHandler ctrlAngle ctrlAutoScrollDelay ' +\n        'ctrlAutoScrollRewind ctrlAutoScrollSpeed ctrlChecked ctrlClassName ctrlCommit ctrlCommitted ' +\n        'ctrlCreate ctrlDelete ctrlEnable ctrlEnabled ctrlFade ctrlHTMLLoaded ctrlIDC ctrlIDD ' +\n        'ctrlMapAnimAdd ctrlMapAnimClear ctrlMapAnimCommit ctrlMapAnimDone ctrlMapCursor ctrlMapMouseOver ' +\n        'ctrlMapScale ctrlMapScreenToWorld ctrlMapWorldToScreen ctrlModel ctrlModelDirAndUp ctrlModelScale ' +\n        'ctrlParent ctrlParentControlsGroup ctrlPosition ctrlRemoveAllEventHandlers ctrlRemoveEventHandler ' +\n        'ctrlScale ctrlSetActiveColor ctrlSetAngle ctrlSetAutoScrollDelay ctrlSetAutoScrollRewind ' +\n        'ctrlSetAutoScrollSpeed ctrlSetBackgroundColor ctrlSetChecked ctrlSetEventHandler ctrlSetFade ' +\n        'ctrlSetFocus ctrlSetFont ctrlSetFontH1 ctrlSetFontH1B ctrlSetFontH2 ctrlSetFontH2B ctrlSetFontH3 ' +\n        'ctrlSetFontH3B ctrlSetFontH4 ctrlSetFontH4B ctrlSetFontH5 ctrlSetFontH5B ctrlSetFontH6 ' +\n        'ctrlSetFontH6B ctrlSetFontHeight ctrlSetFontHeightH1 ctrlSetFontHeightH2 ctrlSetFontHeightH3 ' +\n        'ctrlSetFontHeightH4 ctrlSetFontHeightH5 ctrlSetFontHeightH6 ctrlSetFontHeightSecondary ' +\n        'ctrlSetFontP ctrlSetFontPB ctrlSetFontSecondary ctrlSetForegroundColor ctrlSetModel ' +\n        'ctrlSetModelDirAndUp ctrlSetModelScale ctrlSetPosition ctrlSetScale ctrlSetStructuredText ' +\n        'ctrlSetText ctrlSetTextColor ctrlSetTooltip ctrlSetTooltipColorBox ctrlSetTooltipColorShade ' +\n        'ctrlSetTooltipColorText ctrlShow ctrlShown ctrlText ctrlTextHeight ctrlType ctrlVisible ' +\n        'curatorAddons curatorCamera curatorCameraArea curatorCameraAreaCeiling curatorCoef ' +\n        'curatorEditableObjects curatorEditingArea curatorEditingAreaType curatorMouseOver curatorPoints ' +\n        'curatorRegisteredObjects curatorSelected curatorWaypointCost current3DENOperation currentChannel ' +\n        'currentCommand currentMagazine currentMagazineDetail currentMagazineDetailTurret ' +\n        'currentMagazineTurret currentMuzzle currentNamespace currentTask currentTasks currentThrowable ' +\n        'currentVisionMode currentWaypoint currentWeapon currentWeaponMode currentWeaponTurret ' +\n        'currentZeroing cursorObject cursorTarget customChat customRadio cutFadeOut cutObj cutRsc cutText ' +\n        'damage date dateToNumber daytime deActivateKey debriefingText debugFSM debugLog deg ' +\n        'delete3DENEntities deleteAt deleteCenter deleteCollection deleteEditorObject deleteGroup ' +\n        'deleteIdentity deleteLocation deleteMarker deleteMarkerLocal deleteRange deleteResources ' +\n        'deleteSite deleteStatus deleteTeam deleteVehicle deleteVehicleCrew deleteWaypoint detach ' +\n        'detectedMines diag_activeMissionFSMs diag_activeScripts diag_activeSQFScripts ' +\n        'diag_activeSQSScripts diag_captureFrame diag_captureSlowFrame diag_codePerformance diag_drawMode ' +\n        'diag_enable diag_enabled diag_fps diag_fpsMin diag_frameNo diag_list diag_log diag_logSlowFrame ' +\n        'diag_mergeConfigFile diag_recordTurretLimits diag_tickTime diag_toggle dialog diarySubjectExists ' +\n        'didJIP didJIPOwner difficulty difficultyEnabled difficultyEnabledRTD difficultyOption direction ' +\n        'directSay disableAI disableCollisionWith disableConversation disableDebriefingStats ' +\n        'disableNVGEquipment disableRemoteSensors disableSerialization disableTIEquipment ' +\n        'disableUAVConnectability disableUserInput displayAddEventHandler displayCtrl displayNull ' +\n        'displayParent displayRemoveAllEventHandlers displayRemoveEventHandler displaySetEventHandler ' +\n        'dissolveTeam distance distance2D distanceSqr distributionRegion do3DENAction doArtilleryFire ' +\n        'doFire doFollow doFSM doGetOut doMove doorPhase doStop doSuppressiveFire doTarget doWatch ' +\n        'drawArrow drawEllipse drawIcon drawIcon3D drawLine drawLine3D drawLink drawLocation drawPolygon ' +\n        'drawRectangle driver drop east echo edit3DENMissionAttributes editObject editorSetEventHandler ' +\n        'effectiveCommander emptyPositions enableAI enableAIFeature enableAimPrecision enableAttack ' +\n        'enableAudioFeature enableCamShake enableCaustics enableChannel enableCollisionWith enableCopilot ' +\n        'enableDebriefingStats enableDiagLegend enableEndDialog enableEngineArtillery enableEnvironment ' +\n        'enableFatigue enableGunLights enableIRLasers enableMimics enablePersonTurret enableRadio ' +\n        'enableReload enableRopeAttach enableSatNormalOnDetail enableSaving enableSentences ' +\n        'enableSimulation enableSimulationGlobal enableStamina enableTeamSwitch enableUAVConnectability ' +\n        'enableUAVWaypoints enableVehicleCargo endLoadingScreen endMission engineOn enginesIsOnRTD ' +\n        'enginesRpmRTD enginesTorqueRTD entities estimatedEndServerTime estimatedTimeLeft ' +\n        'evalObjectArgument everyBackpack everyContainer exec execEditorScript execFSM execVM exp ' +\n        'expectedDestination exportJIPMessages eyeDirection eyePos face faction fadeMusic fadeRadio ' +\n        'fadeSound fadeSpeech failMission fillWeaponsFromPool find findCover findDisplay findEditorObject ' +\n        'findEmptyPosition findEmptyPositionReady findNearestEnemy finishMissionInit finite fire ' +\n        'fireAtTarget firstBackpack flag flagOwner flagSide flagTexture fleeing floor flyInHeight ' +\n        'flyInHeightASL fog fogForecast fogParams forceAddUniform forcedMap forceEnd forceMap forceRespawn ' +\n        'forceSpeed forceWalk forceWeaponFire forceWeatherChange forEachMember forEachMemberAgent ' +\n        'forEachMemberTeam format formation formationDirection formationLeader formationMembers ' +\n        'formationPosition formationTask formatText formLeader freeLook fromEditor fuel fullCrew ' +\n        'gearIDCAmmoCount gearSlotAmmoCount gearSlotData get3DENActionState get3DENAttribute get3DENCamera ' +\n        'get3DENConnections get3DENEntity get3DENEntityID get3DENGrid get3DENIconsVisible ' +\n        'get3DENLayerEntities get3DENLinesVisible get3DENMissionAttribute get3DENMouseOver get3DENSelected ' +\n        'getAimingCoef getAllHitPointsDamage getAllOwnedMines getAmmoCargo getAnimAimPrecision ' +\n        'getAnimSpeedCoef getArray getArtilleryAmmo getArtilleryComputerSettings getArtilleryETA ' +\n        'getAssignedCuratorLogic getAssignedCuratorUnit getBackpackCargo getBleedingRemaining ' +\n        'getBurningValue getCameraViewDirection getCargoIndex getCenterOfMass getClientState ' +\n        'getClientStateNumber getConnectedUAV getCustomAimingCoef getDammage getDescription getDir ' +\n        'getDirVisual getDLCs getEditorCamera getEditorMode getEditorObjectScope getElevationOffset ' +\n        'getFatigue getFriend getFSMVariable getFuelCargo getGroupIcon getGroupIconParams getGroupIcons ' +\n        'getHideFrom getHit getHitIndex getHitPointDamage getItemCargo getMagazineCargo getMarkerColor ' +\n        'getMarkerPos getMarkerSize getMarkerType getMass getMissionConfig getMissionConfigValue ' +\n        'getMissionDLCs getMissionLayerEntities getModelInfo getMousePosition getNumber getObjectArgument ' +\n        'getObjectChildren getObjectDLC getObjectMaterials getObjectProxy getObjectTextures getObjectType ' +\n        'getObjectViewDistance getOxygenRemaining getPersonUsedDLCs getPilotCameraDirection ' +\n        'getPilotCameraPosition getPilotCameraRotation getPilotCameraTarget getPlayerChannel ' +\n        'getPlayerScores getPlayerUID getPos getPosASL getPosASLVisual getPosASLW getPosATL ' +\n        'getPosATLVisual getPosVisual getPosWorld getRelDir getRelPos getRemoteSensorsDisabled ' +\n        'getRepairCargo getResolution getShadowDistance getShotParents getSlingLoad getSpeed getStamina ' +\n        'getStatValue getSuppression getTerrainHeightASL getText getUnitLoadout getUnitTrait getVariable ' +\n        'getVehicleCargo getWeaponCargo getWeaponSway getWPPos glanceAt globalChat globalRadio goggles ' +\n        'goto group groupChat groupFromNetId groupIconSelectable groupIconsVisible groupId groupOwner ' +\n        'groupRadio groupSelectedUnits groupSelectUnit grpNull gunner gusts halt handgunItems ' +\n        'handgunMagazine handgunWeapon handsHit hasInterface hasPilotCamera hasWeapon hcAllGroups ' +\n        'hcGroupParams hcLeader hcRemoveAllGroups hcRemoveGroup hcSelected hcSelectGroup hcSetGroup ' +\n        'hcShowBar hcShownBar headgear hideBody hideObject hideObjectGlobal hideSelection hint hintC ' +\n        'hintCadet hintSilent hmd hostMission htmlLoad HUDMovementLevels humidity image importAllGroups ' +\n        'importance in inArea inAreaArray incapacitatedState independent inflame inflamed ' +\n        'inGameUISetEventHandler inheritsFrom initAmbientLife inPolygon inputAction inRangeOfArtillery ' +\n        'insertEditorObject intersect is3DEN is3DENMultiplayer isAbleToBreathe isAgent isArray ' +\n        'isAutoHoverOn isAutonomous isAutotest isBleeding isBurning isClass isCollisionLightOn ' +\n        'isCopilotEnabled isDedicated isDLCAvailable isEngineOn isEqualTo isEqualType isEqualTypeAll ' +\n        'isEqualTypeAny isEqualTypeArray isEqualTypeParams isFilePatchingEnabled isFlashlightOn ' +\n        'isFlatEmpty isForcedWalk isFormationLeader isHidden isInRemainsCollector ' +\n        'isInstructorFigureEnabled isIRLaserOn isKeyActive isKindOf isLightOn isLocalized isManualFire ' +\n        'isMarkedForCollection isMultiplayer isMultiplayerSolo isNil isNull isNumber isObjectHidden ' +\n        'isObjectRTD isOnRoad isPipEnabled isPlayer isRealTime isRemoteExecuted isRemoteExecutedJIP ' +\n        'isServer isShowing3DIcons isSprintAllowed isStaminaEnabled isSteamMission ' +\n        'isStreamFriendlyUIEnabled isText isTouchingGround isTurnedOut isTutHintsEnabled isUAVConnectable ' +\n        'isUAVConnected isUniformAllowed isVehicleCargo isWalking isWeaponDeployed isWeaponRested ' +\n        'itemCargo items itemsWithMagazines join joinAs joinAsSilent joinSilent joinString kbAddDatabase ' +\n        'kbAddDatabaseTargets kbAddTopic kbHasTopic kbReact kbRemoveTopic kbTell kbWasSaid keyImage ' +\n        'keyName knowsAbout land landAt landResult language laserTarget lbAdd lbClear lbColor lbCurSel ' +\n        'lbData lbDelete lbIsSelected lbPicture lbSelection lbSetColor lbSetCurSel lbSetData lbSetPicture ' +\n        'lbSetPictureColor lbSetPictureColorDisabled lbSetPictureColorSelected lbSetSelectColor ' +\n        'lbSetSelectColorRight lbSetSelected lbSetTooltip lbSetValue lbSize lbSort lbSortByValue lbText ' +\n        'lbValue leader leaderboardDeInit leaderboardGetRows leaderboardInit leaveVehicle libraryCredits ' +\n        'libraryDisclaimers lifeState lightAttachObject lightDetachObject lightIsOn lightnings limitSpeed ' +\n        'linearConversion lineBreak lineIntersects lineIntersectsObjs lineIntersectsSurfaces ' +\n        'lineIntersectsWith linkItem list listObjects ln lnbAddArray lnbAddColumn lnbAddRow lnbClear ' +\n        'lnbColor lnbCurSelRow lnbData lnbDeleteColumn lnbDeleteRow lnbGetColumnsPosition lnbPicture ' +\n        'lnbSetColor lnbSetColumnsPos lnbSetCurSelRow lnbSetData lnbSetPicture lnbSetText lnbSetValue ' +\n        'lnbSize lnbText lnbValue load loadAbs loadBackpack loadFile loadGame loadIdentity loadMagazine ' +\n        'loadOverlay loadStatus loadUniform loadVest local localize locationNull locationPosition lock ' +\n        'lockCameraTo lockCargo lockDriver locked lockedCargo lockedDriver lockedTurret lockIdentity ' +\n        'lockTurret lockWP log logEntities logNetwork logNetworkTerminate lookAt lookAtPos magazineCargo ' +\n        'magazines magazinesAllTurrets magazinesAmmo magazinesAmmoCargo magazinesAmmoFull magazinesDetail ' +\n        'magazinesDetailBackpack magazinesDetailUniform magazinesDetailVest magazinesTurret ' +\n        'magazineTurretAmmo mapAnimAdd mapAnimClear mapAnimCommit mapAnimDone mapCenterOnCamera ' +\n        'mapGridPosition markAsFinishedOnSteam markerAlpha markerBrush markerColor markerDir markerPos ' +\n        'markerShape markerSize markerText markerType max members menuAction menuAdd menuChecked menuClear ' +\n        'menuCollapse menuData menuDelete menuEnable menuEnabled menuExpand menuHover menuPicture ' +\n        'menuSetAction menuSetCheck menuSetData menuSetPicture menuSetValue menuShortcut menuShortcutText ' +\n        'menuSize menuSort menuText menuURL menuValue min mineActive mineDetectedBy missionConfigFile ' +\n        'missionDifficulty missionName missionNamespace missionStart missionVersion mod modelToWorld ' +\n        'modelToWorldVisual modParams moonIntensity moonPhase morale move move3DENCamera moveInAny ' +\n        'moveInCargo moveInCommander moveInDriver moveInGunner moveInTurret moveObjectToEnd moveOut ' +\n        'moveTime moveTo moveToCompleted moveToFailed musicVolume name nameSound nearEntities ' +\n        'nearestBuilding nearestLocation nearestLocations nearestLocationWithDubbing nearestObject ' +\n        'nearestObjects nearestTerrainObjects nearObjects nearObjectsReady nearRoads nearSupplies ' +\n        'nearTargets needReload netId netObjNull newOverlay nextMenuItemIndex nextWeatherChange nMenuItems ' +\n        'not numberToDate objectCurators objectFromNetId objectParent objNull objStatus onBriefingGroup ' +\n        'onBriefingNotes onBriefingPlan onBriefingTeamSwitch onCommandModeChanged onDoubleClick ' +\n        'onEachFrame onGroupIconClick onGroupIconOverEnter onGroupIconOverLeave onHCGroupSelectionChanged ' +\n        'onMapSingleClick onPlayerConnected onPlayerDisconnected onPreloadFinished onPreloadStarted ' +\n        'onShowNewObject onTeamSwitch openCuratorInterface openDLCPage openMap openYoutubeVideo opfor or ' +\n        'orderGetIn overcast overcastForecast owner param params parseNumber parseText parsingNamespace ' +\n        'particlesQuality pi pickWeaponPool pitch pixelGrid pixelGridBase pixelGridNoUIScale pixelH pixelW ' +\n        'playableSlotsNumber playableUnits playAction playActionNow player playerRespawnTime playerSide ' +\n        'playersNumber playGesture playMission playMove playMoveNow playMusic playScriptedMission ' +\n        'playSound playSound3D position positionCameraToWorld posScreenToWorld posWorldToScreen ' +\n        'ppEffectAdjust ppEffectCommit ppEffectCommitted ppEffectCreate ppEffectDestroy ppEffectEnable ' +\n        'ppEffectEnabled ppEffectForceInNVG precision preloadCamera preloadObject preloadSound ' +\n        'preloadTitleObj preloadTitleRsc preprocessFile preprocessFileLineNumbers primaryWeapon ' +\n        'primaryWeaponItems primaryWeaponMagazine priority private processDiaryLink productVersion ' +\n        'profileName profileNamespace profileNameSteam progressLoadingScreen progressPosition ' +\n        'progressSetPosition publicVariable publicVariableClient publicVariableServer pushBack ' +\n        'pushBackUnique putWeaponPool queryItemsPool queryMagazinePool queryWeaponPool rad radioChannelAdd ' +\n        'radioChannelCreate radioChannelRemove radioChannelSetCallSign radioChannelSetLabel radioVolume ' +\n        'rain rainbow random rank rankId rating rectangular registeredTasks registerTask reload ' +\n        'reloadEnabled remoteControl remoteExec remoteExecCall remove3DENConnection remove3DENEventHandler ' +\n        'remove3DENLayer removeAction removeAll3DENEventHandlers removeAllActions removeAllAssignedItems ' +\n        'removeAllContainers removeAllCuratorAddons removeAllCuratorCameraAreas ' +\n        'removeAllCuratorEditingAreas removeAllEventHandlers removeAllHandgunItems removeAllItems ' +\n        'removeAllItemsWithMagazines removeAllMissionEventHandlers removeAllMPEventHandlers ' +\n        'removeAllMusicEventHandlers removeAllOwnedMines removeAllPrimaryWeaponItems removeAllWeapons ' +\n        'removeBackpack removeBackpackGlobal removeCuratorAddons removeCuratorCameraArea ' +\n        'removeCuratorEditableObjects removeCuratorEditingArea removeDrawIcon removeDrawLinks ' +\n        'removeEventHandler removeFromRemainsCollector removeGoggles removeGroupIcon removeHandgunItem ' +\n        'removeHeadgear removeItem removeItemFromBackpack removeItemFromUniform removeItemFromVest ' +\n        'removeItems removeMagazine removeMagazineGlobal removeMagazines removeMagazinesTurret ' +\n        'removeMagazineTurret removeMenuItem removeMissionEventHandler removeMPEventHandler ' +\n        'removeMusicEventHandler removeOwnedMine removePrimaryWeaponItem removeSecondaryWeaponItem ' +\n        'removeSimpleTask removeSwitchableUnit removeTeamMember removeUniform removeVest removeWeapon ' +\n        'removeWeaponGlobal removeWeaponTurret requiredVersion resetCamShake resetSubgroupDirection ' +\n        'resistance resize resources respawnVehicle restartEditorCamera reveal revealMine reverse ' +\n        'reversedMouseY roadAt roadsConnectedTo roleDescription ropeAttachedObjects ropeAttachedTo ' +\n        'ropeAttachEnabled ropeAttachTo ropeCreate ropeCut ropeDestroy ropeDetach ropeEndPosition ' +\n        'ropeLength ropes ropeUnwind ropeUnwound rotorsForcesRTD rotorsRpmRTD round runInitScript ' +\n        'safeZoneH safeZoneW safeZoneWAbs safeZoneX safeZoneXAbs safeZoneY save3DENInventory saveGame ' +\n        'saveIdentity saveJoysticks saveOverlay saveProfileNamespace saveStatus saveVar savingEnabled say ' +\n        'say2D say3D scopeName score scoreSide screenshot screenToWorld scriptDone scriptName scriptNull ' +\n        'scudState secondaryWeapon secondaryWeaponItems secondaryWeaponMagazine select selectBestPlaces ' +\n        'selectDiarySubject selectedEditorObjects selectEditorObject selectionNames selectionPosition ' +\n        'selectLeader selectMax selectMin selectNoPlayer selectPlayer selectRandom selectWeapon ' +\n        'selectWeaponTurret sendAUMessage sendSimpleCommand sendTask sendTaskResult sendUDPMessage ' +\n        'serverCommand serverCommandAvailable serverCommandExecutable serverName serverTime set ' +\n        'set3DENAttribute set3DENAttributes set3DENGrid set3DENIconsVisible set3DENLayer ' +\n        'set3DENLinesVisible set3DENMissionAttributes set3DENModelsVisible set3DENObjectType ' +\n        'set3DENSelected setAccTime setAirportSide setAmmo setAmmoCargo setAnimSpeedCoef setAperture ' +\n        'setApertureNew setArmoryPoints setAttributes setAutonomous setBehaviour setBleedingRemaining ' +\n        'setCameraInterest setCamShakeDefParams setCamShakeParams setCamUseTi setCaptive setCenterOfMass ' +\n        'setCollisionLight setCombatMode setCompassOscillation setCuratorCameraAreaCeiling setCuratorCoef ' +\n        'setCuratorEditingAreaType setCuratorWaypointCost setCurrentChannel setCurrentTask ' +\n        'setCurrentWaypoint setCustomAimCoef setDamage setDammage setDate setDebriefingText ' +\n        'setDefaultCamera setDestination setDetailMapBlendPars setDir setDirection setDrawIcon ' +\n        'setDropInterval setEditorMode setEditorObjectScope setEffectCondition setFace setFaceAnimation ' +\n        'setFatigue setFlagOwner setFlagSide setFlagTexture setFog setFormation setFormationTask ' +\n        'setFormDir setFriend setFromEditor setFSMVariable setFuel setFuelCargo setGroupIcon ' +\n        'setGroupIconParams setGroupIconsSelectable setGroupIconsVisible setGroupId setGroupIdGlobal ' +\n        'setGroupOwner setGusts setHideBehind setHit setHitIndex setHitPointDamage setHorizonParallaxCoef ' +\n        'setHUDMovementLevels setIdentity setImportance setLeader setLightAmbient setLightAttenuation ' +\n        'setLightBrightness setLightColor setLightDayLight setLightFlareMaxDistance setLightFlareSize ' +\n        'setLightIntensity setLightnings setLightUseFlare setLocalWindParams setMagazineTurretAmmo ' +\n        'setMarkerAlpha setMarkerAlphaLocal setMarkerBrush setMarkerBrushLocal setMarkerColor ' +\n        'setMarkerColorLocal setMarkerDir setMarkerDirLocal setMarkerPos setMarkerPosLocal setMarkerShape ' +\n        'setMarkerShapeLocal setMarkerSize setMarkerSizeLocal setMarkerText setMarkerTextLocal ' +\n        'setMarkerType setMarkerTypeLocal setMass setMimic setMousePosition setMusicEffect ' +\n        'setMusicEventHandler setName setNameSound setObjectArguments setObjectMaterial ' +\n        'setObjectMaterialGlobal setObjectProxy setObjectTexture setObjectTextureGlobal ' +\n        'setObjectViewDistance setOvercast setOwner setOxygenRemaining setParticleCircle setParticleClass ' +\n        'setParticleFire setParticleParams setParticleRandom setPilotCameraDirection ' +\n        'setPilotCameraRotation setPilotCameraTarget setPilotLight setPiPEffect setPitch setPlayable ' +\n        'setPlayerRespawnTime setPos setPosASL setPosASL2 setPosASLW setPosATL setPosition setPosWorld ' +\n        'setRadioMsg setRain setRainbow setRandomLip setRank setRectangular setRepairCargo ' +\n        'setShadowDistance setShotParents setSide setSimpleTaskAlwaysVisible setSimpleTaskCustomData ' +\n        'setSimpleTaskDescription setSimpleTaskDestination setSimpleTaskTarget setSimpleTaskType ' +\n        'setSimulWeatherLayers setSize setSkill setSlingLoad setSoundEffect setSpeaker setSpeech ' +\n        'setSpeedMode setStamina setStaminaScheme setStatValue setSuppression setSystemOfUnits ' +\n        'setTargetAge setTaskResult setTaskState setTerrainGrid setText setTimeMultiplier setTitleEffect ' +\n        'setTriggerActivation setTriggerArea setTriggerStatements setTriggerText setTriggerTimeout ' +\n        'setTriggerType setType setUnconscious setUnitAbility setUnitLoadout setUnitPos setUnitPosWeak ' +\n        'setUnitRank setUnitRecoilCoefficient setUnitTrait setUnloadInCombat setUserActionText setVariable ' +\n        'setVectorDir setVectorDirAndUp setVectorUp setVehicleAmmo setVehicleAmmoDef setVehicleArmor ' +\n        'setVehicleCargo setVehicleId setVehicleLock setVehiclePosition setVehicleTiPars setVehicleVarName ' +\n        'setVelocity setVelocityTransformation setViewDistance setVisibleIfTreeCollapsed setWaves ' +\n        'setWaypointBehaviour setWaypointCombatMode setWaypointCompletionRadius setWaypointDescription ' +\n        'setWaypointForceBehaviour setWaypointFormation setWaypointHousePosition setWaypointLoiterRadius ' +\n        'setWaypointLoiterType setWaypointName setWaypointPosition setWaypointScript setWaypointSpeed ' +\n        'setWaypointStatements setWaypointTimeout setWaypointType setWaypointVisible ' +\n        'setWeaponReloadingTime setWind setWindDir setWindForce setWindStr setWPPos show3DIcons showChat ' +\n        'showCinemaBorder showCommandingMenu showCompass showCuratorCompass showGPS showHUD showLegend ' +\n        'showMap shownArtilleryComputer shownChat shownCompass shownCuratorCompass showNewEditorObject ' +\n        'shownGPS shownHUD shownMap shownPad shownRadio shownScoretable shownUAVFeed shownWarrant ' +\n        'shownWatch showPad showRadio showScoretable showSubtitles showUAVFeed showWarrant showWatch ' +\n        'showWaypoint showWaypoints side sideAmbientLife sideChat sideEmpty sideEnemy sideFriendly ' +\n        'sideLogic sideRadio sideUnknown simpleTasks simulationEnabled simulCloudDensity ' +\n        'simulCloudOcclusion simulInClouds simulWeatherSync sin size sizeOf skill skillFinal skipTime ' +\n        'sleep sliderPosition sliderRange sliderSetPosition sliderSetRange sliderSetSpeed sliderSpeed ' +\n        'slingLoadAssistantShown soldierMagazines someAmmo sort soundVolume spawn speaker speed speedMode ' +\n        'splitString sqrt squadParams stance startLoadingScreen step stop stopEngineRTD stopped str ' +\n        'sunOrMoon supportInfo suppressFor surfaceIsWater surfaceNormal surfaceType swimInDepth ' +\n        'switchableUnits switchAction switchCamera switchGesture switchLight switchMove ' +\n        'synchronizedObjects synchronizedTriggers synchronizedWaypoints synchronizeObjectsAdd ' +\n        'synchronizeObjectsRemove synchronizeTrigger synchronizeWaypoint systemChat systemOfUnits tan ' +\n        'targetKnowledge targetsAggregate targetsQuery taskAlwaysVisible taskChildren taskCompleted ' +\n        'taskCustomData taskDescription taskDestination taskHint taskMarkerOffset taskNull taskParent ' +\n        'taskResult taskState taskType teamMember teamMemberNull teamName teams teamSwitch ' +\n        'teamSwitchEnabled teamType terminate terrainIntersect terrainIntersectASL text textLog ' +\n        'textLogFormat tg time timeMultiplier titleCut titleFadeOut titleObj titleRsc titleText toArray ' +\n        'toFixed toLower toString toUpper triggerActivated triggerActivation triggerArea ' +\n        'triggerAttachedVehicle triggerAttachObject triggerAttachVehicle triggerStatements triggerText ' +\n        'triggerTimeout triggerTimeoutCurrent triggerType turretLocal turretOwner turretUnit tvAdd tvClear ' +\n        'tvCollapse tvCount tvCurSel tvData tvDelete tvExpand tvPicture tvSetCurSel tvSetData tvSetPicture ' +\n        'tvSetPictureColor tvSetPictureColorDisabled tvSetPictureColorSelected tvSetPictureRight ' +\n        'tvSetPictureRightColor tvSetPictureRightColorDisabled tvSetPictureRightColorSelected tvSetText ' +\n        'tvSetTooltip tvSetValue tvSort tvSortByValue tvText tvTooltip tvValue type typeName typeOf ' +\n        'UAVControl uiNamespace uiSleep unassignCurator unassignItem unassignTeam unassignVehicle ' +\n        'underwater uniform uniformContainer uniformItems uniformMagazines unitAddons unitAimPosition ' +\n        'unitAimPositionVisual unitBackpack unitIsUAV unitPos unitReady unitRecoilCoefficient units ' +\n        'unitsBelowHeight unlinkItem unlockAchievement unregisterTask updateDrawIcon updateMenuItem ' +\n        'updateObjectTree useAISteeringComponent useAudioTimeForMoves vectorAdd vectorCos ' +\n        'vectorCrossProduct vectorDiff vectorDir vectorDirVisual vectorDistance vectorDistanceSqr ' +\n        'vectorDotProduct vectorFromTo vectorMagnitude vectorMagnitudeSqr vectorMultiply vectorNormalized ' +\n        'vectorUp vectorUpVisual vehicle vehicleCargoEnabled vehicleChat vehicleRadio vehicles ' +\n        'vehicleVarName velocity velocityModelSpace verifySignature vest vestContainer vestItems ' +\n        'vestMagazines viewDistance visibleCompass visibleGPS visibleMap visiblePosition ' +\n        'visiblePositionASL visibleScoretable visibleWatch waves waypointAttachedObject ' +\n        'waypointAttachedVehicle waypointAttachObject waypointAttachVehicle waypointBehaviour ' +\n        'waypointCombatMode waypointCompletionRadius waypointDescription waypointForceBehaviour ' +\n        'waypointFormation waypointHousePosition waypointLoiterRadius waypointLoiterType waypointName ' +\n        'waypointPosition waypoints waypointScript waypointsEnabledUAV waypointShow waypointSpeed ' +\n        'waypointStatements waypointTimeout waypointTimeoutCurrent waypointType waypointVisible ' +\n        'weaponAccessories weaponAccessoriesCargo weaponCargo weaponDirection weaponInertia weaponLowered ' +\n        'weapons weaponsItems weaponsItemsCargo weaponState weaponsTurret weightRTD west WFSideText wind',\n      literal:\n        'true false nil'\n    },\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.NUMBER_MODE,\n      VARIABLE,\n      FUNCTION,\n      STRINGS,\n      CPP.preprocessor\n    ],\n    illegal: /#/\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/sqf.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/sql.js":
/*!********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/sql.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var COMMENT_MODE = hljs.COMMENT('--', '$');\n  return {\n    case_insensitive: true,\n    illegal: /[<>{}*#]/,\n    contains: [\n      {\n        beginKeywords:\n          'begin end start commit rollback savepoint lock alter create drop rename call ' +\n          'delete do handler insert load replace select truncate update set show pragma grant ' +\n          'merge describe use explain help declare prepare execute deallocate release ' +\n          'unlock purge reset change stop analyze cache flush optimize repair kill ' +\n          'install uninstall checksum restore check backup revoke comment',\n        end: /;/, endsWithParent: true,\n        lexemes: /[\\w\\.]+/,\n        keywords: {\n          keyword:\n            'abort abs absolute acc acce accep accept access accessed accessible account acos action activate add ' +\n            'addtime admin administer advanced advise aes_decrypt aes_encrypt after agent aggregate ali alia alias ' +\n            'allocate allow alter always analyze ancillary and any anydata anydataset anyschema anytype apply ' +\n            'archive archived archivelog are as asc ascii asin assembly assertion associate asynchronous at atan ' +\n            'atn2 attr attri attrib attribu attribut attribute attributes audit authenticated authentication authid ' +\n            'authors auto autoallocate autodblink autoextend automatic availability avg backup badfile basicfile ' +\n            'before begin beginning benchmark between bfile bfile_base big bigfile bin binary_double binary_float ' +\n            'binlog bit_and bit_count bit_length bit_or bit_xor bitmap blob_base block blocksize body both bound ' +\n            'buffer_cache buffer_pool build bulk by byte byteordermark bytes cache caching call calling cancel ' +\n            'capacity cascade cascaded case cast catalog category ceil ceiling chain change changed char_base ' +\n            'char_length character_length characters characterset charindex charset charsetform charsetid check ' +\n            'checksum checksum_agg child choose chr chunk class cleanup clear client clob clob_base clone close ' +\n            'cluster_id cluster_probability cluster_set clustering coalesce coercibility col collate collation ' +\n            'collect colu colum column column_value columns columns_updated comment commit compact compatibility ' +\n            'compiled complete composite_limit compound compress compute concat concat_ws concurrent confirm conn ' +\n            'connec connect connect_by_iscycle connect_by_isleaf connect_by_root connect_time connection ' +\n            'consider consistent constant constraint constraints constructor container content contents context ' +\n            'contributors controlfile conv convert convert_tz corr corr_k corr_s corresponding corruption cos cost ' +\n            'count count_big counted covar_pop covar_samp cpu_per_call cpu_per_session crc32 create creation ' +\n            'critical cross cube cume_dist curdate current current_date current_time current_timestamp current_user ' +\n            'cursor curtime customdatum cycle data database databases datafile datafiles datalength date_add ' +\n            'date_cache date_format date_sub dateadd datediff datefromparts datename datepart datetime2fromparts ' +\n            'day day_to_second dayname dayofmonth dayofweek dayofyear days db_role_change dbtimezone ddl deallocate ' +\n            'declare decode decompose decrement decrypt deduplicate def defa defau defaul default defaults ' +\n            'deferred defi defin define degrees delayed delegate delete delete_all delimited demand dense_rank ' +\n            'depth dequeue des_decrypt des_encrypt des_key_file desc descr descri describ describe descriptor ' +\n            'deterministic diagnostics difference dimension direct_load directory disable disable_all ' +\n            'disallow disassociate discardfile disconnect diskgroup distinct distinctrow distribute distributed div ' +\n            'do document domain dotnet double downgrade drop dumpfile duplicate duration each edition editionable ' +\n            'editions element ellipsis else elsif elt empty enable enable_all enclosed encode encoding encrypt ' +\n            'end end-exec endian enforced engine engines enqueue enterprise entityescaping eomonth error errors ' +\n            'escaped evalname evaluate event eventdata events except exception exceptions exchange exclude excluding ' +\n            'execu execut execute exempt exists exit exp expire explain export export_set extended extent external ' +\n            'external_1 external_2 externally extract failed failed_login_attempts failover failure far fast ' +\n            'feature_set feature_value fetch field fields file file_name_convert filesystem_like_logging final ' +\n            'finish first first_value fixed flash_cache flashback floor flush following follows for forall force ' +\n            'form forma format found found_rows freelist freelists freepools fresh from from_base64 from_days ' +\n            'ftp full function general generated get get_format get_lock getdate getutcdate global global_name ' +\n            'globally go goto grant grants greatest group group_concat group_id grouping grouping_id groups ' +\n            'gtid_subtract guarantee guard handler hash hashkeys having hea head headi headin heading heap help hex ' +\n            'hierarchy high high_priority hosts hour http id ident_current ident_incr ident_seed identified ' +\n            'identity idle_time if ifnull ignore iif ilike ilm immediate import in include including increment ' +\n            'index indexes indexing indextype indicator indices inet6_aton inet6_ntoa inet_aton inet_ntoa infile ' +\n            'initial initialized initially initrans inmemory inner innodb input insert install instance instantiable ' +\n            'instr interface interleaved intersect into invalidate invisible is is_free_lock is_ipv4 is_ipv4_compat ' +\n            'is_not is_not_null is_used_lock isdate isnull isolation iterate java join json json_exists ' +\n            'keep keep_duplicates key keys kill language large last last_day last_insert_id last_value lax lcase ' +\n            'lead leading least leaves left len lenght length less level levels library like like2 like4 likec limit ' +\n            'lines link list listagg little ln load load_file lob lobs local localtime localtimestamp locate ' +\n            'locator lock locked log log10 log2 logfile logfiles logging logical logical_reads_per_call ' +\n            'logoff logon logs long loop low low_priority lower lpad lrtrim ltrim main make_set makedate maketime ' +\n            'managed management manual map mapping mask master master_pos_wait match matched materialized max ' +\n            'maxextents maximize maxinstances maxlen maxlogfiles maxloghistory maxlogmembers maxsize maxtrans ' +\n            'md5 measures median medium member memcompress memory merge microsecond mid migration min minextents ' +\n            'minimum mining minus minute minvalue missing mod mode model modification modify module monitoring month ' +\n            'months mount move movement multiset mutex name name_const names nan national native natural nav nchar ' +\n            'nclob nested never new newline next nextval no no_write_to_binlog noarchivelog noaudit nobadfile ' +\n            'nocheck nocompress nocopy nocycle nodelay nodiscardfile noentityescaping noguarantee nokeep nologfile ' +\n            'nomapping nomaxvalue nominimize nominvalue nomonitoring none noneditionable nonschema noorder ' +\n            'nopr nopro noprom nopromp noprompt norely noresetlogs noreverse normal norowdependencies noschemacheck ' +\n            'noswitch not nothing notice notrim novalidate now nowait nth_value nullif nulls num numb numbe ' +\n            'nvarchar nvarchar2 object ocicoll ocidate ocidatetime ociduration ociinterval ociloblocator ocinumber ' +\n            'ociref ocirefcursor ocirowid ocistring ocitype oct octet_length of off offline offset oid oidindex old ' +\n            'on online only opaque open operations operator optimal optimize option optionally or oracle oracle_date ' +\n            'oradata ord ordaudio orddicom orddoc order ordimage ordinality ordvideo organization orlany orlvary ' +\n            'out outer outfile outline output over overflow overriding package pad parallel parallel_enable ' +\n            'parameters parent parse partial partition partitions pascal passing password password_grace_time ' +\n            'password_lock_time password_reuse_max password_reuse_time password_verify_function patch path patindex ' +\n            'pctincrease pctthreshold pctused pctversion percent percent_rank percentile_cont percentile_disc ' +\n            'performance period period_add period_diff permanent physical pi pipe pipelined pivot pluggable plugin ' +\n            'policy position post_transaction pow power pragma prebuilt precedes preceding precision prediction ' +\n            'prediction_cost prediction_details prediction_probability prediction_set prepare present preserve ' +\n            'prior priority private private_sga privileges procedural procedure procedure_analyze processlist ' +\n            'profiles project prompt protection public publishingservername purge quarter query quick quiesce quota ' +\n            'quotename radians raise rand range rank raw read reads readsize rebuild record records ' +\n            'recover recovery recursive recycle redo reduced ref reference referenced references referencing refresh ' +\n            'regexp_like register regr_avgx regr_avgy regr_count regr_intercept regr_r2 regr_slope regr_sxx regr_sxy ' +\n            'reject rekey relational relative relaylog release release_lock relies_on relocate rely rem remainder rename ' +\n            'repair repeat replace replicate replication required reset resetlogs resize resource respect restore ' +\n            'restricted result result_cache resumable resume retention return returning returns reuse reverse revoke ' +\n            'right rlike role roles rollback rolling rollup round row row_count rowdependencies rowid rownum rows ' +\n            'rtrim rules safe salt sample save savepoint sb1 sb2 sb4 scan schema schemacheck scn scope scroll ' +\n            'sdo_georaster sdo_topo_geometry search sec_to_time second section securefile security seed segment select ' +\n            'self sequence sequential serializable server servererror session session_user sessions_per_user set ' +\n            'sets settings sha sha1 sha2 share shared shared_pool short show shrink shutdown si_averagecolor ' +\n            'si_colorhistogram si_featurelist si_positionalcolor si_stillimage si_texture siblings sid sign sin ' +\n            'size size_t sizes skip slave sleep smalldatetimefromparts smallfile snapshot some soname sort soundex ' +\n            'source space sparse spfile split sql sql_big_result sql_buffer_result sql_cache sql_calc_found_rows ' +\n            'sql_small_result sql_variant_property sqlcode sqldata sqlerror sqlname sqlstate sqrt square standalone ' +\n            'standby start starting startup statement static statistics stats_binomial_test stats_crosstab ' +\n            'stats_ks_test stats_mode stats_mw_test stats_one_way_anova stats_t_test_ stats_t_test_indep ' +\n            'stats_t_test_one stats_t_test_paired stats_wsr_test status std stddev stddev_pop stddev_samp stdev ' +\n            'stop storage store stored str str_to_date straight_join strcmp strict string struct stuff style subdate ' +\n            'subpartition subpartitions substitutable substr substring subtime subtring_index subtype success sum ' +\n            'suspend switch switchoffset switchover sync synchronous synonym sys sys_xmlagg sysasm sysaux sysdate ' +\n            'sysdatetimeoffset sysdba sysoper system system_user sysutcdatetime table tables tablespace tan tdo ' +\n            'template temporary terminated tertiary_weights test than then thread through tier ties time time_format ' +\n            'time_zone timediff timefromparts timeout timestamp timestampadd timestampdiff timezone_abbr ' +\n            'timezone_minute timezone_region to to_base64 to_date to_days to_seconds todatetimeoffset trace tracking ' +\n            'transaction transactional translate translation treat trigger trigger_nestlevel triggers trim truncate ' +\n            'try_cast try_convert try_parse type ub1 ub2 ub4 ucase unarchived unbounded uncompress ' +\n            'under undo unhex unicode uniform uninstall union unique unix_timestamp unknown unlimited unlock unpivot ' +\n            'unrecoverable unsafe unsigned until untrusted unusable unused update updated upgrade upped upper upsert ' +\n            'url urowid usable usage use use_stored_outlines user user_data user_resources users using utc_date ' +\n            'utc_timestamp uuid uuid_short validate validate_password_strength validation valist value values var ' +\n            'var_samp varcharc vari varia variab variabl variable variables variance varp varraw varrawc varray ' +\n            'verify version versions view virtual visible void wait wallet warning warnings week weekday weekofyear ' +\n            'wellformed when whene whenev wheneve whenever where while whitespace with within without work wrapped ' +\n            'xdb xml xmlagg xmlattributes xmlcast xmlcolattval xmlelement xmlexists xmlforest xmlindex xmlnamespaces ' +\n            'xmlpi xmlquery xmlroot xmlschema xmlserialize xmltable xmltype xor year year_to_month years yearweek',\n          literal:\n            'true false null',\n          built_in:\n            'array bigint binary bit blob boolean char character date dec decimal float int int8 integer interval number ' +\n            'numeric real record serial serial8 smallint text varchar varying void'\n        },\n        contains: [\n          {\n            className: 'string',\n            begin: '\\'', end: '\\'',\n            contains: [hljs.BACKSLASH_ESCAPE, {begin: '\\'\\''}]\n          },\n          {\n            className: 'string',\n            begin: '\"', end: '\"',\n            contains: [hljs.BACKSLASH_ESCAPE, {begin: '\"\"'}]\n          },\n          {\n            className: 'string',\n            begin: '`', end: '`',\n            contains: [hljs.BACKSLASH_ESCAPE]\n          },\n          hljs.C_NUMBER_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          COMMENT_MODE\n        ]\n      },\n      hljs.C_BLOCK_COMMENT_MODE,\n      COMMENT_MODE\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/sql.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/stan.js":
/*!*********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/stan.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  return {\n    contains: [\n      hljs.HASH_COMMENT_MODE,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        begin: hljs.UNDERSCORE_IDENT_RE,\n        lexemes: hljs.UNDERSCORE_IDENT_RE,\n        keywords: {\n          // Stan's keywords\n          name:\n            'for in while repeat until if then else',\n          // Stan's probablity distributions (less beta and gamma, as commonly\n          // used for parameter names). So far, _log and _rng variants are not\n          // included\n          symbol:\n            'bernoulli bernoulli_logit binomial binomial_logit '               +\n            'beta_binomial hypergeometric categorical categorical_logit '      +\n            'ordered_logistic neg_binomial neg_binomial_2 '                    +\n            'neg_binomial_2_log poisson poisson_log multinomial normal '       +\n            'exp_mod_normal skew_normal student_t cauchy double_exponential '  +\n            'logistic gumbel lognormal chi_square inv_chi_square '             +\n            'scaled_inv_chi_square exponential inv_gamma weibull frechet '     +\n            'rayleigh wiener pareto pareto_type_2 von_mises uniform '          +\n            'multi_normal multi_normal_prec multi_normal_cholesky multi_gp '   +\n            'multi_gp_cholesky multi_student_t gaussian_dlm_obs dirichlet '    +\n            'lkj_corr lkj_corr_cholesky wishart inv_wishart',\n          // Stan's data types\n          'selector-tag':\n            'int real vector simplex unit_vector ordered positive_ordered '    +\n            'row_vector matrix cholesky_factor_corr cholesky_factor_cov '      +\n            'corr_matrix cov_matrix',\n          // Stan's model blocks\n          title:\n            'functions model data parameters quantities transformed '          +\n            'generated',\n          literal:\n            'true false'\n        },\n        relevance: 0\n      },\n      // The below is all taken from the R language definition\n      {\n        // hex value\n        className: 'number',\n        begin: \"0[xX][0-9a-fA-F]+[Li]?\\\\b\",\n        relevance: 0\n      },\n      {\n        // hex value\n        className: 'number',\n        begin: \"0[xX][0-9a-fA-F]+[Li]?\\\\b\",\n        relevance: 0\n      },\n      {\n        // explicit integer\n        className: 'number',\n        begin: \"\\\\d+(?:[eE][+\\\\-]?\\\\d*)?L\\\\b\",\n        relevance: 0\n      },\n      {\n        // number with trailing decimal\n        className: 'number',\n        begin: \"\\\\d+\\\\.(?!\\\\d)(?:i\\\\b)?\",\n        relevance: 0\n      },\n      {\n        // number\n        className: 'number',\n        begin: \"\\\\d+(?:\\\\.\\\\d*)?(?:[eE][+\\\\-]?\\\\d*)?i?\\\\b\",\n        relevance: 0\n      },\n      {\n        // number with leading decimal\n        className: 'number',\n        begin: \"\\\\.\\\\d+(?:[eE][+\\\\-]?\\\\d*)?i?\\\\b\",\n        relevance: 0\n      }\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/stan.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/stata.js":
/*!**********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/stata.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  return {\n    aliases: ['do', 'ado'],\n    case_insensitive: true,\n    keywords: 'if else in foreach for forv forva forval forvalu forvalue forvalues by bys bysort xi quietly qui capture about ac ac_7 acprplot acprplot_7 adjust ado adopath adoupdate alpha ameans an ano anov anova anova_estat anova_terms anovadef aorder ap app appe appen append arch arch_dr arch_estat arch_p archlm areg areg_p args arima arima_dr arima_estat arima_p as asmprobit asmprobit_estat asmprobit_lf asmprobit_mfx__dlg asmprobit_p ass asse asser assert avplot avplot_7 avplots avplots_7 bcskew0 bgodfrey binreg bip0_lf biplot bipp_lf bipr_lf bipr_p biprobit bitest bitesti bitowt blogit bmemsize boot bootsamp bootstrap bootstrap_8 boxco_l boxco_p boxcox boxcox_6 boxcox_p bprobit br break brier bro brow brows browse brr brrstat bs bs_7 bsampl_w bsample bsample_7 bsqreg bstat bstat_7 bstat_8 bstrap bstrap_7 ca ca_estat ca_p cabiplot camat canon canon_8 canon_8_p canon_estat canon_p cap caprojection capt captu captur capture cat cc cchart cchart_7 cci cd censobs_table centile cf char chdir checkdlgfiles checkestimationsample checkhlpfiles checksum chelp ci cii cl class classutil clear cli clis clist clo clog clog_lf clog_p clogi clogi_sw clogit clogit_lf clogit_p clogitp clogl_sw cloglog clonevar clslistarray cluster cluster_measures cluster_stop cluster_tree cluster_tree_8 clustermat cmdlog cnr cnre cnreg cnreg_p cnreg_sw cnsreg codebook collaps4 collapse colormult_nb colormult_nw compare compress conf confi confir confirm conren cons const constr constra constrai constrain constraint continue contract copy copyright copysource cor corc corr corr2data corr_anti corr_kmo corr_smc corre correl correla correlat correlate corrgram cou coun count cox cox_p cox_sw coxbase coxhaz coxvar cprplot cprplot_7 crc cret cretu cretur creturn cross cs cscript cscript_log csi ct ct_is ctset ctst_5 ctst_st cttost cumsp cumsp_7 cumul cusum cusum_7 cutil d|0 datasig datasign datasigna datasignat datasignatu datasignatur datasignature datetof db dbeta de dec deco decod decode deff des desc descr descri describ describe destring dfbeta dfgls dfuller di di_g dir dirstats dis discard disp disp_res disp_s displ displa display distinct do doe doed doedi doedit dotplot dotplot_7 dprobit drawnorm drop ds ds_util dstdize duplicates durbina dwstat dydx e|0 ed edi edit egen eivreg emdef en enc enco encod encode eq erase ereg ereg_lf ereg_p ereg_sw ereghet ereghet_glf ereghet_glf_sh ereghet_gp ereghet_ilf ereghet_ilf_sh ereghet_ip eret eretu eretur ereturn err erro error est est_cfexist est_cfname est_clickable est_expand est_hold est_table est_unhold est_unholdok estat estat_default estat_summ estat_vce_only esti estimates etodow etof etomdy ex exi exit expand expandcl fac fact facto factor factor_estat factor_p factor_pca_rotated factor_rotate factormat fcast fcast_compute fcast_graph fdades fdadesc fdadescr fdadescri fdadescrib fdadescribe fdasav fdasave fdause fh_st file open file read file close file filefilter fillin find_hlp_file findfile findit findit_7 fit fl fli flis flist for5_0 form forma format fpredict frac_154 frac_adj frac_chk frac_cox frac_ddp frac_dis frac_dv frac_in frac_mun frac_pp frac_pq frac_pv frac_wgt frac_xo fracgen fracplot fracplot_7 fracpoly fracpred fron_ex fron_hn fron_p fron_tn fron_tn2 frontier ftodate ftoe ftomdy ftowdate g|0 gamhet_glf gamhet_gp gamhet_ilf gamhet_ip gamma gamma_d2 gamma_p gamma_sw gammahet gdi_hexagon gdi_spokes ge gen gene gener genera generat generate genrank genstd genvmean gettoken gl gladder gladder_7 glim_l01 glim_l02 glim_l03 glim_l04 glim_l05 glim_l06 glim_l07 glim_l08 glim_l09 glim_l10 glim_l11 glim_l12 glim_lf glim_mu glim_nw1 glim_nw2 glim_nw3 glim_p glim_v1 glim_v2 glim_v3 glim_v4 glim_v5 glim_v6 glim_v7 glm glm_6 glm_p glm_sw glmpred glo glob globa global glogit glogit_8 glogit_p gmeans gnbre_lf gnbreg gnbreg_5 gnbreg_p gomp_lf gompe_sw gomper_p gompertz gompertzhet gomphet_glf gomphet_glf_sh gomphet_gp gomphet_ilf gomphet_ilf_sh gomphet_ip gphdot gphpen gphprint gprefs gprobi_p gprobit gprobit_8 gr gr7 gr_copy gr_current gr_db gr_describe gr_dir gr_draw gr_draw_replay gr_drop gr_edit gr_editviewopts gr_example gr_example2 gr_export gr_print gr_qscheme gr_query gr_read gr_rename gr_replay gr_save gr_set gr_setscheme gr_table gr_undo gr_use graph graph7 grebar greigen greigen_7 greigen_8 grmeanby grmeanby_7 gs_fileinfo gs_filetype gs_graphinfo gs_stat gsort gwood h|0 hadimvo hareg hausman haver he heck_d2 heckma_p heckman heckp_lf heckpr_p heckprob hel help hereg hetpr_lf hetpr_p hetprob hettest hexdump hilite hist hist_7 histogram hlogit hlu hmeans hotel hotelling hprobit hreg hsearch icd9 icd9_ff icd9p iis impute imtest inbase include inf infi infil infile infix inp inpu input ins insheet insp inspe inspec inspect integ inten intreg intreg_7 intreg_p intrg2_ll intrg_ll intrg_ll2 ipolate iqreg ir irf irf_create irfm iri is_svy is_svysum isid istdize ivprob_1_lf ivprob_lf ivprobit ivprobit_p ivreg ivreg_footnote ivtob_1_lf ivtob_lf ivtobit ivtobit_p jackknife jacknife jknife jknife_6 jknife_8 jkstat joinby kalarma1 kap kap_3 kapmeier kappa kapwgt kdensity kdensity_7 keep ksm ksmirnov ktau kwallis l|0 la lab labe label labelbook ladder levels levelsof leverage lfit lfit_p li lincom line linktest lis list lloghet_glf lloghet_glf_sh lloghet_gp lloghet_ilf lloghet_ilf_sh lloghet_ip llogi_sw llogis_p llogist llogistic llogistichet lnorm_lf lnorm_sw lnorma_p lnormal lnormalhet lnormhet_glf lnormhet_glf_sh lnormhet_gp lnormhet_ilf lnormhet_ilf_sh lnormhet_ip lnskew0 loadingplot loc loca local log logi logis_lf logistic logistic_p logit logit_estat logit_p loglogs logrank loneway lookfor lookup lowess lowess_7 lpredict lrecomp lroc lroc_7 lrtest ls lsens lsens_7 lsens_x lstat ltable ltable_7 ltriang lv lvr2plot lvr2plot_7 m|0 ma mac macr macro makecns man manova manova_estat manova_p manovatest mantel mark markin markout marksample mat mat_capp mat_order mat_put_rr mat_rapp mata mata_clear mata_describe mata_drop mata_matdescribe mata_matsave mata_matuse mata_memory mata_mlib mata_mosave mata_rename mata_which matalabel matcproc matlist matname matr matri matrix matrix_input__dlg matstrik mcc mcci md0_ md1_ md1debug_ md2_ md2debug_ mds mds_estat mds_p mdsconfig mdslong mdsmat mdsshepard mdytoe mdytof me_derd mean means median memory memsize meqparse mer merg merge mfp mfx mhelp mhodds minbound mixed_ll mixed_ll_reparm mkassert mkdir mkmat mkspline ml ml_5 ml_adjs ml_bhhhs ml_c_d ml_check ml_clear ml_cnt ml_debug ml_defd ml_e0 ml_e0_bfgs ml_e0_cycle ml_e0_dfp ml_e0i ml_e1 ml_e1_bfgs ml_e1_bhhh ml_e1_cycle ml_e1_dfp ml_e2 ml_e2_cycle ml_ebfg0 ml_ebfr0 ml_ebfr1 ml_ebh0q ml_ebhh0 ml_ebhr0 ml_ebr0i ml_ecr0i ml_edfp0 ml_edfr0 ml_edfr1 ml_edr0i ml_eds ml_eer0i ml_egr0i ml_elf ml_elf_bfgs ml_elf_bhhh ml_elf_cycle ml_elf_dfp ml_elfi ml_elfs ml_enr0i ml_enrr0 ml_erdu0 ml_erdu0_bfgs ml_erdu0_bhhh ml_erdu0_bhhhq ml_erdu0_cycle ml_erdu0_dfp ml_erdu0_nrbfgs ml_exde ml_footnote ml_geqnr ml_grad0 ml_graph ml_hbhhh ml_hd0 ml_hold ml_init ml_inv ml_log ml_max ml_mlout ml_mlout_8 ml_model ml_nb0 ml_opt ml_p ml_plot ml_query ml_rdgrd ml_repor ml_s_e ml_score ml_searc ml_technique ml_unhold mleval mlf_ mlmatbysum mlmatsum mlog mlogi mlogit mlogit_footnote mlogit_p mlopts mlsum mlvecsum mnl0_ mor more mov move mprobit mprobit_lf mprobit_p mrdu0_ mrdu1_ mvdecode mvencode mvreg mvreg_estat n|0 nbreg nbreg_al nbreg_lf nbreg_p nbreg_sw nestreg net newey newey_7 newey_p news nl nl_7 nl_9 nl_9_p nl_p nl_p_7 nlcom nlcom_p nlexp2 nlexp2_7 nlexp2a nlexp2a_7 nlexp3 nlexp3_7 nlgom3 nlgom3_7 nlgom4 nlgom4_7 nlinit nllog3 nllog3_7 nllog4 nllog4_7 nlog_rd nlogit nlogit_p nlogitgen nlogittree nlpred no nobreak noi nois noisi noisil noisily note notes notes_dlg nptrend numlabel numlist odbc old_ver olo olog ologi ologi_sw ologit ologit_p ologitp on one onew onewa oneway op_colnm op_comp op_diff op_inv op_str opr opro oprob oprob_sw oprobi oprobi_p oprobit oprobitp opts_exclusive order orthog orthpoly ou out outf outfi outfil outfile outs outsh outshe outshee outsheet ovtest pac pac_7 palette parse parse_dissim pause pca pca_8 pca_display pca_estat pca_p pca_rotate pcamat pchart pchart_7 pchi pchi_7 pcorr pctile pentium pergram pergram_7 permute permute_8 personal peto_st pkcollapse pkcross pkequiv pkexamine pkexamine_7 pkshape pksumm pksumm_7 pl plo plot plugin pnorm pnorm_7 poisgof poiss_lf poiss_sw poisso_p poisson poisson_estat post postclose postfile postutil pperron pr prais prais_e prais_e2 prais_p predict predictnl preserve print pro prob probi probit probit_estat probit_p proc_time procoverlay procrustes procrustes_estat procrustes_p profiler prog progr progra program prop proportion prtest prtesti pwcorr pwd q\\\\s qby qbys qchi qchi_7 qladder qladder_7 qnorm qnorm_7 qqplot qqplot_7 qreg qreg_c qreg_p qreg_sw qu quadchk quantile quantile_7 que quer query range ranksum ratio rchart rchart_7 rcof recast reclink recode reg reg3 reg3_p regdw regr regre regre_p2 regres regres_p regress regress_estat regriv_p remap ren rena renam rename renpfix repeat replace report reshape restore ret retu retur return rm rmdir robvar roccomp roccomp_7 roccomp_8 rocf_lf rocfit rocfit_8 rocgold rocplot rocplot_7 roctab roctab_7 rolling rologit rologit_p rot rota rotat rotate rotatemat rreg rreg_p ru run runtest rvfplot rvfplot_7 rvpplot rvpplot_7 sa safesum sample sampsi sav save savedresults saveold sc sca scal scala scalar scatter scm_mine sco scob_lf scob_p scobi_sw scobit scor score scoreplot scoreplot_help scree screeplot screeplot_help sdtest sdtesti se search separate seperate serrbar serrbar_7 serset set set_defaults sfrancia sh she shel shell shewhart shewhart_7 signestimationsample signrank signtest simul simul_7 simulate simulate_8 sktest sleep slogit slogit_d2 slogit_p smooth snapspan so sor sort spearman spikeplot spikeplot_7 spikeplt spline_x split sqreg sqreg_p sret sretu sretur sreturn ssc st st_ct st_hc st_hcd st_hcd_sh st_is st_issys st_note st_promo st_set st_show st_smpl st_subid stack statsby statsby_8 stbase stci stci_7 stcox stcox_estat stcox_fr stcox_fr_ll stcox_p stcox_sw stcoxkm stcoxkm_7 stcstat stcurv stcurve stcurve_7 stdes stem stepwise stereg stfill stgen stir stjoin stmc stmh stphplot stphplot_7 stphtest stphtest_7 stptime strate strate_7 streg streg_sw streset sts sts_7 stset stsplit stsum sttocc sttoct stvary stweib su suest suest_8 sum summ summa summar summari summariz summarize sunflower sureg survcurv survsum svar svar_p svmat svy svy_disp svy_dreg svy_est svy_est_7 svy_estat svy_get svy_gnbreg_p svy_head svy_header svy_heckman_p svy_heckprob_p svy_intreg_p svy_ivreg_p svy_logistic_p svy_logit_p svy_mlogit_p svy_nbreg_p svy_ologit_p svy_oprobit_p svy_poisson_p svy_probit_p svy_regress_p svy_sub svy_sub_7 svy_x svy_x_7 svy_x_p svydes svydes_8 svygen svygnbreg svyheckman svyheckprob svyintreg svyintreg_7 svyintrg svyivreg svylc svylog_p svylogit svymarkout svymarkout_8 svymean svymlog svymlogit svynbreg svyolog svyologit svyoprob svyoprobit svyopts svypois svypois_7 svypoisson svyprobit svyprobt svyprop svyprop_7 svyratio svyreg svyreg_p svyregress svyset svyset_7 svyset_8 svytab svytab_7 svytest svytotal sw sw_8 swcnreg swcox swereg swilk swlogis swlogit swologit swoprbt swpois swprobit swqreg swtobit swweib symmetry symmi symplot symplot_7 syntax sysdescribe sysdir sysuse szroeter ta tab tab1 tab2 tab_or tabd tabdi tabdis tabdisp tabi table tabodds tabodds_7 tabstat tabu tabul tabula tabulat tabulate te tempfile tempname tempvar tes test testnl testparm teststd tetrachoric time_it timer tis tob tobi tobit tobit_p tobit_sw token tokeni tokeniz tokenize tostring total translate translator transmap treat_ll treatr_p treatreg trim trnb_cons trnb_mean trpoiss_d2 trunc_ll truncr_p truncreg tsappend tset tsfill tsline tsline_ex tsreport tsrevar tsrline tsset tssmooth tsunab ttest ttesti tut_chk tut_wait tutorial tw tware_st two twoway twoway__fpfit_serset twoway__function_gen twoway__histogram_gen twoway__ipoint_serset twoway__ipoints_serset twoway__kdensity_gen twoway__lfit_serset twoway__normgen_gen twoway__pci_serset twoway__qfit_serset twoway__scatteri_serset twoway__sunflower_gen twoway_ksm_serset ty typ type typeof u|0 unab unabbrev unabcmd update us use uselabel var var_mkcompanion var_p varbasic varfcast vargranger varirf varirf_add varirf_cgraph varirf_create varirf_ctable varirf_describe varirf_dir varirf_drop varirf_erase varirf_graph varirf_ograph varirf_rename varirf_set varirf_table varlist varlmar varnorm varsoc varstable varstable_w varstable_w2 varwle vce vec vec_fevd vec_mkphi vec_p vec_p_w vecirf_create veclmar veclmar_w vecnorm vecnorm_w vecrank vecstable verinst vers versi versio version view viewsource vif vwls wdatetof webdescribe webseek webuse weib1_lf weib2_lf weib_lf weib_lf0 weibhet_glf weibhet_glf_sh weibhet_glfa weibhet_glfa_sh weibhet_gp weibhet_ilf weibhet_ilf_sh weibhet_ilfa weibhet_ilfa_sh weibhet_ip weibu_sw weibul_p weibull weibull_c weibull_s weibullhet wh whelp whi which whil while wilc_st wilcoxon win wind windo window winexec wntestb wntestb_7 wntestq xchart xchart_7 xcorr xcorr_7 xi xi_6 xmlsav xmlsave xmluse xpose xsh xshe xshel xshell xt_iis xt_tis xtab_p xtabond xtbin_p xtclog xtcloglog xtcloglog_8 xtcloglog_d2 xtcloglog_pa_p xtcloglog_re_p xtcnt_p xtcorr xtdata xtdes xtfront_p xtfrontier xtgee xtgee_elink xtgee_estat xtgee_makeivar xtgee_p xtgee_plink xtgls xtgls_p xthaus xthausman xtht_p xthtaylor xtile xtint_p xtintreg xtintreg_8 xtintreg_d2 xtintreg_p xtivp_1 xtivp_2 xtivreg xtline xtline_ex xtlogit xtlogit_8 xtlogit_d2 xtlogit_fe_p xtlogit_pa_p xtlogit_re_p xtmixed xtmixed_estat xtmixed_p xtnb_fe xtnb_lf xtnbreg xtnbreg_pa_p xtnbreg_refe_p xtpcse xtpcse_p xtpois xtpoisson xtpoisson_d2 xtpoisson_pa_p xtpoisson_refe_p xtpred xtprobit xtprobit_8 xtprobit_d2 xtprobit_re_p xtps_fe xtps_lf xtps_ren xtps_ren_8 xtrar_p xtrc xtrc_p xtrchh xtrefe_p xtreg xtreg_be xtreg_fe xtreg_ml xtreg_pa_p xtreg_re xtregar xtrere_p xtset xtsf_ll xtsf_llti xtsum xttab xttest0 xttobit xttobit_8 xttobit_p xttrans yx yxview__barlike_draw yxview_area_draw yxview_bar_draw yxview_dot_draw yxview_dropline_draw yxview_function_draw yxview_iarrow_draw yxview_ilabels_draw yxview_normal_draw yxview_pcarrow_draw yxview_pcbarrow_draw yxview_pccapsym_draw yxview_pcscatter_draw yxview_pcspike_draw yxview_rarea_draw yxview_rbar_draw yxview_rbarm_draw yxview_rcap_draw yxview_rcapsym_draw yxview_rconnected_draw yxview_rline_draw yxview_rscatter_draw yxview_rspike_draw yxview_spike_draw yxview_sunflower_draw zap_s zinb zinb_llf zinb_plf zip zip_llf zip_p zip_plf zt_ct_5 zt_hc_5 zt_hcd_5 zt_is_5 zt_iss_5 zt_sho_5 zt_smp_5 ztbase_5 ztcox_5 ztdes_5 ztereg_5 ztfill_5 ztgen_5 ztir_5 ztjoin_5 ztnb ztnb_p ztp ztp_p zts_5 ztset_5 ztspli_5 ztsum_5 zttoct_5 ztvary_5 ztweib_5',\n        contains: [\n      {\n        className: 'symbol',\n        begin: /`[a-zA-Z0-9_]+'/\n      },\n      {\n        className: 'variable',\n        begin: /\\$\\{?[a-zA-Z0-9_]+\\}?/\n      },\n      {\n        className: 'string',\n        variants: [\n          {begin: '`\"[^\\r\\n]*?\"\\''},\n          {begin: '\"[^\\r\\n\"]*\"'}\n        ]\n      },\n\n      {\n        className: 'built_in',\n        variants: [\n          {\n            begin: '\\\\b(abs|acos|asin|atan|atan2|atanh|ceil|cloglog|comb|cos|digamma|exp|floor|invcloglog|invlogit|ln|lnfact|lnfactorial|lngamma|log|log10|max|min|mod|reldif|round|sign|sin|sqrt|sum|tan|tanh|trigamma|trunc|betaden|Binomial|binorm|binormal|chi2|chi2tail|dgammapda|dgammapdada|dgammapdadx|dgammapdx|dgammapdxdx|F|Fden|Ftail|gammaden|gammap|ibeta|invbinomial|invchi2|invchi2tail|invF|invFtail|invgammap|invibeta|invnchi2|invnFtail|invnibeta|invnorm|invnormal|invttail|nbetaden|nchi2|nFden|nFtail|nibeta|norm|normal|normalden|normd|npnchi2|tden|ttail|uniform|abbrev|char|index|indexnot|length|lower|ltrim|match|plural|proper|real|regexm|regexr|regexs|reverse|rtrim|string|strlen|strlower|strltrim|strmatch|strofreal|strpos|strproper|strreverse|strrtrim|strtrim|strupper|subinstr|subinword|substr|trim|upper|word|wordcount|_caller|autocode|byteorder|chop|clip|cond|e|epsdouble|epsfloat|group|inlist|inrange|irecode|matrix|maxbyte|maxdouble|maxfloat|maxint|maxlong|mi|minbyte|mindouble|minfloat|minint|minlong|missing|r|recode|replay|return|s|scalar|d|date|day|dow|doy|halfyear|mdy|month|quarter|week|year|d|daily|dofd|dofh|dofm|dofq|dofw|dofy|h|halfyearly|hofd|m|mofd|monthly|q|qofd|quarterly|tin|twithin|w|weekly|wofd|y|yearly|yh|ym|yofd|yq|yw|cholesky|colnumb|colsof|corr|det|diag|diag0cnt|el|get|hadamard|I|inv|invsym|issym|issymmetric|J|matmissing|matuniform|mreldif|nullmat|rownumb|rowsof|sweep|syminv|trace|vec|vecdiag)(?=\\\\(|$)'\n          }\n        ]\n      },\n\n      hljs.COMMENT('^[ \\t]*\\\\*.*$', false),\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/stata.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/step21.js":
/*!***********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/step21.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var STEP21_IDENT_RE = '[A-Z_][A-Z0-9_.]*';\n  var STEP21_KEYWORDS = {\n    keyword: 'HEADER ENDSEC DATA'\n  };\n  var STEP21_START = {\n    className: 'meta',\n    begin: 'ISO-10303-21;',\n    relevance: 10\n  };\n  var STEP21_CLOSE = {\n    className: 'meta',\n    begin: 'END-ISO-10303-21;',\n    relevance: 10\n  };\n\n  return {\n    aliases: ['p21', 'step', 'stp'],\n    case_insensitive: true, // STEP 21 is case insensitive in theory, in practice all non-comments are capitalized.\n    lexemes: STEP21_IDENT_RE,\n    keywords: STEP21_KEYWORDS,\n    contains: [\n      STEP21_START,\n      STEP21_CLOSE,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.COMMENT('/\\\\*\\\\*!', '\\\\*/'),\n      hljs.C_NUMBER_MODE,\n      hljs.inherit(hljs.APOS_STRING_MODE, {illegal: null}),\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null}),\n      {\n        className: 'string',\n        begin: \"'\", end: \"'\"\n      },\n      {\n        className: 'symbol',\n        variants: [\n          {\n            begin: '#', end: '\\\\d+',\n            illegal: '\\\\W'\n          }\n        ]\n      }\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/step21.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/stylus.js":
/*!***********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/stylus.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n\n  var VARIABLE = {\n    className: 'variable',\n    begin: '\\\\$' + hljs.IDENT_RE\n  };\n\n  var HEX_COLOR = {\n    className: 'number',\n    begin: '#([a-fA-F0-9]{6}|[a-fA-F0-9]{3})'\n  };\n\n  var AT_KEYWORDS = [\n    'charset',\n    'css',\n    'debug',\n    'extend',\n    'font-face',\n    'for',\n    'import',\n    'include',\n    'media',\n    'mixin',\n    'page',\n    'warn',\n    'while'\n  ];\n\n  var PSEUDO_SELECTORS = [\n    'after',\n    'before',\n    'first-letter',\n    'first-line',\n    'active',\n    'first-child',\n    'focus',\n    'hover',\n    'lang',\n    'link',\n    'visited'\n  ];\n\n  var TAGS = [\n    'a',\n    'abbr',\n    'address',\n    'article',\n    'aside',\n    'audio',\n    'b',\n    'blockquote',\n    'body',\n    'button',\n    'canvas',\n    'caption',\n    'cite',\n    'code',\n    'dd',\n    'del',\n    'details',\n    'dfn',\n    'div',\n    'dl',\n    'dt',\n    'em',\n    'fieldset',\n    'figcaption',\n    'figure',\n    'footer',\n    'form',\n    'h1',\n    'h2',\n    'h3',\n    'h4',\n    'h5',\n    'h6',\n    'header',\n    'hgroup',\n    'html',\n    'i',\n    'iframe',\n    'img',\n    'input',\n    'ins',\n    'kbd',\n    'label',\n    'legend',\n    'li',\n    'mark',\n    'menu',\n    'nav',\n    'object',\n    'ol',\n    'p',\n    'q',\n    'quote',\n    'samp',\n    'section',\n    'span',\n    'strong',\n    'summary',\n    'sup',\n    'table',\n    'tbody',\n    'td',\n    'textarea',\n    'tfoot',\n    'th',\n    'thead',\n    'time',\n    'tr',\n    'ul',\n    'var',\n    'video'\n  ];\n\n  var TAG_END = '[\\\\.\\\\s\\\\n\\\\[\\\\:,]';\n\n  var ATTRIBUTES = [\n    'align-content',\n    'align-items',\n    'align-self',\n    'animation',\n    'animation-delay',\n    'animation-direction',\n    'animation-duration',\n    'animation-fill-mode',\n    'animation-iteration-count',\n    'animation-name',\n    'animation-play-state',\n    'animation-timing-function',\n    'auto',\n    'backface-visibility',\n    'background',\n    'background-attachment',\n    'background-clip',\n    'background-color',\n    'background-image',\n    'background-origin',\n    'background-position',\n    'background-repeat',\n    'background-size',\n    'border',\n    'border-bottom',\n    'border-bottom-color',\n    'border-bottom-left-radius',\n    'border-bottom-right-radius',\n    'border-bottom-style',\n    'border-bottom-width',\n    'border-collapse',\n    'border-color',\n    'border-image',\n    'border-image-outset',\n    'border-image-repeat',\n    'border-image-slice',\n    'border-image-source',\n    'border-image-width',\n    'border-left',\n    'border-left-color',\n    'border-left-style',\n    'border-left-width',\n    'border-radius',\n    'border-right',\n    'border-right-color',\n    'border-right-style',\n    'border-right-width',\n    'border-spacing',\n    'border-style',\n    'border-top',\n    'border-top-color',\n    'border-top-left-radius',\n    'border-top-right-radius',\n    'border-top-style',\n    'border-top-width',\n    'border-width',\n    'bottom',\n    'box-decoration-break',\n    'box-shadow',\n    'box-sizing',\n    'break-after',\n    'break-before',\n    'break-inside',\n    'caption-side',\n    'clear',\n    'clip',\n    'clip-path',\n    'color',\n    'column-count',\n    'column-fill',\n    'column-gap',\n    'column-rule',\n    'column-rule-color',\n    'column-rule-style',\n    'column-rule-width',\n    'column-span',\n    'column-width',\n    'columns',\n    'content',\n    'counter-increment',\n    'counter-reset',\n    'cursor',\n    'direction',\n    'display',\n    'empty-cells',\n    'filter',\n    'flex',\n    'flex-basis',\n    'flex-direction',\n    'flex-flow',\n    'flex-grow',\n    'flex-shrink',\n    'flex-wrap',\n    'float',\n    'font',\n    'font-family',\n    'font-feature-settings',\n    'font-kerning',\n    'font-language-override',\n    'font-size',\n    'font-size-adjust',\n    'font-stretch',\n    'font-style',\n    'font-variant',\n    'font-variant-ligatures',\n    'font-weight',\n    'height',\n    'hyphens',\n    'icon',\n    'image-orientation',\n    'image-rendering',\n    'image-resolution',\n    'ime-mode',\n    'inherit',\n    'initial',\n    'justify-content',\n    'left',\n    'letter-spacing',\n    'line-height',\n    'list-style',\n    'list-style-image',\n    'list-style-position',\n    'list-style-type',\n    'margin',\n    'margin-bottom',\n    'margin-left',\n    'margin-right',\n    'margin-top',\n    'marks',\n    'mask',\n    'max-height',\n    'max-width',\n    'min-height',\n    'min-width',\n    'nav-down',\n    'nav-index',\n    'nav-left',\n    'nav-right',\n    'nav-up',\n    'none',\n    'normal',\n    'object-fit',\n    'object-position',\n    'opacity',\n    'order',\n    'orphans',\n    'outline',\n    'outline-color',\n    'outline-offset',\n    'outline-style',\n    'outline-width',\n    'overflow',\n    'overflow-wrap',\n    'overflow-x',\n    'overflow-y',\n    'padding',\n    'padding-bottom',\n    'padding-left',\n    'padding-right',\n    'padding-top',\n    'page-break-after',\n    'page-break-before',\n    'page-break-inside',\n    'perspective',\n    'perspective-origin',\n    'pointer-events',\n    'position',\n    'quotes',\n    'resize',\n    'right',\n    'tab-size',\n    'table-layout',\n    'text-align',\n    'text-align-last',\n    'text-decoration',\n    'text-decoration-color',\n    'text-decoration-line',\n    'text-decoration-style',\n    'text-indent',\n    'text-overflow',\n    'text-rendering',\n    'text-shadow',\n    'text-transform',\n    'text-underline-position',\n    'top',\n    'transform',\n    'transform-origin',\n    'transform-style',\n    'transition',\n    'transition-delay',\n    'transition-duration',\n    'transition-property',\n    'transition-timing-function',\n    'unicode-bidi',\n    'vertical-align',\n    'visibility',\n    'white-space',\n    'widows',\n    'width',\n    'word-break',\n    'word-spacing',\n    'word-wrap',\n    'z-index'\n  ];\n\n  // illegals\n  var ILLEGAL = [\n    '\\\\?',\n    '(\\\\bReturn\\\\b)', // monkey\n    '(\\\\bEnd\\\\b)', // monkey\n    '(\\\\bend\\\\b)', // vbscript\n    '(\\\\bdef\\\\b)', // gradle\n    ';', // a whole lot of languages\n    '#\\\\s', // markdown\n    '\\\\*\\\\s', // markdown\n    '===\\\\s', // markdown\n    '\\\\|',\n    '%', // prolog\n  ];\n\n  return {\n    aliases: ['styl'],\n    case_insensitive: false,\n    keywords: 'if else for in',\n    illegal: '(' + ILLEGAL.join('|') + ')',\n    contains: [\n\n      // strings\n      hljs.QUOTE_STRING_MODE,\n      hljs.APOS_STRING_MODE,\n\n      // comments\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n\n      // hex colors\n      HEX_COLOR,\n\n      // class tag\n      {\n        begin: '\\\\.[a-zA-Z][a-zA-Z0-9_-]*' + TAG_END,\n        returnBegin: true,\n        contains: [\n          {className: 'selector-class', begin: '\\\\.[a-zA-Z][a-zA-Z0-9_-]*'}\n        ]\n      },\n\n      // id tag\n      {\n        begin: '\\\\#[a-zA-Z][a-zA-Z0-9_-]*' + TAG_END,\n        returnBegin: true,\n        contains: [\n          {className: 'selector-id', begin: '\\\\#[a-zA-Z][a-zA-Z0-9_-]*'}\n        ]\n      },\n\n      // tags\n      {\n        begin: '\\\\b(' + TAGS.join('|') + ')' + TAG_END,\n        returnBegin: true,\n        contains: [\n          {className: 'selector-tag', begin: '\\\\b[a-zA-Z][a-zA-Z0-9_-]*'}\n        ]\n      },\n\n      // psuedo selectors\n      {\n        begin: '&?:?:\\\\b(' + PSEUDO_SELECTORS.join('|') + ')' + TAG_END\n      },\n\n      // @ keywords\n      {\n        begin: '\\@(' + AT_KEYWORDS.join('|') + ')\\\\b'\n      },\n\n      // variables\n      VARIABLE,\n\n      // dimension\n      hljs.CSS_NUMBER_MODE,\n\n      // number\n      hljs.NUMBER_MODE,\n\n      // functions\n      //  - only from beginning of line + whitespace\n      {\n        className: 'function',\n        begin: '^[a-zA-Z][a-zA-Z0-9_\\-]*\\\\(.*\\\\)',\n        illegal: '[\\\\n]',\n        returnBegin: true,\n        contains: [\n          {className: 'title', begin: '\\\\b[a-zA-Z][a-zA-Z0-9_\\-]*'},\n          {\n            className: 'params',\n            begin: /\\(/,\n            end: /\\)/,\n            contains: [\n              HEX_COLOR,\n              VARIABLE,\n              hljs.APOS_STRING_MODE,\n              hljs.CSS_NUMBER_MODE,\n              hljs.NUMBER_MODE,\n              hljs.QUOTE_STRING_MODE\n            ]\n          }\n        ]\n      },\n\n      // attributes\n      //  - only from beginning of line + whitespace\n      //  - must have whitespace after it\n      {\n        className: 'attribute',\n        begin: '\\\\b(' + ATTRIBUTES.reverse().join('|') + ')\\\\b',\n        starts: {\n          // value container\n          end: /;|$/,\n          contains: [\n            HEX_COLOR,\n            VARIABLE,\n            hljs.APOS_STRING_MODE,\n            hljs.QUOTE_STRING_MODE,\n            hljs.CSS_NUMBER_MODE,\n            hljs.NUMBER_MODE,\n            hljs.C_BLOCK_COMMENT_MODE\n          ],\n          illegal: /\\./,\n          relevance: 0\n        }\n      }\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/stylus.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/subunit.js":
/*!************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/subunit.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var DETAILS = {\n    className: 'string',\n    begin: '\\\\[\\n(multipart)?', end: '\\\\]\\n'\n  };\n  var TIME = {\n    className: 'string',\n    begin: '\\\\d{4}-\\\\d{2}-\\\\d{2}(\\\\s+)\\\\d{2}:\\\\d{2}:\\\\d{2}\\.\\\\d+Z'\n  };\n  var PROGRESSVALUE = {\n    className: 'string',\n    begin: '(\\\\+|-)\\\\d+'\n  };\n  var KEYWORDS = {\n    className: 'keyword',\n    relevance: 10,\n    variants: [\n      { begin: '^(test|testing|success|successful|failure|error|skip|xfail|uxsuccess)(:?)\\\\s+(test)?' },\n      { begin: '^progress(:?)(\\\\s+)?(pop|push)?' },\n      { begin: '^tags:' },\n      { begin: '^time:' }\n    ],\n  };\n  return {\n    case_insensitive: true,\n    contains: [\n      DETAILS,\n      TIME,\n      PROGRESSVALUE,\n      KEYWORDS\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/subunit.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/swift.js":
/*!**********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/swift.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var SWIFT_KEYWORDS = {\n      keyword: '__COLUMN__ __FILE__ __FUNCTION__ __LINE__ as as! as? associativity ' +\n        'break case catch class continue convenience default defer deinit didSet do ' +\n        'dynamic dynamicType else enum extension fallthrough false fileprivate final for func ' +\n        'get guard if import in indirect infix init inout internal is lazy left let ' +\n        'mutating nil none nonmutating open operator optional override postfix precedence ' +\n        'prefix private protocol Protocol public repeat required rethrows return ' +\n        'right self Self set static struct subscript super switch throw throws true ' +\n        'try try! try? Type typealias unowned var weak where while willSet',\n      literal: 'true false nil',\n      built_in: 'abs advance alignof alignofValue anyGenerator assert assertionFailure ' +\n        'bridgeFromObjectiveC bridgeFromObjectiveCUnconditional bridgeToObjectiveC ' +\n        'bridgeToObjectiveCUnconditional c contains count countElements countLeadingZeros ' +\n        'debugPrint debugPrintln distance dropFirst dropLast dump encodeBitsAsWords ' +\n        'enumerate equal fatalError filter find getBridgedObjectiveCType getVaList ' +\n        'indices insertionSort isBridgedToObjectiveC isBridgedVerbatimToObjectiveC ' +\n        'isUniquelyReferenced isUniquelyReferencedNonObjC join lazy lexicographicalCompare ' +\n        'map max maxElement min minElement numericCast overlaps partition posix ' +\n        'precondition preconditionFailure print println quickSort readLine reduce reflect ' +\n        'reinterpretCast reverse roundUpToAlignment sizeof sizeofValue sort split ' +\n        'startsWith stride strideof strideofValue swap toString transcode ' +\n        'underestimateCount unsafeAddressOf unsafeBitCast unsafeDowncast unsafeUnwrap ' +\n        'unsafeReflect withExtendedLifetime withObjectAtPlusZero withUnsafePointer ' +\n        'withUnsafePointerToObject withUnsafeMutablePointer withUnsafeMutablePointers ' +\n        'withUnsafePointer withUnsafePointers withVaList zip'\n    };\n\n  var TYPE = {\n    className: 'type',\n    begin: '\\\\b[A-Z][\\\\w\\u00C0-\\u02B8\\']*',\n    relevance: 0\n  };\n  var BLOCK_COMMENT = hljs.COMMENT(\n    '/\\\\*',\n    '\\\\*/',\n    {\n      contains: ['self']\n    }\n  );\n  var SUBST = {\n    className: 'subst',\n    begin: /\\\\\\(/, end: '\\\\)',\n    keywords: SWIFT_KEYWORDS,\n    contains: [] // assigned later\n  };\n  var NUMBERS = {\n      className: 'number',\n      begin: '\\\\b([\\\\d_]+(\\\\.[\\\\deE_]+)?|0x[a-fA-F0-9_]+(\\\\.[a-fA-F0-9p_]+)?|0b[01_]+|0o[0-7_]+)\\\\b',\n      relevance: 0\n  };\n  var QUOTE_STRING_MODE = hljs.inherit(hljs.QUOTE_STRING_MODE, {\n    contains: [SUBST, hljs.BACKSLASH_ESCAPE]\n  });\n  SUBST.contains = [NUMBERS];\n\n  return {\n    keywords: SWIFT_KEYWORDS,\n    contains: [\n      QUOTE_STRING_MODE,\n      hljs.C_LINE_COMMENT_MODE,\n      BLOCK_COMMENT,\n      TYPE,\n      NUMBERS,\n      {\n        className: 'function',\n        beginKeywords: 'func', end: '{', excludeEnd: true,\n        contains: [\n          hljs.inherit(hljs.TITLE_MODE, {\n            begin: /[A-Za-z$_][0-9A-Za-z$_]*/\n          }),\n          {\n            begin: /</, end: />/\n          },\n          {\n            className: 'params',\n            begin: /\\(/, end: /\\)/, endsParent: true,\n            keywords: SWIFT_KEYWORDS,\n            contains: [\n              'self',\n              NUMBERS,\n              QUOTE_STRING_MODE,\n              hljs.C_BLOCK_COMMENT_MODE,\n              {begin: ':'} // relevance booster\n            ],\n            illegal: /[\"']/\n          }\n        ],\n        illegal: /\\[|%/\n      },\n      {\n        className: 'class',\n        beginKeywords: 'struct protocol class extension enum',\n        keywords: SWIFT_KEYWORDS,\n        end: '\\\\{',\n        excludeEnd: true,\n        contains: [\n          hljs.inherit(hljs.TITLE_MODE, {begin: /[A-Za-z$_][\\u00C0-\\u02B80-9A-Za-z$_]*/})\n        ]\n      },\n      {\n        className: 'meta', // @attributes\n        begin: '(@warn_unused_result|@exported|@lazy|@noescape|' +\n                  '@NSCopying|@NSManaged|@objc|@convention|@required|' +\n                  '@noreturn|@IBAction|@IBDesignable|@IBInspectable|@IBOutlet|' +\n                  '@infix|@prefix|@postfix|@autoclosure|@testable|@available|' +\n                  '@nonobjc|@NSApplicationMain|@UIApplicationMain)'\n\n      },\n      {\n        beginKeywords: 'import', end: /$/,\n        contains: [hljs.C_LINE_COMMENT_MODE, BLOCK_COMMENT]\n      }\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/swift.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/taggerscript.js":
/*!*****************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/taggerscript.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n\n  var COMMENT = {\n    className: 'comment',\n    begin: /\\$noop\\(/,\n    end: /\\)/,\n    contains: [{\n      begin: /\\(/,\n      end: /\\)/,\n      contains: ['self', {\n        begin: /\\\\./\n      }]\n    }],\n    relevance: 10\n  };\n\n  var FUNCTION = {\n    className: 'keyword',\n    begin: /\\$(?!noop)[a-zA-Z][_a-zA-Z0-9]*/,\n    end: /\\(/,\n    excludeEnd: true\n  };\n\n  var VARIABLE = {\n    className: 'variable',\n    begin: /%[_a-zA-Z0-9:]*/,\n    end: '%'\n  };\n\n  var ESCAPE_SEQUENCE = {\n    className: 'symbol',\n    begin: /\\\\./\n  };\n\n  return {\n    contains: [\n      COMMENT,\n      FUNCTION,\n      VARIABLE,\n      ESCAPE_SEQUENCE\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/taggerscript.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/tap.js":
/*!********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/tap.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  return {\n    case_insensitive: true,\n    contains: [\n      hljs.HASH_COMMENT_MODE,\n      // version of format and total amount of testcases\n      {\n        className: 'meta',\n        variants: [\n          { begin: '^TAP version (\\\\d+)$' },\n          { begin: '^1\\\\.\\\\.(\\\\d+)$' }\n        ],\n      },\n      // YAML block\n      {\n        begin: '(\\s+)?---$', end: '\\\\.\\\\.\\\\.$',\n        subLanguage: 'yaml',\n        relevance: 0\n      },\n\t  // testcase number\n      {\n        className: 'number',\n        begin: ' (\\\\d+) '\n      },\n\t  // testcase status and description\n      {\n        className: 'symbol',\n        variants: [\n          { begin: '^ok' },\n          { begin: '^not ok' }\n        ],\n      },\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/tap.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/tcl.js":
/*!********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/tcl.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  return {\n    aliases: ['tk'],\n    keywords: 'after append apply array auto_execok auto_import auto_load auto_mkindex ' +\n      'auto_mkindex_old auto_qualify auto_reset bgerror binary break catch cd chan clock ' +\n      'close concat continue dde dict encoding eof error eval exec exit expr fblocked ' +\n      'fconfigure fcopy file fileevent filename flush for foreach format gets glob global ' +\n      'history http if incr info interp join lappend|10 lassign|10 lindex|10 linsert|10 list ' +\n      'llength|10 load lrange|10 lrepeat|10 lreplace|10 lreverse|10 lsearch|10 lset|10 lsort|10 '+\n      'mathfunc mathop memory msgcat namespace open package parray pid pkg::create pkg_mkIndex '+\n      'platform platform::shell proc puts pwd read refchan regexp registry regsub|10 rename '+\n      'return safe scan seek set socket source split string subst switch tcl_endOfWord '+\n      'tcl_findLibrary tcl_startOfNextWord tcl_startOfPreviousWord tcl_wordBreakAfter '+\n      'tcl_wordBreakBefore tcltest tclvars tell time tm trace unknown unload unset update '+\n      'uplevel upvar variable vwait while',\n    contains: [\n      hljs.COMMENT(';[ \\\\t]*#', '$'),\n      hljs.COMMENT('^[ \\\\t]*#', '$'),\n      {\n        beginKeywords: 'proc',\n        end: '[\\\\{]',\n        excludeEnd: true,\n        contains: [\n          {\n            className: 'title',\n            begin: '[ \\\\t\\\\n\\\\r]+(::)?[a-zA-Z_]((::)?[a-zA-Z0-9_])*',\n            end: '[ \\\\t\\\\n\\\\r]',\n            endsWithParent: true,\n            excludeEnd: true\n          }\n        ]\n      },\n      {\n        excludeEnd: true,\n        variants: [\n          {\n            begin: '\\\\$(\\\\{)?(::)?[a-zA-Z_]((::)?[a-zA-Z0-9_])*\\\\(([a-zA-Z0-9_])*\\\\)',\n            end: '[^a-zA-Z0-9_\\\\}\\\\$]'\n          },\n          {\n            begin: '\\\\$(\\\\{)?(::)?[a-zA-Z_]((::)?[a-zA-Z0-9_])*',\n            end: '(\\\\))?[^a-zA-Z0-9_\\\\}\\\\$]'\n          }\n        ]\n      },\n      {\n        className: 'string',\n        contains: [hljs.BACKSLASH_ESCAPE],\n        variants: [\n          hljs.inherit(hljs.APOS_STRING_MODE, {illegal: null}),\n          hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null})\n        ]\n      },\n      {\n        className: 'number',\n        variants: [hljs.BINARY_NUMBER_MODE, hljs.C_NUMBER_MODE]\n      }\n    ]\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/tcl.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/tex.js":
/*!********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/tex.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var COMMAND = {\n    className: 'tag',\n    begin: /\\\\/,\n    relevance: 0,\n    contains: [\n      {\n        className: 'name',\n        variants: [\n          {begin: /[a-zA-Zа-яА-я]+[*]?/},\n          {begin: /[^a-zA-Zа-яА-я0-9]/}\n        ],\n        starts: {\n          endsWithParent: true,\n          relevance: 0,\n          contains: [\n            {\n              className: 'string', // because it looks like attributes in HTML tags\n              variants: [\n                {begin: /\\[/, end: /\\]/},\n                {begin: /\\{/, end: /\\}/}\n              ]\n            },\n            {\n              begin: /\\s*=\\s*/, endsWithParent: true,\n              relevance: 0,\n              contains: [\n                {\n                  className: 'number',\n                  begin: /-?\\d*\\.?\\d+(pt|pc|mm|cm|in|dd|cc|ex|em)?/\n                }\n              ]\n            }\n          ]\n        }\n      }\n    ]\n  };\n\n  return {\n    contains: [\n      COMMAND,\n      {\n        className: 'formula',\n        contains: [COMMAND],\n        relevance: 0,\n        variants: [\n          {begin: /\\$\\$/, end: /\\$\\$/},\n          {begin: /\\$/, end: /\\$/}\n        ]\n      },\n      hljs.COMMENT(\n        '%',\n        '$',\n        {\n          relevance: 0\n        }\n      )\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/tex.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/thrift.js":
/*!***********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/thrift.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var BUILT_IN_TYPES = 'bool byte i16 i32 i64 double string binary';\n  return {\n    keywords: {\n      keyword:\n        'namespace const typedef struct enum service exception void oneway set list map required optional',\n      built_in:\n        BUILT_IN_TYPES,\n      literal:\n        'true false'\n    },\n    contains: [\n      hljs.QUOTE_STRING_MODE,\n      hljs.NUMBER_MODE,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        className: 'class',\n        beginKeywords: 'struct enum service exception', end: /\\{/,\n        illegal: /\\n/,\n        contains: [\n          hljs.inherit(hljs.TITLE_MODE, {\n            starts: {endsWithParent: true, excludeEnd: true} // hack: eating everything after the first title\n          })\n        ]\n      },\n      {\n        begin: '\\\\b(set|list|map)\\\\s*<', end: '>',\n        keywords: BUILT_IN_TYPES,\n        contains: ['self']\n      }\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/thrift.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/tp.js":
/*!*******************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/tp.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var TPID = {\n    className: 'number',\n    begin: '[1-9][0-9]*', /* no leading zeros */\n    relevance: 0\n  };\n  var TPLABEL = {\n    className: 'symbol',\n    begin: ':[^\\\\]]+'\n  };\n  var TPDATA = {\n    className: 'built_in',\n    begin: '(AR|P|PAYLOAD|PR|R|SR|RSR|LBL|VR|UALM|MESSAGE|UTOOL|UFRAME|TIMER|\\\n    TIMER_OVERFLOW|JOINT_MAX_SPEED|RESUME_PROG|DIAG_REC)\\\\[', end: '\\\\]',\n    contains: [\n      'self',\n      TPID,\n      TPLABEL\n    ]\n  };\n  var TPIO = {\n    className: 'built_in',\n    begin: '(AI|AO|DI|DO|F|RI|RO|UI|UO|GI|GO|SI|SO)\\\\[', end: '\\\\]',\n    contains: [\n      'self',\n      TPID,\n      hljs.QUOTE_STRING_MODE, /* for pos section at bottom */\n      TPLABEL\n    ]\n  };\n\n  return {\n    keywords: {\n      keyword:\n        'ABORT ACC ADJUST AND AP_LD BREAK CALL CNT COL CONDITION CONFIG DA DB ' +\n        'DIV DETECT ELSE END ENDFOR ERR_NUM ERROR_PROG FINE FOR GP GUARD INC ' +\n        'IF JMP LINEAR_MAX_SPEED LOCK MOD MONITOR OFFSET Offset OR OVERRIDE ' +\n        'PAUSE PREG PTH RT_LD RUN SELECT SKIP Skip TA TB TO TOOL_OFFSET ' +\n        'Tool_Offset UF UT UFRAME_NUM UTOOL_NUM UNLOCK WAIT X Y Z W P R STRLEN ' +\n        'SUBSTR FINDSTR VOFFSET PROG ATTR MN POS',\n      literal:\n        'ON OFF max_speed LPOS JPOS ENABLE DISABLE START STOP RESET'\n    },\n    contains: [\n      TPDATA,\n      TPIO,\n      {\n        className: 'keyword',\n        begin: '/(PROG|ATTR|MN|POS|END)\\\\b'\n      },\n      {\n        /* this is for cases like ,CALL */\n        className: 'keyword',\n        begin: '(CALL|RUN|POINT_LOGIC|LBL)\\\\b'\n      },\n      {\n        /* this is for cases like CNT100 where the default lexemes do not\n         * separate the keyword and the number */\n        className: 'keyword',\n        begin: '\\\\b(ACC|CNT|Skip|Offset|PSPD|RT_LD|AP_LD|Tool_Offset)'\n      },\n      {\n        /* to catch numbers that do not have a word boundary on the left */\n        className: 'number',\n        begin: '\\\\d+(sec|msec|mm/sec|cm/min|inch/min|deg/sec|mm|in|cm)?\\\\b',\n        relevance: 0\n      },\n      hljs.COMMENT('//', '[;$]'),\n      hljs.COMMENT('!', '[;$]'),\n      hljs.COMMENT('--eg:', '$'),\n      hljs.QUOTE_STRING_MODE,\n      {\n        className: 'string',\n        begin: '\\'', end: '\\''\n      },\n      hljs.C_NUMBER_MODE,\n      {\n        className: 'variable',\n        begin: '\\\\$[A-Za-z0-9_]+'\n      }\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/tp.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/twig.js":
/*!*********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/twig.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var PARAMS = {\n    className: 'params',\n    begin: '\\\\(', end: '\\\\)'\n  };\n\n  var FUNCTION_NAMES = 'attribute block constant cycle date dump include ' +\n                  'max min parent random range source template_from_string';\n\n  var FUNCTIONS = {\n    beginKeywords: FUNCTION_NAMES,\n    keywords: {name: FUNCTION_NAMES},\n    relevance: 0,\n    contains: [\n      PARAMS\n    ]\n  };\n\n  var FILTER = {\n    begin: /\\|[A-Za-z_]+:?/,\n    keywords:\n      'abs batch capitalize convert_encoding date date_modify default ' +\n      'escape first format join json_encode keys last length lower ' +\n      'merge nl2br number_format raw replace reverse round slice sort split ' +\n      'striptags title trim upper url_encode',\n    contains: [\n      FUNCTIONS\n    ]\n  };\n\n  var TAGS = 'autoescape block do embed extends filter flush for ' +\n    'if import include macro sandbox set spaceless use verbatim';\n\n  TAGS = TAGS + ' ' + TAGS.split(' ').map(function(t){return 'end' + t}).join(' ');\n\n  return {\n    aliases: ['craftcms'],\n    case_insensitive: true,\n    subLanguage: 'xml',\n    contains: [\n      hljs.COMMENT(/\\{#/, /#}/),\n      {\n        className: 'template-tag',\n        begin: /\\{%/, end: /%}/,\n        contains: [\n          {\n            className: 'name',\n            begin: /\\w+/,\n            keywords: TAGS,\n            starts: {\n              endsWithParent: true,\n              contains: [FILTER, FUNCTIONS],\n              relevance: 0\n            }\n          }\n        ]\n      },\n      {\n        className: 'template-variable',\n        begin: /\\{\\{/, end: /}}/,\n        contains: ['self', FILTER, FUNCTIONS]\n      }\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/twig.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/typescript.js":
/*!***************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/typescript.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var KEYWORDS = {\n    keyword:\n      'in if for while finally var new function do return void else break catch ' +\n      'instanceof with throw case default try this switch continue typeof delete ' +\n      'let yield const class public private protected get set super ' +\n      'static implements enum export import declare type namespace abstract ' +\n      'as from extends async await',\n    literal:\n      'true false null undefined NaN Infinity',\n    built_in:\n      'eval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent ' +\n      'encodeURI encodeURIComponent escape unescape Object Function Boolean Error ' +\n      'EvalError InternalError RangeError ReferenceError StopIteration SyntaxError ' +\n      'TypeError URIError Number Math Date String RegExp Array Float32Array ' +\n      'Float64Array Int16Array Int32Array Int8Array Uint16Array Uint32Array ' +\n      'Uint8Array Uint8ClampedArray ArrayBuffer DataView JSON Intl arguments require ' +\n      'module console window document any number boolean string void Promise'\n  };\n\n  return {\n    aliases: ['ts'],\n    keywords: KEYWORDS,\n    contains: [\n      {\n        className: 'meta',\n        begin: /^\\s*['\"]use strict['\"]/\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      { // template string\n        className: 'string',\n        begin: '`', end: '`',\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          {\n            className: 'subst',\n            begin: '\\\\$\\\\{', end: '\\\\}'\n          }\n        ]\n      },\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        className: 'number',\n        variants: [\n          { begin: '\\\\b(0[bB][01]+)' },\n          { begin: '\\\\b(0[oO][0-7]+)' },\n          { begin: hljs.C_NUMBER_RE }\n        ],\n        relevance: 0\n      },\n      { // \"value\" container\n        begin: '(' + hljs.RE_STARTERS_RE + '|\\\\b(case|return|throw)\\\\b)\\\\s*',\n        keywords: 'return throw case',\n        contains: [\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          hljs.REGEXP_MODE,\n          {\n            className: 'function',\n            begin: '(\\\\(.*?\\\\)|' + hljs.IDENT_RE + ')\\\\s*=>', returnBegin: true,\n            end: '\\\\s*=>',\n            contains: [\n              {\n                className: 'params',\n                variants: [\n                  {\n                    begin: hljs.IDENT_RE\n                  },\n                  {\n                    begin: /\\(\\s*\\)/,\n                  },\n                  {\n                    begin: /\\(/, end: /\\)/,\n                    excludeBegin: true, excludeEnd: true,\n                    keywords: KEYWORDS,\n                    contains: [\n                      'self',\n                      hljs.C_LINE_COMMENT_MODE,\n                      hljs.C_BLOCK_COMMENT_MODE\n                    ]\n                  }\n                ]\n              }\n            ]\n          }\n        ],\n        relevance: 0\n      },\n      {\n        className: 'function',\n        begin: 'function', end: /[\\{;]/, excludeEnd: true,\n        keywords: KEYWORDS,\n        contains: [\n          'self',\n          hljs.inherit(hljs.TITLE_MODE, {begin: /[A-Za-z$_][0-9A-Za-z$_]*/}),\n          {\n            className: 'params',\n            begin: /\\(/, end: /\\)/,\n            excludeBegin: true,\n            excludeEnd: true,\n            keywords: KEYWORDS,\n            contains: [\n              hljs.C_LINE_COMMENT_MODE,\n              hljs.C_BLOCK_COMMENT_MODE\n            ],\n            illegal: /[\"'\\(]/\n          }\n        ],\n        illegal: /%/,\n        relevance: 0 // () => {} is more typical in TypeScript\n      },\n      {\n        beginKeywords: 'constructor', end: /\\{/, excludeEnd: true,\n        contains: [\n          'self',\n          {\n            className: 'params',\n            begin: /\\(/, end: /\\)/,\n            excludeBegin: true,\n            excludeEnd: true,\n            keywords: KEYWORDS,\n            contains: [\n              hljs.C_LINE_COMMENT_MODE,\n              hljs.C_BLOCK_COMMENT_MODE\n            ],\n            illegal: /[\"'\\(]/\n          }\n        ]\n      },\n      { // prevent references like module.id from being higlighted as module definitions\n        begin: /module\\./,\n        keywords: {built_in: 'module'},\n        relevance: 0\n      },\n      {\n        beginKeywords: 'module', end: /\\{/, excludeEnd: true\n      },\n      {\n        beginKeywords: 'interface', end: /\\{/, excludeEnd: true,\n        keywords: 'interface extends'\n      },\n      {\n        begin: /\\$[(.]/ // relevance booster for a pattern common to JS libs: `$(something)` and `$.something`\n      },\n      {\n        begin: '\\\\.' + hljs.IDENT_RE, relevance: 0 // hack: prevents detection of keywords after dots\n      },\n      {\n        className: 'meta', begin: '@[A-Za-z]+'\n      }\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/typescript.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/vala.js":
/*!*********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/vala.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  return {\n    keywords: {\n      keyword:\n        // Value types\n        'char uchar unichar int uint long ulong short ushort int8 int16 int32 int64 uint8 ' +\n        'uint16 uint32 uint64 float double bool struct enum string void ' +\n        // Reference types\n        'weak unowned owned ' +\n        // Modifiers\n        'async signal static abstract interface override virtual delegate ' +\n        // Control Structures\n        'if while do for foreach else switch case break default return try catch ' +\n        // Visibility\n        'public private protected internal ' +\n        // Other\n        'using new this get set const stdout stdin stderr var',\n      built_in:\n        'DBus GLib CCode Gee Object Gtk Posix',\n      literal:\n        'false true null'\n    },\n    contains: [\n      {\n        className: 'class',\n        beginKeywords: 'class interface namespace', end: '{', excludeEnd: true,\n        illegal: '[^,:\\\\n\\\\s\\\\.]',\n        contains: [\n          hljs.UNDERSCORE_TITLE_MODE\n        ]\n      },\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        className: 'string',\n        begin: '\"\"\"', end: '\"\"\"',\n        relevance: 5\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_NUMBER_MODE,\n      {\n        className: 'meta',\n        begin: '^#', end: '$',\n        relevance: 2\n      }\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/vala.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/vbnet.js":
/*!**********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/vbnet.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  return {\n    aliases: ['vb'],\n    case_insensitive: true,\n    keywords: {\n      keyword:\n        'addhandler addressof alias and andalso aggregate ansi as assembly auto binary by byref byval ' + /* a-b */\n        'call case catch class compare const continue custom declare default delegate dim distinct do ' + /* c-d */\n        'each equals else elseif end enum erase error event exit explicit finally for friend from function ' + /* e-f */\n        'get global goto group handles if implements imports in inherits interface into is isfalse isnot istrue ' + /* g-i */\n        'join key let lib like loop me mid mod module mustinherit mustoverride mybase myclass ' + /* j-m */\n        'namespace narrowing new next not notinheritable notoverridable ' + /* n */\n        'of off on operator option optional or order orelse overloads overridable overrides ' + /* o */\n        'paramarray partial preserve private property protected public ' + /* p */\n        'raiseevent readonly redim rem removehandler resume return ' + /* r */\n        'select set shadows shared skip static step stop structure strict sub synclock ' + /* s */\n        'take text then throw to try unicode until using when where while widening with withevents writeonly xor', /* t-x */\n      built_in:\n        'boolean byte cbool cbyte cchar cdate cdec cdbl char cint clng cobj csbyte cshort csng cstr ctype ' +  /* b-c */\n        'date decimal directcast double gettype getxmlnamespace iif integer long object ' + /* d-o */\n        'sbyte short single string trycast typeof uinteger ulong ushort', /* s-u */\n      literal:\n        'true false nothing'\n    },\n    illegal: '//|{|}|endif|gosub|variant|wend', /* reserved deprecated keywords */\n    contains: [\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {contains: [{begin: '\"\"'}]}),\n      hljs.COMMENT(\n        '\\'',\n        '$',\n        {\n          returnBegin: true,\n          contains: [\n            {\n              className: 'doctag',\n              begin: '\\'\\'\\'|<!--|-->',\n              contains: [hljs.PHRASAL_WORDS_MODE]\n            },\n            {\n              className: 'doctag',\n              begin: '</?', end: '>',\n              contains: [hljs.PHRASAL_WORDS_MODE]\n            }\n          ]\n        }\n      ),\n      hljs.C_NUMBER_MODE,\n      {\n        className: 'meta',\n        begin: '#', end: '$',\n        keywords: {'meta-keyword': 'if else elseif end region externalsource'}\n      }\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/vbnet.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/vbscript-html.js":
/*!******************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/vbscript-html.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  return {\n    subLanguage: 'xml',\n    contains: [\n      {\n        begin: '<%', end: '%>',\n        subLanguage: 'vbscript'\n      }\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/vbscript-html.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/vbscript.js":
/*!*************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/vbscript.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  return {\n    aliases: ['vbs'],\n    case_insensitive: true,\n    keywords: {\n      keyword:\n        'call class const dim do loop erase execute executeglobal exit for each next function ' +\n        'if then else on error option explicit new private property let get public randomize ' +\n        'redim rem select case set stop sub while wend with end to elseif is or xor and not ' +\n        'class_initialize class_terminate default preserve in me byval byref step resume goto',\n      built_in:\n        'lcase month vartype instrrev ubound setlocale getobject rgb getref string ' +\n        'weekdayname rnd dateadd monthname now day minute isarray cbool round formatcurrency ' +\n        'conversions csng timevalue second year space abs clng timeserial fixs len asc ' +\n        'isempty maths dateserial atn timer isobject filter weekday datevalue ccur isdate ' +\n        'instr datediff formatdatetime replace isnull right sgn array snumeric log cdbl hex ' +\n        'chr lbound msgbox ucase getlocale cos cdate cbyte rtrim join hour oct typename trim ' +\n        'strcomp int createobject loadpicture tan formatnumber mid scriptenginebuildversion ' +\n        'scriptengine split scriptengineminorversion cint sin datepart ltrim sqr ' +\n        'scriptenginemajorversion time derived eval date formatpercent exp inputbox left ascw ' +\n        'chrw regexp server response request cstr err',\n      literal:\n        'true false null nothing empty'\n    },\n    illegal: '//',\n    contains: [\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {contains: [{begin: '\"\"'}]}),\n      hljs.COMMENT(\n        /'/,\n        /$/,\n        {\n          relevance: 0\n        }\n      ),\n      hljs.C_NUMBER_MODE\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/vbscript.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/verilog.js":
/*!************************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/verilog.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var SV_KEYWORDS = {\n    keyword:\n      'accept_on alias always always_comb always_ff always_latch and assert assign ' +\n      'assume automatic before begin bind bins binsof bit break buf|0 bufif0 bufif1 ' +\n      'byte case casex casez cell chandle checker class clocking cmos config const ' +\n      'constraint context continue cover covergroup coverpoint cross deassign default ' +\n      'defparam design disable dist do edge else end endcase endchecker endclass ' +\n      'endclocking endconfig endfunction endgenerate endgroup endinterface endmodule ' +\n      'endpackage endprimitive endprogram endproperty endspecify endsequence endtable ' +\n      'endtask enum event eventually expect export extends extern final first_match for ' +\n      'force foreach forever fork forkjoin function generate|5 genvar global highz0 highz1 ' +\n      'if iff ifnone ignore_bins illegal_bins implements implies import incdir include ' +\n      'initial inout input inside instance int integer interconnect interface intersect ' +\n      'join join_any join_none large let liblist library local localparam logic longint ' +\n      'macromodule matches medium modport module nand negedge nettype new nexttime nmos ' +\n      'nor noshowcancelled not notif0 notif1 or output package packed parameter pmos ' +\n      'posedge primitive priority program property protected pull0 pull1 pulldown pullup ' +\n      'pulsestyle_ondetect pulsestyle_onevent pure rand randc randcase randsequence rcmos ' +\n      'real realtime ref reg reject_on release repeat restrict return rnmos rpmos rtran ' +\n      'rtranif0 rtranif1 s_always s_eventually s_nexttime s_until s_until_with scalared ' +\n      'sequence shortint shortreal showcancelled signed small soft solve specify specparam ' +\n      'static string strong strong0 strong1 struct super supply0 supply1 sync_accept_on ' +\n      'sync_reject_on table tagged task this throughout time timeprecision timeunit tran ' +\n      'tranif0 tranif1 tri tri0 tri1 triand trior trireg type typedef union unique unique0 ' +\n      'unsigned until until_with untyped use uwire var vectored virtual void wait wait_order ' +\n      'wand weak weak0 weak1 while wildcard wire with within wor xnor xor',\n    literal:\n      'null',\n    built_in:\n      '$finish $stop $exit $fatal $error $warning $info $realtime $time $printtimescale ' +\n      '$bitstoreal $bitstoshortreal $itor $signed $cast $bits $stime $timeformat ' +\n      '$realtobits $shortrealtobits $rtoi $unsigned $asserton $assertkill $assertpasson ' +\n      '$assertfailon $assertnonvacuouson $assertoff $assertcontrol $assertpassoff ' +\n      '$assertfailoff $assertvacuousoff $isunbounded $sampled $fell $changed $past_gclk ' +\n      '$fell_gclk $changed_gclk $rising_gclk $steady_gclk $coverage_control ' +\n      '$coverage_get $coverage_save $set_coverage_db_name $rose $stable $past ' +\n      '$rose_gclk $stable_gclk $future_gclk $falling_gclk $changing_gclk $display ' +\n      '$coverage_get_max $coverage_merge $get_coverage $load_coverage_db $typename ' +\n      '$unpacked_dimensions $left $low $increment $clog2 $ln $log10 $exp $sqrt $pow ' +\n      '$floor $ceil $sin $cos $tan $countbits $onehot $isunknown $fatal $warning ' +\n      '$dimensions $right $high $size $asin $acos $atan $atan2 $hypot $sinh $cosh ' +\n      '$tanh $asinh $acosh $atanh $countones $onehot0 $error $info $random ' +\n      '$dist_chi_square $dist_erlang $dist_exponential $dist_normal $dist_poisson ' +\n      '$dist_t $dist_uniform $q_initialize $q_remove $q_exam $async$and$array ' +\n      '$async$nand$array $async$or$array $async$nor$array $sync$and$array ' +\n      '$sync$nand$array $sync$or$array $sync$nor$array $q_add $q_full $psprintf ' +\n      '$async$and$plane $async$nand$plane $async$or$plane $async$nor$plane ' +\n      '$sync$and$plane $sync$nand$plane $sync$or$plane $sync$nor$plane $system ' +\n      '$display $displayb $displayh $displayo $strobe $strobeb $strobeh $strobeo ' +\n      '$write $readmemb $readmemh $writememh $value$plusargs ' +\n      '$dumpvars $dumpon $dumplimit $dumpports $dumpportson $dumpportslimit ' +\n      '$writeb $writeh $writeo $monitor $monitorb $monitorh $monitoro $writememb ' +\n      '$dumpfile $dumpoff $dumpall $dumpflush $dumpportsoff $dumpportsall ' +\n      '$dumpportsflush $fclose $fdisplay $fdisplayb $fdisplayh $fdisplayo ' +\n      '$fstrobe $fstrobeb $fstrobeh $fstrobeo $swrite $swriteb $swriteh ' +\n      '$swriteo $fscanf $fread $fseek $fflush $feof $fopen $fwrite $fwriteb ' +\n      '$fwriteh $fwriteo $fmonitor $fmonitorb $fmonitorh $fmonitoro $sformat ' +\n      '$sformatf $fgetc $ungetc $fgets $sscanf $rewind $ftell $ferror'\n    };\n  return {\n    aliases: ['v', 'sv', 'svh'],\n    case_insensitive: false,\n    keywords: SV_KEYWORDS, lexemes: /[\\w\\$]+/,\n    contains: [\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.QUOTE_STRING_MODE,\n      {\n        className: 'number',\n        contains: [hljs.BACKSLASH_ESCAPE],\n        variants: [\n          {begin: '\\\\b((\\\\d+\\'(b|h|o|d|B|H|O|D))[0-9xzXZa-fA-F_]+)'},\n          {begin: '\\\\B((\\'(b|h|o|d|B|H|O|D))[0-9xzXZa-fA-F_]+)'},\n          {begin: '\\\\b([0-9_])+', relevance: 0}\n        ]\n      },\n      /* parameters to instances */\n      {\n        className: 'variable',\n        variants: [\n          {begin: '#\\\\((?!parameter).+\\\\)'},\n          {begin: '\\\\.\\\\w+', relevance: 0},\n        ]\n      },\n      {\n        className: 'meta',\n        begin: '`', end: '$',\n        keywords: {'meta-keyword': 'define __FILE__ ' +\n          '__LINE__ begin_keywords celldefine default_nettype define ' +\n          'else elsif end_keywords endcelldefine endif ifdef ifndef ' +\n          'include line nounconnected_drive pragma resetall timescale ' +\n          'unconnected_drive undef undefineall'},\n        relevance: 0\n      }\n    ]\n  }; // return\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/verilog.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/vhdl.js":
/*!*********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/vhdl.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  // Regular expression for VHDL numeric literals.\n\n  // Decimal literal:\n  var INTEGER_RE = '\\\\d(_|\\\\d)*';\n  var EXPONENT_RE = '[eE][-+]?' + INTEGER_RE;\n  var DECIMAL_LITERAL_RE = INTEGER_RE + '(\\\\.' + INTEGER_RE + ')?' + '(' + EXPONENT_RE + ')?';\n  // Based literal:\n  var BASED_INTEGER_RE = '\\\\w+';\n  var BASED_LITERAL_RE = INTEGER_RE + '#' + BASED_INTEGER_RE + '(\\\\.' + BASED_INTEGER_RE + ')?' + '#' + '(' + EXPONENT_RE + ')?';\n\n  var NUMBER_RE = '\\\\b(' + BASED_LITERAL_RE + '|' + DECIMAL_LITERAL_RE + ')';\n\n  return {\n    case_insensitive: true,\n    keywords: {\n      keyword:\n        'abs access after alias all and architecture array assert assume assume_guarantee attribute ' +\n        'begin block body buffer bus case component configuration constant context cover disconnect ' +\n        'downto default else elsif end entity exit fairness file for force function generate ' +\n        'generic group guarded if impure in inertial inout is label library linkage literal ' +\n        'loop map mod nand new next nor not null of on open or others out package port ' +\n        'postponed procedure process property protected pure range record register reject ' +\n        'release rem report restrict restrict_guarantee return rol ror select sequence ' +\n        'severity shared signal sla sll sra srl strong subtype then to transport type ' +\n        'unaffected units until use variable vmode vprop vunit wait when while with xnor xor',\n      built_in:\n        'boolean bit character ' +\n        'integer time delay_length natural positive ' +\n        'string bit_vector file_open_kind file_open_status ' +\n        'std_logic std_logic_vector unsigned signed boolean_vector integer_vector ' +\n        'std_ulogic std_ulogic_vector unresolved_unsigned u_unsigned unresolved_signed u_signed' +\n        'real_vector time_vector',\n      literal:\n        'false true note warning error failure ' +  // severity_level\n        'line text side width'                      // textio\n    },\n    illegal: '{',\n    contains: [\n      hljs.C_BLOCK_COMMENT_MODE,      // VHDL-2008 block commenting.\n      hljs.COMMENT('--', '$'),\n      hljs.QUOTE_STRING_MODE,\n      {\n        className: 'number',\n        begin: NUMBER_RE,\n        relevance: 0\n      },\n      {\n        className: 'string',\n        begin: '\\'(U|X|0|1|Z|W|L|H|-)\\'',\n        contains: [hljs.BACKSLASH_ESCAPE]\n      },\n      {\n        className: 'symbol',\n        begin: '\\'[A-Za-z](_?[A-Za-z0-9])*',\n        contains: [hljs.BACKSLASH_ESCAPE]\n      }\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/vhdl.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/vim.js":
/*!********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/vim.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  return {\n    lexemes: /[!#@\\w]+/,\n    keywords: {\n      keyword:\n        // express version except: ! & * < = > !! # @ @@\n        'N|0 P|0 X|0 a|0 ab abc abo al am an|0 ar arga argd arge argdo argg argl argu as au aug aun b|0 bN ba bad bd be bel bf bl bm bn bo bp br brea breaka breakd breakl bro bufdo buffers bun bw c|0 cN cNf ca cabc caddb cad caddf cal cat cb cc ccl cd ce cex cf cfir cgetb cgete cg changes chd che checkt cl cla clo cm cmapc cme cn cnew cnf cno cnorea cnoreme co col colo com comc comp con conf cope '+\n        'cp cpf cq cr cs cst cu cuna cunme cw delm deb debugg delc delf dif diffg diffo diffp diffpu diffs diffthis dig di dl dell dj dli do doautoa dp dr ds dsp e|0 ea ec echoe echoh echom echon el elsei em en endfo endf endt endw ene ex exe exi exu f|0 files filet fin fina fini fir fix fo foldc foldd folddoc foldo for fu go gr grepa gu gv ha helpf helpg helpt hi hid his ia iabc if ij il im imapc '+\n        'ime ino inorea inoreme int is isp iu iuna iunme j|0 ju k|0 keepa kee keepj lN lNf l|0 lad laddb laddf la lan lat lb lc lch lcl lcs le lefta let lex lf lfir lgetb lgete lg lgr lgrepa lh ll lla lli lmak lm lmapc lne lnew lnf ln loadk lo loc lockv lol lope lp lpf lr ls lt lu lua luad luaf lv lvimgrepa lw m|0 ma mak map mapc marks mat me menut mes mk mks mksp mkv mkvie mod mz mzf nbc nb nbs new nm nmapc nme nn nnoreme noa no noh norea noreme norm nu nun nunme ol o|0 om omapc ome on ono onoreme opt ou ounme ow p|0 '+\n        'profd prof pro promptr pc ped pe perld po popu pp pre prev ps pt ptN ptf ptj ptl ptn ptp ptr pts pu pw py3 python3 py3d py3f py pyd pyf quita qa rec red redi redr redraws reg res ret retu rew ri rightb rub rubyd rubyf rund ru rv sN san sa sal sav sb sbN sba sbf sbl sbm sbn sbp sbr scrip scripte scs se setf setg setl sf sfir sh sim sig sil sl sla sm smap smapc sme sn sni sno snor snoreme sor '+\n        'so spelld spe spelli spellr spellu spellw sp spr sre st sta startg startr star stopi stj sts sun sunm sunme sus sv sw sy synti sync tN tabN tabc tabdo tabe tabf tabfir tabl tabm tabnew '+\n        'tabn tabo tabp tabr tabs tab ta tags tc tcld tclf te tf th tj tl tm tn to tp tr try ts tu u|0 undoj undol una unh unl unlo unm unme uns up ve verb vert vim vimgrepa vi viu vie vm vmapc vme vne vn vnoreme vs vu vunme windo w|0 wN wa wh wi winc winp wn wp wq wqa ws wu wv x|0 xa xmapc xm xme xn xnoreme xu xunme y|0 z|0 ~ '+\n        // full version\n        'Next Print append abbreviate abclear aboveleft all amenu anoremenu args argadd argdelete argedit argglobal arglocal argument ascii autocmd augroup aunmenu buffer bNext ball badd bdelete behave belowright bfirst blast bmodified bnext botright bprevious brewind break breakadd breakdel breaklist browse bunload '+\n        'bwipeout change cNext cNfile cabbrev cabclear caddbuffer caddexpr caddfile call catch cbuffer cclose center cexpr cfile cfirst cgetbuffer cgetexpr cgetfile chdir checkpath checktime clist clast close cmap cmapclear cmenu cnext cnewer cnfile cnoremap cnoreabbrev cnoremenu copy colder colorscheme command comclear compiler continue confirm copen cprevious cpfile cquit crewind cscope cstag cunmap '+\n        'cunabbrev cunmenu cwindow delete delmarks debug debuggreedy delcommand delfunction diffupdate diffget diffoff diffpatch diffput diffsplit digraphs display deletel djump dlist doautocmd doautoall deletep drop dsearch dsplit edit earlier echo echoerr echohl echomsg else elseif emenu endif endfor '+\n        'endfunction endtry endwhile enew execute exit exusage file filetype find finally finish first fixdel fold foldclose folddoopen folddoclosed foldopen function global goto grep grepadd gui gvim hardcopy help helpfind helpgrep helptags highlight hide history insert iabbrev iabclear ijump ilist imap '+\n        'imapclear imenu inoremap inoreabbrev inoremenu intro isearch isplit iunmap iunabbrev iunmenu join jumps keepalt keepmarks keepjumps lNext lNfile list laddexpr laddbuffer laddfile last language later lbuffer lcd lchdir lclose lcscope left leftabove lexpr lfile lfirst lgetbuffer lgetexpr lgetfile lgrep lgrepadd lhelpgrep llast llist lmake lmap lmapclear lnext lnewer lnfile lnoremap loadkeymap loadview '+\n        'lockmarks lockvar lolder lopen lprevious lpfile lrewind ltag lunmap luado luafile lvimgrep lvimgrepadd lwindow move mark make mapclear match menu menutranslate messages mkexrc mksession mkspell mkvimrc mkview mode mzscheme mzfile nbclose nbkey nbsart next nmap nmapclear nmenu nnoremap '+\n        'nnoremenu noautocmd noremap nohlsearch noreabbrev noremenu normal number nunmap nunmenu oldfiles open omap omapclear omenu only onoremap onoremenu options ounmap ounmenu ownsyntax print profdel profile promptfind promptrepl pclose pedit perl perldo pop popup ppop preserve previous psearch ptag ptNext '+\n        'ptfirst ptjump ptlast ptnext ptprevious ptrewind ptselect put pwd py3do py3file python pydo pyfile quit quitall qall read recover redo redir redraw redrawstatus registers resize retab return rewind right rightbelow ruby rubydo rubyfile rundo runtime rviminfo substitute sNext sandbox sargument sall saveas sbuffer sbNext sball sbfirst sblast sbmodified sbnext sbprevious sbrewind scriptnames scriptencoding '+\n        'scscope set setfiletype setglobal setlocal sfind sfirst shell simalt sign silent sleep slast smagic smapclear smenu snext sniff snomagic snoremap snoremenu sort source spelldump spellgood spellinfo spellrepall spellundo spellwrong split sprevious srewind stop stag startgreplace startreplace '+\n        'startinsert stopinsert stjump stselect sunhide sunmap sunmenu suspend sview swapname syntax syntime syncbind tNext tabNext tabclose tabedit tabfind tabfirst tablast tabmove tabnext tabonly tabprevious tabrewind tag tcl tcldo tclfile tearoff tfirst throw tjump tlast tmenu tnext topleft tprevious '+'trewind tselect tunmenu undo undojoin undolist unabbreviate unhide unlet unlockvar unmap unmenu unsilent update vglobal version verbose vertical vimgrep vimgrepadd visual viusage view vmap vmapclear vmenu vnew '+\n        'vnoremap vnoremenu vsplit vunmap vunmenu write wNext wall while winsize wincmd winpos wnext wprevious wqall wsverb wundo wviminfo xit xall xmapclear xmap xmenu xnoremap xnoremenu xunmap xunmenu yank',\n      built_in: //built in func\n        'synIDtrans atan2 range matcharg did_filetype asin feedkeys xor argv ' +\n        'complete_check add getwinposx getqflist getwinposy screencol ' +\n        'clearmatches empty extend getcmdpos mzeval garbagecollect setreg ' +\n        'ceil sqrt diff_hlID inputsecret get getfperm getpid filewritable ' +\n        'shiftwidth max sinh isdirectory synID system inputrestore winline ' +\n        'atan visualmode inputlist tabpagewinnr round getregtype mapcheck ' +\n        'hasmapto histdel argidx findfile sha256 exists toupper getcmdline ' +\n        'taglist string getmatches bufnr strftime winwidth bufexists ' +\n        'strtrans tabpagebuflist setcmdpos remote_read printf setloclist ' +\n        'getpos getline bufwinnr float2nr len getcmdtype diff_filler luaeval ' +\n        'resolve libcallnr foldclosedend reverse filter has_key bufname ' +\n        'str2float strlen setline getcharmod setbufvar index searchpos ' +\n        'shellescape undofile foldclosed setqflist buflisted strchars str2nr ' +\n        'virtcol floor remove undotree remote_expr winheight gettabwinvar ' +\n        'reltime cursor tabpagenr finddir localtime acos getloclist search ' +\n        'tanh matchend rename gettabvar strdisplaywidth type abs py3eval ' +\n        'setwinvar tolower wildmenumode log10 spellsuggest bufloaded ' +\n        'synconcealed nextnonblank server2client complete settabwinvar ' +\n        'executable input wincol setmatches getftype hlID inputsave ' +\n        'searchpair or screenrow line settabvar histadd deepcopy strpart ' +\n        'remote_peek and eval getftime submatch screenchar winsaveview ' +\n        'matchadd mkdir screenattr getfontname libcall reltimestr getfsize ' +\n        'winnr invert pow getbufline byte2line soundfold repeat fnameescape ' +\n        'tagfiles sin strwidth spellbadword trunc maparg log lispindent ' +\n        'hostname setpos globpath remote_foreground getchar synIDattr ' +\n        'fnamemodify cscope_connection stridx winbufnr indent min ' +\n        'complete_add nr2char searchpairpos inputdialog values matchlist ' +\n        'items hlexists strridx browsedir expand fmod pathshorten line2byte ' +\n        'argc count getwinvar glob foldtextresult getreg foreground cosh ' +\n        'matchdelete has char2nr simplify histget searchdecl iconv ' +\n        'winrestcmd pumvisible writefile foldlevel haslocaldir keys cos ' +\n        'matchstr foldtext histnr tan tempname getcwd byteidx getbufvar ' +\n        'islocked escape eventhandler remote_send serverlist winrestview ' +\n        'synstack pyeval prevnonblank readfile cindent filereadable changenr ' +\n        'exp'\n    },\n    illegal: /;/,\n    contains: [\n      hljs.NUMBER_MODE,\n      hljs.APOS_STRING_MODE,\n\n      /*\n      A double quote can start either a string or a line comment. Strings are\n      ended before the end of a line by another double quote and can contain\n      escaped double-quotes and post-escaped line breaks.\n\n      Also, any double quote at the beginning of a line is a comment but we\n      don't handle that properly at the moment: any double quote inside will\n      turn them into a string. Handling it properly will require a smarter\n      parser.\n      */\n      {\n        className: 'string',\n        begin: /\"(\\\\\"|\\n\\\\|[^\"\\n])*\"/\n      },\n      hljs.COMMENT('\"', '$'),\n\n      {\n        className: 'variable',\n        begin: /[bwtglsav]:[\\w\\d_]*/\n      },\n      {\n        className: 'function',\n        beginKeywords: 'function function!', end: '$',\n        relevance: 0,\n        contains: [\n          hljs.TITLE_MODE,\n          {\n            className: 'params',\n            begin: '\\\\(', end: '\\\\)'\n          }\n        ]\n      },\n      {\n        className: 'symbol',\n        begin: /<[\\w-]+>/\n      }\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/vim.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/x86asm.js":
/*!***********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/x86asm.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  return {\n    case_insensitive: true,\n    lexemes: '[.%]?' + hljs.IDENT_RE,\n    keywords: {\n      keyword:\n        'lock rep repe repz repne repnz xaquire xrelease bnd nobnd ' +\n        'aaa aad aam aas adc add and arpl bb0_reset bb1_reset bound bsf bsr bswap bt btc btr bts call cbw cdq cdqe clc cld cli clts cmc cmp cmpsb cmpsd cmpsq cmpsw cmpxchg cmpxchg486 cmpxchg8b cmpxchg16b cpuid cpu_read cpu_write cqo cwd cwde daa das dec div dmint emms enter equ f2xm1 fabs fadd faddp fbld fbstp fchs fclex fcmovb fcmovbe fcmove fcmovnb fcmovnbe fcmovne fcmovnu fcmovu fcom fcomi fcomip fcomp fcompp fcos fdecstp fdisi fdiv fdivp fdivr fdivrp femms feni ffree ffreep fiadd ficom ficomp fidiv fidivr fild fimul fincstp finit fist fistp fisttp fisub fisubr fld fld1 fldcw fldenv fldl2e fldl2t fldlg2 fldln2 fldpi fldz fmul fmulp fnclex fndisi fneni fninit fnop fnsave fnstcw fnstenv fnstsw fpatan fprem fprem1 fptan frndint frstor fsave fscale fsetpm fsin fsincos fsqrt fst fstcw fstenv fstp fstsw fsub fsubp fsubr fsubrp ftst fucom fucomi fucomip fucomp fucompp fxam fxch fxtract fyl2x fyl2xp1 hlt ibts icebp idiv imul in inc incbin insb insd insw int int01 int1 int03 int3 into invd invpcid invlpg invlpga iret iretd iretq iretw jcxz jecxz jrcxz jmp jmpe lahf lar lds lea leave les lfence lfs lgdt lgs lidt lldt lmsw loadall loadall286 lodsb lodsd lodsq lodsw loop loope loopne loopnz loopz lsl lss ltr mfence monitor mov movd movq movsb movsd movsq movsw movsx movsxd movzx mul mwait neg nop not or out outsb outsd outsw packssdw packsswb packuswb paddb paddd paddsb paddsiw paddsw paddusb paddusw paddw pand pandn pause paveb pavgusb pcmpeqb pcmpeqd pcmpeqw pcmpgtb pcmpgtd pcmpgtw pdistib pf2id pfacc pfadd pfcmpeq pfcmpge pfcmpgt pfmax pfmin pfmul pfrcp pfrcpit1 pfrcpit2 pfrsqit1 pfrsqrt pfsub pfsubr pi2fd pmachriw pmaddwd pmagw pmulhriw pmulhrwa pmulhrwc pmulhw pmullw pmvgezb pmvlzb pmvnzb pmvzb pop popa popad popaw popf popfd popfq popfw por prefetch prefetchw pslld psllq psllw psrad psraw psrld psrlq psrlw psubb psubd psubsb psubsiw psubsw psubusb psubusw psubw punpckhbw punpckhdq punpckhwd punpcklbw punpckldq punpcklwd push pusha pushad pushaw pushf pushfd pushfq pushfw pxor rcl rcr rdshr rdmsr rdpmc rdtsc rdtscp ret retf retn rol ror rdm rsdc rsldt rsm rsts sahf sal salc sar sbb scasb scasd scasq scasw sfence sgdt shl shld shr shrd sidt sldt skinit smi smint smintold smsw stc std sti stosb stosd stosq stosw str sub svdc svldt svts swapgs syscall sysenter sysexit sysret test ud0 ud1 ud2b ud2 ud2a umov verr verw fwait wbinvd wrshr wrmsr xadd xbts xchg xlatb xlat xor cmove cmovz cmovne cmovnz cmova cmovnbe cmovae cmovnb cmovb cmovnae cmovbe cmovna cmovg cmovnle cmovge cmovnl cmovl cmovnge cmovle cmovng cmovc cmovnc cmovo cmovno cmovs cmovns cmovp cmovpe cmovnp cmovpo je jz jne jnz ja jnbe jae jnb jb jnae jbe jna jg jnle jge jnl jl jnge jle jng jc jnc jo jno js jns jpo jnp jpe jp sete setz setne setnz seta setnbe setae setnb setnc setb setnae setcset setbe setna setg setnle setge setnl setl setnge setle setng sets setns seto setno setpe setp setpo setnp addps addss andnps andps cmpeqps cmpeqss cmpleps cmpless cmpltps cmpltss cmpneqps cmpneqss cmpnleps cmpnless cmpnltps cmpnltss cmpordps cmpordss cmpunordps cmpunordss cmpps cmpss comiss cvtpi2ps cvtps2pi cvtsi2ss cvtss2si cvttps2pi cvttss2si divps divss ldmxcsr maxps maxss minps minss movaps movhps movlhps movlps movhlps movmskps movntps movss movups mulps mulss orps rcpps rcpss rsqrtps rsqrtss shufps sqrtps sqrtss stmxcsr subps subss ucomiss unpckhps unpcklps xorps fxrstor fxrstor64 fxsave fxsave64 xgetbv xsetbv xsave xsave64 xsaveopt xsaveopt64 xrstor xrstor64 prefetchnta prefetcht0 prefetcht1 prefetcht2 maskmovq movntq pavgb pavgw pextrw pinsrw pmaxsw pmaxub pminsw pminub pmovmskb pmulhuw psadbw pshufw pf2iw pfnacc pfpnacc pi2fw pswapd maskmovdqu clflush movntdq movnti movntpd movdqa movdqu movdq2q movq2dq paddq pmuludq pshufd pshufhw pshuflw pslldq psrldq psubq punpckhqdq punpcklqdq addpd addsd andnpd andpd cmpeqpd cmpeqsd cmplepd cmplesd cmpltpd cmpltsd cmpneqpd cmpneqsd cmpnlepd cmpnlesd cmpnltpd cmpnltsd cmpordpd cmpordsd cmpunordpd cmpunordsd cmppd comisd cvtdq2pd cvtdq2ps cvtpd2dq cvtpd2pi cvtpd2ps cvtpi2pd cvtps2dq cvtps2pd cvtsd2si cvtsd2ss cvtsi2sd cvtss2sd cvttpd2pi cvttpd2dq cvttps2dq cvttsd2si divpd divsd maxpd maxsd minpd minsd movapd movhpd movlpd movmskpd movupd mulpd mulsd orpd shufpd sqrtpd sqrtsd subpd subsd ucomisd unpckhpd unpcklpd xorpd addsubpd addsubps haddpd haddps hsubpd hsubps lddqu movddup movshdup movsldup clgi stgi vmcall vmclear vmfunc vmlaunch vmload vmmcall vmptrld vmptrst vmread vmresume vmrun vmsave vmwrite vmxoff vmxon invept invvpid pabsb pabsw pabsd palignr phaddw phaddd phaddsw phsubw phsubd phsubsw pmaddubsw pmulhrsw pshufb psignb psignw psignd extrq insertq movntsd movntss lzcnt blendpd blendps blendvpd blendvps dppd dpps extractps insertps movntdqa mpsadbw packusdw pblendvb pblendw pcmpeqq pextrb pextrd pextrq phminposuw pinsrb pinsrd pinsrq pmaxsb pmaxsd pmaxud pmaxuw pminsb pminsd pminud pminuw pmovsxbw pmovsxbd pmovsxbq pmovsxwd pmovsxwq pmovsxdq pmovzxbw pmovzxbd pmovzxbq pmovzxwd pmovzxwq pmovzxdq pmuldq pmulld ptest roundpd roundps roundsd roundss crc32 pcmpestri pcmpestrm pcmpistri pcmpistrm pcmpgtq popcnt getsec pfrcpv pfrsqrtv movbe aesenc aesenclast aesdec aesdeclast aesimc aeskeygenassist vaesenc vaesenclast vaesdec vaesdeclast vaesimc vaeskeygenassist vaddpd vaddps vaddsd vaddss vaddsubpd vaddsubps vandpd vandps vandnpd vandnps vblendpd vblendps vblendvpd vblendvps vbroadcastss vbroadcastsd vbroadcastf128 vcmpeq_ospd vcmpeqpd vcmplt_ospd vcmpltpd vcmple_ospd vcmplepd vcmpunord_qpd vcmpunordpd vcmpneq_uqpd vcmpneqpd vcmpnlt_uspd vcmpnltpd vcmpnle_uspd vcmpnlepd vcmpord_qpd vcmpordpd vcmpeq_uqpd vcmpnge_uspd vcmpngepd vcmpngt_uspd vcmpngtpd vcmpfalse_oqpd vcmpfalsepd vcmpneq_oqpd vcmpge_ospd vcmpgepd vcmpgt_ospd vcmpgtpd vcmptrue_uqpd vcmptruepd vcmplt_oqpd vcmple_oqpd vcmpunord_spd vcmpneq_uspd vcmpnlt_uqpd vcmpnle_uqpd vcmpord_spd vcmpeq_uspd vcmpnge_uqpd vcmpngt_uqpd vcmpfalse_ospd vcmpneq_ospd vcmpge_oqpd vcmpgt_oqpd vcmptrue_uspd vcmppd vcmpeq_osps vcmpeqps vcmplt_osps vcmpltps vcmple_osps vcmpleps vcmpunord_qps vcmpunordps vcmpneq_uqps vcmpneqps vcmpnlt_usps vcmpnltps vcmpnle_usps vcmpnleps vcmpord_qps vcmpordps vcmpeq_uqps vcmpnge_usps vcmpngeps vcmpngt_usps vcmpngtps vcmpfalse_oqps vcmpfalseps vcmpneq_oqps vcmpge_osps vcmpgeps vcmpgt_osps vcmpgtps vcmptrue_uqps vcmptrueps vcmplt_oqps vcmple_oqps vcmpunord_sps vcmpneq_usps vcmpnlt_uqps vcmpnle_uqps vcmpord_sps vcmpeq_usps vcmpnge_uqps vcmpngt_uqps vcmpfalse_osps vcmpneq_osps vcmpge_oqps vcmpgt_oqps vcmptrue_usps vcmpps vcmpeq_ossd vcmpeqsd vcmplt_ossd vcmpltsd vcmple_ossd vcmplesd vcmpunord_qsd vcmpunordsd vcmpneq_uqsd vcmpneqsd vcmpnlt_ussd vcmpnltsd vcmpnle_ussd vcmpnlesd vcmpord_qsd vcmpordsd vcmpeq_uqsd vcmpnge_ussd vcmpngesd vcmpngt_ussd vcmpngtsd vcmpfalse_oqsd vcmpfalsesd vcmpneq_oqsd vcmpge_ossd vcmpgesd vcmpgt_ossd vcmpgtsd vcmptrue_uqsd vcmptruesd vcmplt_oqsd vcmple_oqsd vcmpunord_ssd vcmpneq_ussd vcmpnlt_uqsd vcmpnle_uqsd vcmpord_ssd vcmpeq_ussd vcmpnge_uqsd vcmpngt_uqsd vcmpfalse_ossd vcmpneq_ossd vcmpge_oqsd vcmpgt_oqsd vcmptrue_ussd vcmpsd vcmpeq_osss vcmpeqss vcmplt_osss vcmpltss vcmple_osss vcmpless vcmpunord_qss vcmpunordss vcmpneq_uqss vcmpneqss vcmpnlt_usss vcmpnltss vcmpnle_usss vcmpnless vcmpord_qss vcmpordss vcmpeq_uqss vcmpnge_usss vcmpngess vcmpngt_usss vcmpngtss vcmpfalse_oqss vcmpfalsess vcmpneq_oqss vcmpge_osss vcmpgess vcmpgt_osss vcmpgtss vcmptrue_uqss vcmptruess vcmplt_oqss vcmple_oqss vcmpunord_sss vcmpneq_usss vcmpnlt_uqss vcmpnle_uqss vcmpord_sss vcmpeq_usss vcmpnge_uqss vcmpngt_uqss vcmpfalse_osss vcmpneq_osss vcmpge_oqss vcmpgt_oqss vcmptrue_usss vcmpss vcomisd vcomiss vcvtdq2pd vcvtdq2ps vcvtpd2dq vcvtpd2ps vcvtps2dq vcvtps2pd vcvtsd2si vcvtsd2ss vcvtsi2sd vcvtsi2ss vcvtss2sd vcvtss2si vcvttpd2dq vcvttps2dq vcvttsd2si vcvttss2si vdivpd vdivps vdivsd vdivss vdppd vdpps vextractf128 vextractps vhaddpd vhaddps vhsubpd vhsubps vinsertf128 vinsertps vlddqu vldqqu vldmxcsr vmaskmovdqu vmaskmovps vmaskmovpd vmaxpd vmaxps vmaxsd vmaxss vminpd vminps vminsd vminss vmovapd vmovaps vmovd vmovq vmovddup vmovdqa vmovqqa vmovdqu vmovqqu vmovhlps vmovhpd vmovhps vmovlhps vmovlpd vmovlps vmovmskpd vmovmskps vmovntdq vmovntqq vmovntdqa vmovntpd vmovntps vmovsd vmovshdup vmovsldup vmovss vmovupd vmovups vmpsadbw vmulpd vmulps vmulsd vmulss vorpd vorps vpabsb vpabsw vpabsd vpacksswb vpackssdw vpackuswb vpackusdw vpaddb vpaddw vpaddd vpaddq vpaddsb vpaddsw vpaddusb vpaddusw vpalignr vpand vpandn vpavgb vpavgw vpblendvb vpblendw vpcmpestri vpcmpestrm vpcmpistri vpcmpistrm vpcmpeqb vpcmpeqw vpcmpeqd vpcmpeqq vpcmpgtb vpcmpgtw vpcmpgtd vpcmpgtq vpermilpd vpermilps vperm2f128 vpextrb vpextrw vpextrd vpextrq vphaddw vphaddd vphaddsw vphminposuw vphsubw vphsubd vphsubsw vpinsrb vpinsrw vpinsrd vpinsrq vpmaddwd vpmaddubsw vpmaxsb vpmaxsw vpmaxsd vpmaxub vpmaxuw vpmaxud vpminsb vpminsw vpminsd vpminub vpminuw vpminud vpmovmskb vpmovsxbw vpmovsxbd vpmovsxbq vpmovsxwd vpmovsxwq vpmovsxdq vpmovzxbw vpmovzxbd vpmovzxbq vpmovzxwd vpmovzxwq vpmovzxdq vpmulhuw vpmulhrsw vpmulhw vpmullw vpmulld vpmuludq vpmuldq vpor vpsadbw vpshufb vpshufd vpshufhw vpshuflw vpsignb vpsignw vpsignd vpslldq vpsrldq vpsllw vpslld vpsllq vpsraw vpsrad vpsrlw vpsrld vpsrlq vptest vpsubb vpsubw vpsubd vpsubq vpsubsb vpsubsw vpsubusb vpsubusw vpunpckhbw vpunpckhwd vpunpckhdq vpunpckhqdq vpunpcklbw vpunpcklwd vpunpckldq vpunpcklqdq vpxor vrcpps vrcpss vrsqrtps vrsqrtss vroundpd vroundps vroundsd vroundss vshufpd vshufps vsqrtpd vsqrtps vsqrtsd vsqrtss vstmxcsr vsubpd vsubps vsubsd vsubss vtestps vtestpd vucomisd vucomiss vunpckhpd vunpckhps vunpcklpd vunpcklps vxorpd vxorps vzeroall vzeroupper pclmullqlqdq pclmulhqlqdq pclmullqhqdq pclmulhqhqdq pclmulqdq vpclmullqlqdq vpclmulhqlqdq vpclmullqhqdq vpclmulhqhqdq vpclmulqdq vfmadd132ps vfmadd132pd vfmadd312ps vfmadd312pd vfmadd213ps vfmadd213pd vfmadd123ps vfmadd123pd vfmadd231ps vfmadd231pd vfmadd321ps vfmadd321pd vfmaddsub132ps vfmaddsub132pd vfmaddsub312ps vfmaddsub312pd vfmaddsub213ps vfmaddsub213pd vfmaddsub123ps vfmaddsub123pd vfmaddsub231ps vfmaddsub231pd vfmaddsub321ps vfmaddsub321pd vfmsub132ps vfmsub132pd vfmsub312ps vfmsub312pd vfmsub213ps vfmsub213pd vfmsub123ps vfmsub123pd vfmsub231ps vfmsub231pd vfmsub321ps vfmsub321pd vfmsubadd132ps vfmsubadd132pd vfmsubadd312ps vfmsubadd312pd vfmsubadd213ps vfmsubadd213pd vfmsubadd123ps vfmsubadd123pd vfmsubadd231ps vfmsubadd231pd vfmsubadd321ps vfmsubadd321pd vfnmadd132ps vfnmadd132pd vfnmadd312ps vfnmadd312pd vfnmadd213ps vfnmadd213pd vfnmadd123ps vfnmadd123pd vfnmadd231ps vfnmadd231pd vfnmadd321ps vfnmadd321pd vfnmsub132ps vfnmsub132pd vfnmsub312ps vfnmsub312pd vfnmsub213ps vfnmsub213pd vfnmsub123ps vfnmsub123pd vfnmsub231ps vfnmsub231pd vfnmsub321ps vfnmsub321pd vfmadd132ss vfmadd132sd vfmadd312ss vfmadd312sd vfmadd213ss vfmadd213sd vfmadd123ss vfmadd123sd vfmadd231ss vfmadd231sd vfmadd321ss vfmadd321sd vfmsub132ss vfmsub132sd vfmsub312ss vfmsub312sd vfmsub213ss vfmsub213sd vfmsub123ss vfmsub123sd vfmsub231ss vfmsub231sd vfmsub321ss vfmsub321sd vfnmadd132ss vfnmadd132sd vfnmadd312ss vfnmadd312sd vfnmadd213ss vfnmadd213sd vfnmadd123ss vfnmadd123sd vfnmadd231ss vfnmadd231sd vfnmadd321ss vfnmadd321sd vfnmsub132ss vfnmsub132sd vfnmsub312ss vfnmsub312sd vfnmsub213ss vfnmsub213sd vfnmsub123ss vfnmsub123sd vfnmsub231ss vfnmsub231sd vfnmsub321ss vfnmsub321sd rdfsbase rdgsbase rdrand wrfsbase wrgsbase vcvtph2ps vcvtps2ph adcx adox rdseed clac stac xstore xcryptecb xcryptcbc xcryptctr xcryptcfb xcryptofb montmul xsha1 xsha256 llwpcb slwpcb lwpval lwpins vfmaddpd vfmaddps vfmaddsd vfmaddss vfmaddsubpd vfmaddsubps vfmsubaddpd vfmsubaddps vfmsubpd vfmsubps vfmsubsd vfmsubss vfnmaddpd vfnmaddps vfnmaddsd vfnmaddss vfnmsubpd vfnmsubps vfnmsubsd vfnmsubss vfrczpd vfrczps vfrczsd vfrczss vpcmov vpcomb vpcomd vpcomq vpcomub vpcomud vpcomuq vpcomuw vpcomw vphaddbd vphaddbq vphaddbw vphadddq vphaddubd vphaddubq vphaddubw vphaddudq vphadduwd vphadduwq vphaddwd vphaddwq vphsubbw vphsubdq vphsubwd vpmacsdd vpmacsdqh vpmacsdql vpmacssdd vpmacssdqh vpmacssdql vpmacsswd vpmacssww vpmacswd vpmacsww vpmadcsswd vpmadcswd vpperm vprotb vprotd vprotq vprotw vpshab vpshad vpshaq vpshaw vpshlb vpshld vpshlq vpshlw vbroadcasti128 vpblendd vpbroadcastb vpbroadcastw vpbroadcastd vpbroadcastq vpermd vpermpd vpermps vpermq vperm2i128 vextracti128 vinserti128 vpmaskmovd vpmaskmovq vpsllvd vpsllvq vpsravd vpsrlvd vpsrlvq vgatherdpd vgatherqpd vgatherdps vgatherqps vpgatherdd vpgatherqd vpgatherdq vpgatherqq xabort xbegin xend xtest andn bextr blci blcic blsi blsic blcfill blsfill blcmsk blsmsk blsr blcs bzhi mulx pdep pext rorx sarx shlx shrx tzcnt tzmsk t1mskc valignd valignq vblendmpd vblendmps vbroadcastf32x4 vbroadcastf64x4 vbroadcasti32x4 vbroadcasti64x4 vcompresspd vcompressps vcvtpd2udq vcvtps2udq vcvtsd2usi vcvtss2usi vcvttpd2udq vcvttps2udq vcvttsd2usi vcvttss2usi vcvtudq2pd vcvtudq2ps vcvtusi2sd vcvtusi2ss vexpandpd vexpandps vextractf32x4 vextractf64x4 vextracti32x4 vextracti64x4 vfixupimmpd vfixupimmps vfixupimmsd vfixupimmss vgetexppd vgetexpps vgetexpsd vgetexpss vgetmantpd vgetmantps vgetmantsd vgetmantss vinsertf32x4 vinsertf64x4 vinserti32x4 vinserti64x4 vmovdqa32 vmovdqa64 vmovdqu32 vmovdqu64 vpabsq vpandd vpandnd vpandnq vpandq vpblendmd vpblendmq vpcmpltd vpcmpled vpcmpneqd vpcmpnltd vpcmpnled vpcmpd vpcmpltq vpcmpleq vpcmpneqq vpcmpnltq vpcmpnleq vpcmpq vpcmpequd vpcmpltud vpcmpleud vpcmpnequd vpcmpnltud vpcmpnleud vpcmpud vpcmpequq vpcmpltuq vpcmpleuq vpcmpnequq vpcmpnltuq vpcmpnleuq vpcmpuq vpcompressd vpcompressq vpermi2d vpermi2pd vpermi2ps vpermi2q vpermt2d vpermt2pd vpermt2ps vpermt2q vpexpandd vpexpandq vpmaxsq vpmaxuq vpminsq vpminuq vpmovdb vpmovdw vpmovqb vpmovqd vpmovqw vpmovsdb vpmovsdw vpmovsqb vpmovsqd vpmovsqw vpmovusdb vpmovusdw vpmovusqb vpmovusqd vpmovusqw vpord vporq vprold vprolq vprolvd vprolvq vprord vprorq vprorvd vprorvq vpscatterdd vpscatterdq vpscatterqd vpscatterqq vpsraq vpsravq vpternlogd vpternlogq vptestmd vptestmq vptestnmd vptestnmq vpxord vpxorq vrcp14pd vrcp14ps vrcp14sd vrcp14ss vrndscalepd vrndscaleps vrndscalesd vrndscaless vrsqrt14pd vrsqrt14ps vrsqrt14sd vrsqrt14ss vscalefpd vscalefps vscalefsd vscalefss vscatterdpd vscatterdps vscatterqpd vscatterqps vshuff32x4 vshuff64x2 vshufi32x4 vshufi64x2 kandnw kandw kmovw knotw kortestw korw kshiftlw kshiftrw kunpckbw kxnorw kxorw vpbroadcastmb2q vpbroadcastmw2d vpconflictd vpconflictq vplzcntd vplzcntq vexp2pd vexp2ps vrcp28pd vrcp28ps vrcp28sd vrcp28ss vrsqrt28pd vrsqrt28ps vrsqrt28sd vrsqrt28ss vgatherpf0dpd vgatherpf0dps vgatherpf0qpd vgatherpf0qps vgatherpf1dpd vgatherpf1dps vgatherpf1qpd vgatherpf1qps vscatterpf0dpd vscatterpf0dps vscatterpf0qpd vscatterpf0qps vscatterpf1dpd vscatterpf1dps vscatterpf1qpd vscatterpf1qps prefetchwt1 bndmk bndcl bndcu bndcn bndmov bndldx bndstx sha1rnds4 sha1nexte sha1msg1 sha1msg2 sha256rnds2 sha256msg1 sha256msg2 hint_nop0 hint_nop1 hint_nop2 hint_nop3 hint_nop4 hint_nop5 hint_nop6 hint_nop7 hint_nop8 hint_nop9 hint_nop10 hint_nop11 hint_nop12 hint_nop13 hint_nop14 hint_nop15 hint_nop16 hint_nop17 hint_nop18 hint_nop19 hint_nop20 hint_nop21 hint_nop22 hint_nop23 hint_nop24 hint_nop25 hint_nop26 hint_nop27 hint_nop28 hint_nop29 hint_nop30 hint_nop31 hint_nop32 hint_nop33 hint_nop34 hint_nop35 hint_nop36 hint_nop37 hint_nop38 hint_nop39 hint_nop40 hint_nop41 hint_nop42 hint_nop43 hint_nop44 hint_nop45 hint_nop46 hint_nop47 hint_nop48 hint_nop49 hint_nop50 hint_nop51 hint_nop52 hint_nop53 hint_nop54 hint_nop55 hint_nop56 hint_nop57 hint_nop58 hint_nop59 hint_nop60 hint_nop61 hint_nop62 hint_nop63',\n      built_in:\n        // Instruction pointer\n        'ip eip rip ' +\n        // 8-bit registers\n        'al ah bl bh cl ch dl dh sil dil bpl spl r8b r9b r10b r11b r12b r13b r14b r15b ' +\n        // 16-bit registers\n        'ax bx cx dx si di bp sp r8w r9w r10w r11w r12w r13w r14w r15w ' +\n        // 32-bit registers\n        'eax ebx ecx edx esi edi ebp esp eip r8d r9d r10d r11d r12d r13d r14d r15d ' +\n        // 64-bit registers\n        'rax rbx rcx rdx rsi rdi rbp rsp r8 r9 r10 r11 r12 r13 r14 r15 ' +\n        // Segment registers\n        'cs ds es fs gs ss ' +\n        // Floating point stack registers\n        'st st0 st1 st2 st3 st4 st5 st6 st7 ' +\n        // MMX Registers\n        'mm0 mm1 mm2 mm3 mm4 mm5 mm6 mm7 ' +\n        // SSE registers\n        'xmm0  xmm1  xmm2  xmm3  xmm4  xmm5  xmm6  xmm7  xmm8  xmm9 xmm10  xmm11 xmm12 xmm13 xmm14 xmm15 ' +\n        'xmm16 xmm17 xmm18 xmm19 xmm20 xmm21 xmm22 xmm23 xmm24 xmm25 xmm26 xmm27 xmm28 xmm29 xmm30 xmm31 ' +\n        // AVX registers\n        'ymm0  ymm1  ymm2  ymm3  ymm4  ymm5  ymm6  ymm7  ymm8  ymm9 ymm10  ymm11 ymm12 ymm13 ymm14 ymm15 ' +\n        'ymm16 ymm17 ymm18 ymm19 ymm20 ymm21 ymm22 ymm23 ymm24 ymm25 ymm26 ymm27 ymm28 ymm29 ymm30 ymm31 ' +\n        // AVX-512F registers\n        'zmm0  zmm1  zmm2  zmm3  zmm4  zmm5  zmm6  zmm7  zmm8  zmm9 zmm10  zmm11 zmm12 zmm13 zmm14 zmm15 ' +\n        'zmm16 zmm17 zmm18 zmm19 zmm20 zmm21 zmm22 zmm23 zmm24 zmm25 zmm26 zmm27 zmm28 zmm29 zmm30 zmm31 ' +\n        // AVX-512F mask registers\n        'k0 k1 k2 k3 k4 k5 k6 k7 ' +\n        // Bound (MPX) register\n        'bnd0 bnd1 bnd2 bnd3 ' +\n        // Special register\n        'cr0 cr1 cr2 cr3 cr4 cr8 dr0 dr1 dr2 dr3 dr8 tr3 tr4 tr5 tr6 tr7 ' +\n        // NASM altreg package\n        'r0 r1 r2 r3 r4 r5 r6 r7 r0b r1b r2b r3b r4b r5b r6b r7b ' +\n        'r0w r1w r2w r3w r4w r5w r6w r7w r0d r1d r2d r3d r4d r5d r6d r7d ' +\n        'r0h r1h r2h r3h ' +\n        'r0l r1l r2l r3l r4l r5l r6l r7l r8l r9l r10l r11l r12l r13l r14l r15l ' +\n\n        'db dw dd dq dt ddq do dy dz ' +\n        'resb resw resd resq rest resdq reso resy resz ' +\n        'incbin equ times ' +\n        'byte word dword qword nosplit rel abs seg wrt strict near far a32 ptr',\n\n      meta:\n        '%define %xdefine %+ %undef %defstr %deftok %assign %strcat %strlen %substr %rotate %elif %else %endif ' +\n        '%if %ifmacro %ifctx %ifidn %ifidni %ifid %ifnum %ifstr %iftoken %ifempty %ifenv %error %warning %fatal %rep ' +\n        '%endrep %include %push %pop %repl %pathsearch %depend %use %arg %stacksize %local %line %comment %endcomment ' +\n        '.nolist ' +\n        '__FILE__ __LINE__ __SECT__  __BITS__ __OUTPUT_FORMAT__ __DATE__ __TIME__ __DATE_NUM__ __TIME_NUM__ ' +\n        '__UTC_DATE__ __UTC_TIME__ __UTC_DATE_NUM__ __UTC_TIME_NUM__  __PASS__ struc endstruc istruc at iend ' +\n        'align alignb sectalign daz nodaz up down zero default option assume public ' +\n\n        'bits use16 use32 use64 default section segment absolute extern global common cpu float ' +\n        '__utf16__ __utf16le__ __utf16be__ __utf32__ __utf32le__ __utf32be__ ' +\n        '__float8__ __float16__ __float32__ __float64__ __float80m__ __float80e__ __float128l__ __float128h__ ' +\n        '__Infinity__ __QNaN__ __SNaN__ Inf NaN QNaN SNaN float8 float16 float32 float64 float80m float80e ' +\n        'float128l float128h __FLOAT_DAZ__ __FLOAT_ROUND__ __FLOAT__'\n    },\n    contains: [\n      hljs.COMMENT(\n        ';',\n        '$',\n        {\n          relevance: 0\n        }\n      ),\n      {\n        className: 'number',\n        variants: [\n          // Float number and x87 BCD\n          {\n            begin: '\\\\b(?:([0-9][0-9_]*)?\\\\.[0-9_]*(?:[eE][+-]?[0-9_]+)?|' +\n                   '(0[Xx])?[0-9][0-9_]*\\\\.?[0-9_]*(?:[pP](?:[+-]?[0-9_]+)?)?)\\\\b',\n            relevance: 0\n          },\n\n          // Hex number in $\n          { begin: '\\\\$[0-9][0-9A-Fa-f]*', relevance: 0 },\n\n          // Number in H,D,T,Q,O,B,Y suffix\n          { begin: '\\\\b(?:[0-9A-Fa-f][0-9A-Fa-f_]*[Hh]|[0-9][0-9_]*[DdTt]?|[0-7][0-7_]*[QqOo]|[0-1][0-1_]*[BbYy])\\\\b' },\n\n          // Number in X,D,T,Q,O,B,Y prefix\n          { begin: '\\\\b(?:0[Xx][0-9A-Fa-f_]+|0[DdTt][0-9_]+|0[QqOo][0-7_]+|0[BbYy][0-1_]+)\\\\b'}\n        ]\n      },\n      // Double quote string\n      hljs.QUOTE_STRING_MODE,\n      {\n        className: 'string',\n        variants: [\n          // Single-quoted string\n          { begin: '\\'', end: '[^\\\\\\\\]\\'' },\n          // Backquoted string\n          { begin: '`', end: '[^\\\\\\\\]`' }\n        ],\n        relevance: 0\n      },\n      {\n        className: 'symbol',\n        variants: [\n          // Global label and local label\n          { begin: '^\\\\s*[A-Za-z._?][A-Za-z0-9_$#@~.?]*(:|\\\\s+label)' },\n          // Macro-local label\n          { begin: '^\\\\s*%%[A-Za-z0-9_$#@~.?]*:' }\n        ],\n        relevance: 0\n      },\n      // Macro parameter\n      {\n        className: 'subst',\n        begin: '%[0-9]+',\n        relevance: 0\n      },\n      // Macro parameter\n      {\n        className: 'subst',\n        begin: '%!\\S+',\n        relevance: 0\n      },\n      {\n        className: 'meta',\n        begin: /^\\s*\\.[\\w_-]+/\n      }\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/x86asm.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/xl.js":
/*!*******************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/xl.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var BUILTIN_MODULES =\n    'ObjectLoader Animate MovieCredits Slides Filters Shading Materials LensFlare Mapping VLCAudioVideo ' +\n    'StereoDecoder PointCloud NetworkAccess RemoteControl RegExp ChromaKey Snowfall NodeJS Speech Charts';\n\n  var XL_KEYWORDS = {\n    keyword:\n      'if then else do while until for loop import with is as where when by data constant ' +\n      'integer real text name boolean symbol infix prefix postfix block tree',\n    literal:\n      'true false nil',\n    built_in:\n      'in mod rem and or xor not abs sign floor ceil sqrt sin cos tan asin ' +\n      'acos atan exp expm1 log log2 log10 log1p pi at text_length text_range ' +\n      'text_find text_replace contains page slide basic_slide title_slide ' +\n      'title subtitle fade_in fade_out fade_at clear_color color line_color ' +\n      'line_width texture_wrap texture_transform texture scale_?x scale_?y ' +\n      'scale_?z? translate_?x translate_?y translate_?z? rotate_?x rotate_?y ' +\n      'rotate_?z? rectangle circle ellipse sphere path line_to move_to ' +\n      'quad_to curve_to theme background contents locally time mouse_?x ' +\n      'mouse_?y mouse_buttons ' +\n      BUILTIN_MODULES\n  };\n\n  var DOUBLE_QUOTE_TEXT = {\n    className: 'string',\n    begin: '\"', end: '\"', illegal: '\\\\n'\n  };\n  var SINGLE_QUOTE_TEXT = {\n    className: 'string',\n    begin: '\\'', end: '\\'', illegal: '\\\\n'\n  };\n  var LONG_TEXT = {\n    className: 'string',\n    begin: '<<', end: '>>'\n  };\n  var BASED_NUMBER = {\n    className: 'number',\n    begin: '[0-9]+#[0-9A-Z_]+(\\\\.[0-9-A-Z_]+)?#?([Ee][+-]?[0-9]+)?'\n  };\n  var IMPORT = {\n    beginKeywords: 'import', end: '$',\n    keywords: XL_KEYWORDS,\n    contains: [DOUBLE_QUOTE_TEXT]\n  };\n  var FUNCTION_DEFINITION = {\n    className: 'function',\n    begin: /[a-z][^\\n]*->/, returnBegin: true, end: /->/,\n    contains: [\n      hljs.inherit(hljs.TITLE_MODE, {starts: {\n        endsWithParent: true,\n        keywords: XL_KEYWORDS\n      }})\n    ]\n  };\n  return {\n    aliases: ['tao'],\n    lexemes: /[a-zA-Z][a-zA-Z0-9_?]*/,\n    keywords: XL_KEYWORDS,\n    contains: [\n    hljs.C_LINE_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE,\n    DOUBLE_QUOTE_TEXT,\n    SINGLE_QUOTE_TEXT,\n    LONG_TEXT,\n    FUNCTION_DEFINITION,\n    IMPORT,\n    BASED_NUMBER,\n    hljs.NUMBER_MODE\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/xl.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/xml.js":
/*!********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/xml.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var XML_IDENT_RE = '[A-Za-z0-9\\\\._:-]+';\n  var TAG_INTERNALS = {\n    endsWithParent: true,\n    illegal: /</,\n    relevance: 0,\n    contains: [\n      {\n        className: 'attr',\n        begin: XML_IDENT_RE,\n        relevance: 0\n      },\n      {\n        begin: /=\\s*/,\n        relevance: 0,\n        contains: [\n          {\n            className: 'string',\n            endsParent: true,\n            variants: [\n              {begin: /\"/, end: /\"/},\n              {begin: /'/, end: /'/},\n              {begin: /[^\\s\"'=<>`]+/}\n            ]\n          }\n        ]\n      }\n    ]\n  };\n  return {\n    aliases: ['html', 'xhtml', 'rss', 'atom', 'xjb', 'xsd', 'xsl', 'plist'],\n    case_insensitive: true,\n    contains: [\n      {\n        className: 'meta',\n        begin: '<!DOCTYPE', end: '>',\n        relevance: 10,\n        contains: [{begin: '\\\\[', end: '\\\\]'}]\n      },\n      hljs.COMMENT(\n        '<!--',\n        '-->',\n        {\n          relevance: 10\n        }\n      ),\n      {\n        begin: '<\\\\!\\\\[CDATA\\\\[', end: '\\\\]\\\\]>',\n        relevance: 10\n      },\n      {\n        begin: /<\\?(php)?/, end: /\\?>/,\n        subLanguage: 'php',\n        contains: [{begin: '/\\\\*', end: '\\\\*/', skip: true}]\n      },\n      {\n        className: 'tag',\n        /*\n        The lookahead pattern (?=...) ensures that 'begin' only matches\n        '<style' as a single word, followed by a whitespace or an\n        ending braket. The '$' is needed for the lexeme to be recognized\n        by hljs.subMode() that tests lexemes outside the stream.\n        */\n        begin: '<style(?=\\\\s|>|$)', end: '>',\n        keywords: {name: 'style'},\n        contains: [TAG_INTERNALS],\n        starts: {\n          end: '</style>', returnEnd: true,\n          subLanguage: ['css', 'xml']\n        }\n      },\n      {\n        className: 'tag',\n        // See the comment in the <style tag about the lookahead pattern\n        begin: '<script(?=\\\\s|>|$)', end: '>',\n        keywords: {name: 'script'},\n        contains: [TAG_INTERNALS],\n        starts: {\n          end: '\\<\\/script\\>', returnEnd: true,\n          subLanguage: ['actionscript', 'javascript', 'handlebars', 'xml']\n        }\n      },\n      {\n        className: 'meta',\n        variants: [\n          {begin: /<\\?xml/, end: /\\?>/, relevance: 10},\n          {begin: /<\\?\\w+/, end: /\\?>/}\n        ]\n      },\n      {\n        className: 'tag',\n        begin: '</?', end: '/?>',\n        contains: [\n          {\n            className: 'name', begin: /[^\\/><\\s]+/, relevance: 0\n          },\n          TAG_INTERNALS\n        ]\n      }\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/xml.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/xquery.js":
/*!***********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/xquery.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var KEYWORDS = 'for let if while then else return where group by xquery encoding version' +\n    'module namespace boundary-space preserve strip default collation base-uri ordering' +\n    'copy-namespaces order declare import schema namespace function option in allowing empty' +\n    'at tumbling window sliding window start when only end when previous next stable ascending' +\n    'descending empty greatest least some every satisfies switch case typeswitch try catch and' +\n    'or to union intersect instance of treat as castable cast map array delete insert into' +\n    'replace value rename copy modify update';\n  var LITERAL = 'false true xs:string xs:integer element item xs:date xs:datetime xs:float xs:double xs:decimal QName xs:anyURI xs:long xs:int xs:short xs:byte attribute';\n  var VAR = {\n    begin: /\\$[a-zA-Z0-9\\-]+/\n  };\n\n  var NUMBER = {\n    className: 'number',\n    begin: '(\\\\b0[0-7_]+)|(\\\\b0x[0-9a-fA-F_]+)|(\\\\b[1-9][0-9_]*(\\\\.[0-9_]+)?)|[0_]\\\\b',\n    relevance: 0\n  };\n\n  var STRING = {\n    className: 'string',\n    variants: [\n      {begin: /\"/, end: /\"/, contains: [{begin: /\"\"/, relevance: 0}]},\n      {begin: /'/, end: /'/, contains: [{begin: /''/, relevance: 0}]}\n    ]\n  };\n\n  var ANNOTATION = {\n    className: 'meta',\n    begin: '%\\\\w+'\n  };\n\n  var COMMENT = {\n    className: 'comment',\n    begin: '\\\\(:', end: ':\\\\)',\n    relevance: 10,\n    contains: [\n      {\n        className: 'doctag', begin: '@\\\\w+'\n      }\n    ]\n  };\n\n  var METHOD = {\n    begin: '{', end: '}'\n  };\n\n  var CONTAINS = [\n    VAR,\n    STRING,\n    NUMBER,\n    COMMENT,\n    ANNOTATION,\n    METHOD\n  ];\n  METHOD.contains = CONTAINS;\n\n\n  return {\n    aliases: ['xpath', 'xq'],\n    case_insensitive: false,\n    lexemes: /[a-zA-Z\\$][a-zA-Z0-9_:\\-]*/,\n    illegal: /(proc)|(abstract)|(extends)|(until)|(#)/,\n    keywords: {\n      keyword: KEYWORDS,\n      literal: LITERAL\n    },\n    contains: CONTAINS\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/xquery.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/yaml.js":
/*!*********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/yaml.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var LITERALS = 'true false yes no null';\n\n  var keyPrefix = '^[ \\\\-]*';\n  var keyName =  '[a-zA-Z_][\\\\w\\\\-]*';\n  var KEY = {\n    className: 'attr',\n    variants: [\n      { begin: keyPrefix + keyName + \":\"},\n      { begin: keyPrefix + '\"' + keyName + '\"' + \":\"},\n      { begin: keyPrefix + \"'\" + keyName + \"'\" + \":\"}\n    ]\n  };\n\n  var TEMPLATE_VARIABLES = {\n    className: 'template-variable',\n    variants: [\n      { begin: '\\{\\{', end: '\\}\\}' }, // jinja templates Ansible\n      { begin: '%\\{', end: '\\}' } // Ruby i18n\n    ]\n  };\n  var STRING = {\n    className: 'string',\n    relevance: 0,\n    variants: [\n      {begin: /'/, end: /'/},\n      {begin: /\"/, end: /\"/},\n      {begin: /\\S+/}\n    ],\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      TEMPLATE_VARIABLES\n    ]\n  };\n\n  return {\n    case_insensitive: true,\n    aliases: ['yml', 'YAML', 'yaml'],\n    contains: [\n      KEY,\n      {\n        className: 'meta',\n        begin: '^---\\s*$',\n        relevance: 10\n      },\n      { // multi line string\n        className: 'string',\n        begin: '[\\\\|>] *$',\n        returnEnd: true,\n        contains: STRING.contains,\n        // very simple termination: next hash key\n        end: KEY.variants[0].begin\n      },\n      { // Ruby/Rails erb\n        begin: '<%[%=-]?', end: '[%-]?%>',\n        subLanguage: 'ruby',\n        excludeBegin: true,\n        excludeEnd: true,\n        relevance: 0\n      },\n      { // data type\n        className: 'type',\n        begin: '!!' + hljs.UNDERSCORE_IDENT_RE,\n      },\n      { // fragment id &ref\n        className: 'meta',\n        begin: '&' + hljs.UNDERSCORE_IDENT_RE + '$',\n      },\n      { // fragment reference *ref\n        className: 'meta',\n        begin: '\\\\*' + hljs.UNDERSCORE_IDENT_RE + '$'\n      },\n      { // array listing\n        className: 'bullet',\n        begin: '^ *-',\n        relevance: 0\n      },\n      hljs.HASH_COMMENT_MODE,\n      {\n        beginKeywords: LITERALS,\n        keywords: {literal: LITERALS}\n      },\n      hljs.C_NUMBER_MODE,\n      STRING\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/yaml.js?");

/***/ }),

/***/ "./node_modules/highlight.js/lib/languages/zephir.js":
/*!***********************************************************!*\
  !*** ./node_modules/highlight.js/lib/languages/zephir.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(hljs) {\n  var STRING = {\n    className: 'string',\n    contains: [hljs.BACKSLASH_ESCAPE],\n    variants: [\n      {\n        begin: 'b\"', end: '\"'\n      },\n      {\n        begin: 'b\\'', end: '\\''\n      },\n      hljs.inherit(hljs.APOS_STRING_MODE, {illegal: null}),\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null})\n    ]\n  };\n  var NUMBER = {variants: [hljs.BINARY_NUMBER_MODE, hljs.C_NUMBER_MODE]};\n  return {\n    aliases: ['zep'],\n    case_insensitive: true,\n    keywords:\n      'and include_once list abstract global private echo interface as static endswitch ' +\n      'array null if endwhile or const for endforeach self var let while isset public ' +\n      'protected exit foreach throw elseif include __FILE__ empty require_once do xor ' +\n      'return parent clone use __CLASS__ __LINE__ else break print eval new ' +\n      'catch __METHOD__ case exception default die require __FUNCTION__ ' +\n      'enddeclare final try switch continue endfor endif declare unset true false ' +\n      'trait goto instanceof insteadof __DIR__ __NAMESPACE__ ' +\n      'yield finally int uint long ulong char uchar double float bool boolean string' +\n      'likely unlikely',\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.HASH_COMMENT_MODE,\n      hljs.COMMENT(\n        '/\\\\*',\n        '\\\\*/',\n        {\n          contains: [\n            {\n              className: 'doctag',\n              begin: '@[A-Za-z]+'\n            }\n          ]\n        }\n      ),\n      hljs.COMMENT(\n        '__halt_compiler.+?;',\n        false,\n        {\n          endsWithParent: true,\n          keywords: '__halt_compiler',\n          lexemes: hljs.UNDERSCORE_IDENT_RE\n        }\n      ),\n      {\n        className: 'string',\n        begin: '<<<[\\'\"]?\\\\w+[\\'\"]?$', end: '^\\\\w+;',\n        contains: [hljs.BACKSLASH_ESCAPE]\n      },\n      {\n        // swallow composed identifiers to avoid parsing them as keywords\n        begin: /(::|->)+[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*/\n      },\n      {\n        className: 'function',\n        beginKeywords: 'function', end: /[;{]/, excludeEnd: true,\n        illegal: '\\\\$|\\\\[|%',\n        contains: [\n          hljs.UNDERSCORE_TITLE_MODE,\n          {\n            className: 'params',\n            begin: '\\\\(', end: '\\\\)',\n            contains: [\n              'self',\n              hljs.C_BLOCK_COMMENT_MODE,\n              STRING,\n              NUMBER\n            ]\n          }\n        ]\n      },\n      {\n        className: 'class',\n        beginKeywords: 'class interface', end: '{', excludeEnd: true,\n        illegal: /[:\\(\\$\"]/,\n        contains: [\n          {beginKeywords: 'extends implements'},\n          hljs.UNDERSCORE_TITLE_MODE\n        ]\n      },\n      {\n        beginKeywords: 'namespace', end: ';',\n        illegal: /[\\.']/,\n        contains: [hljs.UNDERSCORE_TITLE_MODE]\n      },\n      {\n        beginKeywords: 'use', end: ';',\n        contains: [hljs.UNDERSCORE_TITLE_MODE]\n      },\n      {\n        begin: '=>' // No markup, just a relevance booster\n      },\n      STRING,\n      NUMBER\n    ]\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/highlight.js/lib/languages/zephir.js?");

/***/ }),

/***/ "./node_modules/ieee754/index.js":
/*!***************************************!*\
  !*** ./node_modules/ieee754/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n//# sourceURL=webpack:///./node_modules/ieee754/index.js?");

/***/ }),

/***/ "./node_modules/inherits/inherits_browser.js":
/*!***************************************************!*\
  !*** ./node_modules/inherits/inherits_browser.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n//# sourceURL=webpack:///./node_modules/inherits/inherits_browser.js?");

/***/ }),

/***/ "./node_modules/isarray/index.js":
/*!***************************************!*\
  !*** ./node_modules/isarray/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n//# sourceURL=webpack:///./node_modules/isarray/index.js?");

/***/ }),

/***/ "./node_modules/mkdirp/index.js":
/*!**************************************!*\
  !*** ./node_modules/mkdirp/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(process) {var path = __webpack_require__(/*! path */ \"./node_modules/path-browserify/index.js\");\nvar fs = __webpack_require__(/*! fs */ \"./node_modules/node-libs-browser/mock/empty.js\");\nvar _0777 = parseInt('0777', 8);\n\nmodule.exports = mkdirP.mkdirp = mkdirP.mkdirP = mkdirP;\n\nfunction mkdirP (p, opts, f, made) {\n    if (typeof opts === 'function') {\n        f = opts;\n        opts = {};\n    }\n    else if (!opts || typeof opts !== 'object') {\n        opts = { mode: opts };\n    }\n    \n    var mode = opts.mode;\n    var xfs = opts.fs || fs;\n    \n    if (mode === undefined) {\n        mode = _0777 & (~process.umask());\n    }\n    if (!made) made = null;\n    \n    var cb = f || function () {};\n    p = path.resolve(p);\n    \n    xfs.mkdir(p, mode, function (er) {\n        if (!er) {\n            made = made || p;\n            return cb(null, made);\n        }\n        switch (er.code) {\n            case 'ENOENT':\n                mkdirP(path.dirname(p), opts, function (er, made) {\n                    if (er) cb(er, made);\n                    else mkdirP(p, opts, cb, made);\n                });\n                break;\n\n            // In the case of any other error, just see if there's a dir\n            // there already.  If so, then hooray!  If not, then something\n            // is borked.\n            default:\n                xfs.stat(p, function (er2, stat) {\n                    // if the stat fails, then that's super weird.\n                    // let the original error be the failure reason.\n                    if (er2 || !stat.isDirectory()) cb(er, made)\n                    else cb(null, made);\n                });\n                break;\n        }\n    });\n}\n\nmkdirP.sync = function sync (p, opts, made) {\n    if (!opts || typeof opts !== 'object') {\n        opts = { mode: opts };\n    }\n    \n    var mode = opts.mode;\n    var xfs = opts.fs || fs;\n    \n    if (mode === undefined) {\n        mode = _0777 & (~process.umask());\n    }\n    if (!made) made = null;\n\n    p = path.resolve(p);\n\n    try {\n        xfs.mkdirSync(p, mode);\n        made = made || p;\n    }\n    catch (err0) {\n        switch (err0.code) {\n            case 'ENOENT' :\n                made = sync(path.dirname(p), opts, made);\n                sync(p, opts, made);\n                break;\n\n            // In the case of any other error, just see if there's a dir\n            // there already.  If so, then hooray!  If not, then something\n            // is borked.\n            default:\n                var stat;\n                try {\n                    stat = xfs.statSync(p);\n                }\n                catch (err1) {\n                    throw err0;\n                }\n                if (!stat.isDirectory()) throw err0;\n                break;\n        }\n    }\n\n    return made;\n};\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///./node_modules/mkdirp/index.js?");

/***/ }),

/***/ "./node_modules/ms/index.js":
/*!**********************************!*\
  !*** ./node_modules/ms/index.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\-?\\d?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n\n\n//# sourceURL=webpack:///./node_modules/ms/index.js?");

/***/ }),

/***/ "./node_modules/node-libs-browser/mock/empty.js":
/*!******************************************************!*\
  !*** ./node_modules/node-libs-browser/mock/empty.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n\n//# sourceURL=webpack:///./node_modules/node-libs-browser/mock/empty.js?");

/***/ }),

/***/ "./node_modules/node-libs-browser/node_modules/buffer/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/node-libs-browser/node_modules/buffer/index.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\n\nvar base64 = __webpack_require__(/*! base64-js */ \"./node_modules/base64-js/index.js\")\nvar ieee754 = __webpack_require__(/*! ieee754 */ \"./node_modules/ieee754/index.js\")\nvar isArray = __webpack_require__(/*! isarray */ \"./node_modules/isarray/index.js\")\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/node-libs-browser/node_modules/buffer/index.js?");

/***/ }),

/***/ "./node_modules/parse5/lib/common/doctype.js":
/*!***************************************************!*\
  !*** ./node_modules/parse5/lib/common/doctype.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar DOCUMENT_MODE = __webpack_require__(/*! ./html */ \"./node_modules/parse5/lib/common/html.js\").DOCUMENT_MODE;\n\n//Const\nvar VALID_DOCTYPE_NAME = 'html',\n    QUIRKS_MODE_SYSTEM_ID = 'http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd',\n    QUIRKS_MODE_PUBLIC_ID_PREFIXES = [\n        '+//silmaril//dtd html pro v0r11 19970101//en',\n        '-//advasoft ltd//dtd html 3.0 aswedit + extensions//en',\n        '-//as//dtd html 3.0 aswedit + extensions//en',\n        '-//ietf//dtd html 2.0 level 1//en',\n        '-//ietf//dtd html 2.0 level 2//en',\n        '-//ietf//dtd html 2.0 strict level 1//en',\n        '-//ietf//dtd html 2.0 strict level 2//en',\n        '-//ietf//dtd html 2.0 strict//en',\n        '-//ietf//dtd html 2.0//en',\n        '-//ietf//dtd html 2.1e//en',\n        '-//ietf//dtd html 3.0//en',\n        '-//ietf//dtd html 3.0//en//',\n        '-//ietf//dtd html 3.2 final//en',\n        '-//ietf//dtd html 3.2//en',\n        '-//ietf//dtd html 3//en',\n        '-//ietf//dtd html level 0//en',\n        '-//ietf//dtd html level 0//en//2.0',\n        '-//ietf//dtd html level 1//en',\n        '-//ietf//dtd html level 1//en//2.0',\n        '-//ietf//dtd html level 2//en',\n        '-//ietf//dtd html level 2//en//2.0',\n        '-//ietf//dtd html level 3//en',\n        '-//ietf//dtd html level 3//en//3.0',\n        '-//ietf//dtd html strict level 0//en',\n        '-//ietf//dtd html strict level 0//en//2.0',\n        '-//ietf//dtd html strict level 1//en',\n        '-//ietf//dtd html strict level 1//en//2.0',\n        '-//ietf//dtd html strict level 2//en',\n        '-//ietf//dtd html strict level 2//en//2.0',\n        '-//ietf//dtd html strict level 3//en',\n        '-//ietf//dtd html strict level 3//en//3.0',\n        '-//ietf//dtd html strict//en',\n        '-//ietf//dtd html strict//en//2.0',\n        '-//ietf//dtd html strict//en//3.0',\n        '-//ietf//dtd html//en',\n        '-//ietf//dtd html//en//2.0',\n        '-//ietf//dtd html//en//3.0',\n        '-//metrius//dtd metrius presentational//en',\n        '-//microsoft//dtd internet explorer 2.0 html strict//en',\n        '-//microsoft//dtd internet explorer 2.0 html//en',\n        '-//microsoft//dtd internet explorer 2.0 tables//en',\n        '-//microsoft//dtd internet explorer 3.0 html strict//en',\n        '-//microsoft//dtd internet explorer 3.0 html//en',\n        '-//microsoft//dtd internet explorer 3.0 tables//en',\n        '-//netscape comm. corp.//dtd html//en',\n        '-//netscape comm. corp.//dtd strict html//en',\n        '-//o\\'reilly and associates//dtd html 2.0//en',\n        '-//o\\'reilly and associates//dtd html extended 1.0//en',\n        '-//spyglass//dtd html 2.0 extended//en',\n        '-//sq//dtd html 2.0 hotmetal + extensions//en',\n        '-//sun microsystems corp.//dtd hotjava html//en',\n        '-//sun microsystems corp.//dtd hotjava strict html//en',\n        '-//w3c//dtd html 3 1995-03-24//en',\n        '-//w3c//dtd html 3.2 draft//en',\n        '-//w3c//dtd html 3.2 final//en',\n        '-//w3c//dtd html 3.2//en',\n        '-//w3c//dtd html 3.2s draft//en',\n        '-//w3c//dtd html 4.0 frameset//en',\n        '-//w3c//dtd html 4.0 transitional//en',\n        '-//w3c//dtd html experimental 19960712//en',\n        '-//w3c//dtd html experimental 970421//en',\n        '-//w3c//dtd w3 html//en',\n        '-//w3o//dtd w3 html 3.0//en',\n        '-//w3o//dtd w3 html 3.0//en//',\n        '-//webtechs//dtd mozilla html 2.0//en',\n        '-//webtechs//dtd mozilla html//en'\n    ],\n    QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = QUIRKS_MODE_PUBLIC_ID_PREFIXES.concat([\n        '-//w3c//dtd html 4.01 frameset//',\n        '-//w3c//dtd html 4.01 transitional//'\n    ]),\n    QUIRKS_MODE_PUBLIC_IDS = [\n        '-//w3o//dtd w3 html strict 3.0//en//',\n        '-/w3c/dtd html 4.0 transitional/en',\n        'html'\n    ],\n    LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = [\n        '-//W3C//DTD XHTML 1.0 Frameset//',\n        '-//W3C//DTD XHTML 1.0 Transitional//'\n    ],\n    LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = LIMITED_QUIRKS_PUBLIC_ID_PREFIXES.concat([\n        '-//W3C//DTD HTML 4.01 Frameset//',\n        '-//W3C//DTD HTML 4.01 Transitional//'\n    ]);\n\n\n//Utils\nfunction enquoteDoctypeId(id) {\n    var quote = id.indexOf('\"') !== -1 ? '\\'' : '\"';\n\n    return quote + id + quote;\n}\n\nfunction hasPrefix(publicId, prefixes) {\n    for (var i = 0; i < prefixes.length; i++) {\n        if (publicId.indexOf(prefixes[i]) === 0)\n            return true;\n    }\n\n    return false;\n}\n\n\n//API\nexports.getDocumentMode = function (name, publicId, systemId) {\n    if (name !== VALID_DOCTYPE_NAME)\n        return DOCUMENT_MODE.QUIRKS;\n\n    if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID)\n        return DOCUMENT_MODE.QUIRKS;\n\n    if (publicId !== null) {\n        publicId = publicId.toLowerCase();\n\n        if (QUIRKS_MODE_PUBLIC_IDS.indexOf(publicId) > -1)\n            return DOCUMENT_MODE.QUIRKS;\n\n        var prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;\n\n        if (hasPrefix(publicId, prefixes))\n            return DOCUMENT_MODE.QUIRKS;\n\n        prefixes = systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;\n\n        if (hasPrefix(publicId, prefixes))\n            return DOCUMENT_MODE.LIMITED_QUIRKS;\n    }\n\n    return DOCUMENT_MODE.NO_QUIRKS;\n};\n\nexports.serializeContent = function (name, publicId, systemId) {\n    var str = '!DOCTYPE ';\n\n    if (name)\n        str += name;\n\n    if (publicId !== null)\n        str += ' PUBLIC ' + enquoteDoctypeId(publicId);\n\n    else if (systemId !== null)\n        str += ' SYSTEM';\n\n    if (systemId !== null)\n        str += ' ' + enquoteDoctypeId(systemId);\n\n    return str;\n};\n\n\n//# sourceURL=webpack:///./node_modules/parse5/lib/common/doctype.js?");

/***/ }),

/***/ "./node_modules/parse5/lib/common/foreign_content.js":
/*!***********************************************************!*\
  !*** ./node_modules/parse5/lib/common/foreign_content.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Tokenizer = __webpack_require__(/*! ../tokenizer */ \"./node_modules/parse5/lib/tokenizer/index.js\"),\n    HTML = __webpack_require__(/*! ./html */ \"./node_modules/parse5/lib/common/html.js\");\n\n//Aliases\nvar $ = HTML.TAG_NAMES,\n    NS = HTML.NAMESPACES,\n    ATTRS = HTML.ATTRS;\n\n\n//MIME types\nvar MIME_TYPES = {\n    TEXT_HTML: 'text/html',\n    APPLICATION_XML: 'application/xhtml+xml'\n};\n\n//Attributes\nvar DEFINITION_URL_ATTR = 'definitionurl',\n    ADJUSTED_DEFINITION_URL_ATTR = 'definitionURL',\n    SVG_ATTRS_ADJUSTMENT_MAP = {\n        'attributename': 'attributeName',\n        'attributetype': 'attributeType',\n        'basefrequency': 'baseFrequency',\n        'baseprofile': 'baseProfile',\n        'calcmode': 'calcMode',\n        'clippathunits': 'clipPathUnits',\n        'diffuseconstant': 'diffuseConstant',\n        'edgemode': 'edgeMode',\n        'filterunits': 'filterUnits',\n        'glyphref': 'glyphRef',\n        'gradienttransform': 'gradientTransform',\n        'gradientunits': 'gradientUnits',\n        'kernelmatrix': 'kernelMatrix',\n        'kernelunitlength': 'kernelUnitLength',\n        'keypoints': 'keyPoints',\n        'keysplines': 'keySplines',\n        'keytimes': 'keyTimes',\n        'lengthadjust': 'lengthAdjust',\n        'limitingconeangle': 'limitingConeAngle',\n        'markerheight': 'markerHeight',\n        'markerunits': 'markerUnits',\n        'markerwidth': 'markerWidth',\n        'maskcontentunits': 'maskContentUnits',\n        'maskunits': 'maskUnits',\n        'numoctaves': 'numOctaves',\n        'pathlength': 'pathLength',\n        'patterncontentunits': 'patternContentUnits',\n        'patterntransform': 'patternTransform',\n        'patternunits': 'patternUnits',\n        'pointsatx': 'pointsAtX',\n        'pointsaty': 'pointsAtY',\n        'pointsatz': 'pointsAtZ',\n        'preservealpha': 'preserveAlpha',\n        'preserveaspectratio': 'preserveAspectRatio',\n        'primitiveunits': 'primitiveUnits',\n        'refx': 'refX',\n        'refy': 'refY',\n        'repeatcount': 'repeatCount',\n        'repeatdur': 'repeatDur',\n        'requiredextensions': 'requiredExtensions',\n        'requiredfeatures': 'requiredFeatures',\n        'specularconstant': 'specularConstant',\n        'specularexponent': 'specularExponent',\n        'spreadmethod': 'spreadMethod',\n        'startoffset': 'startOffset',\n        'stddeviation': 'stdDeviation',\n        'stitchtiles': 'stitchTiles',\n        'surfacescale': 'surfaceScale',\n        'systemlanguage': 'systemLanguage',\n        'tablevalues': 'tableValues',\n        'targetx': 'targetX',\n        'targety': 'targetY',\n        'textlength': 'textLength',\n        'viewbox': 'viewBox',\n        'viewtarget': 'viewTarget',\n        'xchannelselector': 'xChannelSelector',\n        'ychannelselector': 'yChannelSelector',\n        'zoomandpan': 'zoomAndPan'\n    },\n    XML_ATTRS_ADJUSTMENT_MAP = {\n        'xlink:actuate': {prefix: 'xlink', name: 'actuate', namespace: NS.XLINK},\n        'xlink:arcrole': {prefix: 'xlink', name: 'arcrole', namespace: NS.XLINK},\n        'xlink:href': {prefix: 'xlink', name: 'href', namespace: NS.XLINK},\n        'xlink:role': {prefix: 'xlink', name: 'role', namespace: NS.XLINK},\n        'xlink:show': {prefix: 'xlink', name: 'show', namespace: NS.XLINK},\n        'xlink:title': {prefix: 'xlink', name: 'title', namespace: NS.XLINK},\n        'xlink:type': {prefix: 'xlink', name: 'type', namespace: NS.XLINK},\n        'xml:base': {prefix: 'xml', name: 'base', namespace: NS.XML},\n        'xml:lang': {prefix: 'xml', name: 'lang', namespace: NS.XML},\n        'xml:space': {prefix: 'xml', name: 'space', namespace: NS.XML},\n        'xmlns': {prefix: '', name: 'xmlns', namespace: NS.XMLNS},\n        'xmlns:xlink': {prefix: 'xmlns', name: 'xlink', namespace: NS.XMLNS}\n\n    };\n\n//SVG tag names adjustment map\nvar SVG_TAG_NAMES_ADJUSTMENT_MAP = exports.SVG_TAG_NAMES_ADJUSTMENT_MAP = {\n    'altglyph': 'altGlyph',\n    'altglyphdef': 'altGlyphDef',\n    'altglyphitem': 'altGlyphItem',\n    'animatecolor': 'animateColor',\n    'animatemotion': 'animateMotion',\n    'animatetransform': 'animateTransform',\n    'clippath': 'clipPath',\n    'feblend': 'feBlend',\n    'fecolormatrix': 'feColorMatrix',\n    'fecomponenttransfer': 'feComponentTransfer',\n    'fecomposite': 'feComposite',\n    'feconvolvematrix': 'feConvolveMatrix',\n    'fediffuselighting': 'feDiffuseLighting',\n    'fedisplacementmap': 'feDisplacementMap',\n    'fedistantlight': 'feDistantLight',\n    'feflood': 'feFlood',\n    'fefunca': 'feFuncA',\n    'fefuncb': 'feFuncB',\n    'fefuncg': 'feFuncG',\n    'fefuncr': 'feFuncR',\n    'fegaussianblur': 'feGaussianBlur',\n    'feimage': 'feImage',\n    'femerge': 'feMerge',\n    'femergenode': 'feMergeNode',\n    'femorphology': 'feMorphology',\n    'feoffset': 'feOffset',\n    'fepointlight': 'fePointLight',\n    'fespecularlighting': 'feSpecularLighting',\n    'fespotlight': 'feSpotLight',\n    'fetile': 'feTile',\n    'feturbulence': 'feTurbulence',\n    'foreignobject': 'foreignObject',\n    'glyphref': 'glyphRef',\n    'lineargradient': 'linearGradient',\n    'radialgradient': 'radialGradient',\n    'textpath': 'textPath'\n};\n\n//Tags that causes exit from foreign content\nvar EXITS_FOREIGN_CONTENT = Object.create(null);\n\nEXITS_FOREIGN_CONTENT[$.B] = true;\nEXITS_FOREIGN_CONTENT[$.BIG] = true;\nEXITS_FOREIGN_CONTENT[$.BLOCKQUOTE] = true;\nEXITS_FOREIGN_CONTENT[$.BODY] = true;\nEXITS_FOREIGN_CONTENT[$.BR] = true;\nEXITS_FOREIGN_CONTENT[$.CENTER] = true;\nEXITS_FOREIGN_CONTENT[$.CODE] = true;\nEXITS_FOREIGN_CONTENT[$.DD] = true;\nEXITS_FOREIGN_CONTENT[$.DIV] = true;\nEXITS_FOREIGN_CONTENT[$.DL] = true;\nEXITS_FOREIGN_CONTENT[$.DT] = true;\nEXITS_FOREIGN_CONTENT[$.EM] = true;\nEXITS_FOREIGN_CONTENT[$.EMBED] = true;\nEXITS_FOREIGN_CONTENT[$.H1] = true;\nEXITS_FOREIGN_CONTENT[$.H2] = true;\nEXITS_FOREIGN_CONTENT[$.H3] = true;\nEXITS_FOREIGN_CONTENT[$.H4] = true;\nEXITS_FOREIGN_CONTENT[$.H5] = true;\nEXITS_FOREIGN_CONTENT[$.H6] = true;\nEXITS_FOREIGN_CONTENT[$.HEAD] = true;\nEXITS_FOREIGN_CONTENT[$.HR] = true;\nEXITS_FOREIGN_CONTENT[$.I] = true;\nEXITS_FOREIGN_CONTENT[$.IMG] = true;\nEXITS_FOREIGN_CONTENT[$.LI] = true;\nEXITS_FOREIGN_CONTENT[$.LISTING] = true;\nEXITS_FOREIGN_CONTENT[$.MENU] = true;\nEXITS_FOREIGN_CONTENT[$.META] = true;\nEXITS_FOREIGN_CONTENT[$.NOBR] = true;\nEXITS_FOREIGN_CONTENT[$.OL] = true;\nEXITS_FOREIGN_CONTENT[$.P] = true;\nEXITS_FOREIGN_CONTENT[$.PRE] = true;\nEXITS_FOREIGN_CONTENT[$.RUBY] = true;\nEXITS_FOREIGN_CONTENT[$.S] = true;\nEXITS_FOREIGN_CONTENT[$.SMALL] = true;\nEXITS_FOREIGN_CONTENT[$.SPAN] = true;\nEXITS_FOREIGN_CONTENT[$.STRONG] = true;\nEXITS_FOREIGN_CONTENT[$.STRIKE] = true;\nEXITS_FOREIGN_CONTENT[$.SUB] = true;\nEXITS_FOREIGN_CONTENT[$.SUP] = true;\nEXITS_FOREIGN_CONTENT[$.TABLE] = true;\nEXITS_FOREIGN_CONTENT[$.TT] = true;\nEXITS_FOREIGN_CONTENT[$.U] = true;\nEXITS_FOREIGN_CONTENT[$.UL] = true;\nEXITS_FOREIGN_CONTENT[$.VAR] = true;\n\n//Check exit from foreign content\nexports.causesExit = function (startTagToken) {\n    var tn = startTagToken.tagName;\n    var isFontWithAttrs = tn === $.FONT && (Tokenizer.getTokenAttr(startTagToken, ATTRS.COLOR) !== null ||\n                                            Tokenizer.getTokenAttr(startTagToken, ATTRS.SIZE) !== null ||\n                                            Tokenizer.getTokenAttr(startTagToken, ATTRS.FACE) !== null);\n\n    return isFontWithAttrs ? true : EXITS_FOREIGN_CONTENT[tn];\n};\n\n//Token adjustments\nexports.adjustTokenMathMLAttrs = function (token) {\n    for (var i = 0; i < token.attrs.length; i++) {\n        if (token.attrs[i].name === DEFINITION_URL_ATTR) {\n            token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;\n            break;\n        }\n    }\n};\n\nexports.adjustTokenSVGAttrs = function (token) {\n    for (var i = 0; i < token.attrs.length; i++) {\n        var adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP[token.attrs[i].name];\n\n        if (adjustedAttrName)\n            token.attrs[i].name = adjustedAttrName;\n    }\n};\n\nexports.adjustTokenXMLAttrs = function (token) {\n    for (var i = 0; i < token.attrs.length; i++) {\n        var adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP[token.attrs[i].name];\n\n        if (adjustedAttrEntry) {\n            token.attrs[i].prefix = adjustedAttrEntry.prefix;\n            token.attrs[i].name = adjustedAttrEntry.name;\n            token.attrs[i].namespace = adjustedAttrEntry.namespace;\n        }\n    }\n};\n\nexports.adjustTokenSVGTagName = function (token) {\n    var adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP[token.tagName];\n\n    if (adjustedTagName)\n        token.tagName = adjustedTagName;\n};\n\n//Integration points\nfunction isMathMLTextIntegrationPoint(tn, ns) {\n    return ns === NS.MATHML && (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS || tn === $.MTEXT);\n}\n\nfunction isHtmlIntegrationPoint(tn, ns, attrs) {\n    if (ns === NS.MATHML && tn === $.ANNOTATION_XML) {\n        for (var i = 0; i < attrs.length; i++) {\n            if (attrs[i].name === ATTRS.ENCODING) {\n                var value = attrs[i].value.toLowerCase();\n\n                return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;\n            }\n        }\n    }\n\n    return ns === NS.SVG && (tn === $.FOREIGN_OBJECT || tn === $.DESC || tn === $.TITLE);\n}\n\nexports.isIntegrationPoint = function (tn, ns, attrs, foreignNS) {\n    if ((!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs))\n        return true;\n\n    if ((!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns))\n        return true;\n\n    return false;\n};\n\n\n//# sourceURL=webpack:///./node_modules/parse5/lib/common/foreign_content.js?");

/***/ }),

/***/ "./node_modules/parse5/lib/common/html.js":
/*!************************************************!*\
  !*** ./node_modules/parse5/lib/common/html.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar NS = exports.NAMESPACES = {\n    HTML: 'http://www.w3.org/1999/xhtml',\n    MATHML: 'http://www.w3.org/1998/Math/MathML',\n    SVG: 'http://www.w3.org/2000/svg',\n    XLINK: 'http://www.w3.org/1999/xlink',\n    XML: 'http://www.w3.org/XML/1998/namespace',\n    XMLNS: 'http://www.w3.org/2000/xmlns/'\n};\n\nexports.ATTRS = {\n    TYPE: 'type',\n    ACTION: 'action',\n    ENCODING: 'encoding',\n    PROMPT: 'prompt',\n    NAME: 'name',\n    COLOR: 'color',\n    FACE: 'face',\n    SIZE: 'size'\n};\n\nexports.DOCUMENT_MODE = {\n    NO_QUIRKS: 'no-quirks',\n    QUIRKS: 'quirks',\n    LIMITED_QUIRKS: 'limited-quirks'\n};\n\nvar $ = exports.TAG_NAMES = {\n    A: 'a',\n    ADDRESS: 'address',\n    ANNOTATION_XML: 'annotation-xml',\n    APPLET: 'applet',\n    AREA: 'area',\n    ARTICLE: 'article',\n    ASIDE: 'aside',\n\n    B: 'b',\n    BASE: 'base',\n    BASEFONT: 'basefont',\n    BGSOUND: 'bgsound',\n    BIG: 'big',\n    BLOCKQUOTE: 'blockquote',\n    BODY: 'body',\n    BR: 'br',\n    BUTTON: 'button',\n\n    CAPTION: 'caption',\n    CENTER: 'center',\n    CODE: 'code',\n    COL: 'col',\n    COLGROUP: 'colgroup',\n\n    DD: 'dd',\n    DESC: 'desc',\n    DETAILS: 'details',\n    DIALOG: 'dialog',\n    DIR: 'dir',\n    DIV: 'div',\n    DL: 'dl',\n    DT: 'dt',\n\n    EM: 'em',\n    EMBED: 'embed',\n\n    FIELDSET: 'fieldset',\n    FIGCAPTION: 'figcaption',\n    FIGURE: 'figure',\n    FONT: 'font',\n    FOOTER: 'footer',\n    FOREIGN_OBJECT: 'foreignObject',\n    FORM: 'form',\n    FRAME: 'frame',\n    FRAMESET: 'frameset',\n\n    H1: 'h1',\n    H2: 'h2',\n    H3: 'h3',\n    H4: 'h4',\n    H5: 'h5',\n    H6: 'h6',\n    HEAD: 'head',\n    HEADER: 'header',\n    HGROUP: 'hgroup',\n    HR: 'hr',\n    HTML: 'html',\n\n    I: 'i',\n    IMG: 'img',\n    IMAGE: 'image',\n    INPUT: 'input',\n    IFRAME: 'iframe',\n\n    KEYGEN: 'keygen',\n\n    LABEL: 'label',\n    LI: 'li',\n    LINK: 'link',\n    LISTING: 'listing',\n\n    MAIN: 'main',\n    MALIGNMARK: 'malignmark',\n    MARQUEE: 'marquee',\n    MATH: 'math',\n    MENU: 'menu',\n    MENUITEM: 'menuitem',\n    META: 'meta',\n    MGLYPH: 'mglyph',\n    MI: 'mi',\n    MO: 'mo',\n    MN: 'mn',\n    MS: 'ms',\n    MTEXT: 'mtext',\n\n    NAV: 'nav',\n    NOBR: 'nobr',\n    NOFRAMES: 'noframes',\n    NOEMBED: 'noembed',\n    NOSCRIPT: 'noscript',\n\n    OBJECT: 'object',\n    OL: 'ol',\n    OPTGROUP: 'optgroup',\n    OPTION: 'option',\n\n    P: 'p',\n    PARAM: 'param',\n    PLAINTEXT: 'plaintext',\n    PRE: 'pre',\n\n    RB: 'rb',\n    RP: 'rp',\n    RT: 'rt',\n    RTC: 'rtc',\n    RUBY: 'ruby',\n\n    S: 's',\n    SCRIPT: 'script',\n    SECTION: 'section',\n    SELECT: 'select',\n    SOURCE: 'source',\n    SMALL: 'small',\n    SPAN: 'span',\n    STRIKE: 'strike',\n    STRONG: 'strong',\n    STYLE: 'style',\n    SUB: 'sub',\n    SUMMARY: 'summary',\n    SUP: 'sup',\n\n    TABLE: 'table',\n    TBODY: 'tbody',\n    TEMPLATE: 'template',\n    TEXTAREA: 'textarea',\n    TFOOT: 'tfoot',\n    TD: 'td',\n    TH: 'th',\n    THEAD: 'thead',\n    TITLE: 'title',\n    TR: 'tr',\n    TRACK: 'track',\n    TT: 'tt',\n\n    U: 'u',\n    UL: 'ul',\n\n    SVG: 'svg',\n\n    VAR: 'var',\n\n    WBR: 'wbr',\n\n    XMP: 'xmp'\n};\n\nvar SPECIAL_ELEMENTS = exports.SPECIAL_ELEMENTS = Object.create(null);\n\nSPECIAL_ELEMENTS[NS.HTML] = Object.create(null);\nSPECIAL_ELEMENTS[NS.HTML][$.ADDRESS] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.APPLET] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.AREA] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.ARTICLE] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.ASIDE] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.BASE] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.BASEFONT] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.BGSOUND] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.BLOCKQUOTE] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.BODY] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.BR] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.BUTTON] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.CAPTION] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.CENTER] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.COL] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.COLGROUP] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.DD] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.DETAILS] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.DIR] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.DIV] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.DL] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.DT] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.EMBED] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.FIELDSET] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.FIGCAPTION] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.FIGURE] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.FOOTER] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.FORM] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.FRAME] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.FRAMESET] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.H1] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.H2] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.H3] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.H4] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.H5] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.H6] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.HEAD] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.HEADER] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.HGROUP] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.HR] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.HTML] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.IFRAME] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.IMG] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.INPUT] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.LI] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.LINK] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.LISTING] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.MAIN] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.MARQUEE] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.MENU] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.META] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.NAV] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.NOEMBED] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.NOFRAMES] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.NOSCRIPT] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.OBJECT] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.OL] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.P] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.PARAM] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.PLAINTEXT] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.PRE] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.SCRIPT] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.SECTION] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.SELECT] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.SOURCE] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.STYLE] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.SUMMARY] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.TABLE] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.TBODY] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.TD] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.TEMPLATE] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.TEXTAREA] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.TFOOT] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.TH] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.THEAD] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.TITLE] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.TR] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.TRACK] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.UL] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.WBR] = true;\nSPECIAL_ELEMENTS[NS.HTML][$.XMP] = true;\n\nSPECIAL_ELEMENTS[NS.MATHML] = Object.create(null);\nSPECIAL_ELEMENTS[NS.MATHML][$.MI] = true;\nSPECIAL_ELEMENTS[NS.MATHML][$.MO] = true;\nSPECIAL_ELEMENTS[NS.MATHML][$.MN] = true;\nSPECIAL_ELEMENTS[NS.MATHML][$.MS] = true;\nSPECIAL_ELEMENTS[NS.MATHML][$.MTEXT] = true;\nSPECIAL_ELEMENTS[NS.MATHML][$.ANNOTATION_XML] = true;\n\nSPECIAL_ELEMENTS[NS.SVG] = Object.create(null);\nSPECIAL_ELEMENTS[NS.SVG][$.TITLE] = true;\nSPECIAL_ELEMENTS[NS.SVG][$.FOREIGN_OBJECT] = true;\nSPECIAL_ELEMENTS[NS.SVG][$.DESC] = true;\n\n\n//# sourceURL=webpack:///./node_modules/parse5/lib/common/html.js?");

/***/ }),

/***/ "./node_modules/parse5/lib/common/unicode.js":
/*!***************************************************!*\
  !*** ./node_modules/parse5/lib/common/unicode.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.REPLACEMENT_CHARACTER = '\\uFFFD';\n\nexports.CODE_POINTS = {\n    EOF: -1,\n    NULL: 0x00,\n    TABULATION: 0x09,\n    CARRIAGE_RETURN: 0x0D,\n    LINE_FEED: 0x0A,\n    FORM_FEED: 0x0C,\n    SPACE: 0x20,\n    EXCLAMATION_MARK: 0x21,\n    QUOTATION_MARK: 0x22,\n    NUMBER_SIGN: 0x23,\n    AMPERSAND: 0x26,\n    APOSTROPHE: 0x27,\n    HYPHEN_MINUS: 0x2D,\n    SOLIDUS: 0x2F,\n    DIGIT_0: 0x30,\n    DIGIT_9: 0x39,\n    SEMICOLON: 0x3B,\n    LESS_THAN_SIGN: 0x3C,\n    EQUALS_SIGN: 0x3D,\n    GREATER_THAN_SIGN: 0x3E,\n    QUESTION_MARK: 0x3F,\n    LATIN_CAPITAL_A: 0x41,\n    LATIN_CAPITAL_F: 0x46,\n    LATIN_CAPITAL_X: 0x58,\n    LATIN_CAPITAL_Z: 0x5A,\n    GRAVE_ACCENT: 0x60,\n    LATIN_SMALL_A: 0x61,\n    LATIN_SMALL_F: 0x66,\n    LATIN_SMALL_X: 0x78,\n    LATIN_SMALL_Z: 0x7A,\n    REPLACEMENT_CHARACTER: 0xFFFD\n};\n\nexports.CODE_POINT_SEQUENCES = {\n    DASH_DASH_STRING: [0x2D, 0x2D], //--\n    DOCTYPE_STRING: [0x44, 0x4F, 0x43, 0x54, 0x59, 0x50, 0x45], //DOCTYPE\n    CDATA_START_STRING: [0x5B, 0x43, 0x44, 0x41, 0x54, 0x41, 0x5B], //[CDATA[\n    CDATA_END_STRING: [0x5D, 0x5D, 0x3E], //]]>\n    SCRIPT_STRING: [0x73, 0x63, 0x72, 0x69, 0x70, 0x74], //script\n    PUBLIC_STRING: [0x50, 0x55, 0x42, 0x4C, 0x49, 0x43], //PUBLIC\n    SYSTEM_STRING: [0x53, 0x59, 0x53, 0x54, 0x45, 0x4D] //SYSTEM\n};\n\n\n//# sourceURL=webpack:///./node_modules/parse5/lib/common/unicode.js?");

/***/ }),

/***/ "./node_modules/parse5/lib/extensions/location_info/open_element_stack_mixin.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/parse5/lib/extensions/location_info/open_element_stack_mixin.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Mixin = __webpack_require__(/*! ../../utils/mixin */ \"./node_modules/parse5/lib/utils/mixin.js\"),\n    inherits = __webpack_require__(/*! util */ \"./node_modules/util/util.js\").inherits;\n\nvar LocationInfoOpenElementStackMixin = module.exports = function (stack, options) {\n    Mixin.call(this, stack);\n\n    this.onItemPop = options.onItemPop;\n};\n\ninherits(LocationInfoOpenElementStackMixin, Mixin);\n\nLocationInfoOpenElementStackMixin.prototype._getOverriddenMethods = function (mxn, orig) {\n    return {\n        pop: function () {\n            mxn.onItemPop(this.current);\n            orig.pop.call(this);\n        },\n\n        popAllUpToHtmlElement: function () {\n            for (var i = this.stackTop; i > 0; i--)\n                mxn.onItemPop(this.items[i]);\n\n            orig.popAllUpToHtmlElement.call(this);\n        },\n\n        remove: function (element) {\n            mxn.onItemPop(this.current);\n            orig.remove.call(this, element);\n        }\n    };\n};\n\n\n\n//# sourceURL=webpack:///./node_modules/parse5/lib/extensions/location_info/open_element_stack_mixin.js?");

/***/ }),

/***/ "./node_modules/parse5/lib/extensions/location_info/parser_mixin.js":
/*!**************************************************************************!*\
  !*** ./node_modules/parse5/lib/extensions/location_info/parser_mixin.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Mixin = __webpack_require__(/*! ../../utils/mixin */ \"./node_modules/parse5/lib/utils/mixin.js\"),\n    Tokenizer = __webpack_require__(/*! ../../tokenizer */ \"./node_modules/parse5/lib/tokenizer/index.js\"),\n    LocationInfoTokenizerMixin = __webpack_require__(/*! ./tokenizer_mixin */ \"./node_modules/parse5/lib/extensions/location_info/tokenizer_mixin.js\"),\n    PositionTrackingPreprocessorMixin = __webpack_require__(/*! ../position_tracking/preprocessor_mixin */ \"./node_modules/parse5/lib/extensions/position_tracking/preprocessor_mixin.js\"),\n    LocationInfoOpenElementStackMixin = __webpack_require__(/*! ./open_element_stack_mixin */ \"./node_modules/parse5/lib/extensions/location_info/open_element_stack_mixin.js\"),\n    HTML = __webpack_require__(/*! ../../common/html */ \"./node_modules/parse5/lib/common/html.js\"),\n    inherits = __webpack_require__(/*! util */ \"./node_modules/util/util.js\").inherits;\n\n\n//Aliases\nvar $ = HTML.TAG_NAMES;\n\nvar LocationInfoParserMixin = module.exports = function (parser) {\n    Mixin.call(this, parser);\n\n    this.parser = parser;\n    this.posTracker = null;\n    this.lastStartTagToken = null;\n    this.lastFosterParentingLocation = null;\n    this.currentToken = null;\n};\n\ninherits(LocationInfoParserMixin, Mixin);\n\n\nLocationInfoParserMixin.prototype._setStartLocation = function (element) {\n    if (this.lastStartTagToken) {\n        element.__location = Object.create(this.lastStartTagToken.location);\n        element.__location.startTag = this.lastStartTagToken.location;\n    }\n    else\n        element.__location = null;\n};\n\nLocationInfoParserMixin.prototype._setEndLocation = function (element, closingToken) {\n    var loc = element.__location;\n\n    if (loc) {\n        if (closingToken.location) {\n            var ctLoc = closingToken.location,\n                tn = this.parser.treeAdapter.getTagName(element);\n\n            // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n            // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n            var isClosingEndTag = closingToken.type === Tokenizer.END_TAG_TOKEN && tn === closingToken.tagName;\n\n            if (isClosingEndTag) {\n                loc.endTag = Object.create(ctLoc);\n                loc.endOffset = ctLoc.endOffset;\n            }\n\n            else\n                loc.endOffset = ctLoc.startOffset;\n        }\n\n        else if (closingToken.type === Tokenizer.EOF_TOKEN)\n            loc.endOffset = this.posTracker.offset;\n    }\n};\n\nLocationInfoParserMixin.prototype._getOverriddenMethods = function (mxn, orig) {\n    return {\n        _bootstrap: function (document, fragmentContext) {\n            orig._bootstrap.call(this, document, fragmentContext);\n\n            mxn.lastStartTagToken = null;\n            mxn.lastFosterParentingLocation = null;\n            mxn.currentToken = null;\n            mxn.posTracker = new PositionTrackingPreprocessorMixin(this.tokenizer.preprocessor);\n\n            new LocationInfoTokenizerMixin(this.tokenizer);\n\n            new LocationInfoOpenElementStackMixin(this.openElements, {\n                onItemPop: function (element) {\n                    mxn._setEndLocation(element, mxn.currentToken);\n                }\n            });\n        },\n\n        _runParsingLoop: function (scriptHandler) {\n            orig._runParsingLoop.call(this, scriptHandler);\n\n            // NOTE: generate location info for elements\n            // that remains on open element stack\n            for (var i = this.openElements.stackTop; i >= 0; i--)\n                mxn._setEndLocation(this.openElements.items[i], mxn.currentToken);\n        },\n\n\n        //Token processing\n        _processTokenInForeignContent: function (token) {\n            mxn.currentToken = token;\n            orig._processTokenInForeignContent.call(this, token);\n        },\n\n        _processToken: function (token) {\n            mxn.currentToken = token;\n            orig._processToken.call(this, token);\n\n            //NOTE: <body> and <html> are never popped from the stack, so we need to updated\n            //their end location explicitly.\n            var requireExplicitUpdate = token.type === Tokenizer.END_TAG_TOKEN &&\n                                        (token.tagName === $.HTML ||\n                                         token.tagName === $.BODY && this.openElements.hasInScope($.BODY));\n\n            if (requireExplicitUpdate) {\n                for (var i = this.openElements.stackTop; i >= 0; i--) {\n                    var element = this.openElements.items[i];\n\n                    if (this.treeAdapter.getTagName(element) === token.tagName) {\n                        mxn._setEndLocation(element, token);\n                        break;\n                    }\n                }\n            }\n        },\n\n\n        //Doctype\n        _setDocumentType: function (token) {\n            orig._setDocumentType.call(this, token);\n\n            var documentChildren = this.treeAdapter.getChildNodes(this.document),\n                cnLength = documentChildren.length;\n\n            for (var i = 0; i < cnLength; i++) {\n                var node = documentChildren[i];\n\n                if (this.treeAdapter.isDocumentTypeNode(node)) {\n                    node.__location = token.location;\n                    break;\n                }\n            }\n        },\n\n\n        //Elements\n        _attachElementToTree: function (element) {\n            //NOTE: _attachElementToTree is called from _appendElement, _insertElement and _insertTemplate methods.\n            //So we will use token location stored in this methods for the element.\n            mxn._setStartLocation(element);\n            mxn.lastStartTagToken = null;\n            orig._attachElementToTree.call(this, element);\n        },\n\n        _appendElement: function (token, namespaceURI) {\n            mxn.lastStartTagToken = token;\n            orig._appendElement.call(this, token, namespaceURI);\n        },\n\n        _insertElement: function (token, namespaceURI) {\n            mxn.lastStartTagToken = token;\n            orig._insertElement.call(this, token, namespaceURI);\n        },\n\n        _insertTemplate: function (token) {\n            mxn.lastStartTagToken = token;\n            orig._insertTemplate.call(this, token);\n\n            var tmplContent = this.treeAdapter.getTemplateContent(this.openElements.current);\n\n            tmplContent.__location = null;\n        },\n\n        _insertFakeRootElement: function () {\n            orig._insertFakeRootElement.call(this);\n            this.openElements.current.__location = null;\n        },\n\n        //Comments\n        _appendCommentNode: function (token, parent) {\n            orig._appendCommentNode.call(this, token, parent);\n\n            var children = this.treeAdapter.getChildNodes(parent),\n                commentNode = children[children.length - 1];\n\n            commentNode.__location = token.location;\n        },\n\n        //Text\n        _findFosterParentingLocation: function () {\n            //NOTE: store last foster parenting location, so we will be able to find inserted text\n            //in case of foster parenting\n            mxn.lastFosterParentingLocation = orig._findFosterParentingLocation.call(this);\n\n            return mxn.lastFosterParentingLocation;\n        },\n\n        _insertCharacters: function (token) {\n            orig._insertCharacters.call(this, token);\n\n            var hasFosterParent = this._shouldFosterParentOnInsertion(),\n                parent = hasFosterParent && mxn.lastFosterParentingLocation.parent ||\n                         this.openElements.currentTmplContent ||\n                         this.openElements.current,\n                siblings = this.treeAdapter.getChildNodes(parent),\n                textNodeIdx = hasFosterParent && mxn.lastFosterParentingLocation.beforeElement ?\n                siblings.indexOf(mxn.lastFosterParentingLocation.beforeElement) - 1 :\n                siblings.length - 1,\n                textNode = siblings[textNodeIdx];\n\n            //NOTE: if we have location assigned by another token, then just update end position\n            if (textNode.__location)\n                textNode.__location.endOffset = token.location.endOffset;\n\n            else\n                textNode.__location = token.location;\n        }\n    };\n};\n\n\n\n//# sourceURL=webpack:///./node_modules/parse5/lib/extensions/location_info/parser_mixin.js?");

/***/ }),

/***/ "./node_modules/parse5/lib/extensions/location_info/tokenizer_mixin.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/parse5/lib/extensions/location_info/tokenizer_mixin.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Mixin = __webpack_require__(/*! ../../utils/mixin */ \"./node_modules/parse5/lib/utils/mixin.js\"),\n    Tokenizer = __webpack_require__(/*! ../../tokenizer */ \"./node_modules/parse5/lib/tokenizer/index.js\"),\n    PositionTrackingPreprocessorMixin = __webpack_require__(/*! ../position_tracking/preprocessor_mixin */ \"./node_modules/parse5/lib/extensions/position_tracking/preprocessor_mixin.js\"),\n    inherits = __webpack_require__(/*! util */ \"./node_modules/util/util.js\").inherits;\n\nvar LocationInfoTokenizerMixin = module.exports = function (tokenizer) {\n    Mixin.call(this, tokenizer);\n\n    this.tokenizer = tokenizer;\n    this.posTracker = new PositionTrackingPreprocessorMixin(tokenizer.preprocessor);\n    this.currentAttrLocation = null;\n    this.currentTokenLocation = null;\n};\n\ninherits(LocationInfoTokenizerMixin, Mixin);\n\nLocationInfoTokenizerMixin.prototype._getCurrentLocation = function () {\n    return {\n        line: this.posTracker.line,\n        col: this.posTracker.col,\n        startOffset: this.posTracker.offset,\n        endOffset: -1\n    };\n};\n\nLocationInfoTokenizerMixin.prototype._attachCurrentAttrLocationInfo = function () {\n    this.currentAttrLocation.endOffset = this.posTracker.offset;\n\n    var currentToken = this.tokenizer.currentToken,\n        currentAttr = this.tokenizer.currentAttr;\n\n    if (!currentToken.location.attrs)\n        currentToken.location.attrs = Object.create(null);\n\n    currentToken.location.attrs[currentAttr.name] = this.currentAttrLocation;\n};\n\nLocationInfoTokenizerMixin.prototype._getOverriddenMethods = function (mxn, orig) {\n    var methods = {\n        _createStartTagToken: function () {\n            orig._createStartTagToken.call(this);\n            this.currentToken.location = mxn.currentTokenLocation;\n        },\n\n        _createEndTagToken: function () {\n            orig._createEndTagToken.call(this);\n            this.currentToken.location = mxn.currentTokenLocation;\n        },\n\n        _createCommentToken: function () {\n            orig._createCommentToken.call(this);\n            this.currentToken.location = mxn.currentTokenLocation;\n        },\n\n        _createDoctypeToken: function (initialName) {\n            orig._createDoctypeToken.call(this, initialName);\n            this.currentToken.location = mxn.currentTokenLocation;\n        },\n\n        _createCharacterToken: function (type, ch) {\n            orig._createCharacterToken.call(this, type, ch);\n            this.currentCharacterToken.location = mxn.currentTokenLocation;\n        },\n\n        _createAttr: function (attrNameFirstCh) {\n            orig._createAttr.call(this, attrNameFirstCh);\n            mxn.currentAttrLocation = mxn._getCurrentLocation();\n        },\n\n        _leaveAttrName: function (toState) {\n            orig._leaveAttrName.call(this, toState);\n            mxn._attachCurrentAttrLocationInfo();\n        },\n\n        _leaveAttrValue: function (toState) {\n            orig._leaveAttrValue.call(this, toState);\n            mxn._attachCurrentAttrLocationInfo();\n        },\n\n        _emitCurrentToken: function () {\n            //NOTE: if we have pending character token make it's end location equal to the\n            //current token's start location.\n            if (this.currentCharacterToken)\n                this.currentCharacterToken.location.endOffset = this.currentToken.location.startOffset;\n\n            this.currentToken.location.endOffset = mxn.posTracker.offset + 1;\n            orig._emitCurrentToken.call(this);\n        },\n\n        _emitCurrentCharacterToken: function () {\n            //NOTE: if we have character token and it's location wasn't set in the _emitCurrentToken(),\n            //then set it's location at the current preprocessor position.\n            //We don't need to increment preprocessor position, since character token\n            //emission is always forced by the start of the next character token here.\n            //So, we already have advanced position.\n            if (this.currentCharacterToken && this.currentCharacterToken.location.endOffset === -1)\n                this.currentCharacterToken.location.endOffset = mxn.posTracker.offset;\n\n            orig._emitCurrentCharacterToken.call(this);\n        }\n    };\n\n    //NOTE: patch initial states for each mode to obtain token start position\n    Object.keys(Tokenizer.MODE).forEach(function (modeName) {\n        var state = Tokenizer.MODE[modeName];\n\n        methods[state] = function (cp) {\n            mxn.currentTokenLocation = mxn._getCurrentLocation();\n            orig[state].call(this, cp);\n        };\n    });\n\n    return methods;\n};\n\n\n\n//# sourceURL=webpack:///./node_modules/parse5/lib/extensions/location_info/tokenizer_mixin.js?");

/***/ }),

/***/ "./node_modules/parse5/lib/extensions/position_tracking/preprocessor_mixin.js":
/*!************************************************************************************!*\
  !*** ./node_modules/parse5/lib/extensions/position_tracking/preprocessor_mixin.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Mixin = __webpack_require__(/*! ../../utils/mixin */ \"./node_modules/parse5/lib/utils/mixin.js\"),\n    inherits = __webpack_require__(/*! util */ \"./node_modules/util/util.js\").inherits,\n    UNICODE = __webpack_require__(/*! ../../common/unicode */ \"./node_modules/parse5/lib/common/unicode.js\");\n\n//Aliases\nvar $ = UNICODE.CODE_POINTS;\n\nvar PositionTrackingPreprocessorMixin = module.exports = function (preprocessor) {\n    // NOTE: avoid installing tracker twice\n    if (!preprocessor.__locTracker) {\n        preprocessor.__locTracker = this;\n\n        Mixin.call(this, preprocessor);\n\n        this.preprocessor = preprocessor;\n        this.isEol = false;\n        this.lineStartPos = 0;\n        this.droppedBufferSize = 0;\n\n        this.col = -1;\n        this.line = 1;\n    }\n\n    return preprocessor.__locTracker;\n};\n\ninherits(PositionTrackingPreprocessorMixin, Mixin);\n\nObject.defineProperty(PositionTrackingPreprocessorMixin.prototype, 'offset', {\n    get: function () {\n        return this.droppedBufferSize + this.preprocessor.pos;\n    }\n});\n\nPositionTrackingPreprocessorMixin.prototype._getOverriddenMethods = function (mxn, orig) {\n    return {\n        advance: function () {\n            var cp = orig.advance.call(this);\n\n            //NOTE: LF should be in the last column of the line\n            if (mxn.isEol) {\n                mxn.isEol = false;\n                mxn.line++;\n                mxn.lineStartPos = mxn.offset;\n            }\n\n            if (cp === $.LINE_FEED)\n                mxn.isEol = true;\n\n            mxn.col = mxn.offset - mxn.lineStartPos + 1;\n\n            return cp;\n        },\n\n        retreat: function () {\n            orig.retreat.call(this);\n            mxn.isEol = false;\n\n            mxn.col = mxn.offset - mxn.lineStartPos + 1;\n        },\n\n        dropParsedChunk: function () {\n            var prevPos = this.pos;\n\n            orig.dropParsedChunk.call(this);\n\n            mxn.droppedBufferSize += prevPos - this.pos;\n        }\n    };\n};\n\n\n//# sourceURL=webpack:///./node_modules/parse5/lib/extensions/position_tracking/preprocessor_mixin.js?");

/***/ }),

/***/ "./node_modules/parse5/lib/index.js":
/*!******************************************!*\
  !*** ./node_modules/parse5/lib/index.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Parser = __webpack_require__(/*! ./parser */ \"./node_modules/parse5/lib/parser/index.js\"),\n    Serializer = __webpack_require__(/*! ./serializer */ \"./node_modules/parse5/lib/serializer/index.js\");\n\n\n// Shorthands\nexports.parse = function parse(html, options) {\n    var parser = new Parser(options);\n\n    return parser.parse(html);\n};\n\nexports.parseFragment = function parseFragment(fragmentContext, html, options) {\n    if (typeof fragmentContext === 'string') {\n        options = html;\n        html = fragmentContext;\n        fragmentContext = null;\n    }\n\n    var parser = new Parser(options);\n\n    return parser.parseFragment(html, fragmentContext);\n};\n\nexports.serialize = function (node, options) {\n    var serializer = new Serializer(node, options);\n\n    return serializer.serialize();\n};\n\n\n// Tree adapters\nexports.treeAdapters = {\n    default: __webpack_require__(/*! ./tree_adapters/default */ \"./node_modules/parse5/lib/tree_adapters/default.js\"),\n    htmlparser2: __webpack_require__(/*! ./tree_adapters/htmlparser2 */ \"./node_modules/parse5/lib/tree_adapters/htmlparser2.js\")\n};\n\n\n// Streaming\nexports.ParserStream = __webpack_require__(/*! ./parser/parser_stream */ \"./node_modules/parse5/lib/parser/parser_stream.js\");\nexports.PlainTextConversionStream = __webpack_require__(/*! ./parser/plain_text_conversion_stream */ \"./node_modules/parse5/lib/parser/plain_text_conversion_stream.js\");\nexports.SerializerStream = __webpack_require__(/*! ./serializer/serializer_stream */ \"./node_modules/parse5/lib/serializer/serializer_stream.js\");\nexports.SAXParser = __webpack_require__(/*! ./sax */ \"./node_modules/parse5/lib/sax/index.js\");\n\n\n//# sourceURL=webpack:///./node_modules/parse5/lib/index.js?");

/***/ }),

/***/ "./node_modules/parse5/lib/parser/formatting_element_list.js":
/*!*******************************************************************!*\
  !*** ./node_modules/parse5/lib/parser/formatting_element_list.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n//Const\nvar NOAH_ARK_CAPACITY = 3;\n\n//List of formatting elements\nvar FormattingElementList = module.exports = function (treeAdapter) {\n    this.length = 0;\n    this.entries = [];\n    this.treeAdapter = treeAdapter;\n    this.bookmark = null;\n};\n\n//Entry types\nFormattingElementList.MARKER_ENTRY = 'MARKER_ENTRY';\nFormattingElementList.ELEMENT_ENTRY = 'ELEMENT_ENTRY';\n\n//Noah Ark's condition\n//OPTIMIZATION: at first we try to find possible candidates for exclusion using\n//lightweight heuristics without thorough attributes check.\nFormattingElementList.prototype._getNoahArkConditionCandidates = function (newElement) {\n    var candidates = [];\n\n    if (this.length >= NOAH_ARK_CAPACITY) {\n        var neAttrsLength = this.treeAdapter.getAttrList(newElement).length,\n            neTagName = this.treeAdapter.getTagName(newElement),\n            neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);\n\n        for (var i = this.length - 1; i >= 0; i--) {\n            var entry = this.entries[i];\n\n            if (entry.type === FormattingElementList.MARKER_ENTRY)\n                break;\n\n            var element = entry.element,\n                elementAttrs = this.treeAdapter.getAttrList(element),\n                isCandidate = this.treeAdapter.getTagName(element) === neTagName &&\n                              this.treeAdapter.getNamespaceURI(element) === neNamespaceURI &&\n                              elementAttrs.length === neAttrsLength;\n\n            if (isCandidate)\n                candidates.push({idx: i, attrs: elementAttrs});\n        }\n    }\n\n    return candidates.length < NOAH_ARK_CAPACITY ? [] : candidates;\n};\n\nFormattingElementList.prototype._ensureNoahArkCondition = function (newElement) {\n    var candidates = this._getNoahArkConditionCandidates(newElement),\n        cLength = candidates.length;\n\n    if (cLength) {\n        var neAttrs = this.treeAdapter.getAttrList(newElement),\n            neAttrsLength = neAttrs.length,\n            neAttrsMap = Object.create(null);\n\n        //NOTE: build attrs map for the new element so we can perform fast lookups\n        for (var i = 0; i < neAttrsLength; i++) {\n            var neAttr = neAttrs[i];\n\n            neAttrsMap[neAttr.name] = neAttr.value;\n        }\n\n        for (i = 0; i < neAttrsLength; i++) {\n            for (var j = 0; j < cLength; j++) {\n                var cAttr = candidates[j].attrs[i];\n\n                if (neAttrsMap[cAttr.name] !== cAttr.value) {\n                    candidates.splice(j, 1);\n                    cLength--;\n                }\n\n                if (candidates.length < NOAH_ARK_CAPACITY)\n                    return;\n            }\n        }\n\n        //NOTE: remove bottommost candidates until Noah's Ark condition will not be met\n        for (i = cLength - 1; i >= NOAH_ARK_CAPACITY - 1; i--) {\n            this.entries.splice(candidates[i].idx, 1);\n            this.length--;\n        }\n    }\n};\n\n//Mutations\nFormattingElementList.prototype.insertMarker = function () {\n    this.entries.push({type: FormattingElementList.MARKER_ENTRY});\n    this.length++;\n};\n\nFormattingElementList.prototype.pushElement = function (element, token) {\n    this._ensureNoahArkCondition(element);\n\n    this.entries.push({\n        type: FormattingElementList.ELEMENT_ENTRY,\n        element: element,\n        token: token\n    });\n\n    this.length++;\n};\n\nFormattingElementList.prototype.insertElementAfterBookmark = function (element, token) {\n    var bookmarkIdx = this.length - 1;\n\n    for (; bookmarkIdx >= 0; bookmarkIdx--) {\n        if (this.entries[bookmarkIdx] === this.bookmark)\n            break;\n    }\n\n    this.entries.splice(bookmarkIdx + 1, 0, {\n        type: FormattingElementList.ELEMENT_ENTRY,\n        element: element,\n        token: token\n    });\n\n    this.length++;\n};\n\nFormattingElementList.prototype.removeEntry = function (entry) {\n    for (var i = this.length - 1; i >= 0; i--) {\n        if (this.entries[i] === entry) {\n            this.entries.splice(i, 1);\n            this.length--;\n            break;\n        }\n    }\n};\n\nFormattingElementList.prototype.clearToLastMarker = function () {\n    while (this.length) {\n        var entry = this.entries.pop();\n\n        this.length--;\n\n        if (entry.type === FormattingElementList.MARKER_ENTRY)\n            break;\n    }\n};\n\n//Search\nFormattingElementList.prototype.getElementEntryInScopeWithTagName = function (tagName) {\n    for (var i = this.length - 1; i >= 0; i--) {\n        var entry = this.entries[i];\n\n        if (entry.type === FormattingElementList.MARKER_ENTRY)\n            return null;\n\n        if (this.treeAdapter.getTagName(entry.element) === tagName)\n            return entry;\n    }\n\n    return null;\n};\n\nFormattingElementList.prototype.getElementEntry = function (element) {\n    for (var i = this.length - 1; i >= 0; i--) {\n        var entry = this.entries[i];\n\n        if (entry.type === FormattingElementList.ELEMENT_ENTRY && entry.element === element)\n            return entry;\n    }\n\n    return null;\n};\n\n\n//# sourceURL=webpack:///./node_modules/parse5/lib/parser/formatting_element_list.js?");

/***/ }),

/***/ "./node_modules/parse5/lib/parser/index.js":
/*!*************************************************!*\
  !*** ./node_modules/parse5/lib/parser/index.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Tokenizer = __webpack_require__(/*! ../tokenizer */ \"./node_modules/parse5/lib/tokenizer/index.js\"),\n    OpenElementStack = __webpack_require__(/*! ./open_element_stack */ \"./node_modules/parse5/lib/parser/open_element_stack.js\"),\n    FormattingElementList = __webpack_require__(/*! ./formatting_element_list */ \"./node_modules/parse5/lib/parser/formatting_element_list.js\"),\n    LocationInfoParserMixin = __webpack_require__(/*! ../extensions/location_info/parser_mixin */ \"./node_modules/parse5/lib/extensions/location_info/parser_mixin.js\"),\n    defaultTreeAdapter = __webpack_require__(/*! ../tree_adapters/default */ \"./node_modules/parse5/lib/tree_adapters/default.js\"),\n    mergeOptions = __webpack_require__(/*! ../utils/merge_options */ \"./node_modules/parse5/lib/utils/merge_options.js\"),\n    doctype = __webpack_require__(/*! ../common/doctype */ \"./node_modules/parse5/lib/common/doctype.js\"),\n    foreignContent = __webpack_require__(/*! ../common/foreign_content */ \"./node_modules/parse5/lib/common/foreign_content.js\"),\n    UNICODE = __webpack_require__(/*! ../common/unicode */ \"./node_modules/parse5/lib/common/unicode.js\"),\n    HTML = __webpack_require__(/*! ../common/html */ \"./node_modules/parse5/lib/common/html.js\");\n\n//Aliases\nvar $ = HTML.TAG_NAMES,\n    NS = HTML.NAMESPACES,\n    ATTRS = HTML.ATTRS;\n\nvar DEFAULT_OPTIONS = {\n    locationInfo: false,\n    treeAdapter: defaultTreeAdapter\n};\n\n//Misc constants\nvar HIDDEN_INPUT_TYPE = 'hidden';\n\n//Adoption agency loops iteration count\nvar AA_OUTER_LOOP_ITER = 8,\n    AA_INNER_LOOP_ITER = 3;\n\n//Insertion modes\nvar INITIAL_MODE = 'INITIAL_MODE',\n    BEFORE_HTML_MODE = 'BEFORE_HTML_MODE',\n    BEFORE_HEAD_MODE = 'BEFORE_HEAD_MODE',\n    IN_HEAD_MODE = 'IN_HEAD_MODE',\n    AFTER_HEAD_MODE = 'AFTER_HEAD_MODE',\n    IN_BODY_MODE = 'IN_BODY_MODE',\n    TEXT_MODE = 'TEXT_MODE',\n    IN_TABLE_MODE = 'IN_TABLE_MODE',\n    IN_TABLE_TEXT_MODE = 'IN_TABLE_TEXT_MODE',\n    IN_CAPTION_MODE = 'IN_CAPTION_MODE',\n    IN_COLUMN_GROUP_MODE = 'IN_COLUMN_GROUP_MODE',\n    IN_TABLE_BODY_MODE = 'IN_TABLE_BODY_MODE',\n    IN_ROW_MODE = 'IN_ROW_MODE',\n    IN_CELL_MODE = 'IN_CELL_MODE',\n    IN_SELECT_MODE = 'IN_SELECT_MODE',\n    IN_SELECT_IN_TABLE_MODE = 'IN_SELECT_IN_TABLE_MODE',\n    IN_TEMPLATE_MODE = 'IN_TEMPLATE_MODE',\n    AFTER_BODY_MODE = 'AFTER_BODY_MODE',\n    IN_FRAMESET_MODE = 'IN_FRAMESET_MODE',\n    AFTER_FRAMESET_MODE = 'AFTER_FRAMESET_MODE',\n    AFTER_AFTER_BODY_MODE = 'AFTER_AFTER_BODY_MODE',\n    AFTER_AFTER_FRAMESET_MODE = 'AFTER_AFTER_FRAMESET_MODE';\n\n//Insertion mode reset map\nvar INSERTION_MODE_RESET_MAP = Object.create(null);\n\nINSERTION_MODE_RESET_MAP[$.TR] = IN_ROW_MODE;\nINSERTION_MODE_RESET_MAP[$.TBODY] =\nINSERTION_MODE_RESET_MAP[$.THEAD] =\nINSERTION_MODE_RESET_MAP[$.TFOOT] = IN_TABLE_BODY_MODE;\nINSERTION_MODE_RESET_MAP[$.CAPTION] = IN_CAPTION_MODE;\nINSERTION_MODE_RESET_MAP[$.COLGROUP] = IN_COLUMN_GROUP_MODE;\nINSERTION_MODE_RESET_MAP[$.TABLE] = IN_TABLE_MODE;\nINSERTION_MODE_RESET_MAP[$.BODY] = IN_BODY_MODE;\nINSERTION_MODE_RESET_MAP[$.FRAMESET] = IN_FRAMESET_MODE;\n\n//Template insertion mode switch map\nvar TEMPLATE_INSERTION_MODE_SWITCH_MAP = Object.create(null);\n\nTEMPLATE_INSERTION_MODE_SWITCH_MAP[$.CAPTION] =\nTEMPLATE_INSERTION_MODE_SWITCH_MAP[$.COLGROUP] =\nTEMPLATE_INSERTION_MODE_SWITCH_MAP[$.TBODY] =\nTEMPLATE_INSERTION_MODE_SWITCH_MAP[$.TFOOT] =\nTEMPLATE_INSERTION_MODE_SWITCH_MAP[$.THEAD] = IN_TABLE_MODE;\nTEMPLATE_INSERTION_MODE_SWITCH_MAP[$.COL] = IN_COLUMN_GROUP_MODE;\nTEMPLATE_INSERTION_MODE_SWITCH_MAP[$.TR] = IN_TABLE_BODY_MODE;\nTEMPLATE_INSERTION_MODE_SWITCH_MAP[$.TD] =\nTEMPLATE_INSERTION_MODE_SWITCH_MAP[$.TH] = IN_ROW_MODE;\n\n//Token handlers map for insertion modes\nvar _ = Object.create(null);\n\n_[INITIAL_MODE] = Object.create(null);\n_[INITIAL_MODE][Tokenizer.CHARACTER_TOKEN] =\n_[INITIAL_MODE][Tokenizer.NULL_CHARACTER_TOKEN] = tokenInInitialMode;\n_[INITIAL_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = ignoreToken;\n_[INITIAL_MODE][Tokenizer.COMMENT_TOKEN] = appendComment;\n_[INITIAL_MODE][Tokenizer.DOCTYPE_TOKEN] = doctypeInInitialMode;\n_[INITIAL_MODE][Tokenizer.START_TAG_TOKEN] =\n_[INITIAL_MODE][Tokenizer.END_TAG_TOKEN] =\n_[INITIAL_MODE][Tokenizer.EOF_TOKEN] = tokenInInitialMode;\n\n_[BEFORE_HTML_MODE] = Object.create(null);\n_[BEFORE_HTML_MODE][Tokenizer.CHARACTER_TOKEN] =\n_[BEFORE_HTML_MODE][Tokenizer.NULL_CHARACTER_TOKEN] = tokenBeforeHtml;\n_[BEFORE_HTML_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = ignoreToken;\n_[BEFORE_HTML_MODE][Tokenizer.COMMENT_TOKEN] = appendComment;\n_[BEFORE_HTML_MODE][Tokenizer.DOCTYPE_TOKEN] = ignoreToken;\n_[BEFORE_HTML_MODE][Tokenizer.START_TAG_TOKEN] = startTagBeforeHtml;\n_[BEFORE_HTML_MODE][Tokenizer.END_TAG_TOKEN] = endTagBeforeHtml;\n_[BEFORE_HTML_MODE][Tokenizer.EOF_TOKEN] = tokenBeforeHtml;\n\n_[BEFORE_HEAD_MODE] = Object.create(null);\n_[BEFORE_HEAD_MODE][Tokenizer.CHARACTER_TOKEN] =\n_[BEFORE_HEAD_MODE][Tokenizer.NULL_CHARACTER_TOKEN] = tokenBeforeHead;\n_[BEFORE_HEAD_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = ignoreToken;\n_[BEFORE_HEAD_MODE][Tokenizer.COMMENT_TOKEN] = appendComment;\n_[BEFORE_HEAD_MODE][Tokenizer.DOCTYPE_TOKEN] = ignoreToken;\n_[BEFORE_HEAD_MODE][Tokenizer.START_TAG_TOKEN] = startTagBeforeHead;\n_[BEFORE_HEAD_MODE][Tokenizer.END_TAG_TOKEN] = endTagBeforeHead;\n_[BEFORE_HEAD_MODE][Tokenizer.EOF_TOKEN] = tokenBeforeHead;\n\n_[IN_HEAD_MODE] = Object.create(null);\n_[IN_HEAD_MODE][Tokenizer.CHARACTER_TOKEN] =\n_[IN_HEAD_MODE][Tokenizer.NULL_CHARACTER_TOKEN] = tokenInHead;\n_[IN_HEAD_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = insertCharacters;\n_[IN_HEAD_MODE][Tokenizer.COMMENT_TOKEN] = appendComment;\n_[IN_HEAD_MODE][Tokenizer.DOCTYPE_TOKEN] = ignoreToken;\n_[IN_HEAD_MODE][Tokenizer.START_TAG_TOKEN] = startTagInHead;\n_[IN_HEAD_MODE][Tokenizer.END_TAG_TOKEN] = endTagInHead;\n_[IN_HEAD_MODE][Tokenizer.EOF_TOKEN] = tokenInHead;\n\n_[AFTER_HEAD_MODE] = Object.create(null);\n_[AFTER_HEAD_MODE][Tokenizer.CHARACTER_TOKEN] =\n_[AFTER_HEAD_MODE][Tokenizer.NULL_CHARACTER_TOKEN] = tokenAfterHead;\n_[AFTER_HEAD_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = insertCharacters;\n_[AFTER_HEAD_MODE][Tokenizer.COMMENT_TOKEN] = appendComment;\n_[AFTER_HEAD_MODE][Tokenizer.DOCTYPE_TOKEN] = ignoreToken;\n_[AFTER_HEAD_MODE][Tokenizer.START_TAG_TOKEN] = startTagAfterHead;\n_[AFTER_HEAD_MODE][Tokenizer.END_TAG_TOKEN] = endTagAfterHead;\n_[AFTER_HEAD_MODE][Tokenizer.EOF_TOKEN] = tokenAfterHead;\n\n_[IN_BODY_MODE] = Object.create(null);\n_[IN_BODY_MODE][Tokenizer.CHARACTER_TOKEN] = characterInBody;\n_[IN_BODY_MODE][Tokenizer.NULL_CHARACTER_TOKEN] = ignoreToken;\n_[IN_BODY_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = whitespaceCharacterInBody;\n_[IN_BODY_MODE][Tokenizer.COMMENT_TOKEN] = appendComment;\n_[IN_BODY_MODE][Tokenizer.DOCTYPE_TOKEN] = ignoreToken;\n_[IN_BODY_MODE][Tokenizer.START_TAG_TOKEN] = startTagInBody;\n_[IN_BODY_MODE][Tokenizer.END_TAG_TOKEN] = endTagInBody;\n_[IN_BODY_MODE][Tokenizer.EOF_TOKEN] = eofInBody;\n\n_[TEXT_MODE] = Object.create(null);\n_[TEXT_MODE][Tokenizer.CHARACTER_TOKEN] =\n_[TEXT_MODE][Tokenizer.NULL_CHARACTER_TOKEN] =\n_[TEXT_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = insertCharacters;\n_[TEXT_MODE][Tokenizer.COMMENT_TOKEN] =\n_[TEXT_MODE][Tokenizer.DOCTYPE_TOKEN] =\n_[TEXT_MODE][Tokenizer.START_TAG_TOKEN] = ignoreToken;\n_[TEXT_MODE][Tokenizer.END_TAG_TOKEN] = endTagInText;\n_[TEXT_MODE][Tokenizer.EOF_TOKEN] = eofInText;\n\n_[IN_TABLE_MODE] = Object.create(null);\n_[IN_TABLE_MODE][Tokenizer.CHARACTER_TOKEN] =\n_[IN_TABLE_MODE][Tokenizer.NULL_CHARACTER_TOKEN] =\n_[IN_TABLE_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = characterInTable;\n_[IN_TABLE_MODE][Tokenizer.COMMENT_TOKEN] = appendComment;\n_[IN_TABLE_MODE][Tokenizer.DOCTYPE_TOKEN] = ignoreToken;\n_[IN_TABLE_MODE][Tokenizer.START_TAG_TOKEN] = startTagInTable;\n_[IN_TABLE_MODE][Tokenizer.END_TAG_TOKEN] = endTagInTable;\n_[IN_TABLE_MODE][Tokenizer.EOF_TOKEN] = eofInBody;\n\n_[IN_TABLE_TEXT_MODE] = Object.create(null);\n_[IN_TABLE_TEXT_MODE][Tokenizer.CHARACTER_TOKEN] = characterInTableText;\n_[IN_TABLE_TEXT_MODE][Tokenizer.NULL_CHARACTER_TOKEN] = ignoreToken;\n_[IN_TABLE_TEXT_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = whitespaceCharacterInTableText;\n_[IN_TABLE_TEXT_MODE][Tokenizer.COMMENT_TOKEN] =\n_[IN_TABLE_TEXT_MODE][Tokenizer.DOCTYPE_TOKEN] =\n_[IN_TABLE_TEXT_MODE][Tokenizer.START_TAG_TOKEN] =\n_[IN_TABLE_TEXT_MODE][Tokenizer.END_TAG_TOKEN] =\n_[IN_TABLE_TEXT_MODE][Tokenizer.EOF_TOKEN] = tokenInTableText;\n\n_[IN_CAPTION_MODE] = Object.create(null);\n_[IN_CAPTION_MODE][Tokenizer.CHARACTER_TOKEN] = characterInBody;\n_[IN_CAPTION_MODE][Tokenizer.NULL_CHARACTER_TOKEN] = ignoreToken;\n_[IN_CAPTION_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = whitespaceCharacterInBody;\n_[IN_CAPTION_MODE][Tokenizer.COMMENT_TOKEN] = appendComment;\n_[IN_CAPTION_MODE][Tokenizer.DOCTYPE_TOKEN] = ignoreToken;\n_[IN_CAPTION_MODE][Tokenizer.START_TAG_TOKEN] = startTagInCaption;\n_[IN_CAPTION_MODE][Tokenizer.END_TAG_TOKEN] = endTagInCaption;\n_[IN_CAPTION_MODE][Tokenizer.EOF_TOKEN] = eofInBody;\n\n_[IN_COLUMN_GROUP_MODE] = Object.create(null);\n_[IN_COLUMN_GROUP_MODE][Tokenizer.CHARACTER_TOKEN] =\n_[IN_COLUMN_GROUP_MODE][Tokenizer.NULL_CHARACTER_TOKEN] = tokenInColumnGroup;\n_[IN_COLUMN_GROUP_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = insertCharacters;\n_[IN_COLUMN_GROUP_MODE][Tokenizer.COMMENT_TOKEN] = appendComment;\n_[IN_COLUMN_GROUP_MODE][Tokenizer.DOCTYPE_TOKEN] = ignoreToken;\n_[IN_COLUMN_GROUP_MODE][Tokenizer.START_TAG_TOKEN] = startTagInColumnGroup;\n_[IN_COLUMN_GROUP_MODE][Tokenizer.END_TAG_TOKEN] = endTagInColumnGroup;\n_[IN_COLUMN_GROUP_MODE][Tokenizer.EOF_TOKEN] = eofInBody;\n\n_[IN_TABLE_BODY_MODE] = Object.create(null);\n_[IN_TABLE_BODY_MODE][Tokenizer.CHARACTER_TOKEN] =\n_[IN_TABLE_BODY_MODE][Tokenizer.NULL_CHARACTER_TOKEN] =\n_[IN_TABLE_BODY_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = characterInTable;\n_[IN_TABLE_BODY_MODE][Tokenizer.COMMENT_TOKEN] = appendComment;\n_[IN_TABLE_BODY_MODE][Tokenizer.DOCTYPE_TOKEN] = ignoreToken;\n_[IN_TABLE_BODY_MODE][Tokenizer.START_TAG_TOKEN] = startTagInTableBody;\n_[IN_TABLE_BODY_MODE][Tokenizer.END_TAG_TOKEN] = endTagInTableBody;\n_[IN_TABLE_BODY_MODE][Tokenizer.EOF_TOKEN] = eofInBody;\n\n_[IN_ROW_MODE] = Object.create(null);\n_[IN_ROW_MODE][Tokenizer.CHARACTER_TOKEN] =\n_[IN_ROW_MODE][Tokenizer.NULL_CHARACTER_TOKEN] =\n_[IN_ROW_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = characterInTable;\n_[IN_ROW_MODE][Tokenizer.COMMENT_TOKEN] = appendComment;\n_[IN_ROW_MODE][Tokenizer.DOCTYPE_TOKEN] = ignoreToken;\n_[IN_ROW_MODE][Tokenizer.START_TAG_TOKEN] = startTagInRow;\n_[IN_ROW_MODE][Tokenizer.END_TAG_TOKEN] = endTagInRow;\n_[IN_ROW_MODE][Tokenizer.EOF_TOKEN] = eofInBody;\n\n_[IN_CELL_MODE] = Object.create(null);\n_[IN_CELL_MODE][Tokenizer.CHARACTER_TOKEN] = characterInBody;\n_[IN_CELL_MODE][Tokenizer.NULL_CHARACTER_TOKEN] = ignoreToken;\n_[IN_CELL_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = whitespaceCharacterInBody;\n_[IN_CELL_MODE][Tokenizer.COMMENT_TOKEN] = appendComment;\n_[IN_CELL_MODE][Tokenizer.DOCTYPE_TOKEN] = ignoreToken;\n_[IN_CELL_MODE][Tokenizer.START_TAG_TOKEN] = startTagInCell;\n_[IN_CELL_MODE][Tokenizer.END_TAG_TOKEN] = endTagInCell;\n_[IN_CELL_MODE][Tokenizer.EOF_TOKEN] = eofInBody;\n\n_[IN_SELECT_MODE] = Object.create(null);\n_[IN_SELECT_MODE][Tokenizer.CHARACTER_TOKEN] = insertCharacters;\n_[IN_SELECT_MODE][Tokenizer.NULL_CHARACTER_TOKEN] = ignoreToken;\n_[IN_SELECT_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = insertCharacters;\n_[IN_SELECT_MODE][Tokenizer.COMMENT_TOKEN] = appendComment;\n_[IN_SELECT_MODE][Tokenizer.DOCTYPE_TOKEN] = ignoreToken;\n_[IN_SELECT_MODE][Tokenizer.START_TAG_TOKEN] = startTagInSelect;\n_[IN_SELECT_MODE][Tokenizer.END_TAG_TOKEN] = endTagInSelect;\n_[IN_SELECT_MODE][Tokenizer.EOF_TOKEN] = eofInBody;\n\n_[IN_SELECT_IN_TABLE_MODE] = Object.create(null);\n_[IN_SELECT_IN_TABLE_MODE][Tokenizer.CHARACTER_TOKEN] = insertCharacters;\n_[IN_SELECT_IN_TABLE_MODE][Tokenizer.NULL_CHARACTER_TOKEN] = ignoreToken;\n_[IN_SELECT_IN_TABLE_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = insertCharacters;\n_[IN_SELECT_IN_TABLE_MODE][Tokenizer.COMMENT_TOKEN] = appendComment;\n_[IN_SELECT_IN_TABLE_MODE][Tokenizer.DOCTYPE_TOKEN] = ignoreToken;\n_[IN_SELECT_IN_TABLE_MODE][Tokenizer.START_TAG_TOKEN] = startTagInSelectInTable;\n_[IN_SELECT_IN_TABLE_MODE][Tokenizer.END_TAG_TOKEN] = endTagInSelectInTable;\n_[IN_SELECT_IN_TABLE_MODE][Tokenizer.EOF_TOKEN] = eofInBody;\n\n_[IN_TEMPLATE_MODE] = Object.create(null);\n_[IN_TEMPLATE_MODE][Tokenizer.CHARACTER_TOKEN] = characterInBody;\n_[IN_TEMPLATE_MODE][Tokenizer.NULL_CHARACTER_TOKEN] = ignoreToken;\n_[IN_TEMPLATE_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = whitespaceCharacterInBody;\n_[IN_TEMPLATE_MODE][Tokenizer.COMMENT_TOKEN] = appendComment;\n_[IN_TEMPLATE_MODE][Tokenizer.DOCTYPE_TOKEN] = ignoreToken;\n_[IN_TEMPLATE_MODE][Tokenizer.START_TAG_TOKEN] = startTagInTemplate;\n_[IN_TEMPLATE_MODE][Tokenizer.END_TAG_TOKEN] = endTagInTemplate;\n_[IN_TEMPLATE_MODE][Tokenizer.EOF_TOKEN] = eofInTemplate;\n\n_[AFTER_BODY_MODE] = Object.create(null);\n_[AFTER_BODY_MODE][Tokenizer.CHARACTER_TOKEN] =\n_[AFTER_BODY_MODE][Tokenizer.NULL_CHARACTER_TOKEN] = tokenAfterBody;\n_[AFTER_BODY_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = whitespaceCharacterInBody;\n_[AFTER_BODY_MODE][Tokenizer.COMMENT_TOKEN] = appendCommentToRootHtmlElement;\n_[AFTER_BODY_MODE][Tokenizer.DOCTYPE_TOKEN] = ignoreToken;\n_[AFTER_BODY_MODE][Tokenizer.START_TAG_TOKEN] = startTagAfterBody;\n_[AFTER_BODY_MODE][Tokenizer.END_TAG_TOKEN] = endTagAfterBody;\n_[AFTER_BODY_MODE][Tokenizer.EOF_TOKEN] = stopParsing;\n\n_[IN_FRAMESET_MODE] = Object.create(null);\n_[IN_FRAMESET_MODE][Tokenizer.CHARACTER_TOKEN] =\n_[IN_FRAMESET_MODE][Tokenizer.NULL_CHARACTER_TOKEN] = ignoreToken;\n_[IN_FRAMESET_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = insertCharacters;\n_[IN_FRAMESET_MODE][Tokenizer.COMMENT_TOKEN] = appendComment;\n_[IN_FRAMESET_MODE][Tokenizer.DOCTYPE_TOKEN] = ignoreToken;\n_[IN_FRAMESET_MODE][Tokenizer.START_TAG_TOKEN] = startTagInFrameset;\n_[IN_FRAMESET_MODE][Tokenizer.END_TAG_TOKEN] = endTagInFrameset;\n_[IN_FRAMESET_MODE][Tokenizer.EOF_TOKEN] = stopParsing;\n\n_[AFTER_FRAMESET_MODE] = Object.create(null);\n_[AFTER_FRAMESET_MODE][Tokenizer.CHARACTER_TOKEN] =\n_[AFTER_FRAMESET_MODE][Tokenizer.NULL_CHARACTER_TOKEN] = ignoreToken;\n_[AFTER_FRAMESET_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = insertCharacters;\n_[AFTER_FRAMESET_MODE][Tokenizer.COMMENT_TOKEN] = appendComment;\n_[AFTER_FRAMESET_MODE][Tokenizer.DOCTYPE_TOKEN] = ignoreToken;\n_[AFTER_FRAMESET_MODE][Tokenizer.START_TAG_TOKEN] = startTagAfterFrameset;\n_[AFTER_FRAMESET_MODE][Tokenizer.END_TAG_TOKEN] = endTagAfterFrameset;\n_[AFTER_FRAMESET_MODE][Tokenizer.EOF_TOKEN] = stopParsing;\n\n_[AFTER_AFTER_BODY_MODE] = Object.create(null);\n_[AFTER_AFTER_BODY_MODE][Tokenizer.CHARACTER_TOKEN] = tokenAfterAfterBody;\n_[AFTER_AFTER_BODY_MODE][Tokenizer.NULL_CHARACTER_TOKEN] = tokenAfterAfterBody;\n_[AFTER_AFTER_BODY_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = whitespaceCharacterInBody;\n_[AFTER_AFTER_BODY_MODE][Tokenizer.COMMENT_TOKEN] = appendCommentToDocument;\n_[AFTER_AFTER_BODY_MODE][Tokenizer.DOCTYPE_TOKEN] = ignoreToken;\n_[AFTER_AFTER_BODY_MODE][Tokenizer.START_TAG_TOKEN] = startTagAfterAfterBody;\n_[AFTER_AFTER_BODY_MODE][Tokenizer.END_TAG_TOKEN] = tokenAfterAfterBody;\n_[AFTER_AFTER_BODY_MODE][Tokenizer.EOF_TOKEN] = stopParsing;\n\n_[AFTER_AFTER_FRAMESET_MODE] = Object.create(null);\n_[AFTER_AFTER_FRAMESET_MODE][Tokenizer.CHARACTER_TOKEN] =\n_[AFTER_AFTER_FRAMESET_MODE][Tokenizer.NULL_CHARACTER_TOKEN] = ignoreToken;\n_[AFTER_AFTER_FRAMESET_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = whitespaceCharacterInBody;\n_[AFTER_AFTER_FRAMESET_MODE][Tokenizer.COMMENT_TOKEN] = appendCommentToDocument;\n_[AFTER_AFTER_FRAMESET_MODE][Tokenizer.DOCTYPE_TOKEN] = ignoreToken;\n_[AFTER_AFTER_FRAMESET_MODE][Tokenizer.START_TAG_TOKEN] = startTagAfterAfterFrameset;\n_[AFTER_AFTER_FRAMESET_MODE][Tokenizer.END_TAG_TOKEN] = ignoreToken;\n_[AFTER_AFTER_FRAMESET_MODE][Tokenizer.EOF_TOKEN] = stopParsing;\n\n\n//Parser\nvar Parser = module.exports = function (options) {\n    this.options = mergeOptions(DEFAULT_OPTIONS, options);\n\n    this.treeAdapter = this.options.treeAdapter;\n    this.pendingScript = null;\n\n    if (this.options.locationInfo)\n        new LocationInfoParserMixin(this);\n};\n\n// API\nParser.prototype.parse = function (html) {\n    var document = this.treeAdapter.createDocument();\n\n    this._bootstrap(document, null);\n    this.tokenizer.write(html, true);\n    this._runParsingLoop(null);\n\n    return document;\n};\n\nParser.prototype.parseFragment = function (html, fragmentContext) {\n    //NOTE: use <template> element as a fragment context if context element was not provided,\n    //so we will parse in \"forgiving\" manner\n    if (!fragmentContext)\n        fragmentContext = this.treeAdapter.createElement($.TEMPLATE, NS.HTML, []);\n\n    //NOTE: create fake element which will be used as 'document' for fragment parsing.\n    //This is important for jsdom there 'document' can't be recreated, therefore\n    //fragment parsing causes messing of the main `document`.\n    var documentMock = this.treeAdapter.createElement('documentmock', NS.HTML, []);\n\n    this._bootstrap(documentMock, fragmentContext);\n\n    if (this.treeAdapter.getTagName(fragmentContext) === $.TEMPLATE)\n        this._pushTmplInsertionMode(IN_TEMPLATE_MODE);\n\n    this._initTokenizerForFragmentParsing();\n    this._insertFakeRootElement();\n    this._resetInsertionMode();\n    this._findFormInFragmentContext();\n    this.tokenizer.write(html, true);\n    this._runParsingLoop(null);\n\n    var rootElement = this.treeAdapter.getFirstChild(documentMock),\n        fragment = this.treeAdapter.createDocumentFragment();\n\n    this._adoptNodes(rootElement, fragment);\n\n    return fragment;\n};\n\n//Bootstrap parser\nParser.prototype._bootstrap = function (document, fragmentContext) {\n    this.tokenizer = new Tokenizer(this.options);\n\n    this.stopped = false;\n\n    this.insertionMode = INITIAL_MODE;\n    this.originalInsertionMode = '';\n\n    this.document = document;\n    this.fragmentContext = fragmentContext;\n\n    this.headElement = null;\n    this.formElement = null;\n\n    this.openElements = new OpenElementStack(this.document, this.treeAdapter);\n    this.activeFormattingElements = new FormattingElementList(this.treeAdapter);\n\n    this.tmplInsertionModeStack = [];\n    this.tmplInsertionModeStackTop = -1;\n    this.currentTmplInsertionMode = null;\n\n    this.pendingCharacterTokens = [];\n    this.hasNonWhitespacePendingCharacterToken = false;\n\n    this.framesetOk = true;\n    this.skipNextNewLine = false;\n    this.fosterParentingEnabled = false;\n};\n\n//Parsing loop\nParser.prototype._runParsingLoop  = function (scriptHandler) {\n    while (!this.stopped) {\n        this._setupTokenizerCDATAMode();\n\n        var token = this.tokenizer.getNextToken();\n\n        if (token.type === Tokenizer.HIBERNATION_TOKEN)\n            break;\n\n        if (this.skipNextNewLine) {\n            this.skipNextNewLine = false;\n\n            if (token.type === Tokenizer.WHITESPACE_CHARACTER_TOKEN && token.chars[0] === '\\n') {\n                if (token.chars.length === 1)\n                    continue;\n\n                token.chars = token.chars.substr(1);\n            }\n        }\n\n        this._processInputToken(token);\n\n        if (scriptHandler && this.pendingScript)\n            break;\n    }\n};\n\nParser.prototype.runParsingLoopForCurrentChunk = function (writeCallback, scriptHandler) {\n    this._runParsingLoop(scriptHandler);\n\n    if (scriptHandler && this.pendingScript) {\n        var script = this.pendingScript;\n\n        this.pendingScript = null;\n\n        scriptHandler(script);\n\n        return;\n    }\n\n    if (writeCallback)\n        writeCallback();\n};\n\n//Text parsing\nParser.prototype._setupTokenizerCDATAMode = function () {\n    var current = this._getAdjustedCurrentElement();\n\n    this.tokenizer.allowCDATA = current && current !== this.document &&\n                                this.treeAdapter.getNamespaceURI(current) !== NS.HTML && !this._isIntegrationPoint(current);\n};\n\nParser.prototype._switchToTextParsing = function (currentToken, nextTokenizerState) {\n    this._insertElement(currentToken, NS.HTML);\n    this.tokenizer.state = nextTokenizerState;\n    this.originalInsertionMode = this.insertionMode;\n    this.insertionMode = TEXT_MODE;\n};\n\nParser.prototype.switchToPlaintextParsing = function () {\n    this.insertionMode = TEXT_MODE;\n    this.originalInsertionMode = IN_BODY_MODE;\n    this.tokenizer.state = Tokenizer.MODE.PLAINTEXT;\n};\n\n//Fragment parsing\nParser.prototype._getAdjustedCurrentElement = function () {\n    return this.openElements.stackTop === 0 && this.fragmentContext ?\n        this.fragmentContext :\n        this.openElements.current;\n};\n\nParser.prototype._findFormInFragmentContext = function () {\n    var node = this.fragmentContext;\n\n    do {\n        if (this.treeAdapter.getTagName(node) === $.FORM) {\n            this.formElement = node;\n            break;\n        }\n\n        node = this.treeAdapter.getParentNode(node);\n    } while (node);\n};\n\nParser.prototype._initTokenizerForFragmentParsing = function () {\n    if (this.treeAdapter.getNamespaceURI(this.fragmentContext) === NS.HTML) {\n        var tn = this.treeAdapter.getTagName(this.fragmentContext);\n\n        if (tn === $.TITLE || tn === $.TEXTAREA)\n            this.tokenizer.state = Tokenizer.MODE.RCDATA;\n\n        else if (tn === $.STYLE || tn === $.XMP || tn === $.IFRAME ||\n                 tn === $.NOEMBED || tn === $.NOFRAMES || tn === $.NOSCRIPT)\n            this.tokenizer.state = Tokenizer.MODE.RAWTEXT;\n\n        else if (tn === $.SCRIPT)\n            this.tokenizer.state = Tokenizer.MODE.SCRIPT_DATA;\n\n        else if (tn === $.PLAINTEXT)\n            this.tokenizer.state = Tokenizer.MODE.PLAINTEXT;\n    }\n};\n\n//Tree mutation\nParser.prototype._setDocumentType = function (token) {\n    this.treeAdapter.setDocumentType(this.document, token.name, token.publicId, token.systemId);\n};\n\nParser.prototype._attachElementToTree = function (element) {\n    if (this._shouldFosterParentOnInsertion())\n        this._fosterParentElement(element);\n\n    else {\n        var parent = this.openElements.currentTmplContent || this.openElements.current;\n\n        this.treeAdapter.appendChild(parent, element);\n    }\n};\n\nParser.prototype._appendElement = function (token, namespaceURI) {\n    var element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n\n    this._attachElementToTree(element);\n};\n\nParser.prototype._insertElement = function (token, namespaceURI) {\n    var element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n\n    this._attachElementToTree(element);\n    this.openElements.push(element);\n};\n\nParser.prototype._insertFakeElement = function (tagName) {\n    var element = this.treeAdapter.createElement(tagName, NS.HTML, []);\n\n    this._attachElementToTree(element);\n    this.openElements.push(element);\n};\n\nParser.prototype._insertTemplate = function (token) {\n    var tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs),\n        content = this.treeAdapter.createDocumentFragment();\n\n    this.treeAdapter.setTemplateContent(tmpl, content);\n    this._attachElementToTree(tmpl);\n    this.openElements.push(tmpl);\n};\n\nParser.prototype._insertFakeRootElement = function () {\n    var element = this.treeAdapter.createElement($.HTML, NS.HTML, []);\n\n    this.treeAdapter.appendChild(this.openElements.current, element);\n    this.openElements.push(element);\n};\n\nParser.prototype._appendCommentNode = function (token, parent) {\n    var commentNode = this.treeAdapter.createCommentNode(token.data);\n\n    this.treeAdapter.appendChild(parent, commentNode);\n};\n\nParser.prototype._insertCharacters = function (token) {\n    if (this._shouldFosterParentOnInsertion())\n        this._fosterParentText(token.chars);\n\n    else {\n        var parent = this.openElements.currentTmplContent || this.openElements.current;\n\n        this.treeAdapter.insertText(parent, token.chars);\n    }\n};\n\nParser.prototype._adoptNodes = function (donor, recipient) {\n    while (true) {\n        var child = this.treeAdapter.getFirstChild(donor);\n\n        if (!child)\n            break;\n\n        this.treeAdapter.detachNode(child);\n        this.treeAdapter.appendChild(recipient, child);\n    }\n};\n\n//Token processing\nParser.prototype._shouldProcessTokenInForeignContent = function (token) {\n    var current = this._getAdjustedCurrentElement();\n\n    if (!current || current === this.document)\n        return false;\n\n    var ns = this.treeAdapter.getNamespaceURI(current);\n\n    if (ns === NS.HTML)\n        return false;\n\n    if (this.treeAdapter.getTagName(current) === $.ANNOTATION_XML && ns === NS.MATHML &&\n        token.type === Tokenizer.START_TAG_TOKEN && token.tagName === $.SVG)\n        return false;\n\n    var isCharacterToken = token.type === Tokenizer.CHARACTER_TOKEN ||\n                           token.type === Tokenizer.NULL_CHARACTER_TOKEN ||\n                           token.type === Tokenizer.WHITESPACE_CHARACTER_TOKEN,\n        isMathMLTextStartTag = token.type === Tokenizer.START_TAG_TOKEN &&\n                               token.tagName !== $.MGLYPH &&\n                               token.tagName !== $.MALIGNMARK;\n\n    if ((isMathMLTextStartTag || isCharacterToken) && this._isIntegrationPoint(current, NS.MATHML))\n        return false;\n\n    if ((token.type === Tokenizer.START_TAG_TOKEN || isCharacterToken) && this._isIntegrationPoint(current, NS.HTML))\n        return false;\n\n    return token.type !== Tokenizer.EOF_TOKEN;\n};\n\nParser.prototype._processToken = function (token) {\n    _[this.insertionMode][token.type](this, token);\n};\n\nParser.prototype._processTokenInBodyMode = function (token) {\n    _[IN_BODY_MODE][token.type](this, token);\n};\n\nParser.prototype._processTokenInForeignContent = function (token) {\n    if (token.type === Tokenizer.CHARACTER_TOKEN)\n        characterInForeignContent(this, token);\n\n    else if (token.type === Tokenizer.NULL_CHARACTER_TOKEN)\n        nullCharacterInForeignContent(this, token);\n\n    else if (token.type === Tokenizer.WHITESPACE_CHARACTER_TOKEN)\n        insertCharacters(this, token);\n\n    else if (token.type === Tokenizer.COMMENT_TOKEN)\n        appendComment(this, token);\n\n    else if (token.type === Tokenizer.START_TAG_TOKEN)\n        startTagInForeignContent(this, token);\n\n    else if (token.type === Tokenizer.END_TAG_TOKEN)\n        endTagInForeignContent(this, token);\n};\n\nParser.prototype._processInputToken = function (token) {\n    if (this._shouldProcessTokenInForeignContent(token))\n        this._processTokenInForeignContent(token);\n\n    else\n        this._processToken(token);\n};\n\n//Integration points\nParser.prototype._isIntegrationPoint = function (element, foreignNS) {\n    var tn = this.treeAdapter.getTagName(element),\n        ns = this.treeAdapter.getNamespaceURI(element),\n        attrs = this.treeAdapter.getAttrList(element);\n\n    return foreignContent.isIntegrationPoint(tn, ns, attrs, foreignNS);\n};\n\n//Active formatting elements reconstruction\nParser.prototype._reconstructActiveFormattingElements = function () {\n    var listLength = this.activeFormattingElements.length;\n\n    if (listLength) {\n        var unopenIdx = listLength,\n            entry = null;\n\n        do {\n            unopenIdx--;\n            entry = this.activeFormattingElements.entries[unopenIdx];\n\n            if (entry.type === FormattingElementList.MARKER_ENTRY || this.openElements.contains(entry.element)) {\n                unopenIdx++;\n                break;\n            }\n        } while (unopenIdx > 0);\n\n        for (var i = unopenIdx; i < listLength; i++) {\n            entry = this.activeFormattingElements.entries[i];\n            this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\n            entry.element = this.openElements.current;\n        }\n    }\n};\n\n//Close elements\nParser.prototype._closeTableCell = function () {\n    this.openElements.generateImpliedEndTags();\n    this.openElements.popUntilTableCellPopped();\n    this.activeFormattingElements.clearToLastMarker();\n    this.insertionMode = IN_ROW_MODE;\n};\n\nParser.prototype._closePElement = function () {\n    this.openElements.generateImpliedEndTagsWithExclusion($.P);\n    this.openElements.popUntilTagNamePopped($.P);\n};\n\n//Insertion modes\nParser.prototype._resetInsertionMode = function () {\n    for (var i = this.openElements.stackTop, last = false; i >= 0; i--) {\n        var element = this.openElements.items[i];\n\n        if (i === 0) {\n            last = true;\n\n            if (this.fragmentContext)\n                element = this.fragmentContext;\n        }\n\n        var tn = this.treeAdapter.getTagName(element),\n            newInsertionMode = INSERTION_MODE_RESET_MAP[tn];\n\n        if (newInsertionMode) {\n            this.insertionMode = newInsertionMode;\n            break;\n        }\n\n        else if (!last && (tn === $.TD || tn === $.TH)) {\n            this.insertionMode = IN_CELL_MODE;\n            break;\n        }\n\n        else if (!last && tn === $.HEAD) {\n            this.insertionMode = IN_HEAD_MODE;\n            break;\n        }\n\n        else if (tn === $.SELECT) {\n            this._resetInsertionModeForSelect(i);\n            break;\n        }\n\n        else if (tn === $.TEMPLATE) {\n            this.insertionMode = this.currentTmplInsertionMode;\n            break;\n        }\n\n        else if (tn === $.HTML) {\n            this.insertionMode = this.headElement ? AFTER_HEAD_MODE : BEFORE_HEAD_MODE;\n            break;\n        }\n\n        else if (last) {\n            this.insertionMode = IN_BODY_MODE;\n            break;\n        }\n    }\n};\n\nParser.prototype._resetInsertionModeForSelect = function (selectIdx) {\n    if (selectIdx > 0) {\n        for (var i = selectIdx - 1; i > 0; i--) {\n            var ancestor = this.openElements.items[i],\n                tn = this.treeAdapter.getTagName(ancestor);\n\n            if (tn === $.TEMPLATE)\n                break;\n\n            else if (tn === $.TABLE) {\n                this.insertionMode = IN_SELECT_IN_TABLE_MODE;\n                return;\n            }\n        }\n    }\n\n    this.insertionMode = IN_SELECT_MODE;\n};\n\nParser.prototype._pushTmplInsertionMode = function (mode) {\n    this.tmplInsertionModeStack.push(mode);\n    this.tmplInsertionModeStackTop++;\n    this.currentTmplInsertionMode = mode;\n};\n\nParser.prototype._popTmplInsertionMode = function () {\n    this.tmplInsertionModeStack.pop();\n    this.tmplInsertionModeStackTop--;\n    this.currentTmplInsertionMode = this.tmplInsertionModeStack[this.tmplInsertionModeStackTop];\n};\n\n//Foster parenting\nParser.prototype._isElementCausesFosterParenting = function (element) {\n    var tn = this.treeAdapter.getTagName(element);\n\n    return tn === $.TABLE || tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD || tn === $.TR;\n};\n\nParser.prototype._shouldFosterParentOnInsertion = function () {\n    return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.current);\n};\n\nParser.prototype._findFosterParentingLocation = function () {\n    var location = {\n        parent: null,\n        beforeElement: null\n    };\n\n    for (var i = this.openElements.stackTop; i >= 0; i--) {\n        var openElement = this.openElements.items[i],\n            tn = this.treeAdapter.getTagName(openElement),\n            ns = this.treeAdapter.getNamespaceURI(openElement);\n\n        if (tn === $.TEMPLATE && ns === NS.HTML) {\n            location.parent = this.treeAdapter.getTemplateContent(openElement);\n            break;\n        }\n\n        else if (tn === $.TABLE) {\n            location.parent = this.treeAdapter.getParentNode(openElement);\n\n            if (location.parent)\n                location.beforeElement = openElement;\n            else\n                location.parent = this.openElements.items[i - 1];\n\n            break;\n        }\n    }\n\n    if (!location.parent)\n        location.parent = this.openElements.items[0];\n\n    return location;\n};\n\nParser.prototype._fosterParentElement = function (element) {\n    var location = this._findFosterParentingLocation();\n\n    if (location.beforeElement)\n        this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\n    else\n        this.treeAdapter.appendChild(location.parent, element);\n};\n\nParser.prototype._fosterParentText = function (chars) {\n    var location = this._findFosterParentingLocation();\n\n    if (location.beforeElement)\n        this.treeAdapter.insertTextBefore(location.parent, chars, location.beforeElement);\n    else\n        this.treeAdapter.insertText(location.parent, chars);\n};\n\n//Special elements\nParser.prototype._isSpecialElement = function (element) {\n    var tn = this.treeAdapter.getTagName(element),\n        ns = this.treeAdapter.getNamespaceURI(element);\n\n    return HTML.SPECIAL_ELEMENTS[ns][tn];\n};\n\n//Adoption agency algorithm\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\n//------------------------------------------------------------------\n\n//Steps 5-8 of the algorithm\nfunction aaObtainFormattingElementEntry(p, token) {\n    var formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\n\n    if (formattingElementEntry) {\n        if (!p.openElements.contains(formattingElementEntry.element)) {\n            p.activeFormattingElements.removeEntry(formattingElementEntry);\n            formattingElementEntry = null;\n        }\n\n        else if (!p.openElements.hasInScope(token.tagName))\n            formattingElementEntry = null;\n    }\n\n    else\n        genericEndTagInBody(p, token);\n\n    return formattingElementEntry;\n}\n\n//Steps 9 and 10 of the algorithm\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\n    var furthestBlock = null;\n\n    for (var i = p.openElements.stackTop; i >= 0; i--) {\n        var element = p.openElements.items[i];\n\n        if (element === formattingElementEntry.element)\n            break;\n\n        if (p._isSpecialElement(element))\n            furthestBlock = element;\n    }\n\n    if (!furthestBlock) {\n        p.openElements.popUntilElementPopped(formattingElementEntry.element);\n        p.activeFormattingElements.removeEntry(formattingElementEntry);\n    }\n\n    return furthestBlock;\n}\n\n//Step 13 of the algorithm\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\n    var lastElement = furthestBlock,\n        nextElement = p.openElements.getCommonAncestor(furthestBlock);\n\n    for (var i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\n        //NOTE: store next element for the next loop iteration (it may be deleted from the stack by step 9.5)\n        nextElement = p.openElements.getCommonAncestor(element);\n\n        var elementEntry = p.activeFormattingElements.getElementEntry(element),\n            counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER,\n            shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\n\n        if (shouldRemoveFromOpenElements) {\n            if (counterOverflow)\n                p.activeFormattingElements.removeEntry(elementEntry);\n\n            p.openElements.remove(element);\n        }\n\n        else {\n            element = aaRecreateElementFromEntry(p, elementEntry);\n\n            if (lastElement === furthestBlock)\n                p.activeFormattingElements.bookmark = elementEntry;\n\n            p.treeAdapter.detachNode(lastElement);\n            p.treeAdapter.appendChild(element, lastElement);\n            lastElement = element;\n        }\n    }\n\n    return lastElement;\n}\n\n//Step 13.7 of the algorithm\nfunction aaRecreateElementFromEntry(p, elementEntry) {\n    var ns = p.treeAdapter.getNamespaceURI(elementEntry.element),\n        newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\n\n    p.openElements.replace(elementEntry.element, newElement);\n    elementEntry.element = newElement;\n\n    return newElement;\n}\n\n//Step 14 of the algorithm\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\n    if (p._isElementCausesFosterParenting(commonAncestor))\n        p._fosterParentElement(lastElement);\n\n    else {\n        var tn = p.treeAdapter.getTagName(commonAncestor),\n            ns = p.treeAdapter.getNamespaceURI(commonAncestor);\n\n        if (tn === $.TEMPLATE && ns === NS.HTML)\n            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\n\n        p.treeAdapter.appendChild(commonAncestor, lastElement);\n    }\n}\n\n//Steps 15-19 of the algorithm\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\n    var ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element),\n        token = formattingElementEntry.token,\n        newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\n\n    p._adoptNodes(furthestBlock, newElement);\n    p.treeAdapter.appendChild(furthestBlock, newElement);\n\n    p.activeFormattingElements.insertElementAfterBookmark(newElement, formattingElementEntry.token);\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\n\n    p.openElements.remove(formattingElementEntry.element);\n    p.openElements.insertAfter(furthestBlock, newElement);\n}\n\n//Algorithm entry point\nfunction callAdoptionAgency(p, token) {\n    var formattingElementEntry;\n\n    for (var i = 0; i < AA_OUTER_LOOP_ITER; i++) {\n        formattingElementEntry = aaObtainFormattingElementEntry(p, token, formattingElementEntry);\n\n        if (!formattingElementEntry)\n            break;\n\n        var furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\n\n        if (!furthestBlock)\n            break;\n\n        p.activeFormattingElements.bookmark = formattingElementEntry;\n\n        var lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element),\n            commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\n\n        p.treeAdapter.detachNode(lastElement);\n        aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\n        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\n    }\n}\n\n\n//Generic token handlers\n//------------------------------------------------------------------\nfunction ignoreToken() {\n    //NOTE: do nothing =)\n}\n\nfunction appendComment(p, token) {\n    p._appendCommentNode(token, p.openElements.currentTmplContent || p.openElements.current);\n}\n\nfunction appendCommentToRootHtmlElement(p, token) {\n    p._appendCommentNode(token, p.openElements.items[0]);\n}\n\nfunction appendCommentToDocument(p, token) {\n    p._appendCommentNode(token, p.document);\n}\n\nfunction insertCharacters(p, token) {\n    p._insertCharacters(token);\n}\n\nfunction stopParsing(p) {\n    p.stopped = true;\n}\n\n//12.2.5.4.1 The \"initial\" insertion mode\n//------------------------------------------------------------------\nfunction doctypeInInitialMode(p, token) {\n    p._setDocumentType(token);\n\n    var mode = token.forceQuirks ?\n        HTML.DOCUMENT_MODE.QUIRKS :\n        doctype.getDocumentMode(token.name, token.publicId, token.systemId);\n\n    p.treeAdapter.setDocumentMode(p.document, mode);\n\n    p.insertionMode = BEFORE_HTML_MODE;\n}\n\nfunction tokenInInitialMode(p, token) {\n    p.treeAdapter.setDocumentMode(p.document, HTML.DOCUMENT_MODE.QUIRKS);\n    p.insertionMode = BEFORE_HTML_MODE;\n    p._processToken(token);\n}\n\n\n//12.2.5.4.2 The \"before html\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHtml(p, token) {\n    if (token.tagName === $.HTML) {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = BEFORE_HEAD_MODE;\n    }\n\n    else\n        tokenBeforeHtml(p, token);\n}\n\nfunction endTagBeforeHtml(p, token) {\n    var tn = token.tagName;\n\n    if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR)\n        tokenBeforeHtml(p, token);\n}\n\nfunction tokenBeforeHtml(p, token) {\n    p._insertFakeRootElement();\n    p.insertionMode = BEFORE_HEAD_MODE;\n    p._processToken(token);\n}\n\n\n//12.2.5.4.3 The \"before head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHead(p, token) {\n    var tn = token.tagName;\n\n    if (tn === $.HTML)\n        startTagInBody(p, token);\n\n    else if (tn === $.HEAD) {\n        p._insertElement(token, NS.HTML);\n        p.headElement = p.openElements.current;\n        p.insertionMode = IN_HEAD_MODE;\n    }\n\n    else\n        tokenBeforeHead(p, token);\n}\n\nfunction endTagBeforeHead(p, token) {\n    var tn = token.tagName;\n\n    if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR)\n        tokenBeforeHead(p, token);\n}\n\nfunction tokenBeforeHead(p, token) {\n    p._insertFakeElement($.HEAD);\n    p.headElement = p.openElements.current;\n    p.insertionMode = IN_HEAD_MODE;\n    p._processToken(token);\n}\n\n\n//12.2.5.4.4 The \"in head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHead(p, token) {\n    var tn = token.tagName;\n\n    if (tn === $.HTML)\n        startTagInBody(p, token);\n\n    else if (tn === $.BASE || tn === $.BASEFONT || tn === $.BGSOUND || tn === $.LINK || tn === $.META)\n        p._appendElement(token, NS.HTML);\n\n    else if (tn === $.TITLE)\n        p._switchToTextParsing(token, Tokenizer.MODE.RCDATA);\n\n    //NOTE: here we assume that we always act as an interactive user agent with enabled scripting, so we parse\n    //<noscript> as a rawtext.\n    else if (tn === $.NOSCRIPT || tn === $.NOFRAMES || tn === $.STYLE)\n        p._switchToTextParsing(token, Tokenizer.MODE.RAWTEXT);\n\n    else if (tn === $.SCRIPT)\n        p._switchToTextParsing(token, Tokenizer.MODE.SCRIPT_DATA);\n\n    else if (tn === $.TEMPLATE) {\n        p._insertTemplate(token, NS.HTML);\n        p.activeFormattingElements.insertMarker();\n        p.framesetOk = false;\n        p.insertionMode = IN_TEMPLATE_MODE;\n        p._pushTmplInsertionMode(IN_TEMPLATE_MODE);\n    }\n\n    else if (tn !== $.HEAD)\n        tokenInHead(p, token);\n}\n\nfunction endTagInHead(p, token) {\n    var tn = token.tagName;\n\n    if (tn === $.HEAD) {\n        p.openElements.pop();\n        p.insertionMode = AFTER_HEAD_MODE;\n    }\n\n    else if (tn === $.BODY || tn === $.BR || tn === $.HTML)\n        tokenInHead(p, token);\n\n    else if (tn === $.TEMPLATE && p.openElements.tmplCount > 0) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p._popTmplInsertionMode();\n        p._resetInsertionMode();\n    }\n}\n\nfunction tokenInHead(p, token) {\n    p.openElements.pop();\n    p.insertionMode = AFTER_HEAD_MODE;\n    p._processToken(token);\n}\n\n\n//12.2.5.4.6 The \"after head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterHead(p, token) {\n    var tn = token.tagName;\n\n    if (tn === $.HTML)\n        startTagInBody(p, token);\n\n    else if (tn === $.BODY) {\n        p._insertElement(token, NS.HTML);\n        p.framesetOk = false;\n        p.insertionMode = IN_BODY_MODE;\n    }\n\n    else if (tn === $.FRAMESET) {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = IN_FRAMESET_MODE;\n    }\n\n    else if (tn === $.BASE || tn === $.BASEFONT || tn === $.BGSOUND || tn === $.LINK || tn === $.META ||\n             tn === $.NOFRAMES || tn === $.SCRIPT || tn === $.STYLE || tn === $.TEMPLATE || tn === $.TITLE) {\n        p.openElements.push(p.headElement);\n        startTagInHead(p, token);\n        p.openElements.remove(p.headElement);\n    }\n\n    else if (tn !== $.HEAD)\n        tokenAfterHead(p, token);\n}\n\nfunction endTagAfterHead(p, token) {\n    var tn = token.tagName;\n\n    if (tn === $.BODY || tn === $.HTML || tn === $.BR)\n        tokenAfterHead(p, token);\n\n    else if (tn === $.TEMPLATE)\n        endTagInHead(p, token);\n}\n\nfunction tokenAfterHead(p, token) {\n    p._insertFakeElement($.BODY);\n    p.insertionMode = IN_BODY_MODE;\n    p._processToken(token);\n}\n\n\n//12.2.5.4.7 The \"in body\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n}\n\nfunction characterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\n\nfunction htmlStartTagInBody(p, token) {\n    if (p.openElements.tmplCount === 0)\n        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\n}\n\nfunction bodyStartTagInBody(p, token) {\n    var bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n\n    if (bodyElement && p.openElements.tmplCount === 0) {\n        p.framesetOk = false;\n        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\n    }\n}\n\nfunction framesetStartTagInBody(p, token) {\n    var bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n\n    if (p.framesetOk && bodyElement) {\n        p.treeAdapter.detachNode(bodyElement);\n        p.openElements.popAllUpToHtmlElement();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = IN_FRAMESET_MODE;\n    }\n}\n\nfunction addressStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P))\n        p._closePElement();\n\n    p._insertElement(token, NS.HTML);\n}\n\nfunction numberedHeaderStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P))\n        p._closePElement();\n\n    var tn = p.openElements.currentTagName;\n\n    if (tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6)\n        p.openElements.pop();\n\n    p._insertElement(token, NS.HTML);\n}\n\nfunction preStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P))\n        p._closePElement();\n\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.framesetOk = false;\n}\n\nfunction formStartTagInBody(p, token) {\n    var inTemplate = p.openElements.tmplCount > 0;\n\n    if (!p.formElement || inTemplate) {\n        if (p.openElements.hasInButtonScope($.P))\n            p._closePElement();\n\n        p._insertElement(token, NS.HTML);\n\n        if (!inTemplate)\n            p.formElement = p.openElements.current;\n    }\n}\n\nfunction listItemStartTagInBody(p, token) {\n    p.framesetOk = false;\n\n    var tn = token.tagName;\n\n    for (var i = p.openElements.stackTop; i >= 0; i--) {\n        var element = p.openElements.items[i],\n            elementTn = p.treeAdapter.getTagName(element),\n            closeTn = null;\n\n        if (tn === $.LI && elementTn === $.LI)\n            closeTn = $.LI;\n\n        else if ((tn === $.DD || tn === $.DT) && (elementTn === $.DD || elementTn === $.DT))\n            closeTn = elementTn;\n\n        if (closeTn) {\n            p.openElements.generateImpliedEndTagsWithExclusion(closeTn);\n            p.openElements.popUntilTagNamePopped(closeTn);\n            break;\n        }\n\n        if (elementTn !== $.ADDRESS && elementTn !== $.DIV && elementTn !== $.P && p._isSpecialElement(element))\n            break;\n    }\n\n    if (p.openElements.hasInButtonScope($.P))\n        p._closePElement();\n\n    p._insertElement(token, NS.HTML);\n}\n\nfunction plaintextStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P))\n        p._closePElement();\n\n    p._insertElement(token, NS.HTML);\n    p.tokenizer.state = Tokenizer.MODE.PLAINTEXT;\n}\n\nfunction buttonStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BUTTON)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped($.BUTTON);\n    }\n\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n}\n\nfunction aStartTagInBody(p, token) {\n    var activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName($.A);\n\n    if (activeElementEntry) {\n        callAdoptionAgency(p, token);\n        p.openElements.remove(activeElementEntry.element);\n        p.activeFormattingElements.removeEntry(activeElementEntry);\n    }\n\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\n\nfunction bStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\n\nfunction nobrStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n\n    if (p.openElements.hasInScope($.NOBR)) {\n        callAdoptionAgency(p, token);\n        p._reconstructActiveFormattingElements();\n    }\n\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\n\nfunction appletStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.insertMarker();\n    p.framesetOk = false;\n}\n\nfunction tableStartTagInBody(p, token) {\n    if (p.treeAdapter.getDocumentMode(p.document) !== HTML.DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope($.P))\n        p._closePElement();\n\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode = IN_TABLE_MODE;\n}\n\nfunction areaStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n}\n\nfunction inputStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n\n    var inputType = Tokenizer.getTokenAttr(token, ATTRS.TYPE);\n\n    if (!inputType || inputType.toLowerCase() !== HIDDEN_INPUT_TYPE)\n        p.framesetOk = false;\n\n}\n\nfunction paramStartTagInBody(p, token) {\n    p._appendElement(token, NS.HTML);\n}\n\nfunction hrStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P))\n        p._closePElement();\n\n    if (p.openElements.currentTagName === $.MENUITEM)\n        p.openElements.pop();\n\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n}\n\nfunction imageStartTagInBody(p, token) {\n    token.tagName = $.IMG;\n    areaStartTagInBody(p, token);\n}\n\nfunction textareaStartTagInBody(p, token) {\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.tokenizer.state = Tokenizer.MODE.RCDATA;\n    p.originalInsertionMode = p.insertionMode;\n    p.framesetOk = false;\n    p.insertionMode = TEXT_MODE;\n}\n\nfunction xmpStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P))\n        p._closePElement();\n\n    p._reconstructActiveFormattingElements();\n    p.framesetOk = false;\n    p._switchToTextParsing(token, Tokenizer.MODE.RAWTEXT);\n}\n\nfunction iframeStartTagInBody(p, token) {\n    p.framesetOk = false;\n    p._switchToTextParsing(token, Tokenizer.MODE.RAWTEXT);\n}\n\n//NOTE: here we assume that we always act as an user agent with enabled plugins, so we parse\n//<noembed> as a rawtext.\nfunction noembedStartTagInBody(p, token) {\n    p._switchToTextParsing(token, Tokenizer.MODE.RAWTEXT);\n}\n\nfunction selectStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n\n    if (p.insertionMode === IN_TABLE_MODE ||\n        p.insertionMode === IN_CAPTION_MODE ||\n        p.insertionMode === IN_TABLE_BODY_MODE ||\n        p.insertionMode === IN_ROW_MODE ||\n        p.insertionMode === IN_CELL_MODE)\n\n        p.insertionMode = IN_SELECT_IN_TABLE_MODE;\n\n    else\n        p.insertionMode = IN_SELECT_MODE;\n}\n\nfunction optgroupStartTagInBody(p, token) {\n    if (p.openElements.currentTagName === $.OPTION)\n        p.openElements.pop();\n\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\n\nfunction rbStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY))\n        p.openElements.generateImpliedEndTags();\n\n    p._insertElement(token, NS.HTML);\n}\n\nfunction rtStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY))\n        p.openElements.generateImpliedEndTagsWithExclusion($.RTC);\n\n    p._insertElement(token, NS.HTML);\n}\n\nfunction menuitemStartTagInBody(p, token) {\n    if (p.openElements.currentTagName === $.MENUITEM)\n        p.openElements.pop();\n\n    // TODO needs clarification, see https://github.com/whatwg/html/pull/907/files#r73505877\n    p._reconstructActiveFormattingElements();\n\n    p._insertElement(token, NS.HTML);\n}\n\nfunction menuStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P))\n        p._closePElement();\n\n    if (p.openElements.currentTagName === $.MENUITEM)\n        p.openElements.pop();\n\n    p._insertElement(token, NS.HTML);\n}\n\nfunction mathStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n\n    foreignContent.adjustTokenMathMLAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n\n    if (token.selfClosing)\n        p._appendElement(token, NS.MATHML);\n    else\n        p._insertElement(token, NS.MATHML);\n}\n\nfunction svgStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n\n    foreignContent.adjustTokenSVGAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n\n    if (token.selfClosing)\n        p._appendElement(token, NS.SVG);\n    else\n        p._insertElement(token, NS.SVG);\n}\n\nfunction genericStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\n\n//OPTIMIZATION: Integer comparisons are low-cost, so we can use very fast tag name length filters here.\n//It's faster than using dictionary.\nfunction startTagInBody(p, token) {\n    var tn = token.tagName;\n\n    switch (tn.length) {\n        case 1:\n            if (tn === $.I || tn === $.S || tn === $.B || tn === $.U)\n                bStartTagInBody(p, token);\n\n            else if (tn === $.P)\n                addressStartTagInBody(p, token);\n\n            else if (tn === $.A)\n                aStartTagInBody(p, token);\n\n            else\n                genericStartTagInBody(p, token);\n\n            break;\n\n        case 2:\n            if (tn === $.DL || tn === $.OL || tn === $.UL)\n                addressStartTagInBody(p, token);\n\n            else if (tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6)\n                numberedHeaderStartTagInBody(p, token);\n\n            else if (tn === $.LI || tn === $.DD || tn === $.DT)\n                listItemStartTagInBody(p, token);\n\n            else if (tn === $.EM || tn === $.TT)\n                bStartTagInBody(p, token);\n\n            else if (tn === $.BR)\n                areaStartTagInBody(p, token);\n\n            else if (tn === $.HR)\n                hrStartTagInBody(p, token);\n\n            else if (tn === $.RB)\n                rbStartTagInBody(p, token);\n\n            else if (tn === $.RT || tn === $.RP)\n                rtStartTagInBody(p, token);\n\n            else if (tn !== $.TH && tn !== $.TD && tn !== $.TR)\n                genericStartTagInBody(p, token);\n\n            break;\n\n        case 3:\n            if (tn === $.DIV || tn === $.DIR || tn === $.NAV)\n                addressStartTagInBody(p, token);\n\n            else if (tn === $.PRE)\n                preStartTagInBody(p, token);\n\n            else if (tn === $.BIG)\n                bStartTagInBody(p, token);\n\n            else if (tn === $.IMG || tn === $.WBR)\n                areaStartTagInBody(p, token);\n\n            else if (tn === $.XMP)\n                xmpStartTagInBody(p, token);\n\n            else if (tn === $.SVG)\n                svgStartTagInBody(p, token);\n\n            else if (tn === $.RTC)\n                rbStartTagInBody(p, token);\n\n            else if (tn !== $.COL)\n                genericStartTagInBody(p, token);\n\n            break;\n\n        case 4:\n            if (tn === $.HTML)\n                htmlStartTagInBody(p, token);\n\n            else if (tn === $.BASE || tn === $.LINK || tn === $.META)\n                startTagInHead(p, token);\n\n            else if (tn === $.BODY)\n                bodyStartTagInBody(p, token);\n\n            else if (tn === $.MAIN)\n                addressStartTagInBody(p, token);\n\n            else if (tn === $.FORM)\n                formStartTagInBody(p, token);\n\n            else if (tn === $.CODE || tn === $.FONT)\n                bStartTagInBody(p, token);\n\n            else if (tn === $.NOBR)\n                nobrStartTagInBody(p, token);\n\n            else if (tn === $.AREA)\n                areaStartTagInBody(p, token);\n\n            else if (tn === $.MATH)\n                mathStartTagInBody(p, token);\n\n            else if (tn === $.MENU)\n                menuStartTagInBody(p, token);\n\n            else if (tn !== $.HEAD)\n                genericStartTagInBody(p, token);\n\n            break;\n\n        case 5:\n            if (tn === $.STYLE || tn === $.TITLE)\n                startTagInHead(p, token);\n\n            else if (tn === $.ASIDE)\n                addressStartTagInBody(p, token);\n\n            else if (tn === $.SMALL)\n                bStartTagInBody(p, token);\n\n            else if (tn === $.TABLE)\n                tableStartTagInBody(p, token);\n\n            else if (tn === $.EMBED)\n                areaStartTagInBody(p, token);\n\n            else if (tn === $.INPUT)\n                inputStartTagInBody(p, token);\n\n            else if (tn === $.PARAM || tn === $.TRACK)\n                paramStartTagInBody(p, token);\n\n            else if (tn === $.IMAGE)\n                imageStartTagInBody(p, token);\n\n            else if (tn !== $.FRAME && tn !== $.TBODY && tn !== $.TFOOT && tn !== $.THEAD)\n                genericStartTagInBody(p, token);\n\n            break;\n\n        case 6:\n            if (tn === $.SCRIPT)\n                startTagInHead(p, token);\n\n            else if (tn === $.CENTER || tn === $.FIGURE || tn === $.FOOTER || tn === $.HEADER || tn === $.HGROUP)\n                addressStartTagInBody(p, token);\n\n            else if (tn === $.BUTTON)\n                buttonStartTagInBody(p, token);\n\n            else if (tn === $.STRIKE || tn === $.STRONG)\n                bStartTagInBody(p, token);\n\n            else if (tn === $.APPLET || tn === $.OBJECT)\n                appletStartTagInBody(p, token);\n\n            else if (tn === $.KEYGEN)\n                areaStartTagInBody(p, token);\n\n            else if (tn === $.SOURCE)\n                paramStartTagInBody(p, token);\n\n            else if (tn === $.IFRAME)\n                iframeStartTagInBody(p, token);\n\n            else if (tn === $.SELECT)\n                selectStartTagInBody(p, token);\n\n            else if (tn === $.OPTION)\n                optgroupStartTagInBody(p, token);\n\n            else\n                genericStartTagInBody(p, token);\n\n            break;\n\n        case 7:\n            if (tn === $.BGSOUND)\n                startTagInHead(p, token);\n\n            else if (tn === $.DETAILS || tn === $.ADDRESS || tn === $.ARTICLE || tn === $.SECTION || tn === $.SUMMARY)\n                addressStartTagInBody(p, token);\n\n            else if (tn === $.LISTING)\n                preStartTagInBody(p, token);\n\n            else if (tn === $.MARQUEE)\n                appletStartTagInBody(p, token);\n\n            else if (tn === $.NOEMBED)\n                noembedStartTagInBody(p, token);\n\n            else if (tn !== $.CAPTION)\n                genericStartTagInBody(p, token);\n\n            break;\n\n        case 8:\n            if (tn === $.BASEFONT)\n                startTagInHead(p, token);\n\n            else if (tn === $.MENUITEM)\n                menuitemStartTagInBody(p, token);\n\n            else if (tn === $.FRAMESET)\n                framesetStartTagInBody(p, token);\n\n            else if (tn === $.FIELDSET)\n                addressStartTagInBody(p, token);\n\n            else if (tn === $.TEXTAREA)\n                textareaStartTagInBody(p, token);\n\n            else if (tn === $.TEMPLATE)\n                startTagInHead(p, token);\n\n            else if (tn === $.NOSCRIPT)\n                noembedStartTagInBody(p, token);\n\n            else if (tn === $.OPTGROUP)\n                optgroupStartTagInBody(p, token);\n\n            else if (tn !== $.COLGROUP)\n                genericStartTagInBody(p, token);\n\n            break;\n\n        case 9:\n            if (tn === $.PLAINTEXT)\n                plaintextStartTagInBody(p, token);\n\n            else\n                genericStartTagInBody(p, token);\n\n            break;\n\n        case 10:\n            if (tn === $.BLOCKQUOTE || tn === $.FIGCAPTION)\n                addressStartTagInBody(p, token);\n\n            else\n                genericStartTagInBody(p, token);\n\n            break;\n\n        default:\n            genericStartTagInBody(p, token);\n    }\n}\n\nfunction bodyEndTagInBody(p) {\n    if (p.openElements.hasInScope($.BODY))\n        p.insertionMode = AFTER_BODY_MODE;\n}\n\nfunction htmlEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = AFTER_BODY_MODE;\n        p._processToken(token);\n    }\n}\n\nfunction addressEndTagInBody(p, token) {\n    var tn = token.tagName;\n\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\n\nfunction formEndTagInBody(p) {\n    var inTemplate = p.openElements.tmplCount > 0,\n        formElement = p.formElement;\n\n    if (!inTemplate)\n        p.formElement = null;\n\n    if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {\n        p.openElements.generateImpliedEndTags();\n\n        if (inTemplate)\n            p.openElements.popUntilTagNamePopped($.FORM);\n\n        else\n            p.openElements.remove(formElement);\n    }\n}\n\nfunction pEndTagInBody(p) {\n    if (!p.openElements.hasInButtonScope($.P))\n        p._insertFakeElement($.P);\n\n    p._closePElement();\n}\n\nfunction liEndTagInBody(p) {\n    if (p.openElements.hasInListItemScope($.LI)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.LI);\n        p.openElements.popUntilTagNamePopped($.LI);\n    }\n}\n\nfunction ddEndTagInBody(p, token) {\n    var tn = token.tagName;\n\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(tn);\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\n\nfunction numberedHeaderEndTagInBody(p) {\n    if (p.openElements.hasNumberedHeaderInScope()) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilNumberedHeaderPopped();\n    }\n}\n\nfunction appletEndTagInBody(p, token) {\n    var tn = token.tagName;\n\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n        p.activeFormattingElements.clearToLastMarker();\n    }\n}\n\nfunction brEndTagInBody(p) {\n    p._reconstructActiveFormattingElements();\n    p._insertFakeElement($.BR);\n    p.openElements.pop();\n    p.framesetOk = false;\n}\n\nfunction genericEndTagInBody(p, token) {\n    var tn = token.tagName;\n\n    for (var i = p.openElements.stackTop; i > 0; i--) {\n        var element = p.openElements.items[i];\n\n        if (p.treeAdapter.getTagName(element) === tn) {\n            p.openElements.generateImpliedEndTagsWithExclusion(tn);\n            p.openElements.popUntilElementPopped(element);\n            break;\n        }\n\n        if (p._isSpecialElement(element))\n            break;\n    }\n}\n\n//OPTIMIZATION: Integer comparisons are low-cost, so we can use very fast tag name length filters here.\n//It's faster than using dictionary.\nfunction endTagInBody(p, token) {\n    var tn = token.tagName;\n\n    switch (tn.length) {\n        case 1:\n            if (tn === $.A || tn === $.B || tn === $.I || tn === $.S || tn === $.U)\n                callAdoptionAgency(p, token);\n\n            else if (tn === $.P)\n                pEndTagInBody(p, token);\n\n            else\n                genericEndTagInBody(p, token);\n\n            break;\n\n        case 2:\n            if (tn === $.DL || tn === $.UL || tn === $.OL)\n                addressEndTagInBody(p, token);\n\n            else if (tn === $.LI)\n                liEndTagInBody(p, token);\n\n            else if (tn === $.DD || tn === $.DT)\n                ddEndTagInBody(p, token);\n\n            else if (tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6)\n                numberedHeaderEndTagInBody(p, token);\n\n            else if (tn === $.BR)\n                brEndTagInBody(p, token);\n\n            else if (tn === $.EM || tn === $.TT)\n                callAdoptionAgency(p, token);\n\n            else\n                genericEndTagInBody(p, token);\n\n            break;\n\n        case 3:\n            if (tn === $.BIG)\n                callAdoptionAgency(p, token);\n\n            else if (tn === $.DIR || tn === $.DIV || tn === $.NAV)\n                addressEndTagInBody(p, token);\n\n            else\n                genericEndTagInBody(p, token);\n\n            break;\n\n        case 4:\n            if (tn === $.BODY)\n                bodyEndTagInBody(p, token);\n\n            else if (tn === $.HTML)\n                htmlEndTagInBody(p, token);\n\n            else if (tn === $.FORM)\n                formEndTagInBody(p, token);\n\n            else if (tn === $.CODE || tn === $.FONT || tn === $.NOBR)\n                callAdoptionAgency(p, token);\n\n            else if (tn === $.MAIN || tn === $.MENU)\n                addressEndTagInBody(p, token);\n\n            else\n                genericEndTagInBody(p, token);\n\n            break;\n\n        case 5:\n            if (tn === $.ASIDE)\n                addressEndTagInBody(p, token);\n\n            else if (tn === $.SMALL)\n                callAdoptionAgency(p, token);\n\n            else\n                genericEndTagInBody(p, token);\n\n            break;\n\n        case 6:\n            if (tn === $.CENTER || tn === $.FIGURE || tn === $.FOOTER || tn === $.HEADER || tn === $.HGROUP)\n                addressEndTagInBody(p, token);\n\n            else if (tn === $.APPLET || tn === $.OBJECT)\n                appletEndTagInBody(p, token);\n\n            else if (tn === $.STRIKE || tn === $.STRONG)\n                callAdoptionAgency(p, token);\n\n            else\n                genericEndTagInBody(p, token);\n\n            break;\n\n        case 7:\n            if (tn === $.ADDRESS || tn === $.ARTICLE || tn === $.DETAILS || tn === $.SECTION || tn === $.SUMMARY)\n                addressEndTagInBody(p, token);\n\n            else if (tn === $.MARQUEE)\n                appletEndTagInBody(p, token);\n\n            else\n                genericEndTagInBody(p, token);\n\n            break;\n\n        case 8:\n            if (tn === $.FIELDSET)\n                addressEndTagInBody(p, token);\n\n            else if (tn === $.TEMPLATE)\n                endTagInHead(p, token);\n\n            else\n                genericEndTagInBody(p, token);\n\n            break;\n\n        case 10:\n            if (tn === $.BLOCKQUOTE || tn === $.FIGCAPTION)\n                addressEndTagInBody(p, token);\n\n            else\n                genericEndTagInBody(p, token);\n\n            break;\n\n        default :\n            genericEndTagInBody(p, token);\n    }\n}\n\nfunction eofInBody(p, token) {\n    if (p.tmplInsertionModeStackTop > -1)\n        eofInTemplate(p, token);\n\n    else\n        p.stopped = true;\n}\n\n//12.2.5.4.8 The \"text\" insertion mode\n//------------------------------------------------------------------\nfunction endTagInText(p, token) {\n    if (token.tagName === $.SCRIPT)\n        p.pendingScript = p.openElements.current;\n\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n}\n\n\nfunction eofInText(p, token) {\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n    p._processToken(token);\n}\n\n\n//12.2.5.4.9 The \"in table\" insertion mode\n//------------------------------------------------------------------\nfunction characterInTable(p, token) {\n    var curTn = p.openElements.currentTagName;\n\n    if (curTn === $.TABLE || curTn === $.TBODY || curTn === $.TFOOT || curTn === $.THEAD || curTn === $.TR) {\n        p.pendingCharacterTokens = [];\n        p.hasNonWhitespacePendingCharacterToken = false;\n        p.originalInsertionMode = p.insertionMode;\n        p.insertionMode = IN_TABLE_TEXT_MODE;\n        p._processToken(token);\n    }\n\n    else\n        tokenInTable(p, token);\n}\n\nfunction captionStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p.activeFormattingElements.insertMarker();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = IN_CAPTION_MODE;\n}\n\nfunction colgroupStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = IN_COLUMN_GROUP_MODE;\n}\n\nfunction colStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement($.COLGROUP);\n    p.insertionMode = IN_COLUMN_GROUP_MODE;\n    p._processToken(token);\n}\n\nfunction tbodyStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = IN_TABLE_BODY_MODE;\n}\n\nfunction tdStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement($.TBODY);\n    p.insertionMode = IN_TABLE_BODY_MODE;\n    p._processToken(token);\n}\n\nfunction tableStartTagInTable(p, token) {\n    if (p.openElements.hasInTableScope($.TABLE)) {\n        p.openElements.popUntilTagNamePopped($.TABLE);\n        p._resetInsertionMode();\n        p._processToken(token);\n    }\n}\n\nfunction inputStartTagInTable(p, token) {\n    var inputType = Tokenizer.getTokenAttr(token, ATTRS.TYPE);\n\n    if (inputType && inputType.toLowerCase() === HIDDEN_INPUT_TYPE)\n        p._appendElement(token, NS.HTML);\n\n    else\n        tokenInTable(p, token);\n}\n\nfunction formStartTagInTable(p, token) {\n    if (!p.formElement && p.openElements.tmplCount === 0) {\n        p._insertElement(token, NS.HTML);\n        p.formElement = p.openElements.current;\n        p.openElements.pop();\n    }\n}\n\nfunction startTagInTable(p, token) {\n    var tn = token.tagName;\n\n    switch (tn.length) {\n        case 2:\n            if (tn === $.TD || tn === $.TH || tn === $.TR)\n                tdStartTagInTable(p, token);\n\n            else\n                tokenInTable(p, token);\n\n            break;\n\n        case 3:\n            if (tn === $.COL)\n                colStartTagInTable(p, token);\n\n            else\n                tokenInTable(p, token);\n\n            break;\n\n        case 4:\n            if (tn === $.FORM)\n                formStartTagInTable(p, token);\n\n            else\n                tokenInTable(p, token);\n\n            break;\n\n        case 5:\n            if (tn === $.TABLE)\n                tableStartTagInTable(p, token);\n\n            else if (tn === $.STYLE)\n                startTagInHead(p, token);\n\n            else if (tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD)\n                tbodyStartTagInTable(p, token);\n\n            else if (tn === $.INPUT)\n                inputStartTagInTable(p, token);\n\n            else\n                tokenInTable(p, token);\n\n            break;\n\n        case 6:\n            if (tn === $.SCRIPT)\n                startTagInHead(p, token);\n\n            else\n                tokenInTable(p, token);\n\n            break;\n\n        case 7:\n            if (tn === $.CAPTION)\n                captionStartTagInTable(p, token);\n\n            else\n                tokenInTable(p, token);\n\n            break;\n\n        case 8:\n            if (tn === $.COLGROUP)\n                colgroupStartTagInTable(p, token);\n\n            else if (tn === $.TEMPLATE)\n                startTagInHead(p, token);\n\n            else\n                tokenInTable(p, token);\n\n            break;\n\n        default:\n            tokenInTable(p, token);\n    }\n\n}\n\nfunction endTagInTable(p, token) {\n    var tn = token.tagName;\n\n    if (tn === $.TABLE) {\n        if (p.openElements.hasInTableScope($.TABLE)) {\n            p.openElements.popUntilTagNamePopped($.TABLE);\n            p._resetInsertionMode();\n        }\n    }\n\n    else if (tn === $.TEMPLATE)\n        endTagInHead(p, token);\n\n    else if (tn !== $.BODY && tn !== $.CAPTION && tn !== $.COL && tn !== $.COLGROUP && tn !== $.HTML &&\n             tn !== $.TBODY && tn !== $.TD && tn !== $.TFOOT && tn !== $.TH && tn !== $.THEAD && tn !== $.TR)\n        tokenInTable(p, token);\n}\n\nfunction tokenInTable(p, token) {\n    var savedFosterParentingState = p.fosterParentingEnabled;\n\n    p.fosterParentingEnabled = true;\n    p._processTokenInBodyMode(token);\n    p.fosterParentingEnabled = savedFosterParentingState;\n}\n\n\n//12.2.5.4.10 The \"in table text\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n}\n\nfunction characterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n    p.hasNonWhitespacePendingCharacterToken = true;\n}\n\nfunction tokenInTableText(p, token) {\n    var i = 0;\n\n    if (p.hasNonWhitespacePendingCharacterToken) {\n        for (; i < p.pendingCharacterTokens.length; i++)\n            tokenInTable(p, p.pendingCharacterTokens[i]);\n    }\n\n    else {\n        for (; i < p.pendingCharacterTokens.length; i++)\n            p._insertCharacters(p.pendingCharacterTokens[i]);\n    }\n\n    p.insertionMode = p.originalInsertionMode;\n    p._processToken(token);\n}\n\n\n//12.2.5.4.11 The \"in caption\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCaption(p, token) {\n    var tn = token.tagName;\n\n    if (tn === $.CAPTION || tn === $.COL || tn === $.COLGROUP || tn === $.TBODY ||\n        tn === $.TD || tn === $.TFOOT || tn === $.TH || tn === $.THEAD || tn === $.TR) {\n        if (p.openElements.hasInTableScope($.CAPTION)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped($.CAPTION);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = IN_TABLE_MODE;\n            p._processToken(token);\n        }\n    }\n\n    else\n        startTagInBody(p, token);\n}\n\nfunction endTagInCaption(p, token) {\n    var tn = token.tagName;\n\n    if (tn === $.CAPTION || tn === $.TABLE) {\n        if (p.openElements.hasInTableScope($.CAPTION)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped($.CAPTION);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = IN_TABLE_MODE;\n\n            if (tn === $.TABLE)\n                p._processToken(token);\n        }\n    }\n\n    else if (tn !== $.BODY && tn !== $.COL && tn !== $.COLGROUP && tn !== $.HTML && tn !== $.TBODY &&\n             tn !== $.TD && tn !== $.TFOOT && tn !== $.TH && tn !== $.THEAD && tn !== $.TR)\n        endTagInBody(p, token);\n}\n\n\n//12.2.5.4.12 The \"in column group\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInColumnGroup(p, token) {\n    var tn = token.tagName;\n\n    if (tn === $.HTML)\n        startTagInBody(p, token);\n\n    else if (tn === $.COL)\n        p._appendElement(token, NS.HTML);\n\n    else if (tn === $.TEMPLATE)\n        startTagInHead(p, token);\n\n    else\n        tokenInColumnGroup(p, token);\n}\n\nfunction endTagInColumnGroup(p, token) {\n    var tn = token.tagName;\n\n    if (tn === $.COLGROUP) {\n        if (p.openElements.currentTagName === $.COLGROUP) {\n            p.openElements.pop();\n            p.insertionMode = IN_TABLE_MODE;\n        }\n    }\n\n    else if (tn === $.TEMPLATE)\n        endTagInHead(p, token);\n\n    else if (tn !== $.COL)\n        tokenInColumnGroup(p, token);\n}\n\nfunction tokenInColumnGroup(p, token) {\n    if (p.openElements.currentTagName === $.COLGROUP) {\n        p.openElements.pop();\n        p.insertionMode = IN_TABLE_MODE;\n        p._processToken(token);\n    }\n}\n\n//12.2.5.4.13 The \"in table body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTableBody(p, token) {\n    var tn = token.tagName;\n\n    if (tn === $.TR) {\n        p.openElements.clearBackToTableBodyContext();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = IN_ROW_MODE;\n    }\n\n    else if (tn === $.TH || tn === $.TD) {\n        p.openElements.clearBackToTableBodyContext();\n        p._insertFakeElement($.TR);\n        p.insertionMode = IN_ROW_MODE;\n        p._processToken(token);\n    }\n\n    else if (tn === $.CAPTION || tn === $.COL || tn === $.COLGROUP ||\n             tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD) {\n\n        if (p.openElements.hasTableBodyContextInTableScope()) {\n            p.openElements.clearBackToTableBodyContext();\n            p.openElements.pop();\n            p.insertionMode = IN_TABLE_MODE;\n            p._processToken(token);\n        }\n    }\n\n    else\n        startTagInTable(p, token);\n}\n\nfunction endTagInTableBody(p, token) {\n    var tn = token.tagName;\n\n    if (tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.clearBackToTableBodyContext();\n            p.openElements.pop();\n            p.insertionMode = IN_TABLE_MODE;\n        }\n    }\n\n    else if (tn === $.TABLE) {\n        if (p.openElements.hasTableBodyContextInTableScope()) {\n            p.openElements.clearBackToTableBodyContext();\n            p.openElements.pop();\n            p.insertionMode = IN_TABLE_MODE;\n            p._processToken(token);\n        }\n    }\n\n    else if (tn !== $.BODY && tn !== $.CAPTION && tn !== $.COL && tn !== $.COLGROUP ||\n             tn !== $.HTML && tn !== $.TD && tn !== $.TH && tn !== $.TR)\n        endTagInTable(p, token);\n}\n\n//12.2.5.4.14 The \"in row\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInRow(p, token) {\n    var tn = token.tagName;\n\n    if (tn === $.TH || tn === $.TD) {\n        p.openElements.clearBackToTableRowContext();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = IN_CELL_MODE;\n        p.activeFormattingElements.insertMarker();\n    }\n\n    else if (tn === $.CAPTION || tn === $.COL || tn === $.COLGROUP || tn === $.TBODY ||\n             tn === $.TFOOT || tn === $.THEAD || tn === $.TR) {\n        if (p.openElements.hasInTableScope($.TR)) {\n            p.openElements.clearBackToTableRowContext();\n            p.openElements.pop();\n            p.insertionMode = IN_TABLE_BODY_MODE;\n            p._processToken(token);\n        }\n    }\n\n    else\n        startTagInTable(p, token);\n}\n\nfunction endTagInRow(p, token) {\n    var tn = token.tagName;\n\n    if (tn === $.TR) {\n        if (p.openElements.hasInTableScope($.TR)) {\n            p.openElements.clearBackToTableRowContext();\n            p.openElements.pop();\n            p.insertionMode = IN_TABLE_BODY_MODE;\n        }\n    }\n\n    else if (tn === $.TABLE) {\n        if (p.openElements.hasInTableScope($.TR)) {\n            p.openElements.clearBackToTableRowContext();\n            p.openElements.pop();\n            p.insertionMode = IN_TABLE_BODY_MODE;\n            p._processToken(token);\n        }\n    }\n\n    else if (tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD) {\n        if (p.openElements.hasInTableScope(tn) || p.openElements.hasInTableScope($.TR)) {\n            p.openElements.clearBackToTableRowContext();\n            p.openElements.pop();\n            p.insertionMode = IN_TABLE_BODY_MODE;\n            p._processToken(token);\n        }\n    }\n\n    else if (tn !== $.BODY && tn !== $.CAPTION && tn !== $.COL && tn !== $.COLGROUP ||\n             tn !== $.HTML && tn !== $.TD && tn !== $.TH)\n        endTagInTable(p, token);\n}\n\n\n//12.2.5.4.15 The \"in cell\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCell(p, token) {\n    var tn = token.tagName;\n\n    if (tn === $.CAPTION || tn === $.COL || tn === $.COLGROUP || tn === $.TBODY ||\n        tn === $.TD || tn === $.TFOOT || tn === $.TH || tn === $.THEAD || tn === $.TR) {\n\n        if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {\n            p._closeTableCell();\n            p._processToken(token);\n        }\n    }\n\n    else\n        startTagInBody(p, token);\n}\n\nfunction endTagInCell(p, token) {\n    var tn = token.tagName;\n\n    if (tn === $.TD || tn === $.TH) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped(tn);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = IN_ROW_MODE;\n        }\n    }\n\n    else if (tn === $.TABLE || tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD || tn === $.TR) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p._closeTableCell();\n            p._processToken(token);\n        }\n    }\n\n    else if (tn !== $.BODY && tn !== $.CAPTION && tn !== $.COL && tn !== $.COLGROUP && tn !== $.HTML)\n        endTagInBody(p, token);\n}\n\n//12.2.5.4.16 The \"in select\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelect(p, token) {\n    var tn = token.tagName;\n\n    if (tn === $.HTML)\n        startTagInBody(p, token);\n\n    else if (tn === $.OPTION) {\n        if (p.openElements.currentTagName === $.OPTION)\n            p.openElements.pop();\n\n        p._insertElement(token, NS.HTML);\n    }\n\n    else if (tn === $.OPTGROUP) {\n        if (p.openElements.currentTagName === $.OPTION)\n            p.openElements.pop();\n\n        if (p.openElements.currentTagName === $.OPTGROUP)\n            p.openElements.pop();\n\n        p._insertElement(token, NS.HTML);\n    }\n\n    else if (tn === $.INPUT || tn === $.KEYGEN || tn === $.TEXTAREA || tn === $.SELECT) {\n        if (p.openElements.hasInSelectScope($.SELECT)) {\n            p.openElements.popUntilTagNamePopped($.SELECT);\n            p._resetInsertionMode();\n\n            if (tn !== $.SELECT)\n                p._processToken(token);\n        }\n    }\n\n    else if (tn === $.SCRIPT || tn === $.TEMPLATE)\n        startTagInHead(p, token);\n}\n\nfunction endTagInSelect(p, token) {\n    var tn = token.tagName;\n\n    if (tn === $.OPTGROUP) {\n        var prevOpenElement = p.openElements.items[p.openElements.stackTop - 1],\n            prevOpenElementTn = prevOpenElement && p.treeAdapter.getTagName(prevOpenElement);\n\n        if (p.openElements.currentTagName === $.OPTION && prevOpenElementTn === $.OPTGROUP)\n            p.openElements.pop();\n\n        if (p.openElements.currentTagName === $.OPTGROUP)\n            p.openElements.pop();\n    }\n\n    else if (tn === $.OPTION) {\n        if (p.openElements.currentTagName === $.OPTION)\n            p.openElements.pop();\n    }\n\n    else if (tn === $.SELECT && p.openElements.hasInSelectScope($.SELECT)) {\n        p.openElements.popUntilTagNamePopped($.SELECT);\n        p._resetInsertionMode();\n    }\n\n    else if (tn === $.TEMPLATE)\n        endTagInHead(p, token);\n}\n\n//12.2.5.4.17 The \"in select in table\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelectInTable(p, token) {\n    var tn = token.tagName;\n\n    if (tn === $.CAPTION || tn === $.TABLE || tn === $.TBODY || tn === $.TFOOT ||\n        tn === $.THEAD || tn === $.TR || tn === $.TD || tn === $.TH) {\n        p.openElements.popUntilTagNamePopped($.SELECT);\n        p._resetInsertionMode();\n        p._processToken(token);\n    }\n\n    else\n        startTagInSelect(p, token);\n}\n\nfunction endTagInSelectInTable(p, token) {\n    var tn = token.tagName;\n\n    if (tn === $.CAPTION || tn === $.TABLE || tn === $.TBODY || tn === $.TFOOT ||\n        tn === $.THEAD || tn === $.TR || tn === $.TD || tn === $.TH) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.popUntilTagNamePopped($.SELECT);\n            p._resetInsertionMode();\n            p._processToken(token);\n        }\n    }\n\n    else\n        endTagInSelect(p, token);\n}\n\n//12.2.5.4.18 The \"in template\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTemplate(p, token) {\n    var tn = token.tagName;\n\n    if (tn === $.BASE || tn === $.BASEFONT || tn === $.BGSOUND || tn === $.LINK || tn === $.META ||\n        tn === $.NOFRAMES || tn === $.SCRIPT || tn === $.STYLE || tn === $.TEMPLATE || tn === $.TITLE)\n        startTagInHead(p, token);\n\n    else {\n        var newInsertionMode = TEMPLATE_INSERTION_MODE_SWITCH_MAP[tn] || IN_BODY_MODE;\n\n        p._popTmplInsertionMode();\n        p._pushTmplInsertionMode(newInsertionMode);\n        p.insertionMode = newInsertionMode;\n        p._processToken(token);\n    }\n}\n\nfunction endTagInTemplate(p, token) {\n    if (token.tagName === $.TEMPLATE)\n        endTagInHead(p, token);\n}\n\nfunction eofInTemplate(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p._popTmplInsertionMode();\n        p._resetInsertionMode();\n        p._processToken(token);\n    }\n\n    else\n        p.stopped = true;\n}\n\n\n//12.2.5.4.19 The \"after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterBody(p, token) {\n    if (token.tagName === $.HTML)\n        startTagInBody(p, token);\n\n    else\n        tokenAfterBody(p, token);\n}\n\nfunction endTagAfterBody(p, token) {\n    if (token.tagName === $.HTML) {\n        if (!p.fragmentContext)\n            p.insertionMode = AFTER_AFTER_BODY_MODE;\n    }\n\n    else\n        tokenAfterBody(p, token);\n}\n\nfunction tokenAfterBody(p, token) {\n    p.insertionMode = IN_BODY_MODE;\n    p._processToken(token);\n}\n\n//12.2.5.4.20 The \"in frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInFrameset(p, token) {\n    var tn = token.tagName;\n\n    if (tn === $.HTML)\n        startTagInBody(p, token);\n\n    else if (tn === $.FRAMESET)\n        p._insertElement(token, NS.HTML);\n\n    else if (tn === $.FRAME)\n        p._appendElement(token, NS.HTML);\n\n    else if (tn === $.NOFRAMES)\n        startTagInHead(p, token);\n}\n\nfunction endTagInFrameset(p, token) {\n    if (token.tagName === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\n        p.openElements.pop();\n\n        if (!p.fragmentContext && p.openElements.currentTagName !== $.FRAMESET)\n            p.insertionMode = AFTER_FRAMESET_MODE;\n    }\n}\n\n//12.2.5.4.21 The \"after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterFrameset(p, token) {\n    var tn = token.tagName;\n\n    if (tn === $.HTML)\n        startTagInBody(p, token);\n\n    else if (tn === $.NOFRAMES)\n        startTagInHead(p, token);\n}\n\nfunction endTagAfterFrameset(p, token) {\n    if (token.tagName === $.HTML)\n        p.insertionMode = AFTER_AFTER_FRAMESET_MODE;\n}\n\n//12.2.5.4.22 The \"after after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterBody(p, token) {\n    if (token.tagName === $.HTML)\n        startTagInBody(p, token);\n\n    else\n        tokenAfterAfterBody(p, token);\n}\n\nfunction tokenAfterAfterBody(p, token) {\n    p.insertionMode = IN_BODY_MODE;\n    p._processToken(token);\n}\n\n//12.2.5.4.23 The \"after after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterFrameset(p, token) {\n    var tn = token.tagName;\n\n    if (tn === $.HTML)\n        startTagInBody(p, token);\n\n    else if (tn === $.NOFRAMES)\n        startTagInHead(p, token);\n}\n\n\n//12.2.5.5 The rules for parsing tokens in foreign content\n//------------------------------------------------------------------\nfunction nullCharacterInForeignContent(p, token) {\n    token.chars = UNICODE.REPLACEMENT_CHARACTER;\n    p._insertCharacters(token);\n}\n\nfunction characterInForeignContent(p, token) {\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\n\nfunction startTagInForeignContent(p, token) {\n    if (foreignContent.causesExit(token) && !p.fragmentContext) {\n        while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML && !p._isIntegrationPoint(p.openElements.current))\n            p.openElements.pop();\n\n        p._processToken(token);\n    }\n\n    else {\n        var current = p._getAdjustedCurrentElement(),\n            currentNs = p.treeAdapter.getNamespaceURI(current);\n\n        if (currentNs === NS.MATHML)\n            foreignContent.adjustTokenMathMLAttrs(token);\n\n        else if (currentNs === NS.SVG) {\n            foreignContent.adjustTokenSVGTagName(token);\n            foreignContent.adjustTokenSVGAttrs(token);\n        }\n\n        foreignContent.adjustTokenXMLAttrs(token);\n\n        if (token.selfClosing)\n            p._appendElement(token, currentNs);\n        else\n            p._insertElement(token, currentNs);\n    }\n}\n\nfunction endTagInForeignContent(p, token) {\n    for (var i = p.openElements.stackTop; i > 0; i--) {\n        var element = p.openElements.items[i];\n\n        if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {\n            p._processToken(token);\n            break;\n        }\n\n        if (p.treeAdapter.getTagName(element).toLowerCase() === token.tagName) {\n            p.openElements.popUntilElementPopped(element);\n            break;\n        }\n    }\n}\n\n\n//# sourceURL=webpack:///./node_modules/parse5/lib/parser/index.js?");

/***/ }),

/***/ "./node_modules/parse5/lib/parser/open_element_stack.js":
/*!**************************************************************!*\
  !*** ./node_modules/parse5/lib/parser/open_element_stack.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar HTML = __webpack_require__(/*! ../common/html */ \"./node_modules/parse5/lib/common/html.js\");\n\n//Aliases\nvar $ = HTML.TAG_NAMES,\n    NS = HTML.NAMESPACES;\n\n//Element utils\n\n//OPTIMIZATION: Integer comparisons are low-cost, so we can use very fast tag name length filters here.\n//It's faster than using dictionary.\nfunction isImpliedEndTagRequired(tn) {\n    switch (tn.length) {\n        case 1:\n            return tn === $.P;\n\n        case 2:\n            return tn === $.RB || tn === $.RP || tn === $.RT || tn === $.DD || tn === $.DT || tn === $.LI;\n\n        case 3:\n            return tn === $.RTC;\n\n        case 6:\n            return tn === $.OPTION;\n\n        case 8:\n            return tn === $.OPTGROUP || tn === $.MENUITEM;\n    }\n\n    return false;\n}\n\nfunction isScopingElement(tn, ns) {\n    switch (tn.length) {\n        case 2:\n            if (tn === $.TD || tn === $.TH)\n                return ns === NS.HTML;\n\n            else if (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS)\n                return ns === NS.MATHML;\n\n            break;\n\n        case 4:\n            if (tn === $.HTML)\n                return ns === NS.HTML;\n\n            else if (tn === $.DESC)\n                return ns === NS.SVG;\n\n            break;\n\n        case 5:\n            if (tn === $.TABLE)\n                return ns === NS.HTML;\n\n            else if (tn === $.MTEXT)\n                return ns === NS.MATHML;\n\n            else if (tn === $.TITLE)\n                return ns === NS.SVG;\n\n            break;\n\n        case 6:\n            return (tn === $.APPLET || tn === $.OBJECT) && ns === NS.HTML;\n\n        case 7:\n            return (tn === $.CAPTION || tn === $.MARQUEE) && ns === NS.HTML;\n\n        case 8:\n            return tn === $.TEMPLATE && ns === NS.HTML;\n\n        case 13:\n            return tn === $.FOREIGN_OBJECT && ns === NS.SVG;\n\n        case 14:\n            return tn === $.ANNOTATION_XML && ns === NS.MATHML;\n    }\n\n    return false;\n}\n\n//Stack of open elements\nvar OpenElementStack = module.exports = function (document, treeAdapter) {\n    this.stackTop = -1;\n    this.items = [];\n    this.current = document;\n    this.currentTagName = null;\n    this.currentTmplContent = null;\n    this.tmplCount = 0;\n    this.treeAdapter = treeAdapter;\n};\n\n//Index of element\nOpenElementStack.prototype._indexOf = function (element) {\n    var idx = -1;\n\n    for (var i = this.stackTop; i >= 0; i--) {\n        if (this.items[i] === element) {\n            idx = i;\n            break;\n        }\n    }\n    return idx;\n};\n\n//Update current element\nOpenElementStack.prototype._isInTemplate = function () {\n    return this.currentTagName === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n};\n\nOpenElementStack.prototype._updateCurrentElement = function () {\n    this.current = this.items[this.stackTop];\n    this.currentTagName = this.current && this.treeAdapter.getTagName(this.current);\n\n    this.currentTmplContent = this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : null;\n};\n\n//Mutations\nOpenElementStack.prototype.push = function (element) {\n    this.items[++this.stackTop] = element;\n    this._updateCurrentElement();\n\n    if (this._isInTemplate())\n        this.tmplCount++;\n\n};\n\nOpenElementStack.prototype.pop = function () {\n    this.stackTop--;\n\n    if (this.tmplCount > 0 && this._isInTemplate())\n        this.tmplCount--;\n\n    this._updateCurrentElement();\n};\n\nOpenElementStack.prototype.replace = function (oldElement, newElement) {\n    var idx = this._indexOf(oldElement);\n\n    this.items[idx] = newElement;\n\n    if (idx === this.stackTop)\n        this._updateCurrentElement();\n};\n\nOpenElementStack.prototype.insertAfter = function (referenceElement, newElement) {\n    var insertionIdx = this._indexOf(referenceElement) + 1;\n\n    this.items.splice(insertionIdx, 0, newElement);\n\n    if (insertionIdx === ++this.stackTop)\n        this._updateCurrentElement();\n};\n\nOpenElementStack.prototype.popUntilTagNamePopped = function (tagName) {\n    while (this.stackTop > -1) {\n        var tn = this.currentTagName,\n            ns = this.treeAdapter.getNamespaceURI(this.current);\n\n        this.pop();\n\n        if (tn === tagName && ns === NS.HTML)\n            break;\n    }\n};\n\nOpenElementStack.prototype.popUntilElementPopped = function (element) {\n    while (this.stackTop > -1) {\n        var poppedElement = this.current;\n\n        this.pop();\n\n        if (poppedElement === element)\n            break;\n    }\n};\n\nOpenElementStack.prototype.popUntilNumberedHeaderPopped = function () {\n    while (this.stackTop > -1) {\n        var tn = this.currentTagName,\n            ns = this.treeAdapter.getNamespaceURI(this.current);\n\n        this.pop();\n\n        if (tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6 && ns === NS.HTML)\n            break;\n    }\n};\n\nOpenElementStack.prototype.popUntilTableCellPopped = function () {\n    while (this.stackTop > -1) {\n        var tn = this.currentTagName,\n            ns = this.treeAdapter.getNamespaceURI(this.current);\n\n        this.pop();\n\n        if (tn === $.TD || tn === $.TH && ns === NS.HTML)\n            break;\n    }\n};\n\nOpenElementStack.prototype.popAllUpToHtmlElement = function () {\n    //NOTE: here we assume that root <html> element is always first in the open element stack, so\n    //we perform this fast stack clean up.\n    this.stackTop = 0;\n    this._updateCurrentElement();\n};\n\nOpenElementStack.prototype.clearBackToTableContext = function () {\n    while (this.currentTagName !== $.TABLE &&\n           this.currentTagName !== $.TEMPLATE &&\n           this.currentTagName !== $.HTML ||\n           this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML)\n        this.pop();\n};\n\nOpenElementStack.prototype.clearBackToTableBodyContext = function () {\n    while (this.currentTagName !== $.TBODY &&\n           this.currentTagName !== $.TFOOT &&\n           this.currentTagName !== $.THEAD &&\n           this.currentTagName !== $.TEMPLATE &&\n           this.currentTagName !== $.HTML ||\n           this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML)\n        this.pop();\n};\n\nOpenElementStack.prototype.clearBackToTableRowContext = function () {\n    while (this.currentTagName !== $.TR &&\n           this.currentTagName !== $.TEMPLATE &&\n           this.currentTagName !== $.HTML ||\n           this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML)\n        this.pop();\n};\n\nOpenElementStack.prototype.remove = function (element) {\n    for (var i = this.stackTop; i >= 0; i--) {\n        if (this.items[i] === element) {\n            this.items.splice(i, 1);\n            this.stackTop--;\n            this._updateCurrentElement();\n            break;\n        }\n    }\n};\n\n//Search\nOpenElementStack.prototype.tryPeekProperlyNestedBodyElement = function () {\n    //Properly nested <body> element (should be second element in stack).\n    var element = this.items[1];\n\n    return element && this.treeAdapter.getTagName(element) === $.BODY ? element : null;\n};\n\nOpenElementStack.prototype.contains = function (element) {\n    return this._indexOf(element) > -1;\n};\n\nOpenElementStack.prototype.getCommonAncestor = function (element) {\n    var elementIdx = this._indexOf(element);\n\n    return --elementIdx >= 0 ? this.items[elementIdx] : null;\n};\n\nOpenElementStack.prototype.isRootHtmlElementCurrent = function () {\n    return this.stackTop === 0 && this.currentTagName === $.HTML;\n};\n\n//Element in scope\nOpenElementStack.prototype.hasInScope = function (tagName) {\n    for (var i = this.stackTop; i >= 0; i--) {\n        var tn = this.treeAdapter.getTagName(this.items[i]),\n            ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n        if (tn === tagName && ns === NS.HTML)\n            return true;\n\n        if (isScopingElement(tn, ns))\n            return false;\n    }\n\n    return true;\n};\n\nOpenElementStack.prototype.hasNumberedHeaderInScope = function () {\n    for (var i = this.stackTop; i >= 0; i--) {\n        var tn = this.treeAdapter.getTagName(this.items[i]),\n            ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n        if ((tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6) && ns === NS.HTML)\n            return true;\n\n        if (isScopingElement(tn, ns))\n            return false;\n    }\n\n    return true;\n};\n\nOpenElementStack.prototype.hasInListItemScope = function (tagName) {\n    for (var i = this.stackTop; i >= 0; i--) {\n        var tn = this.treeAdapter.getTagName(this.items[i]),\n            ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n        if (tn === tagName && ns === NS.HTML)\n            return true;\n\n        if ((tn === $.UL || tn === $.OL) && ns === NS.HTML || isScopingElement(tn, ns))\n            return false;\n    }\n\n    return true;\n};\n\nOpenElementStack.prototype.hasInButtonScope = function (tagName) {\n    for (var i = this.stackTop; i >= 0; i--) {\n        var tn = this.treeAdapter.getTagName(this.items[i]),\n            ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n        if (tn === tagName && ns === NS.HTML)\n            return true;\n\n        if (tn === $.BUTTON && ns === NS.HTML || isScopingElement(tn, ns))\n            return false;\n    }\n\n    return true;\n};\n\nOpenElementStack.prototype.hasInTableScope = function (tagName) {\n    for (var i = this.stackTop; i >= 0; i--) {\n        var tn = this.treeAdapter.getTagName(this.items[i]),\n            ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n        if (ns !== NS.HTML)\n            continue;\n\n        if (tn === tagName)\n            return true;\n\n        if (tn === $.TABLE || tn === $.TEMPLATE || tn === $.HTML)\n            return false;\n    }\n\n    return true;\n};\n\nOpenElementStack.prototype.hasTableBodyContextInTableScope = function () {\n    for (var i = this.stackTop; i >= 0; i--) {\n        var tn = this.treeAdapter.getTagName(this.items[i]),\n            ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n        if (ns !== NS.HTML)\n            continue;\n\n        if (tn === $.TBODY || tn === $.THEAD || tn === $.TFOOT)\n            return true;\n\n        if (tn === $.TABLE || tn === $.HTML)\n            return false;\n    }\n\n    return true;\n};\n\nOpenElementStack.prototype.hasInSelectScope = function (tagName) {\n    for (var i = this.stackTop; i >= 0; i--) {\n        var tn = this.treeAdapter.getTagName(this.items[i]),\n            ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n        if (ns !== NS.HTML)\n            continue;\n\n        if (tn === tagName)\n            return true;\n\n        if (tn !== $.OPTION && tn !== $.OPTGROUP)\n            return false;\n    }\n\n    return true;\n};\n\n//Implied end tags\nOpenElementStack.prototype.generateImpliedEndTags = function () {\n    while (isImpliedEndTagRequired(this.currentTagName))\n        this.pop();\n};\n\nOpenElementStack.prototype.generateImpliedEndTagsWithExclusion = function (exclusionTagName) {\n    while (isImpliedEndTagRequired(this.currentTagName) && this.currentTagName !== exclusionTagName)\n        this.pop();\n};\n\n\n//# sourceURL=webpack:///./node_modules/parse5/lib/parser/open_element_stack.js?");

/***/ }),

/***/ "./node_modules/parse5/lib/parser/parser_stream.js":
/*!*********************************************************!*\
  !*** ./node_modules/parse5/lib/parser/parser_stream.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar WritableStream = __webpack_require__(/*! stream */ \"./node_modules/stream-browserify/index.js\").Writable,\n    inherits = __webpack_require__(/*! util */ \"./node_modules/util/util.js\").inherits,\n    Parser = __webpack_require__(/*! ./index */ \"./node_modules/parse5/lib/parser/index.js\");\n\nvar ParserStream = module.exports = function (options) {\n    WritableStream.call(this);\n\n    this.parser = new Parser(options);\n\n    this.lastChunkWritten = false;\n    this.writeCallback = null;\n    this.pausedByScript = false;\n\n    this.document = this.parser.treeAdapter.createDocument();\n\n    this.pendingHtmlInsertions = [];\n\n    this._resume = this._resume.bind(this);\n    this._documentWrite = this._documentWrite.bind(this);\n    this._scriptHandler = this._scriptHandler.bind(this);\n\n    this.parser._bootstrap(this.document, null);\n};\n\ninherits(ParserStream, WritableStream);\n\n//WritableStream implementation\nParserStream.prototype._write = function (chunk, encoding, callback) {\n    this.writeCallback = callback;\n    this.parser.tokenizer.write(chunk.toString('utf8'), this.lastChunkWritten);\n    this._runParsingLoop();\n};\n\nParserStream.prototype.end = function (chunk, encoding, callback) {\n    this.lastChunkWritten = true;\n    WritableStream.prototype.end.call(this, chunk || '', encoding, callback);\n};\n\n//Scriptable parser implementation\nParserStream.prototype._runParsingLoop = function () {\n    this.parser.runParsingLoopForCurrentChunk(this.writeCallback, this._scriptHandler);\n};\n\nParserStream.prototype._resume = function () {\n    if (!this.pausedByScript)\n        throw new Error('Parser was already resumed');\n\n    while (this.pendingHtmlInsertions.length) {\n        var html = this.pendingHtmlInsertions.pop();\n\n        this.parser.tokenizer.insertHtmlAtCurrentPos(html);\n    }\n\n    this.pausedByScript = false;\n\n    //NOTE: keep parsing if we don't wait for the next input chunk\n    if (this.parser.tokenizer.active)\n        this._runParsingLoop();\n};\n\nParserStream.prototype._documentWrite = function (html) {\n    if (!this.parser.stopped)\n        this.pendingHtmlInsertions.push(html);\n};\n\nParserStream.prototype._scriptHandler = function (scriptElement) {\n    if (this.listeners('script').length) {\n        this.pausedByScript = true;\n        this.emit('script', scriptElement, this._documentWrite, this._resume);\n    }\n    else\n        this._runParsingLoop();\n};\n\n\n\n//# sourceURL=webpack:///./node_modules/parse5/lib/parser/parser_stream.js?");

/***/ }),

/***/ "./node_modules/parse5/lib/parser/plain_text_conversion_stream.js":
/*!************************************************************************!*\
  !*** ./node_modules/parse5/lib/parser/plain_text_conversion_stream.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar ParserStream = __webpack_require__(/*! ./parser_stream */ \"./node_modules/parse5/lib/parser/parser_stream.js\"),\n    inherits = __webpack_require__(/*! util */ \"./node_modules/util/util.js\").inherits,\n    $ = __webpack_require__(/*! ../common/html */ \"./node_modules/parse5/lib/common/html.js\").TAG_NAMES;\n\nvar PlainTextConversionStream = module.exports = function (options) {\n    ParserStream.call(this, options);\n\n    // NOTE: see https://html.spec.whatwg.org/#read-text\n    this.parser._insertFakeElement($.HTML);\n    this.parser._insertFakeElement($.HEAD);\n    this.parser.openElements.pop();\n    this.parser._insertFakeElement($.BODY);\n    this.parser._insertFakeElement($.PRE);\n    this.parser.treeAdapter.insertText(this.parser.openElements.current, '\\n');\n    this.parser.switchToPlaintextParsing();\n};\n\ninherits(PlainTextConversionStream, ParserStream);\n\n\n//# sourceURL=webpack:///./node_modules/parse5/lib/parser/plain_text_conversion_stream.js?");

/***/ }),

/***/ "./node_modules/parse5/lib/sax/dev_null_stream.js":
/*!********************************************************!*\
  !*** ./node_modules/parse5/lib/sax/dev_null_stream.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar WritableStream = __webpack_require__(/*! stream */ \"./node_modules/stream-browserify/index.js\").Writable,\n    util = __webpack_require__(/*! util */ \"./node_modules/util/util.js\");\n\nvar DevNullStream = module.exports = function () {\n    WritableStream.call(this);\n};\n\nutil.inherits(DevNullStream, WritableStream);\n\nDevNullStream.prototype._write = function (chunk, encoding, cb) {\n    cb();\n};\n\n\n//# sourceURL=webpack:///./node_modules/parse5/lib/sax/dev_null_stream.js?");

/***/ }),

/***/ "./node_modules/parse5/lib/sax/index.js":
/*!**********************************************!*\
  !*** ./node_modules/parse5/lib/sax/index.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar TransformStream = __webpack_require__(/*! stream */ \"./node_modules/stream-browserify/index.js\").Transform,\n    DevNullStream = __webpack_require__(/*! ./dev_null_stream */ \"./node_modules/parse5/lib/sax/dev_null_stream.js\"),\n    inherits = __webpack_require__(/*! util */ \"./node_modules/util/util.js\").inherits,\n    Tokenizer = __webpack_require__(/*! ../tokenizer */ \"./node_modules/parse5/lib/tokenizer/index.js\"),\n    LocationInfoTokenizerMixin = __webpack_require__(/*! ../extensions/location_info/tokenizer_mixin */ \"./node_modules/parse5/lib/extensions/location_info/tokenizer_mixin.js\"),\n    ParserFeedbackSimulator = __webpack_require__(/*! ./parser_feedback_simulator */ \"./node_modules/parse5/lib/sax/parser_feedback_simulator.js\"),\n    mergeOptions = __webpack_require__(/*! ../utils/merge_options */ \"./node_modules/parse5/lib/utils/merge_options.js\");\n\nvar DEFAULT_OPTIONS = {\n    locationInfo: false\n};\n\nvar SAXParser = module.exports = function (options) {\n    TransformStream.call(this);\n\n    this.options = mergeOptions(DEFAULT_OPTIONS, options);\n\n    this.tokenizer = new Tokenizer(options);\n\n    if (this.options.locationInfo)\n        new LocationInfoTokenizerMixin(this.tokenizer);\n\n    this.parserFeedbackSimulator = new ParserFeedbackSimulator(this.tokenizer);\n\n    this.pendingText = null;\n    this.currentTokenLocation = void 0;\n\n    this.lastChunkWritten = false;\n    this.stopped = false;\n\n    // NOTE: always pipe stream to the /dev/null stream to avoid\n    // `highWaterMark` hit even if we don't have consumers.\n    // (see: https://github.com/inikulin/parse5/issues/97#issuecomment-171940774)\n    this.pipe(new DevNullStream());\n};\n\ninherits(SAXParser, TransformStream);\n\n//TransformStream implementation\nSAXParser.prototype._transform = function (chunk, encoding, callback) {\n    if (!this.stopped) {\n        this.tokenizer.write(chunk.toString('utf8'), this.lastChunkWritten);\n        this._runParsingLoop();\n    }\n\n    this.push(chunk);\n\n    callback();\n};\n\nSAXParser.prototype._flush = function (callback) {\n    callback();\n};\n\nSAXParser.prototype.end = function (chunk, encoding, callback) {\n    this.lastChunkWritten = true;\n    TransformStream.prototype.end.call(this, chunk, encoding, callback);\n};\n\nSAXParser.prototype.stop = function () {\n    this.stopped = true;\n};\n\n//Internals\nSAXParser.prototype._runParsingLoop = function () {\n    do {\n        var token = this.parserFeedbackSimulator.getNextToken();\n\n        if (token.type === Tokenizer.HIBERNATION_TOKEN)\n            break;\n\n        if (token.type === Tokenizer.CHARACTER_TOKEN ||\n            token.type === Tokenizer.WHITESPACE_CHARACTER_TOKEN ||\n            token.type === Tokenizer.NULL_CHARACTER_TOKEN) {\n\n            if (this.options.locationInfo) {\n                if (this.pendingText === null)\n                    this.currentTokenLocation = token.location;\n\n                else\n                    this.currentTokenLocation.endOffset = token.location.endOffset;\n            }\n\n            this.pendingText = (this.pendingText || '') + token.chars;\n        }\n\n        else {\n            this._emitPendingText();\n            this._handleToken(token);\n        }\n    } while (!this.stopped && token.type !== Tokenizer.EOF_TOKEN);\n};\n\nSAXParser.prototype._handleToken = function (token) {\n    if (this.options.locationInfo)\n        this.currentTokenLocation = token.location;\n\n    if (token.type === Tokenizer.START_TAG_TOKEN)\n        this.emit('startTag', token.tagName, token.attrs, token.selfClosing, this.currentTokenLocation);\n\n    else if (token.type === Tokenizer.END_TAG_TOKEN)\n        this.emit('endTag', token.tagName, this.currentTokenLocation);\n\n    else if (token.type === Tokenizer.COMMENT_TOKEN)\n        this.emit('comment', token.data, this.currentTokenLocation);\n\n    else if (token.type === Tokenizer.DOCTYPE_TOKEN)\n        this.emit('doctype', token.name, token.publicId, token.systemId, this.currentTokenLocation);\n};\n\nSAXParser.prototype._emitPendingText = function () {\n    if (this.pendingText !== null) {\n        this.emit('text', this.pendingText, this.currentTokenLocation);\n        this.pendingText = null;\n    }\n};\n\n\n//# sourceURL=webpack:///./node_modules/parse5/lib/sax/index.js?");

/***/ }),

/***/ "./node_modules/parse5/lib/sax/parser_feedback_simulator.js":
/*!******************************************************************!*\
  !*** ./node_modules/parse5/lib/sax/parser_feedback_simulator.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Tokenizer = __webpack_require__(/*! ../tokenizer */ \"./node_modules/parse5/lib/tokenizer/index.js\"),\n    foreignContent = __webpack_require__(/*! ../common/foreign_content */ \"./node_modules/parse5/lib/common/foreign_content.js\"),\n    UNICODE = __webpack_require__(/*! ../common/unicode */ \"./node_modules/parse5/lib/common/unicode.js\"),\n    HTML = __webpack_require__(/*! ../common/html */ \"./node_modules/parse5/lib/common/html.js\");\n\n\n//Aliases\nvar $ = HTML.TAG_NAMES,\n    NS = HTML.NAMESPACES;\n\n\n//ParserFeedbackSimulator\n//Simulates adjustment of the Tokenizer which performed by standard parser during tree construction.\nvar ParserFeedbackSimulator = module.exports = function (tokenizer) {\n    this.tokenizer = tokenizer;\n\n    this.namespaceStack = [];\n    this.namespaceStackTop = -1;\n    this._enterNamespace(NS.HTML);\n};\n\nParserFeedbackSimulator.prototype.getNextToken = function () {\n    var token = this.tokenizer.getNextToken();\n\n    if (token.type === Tokenizer.START_TAG_TOKEN)\n        this._handleStartTagToken(token);\n\n    else if (token.type === Tokenizer.END_TAG_TOKEN)\n        this._handleEndTagToken(token);\n\n    else if (token.type === Tokenizer.NULL_CHARACTER_TOKEN && this.inForeignContent) {\n        token.type = Tokenizer.CHARACTER_TOKEN;\n        token.chars = UNICODE.REPLACEMENT_CHARACTER;\n    }\n\n    else if (this.skipNextNewLine) {\n        if (token.type !== Tokenizer.HIBERNATION_TOKEN)\n            this.skipNextNewLine = false;\n\n        if (token.type === Tokenizer.WHITESPACE_CHARACTER_TOKEN && token.chars[0] === '\\n') {\n            if (token.chars.length === 1)\n                return this.getNextToken();\n\n            token.chars = token.chars.substr(1);\n        }\n    }\n\n    return token;\n};\n\n//Namespace stack mutations\nParserFeedbackSimulator.prototype._enterNamespace = function (namespace) {\n    this.namespaceStackTop++;\n    this.namespaceStack.push(namespace);\n\n    this.inForeignContent = namespace !== NS.HTML;\n    this.currentNamespace = namespace;\n    this.tokenizer.allowCDATA = this.inForeignContent;\n};\n\nParserFeedbackSimulator.prototype._leaveCurrentNamespace = function () {\n    this.namespaceStackTop--;\n    this.namespaceStack.pop();\n\n    this.currentNamespace = this.namespaceStack[this.namespaceStackTop];\n    this.inForeignContent = this.currentNamespace !== NS.HTML;\n    this.tokenizer.allowCDATA = this.inForeignContent;\n};\n\n//Token handlers\nParserFeedbackSimulator.prototype._ensureTokenizerMode = function (tn) {\n    if (tn === $.TEXTAREA || tn === $.TITLE)\n        this.tokenizer.state = Tokenizer.MODE.RCDATA;\n\n    else if (tn === $.PLAINTEXT)\n        this.tokenizer.state = Tokenizer.MODE.PLAINTEXT;\n\n    else if (tn === $.SCRIPT)\n        this.tokenizer.state = Tokenizer.MODE.SCRIPT_DATA;\n\n    else if (tn === $.STYLE || tn === $.IFRAME || tn === $.XMP ||\n             tn === $.NOEMBED || tn === $.NOFRAMES || tn === $.NOSCRIPT)\n        this.tokenizer.state = Tokenizer.MODE.RAWTEXT;\n};\n\nParserFeedbackSimulator.prototype._handleStartTagToken = function (token) {\n    var tn = token.tagName;\n\n    if (tn === $.SVG)\n        this._enterNamespace(NS.SVG);\n\n    else if (tn === $.MATH)\n        this._enterNamespace(NS.MATHML);\n\n    if (this.inForeignContent) {\n        if (foreignContent.causesExit(token)) {\n            this._leaveCurrentNamespace();\n            return;\n        }\n\n        var currentNs = this.currentNamespace;\n\n        if (currentNs === NS.MATHML)\n            foreignContent.adjustTokenMathMLAttrs(token);\n\n        else if (currentNs === NS.SVG) {\n            foreignContent.adjustTokenSVGTagName(token);\n            foreignContent.adjustTokenSVGAttrs(token);\n        }\n\n        foreignContent.adjustTokenXMLAttrs(token);\n\n        tn = token.tagName;\n\n        if (!token.selfClosing && foreignContent.isIntegrationPoint(tn, currentNs, token.attrs))\n            this._enterNamespace(NS.HTML);\n    }\n\n    else {\n        if (tn === $.PRE || tn === $.TEXTAREA || tn === $.LISTING)\n            this.skipNextNewLine = true;\n\n        else if (tn === $.IMAGE)\n            token.tagName = $.IMG;\n\n        this._ensureTokenizerMode(tn);\n    }\n};\n\nParserFeedbackSimulator.prototype._handleEndTagToken = function (token) {\n    var tn = token.tagName;\n\n    if (!this.inForeignContent) {\n        var previousNs = this.namespaceStack[this.namespaceStackTop - 1];\n\n        if (previousNs === NS.SVG && foreignContent.SVG_TAG_NAMES_ADJUSTMENT_MAP[tn])\n            tn = foreignContent.SVG_TAG_NAMES_ADJUSTMENT_MAP[tn];\n\n        //NOTE: check for exit from integration point\n        if (foreignContent.isIntegrationPoint(tn, previousNs, token.attrs))\n            this._leaveCurrentNamespace();\n    }\n\n    else if (tn === $.SVG && this.currentNamespace === NS.SVG ||\n             tn === $.MATH && this.currentNamespace === NS.MATHML)\n        this._leaveCurrentNamespace();\n\n    // NOTE: adjust end tag name as well for consistency\n    if (this.currentNamespace === NS.SVG)\n        foreignContent.adjustTokenSVGTagName(token);\n};\n\n\n//# sourceURL=webpack:///./node_modules/parse5/lib/sax/parser_feedback_simulator.js?");

/***/ }),

/***/ "./node_modules/parse5/lib/serializer/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/parse5/lib/serializer/index.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar defaultTreeAdapter = __webpack_require__(/*! ../tree_adapters/default */ \"./node_modules/parse5/lib/tree_adapters/default.js\"),\n    mergeOptions = __webpack_require__(/*! ../utils/merge_options */ \"./node_modules/parse5/lib/utils/merge_options.js\"),\n    doctype = __webpack_require__(/*! ../common/doctype */ \"./node_modules/parse5/lib/common/doctype.js\"),\n    HTML = __webpack_require__(/*! ../common/html */ \"./node_modules/parse5/lib/common/html.js\");\n\n//Aliases\nvar $ = HTML.TAG_NAMES,\n    NS = HTML.NAMESPACES;\n\n//Default serializer options\nvar DEFAULT_OPTIONS = {\n    treeAdapter: defaultTreeAdapter\n};\n\n//Escaping regexes\nvar AMP_REGEX = /&/g,\n    NBSP_REGEX = /\\u00a0/g,\n    DOUBLE_QUOTE_REGEX = /\"/g,\n    LT_REGEX = /</g,\n    GT_REGEX = />/g;\n\n//Serializer\nvar Serializer = module.exports = function (node, options) {\n    this.options = mergeOptions(DEFAULT_OPTIONS, options);\n    this.treeAdapter = this.options.treeAdapter;\n\n    this.html = '';\n    this.startNode = node;\n};\n\n// NOTE: exported as static method for the testing purposes\nSerializer.escapeString = function (str, attrMode) {\n    str = str\n        .replace(AMP_REGEX, '&amp;')\n        .replace(NBSP_REGEX, '&nbsp;');\n\n    if (attrMode)\n        str = str.replace(DOUBLE_QUOTE_REGEX, '&quot;');\n\n    else {\n        str = str\n            .replace(LT_REGEX, '&lt;')\n            .replace(GT_REGEX, '&gt;');\n    }\n\n    return str;\n};\n\n\n//API\nSerializer.prototype.serialize = function () {\n    this._serializeChildNodes(this.startNode);\n\n    return this.html;\n};\n\n\n//Internals\nSerializer.prototype._serializeChildNodes = function (parentNode) {\n    var childNodes = this.treeAdapter.getChildNodes(parentNode);\n\n    if (childNodes) {\n        for (var i = 0, cnLength = childNodes.length; i < cnLength; i++) {\n            var currentNode = childNodes[i];\n\n            if (this.treeAdapter.isElementNode(currentNode))\n                this._serializeElement(currentNode);\n\n            else if (this.treeAdapter.isTextNode(currentNode))\n                this._serializeTextNode(currentNode);\n\n            else if (this.treeAdapter.isCommentNode(currentNode))\n                this._serializeCommentNode(currentNode);\n\n            else if (this.treeAdapter.isDocumentTypeNode(currentNode))\n                this._serializeDocumentTypeNode(currentNode);\n        }\n    }\n};\n\nSerializer.prototype._serializeElement = function (node) {\n    var tn = this.treeAdapter.getTagName(node),\n        ns = this.treeAdapter.getNamespaceURI(node);\n\n    this.html += '<' + tn;\n    this._serializeAttributes(node);\n    this.html += '>';\n\n    if (tn !== $.AREA && tn !== $.BASE && tn !== $.BASEFONT && tn !== $.BGSOUND && tn !== $.BR && tn !== $.BR &&\n        tn !== $.COL && tn !== $.EMBED && tn !== $.FRAME && tn !== $.HR && tn !== $.IMG && tn !== $.INPUT &&\n        tn !== $.KEYGEN && tn !== $.LINK && tn !== $.MENUITEM && tn !== $.META && tn !== $.PARAM && tn !== $.SOURCE &&\n        tn !== $.TRACK && tn !== $.WBR) {\n\n        var childNodesHolder = tn === $.TEMPLATE && ns === NS.HTML ?\n            this.treeAdapter.getTemplateContent(node) :\n            node;\n\n        this._serializeChildNodes(childNodesHolder);\n        this.html += '</' + tn + '>';\n    }\n};\n\nSerializer.prototype._serializeAttributes = function (node) {\n    var attrs = this.treeAdapter.getAttrList(node);\n\n    for (var i = 0, attrsLength = attrs.length; i < attrsLength; i++) {\n        var attr = attrs[i],\n            value = Serializer.escapeString(attr.value, true);\n\n        this.html += ' ';\n\n        if (!attr.namespace)\n            this.html += attr.name;\n\n        else if (attr.namespace === NS.XML)\n            this.html += 'xml:' + attr.name;\n\n        else if (attr.namespace === NS.XMLNS) {\n            if (attr.name !== 'xmlns')\n                this.html += 'xmlns:';\n\n            this.html += attr.name;\n        }\n\n        else if (attr.namespace === NS.XLINK)\n            this.html += 'xlink:' + attr.name;\n\n        else\n            this.html += attr.namespace + ':' + attr.name;\n\n        this.html += '=\"' + value + '\"';\n    }\n};\n\nSerializer.prototype._serializeTextNode = function (node) {\n    var content = this.treeAdapter.getTextNodeContent(node),\n        parent = this.treeAdapter.getParentNode(node),\n        parentTn = void 0;\n\n    if (parent && this.treeAdapter.isElementNode(parent))\n        parentTn = this.treeAdapter.getTagName(parent);\n\n    if (parentTn === $.STYLE || parentTn === $.SCRIPT || parentTn === $.XMP || parentTn === $.IFRAME ||\n        parentTn === $.NOEMBED || parentTn === $.NOFRAMES || parentTn === $.PLAINTEXT || parentTn === $.NOSCRIPT)\n\n        this.html += content;\n\n    else\n        this.html += Serializer.escapeString(content, false);\n};\n\nSerializer.prototype._serializeCommentNode = function (node) {\n    this.html += '<!--' + this.treeAdapter.getCommentNodeContent(node) + '-->';\n};\n\nSerializer.prototype._serializeDocumentTypeNode = function (node) {\n    var name = this.treeAdapter.getDocumentTypeNodeName(node);\n\n    this.html += '<' + doctype.serializeContent(name, null, null) + '>';\n};\n\n\n//# sourceURL=webpack:///./node_modules/parse5/lib/serializer/index.js?");

/***/ }),

/***/ "./node_modules/parse5/lib/serializer/serializer_stream.js":
/*!*****************************************************************!*\
  !*** ./node_modules/parse5/lib/serializer/serializer_stream.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar ReadableStream = __webpack_require__(/*! stream */ \"./node_modules/stream-browserify/index.js\").Readable,\n    inherits = __webpack_require__(/*! util */ \"./node_modules/util/util.js\").inherits,\n    Serializer = __webpack_require__(/*! ./index */ \"./node_modules/parse5/lib/serializer/index.js\");\n\nvar SerializerStream = module.exports = function (node, options) {\n    ReadableStream.call(this);\n\n    this.serializer = new Serializer(node, options);\n\n    Object.defineProperty(this.serializer, 'html', {\n        //NOTE: To make `+=` concat operator work properly we define\n        //getter which always returns empty string\n        get: function () {\n            return '';\n        },\n        set: this.push.bind(this)\n    });\n};\n\ninherits(SerializerStream, ReadableStream);\n\n//Readable stream implementation\nSerializerStream.prototype._read = function () {\n    this.serializer.serialize();\n    this.push(null);\n};\n\n\n//# sourceURL=webpack:///./node_modules/parse5/lib/serializer/serializer_stream.js?");

/***/ }),

/***/ "./node_modules/parse5/lib/tokenizer/index.js":
/*!****************************************************!*\
  !*** ./node_modules/parse5/lib/tokenizer/index.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Preprocessor = __webpack_require__(/*! ./preprocessor */ \"./node_modules/parse5/lib/tokenizer/preprocessor.js\"),\n    UNICODE = __webpack_require__(/*! ../common/unicode */ \"./node_modules/parse5/lib/common/unicode.js\"),\n    neTree = __webpack_require__(/*! ./named_entity_data */ \"./node_modules/parse5/lib/tokenizer/named_entity_data.js\");\n\n//Aliases\nvar $ = UNICODE.CODE_POINTS,\n    $$ = UNICODE.CODE_POINT_SEQUENCES;\n\n//Replacement code points for numeric entities\nvar NUMERIC_ENTITY_REPLACEMENTS = {\n    0x00: 0xFFFD, 0x0D: 0x000D, 0x80: 0x20AC, 0x81: 0x0081, 0x82: 0x201A, 0x83: 0x0192, 0x84: 0x201E,\n    0x85: 0x2026, 0x86: 0x2020, 0x87: 0x2021, 0x88: 0x02C6, 0x89: 0x2030, 0x8A: 0x0160, 0x8B: 0x2039,\n    0x8C: 0x0152, 0x8D: 0x008D, 0x8E: 0x017D, 0x8F: 0x008F, 0x90: 0x0090, 0x91: 0x2018, 0x92: 0x2019,\n    0x93: 0x201C, 0x94: 0x201D, 0x95: 0x2022, 0x96: 0x2013, 0x97: 0x2014, 0x98: 0x02DC, 0x99: 0x2122,\n    0x9A: 0x0161, 0x9B: 0x203A, 0x9C: 0x0153, 0x9D: 0x009D, 0x9E: 0x017E, 0x9F: 0x0178\n};\n\n// Named entity tree flags\nvar HAS_DATA_FLAG = 1 << 0;\nvar DATA_DUPLET_FLAG = 1 << 1;\nvar HAS_BRANCHES_FLAG = 1 << 2;\nvar MAX_BRANCH_MARKER_VALUE = HAS_DATA_FLAG | DATA_DUPLET_FLAG | HAS_BRANCHES_FLAG;\n\n\n//States\nvar DATA_STATE = 'DATA_STATE',\n    CHARACTER_REFERENCE_IN_DATA_STATE = 'CHARACTER_REFERENCE_IN_DATA_STATE',\n    RCDATA_STATE = 'RCDATA_STATE',\n    CHARACTER_REFERENCE_IN_RCDATA_STATE = 'CHARACTER_REFERENCE_IN_RCDATA_STATE',\n    RAWTEXT_STATE = 'RAWTEXT_STATE',\n    SCRIPT_DATA_STATE = 'SCRIPT_DATA_STATE',\n    PLAINTEXT_STATE = 'PLAINTEXT_STATE',\n    TAG_OPEN_STATE = 'TAG_OPEN_STATE',\n    END_TAG_OPEN_STATE = 'END_TAG_OPEN_STATE',\n    TAG_NAME_STATE = 'TAG_NAME_STATE',\n    RCDATA_LESS_THAN_SIGN_STATE = 'RCDATA_LESS_THAN_SIGN_STATE',\n    RCDATA_END_TAG_OPEN_STATE = 'RCDATA_END_TAG_OPEN_STATE',\n    RCDATA_END_TAG_NAME_STATE = 'RCDATA_END_TAG_NAME_STATE',\n    RAWTEXT_LESS_THAN_SIGN_STATE = 'RAWTEXT_LESS_THAN_SIGN_STATE',\n    RAWTEXT_END_TAG_OPEN_STATE = 'RAWTEXT_END_TAG_OPEN_STATE',\n    RAWTEXT_END_TAG_NAME_STATE = 'RAWTEXT_END_TAG_NAME_STATE',\n    SCRIPT_DATA_LESS_THAN_SIGN_STATE = 'SCRIPT_DATA_LESS_THAN_SIGN_STATE',\n    SCRIPT_DATA_END_TAG_OPEN_STATE = 'SCRIPT_DATA_END_TAG_OPEN_STATE',\n    SCRIPT_DATA_END_TAG_NAME_STATE = 'SCRIPT_DATA_END_TAG_NAME_STATE',\n    SCRIPT_DATA_ESCAPE_START_STATE = 'SCRIPT_DATA_ESCAPE_START_STATE',\n    SCRIPT_DATA_ESCAPE_START_DASH_STATE = 'SCRIPT_DATA_ESCAPE_START_DASH_STATE',\n    SCRIPT_DATA_ESCAPED_STATE = 'SCRIPT_DATA_ESCAPED_STATE',\n    SCRIPT_DATA_ESCAPED_DASH_STATE = 'SCRIPT_DATA_ESCAPED_DASH_STATE',\n    SCRIPT_DATA_ESCAPED_DASH_DASH_STATE = 'SCRIPT_DATA_ESCAPED_DASH_DASH_STATE',\n    SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE = 'SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE',\n    SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE = 'SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE',\n    SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE = 'SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE',\n    SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE',\n    SCRIPT_DATA_DOUBLE_ESCAPED_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_STATE',\n    SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE',\n    SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE',\n    SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE',\n    SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE',\n    BEFORE_ATTRIBUTE_NAME_STATE = 'BEFORE_ATTRIBUTE_NAME_STATE',\n    ATTRIBUTE_NAME_STATE = 'ATTRIBUTE_NAME_STATE',\n    AFTER_ATTRIBUTE_NAME_STATE = 'AFTER_ATTRIBUTE_NAME_STATE',\n    BEFORE_ATTRIBUTE_VALUE_STATE = 'BEFORE_ATTRIBUTE_VALUE_STATE',\n    ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE = 'ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE',\n    ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE = 'ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE',\n    ATTRIBUTE_VALUE_UNQUOTED_STATE = 'ATTRIBUTE_VALUE_UNQUOTED_STATE',\n    CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE = 'CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE',\n    AFTER_ATTRIBUTE_VALUE_QUOTED_STATE = 'AFTER_ATTRIBUTE_VALUE_QUOTED_STATE',\n    SELF_CLOSING_START_TAG_STATE = 'SELF_CLOSING_START_TAG_STATE',\n    BOGUS_COMMENT_STATE = 'BOGUS_COMMENT_STATE',\n    BOGUS_COMMENT_STATE_CONTINUATION = 'BOGUS_COMMENT_STATE_CONTINUATION',\n    MARKUP_DECLARATION_OPEN_STATE = 'MARKUP_DECLARATION_OPEN_STATE',\n    COMMENT_START_STATE = 'COMMENT_START_STATE',\n    COMMENT_START_DASH_STATE = 'COMMENT_START_DASH_STATE',\n    COMMENT_STATE = 'COMMENT_STATE',\n    COMMENT_END_DASH_STATE = 'COMMENT_END_DASH_STATE',\n    COMMENT_END_STATE = 'COMMENT_END_STATE',\n    COMMENT_END_BANG_STATE = 'COMMENT_END_BANG_STATE',\n    DOCTYPE_STATE = 'DOCTYPE_STATE',\n    DOCTYPE_NAME_STATE = 'DOCTYPE_NAME_STATE',\n    AFTER_DOCTYPE_NAME_STATE = 'AFTER_DOCTYPE_NAME_STATE',\n    BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE = 'BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE',\n    DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE = 'DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE',\n    DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE = 'DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE',\n    BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE = 'BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE',\n    BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE = 'BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE',\n    DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE = 'DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE',\n    DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE = 'DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE',\n    AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE = 'AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE',\n    BOGUS_DOCTYPE_STATE = 'BOGUS_DOCTYPE_STATE',\n    CDATA_SECTION_STATE = 'CDATA_SECTION_STATE';\n\n//Utils\n\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\n//this functions if they will be situated in another module due to context switch.\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\nfunction isWhitespace(cp) {\n    return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;\n}\n\nfunction isAsciiDigit(cp) {\n    return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;\n}\n\nfunction isAsciiUpper(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;\n}\n\nfunction isAsciiLower(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;\n}\n\nfunction isAsciiLetter(cp) {\n    return isAsciiLower(cp) || isAsciiUpper(cp);\n}\n\nfunction isAsciiAlphaNumeric(cp) {\n    return isAsciiLetter(cp) || isAsciiDigit(cp);\n}\n\nfunction isDigit(cp, isHex) {\n    return isAsciiDigit(cp) || isHex && (cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_F ||\n                                         cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_F);\n}\n\nfunction isReservedCodePoint(cp) {\n    return cp >= 0xD800 && cp <= 0xDFFF || cp > 0x10FFFF;\n}\n\nfunction toAsciiLowerCodePoint(cp) {\n    return cp + 0x0020;\n}\n\n//NOTE: String.fromCharCode() function can handle only characters from BMP subset.\n//So, we need to workaround this manually.\n//(see: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String/fromCharCode#Getting_it_to_work_with_higher_values)\nfunction toChar(cp) {\n    if (cp <= 0xFFFF)\n        return String.fromCharCode(cp);\n\n    cp -= 0x10000;\n    return String.fromCharCode(cp >>> 10 & 0x3FF | 0xD800) + String.fromCharCode(0xDC00 | cp & 0x3FF);\n}\n\nfunction toAsciiLowerChar(cp) {\n    return String.fromCharCode(toAsciiLowerCodePoint(cp));\n}\n\nfunction findNamedEntityTreeBranch(nodeIx, cp) {\n    var branchCount = neTree[++nodeIx],\n        lo = ++nodeIx,\n        hi = lo + branchCount - 1;\n\n    while (lo <= hi) {\n        var mid = lo + hi >>> 1,\n            midCp = neTree[mid];\n\n        if (midCp < cp)\n            lo = mid + 1;\n\n        else if (midCp > cp)\n            hi = mid - 1;\n\n        else\n            return neTree[mid + branchCount];\n    }\n\n    return -1;\n}\n\n\n//Tokenizer\nvar Tokenizer = module.exports = function () {\n    this.preprocessor = new Preprocessor();\n\n    this.tokenQueue = [];\n\n    this.allowCDATA = false;\n\n    this.state = DATA_STATE;\n    this.returnState = '';\n\n    this.tempBuff = [];\n    this.additionalAllowedCp = void 0;\n    this.lastStartTagName = '';\n\n    this.consumedAfterSnapshot = -1;\n    this.active = false;\n\n    this.currentCharacterToken = null;\n    this.currentToken = null;\n    this.currentAttr = null;\n};\n\n//Token types\nTokenizer.CHARACTER_TOKEN = 'CHARACTER_TOKEN';\nTokenizer.NULL_CHARACTER_TOKEN = 'NULL_CHARACTER_TOKEN';\nTokenizer.WHITESPACE_CHARACTER_TOKEN = 'WHITESPACE_CHARACTER_TOKEN';\nTokenizer.START_TAG_TOKEN = 'START_TAG_TOKEN';\nTokenizer.END_TAG_TOKEN = 'END_TAG_TOKEN';\nTokenizer.COMMENT_TOKEN = 'COMMENT_TOKEN';\nTokenizer.DOCTYPE_TOKEN = 'DOCTYPE_TOKEN';\nTokenizer.EOF_TOKEN = 'EOF_TOKEN';\nTokenizer.HIBERNATION_TOKEN = 'HIBERNATION_TOKEN';\n\n//Tokenizer initial states for different modes\nTokenizer.MODE = {\n    DATA: DATA_STATE,\n    RCDATA: RCDATA_STATE,\n    RAWTEXT: RAWTEXT_STATE,\n    SCRIPT_DATA: SCRIPT_DATA_STATE,\n    PLAINTEXT: PLAINTEXT_STATE\n};\n\n//Static\nTokenizer.getTokenAttr = function (token, attrName) {\n    for (var i = token.attrs.length - 1; i >= 0; i--) {\n        if (token.attrs[i].name === attrName)\n            return token.attrs[i].value;\n    }\n\n    return null;\n};\n\n//API\nTokenizer.prototype.getNextToken = function () {\n    while (!this.tokenQueue.length && this.active) {\n        this._hibernationSnapshot();\n\n        var cp = this._consume();\n\n        if (!this._ensureHibernation())\n            this[this.state](cp);\n    }\n\n    return this.tokenQueue.shift();\n};\n\nTokenizer.prototype.write = function (chunk, isLastChunk) {\n    this.active = true;\n    this.preprocessor.write(chunk, isLastChunk);\n};\n\nTokenizer.prototype.insertHtmlAtCurrentPos = function (chunk) {\n    this.active = true;\n    this.preprocessor.insertHtmlAtCurrentPos(chunk);\n};\n\n//Hibernation\nTokenizer.prototype._hibernationSnapshot = function () {\n    this.consumedAfterSnapshot = 0;\n};\n\nTokenizer.prototype._ensureHibernation = function () {\n    if (this.preprocessor.endOfChunkHit) {\n        for (; this.consumedAfterSnapshot > 0; this.consumedAfterSnapshot--)\n            this.preprocessor.retreat();\n\n        this.active = false;\n        this.tokenQueue.push({type: Tokenizer.HIBERNATION_TOKEN});\n\n        return true;\n    }\n\n    return false;\n};\n\n\n//Consumption\nTokenizer.prototype._consume = function () {\n    this.consumedAfterSnapshot++;\n    return this.preprocessor.advance();\n};\n\nTokenizer.prototype._unconsume = function () {\n    this.consumedAfterSnapshot--;\n    this.preprocessor.retreat();\n};\n\nTokenizer.prototype._unconsumeSeveral = function (count) {\n    while (count--)\n        this._unconsume();\n};\n\nTokenizer.prototype._reconsumeInState = function (state) {\n    this.state = state;\n    this._unconsume();\n};\n\nTokenizer.prototype._consumeSubsequentIfMatch = function (pattern, startCp, caseSensitive) {\n    var consumedCount = 0,\n        isMatch = true,\n        patternLength = pattern.length,\n        patternPos = 0,\n        cp = startCp,\n        patternCp = void 0;\n\n    for (; patternPos < patternLength; patternPos++) {\n        if (patternPos > 0) {\n            cp = this._consume();\n            consumedCount++;\n        }\n\n        if (cp === $.EOF) {\n            isMatch = false;\n            break;\n        }\n\n        patternCp = pattern[patternPos];\n\n        if (cp !== patternCp && (caseSensitive || cp !== toAsciiLowerCodePoint(patternCp))) {\n            isMatch = false;\n            break;\n        }\n    }\n\n    if (!isMatch)\n        this._unconsumeSeveral(consumedCount);\n\n    return isMatch;\n};\n\n//Lookahead\nTokenizer.prototype._lookahead = function () {\n    var cp = this._consume();\n\n    this._unconsume();\n\n    return cp;\n};\n\n//Temp buffer\nTokenizer.prototype.isTempBufferEqualToScriptString = function () {\n    if (this.tempBuff.length !== $$.SCRIPT_STRING.length)\n        return false;\n\n    for (var i = 0; i < this.tempBuff.length; i++) {\n        if (this.tempBuff[i] !== $$.SCRIPT_STRING[i])\n            return false;\n    }\n\n    return true;\n};\n\n//Token creation\nTokenizer.prototype._createStartTagToken = function () {\n    this.currentToken = {\n        type: Tokenizer.START_TAG_TOKEN,\n        tagName: '',\n        selfClosing: false,\n        attrs: []\n    };\n};\n\nTokenizer.prototype._createEndTagToken = function () {\n    this.currentToken = {\n        type: Tokenizer.END_TAG_TOKEN,\n        tagName: '',\n        attrs: []\n    };\n};\n\nTokenizer.prototype._createCommentToken = function () {\n    this.currentToken = {\n        type: Tokenizer.COMMENT_TOKEN,\n        data: ''\n    };\n};\n\nTokenizer.prototype._createDoctypeToken = function (initialName) {\n    this.currentToken = {\n        type: Tokenizer.DOCTYPE_TOKEN,\n        name: initialName,\n        forceQuirks: false,\n        publicId: null,\n        systemId: null\n    };\n};\n\nTokenizer.prototype._createCharacterToken = function (type, ch) {\n    this.currentCharacterToken = {\n        type: type,\n        chars: ch\n    };\n};\n\n//Tag attributes\nTokenizer.prototype._createAttr = function (attrNameFirstCh) {\n    this.currentAttr = {\n        name: attrNameFirstCh,\n        value: ''\n    };\n};\n\nTokenizer.prototype._isDuplicateAttr = function () {\n    return Tokenizer.getTokenAttr(this.currentToken, this.currentAttr.name) !== null;\n};\n\nTokenizer.prototype._leaveAttrName = function (toState) {\n    this.state = toState;\n\n    if (!this._isDuplicateAttr())\n        this.currentToken.attrs.push(this.currentAttr);\n};\n\nTokenizer.prototype._leaveAttrValue = function (toState) {\n    this.state = toState;\n};\n\n//Appropriate end tag token\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html#appropriate-end-tag-token)\nTokenizer.prototype._isAppropriateEndTagToken = function () {\n    return this.lastStartTagName === this.currentToken.tagName;\n};\n\n//Token emission\nTokenizer.prototype._emitCurrentToken = function () {\n    this._emitCurrentCharacterToken();\n\n    //NOTE: store emited start tag's tagName to determine is the following end tag token is appropriate.\n    if (this.currentToken.type === Tokenizer.START_TAG_TOKEN)\n        this.lastStartTagName = this.currentToken.tagName;\n\n    this.tokenQueue.push(this.currentToken);\n    this.currentToken = null;\n};\n\nTokenizer.prototype._emitCurrentCharacterToken = function () {\n    if (this.currentCharacterToken) {\n        this.tokenQueue.push(this.currentCharacterToken);\n        this.currentCharacterToken = null;\n    }\n};\n\nTokenizer.prototype._emitEOFToken = function () {\n    this._emitCurrentCharacterToken();\n    this.tokenQueue.push({type: Tokenizer.EOF_TOKEN});\n};\n\n//Characters emission\n\n//OPTIMIZATION: specification uses only one type of character tokens (one token per character).\n//This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\n//If we have a sequence of characters that belong to the same group, parser can process it\n//as a single solid character token.\n//So, there are 3 types of character tokens in parse5:\n//1)NULL_CHARACTER_TOKEN - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\n//2)WHITESPACE_CHARACTER_TOKEN - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\n//3)CHARACTER_TOKEN - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\nTokenizer.prototype._appendCharToCurrentCharacterToken = function (type, ch) {\n    if (this.currentCharacterToken && this.currentCharacterToken.type !== type)\n        this._emitCurrentCharacterToken();\n\n    if (this.currentCharacterToken)\n        this.currentCharacterToken.chars += ch;\n\n    else\n        this._createCharacterToken(type, ch);\n};\n\nTokenizer.prototype._emitCodePoint = function (cp) {\n    var type = Tokenizer.CHARACTER_TOKEN;\n\n    if (isWhitespace(cp))\n        type = Tokenizer.WHITESPACE_CHARACTER_TOKEN;\n\n    else if (cp === $.NULL)\n        type = Tokenizer.NULL_CHARACTER_TOKEN;\n\n    this._appendCharToCurrentCharacterToken(type, toChar(cp));\n};\n\nTokenizer.prototype._emitSeveralCodePoints = function (codePoints) {\n    for (var i = 0; i < codePoints.length; i++)\n        this._emitCodePoint(codePoints[i]);\n};\n\n//NOTE: used then we emit character explicitly. This is always a non-whitespace and a non-null character.\n//So we can avoid additional checks here.\nTokenizer.prototype._emitChar = function (ch) {\n    this._appendCharToCurrentCharacterToken(Tokenizer.CHARACTER_TOKEN, ch);\n};\n\n//Character reference tokenization\nTokenizer.prototype._consumeNumericEntity = function (isHex) {\n    var digits = '',\n        nextCp = void 0;\n\n    do {\n        digits += toChar(this._consume());\n        nextCp = this._lookahead();\n    } while (nextCp !== $.EOF && isDigit(nextCp, isHex));\n\n    if (this._lookahead() === $.SEMICOLON)\n        this._consume();\n\n    var referencedCp = parseInt(digits, isHex ? 16 : 10),\n        replacement = NUMERIC_ENTITY_REPLACEMENTS[referencedCp];\n\n    if (replacement)\n        return replacement;\n\n    if (isReservedCodePoint(referencedCp))\n        return $.REPLACEMENT_CHARACTER;\n\n    return referencedCp;\n};\n\n// NOTE: for the details on this algorithm see\n// https://github.com/inikulin/parse5/tree/master/scripts/generate_named_entity_data/README.md\nTokenizer.prototype._consumeNamedEntity = function (inAttr) {\n    var referencedCodePoints = null,\n        referenceSize = 0,\n        cp = null,\n        consumedCount = 0,\n        semicolonTerminated = false;\n\n    for (var i = 0; i > -1;) {\n        var current = neTree[i],\n            inNode = current < MAX_BRANCH_MARKER_VALUE,\n            nodeWithData = inNode && current & HAS_DATA_FLAG;\n\n        if (nodeWithData) {\n            referencedCodePoints = current & DATA_DUPLET_FLAG ? [neTree[++i], neTree[++i]] : [neTree[++i]];\n            referenceSize = consumedCount;\n\n            if (cp === $.SEMICOLON) {\n                semicolonTerminated = true;\n                break;\n            }\n        }\n\n        cp = this._consume();\n        consumedCount++;\n\n        if (cp === $.EOF)\n            break;\n\n        if (inNode)\n            i = current & HAS_BRANCHES_FLAG ? findNamedEntityTreeBranch(i, cp) : -1;\n\n        else\n            i = cp === current ? ++i : -1;\n    }\n\n\n    if (referencedCodePoints) {\n        if (!semicolonTerminated) {\n            //NOTE: unconsume excess (e.g. 'it' in '&notit')\n            this._unconsumeSeveral(consumedCount - referenceSize);\n\n            //NOTE: If the character reference is being consumed as part of an attribute and the next character\n            //is either a U+003D EQUALS SIGN character (=) or an alphanumeric ASCII character, then, for historical\n            //reasons, all the characters that were matched after the U+0026 AMPERSAND character (&) must be\n            //unconsumed, and nothing is returned.\n            //However, if this next character is in fact a U+003D EQUALS SIGN character (=), then this is a\n            //parse error, because some legacy user agents will misinterpret the markup in those cases.\n            //(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html#tokenizing-character-references)\n            if (inAttr) {\n                var nextCp = this._lookahead();\n\n                if (nextCp === $.EQUALS_SIGN || isAsciiAlphaNumeric(nextCp)) {\n                    this._unconsumeSeveral(referenceSize);\n                    return null;\n                }\n            }\n        }\n\n        return referencedCodePoints;\n    }\n\n    this._unconsumeSeveral(consumedCount);\n\n    return null;\n};\n\nTokenizer.prototype._consumeCharacterReference = function (startCp, inAttr) {\n    if (isWhitespace(startCp) || startCp === $.GREATER_THAN_SIGN ||\n        startCp === $.AMPERSAND || startCp === this.additionalAllowedCp || startCp === $.EOF) {\n        //NOTE: not a character reference. No characters are consumed, and nothing is returned.\n        this._unconsume();\n        return null;\n    }\n\n    if (startCp === $.NUMBER_SIGN) {\n        //NOTE: we have a numeric entity candidate, now we should determine if it's hex or decimal\n        var isHex = false,\n            nextCp = this._lookahead();\n\n        if (nextCp === $.LATIN_SMALL_X || nextCp === $.LATIN_CAPITAL_X) {\n            this._consume();\n            isHex = true;\n        }\n\n        nextCp = this._lookahead();\n\n        //NOTE: if we have at least one digit this is a numeric entity for sure, so we consume it\n        if (nextCp !== $.EOF && isDigit(nextCp, isHex))\n            return [this._consumeNumericEntity(isHex)];\n\n        //NOTE: otherwise this is a bogus number entity and a parse error. Unconsume the number sign\n        //and the 'x'-character if appropriate.\n        this._unconsumeSeveral(isHex ? 2 : 1);\n        return null;\n    }\n\n    this._unconsume();\n\n    return this._consumeNamedEntity(inAttr);\n};\n\n//State machine\nvar _ = Tokenizer.prototype;\n\n//12.2.4.1 Data state\n//------------------------------------------------------------------\n_[DATA_STATE] = function dataState(cp) {\n    this.preprocessor.dropParsedChunk();\n\n    if (cp === $.AMPERSAND)\n        this.state = CHARACTER_REFERENCE_IN_DATA_STATE;\n\n    else if (cp === $.LESS_THAN_SIGN)\n        this.state = TAG_OPEN_STATE;\n\n    else if (cp === $.NULL)\n        this._emitCodePoint(cp);\n\n    else if (cp === $.EOF)\n        this._emitEOFToken();\n\n    else\n        this._emitCodePoint(cp);\n};\n\n\n//12.2.4.2 Character reference in data state\n//------------------------------------------------------------------\n_[CHARACTER_REFERENCE_IN_DATA_STATE] = function characterReferenceInDataState(cp) {\n    this.additionalAllowedCp = void 0;\n\n    var referencedCodePoints = this._consumeCharacterReference(cp, false);\n\n    if (!this._ensureHibernation()) {\n        if (referencedCodePoints)\n            this._emitSeveralCodePoints(referencedCodePoints);\n\n        else\n            this._emitChar('&');\n\n        this.state = DATA_STATE;\n    }\n};\n\n\n//12.2.4.3 RCDATA state\n//------------------------------------------------------------------\n_[RCDATA_STATE] = function rcdataState(cp) {\n    this.preprocessor.dropParsedChunk();\n\n    if (cp === $.AMPERSAND)\n        this.state = CHARACTER_REFERENCE_IN_RCDATA_STATE;\n\n    else if (cp === $.LESS_THAN_SIGN)\n        this.state = RCDATA_LESS_THAN_SIGN_STATE;\n\n    else if (cp === $.NULL)\n        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\n\n    else if (cp === $.EOF)\n        this._emitEOFToken();\n\n    else\n        this._emitCodePoint(cp);\n};\n\n\n//12.2.4.4 Character reference in RCDATA state\n//------------------------------------------------------------------\n_[CHARACTER_REFERENCE_IN_RCDATA_STATE] = function characterReferenceInRcdataState(cp) {\n    this.additionalAllowedCp = void 0;\n\n    var referencedCodePoints = this._consumeCharacterReference(cp, false);\n\n    if (!this._ensureHibernation()) {\n        if (referencedCodePoints)\n            this._emitSeveralCodePoints(referencedCodePoints);\n\n        else\n            this._emitChar('&');\n\n        this.state = RCDATA_STATE;\n    }\n};\n\n\n//12.2.4.5 RAWTEXT state\n//------------------------------------------------------------------\n_[RAWTEXT_STATE] = function rawtextState(cp) {\n    this.preprocessor.dropParsedChunk();\n\n    if (cp === $.LESS_THAN_SIGN)\n        this.state = RAWTEXT_LESS_THAN_SIGN_STATE;\n\n    else if (cp === $.NULL)\n        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\n\n    else if (cp === $.EOF)\n        this._emitEOFToken();\n\n    else\n        this._emitCodePoint(cp);\n};\n\n\n//12.2.4.6 Script data state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_STATE] = function scriptDataState(cp) {\n    this.preprocessor.dropParsedChunk();\n\n    if (cp === $.LESS_THAN_SIGN)\n        this.state = SCRIPT_DATA_LESS_THAN_SIGN_STATE;\n\n    else if (cp === $.NULL)\n        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\n\n    else if (cp === $.EOF)\n        this._emitEOFToken();\n\n    else\n        this._emitCodePoint(cp);\n};\n\n\n//12.2.4.7 PLAINTEXT state\n//------------------------------------------------------------------\n_[PLAINTEXT_STATE] = function plaintextState(cp) {\n    this.preprocessor.dropParsedChunk();\n\n    if (cp === $.NULL)\n        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\n\n    else if (cp === $.EOF)\n        this._emitEOFToken();\n\n    else\n        this._emitCodePoint(cp);\n};\n\n\n//12.2.4.8 Tag open state\n//------------------------------------------------------------------\n_[TAG_OPEN_STATE] = function tagOpenState(cp) {\n    if (cp === $.EXCLAMATION_MARK)\n        this.state = MARKUP_DECLARATION_OPEN_STATE;\n\n    else if (cp === $.SOLIDUS)\n        this.state = END_TAG_OPEN_STATE;\n\n    else if (isAsciiLetter(cp)) {\n        this._createStartTagToken();\n        this._reconsumeInState(TAG_NAME_STATE);\n    }\n\n    else if (cp === $.QUESTION_MARK)\n        this._reconsumeInState(BOGUS_COMMENT_STATE);\n\n    else {\n        this._emitChar('<');\n        this._reconsumeInState(DATA_STATE);\n    }\n};\n\n\n//12.2.4.9 End tag open state\n//------------------------------------------------------------------\n_[END_TAG_OPEN_STATE] = function endTagOpenState(cp) {\n    if (isAsciiLetter(cp)) {\n        this._createEndTagToken();\n        this._reconsumeInState(TAG_NAME_STATE);\n    }\n\n    else if (cp === $.GREATER_THAN_SIGN)\n        this.state = DATA_STATE;\n\n    else if (cp === $.EOF) {\n        this._reconsumeInState(DATA_STATE);\n        this._emitChar('<');\n        this._emitChar('/');\n    }\n\n    else\n        this._reconsumeInState(BOGUS_COMMENT_STATE);\n};\n\n\n//12.2.4.10 Tag name state\n//------------------------------------------------------------------\n_[TAG_NAME_STATE] = function tagNameState(cp) {\n    if (isWhitespace(cp))\n        this.state = BEFORE_ATTRIBUTE_NAME_STATE;\n\n    else if (cp === $.SOLIDUS)\n        this.state = SELF_CLOSING_START_TAG_STATE;\n\n    else if (cp === $.GREATER_THAN_SIGN) {\n        this.state = DATA_STATE;\n        this._emitCurrentToken();\n    }\n\n    else if (isAsciiUpper(cp))\n        this.currentToken.tagName += toAsciiLowerChar(cp);\n\n    else if (cp === $.NULL)\n        this.currentToken.tagName += UNICODE.REPLACEMENT_CHARACTER;\n\n    else if (cp === $.EOF)\n        this._reconsumeInState(DATA_STATE);\n\n    else\n        this.currentToken.tagName += toChar(cp);\n};\n\n\n//12.2.4.11 RCDATA less-than sign state\n//------------------------------------------------------------------\n_[RCDATA_LESS_THAN_SIGN_STATE] = function rcdataLessThanSignState(cp) {\n    if (cp === $.SOLIDUS) {\n        this.tempBuff = [];\n        this.state = RCDATA_END_TAG_OPEN_STATE;\n    }\n\n    else {\n        this._emitChar('<');\n        this._reconsumeInState(RCDATA_STATE);\n    }\n};\n\n\n//12.2.4.12 RCDATA end tag open state\n//------------------------------------------------------------------\n_[RCDATA_END_TAG_OPEN_STATE] = function rcdataEndTagOpenState(cp) {\n    if (isAsciiLetter(cp)) {\n        this._createEndTagToken();\n        this._reconsumeInState(RCDATA_END_TAG_NAME_STATE);\n    }\n\n    else {\n        this._emitChar('<');\n        this._emitChar('/');\n        this._reconsumeInState(RCDATA_STATE);\n    }\n};\n\n\n//12.2.4.13 RCDATA end tag name state\n//------------------------------------------------------------------\n_[RCDATA_END_TAG_NAME_STATE] = function rcdataEndTagNameState(cp) {\n    if (isAsciiUpper(cp)) {\n        this.currentToken.tagName += toAsciiLowerChar(cp);\n        this.tempBuff.push(cp);\n    }\n\n    else if (isAsciiLower(cp)) {\n        this.currentToken.tagName += toChar(cp);\n        this.tempBuff.push(cp);\n    }\n\n    else {\n        if (this._isAppropriateEndTagToken()) {\n            if (isWhitespace(cp)) {\n                this.state = BEFORE_ATTRIBUTE_NAME_STATE;\n                return;\n            }\n\n            if (cp === $.SOLIDUS) {\n                this.state = SELF_CLOSING_START_TAG_STATE;\n                return;\n            }\n\n            if (cp === $.GREATER_THAN_SIGN) {\n                this.state = DATA_STATE;\n                this._emitCurrentToken();\n                return;\n            }\n        }\n\n        this._emitChar('<');\n        this._emitChar('/');\n        this._emitSeveralCodePoints(this.tempBuff);\n        this._reconsumeInState(RCDATA_STATE);\n    }\n};\n\n\n//12.2.4.14 RAWTEXT less-than sign state\n//------------------------------------------------------------------\n_[RAWTEXT_LESS_THAN_SIGN_STATE] = function rawtextLessThanSignState(cp) {\n    if (cp === $.SOLIDUS) {\n        this.tempBuff = [];\n        this.state = RAWTEXT_END_TAG_OPEN_STATE;\n    }\n\n    else {\n        this._emitChar('<');\n        this._reconsumeInState(RAWTEXT_STATE);\n    }\n};\n\n\n//12.2.4.15 RAWTEXT end tag open state\n//------------------------------------------------------------------\n_[RAWTEXT_END_TAG_OPEN_STATE] = function rawtextEndTagOpenState(cp) {\n    if (isAsciiLetter(cp)) {\n        this._createEndTagToken();\n        this._reconsumeInState(RAWTEXT_END_TAG_NAME_STATE);\n    }\n\n    else {\n        this._emitChar('<');\n        this._emitChar('/');\n        this._reconsumeInState(RAWTEXT_STATE);\n    }\n};\n\n\n//12.2.4.16 RAWTEXT end tag name state\n//------------------------------------------------------------------\n_[RAWTEXT_END_TAG_NAME_STATE] = function rawtextEndTagNameState(cp) {\n    if (isAsciiUpper(cp)) {\n        this.currentToken.tagName += toAsciiLowerChar(cp);\n        this.tempBuff.push(cp);\n    }\n\n    else if (isAsciiLower(cp)) {\n        this.currentToken.tagName += toChar(cp);\n        this.tempBuff.push(cp);\n    }\n\n    else {\n        if (this._isAppropriateEndTagToken()) {\n            if (isWhitespace(cp)) {\n                this.state = BEFORE_ATTRIBUTE_NAME_STATE;\n                return;\n            }\n\n            if (cp === $.SOLIDUS) {\n                this.state = SELF_CLOSING_START_TAG_STATE;\n                return;\n            }\n\n            if (cp === $.GREATER_THAN_SIGN) {\n                this._emitCurrentToken();\n                this.state = DATA_STATE;\n                return;\n            }\n        }\n\n        this._emitChar('<');\n        this._emitChar('/');\n        this._emitSeveralCodePoints(this.tempBuff);\n        this._reconsumeInState(RAWTEXT_STATE);\n    }\n};\n\n\n//12.2.4.17 Script data less-than sign state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_LESS_THAN_SIGN_STATE] = function scriptDataLessThanSignState(cp) {\n    if (cp === $.SOLIDUS) {\n        this.tempBuff = [];\n        this.state = SCRIPT_DATA_END_TAG_OPEN_STATE;\n    }\n\n    else if (cp === $.EXCLAMATION_MARK) {\n        this.state = SCRIPT_DATA_ESCAPE_START_STATE;\n        this._emitChar('<');\n        this._emitChar('!');\n    }\n\n    else {\n        this._emitChar('<');\n        this._reconsumeInState(SCRIPT_DATA_STATE);\n    }\n};\n\n\n//12.2.4.18 Script data end tag open state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_END_TAG_OPEN_STATE] = function scriptDataEndTagOpenState(cp) {\n    if (isAsciiLetter(cp)) {\n        this._createEndTagToken();\n        this._reconsumeInState(SCRIPT_DATA_END_TAG_NAME_STATE);\n    }\n\n    else {\n        this._emitChar('<');\n        this._emitChar('/');\n        this._reconsumeInState(SCRIPT_DATA_STATE);\n    }\n};\n\n\n//12.2.4.19 Script data end tag name state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_END_TAG_NAME_STATE] = function scriptDataEndTagNameState(cp) {\n    if (isAsciiUpper(cp)) {\n        this.currentToken.tagName += toAsciiLowerChar(cp);\n        this.tempBuff.push(cp);\n    }\n\n    else if (isAsciiLower(cp)) {\n        this.currentToken.tagName += toChar(cp);\n        this.tempBuff.push(cp);\n    }\n\n    else {\n        if (this._isAppropriateEndTagToken()) {\n            if (isWhitespace(cp)) {\n                this.state = BEFORE_ATTRIBUTE_NAME_STATE;\n                return;\n            }\n\n            else if (cp === $.SOLIDUS) {\n                this.state = SELF_CLOSING_START_TAG_STATE;\n                return;\n            }\n\n            else if (cp === $.GREATER_THAN_SIGN) {\n                this._emitCurrentToken();\n                this.state = DATA_STATE;\n                return;\n            }\n        }\n\n        this._emitChar('<');\n        this._emitChar('/');\n        this._emitSeveralCodePoints(this.tempBuff);\n        this._reconsumeInState(SCRIPT_DATA_STATE);\n    }\n};\n\n\n//12.2.4.20 Script data escape start state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_ESCAPE_START_STATE] = function scriptDataEscapeStartState(cp) {\n    if (cp === $.HYPHEN_MINUS) {\n        this.state = SCRIPT_DATA_ESCAPE_START_DASH_STATE;\n        this._emitChar('-');\n    }\n\n    else\n        this._reconsumeInState(SCRIPT_DATA_STATE);\n};\n\n\n//12.2.4.21 Script data escape start dash state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_ESCAPE_START_DASH_STATE] = function scriptDataEscapeStartDashState(cp) {\n    if (cp === $.HYPHEN_MINUS) {\n        this.state = SCRIPT_DATA_ESCAPED_DASH_DASH_STATE;\n        this._emitChar('-');\n    }\n\n    else\n        this._reconsumeInState(SCRIPT_DATA_STATE);\n};\n\n\n//12.2.4.22 Script data escaped state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_ESCAPED_STATE] = function scriptDataEscapedState(cp) {\n    if (cp === $.HYPHEN_MINUS) {\n        this.state = SCRIPT_DATA_ESCAPED_DASH_STATE;\n        this._emitChar('-');\n    }\n\n    else if (cp === $.LESS_THAN_SIGN)\n        this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE;\n\n    else if (cp === $.NULL)\n        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\n\n    else if (cp === $.EOF)\n        this._reconsumeInState(DATA_STATE);\n\n    else\n        this._emitCodePoint(cp);\n};\n\n\n//12.2.4.23 Script data escaped dash state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_ESCAPED_DASH_STATE] = function scriptDataEscapedDashState(cp) {\n    if (cp === $.HYPHEN_MINUS) {\n        this.state = SCRIPT_DATA_ESCAPED_DASH_DASH_STATE;\n        this._emitChar('-');\n    }\n\n    else if (cp === $.LESS_THAN_SIGN)\n        this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE;\n\n    else if (cp === $.NULL) {\n        this.state = SCRIPT_DATA_ESCAPED_STATE;\n        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\n    }\n\n    else if (cp === $.EOF)\n        this._reconsumeInState(DATA_STATE);\n\n    else {\n        this.state = SCRIPT_DATA_ESCAPED_STATE;\n        this._emitCodePoint(cp);\n    }\n};\n\n\n//12.2.4.24 Script data escaped dash dash state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_ESCAPED_DASH_DASH_STATE] = function scriptDataEscapedDashDashState(cp) {\n    if (cp === $.HYPHEN_MINUS)\n        this._emitChar('-');\n\n    else if (cp === $.LESS_THAN_SIGN)\n        this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE;\n\n    else if (cp === $.GREATER_THAN_SIGN) {\n        this.state = SCRIPT_DATA_STATE;\n        this._emitChar('>');\n    }\n\n    else if (cp === $.NULL) {\n        this.state = SCRIPT_DATA_ESCAPED_STATE;\n        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\n    }\n\n    else if (cp === $.EOF)\n        this._reconsumeInState(DATA_STATE);\n\n    else {\n        this.state = SCRIPT_DATA_ESCAPED_STATE;\n        this._emitCodePoint(cp);\n    }\n};\n\n\n//12.2.4.25 Script data escaped less-than sign state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE] = function scriptDataEscapedLessThanSignState(cp) {\n    if (cp === $.SOLIDUS) {\n        this.tempBuff = [];\n        this.state = SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE;\n    }\n\n    else if (isAsciiLetter(cp)) {\n        this.tempBuff = [];\n        this._emitChar('<');\n        this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE);\n    }\n\n    else {\n        this._emitChar('<');\n        this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);\n    }\n};\n\n\n//12.2.4.26 Script data escaped end tag open state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE] = function scriptDataEscapedEndTagOpenState(cp) {\n    if (isAsciiLetter(cp)) {\n        this._createEndTagToken();\n        this._reconsumeInState(SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE);\n    }\n\n    else {\n        this._emitChar('<');\n        this._emitChar('/');\n        this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);\n    }\n};\n\n\n//12.2.4.27 Script data escaped end tag name state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE] = function scriptDataEscapedEndTagNameState(cp) {\n    if (isAsciiUpper(cp)) {\n        this.currentToken.tagName += toAsciiLowerChar(cp);\n        this.tempBuff.push(cp);\n    }\n\n    else if (isAsciiLower(cp)) {\n        this.currentToken.tagName += toChar(cp);\n        this.tempBuff.push(cp);\n    }\n\n    else {\n        if (this._isAppropriateEndTagToken()) {\n            if (isWhitespace(cp)) {\n                this.state = BEFORE_ATTRIBUTE_NAME_STATE;\n                return;\n            }\n\n            if (cp === $.SOLIDUS) {\n                this.state = SELF_CLOSING_START_TAG_STATE;\n                return;\n            }\n\n            if (cp === $.GREATER_THAN_SIGN) {\n                this._emitCurrentToken();\n                this.state = DATA_STATE;\n                return;\n            }\n        }\n\n        this._emitChar('<');\n        this._emitChar('/');\n        this._emitSeveralCodePoints(this.tempBuff);\n        this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);\n    }\n};\n\n\n//12.2.4.28 Script data double escape start state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE] = function scriptDataDoubleEscapeStartState(cp) {\n    if (isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN) {\n        this.state = this.isTempBufferEqualToScriptString() ? SCRIPT_DATA_DOUBLE_ESCAPED_STATE : SCRIPT_DATA_ESCAPED_STATE;\n        this._emitCodePoint(cp);\n    }\n\n    else if (isAsciiUpper(cp)) {\n        this.tempBuff.push(toAsciiLowerCodePoint(cp));\n        this._emitCodePoint(cp);\n    }\n\n    else if (isAsciiLower(cp)) {\n        this.tempBuff.push(cp);\n        this._emitCodePoint(cp);\n    }\n\n    else\n        this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);\n};\n\n\n//12.2.4.29 Script data double escaped state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_DOUBLE_ESCAPED_STATE] = function scriptDataDoubleEscapedState(cp) {\n    if (cp === $.HYPHEN_MINUS) {\n        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE;\n        this._emitChar('-');\n    }\n\n    else if (cp === $.LESS_THAN_SIGN) {\n        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE;\n        this._emitChar('<');\n    }\n\n    else if (cp === $.NULL)\n        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\n\n    else if (cp === $.EOF)\n        this._reconsumeInState(DATA_STATE);\n\n    else\n        this._emitCodePoint(cp);\n};\n\n\n//12.2.4.30 Script data double escaped dash state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE] = function scriptDataDoubleEscapedDashState(cp) {\n    if (cp === $.HYPHEN_MINUS) {\n        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE;\n        this._emitChar('-');\n    }\n\n    else if (cp === $.LESS_THAN_SIGN) {\n        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE;\n        this._emitChar('<');\n    }\n\n    else if (cp === $.NULL) {\n        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\n    }\n\n    else if (cp === $.EOF)\n        this._reconsumeInState(DATA_STATE);\n\n    else {\n        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n        this._emitCodePoint(cp);\n    }\n};\n\n\n//12.2.4.31 Script data double escaped dash dash state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE] = function scriptDataDoubleEscapedDashDashState(cp) {\n    if (cp === $.HYPHEN_MINUS)\n        this._emitChar('-');\n\n    else if (cp === $.LESS_THAN_SIGN) {\n        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE;\n        this._emitChar('<');\n    }\n\n    else if (cp === $.GREATER_THAN_SIGN) {\n        this.state = SCRIPT_DATA_STATE;\n        this._emitChar('>');\n    }\n\n    else if (cp === $.NULL) {\n        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\n    }\n\n    else if (cp === $.EOF)\n        this._reconsumeInState(DATA_STATE);\n\n    else {\n        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n        this._emitCodePoint(cp);\n    }\n};\n\n\n//12.2.4.32 Script data double escaped less-than sign state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE] = function scriptDataDoubleEscapedLessThanSignState(cp) {\n    if (cp === $.SOLIDUS) {\n        this.tempBuff = [];\n        this.state = SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE;\n        this._emitChar('/');\n    }\n\n    else\n        this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPED_STATE);\n};\n\n\n//12.2.4.33 Script data double escape end state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE] = function scriptDataDoubleEscapeEndState(cp) {\n    if (isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN) {\n        this.state = this.isTempBufferEqualToScriptString() ? SCRIPT_DATA_ESCAPED_STATE : SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n\n        this._emitCodePoint(cp);\n    }\n\n    else if (isAsciiUpper(cp)) {\n        this.tempBuff.push(toAsciiLowerCodePoint(cp));\n        this._emitCodePoint(cp);\n    }\n\n    else if (isAsciiLower(cp)) {\n        this.tempBuff.push(cp);\n        this._emitCodePoint(cp);\n    }\n\n    else\n        this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPED_STATE);\n};\n\n\n//12.2.4.34 Before attribute name state\n//------------------------------------------------------------------\n_[BEFORE_ATTRIBUTE_NAME_STATE] = function beforeAttributeNameState(cp) {\n    if (isWhitespace(cp))\n        return;\n\n    if (cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN || cp === $.EOF)\n        this._reconsumeInState(AFTER_ATTRIBUTE_NAME_STATE);\n\n    else if (cp === $.EQUALS_SIGN) {\n        this._createAttr('=');\n        this.state = ATTRIBUTE_NAME_STATE;\n    }\n\n    else {\n        this._createAttr('');\n        this._reconsumeInState(ATTRIBUTE_NAME_STATE);\n    }\n};\n\n\n//12.2.4.35 Attribute name state\n//------------------------------------------------------------------\n_[ATTRIBUTE_NAME_STATE] = function attributeNameState(cp) {\n    if (isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN || cp === $.EOF) {\n        this._leaveAttrName(AFTER_ATTRIBUTE_NAME_STATE);\n        this._unconsume();\n    }\n\n    else if (cp === $.EQUALS_SIGN)\n        this._leaveAttrName(BEFORE_ATTRIBUTE_VALUE_STATE);\n\n    else if (isAsciiUpper(cp))\n        this.currentAttr.name += toAsciiLowerChar(cp);\n\n    else if (cp === $.QUOTATION_MARK || cp === $.APOSTROPHE || cp === $.LESS_THAN_SIGN)\n        this.currentAttr.name += toChar(cp);\n\n    else if (cp === $.NULL)\n        this.currentAttr.name += UNICODE.REPLACEMENT_CHARACTER;\n\n    else\n        this.currentAttr.name += toChar(cp);\n};\n\n\n//12.2.4.36 After attribute name state\n//------------------------------------------------------------------\n_[AFTER_ATTRIBUTE_NAME_STATE] = function afterAttributeNameState(cp) {\n    if (isWhitespace(cp))\n        return;\n\n    if (cp === $.SOLIDUS)\n        this.state = SELF_CLOSING_START_TAG_STATE;\n\n    else if (cp === $.EQUALS_SIGN)\n        this.state = BEFORE_ATTRIBUTE_VALUE_STATE;\n\n    else if (cp === $.GREATER_THAN_SIGN) {\n        this.state = DATA_STATE;\n        this._emitCurrentToken();\n    }\n\n    else if (cp === $.EOF)\n        this._reconsumeInState(DATA_STATE);\n\n    else {\n        this._createAttr('');\n        this._reconsumeInState(ATTRIBUTE_NAME_STATE);\n    }\n};\n\n\n//12.2.4.37 Before attribute value state\n//------------------------------------------------------------------\n_[BEFORE_ATTRIBUTE_VALUE_STATE] = function beforeAttributeValueState(cp) {\n    if (isWhitespace(cp))\n        return;\n\n    if (cp === $.QUOTATION_MARK)\n        this.state = ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE;\n\n    else if (cp === $.APOSTROPHE)\n        this.state = ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE;\n\n    else\n        this._reconsumeInState(ATTRIBUTE_VALUE_UNQUOTED_STATE);\n};\n\n\n//12.2.4.38 Attribute value (double-quoted) state\n//------------------------------------------------------------------\n_[ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE] = function attributeValueDoubleQuotedState(cp) {\n    if (cp === $.QUOTATION_MARK)\n        this.state = AFTER_ATTRIBUTE_VALUE_QUOTED_STATE;\n\n    else if (cp === $.AMPERSAND) {\n        this.additionalAllowedCp = $.QUOTATION_MARK;\n        this.returnState = this.state;\n        this.state = CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE;\n    }\n\n    else if (cp === $.NULL)\n        this.currentAttr.value += UNICODE.REPLACEMENT_CHARACTER;\n\n    else if (cp === $.EOF)\n        this._reconsumeInState(DATA_STATE);\n\n    else\n        this.currentAttr.value += toChar(cp);\n};\n\n\n//12.2.4.39 Attribute value (single-quoted) state\n//------------------------------------------------------------------\n_[ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE] = function attributeValueSingleQuotedState(cp) {\n    if (cp === $.APOSTROPHE)\n        this.state = AFTER_ATTRIBUTE_VALUE_QUOTED_STATE;\n\n    else if (cp === $.AMPERSAND) {\n        this.additionalAllowedCp = $.APOSTROPHE;\n        this.returnState = this.state;\n        this.state = CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE;\n    }\n\n    else if (cp === $.NULL)\n        this.currentAttr.value += UNICODE.REPLACEMENT_CHARACTER;\n\n    else if (cp === $.EOF)\n        this._reconsumeInState(DATA_STATE);\n\n    else\n        this.currentAttr.value += toChar(cp);\n};\n\n\n//12.2.4.40 Attribute value (unquoted) state\n//------------------------------------------------------------------\n_[ATTRIBUTE_VALUE_UNQUOTED_STATE] = function attributeValueUnquotedState(cp) {\n    if (isWhitespace(cp))\n        this._leaveAttrValue(BEFORE_ATTRIBUTE_NAME_STATE);\n\n    else if (cp === $.AMPERSAND) {\n        this.additionalAllowedCp = $.GREATER_THAN_SIGN;\n        this.returnState = this.state;\n        this.state = CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE;\n    }\n\n    else if (cp === $.GREATER_THAN_SIGN) {\n        this._leaveAttrValue(DATA_STATE);\n        this._emitCurrentToken();\n    }\n\n    else if (cp === $.NULL)\n        this.currentAttr.value += UNICODE.REPLACEMENT_CHARACTER;\n\n    else if (cp === $.QUOTATION_MARK || cp === $.APOSTROPHE || cp === $.LESS_THAN_SIGN ||\n             cp === $.EQUALS_SIGN || cp === $.GRAVE_ACCENT)\n        this.currentAttr.value += toChar(cp);\n\n    else if (cp === $.EOF)\n        this._reconsumeInState(DATA_STATE);\n\n    else\n        this.currentAttr.value += toChar(cp);\n};\n\n\n//12.2.4.41 Character reference in attribute value state\n//------------------------------------------------------------------\n_[CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE] = function characterReferenceInAttributeValueState(cp) {\n    var referencedCodePoints = this._consumeCharacterReference(cp, true);\n\n    if (!this._ensureHibernation()) {\n        if (referencedCodePoints) {\n            for (var i = 0; i < referencedCodePoints.length; i++)\n                this.currentAttr.value += toChar(referencedCodePoints[i]);\n        }\n        else\n            this.currentAttr.value += '&';\n\n        this.state = this.returnState;\n    }\n};\n\n\n//12.2.4.42 After attribute value (quoted) state\n//------------------------------------------------------------------\n_[AFTER_ATTRIBUTE_VALUE_QUOTED_STATE] = function afterAttributeValueQuotedState(cp) {\n    if (isWhitespace(cp))\n        this._leaveAttrValue(BEFORE_ATTRIBUTE_NAME_STATE);\n\n    else if (cp === $.SOLIDUS)\n        this._leaveAttrValue(SELF_CLOSING_START_TAG_STATE);\n\n    else if (cp === $.GREATER_THAN_SIGN) {\n        this._leaveAttrValue(DATA_STATE);\n        this._emitCurrentToken();\n    }\n\n    else if (cp === $.EOF)\n        this._reconsumeInState(DATA_STATE);\n\n    else\n        this._reconsumeInState(BEFORE_ATTRIBUTE_NAME_STATE);\n};\n\n\n//12.2.4.43 Self-closing start tag state\n//------------------------------------------------------------------\n_[SELF_CLOSING_START_TAG_STATE] = function selfClosingStartTagState(cp) {\n    if (cp === $.GREATER_THAN_SIGN) {\n        this.currentToken.selfClosing = true;\n        this.state = DATA_STATE;\n        this._emitCurrentToken();\n    }\n\n    else if (cp === $.EOF)\n        this._reconsumeInState(DATA_STATE);\n\n    else\n        this._reconsumeInState(BEFORE_ATTRIBUTE_NAME_STATE);\n};\n\n\n//12.2.4.44 Bogus comment state\n//------------------------------------------------------------------\n_[BOGUS_COMMENT_STATE] = function bogusCommentState() {\n    this._createCommentToken();\n    this._reconsumeInState(BOGUS_COMMENT_STATE_CONTINUATION);\n};\n\n//HACK: to support streaming and make BOGUS_COMMENT_STATE reentrant we've\n//introduced BOGUS_COMMENT_STATE_CONTINUATION state which will not produce\n//comment token on each call.\n_[BOGUS_COMMENT_STATE_CONTINUATION] = function bogusCommentStateContinuation(cp) {\n    while (true) {\n        if (cp === $.GREATER_THAN_SIGN) {\n            this.state = DATA_STATE;\n            break;\n        }\n\n        else if (cp === $.EOF) {\n            this._reconsumeInState(DATA_STATE);\n            break;\n        }\n\n        else {\n            this.currentToken.data += cp === $.NULL ? UNICODE.REPLACEMENT_CHARACTER : toChar(cp);\n\n            this._hibernationSnapshot();\n            cp = this._consume();\n\n            if (this._ensureHibernation())\n                return;\n        }\n    }\n\n    this._emitCurrentToken();\n};\n\n//12.2.4.45 Markup declaration open state\n//------------------------------------------------------------------\n_[MARKUP_DECLARATION_OPEN_STATE] = function markupDeclarationOpenState(cp) {\n    var dashDashMatch = this._consumeSubsequentIfMatch($$.DASH_DASH_STRING, cp, true),\n        doctypeMatch = !dashDashMatch && this._consumeSubsequentIfMatch($$.DOCTYPE_STRING, cp, false),\n        cdataMatch = !dashDashMatch && !doctypeMatch &&\n                     this.allowCDATA &&\n                     this._consumeSubsequentIfMatch($$.CDATA_START_STRING, cp, true);\n\n    if (!this._ensureHibernation()) {\n        if (dashDashMatch) {\n            this._createCommentToken();\n            this.state = COMMENT_START_STATE;\n        }\n\n        else if (doctypeMatch)\n            this.state = DOCTYPE_STATE;\n\n        else if (cdataMatch)\n            this.state = CDATA_SECTION_STATE;\n\n        else\n            this._reconsumeInState(BOGUS_COMMENT_STATE);\n    }\n};\n\n\n//12.2.4.46 Comment start state\n//------------------------------------------------------------------\n_[COMMENT_START_STATE] = function commentStartState(cp) {\n    if (cp === $.HYPHEN_MINUS)\n        this.state = COMMENT_START_DASH_STATE;\n\n    else if (cp === $.NULL) {\n        this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;\n        this.state = COMMENT_STATE;\n    }\n\n    else if (cp === $.GREATER_THAN_SIGN) {\n        this.state = DATA_STATE;\n        this._emitCurrentToken();\n    }\n\n    else if (cp === $.EOF) {\n        this._emitCurrentToken();\n        this._reconsumeInState(DATA_STATE);\n    }\n\n    else {\n        this.currentToken.data += toChar(cp);\n        this.state = COMMENT_STATE;\n    }\n};\n\n\n//12.2.4.47 Comment start dash state\n//------------------------------------------------------------------\n_[COMMENT_START_DASH_STATE] = function commentStartDashState(cp) {\n    if (cp === $.HYPHEN_MINUS)\n        this.state = COMMENT_END_STATE;\n\n    else if (cp === $.NULL) {\n        this.currentToken.data += '-';\n        this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;\n        this.state = COMMENT_STATE;\n    }\n\n    else if (cp === $.GREATER_THAN_SIGN) {\n        this.state = DATA_STATE;\n        this._emitCurrentToken();\n    }\n\n    else if (cp === $.EOF) {\n        this._emitCurrentToken();\n        this._reconsumeInState(DATA_STATE);\n    }\n\n    else {\n        this.currentToken.data += '-';\n        this.currentToken.data += toChar(cp);\n        this.state = COMMENT_STATE;\n    }\n};\n\n\n//12.2.4.48 Comment state\n//------------------------------------------------------------------\n_[COMMENT_STATE] = function commentState(cp) {\n    if (cp === $.HYPHEN_MINUS)\n        this.state = COMMENT_END_DASH_STATE;\n\n    else if (cp === $.NULL)\n        this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;\n\n    else if (cp === $.EOF) {\n        this._emitCurrentToken();\n        this._reconsumeInState(DATA_STATE);\n    }\n\n    else\n        this.currentToken.data += toChar(cp);\n};\n\n\n//12.2.4.49 Comment end dash state\n//------------------------------------------------------------------\n_[COMMENT_END_DASH_STATE] = function commentEndDashState(cp) {\n    if (cp === $.HYPHEN_MINUS)\n        this.state = COMMENT_END_STATE;\n\n    else if (cp === $.NULL) {\n        this.currentToken.data += '-';\n        this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;\n        this.state = COMMENT_STATE;\n    }\n\n    else if (cp === $.EOF) {\n        this._emitCurrentToken();\n        this._reconsumeInState(DATA_STATE);\n    }\n\n    else {\n        this.currentToken.data += '-';\n        this.currentToken.data += toChar(cp);\n        this.state = COMMENT_STATE;\n    }\n};\n\n\n//12.2.4.50 Comment end state\n//------------------------------------------------------------------\n_[COMMENT_END_STATE] = function commentEndState(cp) {\n    if (cp === $.GREATER_THAN_SIGN) {\n        this.state = DATA_STATE;\n        this._emitCurrentToken();\n    }\n\n    else if (cp === $.EXCLAMATION_MARK)\n        this.state = COMMENT_END_BANG_STATE;\n\n    else if (cp === $.HYPHEN_MINUS)\n        this.currentToken.data += '-';\n\n    else if (cp === $.NULL) {\n        this.currentToken.data += '--';\n        this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;\n        this.state = COMMENT_STATE;\n    }\n\n    else if (cp === $.EOF) {\n        this._reconsumeInState(DATA_STATE);\n        this._emitCurrentToken();\n    }\n\n    else {\n        this.currentToken.data += '--';\n        this.currentToken.data += toChar(cp);\n        this.state = COMMENT_STATE;\n    }\n};\n\n\n//12.2.4.51 Comment end bang state\n//------------------------------------------------------------------\n_[COMMENT_END_BANG_STATE] = function commentEndBangState(cp) {\n    if (cp === $.HYPHEN_MINUS) {\n        this.currentToken.data += '--!';\n        this.state = COMMENT_END_DASH_STATE;\n    }\n\n    else if (cp === $.GREATER_THAN_SIGN) {\n        this.state = DATA_STATE;\n        this._emitCurrentToken();\n    }\n\n    else if (cp === $.NULL) {\n        this.currentToken.data += '--!';\n        this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;\n        this.state = COMMENT_STATE;\n    }\n\n    else if (cp === $.EOF) {\n        this._emitCurrentToken();\n        this._reconsumeInState(DATA_STATE);\n    }\n\n    else {\n        this.currentToken.data += '--!';\n        this.currentToken.data += toChar(cp);\n        this.state = COMMENT_STATE;\n    }\n};\n\n\n//12.2.4.52 DOCTYPE state\n//------------------------------------------------------------------\n_[DOCTYPE_STATE] = function doctypeState(cp) {\n    if (isWhitespace(cp))\n        return;\n\n    else if (cp === $.GREATER_THAN_SIGN) {\n        this._createDoctypeToken(null);\n        this.currentToken.forceQuirks = true;\n        this._emitCurrentToken();\n        this.state = DATA_STATE;\n    }\n\n    else if (cp === $.EOF) {\n        this._createDoctypeToken(null);\n        this.currentToken.forceQuirks = true;\n        this._emitCurrentToken();\n        this._reconsumeInState(DATA_STATE);\n    }\n    else {\n        this._createDoctypeToken('');\n        this._reconsumeInState(DOCTYPE_NAME_STATE);\n    }\n};\n\n\n//12.2.4.54 DOCTYPE name state\n//------------------------------------------------------------------\n_[DOCTYPE_NAME_STATE] = function doctypeNameState(cp) {\n    if (isWhitespace(cp) || cp === $.GREATER_THAN_SIGN || cp === $.EOF)\n        this._reconsumeInState(AFTER_DOCTYPE_NAME_STATE);\n\n    else if (isAsciiUpper(cp))\n        this.currentToken.name += toAsciiLowerChar(cp);\n\n    else if (cp === $.NULL)\n        this.currentToken.name += UNICODE.REPLACEMENT_CHARACTER;\n\n    else\n        this.currentToken.name += toChar(cp);\n};\n\n\n//12.2.4.55 After DOCTYPE name state\n//------------------------------------------------------------------\n_[AFTER_DOCTYPE_NAME_STATE] = function afterDoctypeNameState(cp) {\n    if (isWhitespace(cp))\n        return;\n\n    if (cp === $.GREATER_THAN_SIGN) {\n        this.state = DATA_STATE;\n        this._emitCurrentToken();\n    }\n\n    else {\n        var publicMatch = this._consumeSubsequentIfMatch($$.PUBLIC_STRING, cp, false),\n            systemMatch = !publicMatch && this._consumeSubsequentIfMatch($$.SYSTEM_STRING, cp, false);\n\n        if (!this._ensureHibernation()) {\n            if (publicMatch)\n                this.state = BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE;\n\n            else if (systemMatch)\n                this.state = BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE;\n\n            else {\n                this.currentToken.forceQuirks = true;\n                this.state = BOGUS_DOCTYPE_STATE;\n            }\n        }\n    }\n};\n\n\n//12.2.4.57 Before DOCTYPE public identifier state\n//------------------------------------------------------------------\n_[BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE] = function beforeDoctypePublicIdentifierState(cp) {\n    if (isWhitespace(cp))\n        return;\n\n    if (cp === $.QUOTATION_MARK) {\n        this.currentToken.publicId = '';\n        this.state = DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE;\n    }\n\n    else if (cp === $.APOSTROPHE) {\n        this.currentToken.publicId = '';\n        this.state = DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE;\n    }\n\n    else {\n        this.currentToken.forceQuirks = true;\n        this._reconsumeInState(BOGUS_DOCTYPE_STATE);\n    }\n};\n\n\n//12.2.4.58 DOCTYPE public identifier (double-quoted) state\n//------------------------------------------------------------------\n_[DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE] = function doctypePublicIdentifierDoubleQuotedState(cp) {\n    if (cp === $.QUOTATION_MARK)\n        this.state = BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE;\n\n    else if (cp === $.NULL)\n        this.currentToken.publicId += UNICODE.REPLACEMENT_CHARACTER;\n\n    else if (cp === $.GREATER_THAN_SIGN) {\n        this.currentToken.forceQuirks = true;\n        this._emitCurrentToken();\n        this.state = DATA_STATE;\n    }\n\n    else if (cp === $.EOF) {\n        this.currentToken.forceQuirks = true;\n        this._emitCurrentToken();\n        this._reconsumeInState(DATA_STATE);\n    }\n\n    else\n        this.currentToken.publicId += toChar(cp);\n};\n\n\n//12.2.4.59 DOCTYPE public identifier (single-quoted) state\n//------------------------------------------------------------------\n_[DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE] = function doctypePublicIdentifierSingleQuotedState(cp) {\n    if (cp === $.APOSTROPHE)\n        this.state = BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE;\n\n    else if (cp === $.NULL)\n        this.currentToken.publicId += UNICODE.REPLACEMENT_CHARACTER;\n\n    else if (cp === $.GREATER_THAN_SIGN) {\n        this.currentToken.forceQuirks = true;\n        this._emitCurrentToken();\n        this.state = DATA_STATE;\n    }\n\n    else if (cp === $.EOF) {\n        this.currentToken.forceQuirks = true;\n        this._emitCurrentToken();\n        this._reconsumeInState(DATA_STATE);\n    }\n\n    else\n        this.currentToken.publicId += toChar(cp);\n};\n\n\n//12.2.4.61 Between DOCTYPE public and system identifiers state\n//------------------------------------------------------------------\n_[BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE] = function betweenDoctypePublicAndSystemIdentifiersState(cp) {\n    if (isWhitespace(cp))\n        return;\n\n    if (cp === $.GREATER_THAN_SIGN) {\n        this._emitCurrentToken();\n        this.state = DATA_STATE;\n    }\n\n    else if (cp === $.QUOTATION_MARK) {\n        this.currentToken.systemId = '';\n        this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;\n    }\n\n\n    else if (cp === $.APOSTROPHE) {\n        this.currentToken.systemId = '';\n        this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;\n    }\n\n    else {\n        this.currentToken.forceQuirks = true;\n        this._reconsumeInState(BOGUS_DOCTYPE_STATE);\n    }\n};\n\n\n//12.2.4.63 Before DOCTYPE system identifier state\n//------------------------------------------------------------------\n_[BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE] = function beforeDoctypeSystemIdentifierState(cp) {\n    if (isWhitespace(cp))\n        return;\n\n    if (cp === $.QUOTATION_MARK) {\n        this.currentToken.systemId = '';\n        this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;\n    }\n\n    else if (cp === $.APOSTROPHE) {\n        this.currentToken.systemId = '';\n        this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;\n    }\n\n    else {\n        this.currentToken.forceQuirks = true;\n        this._reconsumeInState(BOGUS_DOCTYPE_STATE);\n    }\n};\n\n\n//12.2.4.64 DOCTYPE system identifier (double-quoted) state\n//------------------------------------------------------------------\n_[DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE] = function doctypeSystemIdentifierDoubleQuotedState(cp) {\n    if (cp === $.QUOTATION_MARK)\n        this.state = AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE;\n\n    else if (cp === $.GREATER_THAN_SIGN) {\n        this.currentToken.forceQuirks = true;\n        this._emitCurrentToken();\n        this.state = DATA_STATE;\n    }\n\n    else if (cp === $.NULL)\n        this.currentToken.systemId += UNICODE.REPLACEMENT_CHARACTER;\n\n    else if (cp === $.EOF) {\n        this.currentToken.forceQuirks = true;\n        this._emitCurrentToken();\n        this._reconsumeInState(DATA_STATE);\n    }\n\n    else\n        this.currentToken.systemId += toChar(cp);\n};\n\n\n//12.2.4.65 DOCTYPE system identifier (single-quoted) state\n//------------------------------------------------------------------\n_[DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE] = function doctypeSystemIdentifierSingleQuotedState(cp) {\n    if (cp === $.APOSTROPHE)\n        this.state = AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE;\n\n    else if (cp === $.GREATER_THAN_SIGN) {\n        this.currentToken.forceQuirks = true;\n        this._emitCurrentToken();\n        this.state = DATA_STATE;\n    }\n\n    else if (cp === $.NULL)\n        this.currentToken.systemId += UNICODE.REPLACEMENT_CHARACTER;\n\n    else if (cp === $.EOF) {\n        this.currentToken.forceQuirks = true;\n        this._emitCurrentToken();\n        this._reconsumeInState(DATA_STATE);\n    }\n\n    else\n        this.currentToken.systemId += toChar(cp);\n};\n\n\n//12.2.4.66 After DOCTYPE system identifier state\n//------------------------------------------------------------------\n_[AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE] = function afterDoctypeSystemIdentifierState(cp) {\n    if (isWhitespace(cp))\n        return;\n\n    if (cp === $.GREATER_THAN_SIGN) {\n        this._emitCurrentToken();\n        this.state = DATA_STATE;\n    }\n\n    else if (cp === $.EOF) {\n        this.currentToken.forceQuirks = true;\n        this._emitCurrentToken();\n        this._reconsumeInState(DATA_STATE);\n    }\n\n    else\n        this.state = BOGUS_DOCTYPE_STATE;\n};\n\n\n//12.2.4.67 Bogus DOCTYPE state\n//------------------------------------------------------------------\n_[BOGUS_DOCTYPE_STATE] = function bogusDoctypeState(cp) {\n    if (cp === $.GREATER_THAN_SIGN) {\n        this._emitCurrentToken();\n        this.state = DATA_STATE;\n    }\n\n    else if (cp === $.EOF) {\n        this._emitCurrentToken();\n        this._reconsumeInState(DATA_STATE);\n    }\n};\n\n\n//12.2.4.68 CDATA section state\n//------------------------------------------------------------------\n_[CDATA_SECTION_STATE] = function cdataSectionState(cp) {\n    while (true) {\n        if (cp === $.EOF) {\n            this._reconsumeInState(DATA_STATE);\n            break;\n        }\n\n        else {\n            var cdataEndMatch = this._consumeSubsequentIfMatch($$.CDATA_END_STRING, cp, true);\n\n            if (this._ensureHibernation())\n                break;\n\n            if (cdataEndMatch) {\n                this.state = DATA_STATE;\n                break;\n            }\n\n            this._emitCodePoint(cp);\n\n            this._hibernationSnapshot();\n            cp = this._consume();\n\n            if (this._ensureHibernation())\n                break;\n        }\n    }\n};\n\n\n//# sourceURL=webpack:///./node_modules/parse5/lib/tokenizer/index.js?");

/***/ }),

/***/ "./node_modules/parse5/lib/tokenizer/named_entity_data.js":
/*!****************************************************************!*\
  !*** ./node_modules/parse5/lib/tokenizer/named_entity_data.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n//NOTE: this file contains auto-generated array mapped radix tree that is used for the named entity references consumption\n//(details: https://github.com/inikulin/parse5/tree/master/scripts/generate_named_entity_data/README.md)\nmodule.exports = new Uint16Array([4,52,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,106,303,412,810,1432,1701,1796,1987,2114,2360,2420,2484,3170,3251,4140,4393,4575,4610,5106,5512,5728,6117,6274,6315,6345,6427,6516,7002,7910,8733,9323,9870,10170,10631,10893,11318,11386,11467,12773,13092,14474,14922,15448,15542,16419,17666,18166,18611,19004,19095,19298,19397,4,16,69,77,97,98,99,102,103,108,109,110,111,112,114,115,116,117,140,150,158,169,176,194,199,210,216,222,226,242,256,266,283,294,108,105,103,5,198,1,59,148,1,198,80,5,38,1,59,156,1,38,99,117,116,101,5,193,1,59,167,1,193,114,101,118,101,59,1,258,4,2,105,121,182,191,114,99,5,194,1,59,189,1,194,59,1,1040,114,59,3,55349,56580,114,97,118,101,5,192,1,59,208,1,192,112,104,97,59,1,913,97,99,114,59,1,256,100,59,1,10835,4,2,103,112,232,237,111,110,59,1,260,102,59,3,55349,56632,112,108,121,70,117,110,99,116,105,111,110,59,1,8289,105,110,103,5,197,1,59,264,1,197,4,2,99,115,272,277,114,59,3,55349,56476,105,103,110,59,1,8788,105,108,100,101,5,195,1,59,292,1,195,109,108,5,196,1,59,301,1,196,4,8,97,99,101,102,111,114,115,117,321,350,354,383,388,394,400,405,4,2,99,114,327,336,107,115,108,97,115,104,59,1,8726,4,2,118,119,342,345,59,1,10983,101,100,59,1,8966,121,59,1,1041,4,3,99,114,116,362,369,379,97,117,115,101,59,1,8757,110,111,117,108,108,105,115,59,1,8492,97,59,1,914,114,59,3,55349,56581,112,102,59,3,55349,56633,101,118,101,59,1,728,99,114,59,1,8492,109,112,101,113,59,1,8782,4,14,72,79,97,99,100,101,102,104,105,108,111,114,115,117,442,447,456,504,542,547,569,573,577,616,678,784,790,796,99,121,59,1,1063,80,89,5,169,1,59,454,1,169,4,3,99,112,121,464,470,497,117,116,101,59,1,262,4,2,59,105,476,478,1,8914,116,97,108,68,105,102,102,101,114,101,110,116,105,97,108,68,59,1,8517,108,101,121,115,59,1,8493,4,4,97,101,105,111,514,520,530,535,114,111,110,59,1,268,100,105,108,5,199,1,59,528,1,199,114,99,59,1,264,110,105,110,116,59,1,8752,111,116,59,1,266,4,2,100,110,553,560,105,108,108,97,59,1,184,116,101,114,68,111,116,59,1,183,114,59,1,8493,105,59,1,935,114,99,108,101,4,4,68,77,80,84,591,596,603,609,111,116,59,1,8857,105,110,117,115,59,1,8854,108,117,115,59,1,8853,105,109,101,115,59,1,8855,111,4,2,99,115,623,646,107,119,105,115,101,67,111,110,116,111,117,114,73,110,116,101,103,114,97,108,59,1,8754,101,67,117,114,108,121,4,2,68,81,658,671,111,117,98,108,101,81,117,111,116,101,59,1,8221,117,111,116,101,59,1,8217,4,4,108,110,112,117,688,701,736,753,111,110,4,2,59,101,696,698,1,8759,59,1,10868,4,3,103,105,116,709,717,722,114,117,101,110,116,59,1,8801,110,116,59,1,8751,111,117,114,73,110,116,101,103,114,97,108,59,1,8750,4,2,102,114,742,745,59,1,8450,111,100,117,99,116,59,1,8720,110,116,101,114,67,108,111,99,107,119,105,115,101,67,111,110,116,111,117,114,73,110,116,101,103,114,97,108,59,1,8755,111,115,115,59,1,10799,99,114,59,3,55349,56478,112,4,2,59,67,803,805,1,8915,97,112,59,1,8781,4,11,68,74,83,90,97,99,101,102,105,111,115,834,850,855,860,865,888,903,916,921,1011,1415,4,2,59,111,840,842,1,8517,116,114,97,104,100,59,1,10513,99,121,59,1,1026,99,121,59,1,1029,99,121,59,1,1039,4,3,103,114,115,873,879,883,103,101,114,59,1,8225,114,59,1,8609,104,118,59,1,10980,4,2,97,121,894,900,114,111,110,59,1,270,59,1,1044,108,4,2,59,116,910,912,1,8711,97,59,1,916,114,59,3,55349,56583,4,2,97,102,927,998,4,2,99,109,933,992,114,105,116,105,99,97,108,4,4,65,68,71,84,950,957,978,985,99,117,116,101,59,1,180,111,4,2,116,117,964,967,59,1,729,98,108,101,65,99,117,116,101,59,1,733,114,97,118,101,59,1,96,105,108,100,101,59,1,732,111,110,100,59,1,8900,102,101,114,101,110,116,105,97,108,68,59,1,8518,4,4,112,116,117,119,1021,1026,1048,1249,102,59,3,55349,56635,4,3,59,68,69,1034,1036,1041,1,168,111,116,59,1,8412,113,117,97,108,59,1,8784,98,108,101,4,6,67,68,76,82,85,86,1065,1082,1101,1189,1211,1236,111,110,116,111,117,114,73,110,116,101,103,114,97,108,59,1,8751,111,4,2,116,119,1089,1092,59,1,168,110,65,114,114,111,119,59,1,8659,4,2,101,111,1107,1141,102,116,4,3,65,82,84,1117,1124,1136,114,114,111,119,59,1,8656,105,103,104,116,65,114,114,111,119,59,1,8660,101,101,59,1,10980,110,103,4,2,76,82,1149,1177,101,102,116,4,2,65,82,1158,1165,114,114,111,119,59,1,10232,105,103,104,116,65,114,114,111,119,59,1,10234,105,103,104,116,65,114,114,111,119,59,1,10233,105,103,104,116,4,2,65,84,1199,1206,114,114,111,119,59,1,8658,101,101,59,1,8872,112,4,2,65,68,1218,1225,114,114,111,119,59,1,8657,111,119,110,65,114,114,111,119,59,1,8661,101,114,116,105,99,97,108,66,97,114,59,1,8741,110,4,6,65,66,76,82,84,97,1264,1292,1299,1352,1391,1408,114,114,111,119,4,3,59,66,85,1276,1278,1283,1,8595,97,114,59,1,10515,112,65,114,114,111,119,59,1,8693,114,101,118,101,59,1,785,101,102,116,4,3,82,84,86,1310,1323,1334,105,103,104,116,86,101,99,116,111,114,59,1,10576,101,101,86,101,99,116,111,114,59,1,10590,101,99,116,111,114,4,2,59,66,1345,1347,1,8637,97,114,59,1,10582,105,103,104,116,4,2,84,86,1362,1373,101,101,86,101,99,116,111,114,59,1,10591,101,99,116,111,114,4,2,59,66,1384,1386,1,8641,97,114,59,1,10583,101,101,4,2,59,65,1399,1401,1,8868,114,114,111,119,59,1,8615,114,114,111,119,59,1,8659,4,2,99,116,1421,1426,114,59,3,55349,56479,114,111,107,59,1,272,4,16,78,84,97,99,100,102,103,108,109,111,112,113,115,116,117,120,1466,1470,1478,1489,1515,1520,1525,1536,1544,1593,1609,1617,1650,1664,1668,1677,71,59,1,330,72,5,208,1,59,1476,1,208,99,117,116,101,5,201,1,59,1487,1,201,4,3,97,105,121,1497,1503,1512,114,111,110,59,1,282,114,99,5,202,1,59,1510,1,202,59,1,1069,111,116,59,1,278,114,59,3,55349,56584,114,97,118,101,5,200,1,59,1534,1,200,101,109,101,110,116,59,1,8712,4,2,97,112,1550,1555,99,114,59,1,274,116,121,4,2,83,86,1563,1576,109,97,108,108,83,113,117,97,114,101,59,1,9723,101,114,121,83,109,97,108,108,83,113,117,97,114,101,59,1,9643,4,2,103,112,1599,1604,111,110,59,1,280,102,59,3,55349,56636,115,105,108,111,110,59,1,917,117,4,2,97,105,1624,1640,108,4,2,59,84,1631,1633,1,10869,105,108,100,101,59,1,8770,108,105,98,114,105,117,109,59,1,8652,4,2,99,105,1656,1660,114,59,1,8496,109,59,1,10867,97,59,1,919,109,108,5,203,1,59,1675,1,203,4,2,105,112,1683,1689,115,116,115,59,1,8707,111,110,101,110,116,105,97,108,69,59,1,8519,4,5,99,102,105,111,115,1713,1717,1722,1762,1791,121,59,1,1060,114,59,3,55349,56585,108,108,101,100,4,2,83,86,1732,1745,109,97,108,108,83,113,117,97,114,101,59,1,9724,101,114,121,83,109,97,108,108,83,113,117,97,114,101,59,1,9642,4,3,112,114,117,1770,1775,1781,102,59,3,55349,56637,65,108,108,59,1,8704,114,105,101,114,116,114,102,59,1,8497,99,114,59,1,8497,4,12,74,84,97,98,99,100,102,103,111,114,115,116,1822,1827,1834,1848,1855,1877,1882,1887,1890,1896,1978,1984,99,121,59,1,1027,5,62,1,59,1832,1,62,109,109,97,4,2,59,100,1843,1845,1,915,59,1,988,114,101,118,101,59,1,286,4,3,101,105,121,1863,1869,1874,100,105,108,59,1,290,114,99,59,1,284,59,1,1043,111,116,59,1,288,114,59,3,55349,56586,59,1,8921,112,102,59,3,55349,56638,101,97,116,101,114,4,6,69,70,71,76,83,84,1915,1933,1944,1953,1959,1971,113,117,97,108,4,2,59,76,1925,1927,1,8805,101,115,115,59,1,8923,117,108,108,69,113,117,97,108,59,1,8807,114,101,97,116,101,114,59,1,10914,101,115,115,59,1,8823,108,97,110,116,69,113,117,97,108,59,1,10878,105,108,100,101,59,1,8819,99,114,59,3,55349,56482,59,1,8811,4,8,65,97,99,102,105,111,115,117,2005,2012,2026,2032,2036,2049,2073,2089,82,68,99,121,59,1,1066,4,2,99,116,2018,2023,101,107,59,1,711,59,1,94,105,114,99,59,1,292,114,59,1,8460,108,98,101,114,116,83,112,97,99,101,59,1,8459,4,2,112,114,2055,2059,102,59,1,8461,105,122,111,110,116,97,108,76,105,110,101,59,1,9472,4,2,99,116,2079,2083,114,59,1,8459,114,111,107,59,1,294,109,112,4,2,68,69,2097,2107,111,119,110,72,117,109,112,59,1,8782,113,117,97,108,59,1,8783,4,14,69,74,79,97,99,100,102,103,109,110,111,115,116,117,2144,2149,2155,2160,2171,2189,2194,2198,2209,2245,2307,2329,2334,2341,99,121,59,1,1045,108,105,103,59,1,306,99,121,59,1,1025,99,117,116,101,5,205,1,59,2169,1,205,4,2,105,121,2177,2186,114,99,5,206,1,59,2184,1,206,59,1,1048,111,116,59,1,304,114,59,1,8465,114,97,118,101,5,204,1,59,2207,1,204,4,3,59,97,112,2217,2219,2238,1,8465,4,2,99,103,2225,2229,114,59,1,298,105,110,97,114,121,73,59,1,8520,108,105,101,115,59,1,8658,4,2,116,118,2251,2281,4,2,59,101,2257,2259,1,8748,4,2,103,114,2265,2271,114,97,108,59,1,8747,115,101,99,116,105,111,110,59,1,8898,105,115,105,98,108,101,4,2,67,84,2293,2300,111,109,109,97,59,1,8291,105,109,101,115,59,1,8290,4,3,103,112,116,2315,2320,2325,111,110,59,1,302,102,59,3,55349,56640,97,59,1,921,99,114,59,1,8464,105,108,100,101,59,1,296,4,2,107,109,2347,2352,99,121,59,1,1030,108,5,207,1,59,2358,1,207,4,5,99,102,111,115,117,2372,2386,2391,2397,2414,4,2,105,121,2378,2383,114,99,59,1,308,59,1,1049,114,59,3,55349,56589,112,102,59,3,55349,56641,4,2,99,101,2403,2408,114,59,3,55349,56485,114,99,121,59,1,1032,107,99,121,59,1,1028,4,7,72,74,97,99,102,111,115,2436,2441,2446,2452,2467,2472,2478,99,121,59,1,1061,99,121,59,1,1036,112,112,97,59,1,922,4,2,101,121,2458,2464,100,105,108,59,1,310,59,1,1050,114,59,3,55349,56590,112,102,59,3,55349,56642,99,114,59,3,55349,56486,4,11,74,84,97,99,101,102,108,109,111,115,116,2508,2513,2520,2562,2585,2981,2986,3004,3011,3146,3167,99,121,59,1,1033,5,60,1,59,2518,1,60,4,5,99,109,110,112,114,2532,2538,2544,2548,2558,117,116,101,59,1,313,98,100,97,59,1,923,103,59,1,10218,108,97,99,101,116,114,102,59,1,8466,114,59,1,8606,4,3,97,101,121,2570,2576,2582,114,111,110,59,1,317,100,105,108,59,1,315,59,1,1051,4,2,102,115,2591,2907,116,4,10,65,67,68,70,82,84,85,86,97,114,2614,2663,2672,2728,2735,2760,2820,2870,2888,2895,4,2,110,114,2620,2633,103,108,101,66,114,97,99,107,101,116,59,1,10216,114,111,119,4,3,59,66,82,2644,2646,2651,1,8592,97,114,59,1,8676,105,103,104,116,65,114,114,111,119,59,1,8646,101,105,108,105,110,103,59,1,8968,111,4,2,117,119,2679,2692,98,108,101,66,114,97,99,107,101,116,59,1,10214,110,4,2,84,86,2699,2710,101,101,86,101,99,116,111,114,59,1,10593,101,99,116,111,114,4,2,59,66,2721,2723,1,8643,97,114,59,1,10585,108,111,111,114,59,1,8970,105,103,104,116,4,2,65,86,2745,2752,114,114,111,119,59,1,8596,101,99,116,111,114,59,1,10574,4,2,101,114,2766,2792,101,4,3,59,65,86,2775,2777,2784,1,8867,114,114,111,119,59,1,8612,101,99,116,111,114,59,1,10586,105,97,110,103,108,101,4,3,59,66,69,2806,2808,2813,1,8882,97,114,59,1,10703,113,117,97,108,59,1,8884,112,4,3,68,84,86,2829,2841,2852,111,119,110,86,101,99,116,111,114,59,1,10577,101,101,86,101,99,116,111,114,59,1,10592,101,99,116,111,114,4,2,59,66,2863,2865,1,8639,97,114,59,1,10584,101,99,116,111,114,4,2,59,66,2881,2883,1,8636,97,114,59,1,10578,114,114,111,119,59,1,8656,105,103,104,116,97,114,114,111,119,59,1,8660,115,4,6,69,70,71,76,83,84,2922,2936,2947,2956,2962,2974,113,117,97,108,71,114,101,97,116,101,114,59,1,8922,117,108,108,69,113,117,97,108,59,1,8806,114,101,97,116,101,114,59,1,8822,101,115,115,59,1,10913,108,97,110,116,69,113,117,97,108,59,1,10877,105,108,100,101,59,1,8818,114,59,3,55349,56591,4,2,59,101,2992,2994,1,8920,102,116,97,114,114,111,119,59,1,8666,105,100,111,116,59,1,319,4,3,110,112,119,3019,3110,3115,103,4,4,76,82,108,114,3030,3058,3070,3098,101,102,116,4,2,65,82,3039,3046,114,114,111,119,59,1,10229,105,103,104,116,65,114,114,111,119,59,1,10231,105,103,104,116,65,114,114,111,119,59,1,10230,101,102,116,4,2,97,114,3079,3086,114,114,111,119,59,1,10232,105,103,104,116,97,114,114,111,119,59,1,10234,105,103,104,116,97,114,114,111,119,59,1,10233,102,59,3,55349,56643,101,114,4,2,76,82,3123,3134,101,102,116,65,114,114,111,119,59,1,8601,105,103,104,116,65,114,114,111,119,59,1,8600,4,3,99,104,116,3154,3158,3161,114,59,1,8466,59,1,8624,114,111,107,59,1,321,59,1,8810,4,8,97,99,101,102,105,111,115,117,3188,3192,3196,3222,3227,3237,3243,3248,112,59,1,10501,121,59,1,1052,4,2,100,108,3202,3213,105,117,109,83,112,97,99,101,59,1,8287,108,105,110,116,114,102,59,1,8499,114,59,3,55349,56592,110,117,115,80,108,117,115,59,1,8723,112,102,59,3,55349,56644,99,114,59,1,8499,59,1,924,4,9,74,97,99,101,102,111,115,116,117,3271,3276,3283,3306,3422,3427,4120,4126,4137,99,121,59,1,1034,99,117,116,101,59,1,323,4,3,97,101,121,3291,3297,3303,114,111,110,59,1,327,100,105,108,59,1,325,59,1,1053,4,3,103,115,119,3314,3380,3415,97,116,105,118,101,4,3,77,84,86,3327,3340,3365,101,100,105,117,109,83,112,97,99,101,59,1,8203,104,105,4,2,99,110,3348,3357,107,83,112,97,99,101,59,1,8203,83,112,97,99,101,59,1,8203,101,114,121,84,104,105,110,83,112,97,99,101,59,1,8203,116,101,100,4,2,71,76,3389,3405,114,101,97,116,101,114,71,114,101,97,116,101,114,59,1,8811,101,115,115,76,101,115,115,59,1,8810,76,105,110,101,59,1,10,114,59,3,55349,56593,4,4,66,110,112,116,3437,3444,3460,3464,114,101,97,107,59,1,8288,66,114,101,97,107,105,110,103,83,112,97,99,101,59,1,160,102,59,1,8469,4,13,59,67,68,69,71,72,76,78,80,82,83,84,86,3492,3494,3517,3536,3578,3657,3685,3784,3823,3860,3915,4066,4107,1,10988,4,2,111,117,3500,3510,110,103,114,117,101,110,116,59,1,8802,112,67,97,112,59,1,8813,111,117,98,108,101,86,101,114,116,105,99,97,108,66,97,114,59,1,8742,4,3,108,113,120,3544,3552,3571,101,109,101,110,116,59,1,8713,117,97,108,4,2,59,84,3561,3563,1,8800,105,108,100,101,59,3,8770,824,105,115,116,115,59,1,8708,114,101,97,116,101,114,4,7,59,69,70,71,76,83,84,3600,3602,3609,3621,3631,3637,3650,1,8815,113,117,97,108,59,1,8817,117,108,108,69,113,117,97,108,59,3,8807,824,114,101,97,116,101,114,59,3,8811,824,101,115,115,59,1,8825,108,97,110,116,69,113,117,97,108,59,3,10878,824,105,108,100,101,59,1,8821,117,109,112,4,2,68,69,3666,3677,111,119,110,72,117,109,112,59,3,8782,824,113,117,97,108,59,3,8783,824,101,4,2,102,115,3692,3724,116,84,114,105,97,110,103,108,101,4,3,59,66,69,3709,3711,3717,1,8938,97,114,59,3,10703,824,113,117,97,108,59,1,8940,115,4,6,59,69,71,76,83,84,3739,3741,3748,3757,3764,3777,1,8814,113,117,97,108,59,1,8816,114,101,97,116,101,114,59,1,8824,101,115,115,59,3,8810,824,108,97,110,116,69,113,117,97,108,59,3,10877,824,105,108,100,101,59,1,8820,101,115,116,101,100,4,2,71,76,3795,3812,114,101,97,116,101,114,71,114,101,97,116,101,114,59,3,10914,824,101,115,115,76,101,115,115,59,3,10913,824,114,101,99,101,100,101,115,4,3,59,69,83,3838,3840,3848,1,8832,113,117,97,108,59,3,10927,824,108,97,110,116,69,113,117,97,108,59,1,8928,4,2,101,105,3866,3881,118,101,114,115,101,69,108,101,109,101,110,116,59,1,8716,103,104,116,84,114,105,97,110,103,108,101,4,3,59,66,69,3900,3902,3908,1,8939,97,114,59,3,10704,824,113,117,97,108,59,1,8941,4,2,113,117,3921,3973,117,97,114,101,83,117,4,2,98,112,3933,3952,115,101,116,4,2,59,69,3942,3945,3,8847,824,113,117,97,108,59,1,8930,101,114,115,101,116,4,2,59,69,3963,3966,3,8848,824,113,117,97,108,59,1,8931,4,3,98,99,112,3981,4000,4045,115,101,116,4,2,59,69,3990,3993,3,8834,8402,113,117,97,108,59,1,8840,99,101,101,100,115,4,4,59,69,83,84,4015,4017,4025,4037,1,8833,113,117,97,108,59,3,10928,824,108,97,110,116,69,113,117,97,108,59,1,8929,105,108,100,101,59,3,8831,824,101,114,115,101,116,4,2,59,69,4056,4059,3,8835,8402,113,117,97,108,59,1,8841,105,108,100,101,4,4,59,69,70,84,4080,4082,4089,4100,1,8769,113,117,97,108,59,1,8772,117,108,108,69,113,117,97,108,59,1,8775,105,108,100,101,59,1,8777,101,114,116,105,99,97,108,66,97,114,59,1,8740,99,114,59,3,55349,56489,105,108,100,101,5,209,1,59,4135,1,209,59,1,925,4,14,69,97,99,100,102,103,109,111,112,114,115,116,117,118,4170,4176,4187,4205,4212,4217,4228,4253,4259,4292,4295,4316,4337,4346,108,105,103,59,1,338,99,117,116,101,5,211,1,59,4185,1,211,4,2,105,121,4193,4202,114,99,5,212,1,59,4200,1,212,59,1,1054,98,108,97,99,59,1,336,114,59,3,55349,56594,114,97,118,101,5,210,1,59,4226,1,210,4,3,97,101,105,4236,4241,4246,99,114,59,1,332,103,97,59,1,937,99,114,111,110,59,1,927,112,102,59,3,55349,56646,101,110,67,117,114,108,121,4,2,68,81,4272,4285,111,117,98,108,101,81,117,111,116,101,59,1,8220,117,111,116,101,59,1,8216,59,1,10836,4,2,99,108,4301,4306,114,59,3,55349,56490,97,115,104,5,216,1,59,4314,1,216,105,4,2,108,109,4323,4332,100,101,5,213,1,59,4330,1,213,101,115,59,1,10807,109,108,5,214,1,59,4344,1,214,101,114,4,2,66,80,4354,4380,4,2,97,114,4360,4364,114,59,1,8254,97,99,4,2,101,107,4372,4375,59,1,9182,101,116,59,1,9140,97,114,101,110,116,104,101,115,105,115,59,1,9180,4,9,97,99,102,104,105,108,111,114,115,4413,4422,4426,4431,4435,4438,4448,4471,4561,114,116,105,97,108,68,59,1,8706,121,59,1,1055,114,59,3,55349,56595,105,59,1,934,59,1,928,117,115,77,105,110,117,115,59,1,177,4,2,105,112,4454,4467,110,99,97,114,101,112,108,97,110,101,59,1,8460,102,59,1,8473,4,4,59,101,105,111,4481,4483,4526,4531,1,10939,99,101,100,101,115,4,4,59,69,83,84,4498,4500,4507,4519,1,8826,113,117,97,108,59,1,10927,108,97,110,116,69,113,117,97,108,59,1,8828,105,108,100,101,59,1,8830,109,101,59,1,8243,4,2,100,112,4537,4543,117,99,116,59,1,8719,111,114,116,105,111,110,4,2,59,97,4555,4557,1,8759,108,59,1,8733,4,2,99,105,4567,4572,114,59,3,55349,56491,59,1,936,4,4,85,102,111,115,4585,4594,4599,4604,79,84,5,34,1,59,4592,1,34,114,59,3,55349,56596,112,102,59,1,8474,99,114,59,3,55349,56492,4,12,66,69,97,99,101,102,104,105,111,114,115,117,4636,4642,4650,4681,4704,4763,4767,4771,5047,5069,5081,5094,97,114,114,59,1,10512,71,5,174,1,59,4648,1,174,4,3,99,110,114,4658,4664,4668,117,116,101,59,1,340,103,59,1,10219,114,4,2,59,116,4675,4677,1,8608,108,59,1,10518,4,3,97,101,121,4689,4695,4701,114,111,110,59,1,344,100,105,108,59,1,342,59,1,1056,4,2,59,118,4710,4712,1,8476,101,114,115,101,4,2,69,85,4722,4748,4,2,108,113,4728,4736,101,109,101,110,116,59,1,8715,117,105,108,105,98,114,105,117,109,59,1,8651,112,69,113,117,105,108,105,98,114,105,117,109,59,1,10607,114,59,1,8476,111,59,1,929,103,104,116,4,8,65,67,68,70,84,85,86,97,4792,4840,4849,4905,4912,4972,5022,5040,4,2,110,114,4798,4811,103,108,101,66,114,97,99,107,101,116,59,1,10217,114,111,119,4,3,59,66,76,4822,4824,4829,1,8594,97,114,59,1,8677,101,102,116,65,114,114,111,119,59,1,8644,101,105,108,105,110,103,59,1,8969,111,4,2,117,119,4856,4869,98,108,101,66,114,97,99,107,101,116,59,1,10215,110,4,2,84,86,4876,4887,101,101,86,101,99,116,111,114,59,1,10589,101,99,116,111,114,4,2,59,66,4898,4900,1,8642,97,114,59,1,10581,108,111,111,114,59,1,8971,4,2,101,114,4918,4944,101,4,3,59,65,86,4927,4929,4936,1,8866,114,114,111,119,59,1,8614,101,99,116,111,114,59,1,10587,105,97,110,103,108,101,4,3,59,66,69,4958,4960,4965,1,8883,97,114,59,1,10704,113,117,97,108,59,1,8885,112,4,3,68,84,86,4981,4993,5004,111,119,110,86,101,99,116,111,114,59,1,10575,101,101,86,101,99,116,111,114,59,1,10588,101,99,116,111,114,4,2,59,66,5015,5017,1,8638,97,114,59,1,10580,101,99,116,111,114,4,2,59,66,5033,5035,1,8640,97,114,59,1,10579,114,114,111,119,59,1,8658,4,2,112,117,5053,5057,102,59,1,8477,110,100,73,109,112,108,105,101,115,59,1,10608,105,103,104,116,97,114,114,111,119,59,1,8667,4,2,99,104,5087,5091,114,59,1,8475,59,1,8625,108,101,68,101,108,97,121,101,100,59,1,10740,4,13,72,79,97,99,102,104,105,109,111,113,115,116,117,5134,5150,5157,5164,5198,5203,5259,5265,5277,5283,5374,5380,5385,4,2,67,99,5140,5146,72,99,121,59,1,1065,121,59,1,1064,70,84,99,121,59,1,1068,99,117,116,101,59,1,346,4,5,59,97,101,105,121,5176,5178,5184,5190,5195,1,10940,114,111,110,59,1,352,100,105,108,59,1,350,114,99,59,1,348,59,1,1057,114,59,3,55349,56598,111,114,116,4,4,68,76,82,85,5216,5227,5238,5250,111,119,110,65,114,114,111,119,59,1,8595,101,102,116,65,114,114,111,119,59,1,8592,105,103,104,116,65,114,114,111,119,59,1,8594,112,65,114,114,111,119,59,1,8593,103,109,97,59,1,931,97,108,108,67,105,114,99,108,101,59,1,8728,112,102,59,3,55349,56650,4,2,114,117,5289,5293,116,59,1,8730,97,114,101,4,4,59,73,83,85,5306,5308,5322,5367,1,9633,110,116,101,114,115,101,99,116,105,111,110,59,1,8851,117,4,2,98,112,5329,5347,115,101,116,4,2,59,69,5338,5340,1,8847,113,117,97,108,59,1,8849,101,114,115,101,116,4,2,59,69,5358,5360,1,8848,113,117,97,108,59,1,8850,110,105,111,110,59,1,8852,99,114,59,3,55349,56494,97,114,59,1,8902,4,4,98,99,109,112,5395,5420,5475,5478,4,2,59,115,5401,5403,1,8912,101,116,4,2,59,69,5411,5413,1,8912,113,117,97,108,59,1,8838,4,2,99,104,5426,5468,101,101,100,115,4,4,59,69,83,84,5440,5442,5449,5461,1,8827,113,117,97,108,59,1,10928,108,97,110,116,69,113,117,97,108,59,1,8829,105,108,100,101,59,1,8831,84,104,97,116,59,1,8715,59,1,8721,4,3,59,101,115,5486,5488,5507,1,8913,114,115,101,116,4,2,59,69,5498,5500,1,8835,113,117,97,108,59,1,8839,101,116,59,1,8913,4,11,72,82,83,97,99,102,104,105,111,114,115,5536,5546,5552,5567,5579,5602,5607,5655,5695,5701,5711,79,82,78,5,222,1,59,5544,1,222,65,68,69,59,1,8482,4,2,72,99,5558,5563,99,121,59,1,1035,121,59,1,1062,4,2,98,117,5573,5576,59,1,9,59,1,932,4,3,97,101,121,5587,5593,5599,114,111,110,59,1,356,100,105,108,59,1,354,59,1,1058,114,59,3,55349,56599,4,2,101,105,5613,5631,4,2,114,116,5619,5627,101,102,111,114,101,59,1,8756,97,59,1,920,4,2,99,110,5637,5647,107,83,112,97,99,101,59,3,8287,8202,83,112,97,99,101,59,1,8201,108,100,101,4,4,59,69,70,84,5668,5670,5677,5688,1,8764,113,117,97,108,59,1,8771,117,108,108,69,113,117,97,108,59,1,8773,105,108,100,101,59,1,8776,112,102,59,3,55349,56651,105,112,108,101,68,111,116,59,1,8411,4,2,99,116,5717,5722,114,59,3,55349,56495,114,111,107,59,1,358,4,14,97,98,99,100,102,103,109,110,111,112,114,115,116,117,5758,5789,5805,5823,5830,5835,5846,5852,5921,5937,6089,6095,6101,6108,4,2,99,114,5764,5774,117,116,101,5,218,1,59,5772,1,218,114,4,2,59,111,5781,5783,1,8607,99,105,114,59,1,10569,114,4,2,99,101,5796,5800,121,59,1,1038,118,101,59,1,364,4,2,105,121,5811,5820,114,99,5,219,1,59,5818,1,219,59,1,1059,98,108,97,99,59,1,368,114,59,3,55349,56600,114,97,118,101,5,217,1,59,5844,1,217,97,99,114,59,1,362,4,2,100,105,5858,5905,101,114,4,2,66,80,5866,5892,4,2,97,114,5872,5876,114,59,1,95,97,99,4,2,101,107,5884,5887,59,1,9183,101,116,59,1,9141,97,114,101,110,116,104,101,115,105,115,59,1,9181,111,110,4,2,59,80,5913,5915,1,8899,108,117,115,59,1,8846,4,2,103,112,5927,5932,111,110,59,1,370,102,59,3,55349,56652,4,8,65,68,69,84,97,100,112,115,5955,5985,5996,6009,6026,6033,6044,6075,114,114,111,119,4,3,59,66,68,5967,5969,5974,1,8593,97,114,59,1,10514,111,119,110,65,114,114,111,119,59,1,8645,111,119,110,65,114,114,111,119,59,1,8597,113,117,105,108,105,98,114,105,117,109,59,1,10606,101,101,4,2,59,65,6017,6019,1,8869,114,114,111,119,59,1,8613,114,114,111,119,59,1,8657,111,119,110,97,114,114,111,119,59,1,8661,101,114,4,2,76,82,6052,6063,101,102,116,65,114,114,111,119,59,1,8598,105,103,104,116,65,114,114,111,119,59,1,8599,105,4,2,59,108,6082,6084,1,978,111,110,59,1,933,105,110,103,59,1,366,99,114,59,3,55349,56496,105,108,100,101,59,1,360,109,108,5,220,1,59,6115,1,220,4,9,68,98,99,100,101,102,111,115,118,6137,6143,6148,6152,6166,6250,6255,6261,6267,97,115,104,59,1,8875,97,114,59,1,10987,121,59,1,1042,97,115,104,4,2,59,108,6161,6163,1,8873,59,1,10982,4,2,101,114,6172,6175,59,1,8897,4,3,98,116,121,6183,6188,6238,97,114,59,1,8214,4,2,59,105,6194,6196,1,8214,99,97,108,4,4,66,76,83,84,6209,6214,6220,6231,97,114,59,1,8739,105,110,101,59,1,124,101,112,97,114,97,116,111,114,59,1,10072,105,108,100,101,59,1,8768,84,104,105,110,83,112,97,99,101,59,1,8202,114,59,3,55349,56601,112,102,59,3,55349,56653,99,114,59,3,55349,56497,100,97,115,104,59,1,8874,4,5,99,101,102,111,115,6286,6292,6298,6303,6309,105,114,99,59,1,372,100,103,101,59,1,8896,114,59,3,55349,56602,112,102,59,3,55349,56654,99,114,59,3,55349,56498,4,4,102,105,111,115,6325,6330,6333,6339,114,59,3,55349,56603,59,1,926,112,102,59,3,55349,56655,99,114,59,3,55349,56499,4,9,65,73,85,97,99,102,111,115,117,6365,6370,6375,6380,6391,6405,6410,6416,6422,99,121,59,1,1071,99,121,59,1,1031,99,121,59,1,1070,99,117,116,101,5,221,1,59,6389,1,221,4,2,105,121,6397,6402,114,99,59,1,374,59,1,1067,114,59,3,55349,56604,112,102,59,3,55349,56656,99,114,59,3,55349,56500,109,108,59,1,376,4,8,72,97,99,100,101,102,111,115,6445,6450,6457,6472,6477,6501,6505,6510,99,121,59,1,1046,99,117,116,101,59,1,377,4,2,97,121,6463,6469,114,111,110,59,1,381,59,1,1047,111,116,59,1,379,4,2,114,116,6483,6497,111,87,105,100,116,104,83,112,97,99,101,59,1,8203,97,59,1,918,114,59,1,8488,112,102,59,1,8484,99,114,59,3,55349,56501,4,16,97,98,99,101,102,103,108,109,110,111,112,114,115,116,117,119,6550,6561,6568,6612,6622,6634,6645,6672,6699,6854,6870,6923,6933,6963,6974,6983,99,117,116,101,5,225,1,59,6559,1,225,114,101,118,101,59,1,259,4,6,59,69,100,105,117,121,6582,6584,6588,6591,6600,6609,1,8766,59,3,8766,819,59,1,8767,114,99,5,226,1,59,6598,1,226,116,101,5,180,1,59,6607,1,180,59,1,1072,108,105,103,5,230,1,59,6620,1,230,4,2,59,114,6628,6630,1,8289,59,3,55349,56606,114,97,118,101,5,224,1,59,6643,1,224,4,2,101,112,6651,6667,4,2,102,112,6657,6663,115,121,109,59,1,8501,104,59,1,8501,104,97,59,1,945,4,2,97,112,6678,6692,4,2,99,108,6684,6688,114,59,1,257,103,59,1,10815,5,38,1,59,6697,1,38,4,2,100,103,6705,6737,4,5,59,97,100,115,118,6717,6719,6724,6727,6734,1,8743,110,100,59,1,10837,59,1,10844,108,111,112,101,59,1,10840,59,1,10842,4,7,59,101,108,109,114,115,122,6753,6755,6758,6762,6814,6835,6848,1,8736,59,1,10660,101,59,1,8736,115,100,4,2,59,97,6770,6772,1,8737,4,8,97,98,99,100,101,102,103,104,6790,6793,6796,6799,6802,6805,6808,6811,59,1,10664,59,1,10665,59,1,10666,59,1,10667,59,1,10668,59,1,10669,59,1,10670,59,1,10671,116,4,2,59,118,6821,6823,1,8735,98,4,2,59,100,6830,6832,1,8894,59,1,10653,4,2,112,116,6841,6845,104,59,1,8738,59,1,197,97,114,114,59,1,9084,4,2,103,112,6860,6865,111,110,59,1,261,102,59,3,55349,56658,4,7,59,69,97,101,105,111,112,6886,6888,6891,6897,6900,6904,6908,1,8776,59,1,10864,99,105,114,59,1,10863,59,1,8778,100,59,1,8779,115,59,1,39,114,111,120,4,2,59,101,6917,6919,1,8776,113,59,1,8778,105,110,103,5,229,1,59,6931,1,229,4,3,99,116,121,6941,6946,6949,114,59,3,55349,56502,59,1,42,109,112,4,2,59,101,6957,6959,1,8776,113,59,1,8781,105,108,100,101,5,227,1,59,6972,1,227,109,108,5,228,1,59,6981,1,228,4,2,99,105,6989,6997,111,110,105,110,116,59,1,8755,110,116,59,1,10769,4,16,78,97,98,99,100,101,102,105,107,108,110,111,112,114,115,117,7036,7041,7119,7135,7149,7155,7219,7224,7347,7354,7463,7489,7786,7793,7814,7866,111,116,59,1,10989,4,2,99,114,7047,7094,107,4,4,99,101,112,115,7058,7064,7073,7080,111,110,103,59,1,8780,112,115,105,108,111,110,59,1,1014,114,105,109,101,59,1,8245,105,109,4,2,59,101,7088,7090,1,8765,113,59,1,8909,4,2,118,119,7100,7105,101,101,59,1,8893,101,100,4,2,59,103,7113,7115,1,8965,101,59,1,8965,114,107,4,2,59,116,7127,7129,1,9141,98,114,107,59,1,9142,4,2,111,121,7141,7146,110,103,59,1,8780,59,1,1073,113,117,111,59,1,8222,4,5,99,109,112,114,116,7167,7181,7188,7193,7199,97,117,115,4,2,59,101,7176,7178,1,8757,59,1,8757,112,116,121,118,59,1,10672,115,105,59,1,1014,110,111,117,59,1,8492,4,3,97,104,119,7207,7210,7213,59,1,946,59,1,8502,101,101,110,59,1,8812,114,59,3,55349,56607,103,4,7,99,111,115,116,117,118,119,7241,7262,7288,7305,7328,7335,7340,4,3,97,105,117,7249,7253,7258,112,59,1,8898,114,99,59,1,9711,112,59,1,8899,4,3,100,112,116,7270,7275,7281,111,116,59,1,10752,108,117,115,59,1,10753,105,109,101,115,59,1,10754,4,2,113,116,7294,7300,99,117,112,59,1,10758,97,114,59,1,9733,114,105,97,110,103,108,101,4,2,100,117,7318,7324,111,119,110,59,1,9661,112,59,1,9651,112,108,117,115,59,1,10756,101,101,59,1,8897,101,100,103,101,59,1,8896,97,114,111,119,59,1,10509,4,3,97,107,111,7362,7436,7458,4,2,99,110,7368,7432,107,4,3,108,115,116,7377,7386,7394,111,122,101,110,103,101,59,1,10731,113,117,97,114,101,59,1,9642,114,105,97,110,103,108,101,4,4,59,100,108,114,7411,7413,7419,7425,1,9652,111,119,110,59,1,9662,101,102,116,59,1,9666,105,103,104,116,59,1,9656,107,59,1,9251,4,2,49,51,7442,7454,4,2,50,52,7448,7451,59,1,9618,59,1,9617,52,59,1,9619,99,107,59,1,9608,4,2,101,111,7469,7485,4,2,59,113,7475,7478,3,61,8421,117,105,118,59,3,8801,8421,116,59,1,8976,4,4,112,116,119,120,7499,7504,7517,7523,102,59,3,55349,56659,4,2,59,116,7510,7512,1,8869,111,109,59,1,8869,116,105,101,59,1,8904,4,12,68,72,85,86,98,100,104,109,112,116,117,118,7549,7571,7597,7619,7655,7660,7682,7708,7715,7721,7728,7750,4,4,76,82,108,114,7559,7562,7565,7568,59,1,9559,59,1,9556,59,1,9558,59,1,9555,4,5,59,68,85,100,117,7583,7585,7588,7591,7594,1,9552,59,1,9574,59,1,9577,59,1,9572,59,1,9575,4,4,76,82,108,114,7607,7610,7613,7616,59,1,9565,59,1,9562,59,1,9564,59,1,9561,4,7,59,72,76,82,104,108,114,7635,7637,7640,7643,7646,7649,7652,1,9553,59,1,9580,59,1,9571,59,1,9568,59,1,9579,59,1,9570,59,1,9567,111,120,59,1,10697,4,4,76,82,108,114,7670,7673,7676,7679,59,1,9557,59,1,9554,59,1,9488,59,1,9484,4,5,59,68,85,100,117,7694,7696,7699,7702,7705,1,9472,59,1,9573,59,1,9576,59,1,9516,59,1,9524,105,110,117,115,59,1,8863,108,117,115,59,1,8862,105,109,101,115,59,1,8864,4,4,76,82,108,114,7738,7741,7744,7747,59,1,9563,59,1,9560,59,1,9496,59,1,9492,4,7,59,72,76,82,104,108,114,7766,7768,7771,7774,7777,7780,7783,1,9474,59,1,9578,59,1,9569,59,1,9566,59,1,9532,59,1,9508,59,1,9500,114,105,109,101,59,1,8245,4,2,101,118,7799,7804,118,101,59,1,728,98,97,114,5,166,1,59,7812,1,166,4,4,99,101,105,111,7824,7829,7834,7846,114,59,3,55349,56503,109,105,59,1,8271,109,4,2,59,101,7841,7843,1,8765,59,1,8909,108,4,3,59,98,104,7855,7857,7860,1,92,59,1,10693,115,117,98,59,1,10184,4,2,108,109,7872,7885,108,4,2,59,101,7879,7881,1,8226,116,59,1,8226,112,4,3,59,69,101,7894,7896,7899,1,8782,59,1,10926,4,2,59,113,7905,7907,1,8783,59,1,8783,4,15,97,99,100,101,102,104,105,108,111,114,115,116,117,119,121,7942,8021,8075,8080,8121,8126,8157,8279,8295,8430,8446,8485,8491,8707,8726,4,3,99,112,114,7950,7956,8007,117,116,101,59,1,263,4,6,59,97,98,99,100,115,7970,7972,7977,7984,7998,8003,1,8745,110,100,59,1,10820,114,99,117,112,59,1,10825,4,2,97,117,7990,7994,112,59,1,10827,112,59,1,10823,111,116,59,1,10816,59,3,8745,65024,4,2,101,111,8013,8017,116,59,1,8257,110,59,1,711,4,4,97,101,105,117,8031,8046,8056,8061,4,2,112,114,8037,8041,115,59,1,10829,111,110,59,1,269,100,105,108,5,231,1,59,8054,1,231,114,99,59,1,265,112,115,4,2,59,115,8069,8071,1,10828,109,59,1,10832,111,116,59,1,267,4,3,100,109,110,8088,8097,8104,105,108,5,184,1,59,8095,1,184,112,116,121,118,59,1,10674,116,5,162,2,59,101,8112,8114,1,162,114,100,111,116,59,1,183,114,59,3,55349,56608,4,3,99,101,105,8134,8138,8154,121,59,1,1095,99,107,4,2,59,109,8146,8148,1,10003,97,114,107,59,1,10003,59,1,967,114,4,7,59,69,99,101,102,109,115,8174,8176,8179,8258,8261,8268,8273,1,9675,59,1,10691,4,3,59,101,108,8187,8189,8193,1,710,113,59,1,8791,101,4,2,97,100,8200,8223,114,114,111,119,4,2,108,114,8210,8216,101,102,116,59,1,8634,105,103,104,116,59,1,8635,4,5,82,83,97,99,100,8235,8238,8241,8246,8252,59,1,174,59,1,9416,115,116,59,1,8859,105,114,99,59,1,8858,97,115,104,59,1,8861,59,1,8791,110,105,110,116,59,1,10768,105,100,59,1,10991,99,105,114,59,1,10690,117,98,115,4,2,59,117,8288,8290,1,9827,105,116,59,1,9827,4,4,108,109,110,112,8305,8326,8376,8400,111,110,4,2,59,101,8313,8315,1,58,4,2,59,113,8321,8323,1,8788,59,1,8788,4,2,109,112,8332,8344,97,4,2,59,116,8339,8341,1,44,59,1,64,4,3,59,102,108,8352,8354,8358,1,8705,110,59,1,8728,101,4,2,109,120,8365,8371,101,110,116,59,1,8705,101,115,59,1,8450,4,2,103,105,8382,8395,4,2,59,100,8388,8390,1,8773,111,116,59,1,10861,110,116,59,1,8750,4,3,102,114,121,8408,8412,8417,59,3,55349,56660,111,100,59,1,8720,5,169,2,59,115,8424,8426,1,169,114,59,1,8471,4,2,97,111,8436,8441,114,114,59,1,8629,115,115,59,1,10007,4,2,99,117,8452,8457,114,59,3,55349,56504,4,2,98,112,8463,8474,4,2,59,101,8469,8471,1,10959,59,1,10961,4,2,59,101,8480,8482,1,10960,59,1,10962,100,111,116,59,1,8943,4,7,100,101,108,112,114,118,119,8507,8522,8536,8550,8600,8697,8702,97,114,114,4,2,108,114,8516,8519,59,1,10552,59,1,10549,4,2,112,115,8528,8532,114,59,1,8926,99,59,1,8927,97,114,114,4,2,59,112,8545,8547,1,8630,59,1,10557,4,6,59,98,99,100,111,115,8564,8566,8573,8587,8592,8596,1,8746,114,99,97,112,59,1,10824,4,2,97,117,8579,8583,112,59,1,10822,112,59,1,10826,111,116,59,1,8845,114,59,1,10821,59,3,8746,65024,4,4,97,108,114,118,8610,8623,8663,8672,114,114,4,2,59,109,8618,8620,1,8631,59,1,10556,121,4,3,101,118,119,8632,8651,8656,113,4,2,112,115,8639,8645,114,101,99,59,1,8926,117,99,99,59,1,8927,101,101,59,1,8910,101,100,103,101,59,1,8911,101,110,5,164,1,59,8670,1,164,101,97,114,114,111,119,4,2,108,114,8684,8690,101,102,116,59,1,8630,105,103,104,116,59,1,8631,101,101,59,1,8910,101,100,59,1,8911,4,2,99,105,8713,8721,111,110,105,110,116,59,1,8754,110,116,59,1,8753,108,99,116,121,59,1,9005,4,19,65,72,97,98,99,100,101,102,104,105,106,108,111,114,115,116,117,119,122,8773,8778,8783,8821,8839,8854,8887,8914,8930,8944,9036,9041,9058,9197,9227,9258,9281,9297,9305,114,114,59,1,8659,97,114,59,1,10597,4,4,103,108,114,115,8793,8799,8805,8809,103,101,114,59,1,8224,101,116,104,59,1,8504,114,59,1,8595,104,4,2,59,118,8816,8818,1,8208,59,1,8867,4,2,107,108,8827,8834,97,114,111,119,59,1,10511,97,99,59,1,733,4,2,97,121,8845,8851,114,111,110,59,1,271,59,1,1076,4,3,59,97,111,8862,8864,8880,1,8518,4,2,103,114,8870,8876,103,101,114,59,1,8225,114,59,1,8650,116,115,101,113,59,1,10871,4,3,103,108,109,8895,8902,8907,5,176,1,59,8900,1,176,116,97,59,1,948,112,116,121,118,59,1,10673,4,2,105,114,8920,8926,115,104,116,59,1,10623,59,3,55349,56609,97,114,4,2,108,114,8938,8941,59,1,8643,59,1,8642,4,5,97,101,103,115,118,8956,8986,8989,8996,9001,109,4,3,59,111,115,8965,8967,8983,1,8900,110,100,4,2,59,115,8975,8977,1,8900,117,105,116,59,1,9830,59,1,9830,59,1,168,97,109,109,97,59,1,989,105,110,59,1,8946,4,3,59,105,111,9009,9011,9031,1,247,100,101,5,247,2,59,111,9020,9022,1,247,110,116,105,109,101,115,59,1,8903,110,120,59,1,8903,99,121,59,1,1106,99,4,2,111,114,9048,9053,114,110,59,1,8990,111,112,59,1,8973,4,5,108,112,116,117,119,9070,9076,9081,9130,9144,108,97,114,59,1,36,102,59,3,55349,56661,4,5,59,101,109,112,115,9093,9095,9109,9116,9122,1,729,113,4,2,59,100,9102,9104,1,8784,111,116,59,1,8785,105,110,117,115,59,1,8760,108,117,115,59,1,8724,113,117,97,114,101,59,1,8865,98,108,101,98,97,114,119,101,100,103,101,59,1,8966,110,4,3,97,100,104,9153,9160,9172,114,114,111,119,59,1,8595,111,119,110,97,114,114,111,119,115,59,1,8650,97,114,112,111,111,110,4,2,108,114,9184,9190,101,102,116,59,1,8643,105,103,104,116,59,1,8642,4,2,98,99,9203,9211,107,97,114,111,119,59,1,10512,4,2,111,114,9217,9222,114,110,59,1,8991,111,112,59,1,8972,4,3,99,111,116,9235,9248,9252,4,2,114,121,9241,9245,59,3,55349,56505,59,1,1109,108,59,1,10742,114,111,107,59,1,273,4,2,100,114,9264,9269,111,116,59,1,8945,105,4,2,59,102,9276,9278,1,9663,59,1,9662,4,2,97,104,9287,9292,114,114,59,1,8693,97,114,59,1,10607,97,110,103,108,101,59,1,10662,4,2,99,105,9311,9315,121,59,1,1119,103,114,97,114,114,59,1,10239,4,18,68,97,99,100,101,102,103,108,109,110,111,112,113,114,115,116,117,120,9361,9376,9398,9439,9444,9447,9462,9495,9531,9585,9598,9614,9659,9755,9771,9792,9808,9826,4,2,68,111,9367,9372,111,116,59,1,10871,116,59,1,8785,4,2,99,115,9382,9392,117,116,101,5,233,1,59,9390,1,233,116,101,114,59,1,10862,4,4,97,105,111,121,9408,9414,9430,9436,114,111,110,59,1,283,114,4,2,59,99,9421,9423,1,8790,5,234,1,59,9428,1,234,108,111,110,59,1,8789,59,1,1101,111,116,59,1,279,59,1,8519,4,2,68,114,9453,9458,111,116,59,1,8786,59,3,55349,56610,4,3,59,114,115,9470,9472,9482,1,10906,97,118,101,5,232,1,59,9480,1,232,4,2,59,100,9488,9490,1,10902,111,116,59,1,10904,4,4,59,105,108,115,9505,9507,9515,9518,1,10905,110,116,101,114,115,59,1,9191,59,1,8467,4,2,59,100,9524,9526,1,10901,111,116,59,1,10903,4,3,97,112,115,9539,9544,9564,99,114,59,1,275,116,121,4,3,59,115,118,9554,9556,9561,1,8709,101,116,59,1,8709,59,1,8709,112,4,2,49,59,9571,9583,4,2,51,52,9577,9580,59,1,8196,59,1,8197,1,8195,4,2,103,115,9591,9594,59,1,331,112,59,1,8194,4,2,103,112,9604,9609,111,110,59,1,281,102,59,3,55349,56662,4,3,97,108,115,9622,9635,9640,114,4,2,59,115,9629,9631,1,8917,108,59,1,10723,117,115,59,1,10865,105,4,3,59,108,118,9649,9651,9656,1,949,111,110,59,1,949,59,1,1013,4,4,99,115,117,118,9669,9686,9716,9747,4,2,105,111,9675,9680,114,99,59,1,8790,108,111,110,59,1,8789,4,2,105,108,9692,9696,109,59,1,8770,97,110,116,4,2,103,108,9705,9710,116,114,59,1,10902,101,115,115,59,1,10901,4,3,97,101,105,9724,9729,9734,108,115,59,1,61,115,116,59,1,8799,118,4,2,59,68,9741,9743,1,8801,68,59,1,10872,112,97,114,115,108,59,1,10725,4,2,68,97,9761,9766,111,116,59,1,8787,114,114,59,1,10609,4,3,99,100,105,9779,9783,9788,114,59,1,8495,111,116,59,1,8784,109,59,1,8770,4,2,97,104,9798,9801,59,1,951,5,240,1,59,9806,1,240,4,2,109,114,9814,9822,108,5,235,1,59,9820,1,235,111,59,1,8364,4,3,99,105,112,9834,9838,9843,108,59,1,33,115,116,59,1,8707,4,2,101,111,9849,9859,99,116,97,116,105,111,110,59,1,8496,110,101,110,116,105,97,108,101,59,1,8519,4,12,97,99,101,102,105,106,108,110,111,112,114,115,9896,9910,9914,9921,9954,9960,9967,9989,9994,10027,10036,10164,108,108,105,110,103,100,111,116,115,101,113,59,1,8786,121,59,1,1092,109,97,108,101,59,1,9792,4,3,105,108,114,9929,9935,9950,108,105,103,59,1,64259,4,2,105,108,9941,9945,103,59,1,64256,105,103,59,1,64260,59,3,55349,56611,108,105,103,59,1,64257,108,105,103,59,3,102,106,4,3,97,108,116,9975,9979,9984,116,59,1,9837,105,103,59,1,64258,110,115,59,1,9649,111,102,59,1,402,4,2,112,114,10000,10005,102,59,3,55349,56663,4,2,97,107,10011,10016,108,108,59,1,8704,4,2,59,118,10022,10024,1,8916,59,1,10969,97,114,116,105,110,116,59,1,10765,4,2,97,111,10042,10159,4,2,99,115,10048,10155,4,6,49,50,51,52,53,55,10062,10102,10114,10135,10139,10151,4,6,50,51,52,53,54,56,10076,10083,10086,10093,10096,10099,5,189,1,59,10081,1,189,59,1,8531,5,188,1,59,10091,1,188,59,1,8533,59,1,8537,59,1,8539,4,2,51,53,10108,10111,59,1,8532,59,1,8534,4,3,52,53,56,10122,10129,10132,5,190,1,59,10127,1,190,59,1,8535,59,1,8540,53,59,1,8536,4,2,54,56,10145,10148,59,1,8538,59,1,8541,56,59,1,8542,108,59,1,8260,119,110,59,1,8994,99,114,59,3,55349,56507,4,17,69,97,98,99,100,101,102,103,105,106,108,110,111,114,115,116,118,10206,10217,10247,10254,10268,10273,10358,10363,10374,10380,10385,10406,10458,10464,10470,10497,10610,4,2,59,108,10212,10214,1,8807,59,1,10892,4,3,99,109,112,10225,10231,10244,117,116,101,59,1,501,109,97,4,2,59,100,10239,10241,1,947,59,1,989,59,1,10886,114,101,118,101,59,1,287,4,2,105,121,10260,10265,114,99,59,1,285,59,1,1075,111,116,59,1,289,4,4,59,108,113,115,10283,10285,10288,10308,1,8805,59,1,8923,4,3,59,113,115,10296,10298,10301,1,8805,59,1,8807,108,97,110,116,59,1,10878,4,4,59,99,100,108,10318,10320,10324,10345,1,10878,99,59,1,10921,111,116,4,2,59,111,10332,10334,1,10880,4,2,59,108,10340,10342,1,10882,59,1,10884,4,2,59,101,10351,10354,3,8923,65024,115,59,1,10900,114,59,3,55349,56612,4,2,59,103,10369,10371,1,8811,59,1,8921,109,101,108,59,1,8503,99,121,59,1,1107,4,4,59,69,97,106,10395,10397,10400,10403,1,8823,59,1,10898,59,1,10917,59,1,10916,4,4,69,97,101,115,10416,10419,10434,10453,59,1,8809,112,4,2,59,112,10426,10428,1,10890,114,111,120,59,1,10890,4,2,59,113,10440,10442,1,10888,4,2,59,113,10448,10450,1,10888,59,1,8809,105,109,59,1,8935,112,102,59,3,55349,56664,97,118,101,59,1,96,4,2,99,105,10476,10480,114,59,1,8458,109,4,3,59,101,108,10489,10491,10494,1,8819,59,1,10894,59,1,10896,5,62,6,59,99,100,108,113,114,10512,10514,10527,10532,10538,10545,1,62,4,2,99,105,10520,10523,59,1,10919,114,59,1,10874,111,116,59,1,8919,80,97,114,59,1,10645,117,101,115,116,59,1,10876,4,5,97,100,101,108,115,10557,10574,10579,10599,10605,4,2,112,114,10563,10570,112,114,111,120,59,1,10886,114,59,1,10616,111,116,59,1,8919,113,4,2,108,113,10586,10592,101,115,115,59,1,8923,108,101,115,115,59,1,10892,101,115,115,59,1,8823,105,109,59,1,8819,4,2,101,110,10616,10626,114,116,110,101,113,113,59,3,8809,65024,69,59,3,8809,65024,4,10,65,97,98,99,101,102,107,111,115,121,10653,10658,10713,10718,10724,10760,10765,10786,10850,10875,114,114,59,1,8660,4,4,105,108,109,114,10668,10674,10678,10684,114,115,112,59,1,8202,102,59,1,189,105,108,116,59,1,8459,4,2,100,114,10690,10695,99,121,59,1,1098,4,3,59,99,119,10703,10705,10710,1,8596,105,114,59,1,10568,59,1,8621,97,114,59,1,8463,105,114,99,59,1,293,4,3,97,108,114,10732,10748,10754,114,116,115,4,2,59,117,10741,10743,1,9829,105,116,59,1,9829,108,105,112,59,1,8230,99,111,110,59,1,8889,114,59,3,55349,56613,115,4,2,101,119,10772,10779,97,114,111,119,59,1,10533,97,114,111,119,59,1,10534,4,5,97,109,111,112,114,10798,10803,10809,10839,10844,114,114,59,1,8703,116,104,116,59,1,8763,107,4,2,108,114,10816,10827,101,102,116,97,114,114,111,119,59,1,8617,105,103,104,116,97,114,114,111,119,59,1,8618,102,59,3,55349,56665,98,97,114,59,1,8213,4,3,99,108,116,10858,10863,10869,114,59,3,55349,56509,97,115,104,59,1,8463,114,111,107,59,1,295,4,2,98,112,10881,10887,117,108,108,59,1,8259,104,101,110,59,1,8208,4,15,97,99,101,102,103,105,106,109,110,111,112,113,115,116,117,10925,10936,10958,10977,10990,11001,11039,11045,11101,11192,11220,11226,11237,11285,11299,99,117,116,101,5,237,1,59,10934,1,237,4,3,59,105,121,10944,10946,10955,1,8291,114,99,5,238,1,59,10953,1,238,59,1,1080,4,2,99,120,10964,10968,121,59,1,1077,99,108,5,161,1,59,10975,1,161,4,2,102,114,10983,10986,59,1,8660,59,3,55349,56614,114,97,118,101,5,236,1,59,10999,1,236,4,4,59,105,110,111,11011,11013,11028,11034,1,8520,4,2,105,110,11019,11024,110,116,59,1,10764,116,59,1,8749,102,105,110,59,1,10716,116,97,59,1,8489,108,105,103,59,1,307,4,3,97,111,112,11053,11092,11096,4,3,99,103,116,11061,11065,11088,114,59,1,299,4,3,101,108,112,11073,11076,11082,59,1,8465,105,110,101,59,1,8464,97,114,116,59,1,8465,104,59,1,305,102,59,1,8887,101,100,59,1,437,4,5,59,99,102,111,116,11113,11115,11121,11136,11142,1,8712,97,114,101,59,1,8453,105,110,4,2,59,116,11129,11131,1,8734,105,101,59,1,10717,100,111,116,59,1,305,4,5,59,99,101,108,112,11154,11156,11161,11179,11186,1,8747,97,108,59,1,8890,4,2,103,114,11167,11173,101,114,115,59,1,8484,99,97,108,59,1,8890,97,114,104,107,59,1,10775,114,111,100,59,1,10812,4,4,99,103,112,116,11202,11206,11211,11216,121,59,1,1105,111,110,59,1,303,102,59,3,55349,56666,97,59,1,953,114,111,100,59,1,10812,117,101,115,116,5,191,1,59,11235,1,191,4,2,99,105,11243,11248,114,59,3,55349,56510,110,4,5,59,69,100,115,118,11261,11263,11266,11271,11282,1,8712,59,1,8953,111,116,59,1,8949,4,2,59,118,11277,11279,1,8948,59,1,8947,59,1,8712,4,2,59,105,11291,11293,1,8290,108,100,101,59,1,297,4,2,107,109,11305,11310,99,121,59,1,1110,108,5,239,1,59,11316,1,239,4,6,99,102,109,111,115,117,11332,11346,11351,11357,11363,11380,4,2,105,121,11338,11343,114,99,59,1,309,59,1,1081,114,59,3,55349,56615,97,116,104,59,1,567,112,102,59,3,55349,56667,4,2,99,101,11369,11374,114,59,3,55349,56511,114,99,121,59,1,1112,107,99,121,59,1,1108,4,8,97,99,102,103,104,106,111,115,11404,11418,11433,11438,11445,11450,11455,11461,112,112,97,4,2,59,118,11413,11415,1,954,59,1,1008,4,2,101,121,11424,11430,100,105,108,59,1,311,59,1,1082,114,59,3,55349,56616,114,101,101,110,59,1,312,99,121,59,1,1093,99,121,59,1,1116,112,102,59,3,55349,56668,99,114,59,3,55349,56512,4,23,65,66,69,72,97,98,99,100,101,102,103,104,106,108,109,110,111,112,114,115,116,117,118,11515,11538,11544,11555,11560,11721,11780,11818,11868,12136,12160,12171,12203,12208,12246,12275,12327,12509,12523,12569,12641,12732,12752,4,3,97,114,116,11523,11528,11532,114,114,59,1,8666,114,59,1,8656,97,105,108,59,1,10523,97,114,114,59,1,10510,4,2,59,103,11550,11552,1,8806,59,1,10891,97,114,59,1,10594,4,9,99,101,103,109,110,112,113,114,116,11580,11586,11594,11600,11606,11624,11627,11636,11694,117,116,101,59,1,314,109,112,116,121,118,59,1,10676,114,97,110,59,1,8466,98,100,97,59,1,955,103,4,3,59,100,108,11615,11617,11620,1,10216,59,1,10641,101,59,1,10216,59,1,10885,117,111,5,171,1,59,11634,1,171,114,4,8,59,98,102,104,108,112,115,116,11655,11657,11669,11673,11677,11681,11685,11690,1,8592,4,2,59,102,11663,11665,1,8676,115,59,1,10527,115,59,1,10525,107,59,1,8617,112,59,1,8619,108,59,1,10553,105,109,59,1,10611,108,59,1,8610,4,3,59,97,101,11702,11704,11709,1,10923,105,108,59,1,10521,4,2,59,115,11715,11717,1,10925,59,3,10925,65024,4,3,97,98,114,11729,11734,11739,114,114,59,1,10508,114,107,59,1,10098,4,2,97,107,11745,11758,99,4,2,101,107,11752,11755,59,1,123,59,1,91,4,2,101,115,11764,11767,59,1,10635,108,4,2,100,117,11774,11777,59,1,10639,59,1,10637,4,4,97,101,117,121,11790,11796,11811,11815,114,111,110,59,1,318,4,2,100,105,11802,11807,105,108,59,1,316,108,59,1,8968,98,59,1,123,59,1,1083,4,4,99,113,114,115,11828,11832,11845,11864,97,59,1,10550,117,111,4,2,59,114,11840,11842,1,8220,59,1,8222,4,2,100,117,11851,11857,104,97,114,59,1,10599,115,104,97,114,59,1,10571,104,59,1,8626,4,5,59,102,103,113,115,11880,11882,12008,12011,12031,1,8804,116,4,5,97,104,108,114,116,11895,11913,11935,11947,11996,114,114,111,119,4,2,59,116,11905,11907,1,8592,97,105,108,59,1,8610,97,114,112,111,111,110,4,2,100,117,11925,11931,111,119,110,59,1,8637,112,59,1,8636,101,102,116,97,114,114,111,119,115,59,1,8647,105,103,104,116,4,3,97,104,115,11959,11974,11984,114,114,111,119,4,2,59,115,11969,11971,1,8596,59,1,8646,97,114,112,111,111,110,115,59,1,8651,113,117,105,103,97,114,114,111,119,59,1,8621,104,114,101,101,116,105,109,101,115,59,1,8907,59,1,8922,4,3,59,113,115,12019,12021,12024,1,8804,59,1,8806,108,97,110,116,59,1,10877,4,5,59,99,100,103,115,12043,12045,12049,12070,12083,1,10877,99,59,1,10920,111,116,4,2,59,111,12057,12059,1,10879,4,2,59,114,12065,12067,1,10881,59,1,10883,4,2,59,101,12076,12079,3,8922,65024,115,59,1,10899,4,5,97,100,101,103,115,12095,12103,12108,12126,12131,112,112,114,111,120,59,1,10885,111,116,59,1,8918,113,4,2,103,113,12115,12120,116,114,59,1,8922,103,116,114,59,1,10891,116,114,59,1,8822,105,109,59,1,8818,4,3,105,108,114,12144,12150,12156,115,104,116,59,1,10620,111,111,114,59,1,8970,59,3,55349,56617,4,2,59,69,12166,12168,1,8822,59,1,10897,4,2,97,98,12177,12198,114,4,2,100,117,12184,12187,59,1,8637,4,2,59,108,12193,12195,1,8636,59,1,10602,108,107,59,1,9604,99,121,59,1,1113,4,5,59,97,99,104,116,12220,12222,12227,12235,12241,1,8810,114,114,59,1,8647,111,114,110,101,114,59,1,8990,97,114,100,59,1,10603,114,105,59,1,9722,4,2,105,111,12252,12258,100,111,116,59,1,320,117,115,116,4,2,59,97,12267,12269,1,9136,99,104,101,59,1,9136,4,4,69,97,101,115,12285,12288,12303,12322,59,1,8808,112,4,2,59,112,12295,12297,1,10889,114,111,120,59,1,10889,4,2,59,113,12309,12311,1,10887,4,2,59,113,12317,12319,1,10887,59,1,8808,105,109,59,1,8934,4,8,97,98,110,111,112,116,119,122,12345,12359,12364,12421,12446,12467,12474,12490,4,2,110,114,12351,12355,103,59,1,10220,114,59,1,8701,114,107,59,1,10214,103,4,3,108,109,114,12373,12401,12409,101,102,116,4,2,97,114,12382,12389,114,114,111,119,59,1,10229,105,103,104,116,97,114,114,111,119,59,1,10231,97,112,115,116,111,59,1,10236,105,103,104,116,97,114,114,111,119,59,1,10230,112,97,114,114,111,119,4,2,108,114,12433,12439,101,102,116,59,1,8619,105,103,104,116,59,1,8620,4,3,97,102,108,12454,12458,12462,114,59,1,10629,59,3,55349,56669,117,115,59,1,10797,105,109,101,115,59,1,10804,4,2,97,98,12480,12485,115,116,59,1,8727,97,114,59,1,95,4,3,59,101,102,12498,12500,12506,1,9674,110,103,101,59,1,9674,59,1,10731,97,114,4,2,59,108,12517,12519,1,40,116,59,1,10643,4,5,97,99,104,109,116,12535,12540,12548,12561,12564,114,114,59,1,8646,111,114,110,101,114,59,1,8991,97,114,4,2,59,100,12556,12558,1,8651,59,1,10605,59,1,8206,114,105,59,1,8895,4,6,97,99,104,105,113,116,12583,12589,12594,12597,12614,12635,113,117,111,59,1,8249,114,59,3,55349,56513,59,1,8624,109,4,3,59,101,103,12606,12608,12611,1,8818,59,1,10893,59,1,10895,4,2,98,117,12620,12623,59,1,91,111,4,2,59,114,12630,12632,1,8216,59,1,8218,114,111,107,59,1,322,5,60,8,59,99,100,104,105,108,113,114,12660,12662,12675,12680,12686,12692,12698,12705,1,60,4,2,99,105,12668,12671,59,1,10918,114,59,1,10873,111,116,59,1,8918,114,101,101,59,1,8907,109,101,115,59,1,8905,97,114,114,59,1,10614,117,101,115,116,59,1,10875,4,2,80,105,12711,12716,97,114,59,1,10646,4,3,59,101,102,12724,12726,12729,1,9667,59,1,8884,59,1,9666,114,4,2,100,117,12739,12746,115,104,97,114,59,1,10570,104,97,114,59,1,10598,4,2,101,110,12758,12768,114,116,110,101,113,113,59,3,8808,65024,69,59,3,8808,65024,4,14,68,97,99,100,101,102,104,105,108,110,111,112,115,117,12803,12809,12893,12908,12914,12928,12933,12937,13011,13025,13032,13049,13052,13069,68,111,116,59,1,8762,4,4,99,108,112,114,12819,12827,12849,12887,114,5,175,1,59,12825,1,175,4,2,101,116,12833,12836,59,1,9794,4,2,59,101,12842,12844,1,10016,115,101,59,1,10016,4,2,59,115,12855,12857,1,8614,116,111,4,4,59,100,108,117,12869,12871,12877,12883,1,8614,111,119,110,59,1,8615,101,102,116,59,1,8612,112,59,1,8613,107,101,114,59,1,9646,4,2,111,121,12899,12905,109,109,97,59,1,10793,59,1,1084,97,115,104,59,1,8212,97,115,117,114,101,100,97,110,103,108,101,59,1,8737,114,59,3,55349,56618,111,59,1,8487,4,3,99,100,110,12945,12954,12985,114,111,5,181,1,59,12952,1,181,4,4,59,97,99,100,12964,12966,12971,12976,1,8739,115,116,59,1,42,105,114,59,1,10992,111,116,5,183,1,59,12983,1,183,117,115,4,3,59,98,100,12995,12997,13000,1,8722,59,1,8863,4,2,59,117,13006,13008,1,8760,59,1,10794,4,2,99,100,13017,13021,112,59,1,10971,114,59,1,8230,112,108,117,115,59,1,8723,4,2,100,112,13038,13044,101,108,115,59,1,8871,102,59,3,55349,56670,59,1,8723,4,2,99,116,13058,13063,114,59,3,55349,56514,112,111,115,59,1,8766,4,3,59,108,109,13077,13079,13087,1,956,116,105,109,97,112,59,1,8888,97,112,59,1,8888,4,24,71,76,82,86,97,98,99,100,101,102,103,104,105,106,108,109,111,112,114,115,116,117,118,119,13142,13165,13217,13229,13247,13330,13359,13414,13420,13508,13513,13579,13602,13626,13631,13762,13767,13855,13936,13995,14214,14285,14312,14432,4,2,103,116,13148,13152,59,3,8921,824,4,2,59,118,13158,13161,3,8811,8402,59,3,8811,824,4,3,101,108,116,13173,13200,13204,102,116,4,2,97,114,13181,13188,114,114,111,119,59,1,8653,105,103,104,116,97,114,114,111,119,59,1,8654,59,3,8920,824,4,2,59,118,13210,13213,3,8810,8402,59,3,8810,824,105,103,104,116,97,114,114,111,119,59,1,8655,4,2,68,100,13235,13241,97,115,104,59,1,8879,97,115,104,59,1,8878,4,5,98,99,110,112,116,13259,13264,13270,13275,13308,108,97,59,1,8711,117,116,101,59,1,324,103,59,3,8736,8402,4,5,59,69,105,111,112,13287,13289,13293,13298,13302,1,8777,59,3,10864,824,100,59,3,8779,824,115,59,1,329,114,111,120,59,1,8777,117,114,4,2,59,97,13316,13318,1,9838,108,4,2,59,115,13325,13327,1,9838,59,1,8469,4,2,115,117,13336,13344,112,5,160,1,59,13342,1,160,109,112,4,2,59,101,13352,13355,3,8782,824,59,3,8783,824,4,5,97,101,111,117,121,13371,13385,13391,13407,13411,4,2,112,114,13377,13380,59,1,10819,111,110,59,1,328,100,105,108,59,1,326,110,103,4,2,59,100,13399,13401,1,8775,111,116,59,3,10861,824,112,59,1,10818,59,1,1085,97,115,104,59,1,8211,4,7,59,65,97,100,113,115,120,13436,13438,13443,13466,13472,13478,13494,1,8800,114,114,59,1,8663,114,4,2,104,114,13450,13454,107,59,1,10532,4,2,59,111,13460,13462,1,8599,119,59,1,8599,111,116,59,3,8784,824,117,105,118,59,1,8802,4,2,101,105,13484,13489,97,114,59,1,10536,109,59,3,8770,824,105,115,116,4,2,59,115,13503,13505,1,8708,59,1,8708,114,59,3,55349,56619,4,4,69,101,115,116,13523,13527,13563,13568,59,3,8807,824,4,3,59,113,115,13535,13537,13559,1,8817,4,3,59,113,115,13545,13547,13551,1,8817,59,3,8807,824,108,97,110,116,59,3,10878,824,59,3,10878,824,105,109,59,1,8821,4,2,59,114,13574,13576,1,8815,59,1,8815,4,3,65,97,112,13587,13592,13597,114,114,59,1,8654,114,114,59,1,8622,97,114,59,1,10994,4,3,59,115,118,13610,13612,13623,1,8715,4,2,59,100,13618,13620,1,8956,59,1,8954,59,1,8715,99,121,59,1,1114,4,7,65,69,97,100,101,115,116,13647,13652,13656,13661,13665,13737,13742,114,114,59,1,8653,59,3,8806,824,114,114,59,1,8602,114,59,1,8229,4,4,59,102,113,115,13675,13677,13703,13725,1,8816,116,4,2,97,114,13684,13691,114,114,111,119,59,1,8602,105,103,104,116,97,114,114,111,119,59,1,8622,4,3,59,113,115,13711,13713,13717,1,8816,59,3,8806,824,108,97,110,116,59,3,10877,824,4,2,59,115,13731,13734,3,10877,824,59,1,8814,105,109,59,1,8820,4,2,59,114,13748,13750,1,8814,105,4,2,59,101,13757,13759,1,8938,59,1,8940,105,100,59,1,8740,4,2,112,116,13773,13778,102,59,3,55349,56671,5,172,3,59,105,110,13787,13789,13829,1,172,110,4,4,59,69,100,118,13800,13802,13806,13812,1,8713,59,3,8953,824,111,116,59,3,8949,824,4,3,97,98,99,13820,13823,13826,59,1,8713,59,1,8951,59,1,8950,105,4,2,59,118,13836,13838,1,8716,4,3,97,98,99,13846,13849,13852,59,1,8716,59,1,8958,59,1,8957,4,3,97,111,114,13863,13892,13899,114,4,4,59,97,115,116,13874,13876,13883,13888,1,8742,108,108,101,108,59,1,8742,108,59,3,11005,8421,59,3,8706,824,108,105,110,116,59,1,10772,4,3,59,99,101,13907,13909,13914,1,8832,117,101,59,1,8928,4,2,59,99,13920,13923,3,10927,824,4,2,59,101,13929,13931,1,8832,113,59,3,10927,824,4,4,65,97,105,116,13946,13951,13971,13982,114,114,59,1,8655,114,114,4,3,59,99,119,13961,13963,13967,1,8603,59,3,10547,824,59,3,8605,824,103,104,116,97,114,114,111,119,59,1,8603,114,105,4,2,59,101,13990,13992,1,8939,59,1,8941,4,7,99,104,105,109,112,113,117,14011,14036,14060,14080,14085,14090,14106,4,4,59,99,101,114,14021,14023,14028,14032,1,8833,117,101,59,1,8929,59,3,10928,824,59,3,55349,56515,111,114,116,4,2,109,112,14045,14050,105,100,59,1,8740,97,114,97,108,108,101,108,59,1,8742,109,4,2,59,101,14067,14069,1,8769,4,2,59,113,14075,14077,1,8772,59,1,8772,105,100,59,1,8740,97,114,59,1,8742,115,117,4,2,98,112,14098,14102,101,59,1,8930,101,59,1,8931,4,3,98,99,112,14114,14157,14171,4,4,59,69,101,115,14124,14126,14130,14133,1,8836,59,3,10949,824,59,1,8840,101,116,4,2,59,101,14141,14144,3,8834,8402,113,4,2,59,113,14151,14153,1,8840,59,3,10949,824,99,4,2,59,101,14164,14166,1,8833,113,59,3,10928,824,4,4,59,69,101,115,14181,14183,14187,14190,1,8837,59,3,10950,824,59,1,8841,101,116,4,2,59,101,14198,14201,3,8835,8402,113,4,2,59,113,14208,14210,1,8841,59,3,10950,824,4,4,103,105,108,114,14224,14228,14238,14242,108,59,1,8825,108,100,101,5,241,1,59,14236,1,241,103,59,1,8824,105,97,110,103,108,101,4,2,108,114,14254,14269,101,102,116,4,2,59,101,14263,14265,1,8938,113,59,1,8940,105,103,104,116,4,2,59,101,14279,14281,1,8939,113,59,1,8941,4,2,59,109,14291,14293,1,957,4,3,59,101,115,14301,14303,14308,1,35,114,111,59,1,8470,112,59,1,8199,4,9,68,72,97,100,103,105,108,114,115,14332,14338,14344,14349,14355,14369,14376,14408,14426,97,115,104,59,1,8877,97,114,114,59,1,10500,112,59,3,8781,8402,97,115,104,59,1,8876,4,2,101,116,14361,14365,59,3,8805,8402,59,3,62,8402,110,102,105,110,59,1,10718,4,3,65,101,116,14384,14389,14393,114,114,59,1,10498,59,3,8804,8402,4,2,59,114,14399,14402,3,60,8402,105,101,59,3,8884,8402,4,2,65,116,14414,14419,114,114,59,1,10499,114,105,101,59,3,8885,8402,105,109,59,3,8764,8402,4,3,65,97,110,14440,14445,14468,114,114,59,1,8662,114,4,2,104,114,14452,14456,107,59,1,10531,4,2,59,111,14462,14464,1,8598,119,59,1,8598,101,97,114,59,1,10535,4,18,83,97,99,100,101,102,103,104,105,108,109,111,112,114,115,116,117,118,14512,14515,14535,14560,14597,14603,14618,14643,14657,14662,14701,14741,14747,14769,14851,14877,14907,14916,59,1,9416,4,2,99,115,14521,14531,117,116,101,5,243,1,59,14529,1,243,116,59,1,8859,4,2,105,121,14541,14557,114,4,2,59,99,14548,14550,1,8858,5,244,1,59,14555,1,244,59,1,1086,4,5,97,98,105,111,115,14572,14577,14583,14587,14591,115,104,59,1,8861,108,97,99,59,1,337,118,59,1,10808,116,59,1,8857,111,108,100,59,1,10684,108,105,103,59,1,339,4,2,99,114,14609,14614,105,114,59,1,10687,59,3,55349,56620,4,3,111,114,116,14626,14630,14640,110,59,1,731,97,118,101,5,242,1,59,14638,1,242,59,1,10689,4,2,98,109,14649,14654,97,114,59,1,10677,59,1,937,110,116,59,1,8750,4,4,97,99,105,116,14672,14677,14693,14698,114,114,59,1,8634,4,2,105,114,14683,14687,114,59,1,10686,111,115,115,59,1,10683,110,101,59,1,8254,59,1,10688,4,3,97,101,105,14709,14714,14719,99,114,59,1,333,103,97,59,1,969,4,3,99,100,110,14727,14733,14736,114,111,110,59,1,959,59,1,10678,117,115,59,1,8854,112,102,59,3,55349,56672,4,3,97,101,108,14755,14759,14764,114,59,1,10679,114,112,59,1,10681,117,115,59,1,8853,4,7,59,97,100,105,111,115,118,14785,14787,14792,14831,14837,14841,14848,1,8744,114,114,59,1,8635,4,4,59,101,102,109,14802,14804,14817,14824,1,10845,114,4,2,59,111,14811,14813,1,8500,102,59,1,8500,5,170,1,59,14822,1,170,5,186,1,59,14829,1,186,103,111,102,59,1,8886,114,59,1,10838,108,111,112,101,59,1,10839,59,1,10843,4,3,99,108,111,14859,14863,14873,114,59,1,8500,97,115,104,5,248,1,59,14871,1,248,108,59,1,8856,105,4,2,108,109,14884,14893,100,101,5,245,1,59,14891,1,245,101,115,4,2,59,97,14901,14903,1,8855,115,59,1,10806,109,108,5,246,1,59,14914,1,246,98,97,114,59,1,9021,4,12,97,99,101,102,104,105,108,109,111,114,115,117,14948,14992,14996,15033,15038,15068,15090,15189,15192,15222,15427,15441,114,4,4,59,97,115,116,14959,14961,14976,14989,1,8741,5,182,2,59,108,14968,14970,1,182,108,101,108,59,1,8741,4,2,105,108,14982,14986,109,59,1,10995,59,1,11005,59,1,8706,121,59,1,1087,114,4,5,99,105,109,112,116,15009,15014,15019,15024,15027,110,116,59,1,37,111,100,59,1,46,105,108,59,1,8240,59,1,8869,101,110,107,59,1,8241,114,59,3,55349,56621,4,3,105,109,111,15046,15057,15063,4,2,59,118,15052,15054,1,966,59,1,981,109,97,116,59,1,8499,110,101,59,1,9742,4,3,59,116,118,15076,15078,15087,1,960,99,104,102,111,114,107,59,1,8916,59,1,982,4,2,97,117,15096,15119,110,4,2,99,107,15103,15115,107,4,2,59,104,15110,15112,1,8463,59,1,8462,118,59,1,8463,115,4,9,59,97,98,99,100,101,109,115,116,15140,15142,15148,15151,15156,15168,15171,15179,15184,1,43,99,105,114,59,1,10787,59,1,8862,105,114,59,1,10786,4,2,111,117,15162,15165,59,1,8724,59,1,10789,59,1,10866,110,5,177,1,59,15177,1,177,105,109,59,1,10790,119,111,59,1,10791,59,1,177,4,3,105,112,117,15200,15208,15213,110,116,105,110,116,59,1,10773,102,59,3,55349,56673,110,100,5,163,1,59,15220,1,163,4,10,59,69,97,99,101,105,110,111,115,117,15244,15246,15249,15253,15258,15334,15347,15367,15416,15421,1,8826,59,1,10931,112,59,1,10935,117,101,59,1,8828,4,2,59,99,15264,15266,1,10927,4,6,59,97,99,101,110,115,15280,15282,15290,15299,15303,15329,1,8826,112,112,114,111,120,59,1,10935,117,114,108,121,101,113,59,1,8828,113,59,1,10927,4,3,97,101,115,15311,15319,15324,112,112,114,111,120,59,1,10937,113,113,59,1,10933,105,109,59,1,8936,105,109,59,1,8830,109,101,4,2,59,115,15342,15344,1,8242,59,1,8473,4,3,69,97,115,15355,15358,15362,59,1,10933,112,59,1,10937,105,109,59,1,8936,4,3,100,102,112,15375,15378,15404,59,1,8719,4,3,97,108,115,15386,15392,15398,108,97,114,59,1,9006,105,110,101,59,1,8978,117,114,102,59,1,8979,4,2,59,116,15410,15412,1,8733,111,59,1,8733,105,109,59,1,8830,114,101,108,59,1,8880,4,2,99,105,15433,15438,114,59,3,55349,56517,59,1,968,110,99,115,112,59,1,8200,4,6,102,105,111,112,115,117,15462,15467,15472,15478,15485,15491,114,59,3,55349,56622,110,116,59,1,10764,112,102,59,3,55349,56674,114,105,109,101,59,1,8279,99,114,59,3,55349,56518,4,3,97,101,111,15499,15520,15534,116,4,2,101,105,15506,15515,114,110,105,111,110,115,59,1,8461,110,116,59,1,10774,115,116,4,2,59,101,15528,15530,1,63,113,59,1,8799,116,5,34,1,59,15540,1,34,4,21,65,66,72,97,98,99,100,101,102,104,105,108,109,110,111,112,114,115,116,117,120,15586,15609,15615,15620,15796,15855,15893,15931,15977,16001,16039,16183,16204,16222,16228,16285,16312,16318,16363,16408,16416,4,3,97,114,116,15594,15599,15603,114,114,59,1,8667,114,59,1,8658,97,105,108,59,1,10524,97,114,114,59,1,10511,97,114,59,1,10596,4,7,99,100,101,110,113,114,116,15636,15651,15656,15664,15687,15696,15770,4,2,101,117,15642,15646,59,3,8765,817,116,101,59,1,341,105,99,59,1,8730,109,112,116,121,118,59,1,10675,103,4,4,59,100,101,108,15675,15677,15680,15683,1,10217,59,1,10642,59,1,10661,101,59,1,10217,117,111,5,187,1,59,15694,1,187,114,4,11,59,97,98,99,102,104,108,112,115,116,119,15721,15723,15727,15739,15742,15746,15750,15754,15758,15763,15767,1,8594,112,59,1,10613,4,2,59,102,15733,15735,1,8677,115,59,1,10528,59,1,10547,115,59,1,10526,107,59,1,8618,112,59,1,8620,108,59,1,10565,105,109,59,1,10612,108,59,1,8611,59,1,8605,4,2,97,105,15776,15781,105,108,59,1,10522,111,4,2,59,110,15788,15790,1,8758,97,108,115,59,1,8474,4,3,97,98,114,15804,15809,15814,114,114,59,1,10509,114,107,59,1,10099,4,2,97,107,15820,15833,99,4,2,101,107,15827,15830,59,1,125,59,1,93,4,2,101,115,15839,15842,59,1,10636,108,4,2,100,117,15849,15852,59,1,10638,59,1,10640,4,4,97,101,117,121,15865,15871,15886,15890,114,111,110,59,1,345,4,2,100,105,15877,15882,105,108,59,1,343,108,59,1,8969,98,59,1,125,59,1,1088,4,4,99,108,113,115,15903,15907,15914,15927,97,59,1,10551,100,104,97,114,59,1,10601,117,111,4,2,59,114,15922,15924,1,8221,59,1,8221,104,59,1,8627,4,3,97,99,103,15939,15966,15970,108,4,4,59,105,112,115,15950,15952,15957,15963,1,8476,110,101,59,1,8475,97,114,116,59,1,8476,59,1,8477,116,59,1,9645,5,174,1,59,15975,1,174,4,3,105,108,114,15985,15991,15997,115,104,116,59,1,10621,111,111,114,59,1,8971,59,3,55349,56623,4,2,97,111,16007,16028,114,4,2,100,117,16014,16017,59,1,8641,4,2,59,108,16023,16025,1,8640,59,1,10604,4,2,59,118,16034,16036,1,961,59,1,1009,4,3,103,110,115,16047,16167,16171,104,116,4,6,97,104,108,114,115,116,16063,16081,16103,16130,16143,16155,114,114,111,119,4,2,59,116,16073,16075,1,8594,97,105,108,59,1,8611,97,114,112,111,111,110,4,2,100,117,16093,16099,111,119,110,59,1,8641,112,59,1,8640,101,102,116,4,2,97,104,16112,16120,114,114,111,119,115,59,1,8644,97,114,112,111,111,110,115,59,1,8652,105,103,104,116,97,114,114,111,119,115,59,1,8649,113,117,105,103,97,114,114,111,119,59,1,8605,104,114,101,101,116,105,109,101,115,59,1,8908,103,59,1,730,105,110,103,100,111,116,115,101,113,59,1,8787,4,3,97,104,109,16191,16196,16201,114,114,59,1,8644,97,114,59,1,8652,59,1,8207,111,117,115,116,4,2,59,97,16214,16216,1,9137,99,104,101,59,1,9137,109,105,100,59,1,10990,4,4,97,98,112,116,16238,16252,16257,16278,4,2,110,114,16244,16248,103,59,1,10221,114,59,1,8702,114,107,59,1,10215,4,3,97,102,108,16265,16269,16273,114,59,1,10630,59,3,55349,56675,117,115,59,1,10798,105,109,101,115,59,1,10805,4,2,97,112,16291,16304,114,4,2,59,103,16298,16300,1,41,116,59,1,10644,111,108,105,110,116,59,1,10770,97,114,114,59,1,8649,4,4,97,99,104,113,16328,16334,16339,16342,113,117,111,59,1,8250,114,59,3,55349,56519,59,1,8625,4,2,98,117,16348,16351,59,1,93,111,4,2,59,114,16358,16360,1,8217,59,1,8217,4,3,104,105,114,16371,16377,16383,114,101,101,59,1,8908,109,101,115,59,1,8906,105,4,4,59,101,102,108,16394,16396,16399,16402,1,9657,59,1,8885,59,1,9656,116,114,105,59,1,10702,108,117,104,97,114,59,1,10600,59,1,8478,4,19,97,98,99,100,101,102,104,105,108,109,111,112,113,114,115,116,117,119,122,16459,16466,16472,16572,16590,16672,16687,16746,16844,16850,16924,16963,16988,17115,17121,17154,17206,17614,17656,99,117,116,101,59,1,347,113,117,111,59,1,8218,4,10,59,69,97,99,101,105,110,112,115,121,16494,16496,16499,16513,16518,16531,16536,16556,16564,16569,1,8827,59,1,10932,4,2,112,114,16505,16508,59,1,10936,111,110,59,1,353,117,101,59,1,8829,4,2,59,100,16524,16526,1,10928,105,108,59,1,351,114,99,59,1,349,4,3,69,97,115,16544,16547,16551,59,1,10934,112,59,1,10938,105,109,59,1,8937,111,108,105,110,116,59,1,10771,105,109,59,1,8831,59,1,1089,111,116,4,3,59,98,101,16582,16584,16587,1,8901,59,1,8865,59,1,10854,4,7,65,97,99,109,115,116,120,16606,16611,16634,16642,16646,16652,16668,114,114,59,1,8664,114,4,2,104,114,16618,16622,107,59,1,10533,4,2,59,111,16628,16630,1,8600,119,59,1,8600,116,5,167,1,59,16640,1,167,105,59,1,59,119,97,114,59,1,10537,109,4,2,105,110,16659,16665,110,117,115,59,1,8726,59,1,8726,116,59,1,10038,114,4,2,59,111,16679,16682,3,55349,56624,119,110,59,1,8994,4,4,97,99,111,121,16697,16702,16716,16739,114,112,59,1,9839,4,2,104,121,16708,16713,99,121,59,1,1097,59,1,1096,114,116,4,2,109,112,16724,16729,105,100,59,1,8739,97,114,97,108,108,101,108,59,1,8741,5,173,1,59,16744,1,173,4,2,103,109,16752,16770,109,97,4,3,59,102,118,16762,16764,16767,1,963,59,1,962,59,1,962,4,8,59,100,101,103,108,110,112,114,16788,16790,16795,16806,16817,16828,16832,16838,1,8764,111,116,59,1,10858,4,2,59,113,16801,16803,1,8771,59,1,8771,4,2,59,69,16812,16814,1,10910,59,1,10912,4,2,59,69,16823,16825,1,10909,59,1,10911,101,59,1,8774,108,117,115,59,1,10788,97,114,114,59,1,10610,97,114,114,59,1,8592,4,4,97,101,105,116,16860,16883,16891,16904,4,2,108,115,16866,16878,108,115,101,116,109,105,110,117,115,59,1,8726,104,112,59,1,10803,112,97,114,115,108,59,1,10724,4,2,100,108,16897,16900,59,1,8739,101,59,1,8995,4,2,59,101,16910,16912,1,10922,4,2,59,115,16918,16920,1,10924,59,3,10924,65024,4,3,102,108,112,16932,16938,16958,116,99,121,59,1,1100,4,2,59,98,16944,16946,1,47,4,2,59,97,16952,16954,1,10692,114,59,1,9023,102,59,3,55349,56676,97,4,2,100,114,16970,16985,101,115,4,2,59,117,16978,16980,1,9824,105,116,59,1,9824,59,1,8741,4,3,99,115,117,16996,17028,17089,4,2,97,117,17002,17015,112,4,2,59,115,17009,17011,1,8851,59,3,8851,65024,112,4,2,59,115,17022,17024,1,8852,59,3,8852,65024,117,4,2,98,112,17035,17062,4,3,59,101,115,17043,17045,17048,1,8847,59,1,8849,101,116,4,2,59,101,17056,17058,1,8847,113,59,1,8849,4,3,59,101,115,17070,17072,17075,1,8848,59,1,8850,101,116,4,2,59,101,17083,17085,1,8848,113,59,1,8850,4,3,59,97,102,17097,17099,17112,1,9633,114,4,2,101,102,17106,17109,59,1,9633,59,1,9642,59,1,9642,97,114,114,59,1,8594,4,4,99,101,109,116,17131,17136,17142,17148,114,59,3,55349,56520,116,109,110,59,1,8726,105,108,101,59,1,8995,97,114,102,59,1,8902,4,2,97,114,17160,17172,114,4,2,59,102,17167,17169,1,9734,59,1,9733,4,2,97,110,17178,17202,105,103,104,116,4,2,101,112,17188,17197,112,115,105,108,111,110,59,1,1013,104,105,59,1,981,115,59,1,175,4,5,98,99,109,110,112,17218,17351,17420,17423,17427,4,9,59,69,100,101,109,110,112,114,115,17238,17240,17243,17248,17261,17267,17279,17285,17291,1,8834,59,1,10949,111,116,59,1,10941,4,2,59,100,17254,17256,1,8838,111,116,59,1,10947,117,108,116,59,1,10945,4,2,69,101,17273,17276,59,1,10955,59,1,8842,108,117,115,59,1,10943,97,114,114,59,1,10617,4,3,101,105,117,17299,17335,17339,116,4,3,59,101,110,17308,17310,17322,1,8834,113,4,2,59,113,17317,17319,1,8838,59,1,10949,101,113,4,2,59,113,17330,17332,1,8842,59,1,10955,109,59,1,10951,4,2,98,112,17345,17348,59,1,10965,59,1,10963,99,4,6,59,97,99,101,110,115,17366,17368,17376,17385,17389,17415,1,8827,112,112,114,111,120,59,1,10936,117,114,108,121,101,113,59,1,8829,113,59,1,10928,4,3,97,101,115,17397,17405,17410,112,112,114,111,120,59,1,10938,113,113,59,1,10934,105,109,59,1,8937,105,109,59,1,8831,59,1,8721,103,59,1,9834,4,13,49,50,51,59,69,100,101,104,108,109,110,112,115,17455,17462,17469,17476,17478,17481,17496,17509,17524,17530,17536,17548,17554,5,185,1,59,17460,1,185,5,178,1,59,17467,1,178,5,179,1,59,17474,1,179,1,8835,59,1,10950,4,2,111,115,17487,17491,116,59,1,10942,117,98,59,1,10968,4,2,59,100,17502,17504,1,8839,111,116,59,1,10948,115,4,2,111,117,17516,17520,108,59,1,10185,98,59,1,10967,97,114,114,59,1,10619,117,108,116,59,1,10946,4,2,69,101,17542,17545,59,1,10956,59,1,8843,108,117,115,59,1,10944,4,3,101,105,117,17562,17598,17602,116,4,3,59,101,110,17571,17573,17585,1,8835,113,4,2,59,113,17580,17582,1,8839,59,1,10950,101,113,4,2,59,113,17593,17595,1,8843,59,1,10956,109,59,1,10952,4,2,98,112,17608,17611,59,1,10964,59,1,10966,4,3,65,97,110,17622,17627,17650,114,114,59,1,8665,114,4,2,104,114,17634,17638,107,59,1,10534,4,2,59,111,17644,17646,1,8601,119,59,1,8601,119,97,114,59,1,10538,108,105,103,5,223,1,59,17664,1,223,4,13,97,98,99,100,101,102,104,105,111,112,114,115,119,17694,17709,17714,17737,17742,17749,17754,17860,17905,17957,17964,18090,18122,4,2,114,117,17700,17706,103,101,116,59,1,8982,59,1,964,114,107,59,1,9140,4,3,97,101,121,17722,17728,17734,114,111,110,59,1,357,100,105,108,59,1,355,59,1,1090,111,116,59,1,8411,108,114,101,99,59,1,8981,114,59,3,55349,56625,4,4,101,105,107,111,17764,17805,17836,17851,4,2,114,116,17770,17786,101,4,2,52,102,17777,17780,59,1,8756,111,114,101,59,1,8756,97,4,3,59,115,118,17795,17797,17802,1,952,121,109,59,1,977,59,1,977,4,2,99,110,17811,17831,107,4,2,97,115,17818,17826,112,112,114,111,120,59,1,8776,105,109,59,1,8764,115,112,59,1,8201,4,2,97,115,17842,17846,112,59,1,8776,105,109,59,1,8764,114,110,5,254,1,59,17858,1,254,4,3,108,109,110,17868,17873,17901,100,101,59,1,732,101,115,5,215,3,59,98,100,17884,17886,17898,1,215,4,2,59,97,17892,17894,1,8864,114,59,1,10801,59,1,10800,116,59,1,8749,4,3,101,112,115,17913,17917,17953,97,59,1,10536,4,4,59,98,99,102,17927,17929,17934,17939,1,8868,111,116,59,1,9014,105,114,59,1,10993,4,2,59,111,17945,17948,3,55349,56677,114,107,59,1,10970,97,59,1,10537,114,105,109,101,59,1,8244,4,3,97,105,112,17972,17977,18082,100,101,59,1,8482,4,7,97,100,101,109,112,115,116,17993,18051,18056,18059,18066,18072,18076,110,103,108,101,4,5,59,100,108,113,114,18009,18011,18017,18032,18035,1,9653,111,119,110,59,1,9663,101,102,116,4,2,59,101,18026,18028,1,9667,113,59,1,8884,59,1,8796,105,103,104,116,4,2,59,101,18045,18047,1,9657,113,59,1,8885,111,116,59,1,9708,59,1,8796,105,110,117,115,59,1,10810,108,117,115,59,1,10809,98,59,1,10701,105,109,101,59,1,10811,101,122,105,117,109,59,1,9186,4,3,99,104,116,18098,18111,18116,4,2,114,121,18104,18108,59,3,55349,56521,59,1,1094,99,121,59,1,1115,114,111,107,59,1,359,4,2,105,111,18128,18133,120,116,59,1,8812,104,101,97,100,4,2,108,114,18143,18154,101,102,116,97,114,114,111,119,59,1,8606,105,103,104,116,97,114,114,111,119,59,1,8608,4,18,65,72,97,98,99,100,102,103,104,108,109,111,112,114,115,116,117,119,18204,18209,18214,18234,18250,18268,18292,18308,18319,18343,18379,18397,18413,18504,18547,18553,18584,18603,114,114,59,1,8657,97,114,59,1,10595,4,2,99,114,18220,18230,117,116,101,5,250,1,59,18228,1,250,114,59,1,8593,114,4,2,99,101,18241,18245,121,59,1,1118,118,101,59,1,365,4,2,105,121,18256,18265,114,99,5,251,1,59,18263,1,251,59,1,1091,4,3,97,98,104,18276,18281,18287,114,114,59,1,8645,108,97,99,59,1,369,97,114,59,1,10606,4,2,105,114,18298,18304,115,104,116,59,1,10622,59,3,55349,56626,114,97,118,101,5,249,1,59,18317,1,249,4,2,97,98,18325,18338,114,4,2,108,114,18332,18335,59,1,8639,59,1,8638,108,107,59,1,9600,4,2,99,116,18349,18374,4,2,111,114,18355,18369,114,110,4,2,59,101,18363,18365,1,8988,114,59,1,8988,111,112,59,1,8975,114,105,59,1,9720,4,2,97,108,18385,18390,99,114,59,1,363,5,168,1,59,18395,1,168,4,2,103,112,18403,18408,111,110,59,1,371,102,59,3,55349,56678,4,6,97,100,104,108,115,117,18427,18434,18445,18470,18475,18494,114,114,111,119,59,1,8593,111,119,110,97,114,114,111,119,59,1,8597,97,114,112,111,111,110,4,2,108,114,18457,18463,101,102,116,59,1,8639,105,103,104,116,59,1,8638,117,115,59,1,8846,105,4,3,59,104,108,18484,18486,18489,1,965,59,1,978,111,110,59,1,965,112,97,114,114,111,119,115,59,1,8648,4,3,99,105,116,18512,18537,18542,4,2,111,114,18518,18532,114,110,4,2,59,101,18526,18528,1,8989,114,59,1,8989,111,112,59,1,8974,110,103,59,1,367,114,105,59,1,9721,99,114,59,3,55349,56522,4,3,100,105,114,18561,18566,18572,111,116,59,1,8944,108,100,101,59,1,361,105,4,2,59,102,18579,18581,1,9653,59,1,9652,4,2,97,109,18590,18595,114,114,59,1,8648,108,5,252,1,59,18601,1,252,97,110,103,108,101,59,1,10663,4,15,65,66,68,97,99,100,101,102,108,110,111,112,114,115,122,18643,18648,18661,18667,18847,18851,18857,18904,18909,18915,18931,18937,18943,18949,18996,114,114,59,1,8661,97,114,4,2,59,118,18656,18658,1,10984,59,1,10985,97,115,104,59,1,8872,4,2,110,114,18673,18679,103,114,116,59,1,10652,4,7,101,107,110,112,114,115,116,18695,18704,18711,18720,18742,18754,18810,112,115,105,108,111,110,59,1,1013,97,112,112,97,59,1,1008,111,116,104,105,110,103,59,1,8709,4,3,104,105,114,18728,18732,18735,105,59,1,981,59,1,982,111,112,116,111,59,1,8733,4,2,59,104,18748,18750,1,8597,111,59,1,1009,4,2,105,117,18760,18766,103,109,97,59,1,962,4,2,98,112,18772,18791,115,101,116,110,101,113,4,2,59,113,18784,18787,3,8842,65024,59,3,10955,65024,115,101,116,110,101,113,4,2,59,113,18803,18806,3,8843,65024,59,3,10956,65024,4,2,104,114,18816,18822,101,116,97,59,1,977,105,97,110,103,108,101,4,2,108,114,18834,18840,101,102,116,59,1,8882,105,103,104,116,59,1,8883,121,59,1,1074,97,115,104,59,1,8866,4,3,101,108,114,18865,18884,18890,4,3,59,98,101,18873,18875,18880,1,8744,97,114,59,1,8891,113,59,1,8794,108,105,112,59,1,8942,4,2,98,116,18896,18901,97,114,59,1,124,59,1,124,114,59,3,55349,56627,116,114,105,59,1,8882,115,117,4,2,98,112,18923,18927,59,3,8834,8402,59,3,8835,8402,112,102,59,3,55349,56679,114,111,112,59,1,8733,116,114,105,59,1,8883,4,2,99,117,18955,18960,114,59,3,55349,56523,4,2,98,112,18966,18981,110,4,2,69,101,18973,18977,59,3,10955,65024,59,3,8842,65024,110,4,2,69,101,18988,18992,59,3,10956,65024,59,3,8843,65024,105,103,122,97,103,59,1,10650,4,7,99,101,102,111,112,114,115,19020,19026,19061,19066,19072,19075,19089,105,114,99,59,1,373,4,2,100,105,19032,19055,4,2,98,103,19038,19043,97,114,59,1,10847,101,4,2,59,113,19050,19052,1,8743,59,1,8793,101,114,112,59,1,8472,114,59,3,55349,56628,112,102,59,3,55349,56680,59,1,8472,4,2,59,101,19081,19083,1,8768,97,116,104,59,1,8768,99,114,59,3,55349,56524,4,14,99,100,102,104,105,108,109,110,111,114,115,117,118,119,19125,19146,19152,19157,19173,19176,19192,19197,19202,19236,19252,19269,19286,19291,4,3,97,105,117,19133,19137,19142,112,59,1,8898,114,99,59,1,9711,112,59,1,8899,116,114,105,59,1,9661,114,59,3,55349,56629,4,2,65,97,19163,19168,114,114,59,1,10234,114,114,59,1,10231,59,1,958,4,2,65,97,19182,19187,114,114,59,1,10232,114,114,59,1,10229,97,112,59,1,10236,105,115,59,1,8955,4,3,100,112,116,19210,19215,19230,111,116,59,1,10752,4,2,102,108,19221,19225,59,3,55349,56681,117,115,59,1,10753,105,109,101,59,1,10754,4,2,65,97,19242,19247,114,114,59,1,10233,114,114,59,1,10230,4,2,99,113,19258,19263,114,59,3,55349,56525,99,117,112,59,1,10758,4,2,112,116,19275,19281,108,117,115,59,1,10756,114,105,59,1,9651,101,101,59,1,8897,101,100,103,101,59,1,8896,4,8,97,99,101,102,105,111,115,117,19316,19335,19349,19357,19362,19367,19373,19379,99,4,2,117,121,19323,19332,116,101,5,253,1,59,19330,1,253,59,1,1103,4,2,105,121,19341,19346,114,99,59,1,375,59,1,1099,110,5,165,1,59,19355,1,165,114,59,3,55349,56630,99,121,59,1,1111,112,102,59,3,55349,56682,99,114,59,3,55349,56526,4,2,99,109,19385,19389,121,59,1,1102,108,5,255,1,59,19395,1,255,4,10,97,99,100,101,102,104,105,111,115,119,19419,19426,19441,19446,19462,19467,19472,19480,19486,19492,99,117,116,101,59,1,378,4,2,97,121,19432,19438,114,111,110,59,1,382,59,1,1079,111,116,59,1,380,4,2,101,116,19452,19458,116,114,102,59,1,8488,97,59,1,950,114,59,3,55349,56631,99,121,59,1,1078,103,114,97,114,114,59,1,8669,112,102,59,3,55349,56683,99,114,59,3,55349,56527,4,2,106,110,19498,19501,59,1,8205,106,59,1,8204]);\n\n//# sourceURL=webpack:///./node_modules/parse5/lib/tokenizer/named_entity_data.js?");

/***/ }),

/***/ "./node_modules/parse5/lib/tokenizer/preprocessor.js":
/*!***********************************************************!*\
  !*** ./node_modules/parse5/lib/tokenizer/preprocessor.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar UNICODE = __webpack_require__(/*! ../common/unicode */ \"./node_modules/parse5/lib/common/unicode.js\");\n\n//Aliases\nvar $ = UNICODE.CODE_POINTS;\n\n//Utils\n\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\n//this functions if they will be situated in another module due to context switch.\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\nfunction isSurrogatePair(cp1, cp2) {\n    return cp1 >= 0xD800 && cp1 <= 0xDBFF && cp2 >= 0xDC00 && cp2 <= 0xDFFF;\n}\n\nfunction getSurrogatePairCodePoint(cp1, cp2) {\n    return (cp1 - 0xD800) * 0x400 + 0x2400 + cp2;\n}\n\n\n//Const\nvar DEFAULT_BUFFER_WATERLINE = 1 << 16;\n\n\n//Preprocessor\n//NOTE: HTML input preprocessing\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)\nvar Preprocessor = module.exports = function () {\n    this.html = null;\n\n    this.pos = -1;\n    this.lastGapPos = -1;\n    this.lastCharPos = -1;\n\n    this.gapStack = [];\n\n    this.skipNextNewLine = false;\n\n    this.lastChunkWritten = false;\n    this.endOfChunkHit = false;\n    this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;\n};\n\nPreprocessor.prototype.dropParsedChunk = function () {\n    if (this.pos > this.bufferWaterline) {\n        this.lastCharPos -= this.pos;\n        this.html = this.html.substring(this.pos);\n        this.pos = 0;\n        this.lastGapPos = -1;\n        this.gapStack = [];\n    }\n};\n\nPreprocessor.prototype._addGap = function () {\n    this.gapStack.push(this.lastGapPos);\n    this.lastGapPos = this.pos;\n};\n\nPreprocessor.prototype._processHighRangeCodePoint = function (cp) {\n    //NOTE: try to peek a surrogate pair\n    if (this.pos !== this.lastCharPos) {\n        var nextCp = this.html.charCodeAt(this.pos + 1);\n\n        if (isSurrogatePair(cp, nextCp)) {\n            //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.\n            this.pos++;\n            cp = getSurrogatePairCodePoint(cp, nextCp);\n\n            //NOTE: add gap that should be avoided during retreat\n            this._addGap();\n        }\n    }\n\n    // NOTE: we've hit the end of chunk, stop processing at this point\n    else if (!this.lastChunkWritten) {\n        this.endOfChunkHit = true;\n        return $.EOF;\n    }\n\n    return cp;\n};\n\nPreprocessor.prototype.write = function (chunk, isLastChunk) {\n    if (this.html)\n        this.html += chunk;\n\n    else\n        this.html = chunk;\n\n    this.lastCharPos = this.html.length - 1;\n    this.endOfChunkHit = false;\n    this.lastChunkWritten = isLastChunk;\n};\n\nPreprocessor.prototype.insertHtmlAtCurrentPos = function (chunk) {\n    this.html = this.html.substring(0, this.pos + 1) +\n                chunk +\n                this.html.substring(this.pos + 1, this.html.length);\n\n    this.lastCharPos = this.html.length - 1;\n    this.endOfChunkHit = false;\n};\n\n\nPreprocessor.prototype.advance = function () {\n    this.pos++;\n\n    if (this.pos > this.lastCharPos) {\n        if (!this.lastChunkWritten)\n            this.endOfChunkHit = true;\n\n        return $.EOF;\n    }\n\n    var cp = this.html.charCodeAt(this.pos);\n\n    //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character\n    //must be ignored.\n    if (this.skipNextNewLine && cp === $.LINE_FEED) {\n        this.skipNextNewLine = false;\n        this._addGap();\n        return this.advance();\n    }\n\n    //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters\n    if (cp === $.CARRIAGE_RETURN) {\n        this.skipNextNewLine = true;\n        return $.LINE_FEED;\n    }\n\n    this.skipNextNewLine = false;\n\n    //OPTIMIZATION: first perform check if the code point in the allowed range that covers most common\n    //HTML input (e.g. ASCII codes) to avoid performance-cost operations for high-range code points.\n    return cp >= 0xD800 ? this._processHighRangeCodePoint(cp) : cp;\n};\n\nPreprocessor.prototype.retreat = function () {\n    if (this.pos === this.lastGapPos) {\n        this.lastGapPos = this.gapStack.pop();\n        this.pos--;\n    }\n\n    this.pos--;\n};\n\n\n\n//# sourceURL=webpack:///./node_modules/parse5/lib/tokenizer/preprocessor.js?");

/***/ }),

/***/ "./node_modules/parse5/lib/tree_adapters/default.js":
/*!**********************************************************!*\
  !*** ./node_modules/parse5/lib/tree_adapters/default.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar DOCUMENT_MODE = __webpack_require__(/*! ../common/html */ \"./node_modules/parse5/lib/common/html.js\").DOCUMENT_MODE;\n\n//Node construction\nexports.createDocument = function () {\n    return {\n        nodeName: '#document',\n        mode: DOCUMENT_MODE.NO_QUIRKS,\n        childNodes: []\n    };\n};\n\nexports.createDocumentFragment = function () {\n    return {\n        nodeName: '#document-fragment',\n        childNodes: []\n    };\n};\n\nexports.createElement = function (tagName, namespaceURI, attrs) {\n    return {\n        nodeName: tagName,\n        tagName: tagName,\n        attrs: attrs,\n        namespaceURI: namespaceURI,\n        childNodes: [],\n        parentNode: null\n    };\n};\n\nexports.createCommentNode = function (data) {\n    return {\n        nodeName: '#comment',\n        data: data,\n        parentNode: null\n    };\n};\n\nvar createTextNode = function (value) {\n    return {\n        nodeName: '#text',\n        value: value,\n        parentNode: null\n    };\n};\n\n\n//Tree mutation\nvar appendChild = exports.appendChild = function (parentNode, newNode) {\n    parentNode.childNodes.push(newNode);\n    newNode.parentNode = parentNode;\n};\n\nvar insertBefore = exports.insertBefore = function (parentNode, newNode, referenceNode) {\n    var insertionIdx = parentNode.childNodes.indexOf(referenceNode);\n\n    parentNode.childNodes.splice(insertionIdx, 0, newNode);\n    newNode.parentNode = parentNode;\n};\n\nexports.setTemplateContent = function (templateElement, contentElement) {\n    templateElement.content = contentElement;\n};\n\nexports.getTemplateContent = function (templateElement) {\n    return templateElement.content;\n};\n\nexports.setDocumentType = function (document, name, publicId, systemId) {\n    var doctypeNode = null;\n\n    for (var i = 0; i < document.childNodes.length; i++) {\n        if (document.childNodes[i].nodeName === '#documentType') {\n            doctypeNode = document.childNodes[i];\n            break;\n        }\n    }\n\n    if (doctypeNode) {\n        doctypeNode.name = name;\n        doctypeNode.publicId = publicId;\n        doctypeNode.systemId = systemId;\n    }\n\n    else {\n        appendChild(document, {\n            nodeName: '#documentType',\n            name: name,\n            publicId: publicId,\n            systemId: systemId\n        });\n    }\n};\n\nexports.setDocumentMode = function (document, mode) {\n    document.mode = mode;\n};\n\nexports.getDocumentMode = function (document) {\n    return document.mode;\n};\n\nexports.detachNode = function (node) {\n    if (node.parentNode) {\n        var idx = node.parentNode.childNodes.indexOf(node);\n\n        node.parentNode.childNodes.splice(idx, 1);\n        node.parentNode = null;\n    }\n};\n\nexports.insertText = function (parentNode, text) {\n    if (parentNode.childNodes.length) {\n        var prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\n\n        if (prevNode.nodeName === '#text') {\n            prevNode.value += text;\n            return;\n        }\n    }\n\n    appendChild(parentNode, createTextNode(text));\n};\n\nexports.insertTextBefore = function (parentNode, text, referenceNode) {\n    var prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\n\n    if (prevNode && prevNode.nodeName === '#text')\n        prevNode.value += text;\n    else\n        insertBefore(parentNode, createTextNode(text), referenceNode);\n};\n\nexports.adoptAttributes = function (recipient, attrs) {\n    var recipientAttrsMap = [];\n\n    for (var i = 0; i < recipient.attrs.length; i++)\n        recipientAttrsMap.push(recipient.attrs[i].name);\n\n    for (var j = 0; j < attrs.length; j++) {\n        if (recipientAttrsMap.indexOf(attrs[j].name) === -1)\n            recipient.attrs.push(attrs[j]);\n    }\n};\n\n\n//Tree traversing\nexports.getFirstChild = function (node) {\n    return node.childNodes[0];\n};\n\nexports.getChildNodes = function (node) {\n    return node.childNodes;\n};\n\nexports.getParentNode = function (node) {\n    return node.parentNode;\n};\n\nexports.getAttrList = function (element) {\n    return element.attrs;\n};\n\n//Node data\nexports.getTagName = function (element) {\n    return element.tagName;\n};\n\nexports.getNamespaceURI = function (element) {\n    return element.namespaceURI;\n};\n\nexports.getTextNodeContent = function (textNode) {\n    return textNode.value;\n};\n\nexports.getCommentNodeContent = function (commentNode) {\n    return commentNode.data;\n};\n\nexports.getDocumentTypeNodeName = function (doctypeNode) {\n    return doctypeNode.name;\n};\n\nexports.getDocumentTypeNodePublicId = function (doctypeNode) {\n    return doctypeNode.publicId;\n};\n\nexports.getDocumentTypeNodeSystemId = function (doctypeNode) {\n    return doctypeNode.systemId;\n};\n\n//Node types\nexports.isTextNode = function (node) {\n    return node.nodeName === '#text';\n};\n\nexports.isCommentNode = function (node) {\n    return node.nodeName === '#comment';\n};\n\nexports.isDocumentTypeNode = function (node) {\n    return node.nodeName === '#documentType';\n};\n\nexports.isElementNode = function (node) {\n    return !!node.tagName;\n};\n\n\n//# sourceURL=webpack:///./node_modules/parse5/lib/tree_adapters/default.js?");

/***/ }),

/***/ "./node_modules/parse5/lib/tree_adapters/htmlparser2.js":
/*!**************************************************************!*\
  !*** ./node_modules/parse5/lib/tree_adapters/htmlparser2.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar doctype = __webpack_require__(/*! ../common/doctype */ \"./node_modules/parse5/lib/common/doctype.js\"),\n    DOCUMENT_MODE = __webpack_require__(/*! ../common/html */ \"./node_modules/parse5/lib/common/html.js\").DOCUMENT_MODE;\n\n\n//Conversion tables for DOM Level1 structure emulation\nvar nodeTypes = {\n    element: 1,\n    text: 3,\n    cdata: 4,\n    comment: 8\n};\n\nvar nodePropertyShorthands = {\n    tagName: 'name',\n    childNodes: 'children',\n    parentNode: 'parent',\n    previousSibling: 'prev',\n    nextSibling: 'next',\n    nodeValue: 'data'\n};\n\n//Node\nvar Node = function (props) {\n    for (var key in props) {\n        if (props.hasOwnProperty(key))\n            this[key] = props[key];\n    }\n};\n\nNode.prototype = {\n    get firstChild() {\n        var children = this.children;\n\n        return children && children[0] || null;\n    },\n\n    get lastChild() {\n        var children = this.children;\n\n        return children && children[children.length - 1] || null;\n    },\n\n    get nodeType() {\n        return nodeTypes[this.type] || nodeTypes.element;\n    }\n};\n\nObject.keys(nodePropertyShorthands).forEach(function (key) {\n    var shorthand = nodePropertyShorthands[key];\n\n    Object.defineProperty(Node.prototype, key, {\n        get: function () {\n            return this[shorthand] || null;\n        },\n        set: function (val) {\n            this[shorthand] = val;\n            return val;\n        }\n    });\n});\n\n\n//Node construction\nexports.createDocument = function () {\n    return new Node({\n        type: 'root',\n        name: 'root',\n        parent: null,\n        prev: null,\n        next: null,\n        children: [],\n        'x-mode': DOCUMENT_MODE.NO_QUIRKS\n    });\n};\n\nexports.createDocumentFragment = function () {\n    return new Node({\n        type: 'root',\n        name: 'root',\n        parent: null,\n        prev: null,\n        next: null,\n        children: []\n    });\n};\n\nexports.createElement = function (tagName, namespaceURI, attrs) {\n    var attribs = Object.create(null),\n        attribsNamespace = Object.create(null),\n        attribsPrefix = Object.create(null);\n\n    for (var i = 0; i < attrs.length; i++) {\n        var attrName = attrs[i].name;\n\n        attribs[attrName] = attrs[i].value;\n        attribsNamespace[attrName] = attrs[i].namespace;\n        attribsPrefix[attrName] = attrs[i].prefix;\n    }\n\n    return new Node({\n        type: tagName === 'script' || tagName === 'style' ? tagName : 'tag',\n        name: tagName,\n        namespace: namespaceURI,\n        attribs: attribs,\n        'x-attribsNamespace': attribsNamespace,\n        'x-attribsPrefix': attribsPrefix,\n        children: [],\n        parent: null,\n        prev: null,\n        next: null\n    });\n};\n\nexports.createCommentNode = function (data) {\n    return new Node({\n        type: 'comment',\n        data: data,\n        parent: null,\n        prev: null,\n        next: null\n    });\n};\n\nvar createTextNode = function (value) {\n    return new Node({\n        type: 'text',\n        data: value,\n        parent: null,\n        prev: null,\n        next: null\n    });\n};\n\n\n//Tree mutation\nvar appendChild = exports.appendChild = function (parentNode, newNode) {\n    var prev = parentNode.children[parentNode.children.length - 1];\n\n    if (prev) {\n        prev.next = newNode;\n        newNode.prev = prev;\n    }\n\n    parentNode.children.push(newNode);\n    newNode.parent = parentNode;\n};\n\nvar insertBefore = exports.insertBefore = function (parentNode, newNode, referenceNode) {\n    var insertionIdx = parentNode.children.indexOf(referenceNode),\n        prev = referenceNode.prev;\n\n    if (prev) {\n        prev.next = newNode;\n        newNode.prev = prev;\n    }\n\n    referenceNode.prev = newNode;\n    newNode.next = referenceNode;\n\n    parentNode.children.splice(insertionIdx, 0, newNode);\n    newNode.parent = parentNode;\n};\n\nexports.setTemplateContent = function (templateElement, contentElement) {\n    appendChild(templateElement, contentElement);\n};\n\nexports.getTemplateContent = function (templateElement) {\n    return templateElement.children[0];\n};\n\nexports.setDocumentType = function (document, name, publicId, systemId) {\n    var data = doctype.serializeContent(name, publicId, systemId),\n        doctypeNode = null;\n\n    for (var i = 0; i < document.children.length; i++) {\n        if (document.children[i].type === 'directive' && document.children[i].name === '!doctype') {\n            doctypeNode = document.children[i];\n            break;\n        }\n    }\n\n    if (doctypeNode) {\n        doctypeNode.data = data;\n        doctypeNode['x-name'] = name;\n        doctypeNode['x-publicId'] = publicId;\n        doctypeNode['x-systemId'] = systemId;\n    }\n\n    else {\n        appendChild(document, new Node({\n            type: 'directive',\n            name: '!doctype',\n            data: data,\n            'x-name': name,\n            'x-publicId': publicId,\n            'x-systemId': systemId\n        }));\n    }\n\n};\n\nexports.setDocumentMode = function (document, mode) {\n    document['x-mode'] = mode;\n};\n\nexports.getDocumentMode = function (document) {\n    return document['x-mode'];\n};\n\nexports.detachNode = function (node) {\n    if (node.parent) {\n        var idx = node.parent.children.indexOf(node),\n            prev = node.prev,\n            next = node.next;\n\n        node.prev = null;\n        node.next = null;\n\n        if (prev)\n            prev.next = next;\n\n        if (next)\n            next.prev = prev;\n\n        node.parent.children.splice(idx, 1);\n        node.parent = null;\n    }\n};\n\nexports.insertText = function (parentNode, text) {\n    var lastChild = parentNode.children[parentNode.children.length - 1];\n\n    if (lastChild && lastChild.type === 'text')\n        lastChild.data += text;\n    else\n        appendChild(parentNode, createTextNode(text));\n};\n\nexports.insertTextBefore = function (parentNode, text, referenceNode) {\n    var prevNode = parentNode.children[parentNode.children.indexOf(referenceNode) - 1];\n\n    if (prevNode && prevNode.type === 'text')\n        prevNode.data += text;\n    else\n        insertBefore(parentNode, createTextNode(text), referenceNode);\n};\n\nexports.adoptAttributes = function (recipient, attrs) {\n    for (var i = 0; i < attrs.length; i++) {\n        var attrName = attrs[i].name;\n\n        if (typeof recipient.attribs[attrName] === 'undefined') {\n            recipient.attribs[attrName] = attrs[i].value;\n            recipient['x-attribsNamespace'][attrName] = attrs[i].namespace;\n            recipient['x-attribsPrefix'][attrName] = attrs[i].prefix;\n        }\n    }\n};\n\n\n//Tree traversing\nexports.getFirstChild = function (node) {\n    return node.children[0];\n};\n\nexports.getChildNodes = function (node) {\n    return node.children;\n};\n\nexports.getParentNode = function (node) {\n    return node.parent;\n};\n\nexports.getAttrList = function (element) {\n    var attrList = [];\n\n    for (var name in element.attribs) {\n        attrList.push({\n            name: name,\n            value: element.attribs[name],\n            namespace: element['x-attribsNamespace'][name],\n            prefix: element['x-attribsPrefix'][name]\n        });\n    }\n\n    return attrList;\n};\n\n\n//Node data\nexports.getTagName = function (element) {\n    return element.name;\n};\n\nexports.getNamespaceURI = function (element) {\n    return element.namespace;\n};\n\nexports.getTextNodeContent = function (textNode) {\n    return textNode.data;\n};\n\nexports.getCommentNodeContent = function (commentNode) {\n    return commentNode.data;\n};\n\nexports.getDocumentTypeNodeName = function (doctypeNode) {\n    return doctypeNode['x-name'];\n};\n\nexports.getDocumentTypeNodePublicId = function (doctypeNode) {\n    return doctypeNode['x-publicId'];\n};\n\nexports.getDocumentTypeNodeSystemId = function (doctypeNode) {\n    return doctypeNode['x-systemId'];\n};\n\n\n//Node types\nexports.isTextNode = function (node) {\n    return node.type === 'text';\n};\n\nexports.isCommentNode = function (node) {\n    return node.type === 'comment';\n};\n\nexports.isDocumentTypeNode = function (node) {\n    return node.type === 'directive' && node.name === '!doctype';\n};\n\nexports.isElementNode = function (node) {\n    return !!node.attribs;\n};\n\n\n//# sourceURL=webpack:///./node_modules/parse5/lib/tree_adapters/htmlparser2.js?");

/***/ }),

/***/ "./node_modules/parse5/lib/utils/merge_options.js":
/*!********************************************************!*\
  !*** ./node_modules/parse5/lib/utils/merge_options.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = function mergeOptions(defaults, options) {\n    options = options || Object.create(null);\n\n    return [defaults, options].reduce(function (merged, optObj) {\n        Object.keys(optObj).forEach(function (key) {\n            merged[key] = optObj[key];\n        });\n\n        return merged;\n    }, Object.create(null));\n};\n\n\n//# sourceURL=webpack:///./node_modules/parse5/lib/utils/merge_options.js?");

/***/ }),

/***/ "./node_modules/parse5/lib/utils/mixin.js":
/*!************************************************!*\
  !*** ./node_modules/parse5/lib/utils/mixin.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Mixin = module.exports = function (host) {\n    var originalMethods = {},\n        overriddenMethods = this._getOverriddenMethods(this, originalMethods);\n\n    Object.keys(overriddenMethods).forEach(function (key) {\n        if (typeof overriddenMethods[key] === 'function') {\n            originalMethods[key] = host[key];\n            host[key] = overriddenMethods[key];\n        }\n    });\n};\n\nMixin.prototype._getOverriddenMethods = function () {\n    throw new Error('Not implemented');\n};\n\n\n\n//# sourceURL=webpack:///./node_modules/parse5/lib/utils/mixin.js?");

/***/ }),

/***/ "./node_modules/path-browserify/index.js":
/*!***********************************************!*\
  !*** ./node_modules/path-browserify/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///./node_modules/path-browserify/index.js?");

/***/ }),

/***/ "./node_modules/process-nextick-args/index.js":
/*!****************************************************!*\
  !*** ./node_modules/process-nextick-args/index.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process) {\n\nif (!process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = { nextTick: nextTick };\n} else {\n  module.exports = process\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n  var len = arguments.length;\n  var args, i;\n  switch (len) {\n  case 0:\n  case 1:\n    return process.nextTick(fn);\n  case 2:\n    return process.nextTick(function afterTickOne() {\n      fn.call(null, arg1);\n    });\n  case 3:\n    return process.nextTick(function afterTickTwo() {\n      fn.call(null, arg1, arg2);\n    });\n  case 4:\n    return process.nextTick(function afterTickThree() {\n      fn.call(null, arg1, arg2, arg3);\n    });\n  default:\n    args = new Array(len - 1);\n    i = 0;\n    while (i < args.length) {\n      args[i++] = arguments[i];\n    }\n    return process.nextTick(function afterTick() {\n      fn.apply(null, args);\n    });\n  }\n}\n\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///./node_modules/process-nextick-args/index.js?");

/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n//# sourceURL=webpack:///./node_modules/process/browser.js?");

/***/ }),

/***/ "./node_modules/readable-stream/duplex-browser.js":
/*!********************************************************!*\
  !*** ./node_modules/readable-stream/duplex-browser.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./lib/_stream_duplex.js */ \"./node_modules/readable-stream/lib/_stream_duplex.js\");\n\n\n//# sourceURL=webpack:///./node_modules/readable-stream/duplex-browser.js?");

/***/ }),

/***/ "./node_modules/readable-stream/lib/_stream_duplex.js":
/*!************************************************************!*\
  !*** ./node_modules/readable-stream/lib/_stream_duplex.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n\n\n/*<replacement>*/\n\nvar pna = __webpack_require__(/*! process-nextick-args */ \"./node_modules/process-nextick-args/index.js\");\n/*</replacement>*/\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar util = __webpack_require__(/*! core-util-is */ \"./node_modules/core-util-is/lib/util.js\");\nutil.inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n/*</replacement>*/\n\nvar Readable = __webpack_require__(/*! ./_stream_readable */ \"./node_modules/readable-stream/lib/_stream_readable.js\");\nvar Writable = __webpack_require__(/*! ./_stream_writable */ \"./node_modules/readable-stream/lib/_stream_writable.js\");\n\nutil.inherits(Duplex, Readable);\n\n{\n  // avoid scope creep, the keys array can then be collected\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  pna.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n\n  pna.nextTick(cb, err);\n};\n\n//# sourceURL=webpack:///./node_modules/readable-stream/lib/_stream_duplex.js?");

/***/ }),

/***/ "./node_modules/readable-stream/lib/_stream_passthrough.js":
/*!*****************************************************************!*\
  !*** ./node_modules/readable-stream/lib/_stream_passthrough.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n\n\nmodule.exports = PassThrough;\n\nvar Transform = __webpack_require__(/*! ./_stream_transform */ \"./node_modules/readable-stream/lib/_stream_transform.js\");\n\n/*<replacement>*/\nvar util = __webpack_require__(/*! core-util-is */ \"./node_modules/core-util-is/lib/util.js\");\nutil.inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};\n\n//# sourceURL=webpack:///./node_modules/readable-stream/lib/_stream_passthrough.js?");

/***/ }),

/***/ "./node_modules/readable-stream/lib/_stream_readable.js":
/*!**************************************************************!*\
  !*** ./node_modules/readable-stream/lib/_stream_readable.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global, process) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n/*<replacement>*/\n\nvar pna = __webpack_require__(/*! process-nextick-args */ \"./node_modules/process-nextick-args/index.js\");\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = __webpack_require__(/*! isarray */ \"./node_modules/isarray/index.js\");\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = __webpack_require__(/*! events */ \"./node_modules/events/events.js\").EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = __webpack_require__(/*! ./internal/streams/stream */ \"./node_modules/readable-stream/lib/internal/streams/stream-browser.js\");\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = __webpack_require__(/*! core-util-is */ \"./node_modules/core-util-is/lib/util.js\");\nutil.inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = __webpack_require__(/*! util */ 0);\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = __webpack_require__(/*! ./internal/streams/BufferList */ \"./node_modules/readable-stream/lib/internal/streams/BufferList.js\");\nvar destroyImpl = __webpack_require__(/*! ./internal/streams/destroy */ \"./node_modules/readable-stream/lib/internal/streams/destroy.js\");\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ \"./node_modules/readable-stream/lib/_stream_duplex.js\");\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var readableHwm = options.readableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = __webpack_require__(/*! string_decoder/ */ \"./node_modules/string_decoder/lib/string_decoder.js\").StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ \"./node_modules/readable-stream/lib/_stream_duplex.js\");\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = __webpack_require__(/*! string_decoder/ */ \"./node_modules/string_decoder/lib/string_decoder.js\").StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    pna.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, unpipeInfo);\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        pna.nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    pna.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._readableState.highWaterMark;\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    pna.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../../process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///./node_modules/readable-stream/lib/_stream_readable.js?");

/***/ }),

/***/ "./node_modules/readable-stream/lib/_stream_transform.js":
/*!***************************************************************!*\
  !*** ./node_modules/readable-stream/lib/_stream_transform.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n\n\nmodule.exports = Transform;\n\nvar Duplex = __webpack_require__(/*! ./_stream_duplex */ \"./node_modules/readable-stream/lib/_stream_duplex.js\");\n\n/*<replacement>*/\nvar util = __webpack_require__(/*! core-util-is */ \"./node_modules/core-util-is/lib/util.js\");\nutil.inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) {\n    return this.emit('error', new Error('write callback called multiple times'));\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n\n  cb(er);\n\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function') {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  var _this2 = this;\n\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n    _this2.emit('close');\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}\n\n//# sourceURL=webpack:///./node_modules/readable-stream/lib/_stream_transform.js?");

/***/ }),

/***/ "./node_modules/readable-stream/lib/_stream_writable.js":
/*!**************************************************************!*\
  !*** ./node_modules/readable-stream/lib/_stream_writable.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process, setImmediate, global) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n\n\n/*<replacement>*/\n\nvar pna = __webpack_require__(/*! process-nextick-args */ \"./node_modules/process-nextick-args/index.js\");\n/*</replacement>*/\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = __webpack_require__(/*! core-util-is */ \"./node_modules/core-util-is/lib/util.js\");\nutil.inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: __webpack_require__(/*! util-deprecate */ \"./node_modules/util-deprecate/browser.js\")\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = __webpack_require__(/*! ./internal/streams/stream */ \"./node_modules/readable-stream/lib/internal/streams/stream-browser.js\");\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\nvar destroyImpl = __webpack_require__(/*! ./internal/streams/destroy */ \"./node_modules/readable-stream/lib/internal/streams/destroy.js\");\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ \"./node_modules/readable-stream/lib/_stream_duplex.js\");\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var writableHwm = options.writableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ \"./node_modules/readable-stream/lib/_stream_duplex.js\");\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  pna.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    pna.nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    pna.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    pna.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      stream.emit('error', err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      pna.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n  if (state.corkedRequestsFree) {\n    state.corkedRequestsFree.next = corkReq;\n  } else {\n    state.corkedRequestsFree = corkReq;\n  }\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function () {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\n\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../process/browser.js */ \"./node_modules/process/browser.js\"), __webpack_require__(/*! ./../../timers-browserify/main.js */ \"./node_modules/timers-browserify/main.js\").setImmediate, __webpack_require__(/*! ./../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/readable-stream/lib/_stream_writable.js?");

/***/ }),

/***/ "./node_modules/readable-stream/lib/internal/streams/BufferList.js":
/*!*************************************************************************!*\
  !*** ./node_modules/readable-stream/lib/internal/streams/BufferList.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer;\nvar util = __webpack_require__(/*! util */ 1);\n\nfunction copyBuffer(src, target, offset) {\n  src.copy(target, offset);\n}\n\nmodule.exports = function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  BufferList.prototype.push = function push(v) {\n    var entry = { data: v, next: null };\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.unshift = function unshift(v) {\n    var entry = { data: v, next: this.head };\n    if (this.length === 0) this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.shift = function shift() {\n    if (this.length === 0) return;\n    var ret = this.head.data;\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n    --this.length;\n    return ret;\n  };\n\n  BufferList.prototype.clear = function clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  };\n\n  BufferList.prototype.join = function join(s) {\n    if (this.length === 0) return '';\n    var p = this.head;\n    var ret = '' + p.data;\n    while (p = p.next) {\n      ret += s + p.data;\n    }return ret;\n  };\n\n  BufferList.prototype.concat = function concat(n) {\n    if (this.length === 0) return Buffer.alloc(0);\n    if (this.length === 1) return this.head.data;\n    var ret = Buffer.allocUnsafe(n >>> 0);\n    var p = this.head;\n    var i = 0;\n    while (p) {\n      copyBuffer(p.data, ret, i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  };\n\n  return BufferList;\n}();\n\nif (util && util.inspect && util.inspect.custom) {\n  module.exports.prototype[util.inspect.custom] = function () {\n    var obj = util.inspect({ length: this.length });\n    return this.constructor.name + ' ' + obj;\n  };\n}\n\n//# sourceURL=webpack:///./node_modules/readable-stream/lib/internal/streams/BufferList.js?");

/***/ }),

/***/ "./node_modules/readable-stream/lib/internal/streams/destroy.js":
/*!**********************************************************************!*\
  !*** ./node_modules/readable-stream/lib/internal/streams/destroy.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/*<replacement>*/\n\nvar pna = __webpack_require__(/*! process-nextick-args */ \"./node_modules/process-nextick-args/index.js\");\n/*</replacement>*/\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\n      pna.nextTick(emitErrorNT, this, err);\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      pna.nextTick(emitErrorNT, _this, err);\n      if (_this._writableState) {\n        _this._writableState.errorEmitted = true;\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n\n  return this;\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};\n\n//# sourceURL=webpack:///./node_modules/readable-stream/lib/internal/streams/destroy.js?");

/***/ }),

/***/ "./node_modules/readable-stream/lib/internal/streams/stream-browser.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/readable-stream/lib/internal/streams/stream-browser.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! events */ \"./node_modules/events/events.js\").EventEmitter;\n\n\n//# sourceURL=webpack:///./node_modules/readable-stream/lib/internal/streams/stream-browser.js?");

/***/ }),

/***/ "./node_modules/readable-stream/passthrough.js":
/*!*****************************************************!*\
  !*** ./node_modules/readable-stream/passthrough.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./readable */ \"./node_modules/readable-stream/readable-browser.js\").PassThrough\n\n\n//# sourceURL=webpack:///./node_modules/readable-stream/passthrough.js?");

/***/ }),

/***/ "./node_modules/readable-stream/readable-browser.js":
/*!**********************************************************!*\
  !*** ./node_modules/readable-stream/readable-browser.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(/*! ./lib/_stream_readable.js */ \"./node_modules/readable-stream/lib/_stream_readable.js\");\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = __webpack_require__(/*! ./lib/_stream_writable.js */ \"./node_modules/readable-stream/lib/_stream_writable.js\");\nexports.Duplex = __webpack_require__(/*! ./lib/_stream_duplex.js */ \"./node_modules/readable-stream/lib/_stream_duplex.js\");\nexports.Transform = __webpack_require__(/*! ./lib/_stream_transform.js */ \"./node_modules/readable-stream/lib/_stream_transform.js\");\nexports.PassThrough = __webpack_require__(/*! ./lib/_stream_passthrough.js */ \"./node_modules/readable-stream/lib/_stream_passthrough.js\");\n\n\n//# sourceURL=webpack:///./node_modules/readable-stream/readable-browser.js?");

/***/ }),

/***/ "./node_modules/readable-stream/transform.js":
/*!***************************************************!*\
  !*** ./node_modules/readable-stream/transform.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./readable */ \"./node_modules/readable-stream/readable-browser.js\").Transform\n\n\n//# sourceURL=webpack:///./node_modules/readable-stream/transform.js?");

/***/ }),

/***/ "./node_modules/readable-stream/writable-browser.js":
/*!**********************************************************!*\
  !*** ./node_modules/readable-stream/writable-browser.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./lib/_stream_writable.js */ \"./node_modules/readable-stream/lib/_stream_writable.js\");\n\n\n//# sourceURL=webpack:///./node_modules/readable-stream/writable-browser.js?");

/***/ }),

/***/ "./node_modules/reflect-metadata/Reflect.js":
/*!**************************************************!*\
  !*** ./node_modules/reflect-metadata/Reflect.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(process, global) {/*! *****************************************************************************\r\nCopyright (C) Microsoft. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\nvar Reflect;\r\n(function (Reflect) {\r\n    // Metadata Proposal\r\n    // https://rbuckton.github.io/reflect-metadata/\r\n    (function (factory) {\r\n        var root = typeof global === \"object\" ? global :\r\n            typeof self === \"object\" ? self :\r\n                typeof this === \"object\" ? this :\r\n                    Function(\"return this;\")();\r\n        var exporter = makeExporter(Reflect);\r\n        if (typeof root.Reflect === \"undefined\") {\r\n            root.Reflect = Reflect;\r\n        }\r\n        else {\r\n            exporter = makeExporter(root.Reflect, exporter);\r\n        }\r\n        factory(exporter);\r\n        function makeExporter(target, previous) {\r\n            return function (key, value) {\r\n                if (typeof target[key] !== \"function\") {\r\n                    Object.defineProperty(target, key, { configurable: true, writable: true, value: value });\r\n                }\r\n                if (previous)\r\n                    previous(key, value);\r\n            };\r\n        }\r\n    })(function (exporter) {\r\n        var hasOwn = Object.prototype.hasOwnProperty;\r\n        // feature test for Symbol support\r\n        var supportsSymbol = typeof Symbol === \"function\";\r\n        var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\r\n        var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\r\n        var supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\r\n        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support\r\n        var downLevel = !supportsCreate && !supportsProto;\r\n        var HashMap = {\r\n            // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\r\n            create: supportsCreate\r\n                ? function () { return MakeDictionary(Object.create(null)); }\r\n                : supportsProto\r\n                    ? function () { return MakeDictionary({ __proto__: null }); }\r\n                    : function () { return MakeDictionary({}); },\r\n            has: downLevel\r\n                ? function (map, key) { return hasOwn.call(map, key); }\r\n                : function (map, key) { return key in map; },\r\n            get: downLevel\r\n                ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }\r\n                : function (map, key) { return map[key]; },\r\n        };\r\n        // Load global or shim versions of Map, Set, and WeakMap\r\n        var functionPrototype = Object.getPrototypeOf(Function);\r\n        var usePolyfill = typeof process === \"object\" && process.env && process.env[\"REFLECT_METADATA_USE_MAP_POLYFILL\"] === \"true\";\r\n        var _Map = !usePolyfill && typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\r\n        var _Set = !usePolyfill && typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\r\n        var _WeakMap = !usePolyfill && typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\r\n        // [[Metadata]] internal slot\r\n        // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\r\n        var Metadata = new _WeakMap();\r\n        /**\r\n         * Applies a set of decorators to a property of a target object.\r\n         * @param decorators An array of decorators.\r\n         * @param target The target object.\r\n         * @param propertyKey (Optional) The property key to decorate.\r\n         * @param attributes (Optional) The property descriptor for the target key.\r\n         * @remarks Decorators are applied in reverse order.\r\n         * @example\r\n         *\r\n         *     class Example {\r\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n         *         // static staticProperty;\r\n         *         // property;\r\n         *\r\n         *         constructor(p) { }\r\n         *         static staticMethod(p) { }\r\n         *         method(p) { }\r\n         *     }\r\n         *\r\n         *     // constructor\r\n         *     Example = Reflect.decorate(decoratorsArray, Example);\r\n         *\r\n         *     // property (on constructor)\r\n         *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\r\n         *\r\n         *     // property (on prototype)\r\n         *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\r\n         *\r\n         *     // method (on constructor)\r\n         *     Object.defineProperty(Example, \"staticMethod\",\r\n         *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\r\n         *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\r\n         *\r\n         *     // method (on prototype)\r\n         *     Object.defineProperty(Example.prototype, \"method\",\r\n         *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\r\n         *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\r\n         *\r\n         */\r\n        function decorate(decorators, target, propertyKey, attributes) {\r\n            if (!IsUndefined(propertyKey)) {\r\n                if (!IsArray(decorators))\r\n                    throw new TypeError();\r\n                if (!IsObject(target))\r\n                    throw new TypeError();\r\n                if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))\r\n                    throw new TypeError();\r\n                if (IsNull(attributes))\r\n                    attributes = undefined;\r\n                propertyKey = ToPropertyKey(propertyKey);\r\n                return DecorateProperty(decorators, target, propertyKey, attributes);\r\n            }\r\n            else {\r\n                if (!IsArray(decorators))\r\n                    throw new TypeError();\r\n                if (!IsConstructor(target))\r\n                    throw new TypeError();\r\n                return DecorateConstructor(decorators, target);\r\n            }\r\n        }\r\n        exporter(\"decorate\", decorate);\r\n        // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\r\n        // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\r\n        /**\r\n         * A default metadata decorator factory that can be used on a class, class member, or parameter.\r\n         * @param metadataKey The key for the metadata entry.\r\n         * @param metadataValue The value for the metadata entry.\r\n         * @returns A decorator function.\r\n         * @remarks\r\n         * If `metadataKey` is already defined for the target and target key, the\r\n         * metadataValue for that key will be overwritten.\r\n         * @example\r\n         *\r\n         *     // constructor\r\n         *     @Reflect.metadata(key, value)\r\n         *     class Example {\r\n         *     }\r\n         *\r\n         *     // property (on constructor, TypeScript only)\r\n         *     class Example {\r\n         *         @Reflect.metadata(key, value)\r\n         *         static staticProperty;\r\n         *     }\r\n         *\r\n         *     // property (on prototype, TypeScript only)\r\n         *     class Example {\r\n         *         @Reflect.metadata(key, value)\r\n         *         property;\r\n         *     }\r\n         *\r\n         *     // method (on constructor)\r\n         *     class Example {\r\n         *         @Reflect.metadata(key, value)\r\n         *         static staticMethod() { }\r\n         *     }\r\n         *\r\n         *     // method (on prototype)\r\n         *     class Example {\r\n         *         @Reflect.metadata(key, value)\r\n         *         method() { }\r\n         *     }\r\n         *\r\n         */\r\n        function metadata(metadataKey, metadataValue) {\r\n            function decorator(target, propertyKey) {\r\n                if (!IsObject(target))\r\n                    throw new TypeError();\r\n                if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))\r\n                    throw new TypeError();\r\n                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\r\n            }\r\n            return decorator;\r\n        }\r\n        exporter(\"metadata\", metadata);\r\n        /**\r\n         * Define a unique metadata entry on the target.\r\n         * @param metadataKey A key used to store and retrieve metadata.\r\n         * @param metadataValue A value that contains attached metadata.\r\n         * @param target The target object on which to define metadata.\r\n         * @param propertyKey (Optional) The property key for the target.\r\n         * @example\r\n         *\r\n         *     class Example {\r\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n         *         // static staticProperty;\r\n         *         // property;\r\n         *\r\n         *         constructor(p) { }\r\n         *         static staticMethod(p) { }\r\n         *         method(p) { }\r\n         *     }\r\n         *\r\n         *     // constructor\r\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\r\n         *\r\n         *     // property (on constructor)\r\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\r\n         *\r\n         *     // property (on prototype)\r\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\r\n         *\r\n         *     // method (on constructor)\r\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\r\n         *\r\n         *     // method (on prototype)\r\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\r\n         *\r\n         *     // decorator factory as metadata-producing annotation.\r\n         *     function MyAnnotation(options): Decorator {\r\n         *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\r\n         *     }\r\n         *\r\n         */\r\n        function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\r\n            if (!IsObject(target))\r\n                throw new TypeError();\r\n            if (!IsUndefined(propertyKey))\r\n                propertyKey = ToPropertyKey(propertyKey);\r\n            return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\r\n        }\r\n        exporter(\"defineMetadata\", defineMetadata);\r\n        /**\r\n         * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\r\n         * @param metadataKey A key used to store and retrieve metadata.\r\n         * @param target The target object on which the metadata is defined.\r\n         * @param propertyKey (Optional) The property key for the target.\r\n         * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\r\n         * @example\r\n         *\r\n         *     class Example {\r\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n         *         // static staticProperty;\r\n         *         // property;\r\n         *\r\n         *         constructor(p) { }\r\n         *         static staticMethod(p) { }\r\n         *         method(p) { }\r\n         *     }\r\n         *\r\n         *     // constructor\r\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\r\n         *\r\n         *     // property (on constructor)\r\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n         *\r\n         *     // property (on prototype)\r\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n         *\r\n         *     // method (on constructor)\r\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n         *\r\n         *     // method (on prototype)\r\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n         *\r\n         */\r\n        function hasMetadata(metadataKey, target, propertyKey) {\r\n            if (!IsObject(target))\r\n                throw new TypeError();\r\n            if (!IsUndefined(propertyKey))\r\n                propertyKey = ToPropertyKey(propertyKey);\r\n            return OrdinaryHasMetadata(metadataKey, target, propertyKey);\r\n        }\r\n        exporter(\"hasMetadata\", hasMetadata);\r\n        /**\r\n         * Gets a value indicating whether the target object has the provided metadata key defined.\r\n         * @param metadataKey A key used to store and retrieve metadata.\r\n         * @param target The target object on which the metadata is defined.\r\n         * @param propertyKey (Optional) The property key for the target.\r\n         * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\r\n         * @example\r\n         *\r\n         *     class Example {\r\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n         *         // static staticProperty;\r\n         *         // property;\r\n         *\r\n         *         constructor(p) { }\r\n         *         static staticMethod(p) { }\r\n         *         method(p) { }\r\n         *     }\r\n         *\r\n         *     // constructor\r\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\r\n         *\r\n         *     // property (on constructor)\r\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n         *\r\n         *     // property (on prototype)\r\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n         *\r\n         *     // method (on constructor)\r\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n         *\r\n         *     // method (on prototype)\r\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n         *\r\n         */\r\n        function hasOwnMetadata(metadataKey, target, propertyKey) {\r\n            if (!IsObject(target))\r\n                throw new TypeError();\r\n            if (!IsUndefined(propertyKey))\r\n                propertyKey = ToPropertyKey(propertyKey);\r\n            return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\r\n        }\r\n        exporter(\"hasOwnMetadata\", hasOwnMetadata);\r\n        /**\r\n         * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\r\n         * @param metadataKey A key used to store and retrieve metadata.\r\n         * @param target The target object on which the metadata is defined.\r\n         * @param propertyKey (Optional) The property key for the target.\r\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\r\n         * @example\r\n         *\r\n         *     class Example {\r\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n         *         // static staticProperty;\r\n         *         // property;\r\n         *\r\n         *         constructor(p) { }\r\n         *         static staticMethod(p) { }\r\n         *         method(p) { }\r\n         *     }\r\n         *\r\n         *     // constructor\r\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example);\r\n         *\r\n         *     // property (on constructor)\r\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n         *\r\n         *     // property (on prototype)\r\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n         *\r\n         *     // method (on constructor)\r\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n         *\r\n         *     // method (on prototype)\r\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n         *\r\n         */\r\n        function getMetadata(metadataKey, target, propertyKey) {\r\n            if (!IsObject(target))\r\n                throw new TypeError();\r\n            if (!IsUndefined(propertyKey))\r\n                propertyKey = ToPropertyKey(propertyKey);\r\n            return OrdinaryGetMetadata(metadataKey, target, propertyKey);\r\n        }\r\n        exporter(\"getMetadata\", getMetadata);\r\n        /**\r\n         * Gets the metadata value for the provided metadata key on the target object.\r\n         * @param metadataKey A key used to store and retrieve metadata.\r\n         * @param target The target object on which the metadata is defined.\r\n         * @param propertyKey (Optional) The property key for the target.\r\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\r\n         * @example\r\n         *\r\n         *     class Example {\r\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n         *         // static staticProperty;\r\n         *         // property;\r\n         *\r\n         *         constructor(p) { }\r\n         *         static staticMethod(p) { }\r\n         *         method(p) { }\r\n         *     }\r\n         *\r\n         *     // constructor\r\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\r\n         *\r\n         *     // property (on constructor)\r\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n         *\r\n         *     // property (on prototype)\r\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n         *\r\n         *     // method (on constructor)\r\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n         *\r\n         *     // method (on prototype)\r\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n         *\r\n         */\r\n        function getOwnMetadata(metadataKey, target, propertyKey) {\r\n            if (!IsObject(target))\r\n                throw new TypeError();\r\n            if (!IsUndefined(propertyKey))\r\n                propertyKey = ToPropertyKey(propertyKey);\r\n            return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\r\n        }\r\n        exporter(\"getOwnMetadata\", getOwnMetadata);\r\n        /**\r\n         * Gets the metadata keys defined on the target object or its prototype chain.\r\n         * @param target The target object on which the metadata is defined.\r\n         * @param propertyKey (Optional) The property key for the target.\r\n         * @returns An array of unique metadata keys.\r\n         * @example\r\n         *\r\n         *     class Example {\r\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n         *         // static staticProperty;\r\n         *         // property;\r\n         *\r\n         *         constructor(p) { }\r\n         *         static staticMethod(p) { }\r\n         *         method(p) { }\r\n         *     }\r\n         *\r\n         *     // constructor\r\n         *     result = Reflect.getMetadataKeys(Example);\r\n         *\r\n         *     // property (on constructor)\r\n         *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\r\n         *\r\n         *     // property (on prototype)\r\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\r\n         *\r\n         *     // method (on constructor)\r\n         *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\r\n         *\r\n         *     // method (on prototype)\r\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\r\n         *\r\n         */\r\n        function getMetadataKeys(target, propertyKey) {\r\n            if (!IsObject(target))\r\n                throw new TypeError();\r\n            if (!IsUndefined(propertyKey))\r\n                propertyKey = ToPropertyKey(propertyKey);\r\n            return OrdinaryMetadataKeys(target, propertyKey);\r\n        }\r\n        exporter(\"getMetadataKeys\", getMetadataKeys);\r\n        /**\r\n         * Gets the unique metadata keys defined on the target object.\r\n         * @param target The target object on which the metadata is defined.\r\n         * @param propertyKey (Optional) The property key for the target.\r\n         * @returns An array of unique metadata keys.\r\n         * @example\r\n         *\r\n         *     class Example {\r\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n         *         // static staticProperty;\r\n         *         // property;\r\n         *\r\n         *         constructor(p) { }\r\n         *         static staticMethod(p) { }\r\n         *         method(p) { }\r\n         *     }\r\n         *\r\n         *     // constructor\r\n         *     result = Reflect.getOwnMetadataKeys(Example);\r\n         *\r\n         *     // property (on constructor)\r\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\r\n         *\r\n         *     // property (on prototype)\r\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\r\n         *\r\n         *     // method (on constructor)\r\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\r\n         *\r\n         *     // method (on prototype)\r\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\r\n         *\r\n         */\r\n        function getOwnMetadataKeys(target, propertyKey) {\r\n            if (!IsObject(target))\r\n                throw new TypeError();\r\n            if (!IsUndefined(propertyKey))\r\n                propertyKey = ToPropertyKey(propertyKey);\r\n            return OrdinaryOwnMetadataKeys(target, propertyKey);\r\n        }\r\n        exporter(\"getOwnMetadataKeys\", getOwnMetadataKeys);\r\n        /**\r\n         * Deletes the metadata entry from the target object with the provided key.\r\n         * @param metadataKey A key used to store and retrieve metadata.\r\n         * @param target The target object on which the metadata is defined.\r\n         * @param propertyKey (Optional) The property key for the target.\r\n         * @returns `true` if the metadata entry was found and deleted; otherwise, false.\r\n         * @example\r\n         *\r\n         *     class Example {\r\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n         *         // static staticProperty;\r\n         *         // property;\r\n         *\r\n         *         constructor(p) { }\r\n         *         static staticMethod(p) { }\r\n         *         method(p) { }\r\n         *     }\r\n         *\r\n         *     // constructor\r\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\r\n         *\r\n         *     // property (on constructor)\r\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n         *\r\n         *     // property (on prototype)\r\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n         *\r\n         *     // method (on constructor)\r\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n         *\r\n         *     // method (on prototype)\r\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n         *\r\n         */\r\n        function deleteMetadata(metadataKey, target, propertyKey) {\r\n            if (!IsObject(target))\r\n                throw new TypeError();\r\n            if (!IsUndefined(propertyKey))\r\n                propertyKey = ToPropertyKey(propertyKey);\r\n            var metadataMap = GetOrCreateMetadataMap(target, propertyKey, /*Create*/ false);\r\n            if (IsUndefined(metadataMap))\r\n                return false;\r\n            if (!metadataMap.delete(metadataKey))\r\n                return false;\r\n            if (metadataMap.size > 0)\r\n                return true;\r\n            var targetMetadata = Metadata.get(target);\r\n            targetMetadata.delete(propertyKey);\r\n            if (targetMetadata.size > 0)\r\n                return true;\r\n            Metadata.delete(target);\r\n            return true;\r\n        }\r\n        exporter(\"deleteMetadata\", deleteMetadata);\r\n        function DecorateConstructor(decorators, target) {\r\n            for (var i = decorators.length - 1; i >= 0; --i) {\r\n                var decorator = decorators[i];\r\n                var decorated = decorator(target);\r\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\r\n                    if (!IsConstructor(decorated))\r\n                        throw new TypeError();\r\n                    target = decorated;\r\n                }\r\n            }\r\n            return target;\r\n        }\r\n        function DecorateProperty(decorators, target, propertyKey, descriptor) {\r\n            for (var i = decorators.length - 1; i >= 0; --i) {\r\n                var decorator = decorators[i];\r\n                var decorated = decorator(target, propertyKey, descriptor);\r\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\r\n                    if (!IsObject(decorated))\r\n                        throw new TypeError();\r\n                    descriptor = decorated;\r\n                }\r\n            }\r\n            return descriptor;\r\n        }\r\n        function GetOrCreateMetadataMap(O, P, Create) {\r\n            var targetMetadata = Metadata.get(O);\r\n            if (IsUndefined(targetMetadata)) {\r\n                if (!Create)\r\n                    return undefined;\r\n                targetMetadata = new _Map();\r\n                Metadata.set(O, targetMetadata);\r\n            }\r\n            var metadataMap = targetMetadata.get(P);\r\n            if (IsUndefined(metadataMap)) {\r\n                if (!Create)\r\n                    return undefined;\r\n                metadataMap = new _Map();\r\n                targetMetadata.set(P, metadataMap);\r\n            }\r\n            return metadataMap;\r\n        }\r\n        // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\r\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\r\n        function OrdinaryHasMetadata(MetadataKey, O, P) {\r\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\r\n            if (hasOwn)\r\n                return true;\r\n            var parent = OrdinaryGetPrototypeOf(O);\r\n            if (!IsNull(parent))\r\n                return OrdinaryHasMetadata(MetadataKey, parent, P);\r\n            return false;\r\n        }\r\n        // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\r\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\r\n        function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\r\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\r\n            if (IsUndefined(metadataMap))\r\n                return false;\r\n            return ToBoolean(metadataMap.has(MetadataKey));\r\n        }\r\n        // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\r\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\r\n        function OrdinaryGetMetadata(MetadataKey, O, P) {\r\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\r\n            if (hasOwn)\r\n                return OrdinaryGetOwnMetadata(MetadataKey, O, P);\r\n            var parent = OrdinaryGetPrototypeOf(O);\r\n            if (!IsNull(parent))\r\n                return OrdinaryGetMetadata(MetadataKey, parent, P);\r\n            return undefined;\r\n        }\r\n        // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\r\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\r\n        function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\r\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\r\n            if (IsUndefined(metadataMap))\r\n                return undefined;\r\n            return metadataMap.get(MetadataKey);\r\n        }\r\n        // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\r\n        // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\r\n        function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\r\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);\r\n            metadataMap.set(MetadataKey, MetadataValue);\r\n        }\r\n        // 3.1.6.1 OrdinaryMetadataKeys(O, P)\r\n        // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\r\n        function OrdinaryMetadataKeys(O, P) {\r\n            var ownKeys = OrdinaryOwnMetadataKeys(O, P);\r\n            var parent = OrdinaryGetPrototypeOf(O);\r\n            if (parent === null)\r\n                return ownKeys;\r\n            var parentKeys = OrdinaryMetadataKeys(parent, P);\r\n            if (parentKeys.length <= 0)\r\n                return ownKeys;\r\n            if (ownKeys.length <= 0)\r\n                return parentKeys;\r\n            var set = new _Set();\r\n            var keys = [];\r\n            for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\r\n                var key = ownKeys_1[_i];\r\n                var hasKey = set.has(key);\r\n                if (!hasKey) {\r\n                    set.add(key);\r\n                    keys.push(key);\r\n                }\r\n            }\r\n            for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\r\n                var key = parentKeys_1[_a];\r\n                var hasKey = set.has(key);\r\n                if (!hasKey) {\r\n                    set.add(key);\r\n                    keys.push(key);\r\n                }\r\n            }\r\n            return keys;\r\n        }\r\n        // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\r\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\r\n        function OrdinaryOwnMetadataKeys(O, P) {\r\n            var keys = [];\r\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\r\n            if (IsUndefined(metadataMap))\r\n                return keys;\r\n            var keysObj = metadataMap.keys();\r\n            var iterator = GetIterator(keysObj);\r\n            var k = 0;\r\n            while (true) {\r\n                var next = IteratorStep(iterator);\r\n                if (!next) {\r\n                    keys.length = k;\r\n                    return keys;\r\n                }\r\n                var nextValue = IteratorValue(next);\r\n                try {\r\n                    keys[k] = nextValue;\r\n                }\r\n                catch (e) {\r\n                    try {\r\n                        IteratorClose(iterator);\r\n                    }\r\n                    finally {\r\n                        throw e;\r\n                    }\r\n                }\r\n                k++;\r\n            }\r\n        }\r\n        // 6 ECMAScript Data Typ0es and Values\r\n        // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\r\n        function Type(x) {\r\n            if (x === null)\r\n                return 1 /* Null */;\r\n            switch (typeof x) {\r\n                case \"undefined\": return 0 /* Undefined */;\r\n                case \"boolean\": return 2 /* Boolean */;\r\n                case \"string\": return 3 /* String */;\r\n                case \"symbol\": return 4 /* Symbol */;\r\n                case \"number\": return 5 /* Number */;\r\n                case \"object\": return x === null ? 1 /* Null */ : 6 /* Object */;\r\n                default: return 6 /* Object */;\r\n            }\r\n        }\r\n        // 6.1.1 The Undefined Type\r\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\r\n        function IsUndefined(x) {\r\n            return x === undefined;\r\n        }\r\n        // 6.1.2 The Null Type\r\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\r\n        function IsNull(x) {\r\n            return x === null;\r\n        }\r\n        // 6.1.5 The Symbol Type\r\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\r\n        function IsSymbol(x) {\r\n            return typeof x === \"symbol\";\r\n        }\r\n        // 6.1.7 The Object Type\r\n        // https://tc39.github.io/ecma262/#sec-object-type\r\n        function IsObject(x) {\r\n            return typeof x === \"object\" ? x !== null : typeof x === \"function\";\r\n        }\r\n        // 7.1 Type Conversion\r\n        // https://tc39.github.io/ecma262/#sec-type-conversion\r\n        // 7.1.1 ToPrimitive(input [, PreferredType])\r\n        // https://tc39.github.io/ecma262/#sec-toprimitive\r\n        function ToPrimitive(input, PreferredType) {\r\n            switch (Type(input)) {\r\n                case 0 /* Undefined */: return input;\r\n                case 1 /* Null */: return input;\r\n                case 2 /* Boolean */: return input;\r\n                case 3 /* String */: return input;\r\n                case 4 /* Symbol */: return input;\r\n                case 5 /* Number */: return input;\r\n            }\r\n            var hint = PreferredType === 3 /* String */ ? \"string\" : PreferredType === 5 /* Number */ ? \"number\" : \"default\";\r\n            var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\r\n            if (exoticToPrim !== undefined) {\r\n                var result = exoticToPrim.call(input, hint);\r\n                if (IsObject(result))\r\n                    throw new TypeError();\r\n                return result;\r\n            }\r\n            return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\r\n        }\r\n        // 7.1.1.1 OrdinaryToPrimitive(O, hint)\r\n        // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\r\n        function OrdinaryToPrimitive(O, hint) {\r\n            if (hint === \"string\") {\r\n                var toString_1 = O.toString;\r\n                if (IsCallable(toString_1)) {\r\n                    var result = toString_1.call(O);\r\n                    if (!IsObject(result))\r\n                        return result;\r\n                }\r\n                var valueOf = O.valueOf;\r\n                if (IsCallable(valueOf)) {\r\n                    var result = valueOf.call(O);\r\n                    if (!IsObject(result))\r\n                        return result;\r\n                }\r\n            }\r\n            else {\r\n                var valueOf = O.valueOf;\r\n                if (IsCallable(valueOf)) {\r\n                    var result = valueOf.call(O);\r\n                    if (!IsObject(result))\r\n                        return result;\r\n                }\r\n                var toString_2 = O.toString;\r\n                if (IsCallable(toString_2)) {\r\n                    var result = toString_2.call(O);\r\n                    if (!IsObject(result))\r\n                        return result;\r\n                }\r\n            }\r\n            throw new TypeError();\r\n        }\r\n        // 7.1.2 ToBoolean(argument)\r\n        // https://tc39.github.io/ecma262/2016/#sec-toboolean\r\n        function ToBoolean(argument) {\r\n            return !!argument;\r\n        }\r\n        // 7.1.12 ToString(argument)\r\n        // https://tc39.github.io/ecma262/#sec-tostring\r\n        function ToString(argument) {\r\n            return \"\" + argument;\r\n        }\r\n        // 7.1.14 ToPropertyKey(argument)\r\n        // https://tc39.github.io/ecma262/#sec-topropertykey\r\n        function ToPropertyKey(argument) {\r\n            var key = ToPrimitive(argument, 3 /* String */);\r\n            if (IsSymbol(key))\r\n                return key;\r\n            return ToString(key);\r\n        }\r\n        // 7.2 Testing and Comparison Operations\r\n        // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\r\n        // 7.2.2 IsArray(argument)\r\n        // https://tc39.github.io/ecma262/#sec-isarray\r\n        function IsArray(argument) {\r\n            return Array.isArray\r\n                ? Array.isArray(argument)\r\n                : argument instanceof Object\r\n                    ? argument instanceof Array\r\n                    : Object.prototype.toString.call(argument) === \"[object Array]\";\r\n        }\r\n        // 7.2.3 IsCallable(argument)\r\n        // https://tc39.github.io/ecma262/#sec-iscallable\r\n        function IsCallable(argument) {\r\n            // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\r\n            return typeof argument === \"function\";\r\n        }\r\n        // 7.2.4 IsConstructor(argument)\r\n        // https://tc39.github.io/ecma262/#sec-isconstructor\r\n        function IsConstructor(argument) {\r\n            // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\r\n            return typeof argument === \"function\";\r\n        }\r\n        // 7.2.7 IsPropertyKey(argument)\r\n        // https://tc39.github.io/ecma262/#sec-ispropertykey\r\n        function IsPropertyKey(argument) {\r\n            switch (Type(argument)) {\r\n                case 3 /* String */: return true;\r\n                case 4 /* Symbol */: return true;\r\n                default: return false;\r\n            }\r\n        }\r\n        // 7.3 Operations on Objects\r\n        // https://tc39.github.io/ecma262/#sec-operations-on-objects\r\n        // 7.3.9 GetMethod(V, P)\r\n        // https://tc39.github.io/ecma262/#sec-getmethod\r\n        function GetMethod(V, P) {\r\n            var func = V[P];\r\n            if (func === undefined || func === null)\r\n                return undefined;\r\n            if (!IsCallable(func))\r\n                throw new TypeError();\r\n            return func;\r\n        }\r\n        // 7.4 Operations on Iterator Objects\r\n        // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\r\n        function GetIterator(obj) {\r\n            var method = GetMethod(obj, iteratorSymbol);\r\n            if (!IsCallable(method))\r\n                throw new TypeError(); // from Call\r\n            var iterator = method.call(obj);\r\n            if (!IsObject(iterator))\r\n                throw new TypeError();\r\n            return iterator;\r\n        }\r\n        // 7.4.4 IteratorValue(iterResult)\r\n        // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\r\n        function IteratorValue(iterResult) {\r\n            return iterResult.value;\r\n        }\r\n        // 7.4.5 IteratorStep(iterator)\r\n        // https://tc39.github.io/ecma262/#sec-iteratorstep\r\n        function IteratorStep(iterator) {\r\n            var result = iterator.next();\r\n            return result.done ? false : result;\r\n        }\r\n        // 7.4.6 IteratorClose(iterator, completion)\r\n        // https://tc39.github.io/ecma262/#sec-iteratorclose\r\n        function IteratorClose(iterator) {\r\n            var f = iterator[\"return\"];\r\n            if (f)\r\n                f.call(iterator);\r\n        }\r\n        // 9.1 Ordinary Object Internal Methods and Internal Slots\r\n        // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\r\n        // 9.1.1.1 OrdinaryGetPrototypeOf(O)\r\n        // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\r\n        function OrdinaryGetPrototypeOf(O) {\r\n            var proto = Object.getPrototypeOf(O);\r\n            if (typeof O !== \"function\" || O === functionPrototype)\r\n                return proto;\r\n            // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\r\n            // Try to determine the superclass constructor. Compatible implementations\r\n            // must either set __proto__ on a subclass constructor to the superclass constructor,\r\n            // or ensure each class has a valid `constructor` property on its prototype that\r\n            // points back to the constructor.\r\n            // If this is not the same as Function.[[Prototype]], then this is definately inherited.\r\n            // This is the case when in ES6 or when using __proto__ in a compatible browser.\r\n            if (proto !== functionPrototype)\r\n                return proto;\r\n            // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\r\n            var prototype = O.prototype;\r\n            var prototypeProto = prototype && Object.getPrototypeOf(prototype);\r\n            if (prototypeProto == null || prototypeProto === Object.prototype)\r\n                return proto;\r\n            // If the constructor was not a function, then we cannot determine the heritage.\r\n            var constructor = prototypeProto.constructor;\r\n            if (typeof constructor !== \"function\")\r\n                return proto;\r\n            // If we have some kind of self-reference, then we cannot determine the heritage.\r\n            if (constructor === O)\r\n                return proto;\r\n            // we have a pretty good guess at the heritage.\r\n            return constructor;\r\n        }\r\n        // naive Map shim\r\n        function CreateMapPolyfill() {\r\n            var cacheSentinel = {};\r\n            var arraySentinel = [];\r\n            var MapIterator = (function () {\r\n                function MapIterator(keys, values, selector) {\r\n                    this._index = 0;\r\n                    this._keys = keys;\r\n                    this._values = values;\r\n                    this._selector = selector;\r\n                }\r\n                MapIterator.prototype[\"@@iterator\"] = function () { return this; };\r\n                MapIterator.prototype[iteratorSymbol] = function () { return this; };\r\n                MapIterator.prototype.next = function () {\r\n                    var index = this._index;\r\n                    if (index >= 0 && index < this._keys.length) {\r\n                        var result = this._selector(this._keys[index], this._values[index]);\r\n                        if (index + 1 >= this._keys.length) {\r\n                            this._index = -1;\r\n                            this._keys = arraySentinel;\r\n                            this._values = arraySentinel;\r\n                        }\r\n                        else {\r\n                            this._index++;\r\n                        }\r\n                        return { value: result, done: false };\r\n                    }\r\n                    return { value: undefined, done: true };\r\n                };\r\n                MapIterator.prototype.throw = function (error) {\r\n                    if (this._index >= 0) {\r\n                        this._index = -1;\r\n                        this._keys = arraySentinel;\r\n                        this._values = arraySentinel;\r\n                    }\r\n                    throw error;\r\n                };\r\n                MapIterator.prototype.return = function (value) {\r\n                    if (this._index >= 0) {\r\n                        this._index = -1;\r\n                        this._keys = arraySentinel;\r\n                        this._values = arraySentinel;\r\n                    }\r\n                    return { value: value, done: true };\r\n                };\r\n                return MapIterator;\r\n            }());\r\n            return (function () {\r\n                function Map() {\r\n                    this._keys = [];\r\n                    this._values = [];\r\n                    this._cacheKey = cacheSentinel;\r\n                    this._cacheIndex = -2;\r\n                }\r\n                Object.defineProperty(Map.prototype, \"size\", {\r\n                    get: function () { return this._keys.length; },\r\n                    enumerable: true,\r\n                    configurable: true\r\n                });\r\n                Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };\r\n                Map.prototype.get = function (key) {\r\n                    var index = this._find(key, /*insert*/ false);\r\n                    return index >= 0 ? this._values[index] : undefined;\r\n                };\r\n                Map.prototype.set = function (key, value) {\r\n                    var index = this._find(key, /*insert*/ true);\r\n                    this._values[index] = value;\r\n                    return this;\r\n                };\r\n                Map.prototype.delete = function (key) {\r\n                    var index = this._find(key, /*insert*/ false);\r\n                    if (index >= 0) {\r\n                        var size = this._keys.length;\r\n                        for (var i = index + 1; i < size; i++) {\r\n                            this._keys[i - 1] = this._keys[i];\r\n                            this._values[i - 1] = this._values[i];\r\n                        }\r\n                        this._keys.length--;\r\n                        this._values.length--;\r\n                        if (key === this._cacheKey) {\r\n                            this._cacheKey = cacheSentinel;\r\n                            this._cacheIndex = -2;\r\n                        }\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                };\r\n                Map.prototype.clear = function () {\r\n                    this._keys.length = 0;\r\n                    this._values.length = 0;\r\n                    this._cacheKey = cacheSentinel;\r\n                    this._cacheIndex = -2;\r\n                };\r\n                Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };\r\n                Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };\r\n                Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };\r\n                Map.prototype[\"@@iterator\"] = function () { return this.entries(); };\r\n                Map.prototype[iteratorSymbol] = function () { return this.entries(); };\r\n                Map.prototype._find = function (key, insert) {\r\n                    if (this._cacheKey !== key) {\r\n                        this._cacheIndex = this._keys.indexOf(this._cacheKey = key);\r\n                    }\r\n                    if (this._cacheIndex < 0 && insert) {\r\n                        this._cacheIndex = this._keys.length;\r\n                        this._keys.push(key);\r\n                        this._values.push(undefined);\r\n                    }\r\n                    return this._cacheIndex;\r\n                };\r\n                return Map;\r\n            }());\r\n            function getKey(key, _) {\r\n                return key;\r\n            }\r\n            function getValue(_, value) {\r\n                return value;\r\n            }\r\n            function getEntry(key, value) {\r\n                return [key, value];\r\n            }\r\n        }\r\n        // naive Set shim\r\n        function CreateSetPolyfill() {\r\n            return (function () {\r\n                function Set() {\r\n                    this._map = new _Map();\r\n                }\r\n                Object.defineProperty(Set.prototype, \"size\", {\r\n                    get: function () { return this._map.size; },\r\n                    enumerable: true,\r\n                    configurable: true\r\n                });\r\n                Set.prototype.has = function (value) { return this._map.has(value); };\r\n                Set.prototype.add = function (value) { return this._map.set(value, value), this; };\r\n                Set.prototype.delete = function (value) { return this._map.delete(value); };\r\n                Set.prototype.clear = function () { this._map.clear(); };\r\n                Set.prototype.keys = function () { return this._map.keys(); };\r\n                Set.prototype.values = function () { return this._map.values(); };\r\n                Set.prototype.entries = function () { return this._map.entries(); };\r\n                Set.prototype[\"@@iterator\"] = function () { return this.keys(); };\r\n                Set.prototype[iteratorSymbol] = function () { return this.keys(); };\r\n                return Set;\r\n            }());\r\n        }\r\n        // naive WeakMap shim\r\n        function CreateWeakMapPolyfill() {\r\n            var UUID_SIZE = 16;\r\n            var keys = HashMap.create();\r\n            var rootKey = CreateUniqueKey();\r\n            return (function () {\r\n                function WeakMap() {\r\n                    this._key = CreateUniqueKey();\r\n                }\r\n                WeakMap.prototype.has = function (target) {\r\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\r\n                    return table !== undefined ? HashMap.has(table, this._key) : false;\r\n                };\r\n                WeakMap.prototype.get = function (target) {\r\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\r\n                    return table !== undefined ? HashMap.get(table, this._key) : undefined;\r\n                };\r\n                WeakMap.prototype.set = function (target, value) {\r\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ true);\r\n                    table[this._key] = value;\r\n                    return this;\r\n                };\r\n                WeakMap.prototype.delete = function (target) {\r\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\r\n                    return table !== undefined ? delete table[this._key] : false;\r\n                };\r\n                WeakMap.prototype.clear = function () {\r\n                    // NOTE: not a real clear, just makes the previous data unreachable\r\n                    this._key = CreateUniqueKey();\r\n                };\r\n                return WeakMap;\r\n            }());\r\n            function CreateUniqueKey() {\r\n                var key;\r\n                do\r\n                    key = \"@@WeakMap@@\" + CreateUUID();\r\n                while (HashMap.has(keys, key));\r\n                keys[key] = true;\r\n                return key;\r\n            }\r\n            function GetOrCreateWeakMapTable(target, create) {\r\n                if (!hasOwn.call(target, rootKey)) {\r\n                    if (!create)\r\n                        return undefined;\r\n                    Object.defineProperty(target, rootKey, { value: HashMap.create() });\r\n                }\r\n                return target[rootKey];\r\n            }\r\n            function FillRandomBytes(buffer, size) {\r\n                for (var i = 0; i < size; ++i)\r\n                    buffer[i] = Math.random() * 0xff | 0;\r\n                return buffer;\r\n            }\r\n            function GenRandomBytes(size) {\r\n                if (typeof Uint8Array === \"function\") {\r\n                    if (typeof crypto !== \"undefined\")\r\n                        return crypto.getRandomValues(new Uint8Array(size));\r\n                    if (typeof msCrypto !== \"undefined\")\r\n                        return msCrypto.getRandomValues(new Uint8Array(size));\r\n                    return FillRandomBytes(new Uint8Array(size), size);\r\n                }\r\n                return FillRandomBytes(new Array(size), size);\r\n            }\r\n            function CreateUUID() {\r\n                var data = GenRandomBytes(UUID_SIZE);\r\n                // mark as random - RFC 4122 § 4.4\r\n                data[6] = data[6] & 0x4f | 0x40;\r\n                data[8] = data[8] & 0xbf | 0x80;\r\n                var result = \"\";\r\n                for (var offset = 0; offset < UUID_SIZE; ++offset) {\r\n                    var byte = data[offset];\r\n                    if (offset === 4 || offset === 6 || offset === 8)\r\n                        result += \"-\";\r\n                    if (byte < 16)\r\n                        result += \"0\";\r\n                    result += byte.toString(16).toLowerCase();\r\n                }\r\n                return result;\r\n            }\r\n        }\r\n        // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\r\n        function MakeDictionary(obj) {\r\n            obj.__ = undefined;\r\n            delete obj.__;\r\n            return obj;\r\n        }\r\n    });\r\n})(Reflect || (Reflect = {}));\r\n//# sourceMappingURL=Reflect.js.map\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../process/browser.js */ \"./node_modules/process/browser.js\"), __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/reflect-metadata/Reflect.js?");

/***/ }),

/***/ "./node_modules/safe-buffer/index.js":
/*!*******************************************!*\
  !*** ./node_modules/safe-buffer/index.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* eslint-disable node/no-deprecated-api */\nvar buffer = __webpack_require__(/*! buffer */ \"./node_modules/node-libs-browser/node_modules/buffer/index.js\")\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n\n\n//# sourceURL=webpack:///./node_modules/safe-buffer/index.js?");

/***/ }),

/***/ "./node_modules/setimmediate/setImmediate.js":
/*!***************************************************!*\
  !*** ./node_modules/setimmediate/setImmediate.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///./node_modules/setimmediate/setImmediate.js?");

/***/ }),

/***/ "./node_modules/stream-browserify/index.js":
/*!*************************************************!*\
  !*** ./node_modules/stream-browserify/index.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = __webpack_require__(/*! events */ \"./node_modules/events/events.js\").EventEmitter;\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n\ninherits(Stream, EE);\nStream.Readable = __webpack_require__(/*! readable-stream/readable.js */ \"./node_modules/readable-stream/readable-browser.js\");\nStream.Writable = __webpack_require__(/*! readable-stream/writable.js */ \"./node_modules/readable-stream/writable-browser.js\");\nStream.Duplex = __webpack_require__(/*! readable-stream/duplex.js */ \"./node_modules/readable-stream/duplex-browser.js\");\nStream.Transform = __webpack_require__(/*! readable-stream/transform.js */ \"./node_modules/readable-stream/transform.js\");\nStream.PassThrough = __webpack_require__(/*! readable-stream/passthrough.js */ \"./node_modules/readable-stream/passthrough.js\");\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n\n\n//# sourceURL=webpack:///./node_modules/stream-browserify/index.js?");

/***/ }),

/***/ "./node_modules/string_decoder/lib/string_decoder.js":
/*!***********************************************************!*\
  !*** ./node_modules/string_decoder/lib/string_decoder.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n/*<replacement>*/\n\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}\n\n//# sourceURL=webpack:///./node_modules/string_decoder/lib/string_decoder.js?");

/***/ }),

/***/ "./node_modules/supports-color/browser.js":
/*!************************************************!*\
  !*** ./node_modules/supports-color/browser.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nmodule.exports = {\n\tstdout: false,\n\tstderr: false\n};\n\n\n//# sourceURL=webpack:///./node_modules/supports-color/browser.js?");

/***/ }),

/***/ "./node_modules/timers-browserify/main.js":
/*!************************************************!*\
  !*** ./node_modules/timers-browserify/main.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\n__webpack_require__(/*! setimmediate */ \"./node_modules/setimmediate/setImmediate.js\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/timers-browserify/main.js?");

/***/ }),

/***/ "./node_modules/typeorm/cache/DbQueryResultCache.js":
/*!**********************************************************!*\
  !*** ./node_modules/typeorm/cache/DbQueryResultCache.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Table_1 = __webpack_require__(/*! ../schema-builder/table/Table */ \"./node_modules/typeorm/schema-builder/table/Table.js\");\nvar SqlServerDriver_1 = __webpack_require__(/*! ../driver/sqlserver/SqlServerDriver */ \"./node_modules/typeorm/driver/sqlserver/SqlServerDriver.js\");\nvar MssqlParameter_1 = __webpack_require__(/*! ../driver/sqlserver/MssqlParameter */ \"./node_modules/typeorm/driver/sqlserver/MssqlParameter.js\");\nvar OracleDriver_1 = __webpack_require__(/*! ../driver/oracle/OracleDriver */ \"./node_modules/typeorm/driver/oracle/OracleDriver.js\");\n/**\n * Caches query result into current database, into separate table called \"query-result-cache\".\n */\nvar DbQueryResultCache = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function DbQueryResultCache(connection) {\n        this.connection = connection;\n        var options = this.connection.driver.options;\n        this.queryResultCacheTable = this.connection.driver.buildTableName(\"query-result-cache\", options.schema, options.database);\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates a connection with given cache provider.\n     */\n    DbQueryResultCache.prototype.connect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * Disconnects with given cache provider.\n     */\n    DbQueryResultCache.prototype.disconnect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * Creates table for storing cache if it does not exist yet.\n     */\n    DbQueryResultCache.prototype.synchronize = function (queryRunner) {\n        return __awaiter(this, void 0, void 0, function () {\n            var driver, tableExist;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        queryRunner = this.getQueryRunner(queryRunner);\n                        driver = this.connection.driver;\n                        return [4 /*yield*/, queryRunner.hasTable(this.queryResultCacheTable)];\n                    case 1:\n                        tableExist = _a.sent();\n                        if (tableExist)\n                            return [2 /*return*/];\n                        return [4 /*yield*/, queryRunner.createTable(new Table_1.Table({\n                                name: this.queryResultCacheTable,\n                                columns: [\n                                    {\n                                        name: \"id\",\n                                        isPrimary: true,\n                                        isNullable: false,\n                                        type: driver.normalizeType({ type: driver.mappedDataTypes.cacheId }),\n                                        generationStrategy: \"increment\",\n                                        isGenerated: true\n                                    },\n                                    {\n                                        name: \"identifier\",\n                                        type: driver.normalizeType({ type: driver.mappedDataTypes.cacheIdentifier }),\n                                        isNullable: true\n                                    },\n                                    {\n                                        name: \"time\",\n                                        type: driver.normalizeType({ type: driver.mappedDataTypes.cacheTime }),\n                                        isPrimary: false,\n                                        isNullable: false\n                                    },\n                                    {\n                                        name: \"duration\",\n                                        type: driver.normalizeType({ type: driver.mappedDataTypes.cacheDuration }),\n                                        isPrimary: false,\n                                        isNullable: false\n                                    },\n                                    {\n                                        name: \"query\",\n                                        type: driver.normalizeType({ type: driver.mappedDataTypes.cacheQuery }),\n                                        isPrimary: false,\n                                        isNullable: false\n                                    },\n                                    {\n                                        name: \"result\",\n                                        type: driver.normalizeType({ type: driver.mappedDataTypes.cacheResult }),\n                                        isNullable: false\n                                    },\n                                ]\n                            }))];\n                    case 2:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Caches given query result.\n     * Returns cache result if found.\n     * Returns undefined if result is not cached.\n     */\n    DbQueryResultCache.prototype.getFromCache = function (options, queryRunner) {\n        queryRunner = this.getQueryRunner(queryRunner);\n        var qb = this.connection\n            .createQueryBuilder(queryRunner)\n            .select()\n            .from(this.queryResultCacheTable, \"cache\");\n        if (options.identifier) {\n            return qb\n                .where(qb.escape(\"cache\") + \".\" + qb.escape(\"identifier\") + \" = :identifier\")\n                .setParameters({ identifier: this.connection.driver instanceof SqlServerDriver_1.SqlServerDriver ? new MssqlParameter_1.MssqlParameter(options.identifier, \"nvarchar\") : options.identifier })\n                .getRawOne();\n        }\n        else if (options.query) {\n            if (this.connection.driver instanceof OracleDriver_1.OracleDriver) {\n                return qb\n                    .where(\"dbms_lob.compare(\" + qb.escape(\"cache\") + \".\" + qb.escape(\"query\") + \", :query) = 0\", { query: options.query })\n                    .getRawOne();\n            }\n            return qb\n                .where(qb.escape(\"cache\") + \".\" + qb.escape(\"query\") + \" = :query\")\n                .setParameters({ query: this.connection.driver instanceof SqlServerDriver_1.SqlServerDriver ? new MssqlParameter_1.MssqlParameter(options.query, \"nvarchar\") : options.query })\n                .getRawOne();\n        }\n        return Promise.resolve(undefined);\n    };\n    /**\n     * Checks if cache is expired or not.\n     */\n    DbQueryResultCache.prototype.isExpired = function (savedCache) {\n        return ((typeof savedCache.time === \"string\" ? parseInt(savedCache.time) : savedCache.time) + savedCache.duration) < new Date().getTime();\n    };\n    /**\n     * Stores given query result in the cache.\n     */\n    DbQueryResultCache.prototype.storeInCache = function (options, savedCache, queryRunner) {\n        return __awaiter(this, void 0, void 0, function () {\n            var insertedValues, qb, qb;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        queryRunner = this.getQueryRunner(queryRunner);\n                        insertedValues = options;\n                        if (this.connection.driver instanceof SqlServerDriver_1.SqlServerDriver) { // todo: bad abstraction, re-implement this part, probably better if we create an entity metadata for cache table\n                            insertedValues = {\n                                identifier: new MssqlParameter_1.MssqlParameter(options.identifier, \"nvarchar\"),\n                                time: new MssqlParameter_1.MssqlParameter(options.time, \"bigint\"),\n                                duration: new MssqlParameter_1.MssqlParameter(options.duration, \"int\"),\n                                query: new MssqlParameter_1.MssqlParameter(options.query, \"nvarchar\"),\n                                result: new MssqlParameter_1.MssqlParameter(options.result, \"nvarchar\"),\n                            };\n                        }\n                        if (!(savedCache && savedCache.identifier)) return [3 /*break*/, 2];\n                        qb = queryRunner.manager\n                            .createQueryBuilder()\n                            .update(this.queryResultCacheTable)\n                            .set(insertedValues);\n                        qb.where(qb.escape(\"identifier\") + \" = :condition\", { condition: insertedValues.identifier });\n                        return [4 /*yield*/, qb.execute()];\n                    case 1:\n                        _a.sent();\n                        return [3 /*break*/, 6];\n                    case 2:\n                        if (!(savedCache && savedCache.query)) return [3 /*break*/, 4];\n                        qb = queryRunner.manager\n                            .createQueryBuilder()\n                            .update(this.queryResultCacheTable)\n                            .set(insertedValues);\n                        if (this.connection.driver instanceof OracleDriver_1.OracleDriver) {\n                            qb.where(\"dbms_lob.compare(\\\"query\\\", :condition) = 0\", { condition: insertedValues.query });\n                        }\n                        else {\n                            qb.where(qb.escape(\"query\") + \" = :condition\", { condition: insertedValues.query });\n                        }\n                        return [4 /*yield*/, qb.execute()];\n                    case 3:\n                        _a.sent();\n                        return [3 /*break*/, 6];\n                    case 4: // otherwise insert\n                    return [4 /*yield*/, queryRunner.manager\n                            .createQueryBuilder()\n                            .insert()\n                            .into(this.queryResultCacheTable)\n                            .values(insertedValues)\n                            .execute()];\n                    case 5:\n                        _a.sent();\n                        _a.label = 6;\n                    case 6: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Clears everything stored in the cache.\n     */\n    DbQueryResultCache.prototype.clear = function (queryRunner) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.getQueryRunner(queryRunner).clearTable(this.queryResultCacheTable)];\n            });\n        });\n    };\n    /**\n     * Removes all cached results by given identifiers from cache.\n     */\n    DbQueryResultCache.prototype.remove = function (identifiers, queryRunner) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, Promise.all(identifiers.map(function (identifier) {\n                            var qb = _this.getQueryRunner(queryRunner).manager.createQueryBuilder();\n                            return qb.delete()\n                                .from(_this.queryResultCacheTable)\n                                .where(qb.escape(\"identifier\") + \" = :identifier\", { identifier: identifier })\n                                .execute();\n                        }))];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Gets a query runner to work with.\n     */\n    DbQueryResultCache.prototype.getQueryRunner = function (queryRunner) {\n        if (queryRunner)\n            return queryRunner;\n        return this.connection.createQueryRunner(\"master\");\n    };\n    return DbQueryResultCache;\n}());\nexports.DbQueryResultCache = DbQueryResultCache;\n\n//# sourceMappingURL=DbQueryResultCache.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/cache/DbQueryResultCache.js?");

/***/ }),

/***/ "./node_modules/typeorm/cache/QueryResultCacheFactory.js":
/*!***************************************************************!*\
  !*** ./node_modules/typeorm/cache/QueryResultCacheFactory.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar RedisQueryResultCache_1 = __webpack_require__(/*! ./RedisQueryResultCache */ \"./node_modules/typeorm/cache/RedisQueryResultCache.js\");\nvar DbQueryResultCache_1 = __webpack_require__(/*! ./DbQueryResultCache */ \"./node_modules/typeorm/cache/DbQueryResultCache.js\");\n/**\n * Caches query result into Redis database.\n */\nvar QueryResultCacheFactory = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function QueryResultCacheFactory(connection) {\n        this.connection = connection;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates a new query result cache based on connection options.\n     */\n    QueryResultCacheFactory.prototype.create = function () {\n        if (!this.connection.options.cache)\n            throw new Error(\"To use cache you need to enable it in connection options by setting cache: true or providing some caching options. Example: { host: ..., username: ..., cache: true }\");\n        if (this.connection.options.cache.type === \"redis\")\n            return new RedisQueryResultCache_1.RedisQueryResultCache(this.connection);\n        return new DbQueryResultCache_1.DbQueryResultCache(this.connection);\n    };\n    return QueryResultCacheFactory;\n}());\nexports.QueryResultCacheFactory = QueryResultCacheFactory;\n\n//# sourceMappingURL=QueryResultCacheFactory.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/cache/QueryResultCacheFactory.js?");

/***/ }),

/***/ "./node_modules/typeorm/cache/RedisQueryResultCache.js":
/*!*************************************************************!*\
  !*** ./node_modules/typeorm/cache/RedisQueryResultCache.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar PlatformTools_1 = __webpack_require__(/*! ../platform/PlatformTools */ \"./node_modules/typeorm/platform/PlatformTools.js\");\n/**\n * Caches query result into Redis database.\n */\nvar RedisQueryResultCache = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function RedisQueryResultCache(connection) {\n        this.connection = connection;\n        this.redis = this.loadRedis();\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates a connection with given cache provider.\n     */\n    RedisQueryResultCache.prototype.connect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var cacheOptions;\n            return __generator(this, function (_a) {\n                cacheOptions = this.connection.options.cache;\n                if (cacheOptions && cacheOptions.options) {\n                    this.client = this.redis.createClient(cacheOptions.options);\n                }\n                else {\n                    this.client = this.redis.createClient();\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * Creates a connection with given cache provider.\n     */\n    RedisQueryResultCache.prototype.disconnect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2 /*return*/, new Promise(function (ok, fail) {\n                        _this.client.quit(function (err, result) {\n                            if (err)\n                                return fail(err);\n                            ok();\n                            _this.client = undefined;\n                        });\n                    })];\n            });\n        });\n    };\n    /**\n     * Creates table for storing cache if it does not exist yet.\n     */\n    RedisQueryResultCache.prototype.synchronize = function (queryRunner) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * Caches given query result.\n     * Returns cache result if found.\n     * Returns undefined if result is not cached.\n     */\n    RedisQueryResultCache.prototype.getFromCache = function (options, queryRunner) {\n        var _this = this;\n        return new Promise(function (ok, fail) {\n            if (options.identifier) {\n                _this.client.get(options.identifier, function (err, result) {\n                    if (err)\n                        return fail(err);\n                    ok(JSON.parse(result));\n                });\n            }\n            else if (options.query) {\n                _this.client.get(options.query, function (err, result) {\n                    if (err)\n                        return fail(err);\n                    ok(JSON.parse(result));\n                });\n            }\n            else {\n                ok(undefined);\n            }\n        });\n    };\n    /**\n     * Checks if cache is expired or not.\n     */\n    RedisQueryResultCache.prototype.isExpired = function (savedCache) {\n        return (savedCache.time + savedCache.duration) < new Date().getTime();\n    };\n    /**\n     * Stores given query result in the cache.\n     */\n    RedisQueryResultCache.prototype.storeInCache = function (options, savedCache, queryRunner) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2 /*return*/, new Promise(function (ok, fail) {\n                        if (options.identifier) {\n                            _this.client.set(options.identifier, JSON.stringify(options), 'PX', options.duration, function (err, result) {\n                                if (err)\n                                    return fail(err);\n                                ok();\n                            });\n                        }\n                        else if (options.query) {\n                            _this.client.set(options.query, JSON.stringify(options), 'PX', options.duration, function (err, result) {\n                                if (err)\n                                    return fail(err);\n                                ok();\n                            });\n                        }\n                    })];\n            });\n        });\n    };\n    /**\n     * Clears everything stored in the cache.\n     */\n    RedisQueryResultCache.prototype.clear = function (queryRunner) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2 /*return*/, new Promise(function (ok, fail) {\n                        _this.client.flushdb(function (err, result) {\n                            if (err)\n                                return fail(err);\n                            ok();\n                        });\n                    })];\n            });\n        });\n    };\n    /**\n     * Removes all cached results by given identifiers from cache.\n     */\n    RedisQueryResultCache.prototype.remove = function (identifiers, queryRunner) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, Promise.all(identifiers.map(function (identifier) {\n                            return _this.deleteKey(identifier);\n                        }))];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Removes a single key from redis database.\n     */\n    RedisQueryResultCache.prototype.deleteKey = function (key) {\n        var _this = this;\n        return new Promise(function (ok, fail) {\n            _this.client.del(key, function (err, result) {\n                if (err)\n                    return fail(err);\n                ok();\n            });\n        });\n    };\n    /**\n     * Loads redis dependency.\n     */\n    RedisQueryResultCache.prototype.loadRedis = function () {\n        try {\n            return PlatformTools_1.PlatformTools.load(\"redis\");\n        }\n        catch (e) {\n            throw new Error(\"Cannot use cache because redis is not installed. Please run \\\"npm i redis --save\\\".\");\n        }\n    };\n    return RedisQueryResultCache;\n}());\nexports.RedisQueryResultCache = RedisQueryResultCache;\n\n//# sourceMappingURL=RedisQueryResultCache.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/cache/RedisQueryResultCache.js?");

/***/ }),

/***/ "./node_modules/typeorm/connection/Connection.js":
/*!*******************************************************!*\
  !*** ./node_modules/typeorm/connection/Connection.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DefaultNamingStrategy_1 = __webpack_require__(/*! ../naming-strategy/DefaultNamingStrategy */ \"./node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js\");\nvar CannotExecuteNotConnectedError_1 = __webpack_require__(/*! ../error/CannotExecuteNotConnectedError */ \"./node_modules/typeorm/error/CannotExecuteNotConnectedError.js\");\nvar CannotConnectAlreadyConnectedError_1 = __webpack_require__(/*! ../error/CannotConnectAlreadyConnectedError */ \"./node_modules/typeorm/error/CannotConnectAlreadyConnectedError.js\");\nvar EntityMetadataNotFoundError_1 = __webpack_require__(/*! ../error/EntityMetadataNotFoundError */ \"./node_modules/typeorm/error/EntityMetadataNotFoundError.js\");\nvar MigrationExecutor_1 = __webpack_require__(/*! ../migration/MigrationExecutor */ \"./node_modules/typeorm/migration/MigrationExecutor.js\");\nvar MongoDriver_1 = __webpack_require__(/*! ../driver/mongodb/MongoDriver */ \"./node_modules/typeorm/driver/mongodb/MongoDriver.js\");\nvar MongoEntityManager_1 = __webpack_require__(/*! ../entity-manager/MongoEntityManager */ \"./node_modules/typeorm/entity-manager/MongoEntityManager.js\");\nvar EntityMetadataValidator_1 = __webpack_require__(/*! ../metadata-builder/EntityMetadataValidator */ \"./node_modules/typeorm/metadata-builder/EntityMetadataValidator.js\");\nvar QueryRunnerProviderAlreadyReleasedError_1 = __webpack_require__(/*! ../error/QueryRunnerProviderAlreadyReleasedError */ \"./node_modules/typeorm/error/QueryRunnerProviderAlreadyReleasedError.js\");\nvar EntityManagerFactory_1 = __webpack_require__(/*! ../entity-manager/EntityManagerFactory */ \"./node_modules/typeorm/entity-manager/EntityManagerFactory.js\");\nvar DriverFactory_1 = __webpack_require__(/*! ../driver/DriverFactory */ \"./node_modules/typeorm/driver/DriverFactory.js\");\nvar ConnectionMetadataBuilder_1 = __webpack_require__(/*! ./ConnectionMetadataBuilder */ \"./node_modules/typeorm/connection/ConnectionMetadataBuilder.js\");\nvar SelectQueryBuilder_1 = __webpack_require__(/*! ../query-builder/SelectQueryBuilder */ \"./node_modules/typeorm/query-builder/SelectQueryBuilder.js\");\nvar LoggerFactory_1 = __webpack_require__(/*! ../logger/LoggerFactory */ \"./node_modules/typeorm/logger/LoggerFactory.js\");\nvar QueryResultCacheFactory_1 = __webpack_require__(/*! ../cache/QueryResultCacheFactory */ \"./node_modules/typeorm/cache/QueryResultCacheFactory.js\");\nvar SqljsEntityManager_1 = __webpack_require__(/*! ../entity-manager/SqljsEntityManager */ \"./node_modules/typeorm/entity-manager/SqljsEntityManager.js\");\nvar RelationLoader_1 = __webpack_require__(/*! ../query-builder/RelationLoader */ \"./node_modules/typeorm/query-builder/RelationLoader.js\");\nvar RelationIdLoader_1 = __webpack_require__(/*! ../query-builder/RelationIdLoader */ \"./node_modules/typeorm/query-builder/RelationIdLoader.js\");\nvar _1 = __webpack_require__(/*! ../ */ \"./node_modules/typeorm/index.js\");\nvar SqlServerDriver_1 = __webpack_require__(/*! ../driver/sqlserver/SqlServerDriver */ \"./node_modules/typeorm/driver/sqlserver/SqlServerDriver.js\");\nvar MysqlDriver_1 = __webpack_require__(/*! ../driver/mysql/MysqlDriver */ \"./node_modules/typeorm/driver/mysql/MysqlDriver.js\");\nvar _2 = __webpack_require__(/*! ../ */ \"./node_modules/typeorm/index.js\");\n/**\n * Connection is a single database ORM connection to a specific database.\n * Its not required to be a database connection, depend on database type it can create connection pool.\n * You can have multiple connections to multiple databases in your application.\n */\nvar Connection = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function Connection(options) {\n        /**\n         * Indicates if connection is initialized or not.\n         */\n        this.isConnected = false;\n        /**\n         * Migration instances that are registered for this connection.\n         */\n        this.migrations = [];\n        /**\n         * Entity subscriber instances that are registered for this connection.\n         */\n        this.subscribers = [];\n        /**\n         * All entity metadatas that are registered for this connection.\n         */\n        this.entityMetadatas = [];\n        this.name = options.name || \"default\";\n        this.options = options;\n        this.logger = new LoggerFactory_1.LoggerFactory().create(this.options.logger, this.options.logging);\n        this.driver = new DriverFactory_1.DriverFactory().create(this);\n        this.manager = this.createEntityManager();\n        this.namingStrategy = options.namingStrategy || new DefaultNamingStrategy_1.DefaultNamingStrategy();\n        this.queryResultCache = options.cache ? new QueryResultCacheFactory_1.QueryResultCacheFactory(this).create() : undefined;\n        this.relationLoader = new RelationLoader_1.RelationLoader(this);\n        this.relationIdLoader = new RelationIdLoader_1.RelationIdLoader(this);\n    }\n    Object.defineProperty(Connection.prototype, \"mongoManager\", {\n        // -------------------------------------------------------------------------\n        // Public Accessors\n        // -------------------------------------------------------------------------\n        /**\n         * Gets the mongodb entity manager that allows to perform mongodb-specific repository operations\n         * with any entity in this connection.\n         *\n         * Available only in mongodb connections.\n         */\n        get: function () {\n            if (!(this.manager instanceof MongoEntityManager_1.MongoEntityManager))\n                throw new Error(\"MongoEntityManager is only available for MongoDB databases.\");\n            return this.manager;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Connection.prototype, \"sqljsManager\", {\n        /**\n         * Gets a sql.js specific Entity Manager that allows to perform special load and save operations\n         *\n         * Available only in connection with the sqljs driver.\n         */\n        get: function () {\n            if (!(this.manager instanceof SqljsEntityManager_1.SqljsEntityManager))\n                throw new Error(\"SqljsEntityManager is only available for Sqljs databases.\");\n            return this.manager;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Performs connection to the database.\n     * This method should be called once on application bootstrap.\n     * This method not necessarily creates database connection (depend on database type),\n     * but it also can setup a connection pool with database to use.\n     */\n    Connection.prototype.connect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var error_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.isConnected)\n                            throw new CannotConnectAlreadyConnectedError_1.CannotConnectAlreadyConnectedError(this.name);\n                        // connect to the database via its driver\n                        return [4 /*yield*/, this.driver.connect()];\n                    case 1:\n                        // connect to the database via its driver\n                        _a.sent();\n                        if (!this.queryResultCache) return [3 /*break*/, 3];\n                        return [4 /*yield*/, this.queryResultCache.connect()];\n                    case 2:\n                        _a.sent();\n                        _a.label = 3;\n                    case 3:\n                        // set connected status for the current connection\n                        Object.assign(this, { isConnected: true });\n                        _a.label = 4;\n                    case 4:\n                        _a.trys.push([4, 12, , 14]);\n                        // build all metadatas registered in the current connection\n                        this.buildMetadatas();\n                        return [4 /*yield*/, this.driver.afterConnect()];\n                    case 5:\n                        _a.sent();\n                        if (!this.options.dropSchema) return [3 /*break*/, 7];\n                        return [4 /*yield*/, this.dropDatabase()];\n                    case 6:\n                        _a.sent();\n                        _a.label = 7;\n                    case 7:\n                        if (!this.options.synchronize) return [3 /*break*/, 9];\n                        return [4 /*yield*/, this.synchronize()];\n                    case 8:\n                        _a.sent();\n                        _a.label = 9;\n                    case 9:\n                        if (!this.options.migrationsRun) return [3 /*break*/, 11];\n                        return [4 /*yield*/, this.runMigrations()];\n                    case 10:\n                        _a.sent();\n                        _a.label = 11;\n                    case 11: return [3 /*break*/, 14];\n                    case 12:\n                        error_1 = _a.sent();\n                        // if for some reason build metadata fail (for example validation error during entity metadata check)\n                        // connection needs to be closed\n                        return [4 /*yield*/, this.close()];\n                    case 13:\n                        // if for some reason build metadata fail (for example validation error during entity metadata check)\n                        // connection needs to be closed\n                        _a.sent();\n                        throw error_1;\n                    case 14: return [2 /*return*/, this];\n                }\n            });\n        });\n    };\n    /**\n     * Closes connection with the database.\n     * Once connection is closed, you cannot use repositories or perform any operations except opening connection again.\n     */\n    Connection.prototype.close = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.isConnected)\n                            throw new CannotExecuteNotConnectedError_1.CannotExecuteNotConnectedError(this.name);\n                        return [4 /*yield*/, this.driver.disconnect()];\n                    case 1:\n                        _a.sent();\n                        if (!this.queryResultCache) return [3 /*break*/, 3];\n                        return [4 /*yield*/, this.queryResultCache.disconnect()];\n                    case 2:\n                        _a.sent();\n                        _a.label = 3;\n                    case 3:\n                        Object.assign(this, { isConnected: false });\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates database schema for all entities registered in this connection.\n     * Can be used only after connection to the database is established.\n     *\n     * @param dropBeforeSync If set to true then it drops the database with all its tables and data\n     */\n    Connection.prototype.synchronize = function (dropBeforeSync) {\n        if (dropBeforeSync === void 0) { dropBeforeSync = false; }\n        return __awaiter(this, void 0, void 0, function () {\n            var schemaBuilder;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.isConnected)\n                            throw new CannotExecuteNotConnectedError_1.CannotExecuteNotConnectedError(this.name);\n                        if (!dropBeforeSync) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.dropDatabase()];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2:\n                        schemaBuilder = this.driver.createSchemaBuilder();\n                        return [4 /*yield*/, schemaBuilder.build()];\n                    case 3:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops the database and all its data.\n     * Be careful with this method on production since this method will erase all your database tables and their data.\n     * Can be used only after connection to the database is established.\n     */\n    // TODO rename\n    Connection.prototype.dropDatabase = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var queryRunner, databases_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.createQueryRunner(\"master\")];\n                    case 1:\n                        queryRunner = _a.sent();\n                        if (!(this.driver instanceof SqlServerDriver_1.SqlServerDriver || this.driver instanceof MysqlDriver_1.MysqlDriver)) return [3 /*break*/, 3];\n                        databases_1 = this.driver.database ? [this.driver.database] : [];\n                        this.entityMetadatas.forEach(function (metadata) {\n                            if (metadata.database && databases_1.indexOf(metadata.database) === -1)\n                                databases_1.push(metadata.database);\n                        });\n                        return [4 /*yield*/, _2.PromiseUtils.runInSequence(databases_1, function (database) { return queryRunner.clearDatabase(database); })];\n                    case 2:\n                        _a.sent();\n                        return [3 /*break*/, 5];\n                    case 3: return [4 /*yield*/, queryRunner.clearDatabase()];\n                    case 4:\n                        _a.sent();\n                        _a.label = 5;\n                    case 5: return [4 /*yield*/, queryRunner.release()];\n                    case 6:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Runs all pending migrations.\n     * Can be used only after connection to the database is established.\n     */\n    Connection.prototype.runMigrations = function (options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var migrationExecutor;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.isConnected)\n                            throw new CannotExecuteNotConnectedError_1.CannotExecuteNotConnectedError(this.name);\n                        migrationExecutor = new MigrationExecutor_1.MigrationExecutor(this);\n                        if (options && options.transaction === false) {\n                            migrationExecutor.transaction = false;\n                        }\n                        return [4 /*yield*/, migrationExecutor.executePendingMigrations()];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Reverts last executed migration.\n     * Can be used only after connection to the database is established.\n     */\n    Connection.prototype.undoLastMigration = function (options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var migrationExecutor;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.isConnected)\n                            throw new CannotExecuteNotConnectedError_1.CannotExecuteNotConnectedError(this.name);\n                        migrationExecutor = new MigrationExecutor_1.MigrationExecutor(this);\n                        if (options && options.transaction === false) {\n                            migrationExecutor.transaction = false;\n                        }\n                        return [4 /*yield*/, migrationExecutor.undoLastMigration()];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Checks if entity metadata exist for the given entity class, target name or table name.\n     */\n    Connection.prototype.hasMetadata = function (target) {\n        return !!this.findMetadata(target);\n    };\n    /**\n     * Gets entity metadata for the given entity class or schema name.\n     */\n    Connection.prototype.getMetadata = function (target) {\n        var metadata = this.findMetadata(target);\n        if (!metadata)\n            throw new EntityMetadataNotFoundError_1.EntityMetadataNotFoundError(target);\n        return metadata;\n    };\n    /**\n     * Gets repository for the given entity.\n     */\n    Connection.prototype.getRepository = function (target) {\n        return this.manager.getRepository(target);\n    };\n    /**\n     * Gets tree repository for the given entity class or name.\n     * Only tree-type entities can have a TreeRepository, like ones decorated with @Tree decorator.\n     */\n    Connection.prototype.getTreeRepository = function (target) {\n        return this.manager.getTreeRepository(target);\n    };\n    /**\n     * Gets mongodb-specific repository for the given entity class or name.\n     * Works only if connection is mongodb-specific.\n     */\n    Connection.prototype.getMongoRepository = function (target) {\n        if (!(this.driver instanceof MongoDriver_1.MongoDriver))\n            throw new Error(\"You can use getMongoRepository only for MongoDB connections.\");\n        return this.manager.getRepository(target);\n    };\n    /**\n     * Gets custom entity repository marked with @EntityRepository decorator.\n     */\n    Connection.prototype.getCustomRepository = function (customRepository) {\n        return this.manager.getCustomRepository(customRepository);\n    };\n    /**\n     * Wraps given function execution (and all operations made there) into a transaction.\n     * All database operations must be executed using provided entity manager.\n     */\n    Connection.prototype.transaction = function (runInTransaction) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.manager.transaction(runInTransaction)];\n            });\n        });\n    };\n    /**\n     * Executes raw SQL query and returns raw database results.\n     */\n    Connection.prototype.query = function (query, parameters, queryRunner) {\n        return __awaiter(this, void 0, void 0, function () {\n            var usedQueryRunner;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this instanceof MongoEntityManager_1.MongoEntityManager)\n                            throw new Error(\"Queries aren't supported by MongoDB.\");\n                        if (queryRunner && queryRunner.isReleased)\n                            throw new QueryRunnerProviderAlreadyReleasedError_1.QueryRunnerProviderAlreadyReleasedError();\n                        usedQueryRunner = queryRunner || this.createQueryRunner(\"master\");\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, , 3, 6]);\n                        return [4 /*yield*/, usedQueryRunner.query(query, parameters)];\n                    case 2: return [2 /*return*/, _a.sent()]; // await is needed here because we are using finally\n                    case 3:\n                        if (!!queryRunner) return [3 /*break*/, 5];\n                        return [4 /*yield*/, usedQueryRunner.release()];\n                    case 4:\n                        _a.sent();\n                        _a.label = 5;\n                    case 5: return [7 /*endfinally*/];\n                    case 6: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new query builder that can be used to build a sql query.\n     */\n    Connection.prototype.createQueryBuilder = function (entityOrRunner, alias, queryRunner) {\n        if (this instanceof MongoEntityManager_1.MongoEntityManager)\n            throw new Error(\"Query Builder is not supported by MongoDB.\");\n        if (alias) {\n            var metadata = this.getMetadata(entityOrRunner);\n            return new SelectQueryBuilder_1.SelectQueryBuilder(this, queryRunner)\n                .select(alias)\n                .from(metadata.target, alias);\n        }\n        else {\n            return new SelectQueryBuilder_1.SelectQueryBuilder(this, entityOrRunner);\n        }\n    };\n    /**\n     * Creates a query runner used for perform queries on a single database connection.\n     * Using query runners you can control your queries to execute using single database connection and\n     * manually control your database transaction.\n     *\n     * Mode is used in replication mode and indicates whatever you want to connect\n     * to master database or any of slave databases.\n     * If you perform writes you must use master database,\n     * if you perform reads you can use slave databases.\n     */\n    Connection.prototype.createQueryRunner = function (mode) {\n        if (mode === void 0) { mode = \"master\"; }\n        var queryRunner = this.driver.createQueryRunner(mode);\n        var manager = this.createEntityManager(queryRunner);\n        Object.assign(queryRunner, { manager: manager });\n        return queryRunner;\n    };\n    /**\n     * Gets entity metadata of the junction table (many-to-many table).\n     */\n    Connection.prototype.getManyToManyMetadata = function (entityTarget, relationPropertyPath) {\n        var relationMetadata = this.getMetadata(entityTarget).findRelationWithPropertyPath(relationPropertyPath);\n        if (!relationMetadata)\n            throw new Error(\"Relation \\\"\" + relationPropertyPath + \"\\\" was not found in \" + entityTarget + \" entity.\");\n        if (!relationMetadata.isManyToMany)\n            throw new Error(\"Relation \\\"\" + entityTarget + \"#\" + relationPropertyPath + \"\\\" does not have a many-to-many relationship.\" +\n                \"You can use this method only on many-to-many relations.\");\n        return relationMetadata.junctionEntityMetadata;\n    };\n    /**\n     * Creates an Entity Manager for the current connection with the help of the EntityManagerFactory.\n     */\n    Connection.prototype.createEntityManager = function (queryRunner) {\n        return new EntityManagerFactory_1.EntityManagerFactory().create(this, queryRunner);\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Finds exist entity metadata by the given entity class, target name or table name.\n     */\n    Connection.prototype.findMetadata = function (target) {\n        return this.entityMetadatas.find(function (metadata) {\n            if (metadata.target === target)\n                return true;\n            if (target instanceof _1.EntitySchema) {\n                return metadata.name === target.options.name;\n            }\n            if (typeof target === \"string\") {\n                if (target.indexOf(\".\") !== -1) {\n                    return metadata.tablePath === target;\n                }\n                else {\n                    return metadata.name === target || metadata.tableName === target;\n                }\n            }\n            return false;\n        });\n    };\n    /**\n     * Builds metadatas for all registered classes inside this connection.\n     */\n    Connection.prototype.buildMetadatas = function () {\n        var connectionMetadataBuilder = new ConnectionMetadataBuilder_1.ConnectionMetadataBuilder(this);\n        var entityMetadataValidator = new EntityMetadataValidator_1.EntityMetadataValidator();\n        // create subscribers instances if they are not disallowed from high-level (for example they can disallowed from migrations run process)\n        var subscribers = connectionMetadataBuilder.buildSubscribers(this.options.subscribers || []);\n        Object.assign(this, { subscribers: subscribers });\n        // build entity metadatas\n        var entityMetadatas = connectionMetadataBuilder.buildEntityMetadatas(this.options.entities || []);\n        Object.assign(this, { entityMetadatas: entityMetadatas });\n        // create migration instances\n        var migrations = connectionMetadataBuilder.buildMigrations(this.options.migrations || []);\n        Object.assign(this, { migrations: migrations });\n        // validate all created entity metadatas to make sure user created entities are valid and correct\n        entityMetadataValidator.validateMany(this.entityMetadatas, this.driver);\n    };\n    return Connection;\n}());\nexports.Connection = Connection;\n\n//# sourceMappingURL=Connection.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/connection/Connection.js?");

/***/ }),

/***/ "./node_modules/typeorm/connection/ConnectionManager.js":
/*!**************************************************************!*\
  !*** ./node_modules/typeorm/connection/ConnectionManager.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Connection_1 = __webpack_require__(/*! ./Connection */ \"./node_modules/typeorm/connection/Connection.js\");\nvar ConnectionNotFoundError_1 = __webpack_require__(/*! ../error/ConnectionNotFoundError */ \"./node_modules/typeorm/error/ConnectionNotFoundError.js\");\nvar AlreadyHasActiveConnectionError_1 = __webpack_require__(/*! ../error/AlreadyHasActiveConnectionError */ \"./node_modules/typeorm/error/AlreadyHasActiveConnectionError.js\");\n/**\n * ConnectionManager is used to store and manage multiple orm connections.\n * It also provides useful factory methods to simplify connection creation.\n */\nvar ConnectionManager = /** @class */ (function () {\n    function ConnectionManager() {\n        // -------------------------------------------------------------------------\n        // Protected Properties\n        // -------------------------------------------------------------------------\n        /**\n         * List of connections registered in this connection manager.\n         */\n        this.connections = [];\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Checks if connection with the given name exist in the manager.\n     */\n    ConnectionManager.prototype.has = function (name) {\n        return !!this.connections.find(function (connection) { return connection.name === name; });\n    };\n    /**\n     * Gets registered connection with the given name.\n     * If connection name is not given then it will get a default connection.\n     * Throws error if connection with the given name was not found.\n     */\n    ConnectionManager.prototype.get = function (name) {\n        if (name === void 0) { name = \"default\"; }\n        var connection = this.connections.find(function (connection) { return connection.name === name; });\n        if (!connection)\n            throw new ConnectionNotFoundError_1.ConnectionNotFoundError(name);\n        return connection;\n    };\n    /**\n     * Creates a new connection based on the given connection options and registers it in the manager.\n     * Connection won't be established, you'll need to manually call connect method to establish connection.\n     */\n    ConnectionManager.prototype.create = function (options) {\n        // check if such connection is already registered\n        var existConnection = this.connections.find(function (connection) { return connection.name === (options.name || \"default\"); });\n        if (existConnection) {\n            // if connection is registered and its not closed then throw an error\n            if (existConnection.isConnected)\n                throw new AlreadyHasActiveConnectionError_1.AlreadyHasActiveConnectionError(options.name || \"default\");\n            // if its registered but closed then simply remove it from the manager\n            this.connections.splice(this.connections.indexOf(existConnection), 1);\n        }\n        // create a new connection\n        var connection = new Connection_1.Connection(options);\n        this.connections.push(connection);\n        return connection;\n    };\n    return ConnectionManager;\n}());\nexports.ConnectionManager = ConnectionManager;\n\n//# sourceMappingURL=ConnectionManager.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/connection/ConnectionManager.js?");

/***/ }),

/***/ "./node_modules/typeorm/connection/ConnectionMetadataBuilder.js":
/*!**********************************************************************!*\
  !*** ./node_modules/typeorm/connection/ConnectionMetadataBuilder.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DirectoryExportedClassesLoader_1 = __webpack_require__(/*! ../util/DirectoryExportedClassesLoader */ \"./node_modules/typeorm/util/DirectoryExportedClassesLoader.js\");\nvar OrmUtils_1 = __webpack_require__(/*! ../util/OrmUtils */ \"./node_modules/typeorm/util/OrmUtils.js\");\nvar container_1 = __webpack_require__(/*! ../container */ \"./node_modules/typeorm/container.js\");\nvar index_1 = __webpack_require__(/*! ../index */ \"./node_modules/typeorm/index.js\");\nvar EntityMetadataBuilder_1 = __webpack_require__(/*! ../metadata-builder/EntityMetadataBuilder */ \"./node_modules/typeorm/metadata-builder/EntityMetadataBuilder.js\");\nvar EntitySchemaTransformer_1 = __webpack_require__(/*! ../entity-schema/EntitySchemaTransformer */ \"./node_modules/typeorm/entity-schema/EntitySchemaTransformer.js\");\nvar EntitySchema_1 = __webpack_require__(/*! ../entity-schema/EntitySchema */ \"./node_modules/typeorm/entity-schema/EntitySchema.js\");\n/**\n * Builds migration instances, subscriber instances and entity metadatas for the given classes.\n */\nvar ConnectionMetadataBuilder = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function ConnectionMetadataBuilder(connection) {\n        this.connection = connection;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Builds migration instances for the given classes or directories.\n     */\n    ConnectionMetadataBuilder.prototype.buildMigrations = function (migrations) {\n        var _a = __read(OrmUtils_1.OrmUtils.splitClassesAndStrings(migrations), 2), migrationClasses = _a[0], migrationDirectories = _a[1];\n        var allMigrationClasses = __spread(migrationClasses, DirectoryExportedClassesLoader_1.importClassesFromDirectories(migrationDirectories));\n        return allMigrationClasses.map(function (migrationClass) { return container_1.getFromContainer(migrationClass); });\n    };\n    /**\n     * Builds subscriber instances for the given classes or directories.\n     */\n    ConnectionMetadataBuilder.prototype.buildSubscribers = function (subscribers) {\n        var _a = __read(OrmUtils_1.OrmUtils.splitClassesAndStrings(subscribers || []), 2), subscriberClasses = _a[0], subscriberDirectories = _a[1];\n        var allSubscriberClasses = __spread(subscriberClasses, DirectoryExportedClassesLoader_1.importClassesFromDirectories(subscriberDirectories));\n        return index_1.getMetadataArgsStorage()\n            .filterSubscribers(allSubscriberClasses)\n            .map(function (metadata) { return container_1.getFromContainer(metadata.target); });\n    };\n    /**\n     * Builds entity metadatas for the given classes or directories.\n     */\n    ConnectionMetadataBuilder.prototype.buildEntityMetadatas = function (entities) {\n        // todo: instead we need to merge multiple metadata args storages\n        var _a = __read(OrmUtils_1.OrmUtils.splitClassesAndStrings(entities || []), 2), entityClassesOrSchemas = _a[0], entityDirectories = _a[1];\n        var entityClasses = entityClassesOrSchemas.filter(function (entityClass) { return (entityClass instanceof EntitySchema_1.EntitySchema) === false; });\n        var entitySchemas = entityClassesOrSchemas.filter(function (entityClass) { return entityClass instanceof EntitySchema_1.EntitySchema; });\n        var allEntityClasses = __spread(entityClasses, DirectoryExportedClassesLoader_1.importClassesFromDirectories(entityDirectories));\n        allEntityClasses.forEach(function (entityClass) {\n            if (entityClass instanceof EntitySchema_1.EntitySchema) {\n                entitySchemas.push(entityClass);\n                allEntityClasses.slice(allEntityClasses.indexOf(entityClass), 1);\n            }\n        });\n        var decoratorEntityMetadatas = new EntityMetadataBuilder_1.EntityMetadataBuilder(this.connection, index_1.getMetadataArgsStorage()).build(allEntityClasses);\n        var metadataArgsStorageFromSchema = new EntitySchemaTransformer_1.EntitySchemaTransformer().transform(entitySchemas);\n        var schemaEntityMetadatas = new EntityMetadataBuilder_1.EntityMetadataBuilder(this.connection, metadataArgsStorageFromSchema).build();\n        return __spread(decoratorEntityMetadatas, schemaEntityMetadatas);\n    };\n    return ConnectionMetadataBuilder;\n}());\nexports.ConnectionMetadataBuilder = ConnectionMetadataBuilder;\n\n//# sourceMappingURL=ConnectionMetadataBuilder.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/connection/ConnectionMetadataBuilder.js?");

/***/ }),

/***/ "./node_modules/typeorm/connection/ConnectionOptionsReader.js":
/*!********************************************************************!*\
  !*** ./node_modules/typeorm/connection/ConnectionOptionsReader.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar PlatformTools_1 = __webpack_require__(/*! ../platform/PlatformTools */ \"./node_modules/typeorm/platform/PlatformTools.js\");\nvar ConnectionOptionsEnvReader_1 = __webpack_require__(/*! ./options-reader/ConnectionOptionsEnvReader */ \"./node_modules/typeorm/connection/options-reader/ConnectionOptionsEnvReader.js\");\nvar ConnectionOptionsYmlReader_1 = __webpack_require__(/*! ./options-reader/ConnectionOptionsYmlReader */ \"./node_modules/typeorm/connection/options-reader/ConnectionOptionsYmlReader.js\");\nvar ConnectionOptionsXmlReader_1 = __webpack_require__(/*! ./options-reader/ConnectionOptionsXmlReader */ \"./node_modules/typeorm/connection/options-reader/ConnectionOptionsXmlReader.js\");\n/**\n * Reads connection options from the ormconfig.\n * Can read from multiple file extensions including env, json, js, xml and yml.\n */\nvar ConnectionOptionsReader = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function ConnectionOptionsReader(options) {\n        this.options = options;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Returns all connection options read from the ormconfig.\n     */\n    ConnectionOptionsReader.prototype.all = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var options;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.load()];\n                    case 1:\n                        options = _a.sent();\n                        if (!options)\n                            throw new Error(\"No connection options were found in any of configurations file.\");\n                        return [2 /*return*/, options];\n                }\n            });\n        });\n    };\n    /**\n     * Gets a connection with a given name read from ormconfig.\n     * If connection with such name would not be found then it throw error.\n     */\n    ConnectionOptionsReader.prototype.get = function (name) {\n        return __awaiter(this, void 0, void 0, function () {\n            var allOptions, targetOptions;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.all()];\n                    case 1:\n                        allOptions = _a.sent();\n                        targetOptions = allOptions.find(function (options) { return options.name === name || (name === \"default\" && !options.name); });\n                        if (!targetOptions)\n                            throw new Error(\"Cannot find connection \" + name + \" because its not defined in any orm configuration files.\");\n                        return [2 /*return*/, targetOptions];\n                }\n            });\n        });\n    };\n    /**\n     * Checks if there is a TypeORM configuration file.\n     */\n    ConnectionOptionsReader.prototype.has = function (name) {\n        return __awaiter(this, void 0, void 0, function () {\n            var allOptions, targetOptions;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.load()];\n                    case 1:\n                        allOptions = _a.sent();\n                        if (!allOptions)\n                            return [2 /*return*/, false];\n                        targetOptions = allOptions.find(function (options) { return options.name === name || (name === \"default\" && !options.name); });\n                        return [2 /*return*/, !!targetOptions];\n                }\n            });\n        });\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Loads all connection options from a configuration file.\n     *\n     * todo: get in count NODE_ENV somehow\n     */\n    ConnectionOptionsReader.prototype.load = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var foundFileFormat, dotenv, dotenv, connectionOptions;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        foundFileFormat = [\"env\", \"js\", \"ts\", \"json\", \"yml\", \"yaml\", \"xml\"].find(function (format) {\n                            return PlatformTools_1.PlatformTools.fileExist(_this.baseFilePath + \".\" + format);\n                        });\n                        // if .env file found then load all its variables into process.env using dotenv package\n                        if (foundFileFormat === \"env\") {\n                            dotenv = PlatformTools_1.PlatformTools.load(\"dotenv\");\n                            dotenv.config({ path: this.baseFilePath + \".env\" });\n                        }\n                        else if (PlatformTools_1.PlatformTools.fileExist(\".env\")) {\n                            dotenv = PlatformTools_1.PlatformTools.load(\"dotenv\");\n                            dotenv.config({ path: \".env\" });\n                        }\n                        connectionOptions = undefined;\n                        if (!PlatformTools_1.PlatformTools.getEnvVariable(\"TYPEORM_CONNECTION\")) return [3 /*break*/, 1];\n                        connectionOptions = new ConnectionOptionsEnvReader_1.ConnectionOptionsEnvReader().read();\n                        return [3 /*break*/, 8];\n                    case 1:\n                        if (!(foundFileFormat === \"js\")) return [3 /*break*/, 2];\n                        connectionOptions = PlatformTools_1.PlatformTools.load(this.baseFilePath + \".js\");\n                        return [3 /*break*/, 8];\n                    case 2:\n                        if (!(foundFileFormat === \"ts\")) return [3 /*break*/, 3];\n                        connectionOptions = PlatformTools_1.PlatformTools.load(this.baseFilePath + \".ts\");\n                        return [3 /*break*/, 8];\n                    case 3:\n                        if (!(foundFileFormat === \"json\")) return [3 /*break*/, 4];\n                        connectionOptions = PlatformTools_1.PlatformTools.load(this.baseFilePath + \".json\");\n                        return [3 /*break*/, 8];\n                    case 4:\n                        if (!(foundFileFormat === \"yml\")) return [3 /*break*/, 5];\n                        connectionOptions = new ConnectionOptionsYmlReader_1.ConnectionOptionsYmlReader().read(this.baseFilePath + \".yml\");\n                        return [3 /*break*/, 8];\n                    case 5:\n                        if (!(foundFileFormat === \"yaml\")) return [3 /*break*/, 6];\n                        connectionOptions = new ConnectionOptionsYmlReader_1.ConnectionOptionsYmlReader().read(this.baseFilePath + \".yaml\");\n                        return [3 /*break*/, 8];\n                    case 6:\n                        if (!(foundFileFormat === \"xml\")) return [3 /*break*/, 8];\n                        return [4 /*yield*/, new ConnectionOptionsXmlReader_1.ConnectionOptionsXmlReader().read(this.baseFilePath + \".xml\")];\n                    case 7:\n                        connectionOptions = _a.sent();\n                        _a.label = 8;\n                    case 8:\n                        // normalize and return connection options\n                        if (connectionOptions) {\n                            return [2 /*return*/, this.normalizeConnectionOptions(connectionOptions)];\n                        }\n                        return [2 /*return*/, undefined];\n                }\n            });\n        });\n    };\n    /**\n     * Normalize connection options.\n     */\n    ConnectionOptionsReader.prototype.normalizeConnectionOptions = function (connectionOptions) {\n        var _this = this;\n        if (!(connectionOptions instanceof Array))\n            connectionOptions = [connectionOptions];\n        connectionOptions.forEach(function (options) {\n            if (options.entities) {\n                var entities = options.entities.map(function (entity) {\n                    if (typeof entity === \"string\" && entity.substr(0, 1) !== \"/\")\n                        return _this.baseFilePath + \"/\" + entity;\n                    return entity;\n                });\n                Object.assign(connectionOptions, { entities: entities });\n            }\n            if (options.subscribers) {\n                var subscribers = options.subscribers.map(function (subscriber) {\n                    if (typeof subscriber === \"string\" && subscriber.substr(0, 1) !== \"/\")\n                        return _this.baseFilePath + \"/\" + subscriber;\n                    return subscriber;\n                });\n                Object.assign(connectionOptions, { subscribers: subscribers });\n            }\n            if (options.migrations) {\n                var migrations = options.migrations.map(function (migration) {\n                    if (typeof migration === \"string\" && migration.substr(0, 1) !== \"/\")\n                        return _this.baseFilePath + \"/\" + migration;\n                    return migration;\n                });\n                Object.assign(connectionOptions, { migrations: migrations });\n            }\n            // make database path file in sqlite relative to package.json\n            if (options.type === \"sqlite\") {\n                if (typeof options.database === \"string\" &&\n                    options.database.substr(0, 1) !== \"/\" && // unix absolute\n                    options.database.substr(1, 2) !== \":\\\\\" && // windows absolute\n                    options.database !== \":memory:\") {\n                    Object.assign(options, {\n                        database: _this.baseDirectory + \"/\" + options.database\n                    });\n                }\n            }\n        });\n        return connectionOptions;\n    };\n    Object.defineProperty(ConnectionOptionsReader.prototype, \"baseFilePath\", {\n        /**\n         * Gets directory where configuration file should be located and configuration file name without extension.\n         */\n        get: function () {\n            return this.baseDirectory + \"/\" + this.baseConfigName;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ConnectionOptionsReader.prototype, \"baseDirectory\", {\n        /**\n         * Gets directory where configuration file should be located.\n         */\n        get: function () {\n            if (this.options && this.options.root)\n                return this.options.root;\n            return PlatformTools_1.PlatformTools.load(\"app-root-path\").path;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ConnectionOptionsReader.prototype, \"baseConfigName\", {\n        /**\n         * Gets configuration file name.\n         */\n        get: function () {\n            if (this.options && this.options.configName)\n                return this.options.configName;\n            return \"ormconfig\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ConnectionOptionsReader;\n}());\nexports.ConnectionOptionsReader = ConnectionOptionsReader;\n\n//# sourceMappingURL=ConnectionOptionsReader.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/connection/ConnectionOptionsReader.js?");

/***/ }),

/***/ "./node_modules/typeorm/connection/options-reader/ConnectionOptionsEnvReader.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/typeorm/connection/options-reader/ConnectionOptionsEnvReader.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar PlatformTools_1 = __webpack_require__(/*! ../../platform/PlatformTools */ \"./node_modules/typeorm/platform/PlatformTools.js\");\nvar OrmUtils_1 = __webpack_require__(/*! ../../util/OrmUtils */ \"./node_modules/typeorm/util/OrmUtils.js\");\n/**\n * Reads connection options from environment variables.\n * Environment variables can have only a single connection.\n * Its strongly required to define TYPEORM_CONNECTION env variable.\n */\nvar ConnectionOptionsEnvReader = /** @class */ (function () {\n    function ConnectionOptionsEnvReader() {\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Reads connection options from environment variables.\n     */\n    ConnectionOptionsEnvReader.prototype.read = function () {\n        return {\n            type: PlatformTools_1.PlatformTools.getEnvVariable(\"TYPEORM_CONNECTION\"),\n            url: PlatformTools_1.PlatformTools.getEnvVariable(\"TYPEORM_URL\"),\n            host: PlatformTools_1.PlatformTools.getEnvVariable(\"TYPEORM_HOST\"),\n            port: PlatformTools_1.PlatformTools.getEnvVariable(\"TYPEORM_PORT\"),\n            username: PlatformTools_1.PlatformTools.getEnvVariable(\"TYPEORM_USERNAME\"),\n            password: PlatformTools_1.PlatformTools.getEnvVariable(\"TYPEORM_PASSWORD\"),\n            database: PlatformTools_1.PlatformTools.getEnvVariable(\"TYPEORM_DATABASE\"),\n            sid: PlatformTools_1.PlatformTools.getEnvVariable(\"TYPEORM_SID\"),\n            schema: PlatformTools_1.PlatformTools.getEnvVariable(\"TYPEORM_SCHEMA\"),\n            extra: PlatformTools_1.PlatformTools.getEnvVariable(\"TYPEORM_DRIVER_EXTRA\") ? JSON.parse(PlatformTools_1.PlatformTools.getEnvVariable(\"TYPEORM_DRIVER_EXTRA\")) : undefined,\n            synchronize: OrmUtils_1.OrmUtils.toBoolean(PlatformTools_1.PlatformTools.getEnvVariable(\"TYPEORM_SYNCHRONIZE\")),\n            dropSchema: OrmUtils_1.OrmUtils.toBoolean(PlatformTools_1.PlatformTools.getEnvVariable(\"TYPEORM_DROP_SCHEMA\")),\n            migrationsRun: OrmUtils_1.OrmUtils.toBoolean(PlatformTools_1.PlatformTools.getEnvVariable(\"TYPEORM_MIGRATIONS_RUN\")),\n            entities: this.stringToArray(PlatformTools_1.PlatformTools.getEnvVariable(\"TYPEORM_ENTITIES\")),\n            migrations: this.stringToArray(PlatformTools_1.PlatformTools.getEnvVariable(\"TYPEORM_MIGRATIONS\")),\n            subscribers: this.stringToArray(PlatformTools_1.PlatformTools.getEnvVariable(\"TYPEORM_SUBSCRIBERS\")),\n            logging: this.transformLogging(PlatformTools_1.PlatformTools.getEnvVariable(\"TYPEORM_LOGGING\")),\n            logger: PlatformTools_1.PlatformTools.getEnvVariable(\"TYPEORM_LOGGER\"),\n            entityPrefix: PlatformTools_1.PlatformTools.getEnvVariable(\"TYPEORM_ENTITY_PREFIX\"),\n            maxQueryExecutionTime: PlatformTools_1.PlatformTools.getEnvVariable(\"TYPEORM_MAX_QUERY_EXECUTION_TIME\"),\n            cli: {\n                entitiesDir: PlatformTools_1.PlatformTools.getEnvVariable(\"TYPEORM_ENTITIES_DIR\"),\n                migrationsDir: PlatformTools_1.PlatformTools.getEnvVariable(\"TYPEORM_MIGRATIONS_DIR\"),\n                subscribersDir: PlatformTools_1.PlatformTools.getEnvVariable(\"TYPEORM_SUBSCRIBERS_DIR\"),\n            }\n        };\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Transforms logging string into real logging value connection requires.\n     */\n    ConnectionOptionsEnvReader.prototype.transformLogging = function (logging) {\n        if (logging === \"true\" || logging === \"TRUE\" || logging === \"1\")\n            return true;\n        if (logging === \"all\")\n            return \"all\";\n        return this.stringToArray(logging);\n    };\n    /**\n     * Converts a string which contains multiple elements split by comma into a string array of strings.\n     */\n    ConnectionOptionsEnvReader.prototype.stringToArray = function (variable) {\n        if (!variable)\n            return [];\n        return variable.split(\",\").map(function (str) { return str.trim(); });\n    };\n    return ConnectionOptionsEnvReader;\n}());\nexports.ConnectionOptionsEnvReader = ConnectionOptionsEnvReader;\n\n//# sourceMappingURL=ConnectionOptionsEnvReader.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/connection/options-reader/ConnectionOptionsEnvReader.js?");

/***/ }),

/***/ "./node_modules/typeorm/connection/options-reader/ConnectionOptionsXmlReader.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/typeorm/connection/options-reader/ConnectionOptionsXmlReader.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar PlatformTools_1 = __webpack_require__(/*! ../../platform/PlatformTools */ \"./node_modules/typeorm/platform/PlatformTools.js\");\n/**\n * Reads connection options defined in the xml file.\n */\nvar ConnectionOptionsXmlReader = /** @class */ (function () {\n    function ConnectionOptionsXmlReader() {\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Reads connection options from given xml file.\n     */\n    ConnectionOptionsXmlReader.prototype.read = function (path) {\n        return __awaiter(this, void 0, void 0, function () {\n            var xml;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.readXml(path)];\n                    case 1:\n                        xml = _a.sent();\n                        return [2 /*return*/, xml.connection.map(function (connection) {\n                                return {\n                                    name: connection.$.name,\n                                    type: connection.$.type,\n                                    url: connection.url ? connection.url[0] : undefined,\n                                    host: connection.host ? connection.host[0] : undefined,\n                                    port: connection.port && connection.port[0] ? parseInt(connection.port[0]) : undefined,\n                                    username: connection.username ? connection.username[0] : undefined,\n                                    password: connection.password ? connection.password[0] : undefined,\n                                    database: connection.database ? connection.database[0] : undefined,\n                                    sid: connection.sid ? connection.sid[0] : undefined,\n                                    extra: connection.extra ? connection.extra[0] : undefined,\n                                    synchronize: connection.synchronize ? connection.synchronize[0] : undefined,\n                                    entities: connection.entities ? connection.entities[0].entity : [],\n                                    subscribers: connection.subscribers ? connection.subscribers[0].entity : [],\n                                    logging: connection.logging[0] ? connection.logging[0].split(\",\") : undefined,\n                                };\n                            })];\n                }\n            });\n        });\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Reads xml file contents and returns them in a promise.\n     */\n    ConnectionOptionsXmlReader.prototype.readXml = function (path) {\n        var xmlParser = PlatformTools_1.PlatformTools.load(\"xml2js\").parseString;\n        var xmlOptions = { trim: true, explicitRoot: false };\n        return new Promise(function (ok, fail) {\n            xmlParser(PlatformTools_1.PlatformTools.readFileSync(path), xmlOptions, function (err, result) { return err ? fail(err) : ok(result); });\n        });\n    };\n    return ConnectionOptionsXmlReader;\n}());\nexports.ConnectionOptionsXmlReader = ConnectionOptionsXmlReader;\n\n//# sourceMappingURL=ConnectionOptionsXmlReader.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/connection/options-reader/ConnectionOptionsXmlReader.js?");

/***/ }),

/***/ "./node_modules/typeorm/connection/options-reader/ConnectionOptionsYmlReader.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/typeorm/connection/options-reader/ConnectionOptionsYmlReader.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar PlatformTools_1 = __webpack_require__(/*! ../../platform/PlatformTools */ \"./node_modules/typeorm/platform/PlatformTools.js\");\n/**\n * Reads connection options defined in the yml file.\n */\nvar ConnectionOptionsYmlReader = /** @class */ (function () {\n    function ConnectionOptionsYmlReader() {\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Reads connection options from given yml file.\n     */\n    ConnectionOptionsYmlReader.prototype.read = function (path) {\n        var ymlParser = PlatformTools_1.PlatformTools.load(\"js-yaml\");\n        var config = ymlParser.safeLoad(PlatformTools_1.PlatformTools.readFileSync(path));\n        return Object.keys(config).map(function (connectionName) {\n            return Object.assign({ name: connectionName }, config[connectionName]);\n        });\n    };\n    return ConnectionOptionsYmlReader;\n}());\nexports.ConnectionOptionsYmlReader = ConnectionOptionsYmlReader;\n\n//# sourceMappingURL=ConnectionOptionsYmlReader.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/connection/options-reader/ConnectionOptionsYmlReader.js?");

/***/ }),

/***/ "./node_modules/typeorm/container.js":
/*!*******************************************!*\
  !*** ./node_modules/typeorm/container.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Container to be used by this library for inversion control. If container was not implicitly set then by default\n * container simply creates a new instance of the given class.\n */\nvar defaultContainer = new (/** @class */ (function () {\n    function class_1() {\n        this.instances = [];\n    }\n    class_1.prototype.get = function (someClass) {\n        var instance = this.instances.find(function (i) { return i.type === someClass; });\n        if (!instance) {\n            instance = { type: someClass, object: new someClass() };\n            this.instances.push(instance);\n        }\n        return instance.object;\n    };\n    return class_1;\n}()))();\nvar userContainer;\nvar userContainerOptions;\n/**\n * Sets container to be used by this library.\n */\nfunction useContainer(iocContainer, options) {\n    userContainer = iocContainer;\n    userContainerOptions = options;\n}\nexports.useContainer = useContainer;\n/**\n * Gets the IOC container used by this library.\n */\nfunction getFromContainer(someClass) {\n    if (userContainer) {\n        try {\n            var instance = userContainer.get(someClass);\n            if (instance)\n                return instance;\n            if (!userContainerOptions || !userContainerOptions.fallback)\n                return instance;\n        }\n        catch (error) {\n            if (!userContainerOptions || !userContainerOptions.fallbackOnErrors)\n                throw error;\n        }\n    }\n    return defaultContainer.get(someClass);\n}\nexports.getFromContainer = getFromContainer;\n\n//# sourceMappingURL=container.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/container.js?");

/***/ }),

/***/ "./node_modules/typeorm/decorator/Check.js":
/*!*************************************************!*\
  !*** ./node_modules/typeorm/decorator/Check.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _1 = __webpack_require__(/*! ../ */ \"./node_modules/typeorm/index.js\");\n/**\n * Creates a database check.\n * Can be used on entity property or on entity.\n * Can create checks with composite columns when used on entity.\n */\nfunction Check(nameOrExpression, maybeExpression) {\n    var name = maybeExpression ? nameOrExpression : undefined;\n    var expression = maybeExpression ? maybeExpression : nameOrExpression;\n    if (!expression)\n        throw new Error(\"Check expression is required\");\n    return function (clsOrObject, propertyName) {\n        _1.getMetadataArgsStorage().checks.push({\n            target: propertyName ? clsOrObject.constructor : clsOrObject,\n            name: name,\n            expression: expression\n        });\n    };\n}\nexports.Check = Check;\n\n//# sourceMappingURL=Check.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/decorator/Check.js?");

/***/ }),

/***/ "./node_modules/typeorm/decorator/EntityRepository.js":
/*!************************************************************!*\
  !*** ./node_modules/typeorm/decorator/EntityRepository.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _1 = __webpack_require__(/*! ../ */ \"./node_modules/typeorm/index.js\");\n/**\n * Used to declare a class as a custom repository.\n * Custom repository can manage some specific entity or just be generic.\n * Custom repository optionally can extend AbstractRepository, Repository or TreeRepository.\n */\nfunction EntityRepository(entity) {\n    return function (target) {\n        _1.getMetadataArgsStorage().entityRepositories.push({\n            target: target,\n            entity: entity,\n        });\n    };\n}\nexports.EntityRepository = EntityRepository;\n\n//# sourceMappingURL=EntityRepository.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/decorator/EntityRepository.js?");

/***/ }),

/***/ "./node_modules/typeorm/decorator/Generated.js":
/*!*****************************************************!*\
  !*** ./node_modules/typeorm/decorator/Generated.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _1 = __webpack_require__(/*! ../ */ \"./node_modules/typeorm/index.js\");\n/**\n * Marks a column to generate a value on entity insertion.\n * There are two types of generation strategy - increment and uuid.\n * Increment uses a number which increases by one on each insertion.\n * Uuid generates a special UUID token.\n *\n * Note, some databases do not support non-primary generation columns.\n */\nfunction Generated(strategy) {\n    if (strategy === void 0) { strategy = \"increment\"; }\n    return function (object, propertyName) {\n        _1.getMetadataArgsStorage().generations.push({\n            target: object.constructor,\n            propertyName: propertyName,\n            strategy: strategy\n        });\n    };\n}\nexports.Generated = Generated;\n\n//# sourceMappingURL=Generated.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/decorator/Generated.js?");

/***/ }),

/***/ "./node_modules/typeorm/decorator/Index.js":
/*!*************************************************!*\
  !*** ./node_modules/typeorm/decorator/Index.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _1 = __webpack_require__(/*! ../ */ \"./node_modules/typeorm/index.js\");\n/**\n * Creates a database index.\n * Can be used on entity property or on entity.\n * Can create indices with composite columns when used on entity.\n */\nfunction Index(nameOrFieldsOrOptions, maybeFieldsOrOptions, maybeOptions) {\n    // normalize parameters\n    var name = typeof nameOrFieldsOrOptions === \"string\" ? nameOrFieldsOrOptions : undefined;\n    var fields = typeof nameOrFieldsOrOptions === \"string\" ? maybeFieldsOrOptions : nameOrFieldsOrOptions;\n    var options = (typeof nameOrFieldsOrOptions === \"object\" && !Array.isArray(nameOrFieldsOrOptions)) ? nameOrFieldsOrOptions : maybeOptions;\n    if (!options)\n        options = (typeof maybeFieldsOrOptions === \"object\" && !Array.isArray(maybeFieldsOrOptions)) ? maybeFieldsOrOptions : maybeOptions;\n    return function (clsOrObject, propertyName) {\n        _1.getMetadataArgsStorage().indices.push({\n            target: propertyName ? clsOrObject.constructor : clsOrObject,\n            name: name,\n            columns: propertyName ? [propertyName] : fields,\n            synchronize: options && options.synchronize === false ? false : true,\n            where: options ? options.where : undefined,\n            unique: options && options.unique ? true : false,\n            spatial: options && options.spatial ? true : false,\n            fulltext: options && options.fulltext ? true : false,\n            sparse: options && options.sparse ? true : false\n        });\n    };\n}\nexports.Index = Index;\n\n//# sourceMappingURL=Index.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/decorator/Index.js?");

/***/ }),

/***/ "./node_modules/typeorm/decorator/Unique.js":
/*!**************************************************!*\
  !*** ./node_modules/typeorm/decorator/Unique.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar index_1 = __webpack_require__(/*! ../index */ \"./node_modules/typeorm/index.js\");\n/**\n * Composite unique constraint must be set on entity classes and must specify entity's fields to be unique.\n */\nfunction Unique(nameOrFields, maybeFields) {\n    var name = typeof nameOrFields === \"string\" ? nameOrFields : undefined;\n    var fields = typeof nameOrFields === \"string\" ? maybeFields : nameOrFields;\n    return function (clsOrObject, propertyName) {\n        var args = {\n            target: propertyName ? clsOrObject.constructor : clsOrObject,\n            name: name,\n            columns: propertyName ? [propertyName] : fields\n        };\n        index_1.getMetadataArgsStorage().uniques.push(args);\n    };\n}\nexports.Unique = Unique;\n\n//# sourceMappingURL=Unique.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/decorator/Unique.js?");

/***/ }),

/***/ "./node_modules/typeorm/decorator/columns/Column.js":
/*!**********************************************************!*\
  !*** ./node_modules/typeorm/decorator/columns/Column.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _1 = __webpack_require__(/*! ../../ */ \"./node_modules/typeorm/index.js\");\nvar ColumnTypeUndefinedError_1 = __webpack_require__(/*! ../../error/ColumnTypeUndefinedError */ \"./node_modules/typeorm/error/ColumnTypeUndefinedError.js\");\n/**\n * Column decorator is used to mark a specific class property as a table column.\n * Only properties decorated with this decorator will be persisted to the database when entity be saved.\n */\nfunction Column(typeOrOptions, options) {\n    return function (object, propertyName) {\n        // normalize parameters\n        var type;\n        if (typeof typeOrOptions === \"string\" || typeOrOptions instanceof Function) {\n            type = typeOrOptions;\n        }\n        else if (typeOrOptions) {\n            options = typeOrOptions;\n            type = typeOrOptions.type;\n        }\n        if (!options)\n            options = {};\n        // if type is not given explicitly then try to guess it\n        var reflectMetadataType = Reflect && Reflect.getMetadata ? Reflect.getMetadata(\"design:type\", object, propertyName) : undefined;\n        if (!type && reflectMetadataType) // if type is not given explicitly then try to guess it\n            type = reflectMetadataType;\n        // check if there is no type in column options then set type from first function argument, or guessed one\n        if (!options.type && type)\n            options.type = type;\n        // specify HSTORE type if column is HSTORE\n        if (options.type === \"hstore\" && !options.hstoreType)\n            options.hstoreType = reflectMetadataType === Object ? \"object\" : \"string\";\n        if (typeOrOptions instanceof Function) { // register an embedded\n            _1.getMetadataArgsStorage().embeddeds.push({\n                target: object.constructor,\n                propertyName: propertyName,\n                isArray: reflectMetadataType === Array || options.array === true,\n                prefix: options.prefix !== undefined ? options.prefix : undefined,\n                type: typeOrOptions\n            });\n        }\n        else { // register a regular column\n            // if we still don't have a type then we need to give error to user that type is required\n            if (!options.type)\n                throw new ColumnTypeUndefinedError_1.ColumnTypeUndefinedError(object, propertyName);\n            // create unique\n            if (options.unique === true)\n                _1.getMetadataArgsStorage().uniques.push({ target: object.constructor, columns: [propertyName] });\n            _1.getMetadataArgsStorage().columns.push({\n                target: object.constructor,\n                propertyName: propertyName,\n                mode: \"regular\",\n                options: options\n            });\n        }\n    };\n}\nexports.Column = Column;\n\n//# sourceMappingURL=Column.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/decorator/columns/Column.js?");

/***/ }),

/***/ "./node_modules/typeorm/decorator/columns/CreateDateColumn.js":
/*!********************************************************************!*\
  !*** ./node_modules/typeorm/decorator/columns/CreateDateColumn.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _1 = __webpack_require__(/*! ../../ */ \"./node_modules/typeorm/index.js\");\n/**\n * This column will store a creation date of the inserted object.\n * Creation date is generated and inserted only once,\n * at the first time when you create an object, the value is inserted into the table, and is never touched again.\n */\nfunction CreateDateColumn(options) {\n    return function (object, propertyName) {\n        _1.getMetadataArgsStorage().columns.push({\n            target: object.constructor,\n            propertyName: propertyName,\n            mode: \"createDate\",\n            options: options || {}\n        });\n    };\n}\nexports.CreateDateColumn = CreateDateColumn;\n\n//# sourceMappingURL=CreateDateColumn.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/decorator/columns/CreateDateColumn.js?");

/***/ }),

/***/ "./node_modules/typeorm/decorator/columns/ObjectIdColumn.js":
/*!******************************************************************!*\
  !*** ./node_modules/typeorm/decorator/columns/ObjectIdColumn.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _1 = __webpack_require__(/*! ../../ */ \"./node_modules/typeorm/index.js\");\n/**\n * Special type of column that is available only for MongoDB database.\n * Marks your entity's column to be an object id.\n */\nfunction ObjectIdColumn(options) {\n    return function (object, propertyName) {\n        // if column options are not given then create a new empty options\n        if (!options)\n            options = {};\n        options.primary = true;\n        if (!options.name)\n            options.name = \"_id\";\n        // create and register a new column metadata\n        _1.getMetadataArgsStorage().columns.push({\n            target: object.constructor,\n            propertyName: propertyName,\n            mode: \"objectId\",\n            options: options\n        });\n    };\n}\nexports.ObjectIdColumn = ObjectIdColumn;\n\n//# sourceMappingURL=ObjectIdColumn.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/decorator/columns/ObjectIdColumn.js?");

/***/ }),

/***/ "./node_modules/typeorm/decorator/columns/PrimaryColumn.js":
/*!*****************************************************************!*\
  !*** ./node_modules/typeorm/decorator/columns/PrimaryColumn.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _1 = __webpack_require__(/*! ../../ */ \"./node_modules/typeorm/index.js\");\nvar ColumnTypeUndefinedError_1 = __webpack_require__(/*! ../../error/ColumnTypeUndefinedError */ \"./node_modules/typeorm/error/ColumnTypeUndefinedError.js\");\nvar PrimaryColumnCannotBeNullableError_1 = __webpack_require__(/*! ../../error/PrimaryColumnCannotBeNullableError */ \"./node_modules/typeorm/error/PrimaryColumnCannotBeNullableError.js\");\n/**\n * Column decorator is used to mark a specific class property as a table column.\n * Only properties decorated with this decorator will be persisted to the database when entity be saved.\n * Primary columns also creates a PRIMARY KEY for this column in a db.\n */\nfunction PrimaryColumn(typeOrOptions, options) {\n    return function (object, propertyName) {\n        // normalize parameters\n        var type;\n        if (typeof typeOrOptions === \"string\") {\n            type = typeOrOptions;\n        }\n        else {\n            options = typeOrOptions;\n        }\n        if (!options)\n            options = {};\n        // if type is not given explicitly then try to guess it\n        var reflectMetadataType = Reflect && Reflect.getMetadata ? Reflect.getMetadata(\"design:type\", object, propertyName) : undefined;\n        if (!type && reflectMetadataType)\n            type = reflectMetadataType;\n        // check if there is no type in column options then set type from first function argument, or guessed one\n        if (!options.type && type)\n            options.type = type;\n        // if we still don't have a type then we need to give error to user that type is required\n        if (!options.type)\n            throw new ColumnTypeUndefinedError_1.ColumnTypeUndefinedError(object, propertyName);\n        // check if column is not nullable, because we cannot allow a primary key to be nullable\n        if (options.nullable)\n            throw new PrimaryColumnCannotBeNullableError_1.PrimaryColumnCannotBeNullableError(object, propertyName);\n        // explicitly set a primary to column options\n        options.primary = true;\n        // create and register a new column metadata\n        _1.getMetadataArgsStorage().columns.push({\n            target: object.constructor,\n            propertyName: propertyName,\n            mode: \"regular\",\n            options: options\n        });\n    };\n}\nexports.PrimaryColumn = PrimaryColumn;\n\n//# sourceMappingURL=PrimaryColumn.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/decorator/columns/PrimaryColumn.js?");

/***/ }),

/***/ "./node_modules/typeorm/decorator/columns/PrimaryGeneratedColumn.js":
/*!**************************************************************************!*\
  !*** ./node_modules/typeorm/decorator/columns/PrimaryGeneratedColumn.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _1 = __webpack_require__(/*! ../../ */ \"./node_modules/typeorm/index.js\");\n/**\n * Column decorator is used to mark a specific class property as a table column.\n * Only properties decorated with this decorator will be persisted to the database when entity be saved.\n * This column creates an integer PRIMARY COLUMN with generated set to true.\n */\nfunction PrimaryGeneratedColumn(strategyOrOptions, maybeOptions) {\n    // normalize parameters\n    var options = {};\n    var strategy;\n    if (strategyOrOptions) {\n        if (typeof strategyOrOptions === \"string\")\n            strategy = strategyOrOptions;\n        if (strategyOrOptions instanceof Object) {\n            strategy = \"increment\";\n            Object.assign(options, strategyOrOptions);\n        }\n    }\n    else {\n        strategy = \"increment\";\n    }\n    if (maybeOptions instanceof Object)\n        Object.assign(options, maybeOptions);\n    return function (object, propertyName) {\n        // if column type is not explicitly set then determine it based on generation strategy\n        if (!options.type)\n            options.type = strategy === \"increment\" ? Number : \"uuid\";\n        // explicitly set a primary and generated to column options\n        options.primary = true;\n        // register column metadata args\n        _1.getMetadataArgsStorage().columns.push({\n            target: object.constructor,\n            propertyName: propertyName,\n            mode: \"regular\",\n            options: options\n        });\n        // register generated metadata args\n        _1.getMetadataArgsStorage().generations.push({\n            target: object.constructor,\n            propertyName: propertyName,\n            strategy: strategy\n        });\n    };\n}\nexports.PrimaryGeneratedColumn = PrimaryGeneratedColumn;\n\n//# sourceMappingURL=PrimaryGeneratedColumn.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/decorator/columns/PrimaryGeneratedColumn.js?");

/***/ }),

/***/ "./node_modules/typeorm/decorator/columns/UpdateDateColumn.js":
/*!********************************************************************!*\
  !*** ./node_modules/typeorm/decorator/columns/UpdateDateColumn.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _1 = __webpack_require__(/*! ../../ */ \"./node_modules/typeorm/index.js\");\n/**\n * This column will store an update date of the updated object.\n * This date is being updated each time you persist the object.\n */\nfunction UpdateDateColumn(options) {\n    return function (object, propertyName) {\n        _1.getMetadataArgsStorage().columns.push({\n            target: object.constructor,\n            propertyName: propertyName,\n            mode: \"updateDate\",\n            options: options ? options : {}\n        });\n    };\n}\nexports.UpdateDateColumn = UpdateDateColumn;\n\n//# sourceMappingURL=UpdateDateColumn.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/decorator/columns/UpdateDateColumn.js?");

/***/ }),

/***/ "./node_modules/typeorm/decorator/columns/VersionColumn.js":
/*!*****************************************************************!*\
  !*** ./node_modules/typeorm/decorator/columns/VersionColumn.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _1 = __webpack_require__(/*! ../../ */ \"./node_modules/typeorm/index.js\");\n/**\n * This column will store a number - version of the entity.\n * Every time your entity will be persisted, this number will be increased by one -\n * so you can organize visioning and update strategies of your entity.\n */\nfunction VersionColumn(options) {\n    return function (object, propertyName) {\n        _1.getMetadataArgsStorage().columns.push({\n            target: object.constructor,\n            propertyName: propertyName,\n            mode: \"version\",\n            options: options || {}\n        });\n    };\n}\nexports.VersionColumn = VersionColumn;\n\n//# sourceMappingURL=VersionColumn.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/decorator/columns/VersionColumn.js?");

/***/ }),

/***/ "./node_modules/typeorm/decorator/entity/ChildEntity.js":
/*!**************************************************************!*\
  !*** ./node_modules/typeorm/decorator/entity/ChildEntity.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _1 = __webpack_require__(/*! ../../ */ \"./node_modules/typeorm/index.js\");\n/**\n * Special type of the table used in the single-table inherited tables.\n */\nfunction ChildEntity(discriminatorValue) {\n    return function (target) {\n        // register a table metadata\n        _1.getMetadataArgsStorage().tables.push({\n            target: target,\n            type: \"entity-child\",\n        });\n        // register discriminator value if it was provided\n        if (discriminatorValue) {\n            _1.getMetadataArgsStorage().discriminatorValues.push({\n                target: target,\n                value: discriminatorValue\n            });\n        }\n    };\n}\nexports.ChildEntity = ChildEntity;\n\n//# sourceMappingURL=ChildEntity.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/decorator/entity/ChildEntity.js?");

/***/ }),

/***/ "./node_modules/typeorm/decorator/entity/Entity.js":
/*!*********************************************************!*\
  !*** ./node_modules/typeorm/decorator/entity/Entity.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _1 = __webpack_require__(/*! ../../ */ \"./node_modules/typeorm/index.js\");\n/**\n * This decorator is used to mark classes that will be an entity (table or document depend on database type).\n * Database schema will be created for all classes decorated with it, and Repository can be retrieved and used for it.\n */\nfunction Entity(nameOrOptions, maybeOptions) {\n    var options = (typeof nameOrOptions === \"object\" ? nameOrOptions : maybeOptions) || {};\n    var name = typeof nameOrOptions === \"string\" ? nameOrOptions : options.name;\n    return function (target) {\n        _1.getMetadataArgsStorage().tables.push({\n            target: target,\n            name: name,\n            type: \"regular\",\n            orderBy: options.orderBy ? options.orderBy : undefined,\n            engine: options.engine ? options.engine : undefined,\n            database: options.database ? options.database : undefined,\n            schema: options.schema ? options.schema : undefined,\n            synchronize: options.synchronize\n        });\n    };\n}\nexports.Entity = Entity;\n\n//# sourceMappingURL=Entity.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/decorator/entity/Entity.js?");

/***/ }),

/***/ "./node_modules/typeorm/decorator/entity/TableInheritance.js":
/*!*******************************************************************!*\
  !*** ./node_modules/typeorm/decorator/entity/TableInheritance.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _1 = __webpack_require__(/*! ../../ */ \"./node_modules/typeorm/index.js\");\n/**\n * Sets for entity to use table inheritance pattern.\n */\nfunction TableInheritance(options) {\n    return function (target) {\n        _1.getMetadataArgsStorage().inheritances.push({\n            target: target,\n            pattern: options && options.pattern ? options.pattern : \"STI\",\n            column: options && options.column ? typeof options.column === \"string\" ? { name: options.column } : options.column : undefined\n        });\n    };\n}\nexports.TableInheritance = TableInheritance;\n\n//# sourceMappingURL=TableInheritance.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/decorator/entity/TableInheritance.js?");

/***/ }),

/***/ "./node_modules/typeorm/decorator/listeners/AfterInsert.js":
/*!*****************************************************************!*\
  !*** ./node_modules/typeorm/decorator/listeners/AfterInsert.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _1 = __webpack_require__(/*! ../../ */ \"./node_modules/typeorm/index.js\");\nvar EventListenerTypes_1 = __webpack_require__(/*! ../../metadata/types/EventListenerTypes */ \"./node_modules/typeorm/metadata/types/EventListenerTypes.js\");\n/**\n * Calls a method on which this decorator is applied after this entity insertion.\n */\nfunction AfterInsert() {\n    return function (object, propertyName) {\n        _1.getMetadataArgsStorage().entityListeners.push({\n            target: object.constructor,\n            propertyName: propertyName,\n            type: EventListenerTypes_1.EventListenerTypes.AFTER_INSERT\n        });\n    };\n}\nexports.AfterInsert = AfterInsert;\n\n//# sourceMappingURL=AfterInsert.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/decorator/listeners/AfterInsert.js?");

/***/ }),

/***/ "./node_modules/typeorm/decorator/listeners/AfterLoad.js":
/*!***************************************************************!*\
  !*** ./node_modules/typeorm/decorator/listeners/AfterLoad.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _1 = __webpack_require__(/*! ../../ */ \"./node_modules/typeorm/index.js\");\nvar EventListenerTypes_1 = __webpack_require__(/*! ../../metadata/types/EventListenerTypes */ \"./node_modules/typeorm/metadata/types/EventListenerTypes.js\");\n/**\n * Calls a method on which this decorator is applied after entity is loaded.\n */\nfunction AfterLoad() {\n    return function (object, propertyName) {\n        _1.getMetadataArgsStorage().entityListeners.push({\n            target: object.constructor,\n            propertyName: propertyName,\n            type: EventListenerTypes_1.EventListenerTypes.AFTER_LOAD\n        });\n    };\n}\nexports.AfterLoad = AfterLoad;\n\n//# sourceMappingURL=AfterLoad.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/decorator/listeners/AfterLoad.js?");

/***/ }),

/***/ "./node_modules/typeorm/decorator/listeners/AfterRemove.js":
/*!*****************************************************************!*\
  !*** ./node_modules/typeorm/decorator/listeners/AfterRemove.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _1 = __webpack_require__(/*! ../../ */ \"./node_modules/typeorm/index.js\");\nvar EventListenerTypes_1 = __webpack_require__(/*! ../../metadata/types/EventListenerTypes */ \"./node_modules/typeorm/metadata/types/EventListenerTypes.js\");\n/**\n * Calls a method on which this decorator is applied after this entity removal.\n */\nfunction AfterRemove() {\n    return function (object, propertyName) {\n        _1.getMetadataArgsStorage().entityListeners.push({\n            target: object.constructor,\n            propertyName: propertyName,\n            type: EventListenerTypes_1.EventListenerTypes.AFTER_REMOVE\n        });\n    };\n}\nexports.AfterRemove = AfterRemove;\n\n//# sourceMappingURL=AfterRemove.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/decorator/listeners/AfterRemove.js?");

/***/ }),

/***/ "./node_modules/typeorm/decorator/listeners/AfterUpdate.js":
/*!*****************************************************************!*\
  !*** ./node_modules/typeorm/decorator/listeners/AfterUpdate.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _1 = __webpack_require__(/*! ../../ */ \"./node_modules/typeorm/index.js\");\nvar EventListenerTypes_1 = __webpack_require__(/*! ../../metadata/types/EventListenerTypes */ \"./node_modules/typeorm/metadata/types/EventListenerTypes.js\");\n/**\n * Calls a method on which this decorator is applied after this entity update.\n */\nfunction AfterUpdate() {\n    return function (object, propertyName) {\n        _1.getMetadataArgsStorage().entityListeners.push({\n            target: object.constructor,\n            propertyName: propertyName,\n            type: EventListenerTypes_1.EventListenerTypes.AFTER_UPDATE\n        });\n    };\n}\nexports.AfterUpdate = AfterUpdate;\n\n//# sourceMappingURL=AfterUpdate.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/decorator/listeners/AfterUpdate.js?");

/***/ }),

/***/ "./node_modules/typeorm/decorator/listeners/BeforeInsert.js":
/*!******************************************************************!*\
  !*** ./node_modules/typeorm/decorator/listeners/BeforeInsert.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _1 = __webpack_require__(/*! ../../ */ \"./node_modules/typeorm/index.js\");\nvar EventListenerTypes_1 = __webpack_require__(/*! ../../metadata/types/EventListenerTypes */ \"./node_modules/typeorm/metadata/types/EventListenerTypes.js\");\n/**\n * Calls a method on which this decorator is applied before this entity insertion.\n */\nfunction BeforeInsert() {\n    return function (object, propertyName) {\n        _1.getMetadataArgsStorage().entityListeners.push({\n            target: object.constructor,\n            propertyName: propertyName,\n            type: EventListenerTypes_1.EventListenerTypes.BEFORE_INSERT\n        });\n    };\n}\nexports.BeforeInsert = BeforeInsert;\n\n//# sourceMappingURL=BeforeInsert.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/decorator/listeners/BeforeInsert.js?");

/***/ }),

/***/ "./node_modules/typeorm/decorator/listeners/BeforeRemove.js":
/*!******************************************************************!*\
  !*** ./node_modules/typeorm/decorator/listeners/BeforeRemove.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _1 = __webpack_require__(/*! ../../ */ \"./node_modules/typeorm/index.js\");\nvar EventListenerTypes_1 = __webpack_require__(/*! ../../metadata/types/EventListenerTypes */ \"./node_modules/typeorm/metadata/types/EventListenerTypes.js\");\n/**\n * Calls a method on which this decorator is applied before this entity removal.\n */\nfunction BeforeRemove() {\n    return function (object, propertyName) {\n        _1.getMetadataArgsStorage().entityListeners.push({\n            target: object.constructor,\n            propertyName: propertyName,\n            type: EventListenerTypes_1.EventListenerTypes.BEFORE_REMOVE\n        });\n    };\n}\nexports.BeforeRemove = BeforeRemove;\n\n//# sourceMappingURL=BeforeRemove.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/decorator/listeners/BeforeRemove.js?");

/***/ }),

/***/ "./node_modules/typeorm/decorator/listeners/BeforeUpdate.js":
/*!******************************************************************!*\
  !*** ./node_modules/typeorm/decorator/listeners/BeforeUpdate.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _1 = __webpack_require__(/*! ../../ */ \"./node_modules/typeorm/index.js\");\nvar EventListenerTypes_1 = __webpack_require__(/*! ../../metadata/types/EventListenerTypes */ \"./node_modules/typeorm/metadata/types/EventListenerTypes.js\");\n/**\n * Calls a method on which this decorator is applied before this entity update.\n */\nfunction BeforeUpdate() {\n    return function (object, propertyName) {\n        _1.getMetadataArgsStorage().entityListeners.push({\n            target: object.constructor,\n            propertyName: propertyName,\n            type: EventListenerTypes_1.EventListenerTypes.BEFORE_UPDATE\n        });\n    };\n}\nexports.BeforeUpdate = BeforeUpdate;\n\n//# sourceMappingURL=BeforeUpdate.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/decorator/listeners/BeforeUpdate.js?");

/***/ }),

/***/ "./node_modules/typeorm/decorator/listeners/EventSubscriber.js":
/*!*********************************************************************!*\
  !*** ./node_modules/typeorm/decorator/listeners/EventSubscriber.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _1 = __webpack_require__(/*! ../../ */ \"./node_modules/typeorm/index.js\");\n/**\n * Classes decorated with this decorator will listen to ORM events and their methods will be triggered when event\n * occurs. Those classes must implement EventSubscriberInterface interface.\n */\nfunction EventSubscriber() {\n    return function (target) {\n        _1.getMetadataArgsStorage().entitySubscribers.push({\n            target: target\n        });\n    };\n}\nexports.EventSubscriber = EventSubscriber;\n\n//# sourceMappingURL=EventSubscriber.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/decorator/listeners/EventSubscriber.js?");

/***/ }),

/***/ "./node_modules/typeorm/decorator/relations/JoinColumn.js":
/*!****************************************************************!*\
  !*** ./node_modules/typeorm/decorator/relations/JoinColumn.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _1 = __webpack_require__(/*! ../../ */ \"./node_modules/typeorm/index.js\");\n/**\n * JoinColumn decorator used on one-to-one relations to specify owner side of relationship.\n * It also can be used on both one-to-one and many-to-one relations to specify custom column name\n * or custom referenced column.\n */\nfunction JoinColumn(optionsOrOptionsArray) {\n    return function (object, propertyName) {\n        var options = optionsOrOptionsArray instanceof Array ? optionsOrOptionsArray : [optionsOrOptionsArray || {}];\n        options.forEach(function (options) {\n            _1.getMetadataArgsStorage().joinColumns.push({\n                target: object.constructor,\n                propertyName: propertyName,\n                name: options.name,\n                referencedColumnName: options.referencedColumnName\n            });\n        });\n    };\n}\nexports.JoinColumn = JoinColumn;\n\n//# sourceMappingURL=JoinColumn.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/decorator/relations/JoinColumn.js?");

/***/ }),

/***/ "./node_modules/typeorm/decorator/relations/JoinTable.js":
/*!***************************************************************!*\
  !*** ./node_modules/typeorm/decorator/relations/JoinTable.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _1 = __webpack_require__(/*! ../../ */ \"./node_modules/typeorm/index.js\");\n/**\n * JoinTable decorator is used in many-to-many relationship to specify owner side of relationship.\n * Its also used to set a custom junction table's name, column names and referenced columns.\n */\nfunction JoinTable(options) {\n    return function (object, propertyName) {\n        options = options || {};\n        _1.getMetadataArgsStorage().joinTables.push({\n            target: object.constructor,\n            propertyName: propertyName,\n            name: options.name,\n            joinColumns: (options && options.joinColumn ? [options.joinColumn] : options.joinColumns),\n            inverseJoinColumns: (options && options.inverseJoinColumn ? [options.inverseJoinColumn] : options.inverseJoinColumns),\n            schema: options && options.schema ? options.schema : undefined,\n            database: options && options.database ? options.database : undefined,\n        });\n    };\n}\nexports.JoinTable = JoinTable;\n\n//# sourceMappingURL=JoinTable.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/decorator/relations/JoinTable.js?");

/***/ }),

/***/ "./node_modules/typeorm/decorator/relations/ManyToMany.js":
/*!****************************************************************!*\
  !*** ./node_modules/typeorm/decorator/relations/ManyToMany.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _1 = __webpack_require__(/*! ../../ */ \"./node_modules/typeorm/index.js\");\n/**\n * Many-to-many is a type of relationship when Entity1 can have multiple instances of Entity2, and Entity2 can have\n * multiple instances of Entity1. To achieve it, this type of relation creates a junction table, where it storage\n * entity1 and entity2 ids. This is owner side of the relationship.\n */\nfunction ManyToMany(typeFunction, inverseSideOrOptions, options) {\n    // normalize parameters\n    var inverseSideProperty;\n    if (typeof inverseSideOrOptions === \"object\") {\n        options = inverseSideOrOptions;\n    }\n    else {\n        inverseSideProperty = inverseSideOrOptions;\n    }\n    return function (object, propertyName) {\n        if (!options)\n            options = {};\n        // now try to determine it its lazy relation\n        var isLazy = options.lazy === true;\n        if (!isLazy && Reflect && Reflect.getMetadata) { // automatic determination\n            var reflectedType = Reflect.getMetadata(\"design:type\", object, propertyName);\n            if (reflectedType && typeof reflectedType.name === \"string\" && reflectedType.name.toLowerCase() === \"promise\")\n                isLazy = true;\n        }\n        _1.getMetadataArgsStorage().relations.push({\n            target: object.constructor,\n            propertyName: propertyName,\n            // propertyType: reflectedType,\n            relationType: \"many-to-many\",\n            isLazy: isLazy,\n            type: typeFunction,\n            inverseSideProperty: inverseSideProperty,\n            options: options\n        });\n    };\n}\nexports.ManyToMany = ManyToMany;\n\n//# sourceMappingURL=ManyToMany.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/decorator/relations/ManyToMany.js?");

/***/ }),

/***/ "./node_modules/typeorm/decorator/relations/ManyToOne.js":
/*!***************************************************************!*\
  !*** ./node_modules/typeorm/decorator/relations/ManyToOne.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _1 = __webpack_require__(/*! ../../ */ \"./node_modules/typeorm/index.js\");\n/**\n * Many-to-one relation allows to create type of relation when Entity1 can have single instance of Entity2, but\n * Entity2 can have a multiple instances of Entity1. Entity1 is an owner of the relationship, and storages Entity2 id\n * on its own side.\n */\nfunction ManyToOne(typeFunction, inverseSideOrOptions, options) {\n    // normalize parameters\n    var inverseSideProperty;\n    if (typeof inverseSideOrOptions === \"object\") {\n        options = inverseSideOrOptions;\n    }\n    else {\n        inverseSideProperty = inverseSideOrOptions;\n    }\n    return function (object, propertyName) {\n        if (!options)\n            options = {};\n        // now try to determine it its lazy relation\n        var isLazy = options && options.lazy === true ? true : false;\n        if (!isLazy && Reflect && Reflect.getMetadata) { // automatic determination\n            var reflectedType = Reflect.getMetadata(\"design:type\", object, propertyName);\n            if (reflectedType && typeof reflectedType.name === \"string\" && reflectedType.name.toLowerCase() === \"promise\")\n                isLazy = true;\n        }\n        _1.getMetadataArgsStorage().relations.push({\n            target: object.constructor,\n            propertyName: propertyName,\n            // propertyType: reflectedType,\n            relationType: \"many-to-one\",\n            isLazy: isLazy,\n            type: typeFunction,\n            inverseSideProperty: inverseSideProperty,\n            options: options\n        });\n    };\n}\nexports.ManyToOne = ManyToOne;\n\n//# sourceMappingURL=ManyToOne.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/decorator/relations/ManyToOne.js?");

/***/ }),

/***/ "./node_modules/typeorm/decorator/relations/OneToMany.js":
/*!***************************************************************!*\
  !*** ./node_modules/typeorm/decorator/relations/OneToMany.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _1 = __webpack_require__(/*! ../../ */ \"./node_modules/typeorm/index.js\");\n/**\n * One-to-many relation allows to create type of relation when Entity2 can have multiple instances of Entity1.\n * Entity1 have only one Entity2. Entity1 is an owner of the relationship, and storages Entity2 id on its own side.\n */\nfunction OneToMany(typeFunction, inverseSide, options) {\n    return function (object, propertyName) {\n        if (!options)\n            options = {};\n        // now try to determine it its lazy relation\n        var isLazy = options && options.lazy === true ? true : false;\n        if (!isLazy && Reflect && Reflect.getMetadata) { // automatic determination\n            var reflectedType = Reflect.getMetadata(\"design:type\", object, propertyName);\n            if (reflectedType && typeof reflectedType.name === \"string\" && reflectedType.name.toLowerCase() === \"promise\")\n                isLazy = true;\n        }\n        _1.getMetadataArgsStorage().relations.push({\n            target: object.constructor,\n            propertyName: propertyName,\n            // propertyType: reflectedType,\n            isLazy: isLazy,\n            relationType: \"one-to-many\",\n            type: typeFunction,\n            inverseSideProperty: inverseSide,\n            options: options\n        });\n    };\n}\nexports.OneToMany = OneToMany;\n\n//# sourceMappingURL=OneToMany.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/decorator/relations/OneToMany.js?");

/***/ }),

/***/ "./node_modules/typeorm/decorator/relations/OneToOne.js":
/*!**************************************************************!*\
  !*** ./node_modules/typeorm/decorator/relations/OneToOne.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _1 = __webpack_require__(/*! ../../ */ \"./node_modules/typeorm/index.js\");\n/**\n * One-to-one relation allows to create direct relation between two entities. Entity1 have only one Entity2.\n * Entity1 is an owner of the relationship, and storages Entity1 id on its own side.\n */\nfunction OneToOne(typeFunction, inverseSideOrOptions, options) {\n    // normalize parameters\n    var inverseSideProperty;\n    if (typeof inverseSideOrOptions === \"object\") {\n        options = inverseSideOrOptions;\n    }\n    else {\n        inverseSideProperty = inverseSideOrOptions;\n    }\n    return function (object, propertyName) {\n        if (!options)\n            options = {};\n        // now try to determine it its lazy relation\n        var isLazy = options && options.lazy === true ? true : false;\n        if (!isLazy && Reflect && Reflect.getMetadata) { // automatic determination\n            var reflectedType = Reflect.getMetadata(\"design:type\", object, propertyName);\n            if (reflectedType && typeof reflectedType.name === \"string\" && reflectedType.name.toLowerCase() === \"promise\")\n                isLazy = true;\n        }\n        _1.getMetadataArgsStorage().relations.push({\n            target: object.constructor,\n            propertyName: propertyName,\n            // propertyType: reflectedType,\n            isLazy: isLazy,\n            relationType: \"one-to-one\",\n            type: typeFunction,\n            inverseSideProperty: inverseSideProperty,\n            options: options\n        });\n    };\n}\nexports.OneToOne = OneToOne;\n\n//# sourceMappingURL=OneToOne.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/decorator/relations/OneToOne.js?");

/***/ }),

/***/ "./node_modules/typeorm/decorator/relations/RelationCount.js":
/*!*******************************************************************!*\
  !*** ./node_modules/typeorm/decorator/relations/RelationCount.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _1 = __webpack_require__(/*! ../../ */ \"./node_modules/typeorm/index.js\");\n/**\n * Holds a number of children in the closure table of the column.\n *\n * @deprecated Do not use this decorator, it may be removed in the future versions\n */\nfunction RelationCount(relation, alias, queryBuilderFactory) {\n    return function (object, propertyName) {\n        _1.getMetadataArgsStorage().relationCounts.push({\n            target: object.constructor,\n            propertyName: propertyName,\n            relation: relation,\n            alias: alias,\n            queryBuilderFactory: queryBuilderFactory\n        });\n    };\n}\nexports.RelationCount = RelationCount;\n\n//# sourceMappingURL=RelationCount.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/decorator/relations/RelationCount.js?");

/***/ }),

/***/ "./node_modules/typeorm/decorator/relations/RelationId.js":
/*!****************************************************************!*\
  !*** ./node_modules/typeorm/decorator/relations/RelationId.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _1 = __webpack_require__(/*! ../../ */ \"./node_modules/typeorm/index.js\");\n/**\n * Special decorator used to extract relation id into separate entity property.\n *\n * @experimental\n */\nfunction RelationId(relation, alias, queryBuilderFactory) {\n    return function (object, propertyName) {\n        _1.getMetadataArgsStorage().relationIds.push({\n            target: object.constructor,\n            propertyName: propertyName,\n            relation: relation,\n            alias: alias,\n            queryBuilderFactory: queryBuilderFactory\n        });\n    };\n}\nexports.RelationId = RelationId;\n\n//# sourceMappingURL=RelationId.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/decorator/relations/RelationId.js?");

/***/ }),

/***/ "./node_modules/typeorm/decorator/transaction/Transaction.js":
/*!*******************************************************************!*\
  !*** ./node_modules/typeorm/decorator/transaction/Transaction.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _1 = __webpack_require__(/*! ../../ */ \"./node_modules/typeorm/index.js\");\nfunction Transaction(connectionOrOptions) {\n    return function (target, methodName, descriptor) {\n        // save original method - we gonna need it\n        var originalMethod = descriptor.value;\n        // override method descriptor with proxy method\n        descriptor.value = function () {\n            var _this = this;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var connectionName = \"default\";\n            var isolationLevel = undefined;\n            if (connectionOrOptions) {\n                if (typeof connectionOrOptions === \"string\") {\n                    connectionName = connectionOrOptions;\n                }\n                else {\n                    if (connectionOrOptions.hasOwnProperty(\"connectionName\") && connectionOrOptions.connectionName) {\n                        connectionName = connectionOrOptions.connectionName;\n                    }\n                    if (connectionOrOptions.hasOwnProperty(\"isolation\") && connectionOrOptions.isolationLevel) {\n                        isolationLevel = connectionOrOptions.isolationLevel;\n                    }\n                }\n            }\n            var transactionCallback = function (entityManager) {\n                var argsWithInjectedTransactionManagerAndRepositories;\n                // filter all @TransactionEntityManager() and @TransactionRepository() decorator usages for this method\n                var transactionEntityManagerMetadatas = _1.getMetadataArgsStorage()\n                    .filterTransactionEntityManagers(target.constructor, methodName)\n                    .reverse();\n                var transactionRepositoryMetadatas = _1.getMetadataArgsStorage()\n                    .filterTransactionRepository(target.constructor, methodName)\n                    .reverse();\n                // if there are @TransactionEntityManager() decorator usages the inject them\n                if (transactionEntityManagerMetadatas.length > 0) {\n                    argsWithInjectedTransactionManagerAndRepositories = __spread(args);\n                    // replace method params with injection of transactionEntityManager\n                    transactionEntityManagerMetadatas.forEach(function (metadata) {\n                        argsWithInjectedTransactionManagerAndRepositories.splice(metadata.index, 0, entityManager);\n                    });\n                }\n                else if (transactionRepositoryMetadatas.length === 0) { // otherwise if there's no transaction repositories in use, inject it as a first parameter\n                    argsWithInjectedTransactionManagerAndRepositories = __spread([entityManager], args);\n                }\n                else {\n                    argsWithInjectedTransactionManagerAndRepositories = __spread(args);\n                }\n                // for every usage of @TransactionRepository decorator\n                transactionRepositoryMetadatas.forEach(function (metadata) {\n                    var repositoryInstance;\n                    // detect type of the repository and get instance from transaction entity manager\n                    switch (metadata.repositoryType) {\n                        case _1.Repository:\n                            repositoryInstance = entityManager.getRepository(metadata.entityType);\n                            break;\n                        case _1.MongoRepository:\n                            repositoryInstance = entityManager.getMongoRepository(metadata.entityType);\n                            break;\n                        case _1.TreeRepository:\n                            repositoryInstance = entityManager.getTreeRepository(metadata.entityType);\n                            break;\n                        // if not the TypeORM's ones, there must be custom repository classes\n                        default:\n                            repositoryInstance = entityManager.getCustomRepository(metadata.repositoryType);\n                    }\n                    // replace method param with injection of repository instance\n                    argsWithInjectedTransactionManagerAndRepositories.splice(metadata.index, 0, repositoryInstance);\n                });\n                return originalMethod.apply(_this, argsWithInjectedTransactionManagerAndRepositories);\n            };\n            if (isolationLevel) {\n                return _1.getConnection(connectionName).manager.transaction(isolationLevel, transactionCallback);\n            }\n            else {\n                return _1.getConnection(connectionName).manager.transaction(transactionCallback);\n            }\n        };\n    };\n}\nexports.Transaction = Transaction;\n\n//# sourceMappingURL=Transaction.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/decorator/transaction/Transaction.js?");

/***/ }),

/***/ "./node_modules/typeorm/decorator/transaction/TransactionManager.js":
/*!**************************************************************************!*\
  !*** ./node_modules/typeorm/decorator/transaction/TransactionManager.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _1 = __webpack_require__(/*! ../../ */ \"./node_modules/typeorm/index.js\");\n/**\n * Injects transaction's entity manager into the method wrapped with @Transaction decorator.\n */\nfunction TransactionManager() {\n    return function (object, methodName, index) {\n        _1.getMetadataArgsStorage().transactionEntityManagers.push({\n            target: object.constructor,\n            methodName: methodName,\n            index: index,\n        });\n    };\n}\nexports.TransactionManager = TransactionManager;\n\n//# sourceMappingURL=TransactionManager.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/decorator/transaction/TransactionManager.js?");

/***/ }),

/***/ "./node_modules/typeorm/decorator/transaction/TransactionRepository.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/typeorm/decorator/transaction/TransactionRepository.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _1 = __webpack_require__(/*! ../../ */ \"./node_modules/typeorm/index.js\");\nvar CannotReflectMethodParameterTypeError_1 = __webpack_require__(/*! ../../error/CannotReflectMethodParameterTypeError */ \"./node_modules/typeorm/error/CannotReflectMethodParameterTypeError.js\");\n/**\n * Injects transaction's repository into the method wrapped with @Transaction decorator.\n */\nfunction TransactionRepository(entityType) {\n    return function (object, methodName, index) {\n        // get repository type\n        var repositoryType;\n        try {\n            repositoryType = Reflect.getOwnMetadata(\"design:paramtypes\", object, methodName)[index];\n        }\n        catch (err) {\n            throw new CannotReflectMethodParameterTypeError_1.CannotReflectMethodParameterTypeError(object.constructor, methodName);\n        }\n        _1.getMetadataArgsStorage().transactionRepositories.push({\n            target: object.constructor,\n            methodName: methodName,\n            index: index,\n            repositoryType: repositoryType,\n            entityType: entityType,\n        });\n    };\n}\nexports.TransactionRepository = TransactionRepository;\n\n//# sourceMappingURL=TransactionRepository.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/decorator/transaction/TransactionRepository.js?");

/***/ }),

/***/ "./node_modules/typeorm/decorator/tree/Tree.js":
/*!*****************************************************!*\
  !*** ./node_modules/typeorm/decorator/tree/Tree.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _1 = __webpack_require__(/*! ../../ */ \"./node_modules/typeorm/index.js\");\n/**\n * Marks entity to work like a tree.\n * Tree pattern that will be used for the tree entity should be specified.\n * @TreeParent decorator must be used in tree entities.\n * TreeRepository can be used to manipulate with tree entities.\n */\nfunction Tree(type) {\n    return function (target) {\n        _1.getMetadataArgsStorage().trees.push({\n            target: target,\n            type: type\n        });\n    };\n}\nexports.Tree = Tree;\n\n//# sourceMappingURL=Tree.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/decorator/tree/Tree.js?");

/***/ }),

/***/ "./node_modules/typeorm/decorator/tree/TreeChildren.js":
/*!*************************************************************!*\
  !*** ./node_modules/typeorm/decorator/tree/TreeChildren.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _1 = __webpack_require__(/*! ../../ */ \"./node_modules/typeorm/index.js\");\n/**\n * Marks a entity property as a children of the tree.\n * \"Tree children\" will contain all children (bind) of this entity.\n */\nfunction TreeChildren(options) {\n    return function (object, propertyName) {\n        if (!options)\n            options = {};\n        // now try to determine it its lazy relation\n        var reflectedType = Reflect && Reflect.getMetadata ? Reflect.getMetadata(\"design:type\", object, propertyName) : undefined;\n        var isLazy = (reflectedType && typeof reflectedType.name === \"string\" && reflectedType.name.toLowerCase() === \"promise\") || false;\n        // add one-to-many relation for this \n        _1.getMetadataArgsStorage().relations.push({\n            isTreeChildren: true,\n            target: object.constructor,\n            propertyName: propertyName,\n            isLazy: isLazy,\n            relationType: \"one-to-many\",\n            type: function () { return object.constructor; },\n            options: options\n        });\n    };\n}\nexports.TreeChildren = TreeChildren;\n\n//# sourceMappingURL=TreeChildren.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/decorator/tree/TreeChildren.js?");

/***/ }),

/***/ "./node_modules/typeorm/decorator/tree/TreeLevelColumn.js":
/*!****************************************************************!*\
  !*** ./node_modules/typeorm/decorator/tree/TreeLevelColumn.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _1 = __webpack_require__(/*! ../../ */ \"./node_modules/typeorm/index.js\");\n/**\n * Creates a \"level\"/\"length\" column to the table that holds a closure table.\n */\nfunction TreeLevelColumn() {\n    return function (object, propertyName) {\n        _1.getMetadataArgsStorage().columns.push({\n            target: object.constructor,\n            propertyName: propertyName,\n            mode: \"treeLevel\",\n            options: {}\n        });\n    };\n}\nexports.TreeLevelColumn = TreeLevelColumn;\n\n//# sourceMappingURL=TreeLevelColumn.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/decorator/tree/TreeLevelColumn.js?");

/***/ }),

/***/ "./node_modules/typeorm/decorator/tree/TreeParent.js":
/*!***********************************************************!*\
  !*** ./node_modules/typeorm/decorator/tree/TreeParent.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _1 = __webpack_require__(/*! ../../ */ \"./node_modules/typeorm/index.js\");\n/**\n * Marks a entity property as a parent of the tree.\n * \"Tree parent\" indicates who owns (is a parent) of this entity in tree structure.\n */\nfunction TreeParent() {\n    return function (object, propertyName) {\n        // now try to determine it its lazy relation\n        var reflectedType = Reflect && Reflect.getMetadata ? Reflect.getMetadata(\"design:type\", object, propertyName) : undefined;\n        var isLazy = (reflectedType && typeof reflectedType.name === \"string\" && reflectedType.name.toLowerCase() === \"promise\") || false;\n        _1.getMetadataArgsStorage().relations.push({\n            isTreeParent: true,\n            target: object.constructor,\n            propertyName: propertyName,\n            isLazy: isLazy,\n            relationType: \"many-to-one\",\n            type: function () { return object.constructor; },\n            options: {}\n        });\n    };\n}\nexports.TreeParent = TreeParent;\n\n//# sourceMappingURL=TreeParent.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/decorator/tree/TreeParent.js?");

/***/ }),

/***/ "./node_modules/typeorm/driver/DriverFactory.js":
/*!******************************************************!*\
  !*** ./node_modules/typeorm/driver/DriverFactory.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MissingDriverError_1 = __webpack_require__(/*! ../error/MissingDriverError */ \"./node_modules/typeorm/error/MissingDriverError.js\");\nvar MongoDriver_1 = __webpack_require__(/*! ./mongodb/MongoDriver */ \"./node_modules/typeorm/driver/mongodb/MongoDriver.js\");\nvar SqlServerDriver_1 = __webpack_require__(/*! ./sqlserver/SqlServerDriver */ \"./node_modules/typeorm/driver/sqlserver/SqlServerDriver.js\");\nvar OracleDriver_1 = __webpack_require__(/*! ./oracle/OracleDriver */ \"./node_modules/typeorm/driver/oracle/OracleDriver.js\");\nvar SqliteDriver_1 = __webpack_require__(/*! ./sqlite/SqliteDriver */ \"./node_modules/typeorm/driver/sqlite/SqliteDriver.js\");\nvar CordovaDriver_1 = __webpack_require__(/*! ./cordova/CordovaDriver */ \"./node_modules/typeorm/driver/cordova/CordovaDriver.js\");\nvar ReactNativeDriver_1 = __webpack_require__(/*! ./react-native/ReactNativeDriver */ \"./node_modules/typeorm/driver/react-native/ReactNativeDriver.js\");\nvar NativescriptDriver_1 = __webpack_require__(/*! ./nativescript/NativescriptDriver */ \"./node_modules/typeorm/driver/nativescript/NativescriptDriver.js\");\nvar SqljsDriver_1 = __webpack_require__(/*! ./sqljs/SqljsDriver */ \"./node_modules/typeorm/driver/sqljs/SqljsDriver.js\");\nvar MysqlDriver_1 = __webpack_require__(/*! ./mysql/MysqlDriver */ \"./node_modules/typeorm/driver/mysql/MysqlDriver.js\");\nvar PostgresDriver_1 = __webpack_require__(/*! ./postgres/PostgresDriver */ \"./node_modules/typeorm/driver/postgres/PostgresDriver.js\");\nvar ExpoDriver_1 = __webpack_require__(/*! ./expo/ExpoDriver */ \"./node_modules/typeorm/driver/expo/ExpoDriver.js\");\n/**\n * Helps to create drivers.\n */\nvar DriverFactory = /** @class */ (function () {\n    function DriverFactory() {\n    }\n    /**\n     * Creates a new driver depend on a given connection's driver type.\n     */\n    DriverFactory.prototype.create = function (connection) {\n        var type = connection.options.type;\n        switch (type) {\n            case \"mysql\":\n                return new MysqlDriver_1.MysqlDriver(connection);\n            case \"postgres\":\n                return new PostgresDriver_1.PostgresDriver(connection);\n            case \"mariadb\":\n                return new MysqlDriver_1.MysqlDriver(connection);\n            case \"sqlite\":\n                return new SqliteDriver_1.SqliteDriver(connection);\n            case \"cordova\":\n                return new CordovaDriver_1.CordovaDriver(connection);\n            case \"nativescript\":\n                return new NativescriptDriver_1.NativescriptDriver(connection);\n            case \"react-native\":\n                return new ReactNativeDriver_1.ReactNativeDriver(connection);\n            case \"sqljs\":\n                return new SqljsDriver_1.SqljsDriver(connection);\n            case \"oracle\":\n                return new OracleDriver_1.OracleDriver(connection);\n            case \"mssql\":\n                return new SqlServerDriver_1.SqlServerDriver(connection);\n            case \"mongodb\":\n                return new MongoDriver_1.MongoDriver(connection);\n            case \"expo\":\n                return new ExpoDriver_1.ExpoDriver(connection);\n            default:\n                throw new MissingDriverError_1.MissingDriverError(type);\n        }\n    };\n    return DriverFactory;\n}());\nexports.DriverFactory = DriverFactory;\n\n//# sourceMappingURL=DriverFactory.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/driver/DriverFactory.js?");

/***/ }),

/***/ "./node_modules/typeorm/driver/DriverUtils.js":
/*!****************************************************!*\
  !*** ./node_modules/typeorm/driver/DriverUtils.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Common driver utility functions.\n */\nvar DriverUtils = /** @class */ (function () {\n    function DriverUtils() {\n    }\n    // -------------------------------------------------------------------------\n    // Public Static Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Normalizes and builds a new driver options.\n     * Extracts settings from connection url and sets to a new options object.\n     */\n    DriverUtils.buildDriverOptions = function (options, buildOptions) {\n        if (options.url) {\n            var parsedUrl = this.parseConnectionUrl(options.url);\n            if (buildOptions && buildOptions.useSid) {\n                var urlDriverOptions = {\n                    type: options.type,\n                    host: parsedUrl.host,\n                    username: parsedUrl.username,\n                    password: parsedUrl.password,\n                    port: parsedUrl.port,\n                    sid: parsedUrl.database\n                };\n                return Object.assign(urlDriverOptions, options);\n            }\n            else {\n                var urlDriverOptions = {\n                    type: options.type,\n                    host: parsedUrl.host,\n                    username: parsedUrl.username,\n                    password: parsedUrl.password,\n                    port: parsedUrl.port,\n                    database: parsedUrl.database\n                };\n                return Object.assign(urlDriverOptions, options);\n            }\n        }\n        return Object.assign({}, options);\n    };\n    // -------------------------------------------------------------------------\n    // Private Static Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Extracts connection data from the connection url.\n     */\n    DriverUtils.parseConnectionUrl = function (url) {\n        var firstSlashes = url.indexOf(\"//\");\n        var preBase = url.substr(firstSlashes + 2);\n        var secondSlash = preBase.indexOf(\"/\");\n        var base = (secondSlash !== -1) ? preBase.substr(0, secondSlash) : preBase;\n        var afterBase = (secondSlash !== -1) ? preBase.substr(secondSlash + 1) : undefined;\n        var lastAtSign = base.lastIndexOf(\"@\");\n        var usernameAndPassword = base.substr(0, lastAtSign);\n        var hostAndPort = base.substr(lastAtSign + 1);\n        var username = usernameAndPassword;\n        var password = \"\";\n        var firstColon = usernameAndPassword.indexOf(\":\");\n        if (firstColon !== -1) {\n            username = usernameAndPassword.substr(0, firstColon);\n            password = usernameAndPassword.substr(firstColon + 1);\n        }\n        var _a = __read(hostAndPort.split(\":\"), 2), host = _a[0], port = _a[1];\n        return {\n            host: host,\n            username: username,\n            password: password,\n            port: port ? parseInt(port) : undefined,\n            database: afterBase || undefined\n        };\n    };\n    return DriverUtils;\n}());\nexports.DriverUtils = DriverUtils;\n\n//# sourceMappingURL=DriverUtils.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/driver/DriverUtils.js?");

/***/ }),

/***/ "./node_modules/typeorm/driver/SqlInMemory.js":
/*!****************************************************!*\
  !*** ./node_modules/typeorm/driver/SqlInMemory.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * This class stores up and down queries needed for migrations functionality.\n */\nvar SqlInMemory = /** @class */ (function () {\n    function SqlInMemory() {\n        this.upQueries = [];\n        this.downQueries = [];\n    }\n    return SqlInMemory;\n}());\nexports.SqlInMemory = SqlInMemory;\n\n//# sourceMappingURL=SqlInMemory.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/driver/SqlInMemory.js?");

/***/ }),

/***/ "./node_modules/typeorm/driver/cordova/CordovaDriver.js":
/*!**************************************************************!*\
  !*** ./node_modules/typeorm/driver/cordova/CordovaDriver.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar AbstractSqliteDriver_1 = __webpack_require__(/*! ../sqlite-abstract/AbstractSqliteDriver */ \"./node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js\");\nvar CordovaQueryRunner_1 = __webpack_require__(/*! ./CordovaQueryRunner */ \"./node_modules/typeorm/driver/cordova/CordovaQueryRunner.js\");\nvar DriverOptionNotSetError_1 = __webpack_require__(/*! ../../error/DriverOptionNotSetError */ \"./node_modules/typeorm/error/DriverOptionNotSetError.js\");\nvar DriverPackageNotInstalledError_1 = __webpack_require__(/*! ../../error/DriverPackageNotInstalledError */ \"./node_modules/typeorm/error/DriverPackageNotInstalledError.js\");\nvar CordovaDriver = /** @class */ (function (_super) {\n    __extends(CordovaDriver, _super);\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function CordovaDriver(connection) {\n        var _this = _super.call(this, connection) || this;\n        // this.connection = connection;\n        // this.options = connection.options as CordovaConnectionOptions;\n        _this.database = _this.options.database;\n        // validate options to make sure everything is set\n        if (!_this.options.database)\n            throw new DriverOptionNotSetError_1.DriverOptionNotSetError(\"database\");\n        if (!_this.options.location)\n            throw new DriverOptionNotSetError_1.DriverOptionNotSetError(\"location\");\n        // load sqlite package\n        _this.loadDependencies();\n        return _this;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Closes connection with database.\n     */\n    CordovaDriver.prototype.disconnect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2 /*return*/, new Promise(function (ok, fail) {\n                        _this.queryRunner = undefined;\n                        _this.databaseConnection.close(ok, fail);\n                    })];\n            });\n        });\n    };\n    /**\n     * Creates a query runner used to execute database queries.\n     */\n    CordovaDriver.prototype.createQueryRunner = function (mode) {\n        if (mode === void 0) { mode = \"master\"; }\n        if (!this.queryRunner)\n            this.queryRunner = new CordovaQueryRunner_1.CordovaQueryRunner(this);\n        return this.queryRunner;\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates connection with the database.\n     */\n    CordovaDriver.prototype.createDatabaseConnection = function () {\n        var _this = this;\n        return new Promise(function (ok, fail) {\n            var options = Object.assign({}, {\n                name: _this.options.database,\n                location: _this.options.location,\n            }, _this.options.extra || {});\n            _this.sqlite.openDatabase(options, function (db) {\n                var databaseConnection = db;\n                // we need to enable foreign keys in sqlite to make sure all foreign key related features\n                // working properly. this also makes onDelete to work with sqlite.\n                databaseConnection.executeSql(\"PRAGMA foreign_keys = ON;\", [], function (result) {\n                    ok(databaseConnection);\n                }, function (error) {\n                    fail(error);\n                });\n            }, function (error) {\n                fail(error);\n            });\n        });\n    };\n    /**\n     * If driver dependency is not given explicitly, then try to load it via \"require\".\n     */\n    CordovaDriver.prototype.loadDependencies = function () {\n        try {\n            this.sqlite = window.sqlitePlugin;\n        }\n        catch (e) {\n            throw new DriverPackageNotInstalledError_1.DriverPackageNotInstalledError(\"Cordova-SQLite\", \"cordova-sqlite-storage\");\n        }\n    };\n    return CordovaDriver;\n}(AbstractSqliteDriver_1.AbstractSqliteDriver));\nexports.CordovaDriver = CordovaDriver;\n\n//# sourceMappingURL=CordovaDriver.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/driver/cordova/CordovaDriver.js?");

/***/ }),

/***/ "./node_modules/typeorm/driver/cordova/CordovaQueryRunner.js":
/*!*******************************************************************!*\
  !*** ./node_modules/typeorm/driver/cordova/CordovaQueryRunner.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar QueryRunnerAlreadyReleasedError_1 = __webpack_require__(/*! ../../error/QueryRunnerAlreadyReleasedError */ \"./node_modules/typeorm/error/QueryRunnerAlreadyReleasedError.js\");\nvar QueryFailedError_1 = __webpack_require__(/*! ../../error/QueryFailedError */ \"./node_modules/typeorm/error/QueryFailedError.js\");\nvar AbstractSqliteQueryRunner_1 = __webpack_require__(/*! ../sqlite-abstract/AbstractSqliteQueryRunner */ \"./node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteQueryRunner.js\");\nvar Broadcaster_1 = __webpack_require__(/*! ../../subscriber/Broadcaster */ \"./node_modules/typeorm/subscriber/Broadcaster.js\");\n/**\n * Runs queries on a single sqlite database connection.\n */\nvar CordovaQueryRunner = /** @class */ (function (_super) {\n    __extends(CordovaQueryRunner, _super);\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function CordovaQueryRunner(driver) {\n        var _this = _super.call(this) || this;\n        _this.driver = driver;\n        _this.connection = driver.connection;\n        _this.broadcaster = new Broadcaster_1.Broadcaster(_this);\n        return _this;\n    }\n    /**\n     * Executes a given SQL query.\n     */\n    CordovaQueryRunner.prototype.query = function (query, parameters) {\n        var _this = this;\n        if (this.isReleased)\n            throw new QueryRunnerAlreadyReleasedError_1.QueryRunnerAlreadyReleasedError();\n        return new Promise(function (ok, fail) { return __awaiter(_this, void 0, void 0, function () {\n            var _this = this;\n            var databaseConnection, queryStartTime;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.connect()];\n                    case 1:\n                        databaseConnection = _a.sent();\n                        this.driver.connection.logger.logQuery(query, parameters, this);\n                        queryStartTime = +new Date();\n                        databaseConnection.executeSql(query, parameters, function (result) {\n                            // log slow queries if maxQueryExecution time is set\n                            var maxQueryExecutionTime = _this.driver.connection.options.maxQueryExecutionTime;\n                            var queryEndTime = +new Date();\n                            var queryExecutionTime = queryEndTime - queryStartTime;\n                            if (maxQueryExecutionTime && queryExecutionTime > maxQueryExecutionTime)\n                                _this.driver.connection.logger.logQuerySlow(queryExecutionTime, query, parameters, _this);\n                            if (query.substr(0, 11) === \"INSERT INTO\") {\n                                ok(result.insertId);\n                            }\n                            else {\n                                var resultSet = [];\n                                for (var i = 0; i < result.rows.length; i++) {\n                                    resultSet.push(result.rows.item(i));\n                                }\n                                ok(resultSet);\n                            }\n                        }, function (err) {\n                            _this.driver.connection.logger.logQueryError(err, query, parameters, _this);\n                            fail(new QueryFailedError_1.QueryFailedError(query, parameters, err));\n                        });\n                        return [2 /*return*/];\n                }\n            });\n        }); });\n    };\n    /**\n     * Insert a new row with given values into the given table.\n     * Returns value of the generated column if given and generate column exist in the table.\n     // todo: implement new syntax\n    async insert(tableName: string, keyValues: ObjectLiteral): Promise<InsertResult> {\n        const keys = Object.keys(keyValues);\n        const columns = keys.map(key => `\"${key}\"`).join(\", \");\n        const values = keys.map(key => \"?\").join(\",\");\n        const generatedColumns = this.connection.hasMetadata(tableName) ? this.connection.getMetadata(tableName).generatedColumns : [];\n        const sql = columns.length > 0 ? (`INSERT INTO \"${tableName}\"(${columns}) VALUES (${values})`) : `INSERT INTO \"${tableName}\" DEFAULT VALUES`;\n        const parameters = keys.map(key => keyValues[key]);\n\n        return new Promise<InsertResult>(async (ok, fail) => {\n            this.driver.connection.logger.logQuery(sql, parameters, this);\n            const __this = this;\n            const databaseConnection = await this.connect();\n            databaseConnection.executeSql(sql, parameters, (resultSet: any) => {\n                const generatedMap = generatedColumns.reduce((map, generatedColumn) => {\n                    const value = generatedColumn.isPrimary && generatedColumn.generationStrategy === \"increment\" && resultSet.insertId ? resultSet.insertId : keyValues[generatedColumn.databaseName];\n                    if (!value) return map;\n                    return OrmUtils.mergeDeep(map, generatedColumn.createValueMap(value));\n                }, {} as ObjectLiteral);\n\n                ok({\n                    result: undefined,\n                    generatedMap: Object.keys(generatedMap).length > 0 ? generatedMap : undefined\n                });\n            }, (err: any) => {\n                __this.driver.connection.logger.logQueryError(err, sql, parameters, this);\n                fail(err);\n            });\n        });\n    }*/\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Parametrizes given object of values. Used to create column=value queries.\n     */\n    CordovaQueryRunner.prototype.parametrize = function (objectLiteral, startIndex) {\n        if (startIndex === void 0) { startIndex = 0; }\n        return Object.keys(objectLiteral).map(function (key, index) { return \"\\\"\" + key + \"\\\"\" + \"=?\"; });\n    };\n    return CordovaQueryRunner;\n}(AbstractSqliteQueryRunner_1.AbstractSqliteQueryRunner));\nexports.CordovaQueryRunner = CordovaQueryRunner;\n\n//# sourceMappingURL=CordovaQueryRunner.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/driver/cordova/CordovaQueryRunner.js?");

/***/ }),

/***/ "./node_modules/typeorm/driver/expo/ExpoDriver.js":
/*!********************************************************!*\
  !*** ./node_modules/typeorm/driver/expo/ExpoDriver.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar AbstractSqliteDriver_1 = __webpack_require__(/*! ../sqlite-abstract/AbstractSqliteDriver */ \"./node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js\");\nvar ExpoQueryRunner_1 = __webpack_require__(/*! ./ExpoQueryRunner */ \"./node_modules/typeorm/driver/expo/ExpoQueryRunner.js\");\nvar DriverOptionNotSetError_1 = __webpack_require__(/*! ../../error/DriverOptionNotSetError */ \"./node_modules/typeorm/error/DriverOptionNotSetError.js\");\nvar DriverPackageNotInstalledError_1 = __webpack_require__(/*! ../../error/DriverPackageNotInstalledError */ \"./node_modules/typeorm/error/DriverPackageNotInstalledError.js\");\nvar ExpoDriver = /** @class */ (function (_super) {\n    __extends(ExpoDriver, _super);\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function ExpoDriver(connection) {\n        var _this = _super.call(this, connection) || this;\n        _this.database = _this.options.database;\n        // validate options to make sure everything is set\n        if (!_this.options.database)\n            throw new DriverOptionNotSetError_1.DriverOptionNotSetError(\"database\");\n        // load sqlite package\n        _this.loadDependencies();\n        return _this;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Closes connection with database.\n     */\n    ExpoDriver.prototype.disconnect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2 /*return*/, new Promise(function (ok, fail) {\n                        try {\n                            _this.queryRunner = undefined;\n                            _this.databaseConnection = undefined;\n                            ok();\n                        }\n                        catch (error) {\n                            fail(error);\n                        }\n                    })];\n            });\n        });\n    };\n    /**\n     * Creates a query runner used to execute database queries.\n     */\n    ExpoDriver.prototype.createQueryRunner = function (mode) {\n        if (mode === void 0) { mode = \"master\"; }\n        if (!this.queryRunner)\n            this.queryRunner = new ExpoQueryRunner_1.ExpoQueryRunner(this);\n        return this.queryRunner;\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates connection with the database.\n     */\n    ExpoDriver.prototype.createDatabaseConnection = function () {\n        var _this = this;\n        return new Promise(function (ok, fail) {\n            try {\n                var databaseConnection_1 = _this.sqlite.openDatabase(_this.options.database);\n                /*\n                // we need to enable foreign keys in sqlite to make sure all foreign key related features\n                // working properly. this also makes onDelete work with sqlite.\n                */\n                databaseConnection_1.transaction(function (tsx) {\n                    tsx.executeSql(\"PRAGMA foreign_keys = ON;\", [], function (t, result) {\n                        ok(databaseConnection_1);\n                    }, function (t, err) {\n                        fail({ transaction: t, error: err });\n                    });\n                }, function (err) {\n                    fail(err);\n                });\n            }\n            catch (error) {\n                fail(error);\n            }\n        });\n    };\n    /**\n     * If driver dependency is not given explicitly, then try to load it via \"require\".\n     */\n    ExpoDriver.prototype.loadDependencies = function () {\n        try {\n            this.sqlite = window.Expo.SQLite;\n        }\n        catch (e) {\n            throw new DriverPackageNotInstalledError_1.DriverPackageNotInstalledError(\"Expo\", \"expo\");\n        }\n    };\n    return ExpoDriver;\n}(AbstractSqliteDriver_1.AbstractSqliteDriver));\nexports.ExpoDriver = ExpoDriver;\n\n//# sourceMappingURL=ExpoDriver.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/driver/expo/ExpoDriver.js?");

/***/ }),

/***/ "./node_modules/typeorm/driver/expo/ExpoQueryRunner.js":
/*!*************************************************************!*\
  !*** ./node_modules/typeorm/driver/expo/ExpoQueryRunner.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar QueryRunnerAlreadyReleasedError_1 = __webpack_require__(/*! ../../error/QueryRunnerAlreadyReleasedError */ \"./node_modules/typeorm/error/QueryRunnerAlreadyReleasedError.js\");\nvar QueryFailedError_1 = __webpack_require__(/*! ../../error/QueryFailedError */ \"./node_modules/typeorm/error/QueryFailedError.js\");\nvar AbstractSqliteQueryRunner_1 = __webpack_require__(/*! ../sqlite-abstract/AbstractSqliteQueryRunner */ \"./node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteQueryRunner.js\");\nvar TransactionAlreadyStartedError_1 = __webpack_require__(/*! ../../error/TransactionAlreadyStartedError */ \"./node_modules/typeorm/error/TransactionAlreadyStartedError.js\");\nvar TransactionNotStartedError_1 = __webpack_require__(/*! ../../error/TransactionNotStartedError */ \"./node_modules/typeorm/error/TransactionNotStartedError.js\");\nvar Broadcaster_1 = __webpack_require__(/*! ../../subscriber/Broadcaster */ \"./node_modules/typeorm/subscriber/Broadcaster.js\");\n/**\n * Runs queries on a single sqlite database connection.\n */\nvar ExpoQueryRunner = /** @class */ (function (_super) {\n    __extends(ExpoQueryRunner, _super);\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function ExpoQueryRunner(driver) {\n        var _this = _super.call(this) || this;\n        _this.driver = driver;\n        _this.connection = driver.connection;\n        _this.broadcaster = new Broadcaster_1.Broadcaster(_this);\n        return _this;\n    }\n    /**\n     * Starts transaction. Within Expo, all database operations happen in a\n     * transaction context, so issuing a `BEGIN TRANSACTION` command is\n     * redundant and will result in the following error:\n     *\n     * `Error: Error code 1: cannot start a transaction within a transaction`\n     *\n     * Instead, we keep track of a `Transaction` object in `this.transaction`\n     * and continue using the same object until we wish to commit the\n     * transaction.\n     */\n    ExpoQueryRunner.prototype.startTransaction = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                if (this.isTransactionActive && typeof this.transaction !== \"undefined\")\n                    throw new TransactionAlreadyStartedError_1.TransactionAlreadyStartedError();\n                this.isTransactionActive = true;\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * Commits transaction.\n     * Error will be thrown if transaction was not started.\n     * Since Expo will automatically commit the transaction once all the\n     * callbacks of the transaction object have been completed, \"committing\" a\n     * transaction in this driver's context means that we delete the transaction\n     * object and set the stage for the next transaction.\n     */\n    ExpoQueryRunner.prototype.commitTransaction = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                if (!this.isTransactionActive && typeof this.transaction === \"undefined\")\n                    throw new TransactionNotStartedError_1.TransactionNotStartedError();\n                this.isTransactionActive = false;\n                this.transaction = undefined;\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * Rollbacks transaction.\n     * Error will be thrown if transaction was not started.\n     * This method's functionality is identical to `commitTransaction()` because\n     * the transaction lifecycle is handled within the Expo transaction object.\n     * Issuing separate statements for `COMMIT` or `ROLLBACK` aren't necessary.\n     */\n    ExpoQueryRunner.prototype.rollbackTransaction = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                if (!this.isTransactionActive && typeof this.transaction === \"undefined\")\n                    throw new TransactionNotStartedError_1.TransactionNotStartedError();\n                this.isTransactionActive = false;\n                this.transaction = undefined;\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * Executes a given SQL query.\n     */\n    ExpoQueryRunner.prototype.query = function (query, parameters) {\n        var _this = this;\n        if (this.isReleased)\n            throw new QueryRunnerAlreadyReleasedError_1.QueryRunnerAlreadyReleasedError();\n        return new Promise(function (ok, fail) { return __awaiter(_this, void 0, void 0, function () {\n            var _this = this;\n            var databaseConnection, queryStartTime;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.connect()];\n                    case 1:\n                        databaseConnection = _a.sent();\n                        this.driver.connection.logger.logQuery(query, parameters, this);\n                        queryStartTime = +new Date();\n                        // All Expo SQL queries are executed in a transaction context\n                        databaseConnection.transaction(function (transaction) {\n                            if (typeof _this.transaction === \"undefined\") {\n                                _this.startTransaction();\n                                _this.transaction = transaction;\n                            }\n                            _this.transaction.executeSql(query, parameters, function (t, result) {\n                                // log slow queries if maxQueryExecution time is set\n                                var maxQueryExecutionTime = _this.driver.connection.options.maxQueryExecutionTime;\n                                var queryEndTime = +new Date();\n                                var queryExecutionTime = queryEndTime - queryStartTime;\n                                if (maxQueryExecutionTime && queryExecutionTime > maxQueryExecutionTime) {\n                                    _this.driver.connection.logger.logQuerySlow(queryExecutionTime, query, parameters, _this);\n                                }\n                                // return id of inserted row, if query was insert statement.\n                                if (query.substr(0, 11) === \"INSERT INTO\") {\n                                    ok(result.insertId);\n                                }\n                                else {\n                                    var resultSet = [];\n                                    for (var i = 0; i < result.rows.length; i++) {\n                                        resultSet.push(result.rows.item(i));\n                                    }\n                                    ok(resultSet);\n                                }\n                            }, function (t, err) {\n                                _this.driver.connection.logger.logQueryError(err, query, parameters, _this);\n                                fail(new QueryFailedError_1.QueryFailedError(query, parameters, err));\n                            });\n                        }, function (err) {\n                            _this.rollbackTransaction();\n                        }, function () {\n                            _this.isTransactionActive = false;\n                            _this.transaction = undefined;\n                        });\n                        return [2 /*return*/];\n                }\n            });\n        }); });\n    };\n    return ExpoQueryRunner;\n}(AbstractSqliteQueryRunner_1.AbstractSqliteQueryRunner));\nexports.ExpoQueryRunner = ExpoQueryRunner;\n\n//# sourceMappingURL=ExpoQueryRunner.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/driver/expo/ExpoQueryRunner.js?");

/***/ }),

/***/ "./node_modules/typeorm/driver/mongodb/MongoDriver.js":
/*!************************************************************!*\
  !*** ./node_modules/typeorm/driver/mongodb/MongoDriver.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ConnectionIsNotSetError_1 = __webpack_require__(/*! ../../error/ConnectionIsNotSetError */ \"./node_modules/typeorm/error/ConnectionIsNotSetError.js\");\nvar DriverPackageNotInstalledError_1 = __webpack_require__(/*! ../../error/DriverPackageNotInstalledError */ \"./node_modules/typeorm/error/DriverPackageNotInstalledError.js\");\nvar MongoQueryRunner_1 = __webpack_require__(/*! ./MongoQueryRunner */ \"./node_modules/typeorm/driver/mongodb/MongoQueryRunner.js\");\nvar PlatformTools_1 = __webpack_require__(/*! ../../platform/PlatformTools */ \"./node_modules/typeorm/platform/PlatformTools.js\");\nvar MongoSchemaBuilder_1 = __webpack_require__(/*! ../../schema-builder/MongoSchemaBuilder */ \"./node_modules/typeorm/schema-builder/MongoSchemaBuilder.js\");\n/**\n * Organizes communication with MongoDB.\n */\nvar MongoDriver = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function MongoDriver(connection) {\n        this.connection = connection;\n        /**\n         * Indicates if replication is enabled.\n         */\n        this.isReplicated = false;\n        /**\n         * Indicates if tree tables are supported by this driver.\n         */\n        this.treeSupport = false;\n        /**\n         * Mongodb does not need to have column types because they are not used in schema sync.\n         */\n        this.supportedDataTypes = [];\n        /**\n         * Gets list of spatial column data types.\n         */\n        this.spatialTypes = [];\n        /**\n         * Gets list of column data types that support length by a driver.\n         */\n        this.withLengthColumnTypes = [];\n        /**\n         * Gets list of column data types that support precision by a driver.\n         */\n        this.withPrecisionColumnTypes = [];\n        /**\n         * Gets list of column data types that support scale by a driver.\n         */\n        this.withScaleColumnTypes = [];\n        /**\n         * Mongodb does not need to have a strong defined mapped column types because they are not used in schema sync.\n         */\n        this.mappedDataTypes = {\n            createDate: \"int\",\n            createDateDefault: \"\",\n            updateDate: \"int\",\n            updateDateDefault: \"\",\n            version: \"int\",\n            treeLevel: \"int\",\n            migrationId: \"int\",\n            migrationName: \"int\",\n            migrationTimestamp: \"int\",\n            cacheId: \"int\",\n            cacheIdentifier: \"int\",\n            cacheTime: \"int\",\n            cacheDuration: \"int\",\n            cacheQuery: \"int\",\n            cacheResult: \"int\",\n        };\n        this.options = connection.options;\n        // validate options to make sure everything is correct and driver will be able to establish connection\n        this.validateOptions(connection.options);\n        // load mongodb package\n        this.loadDependencies();\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Performs connection to the database.\n     */\n    MongoDriver.prototype.connect = function () {\n        var _this = this;\n        return new Promise(function (ok, fail) {\n            _this.mongodb.MongoClient.connect(_this.buildConnectionUrl(), {\n                poolSize: _this.options.poolSize,\n                ssl: _this.options.ssl,\n                sslValidate: _this.options.sslValidate,\n                sslCA: _this.options.sslCA,\n                sslCert: _this.options.sslCert,\n                sslKey: _this.options.sslKey,\n                sslPass: _this.options.sslPass,\n                autoReconnect: _this.options.autoReconnect,\n                noDelay: _this.options.noDelay,\n                keepAlive: _this.options.keepAlive,\n                connectTimeoutMS: _this.options.connectTimeoutMS,\n                socketTimeoutMS: _this.options.socketTimeoutMS,\n                reconnectTries: _this.options.reconnectTries,\n                reconnectInterval: _this.options.reconnectInterval,\n                ha: _this.options.ha,\n                haInterval: _this.options.haInterval,\n                replicaSet: _this.options.replicaSet,\n                acceptableLatencyMS: _this.options.acceptableLatencyMS,\n                secondaryAcceptableLatencyMS: _this.options.secondaryAcceptableLatencyMS,\n                connectWithNoPrimary: _this.options.connectWithNoPrimary,\n                authSource: _this.options.authSource,\n                w: _this.options.w,\n                wtimeout: _this.options.wtimeout,\n                j: _this.options.j,\n                forceServerObjectId: _this.options.forceServerObjectId,\n                serializeFunctions: _this.options.serializeFunctions,\n                ignoreUndefined: _this.options.ignoreUndefined,\n                raw: _this.options.raw,\n                promoteLongs: _this.options.promoteLongs,\n                promoteBuffers: _this.options.promoteBuffers,\n                promoteValues: _this.options.promoteValues,\n                domainsEnabled: _this.options.domainsEnabled,\n                bufferMaxEntries: _this.options.bufferMaxEntries,\n                readPreference: _this.options.readPreference,\n                pkFactory: _this.options.pkFactory,\n                promiseLibrary: _this.options.promiseLibrary,\n                readConcern: _this.options.readConcern,\n                maxStalenessSeconds: _this.options.maxStalenessSeconds,\n                loggerLevel: _this.options.loggerLevel,\n                logger: _this.options.logger,\n                authMechanism: _this.options.authMechanism\n            }, function (err, client) {\n                if (err)\n                    return fail(err);\n                _this.queryRunner = new MongoQueryRunner_1.MongoQueryRunner(_this.connection, client);\n                Object.assign(_this.queryRunner, { manager: _this.connection.manager });\n                ok();\n            });\n        });\n    };\n    MongoDriver.prototype.afterConnect = function () {\n        return Promise.resolve();\n    };\n    /**\n     * Closes connection with the database.\n     */\n    MongoDriver.prototype.disconnect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2 /*return*/, new Promise(function (ok, fail) {\n                        if (!_this.queryRunner)\n                            return fail(new ConnectionIsNotSetError_1.ConnectionIsNotSetError(\"mongodb\"));\n                        var handler = function (err) { return err ? fail(err) : ok(); };\n                        _this.queryRunner.databaseConnection.close(handler);\n                        _this.queryRunner = undefined;\n                    })];\n            });\n        });\n    };\n    /**\n     * Creates a schema builder used to build and sync a schema.\n     */\n    MongoDriver.prototype.createSchemaBuilder = function () {\n        return new MongoSchemaBuilder_1.MongoSchemaBuilder(this.connection);\n    };\n    /**\n     * Creates a query runner used to execute database queries.\n     */\n    MongoDriver.prototype.createQueryRunner = function (mode) {\n        if (mode === void 0) { mode = \"master\"; }\n        return this.queryRunner;\n    };\n    /**\n     * Replaces parameters in the given sql with special escaping character\n     * and an array of parameter names to be passed to a query.\n     */\n    MongoDriver.prototype.escapeQueryWithParameters = function (sql, parameters, nativeParameters) {\n        throw new Error(\"This operation is not supported by Mongodb driver.\");\n    };\n    /**\n     * Escapes a column name.\n     */\n    MongoDriver.prototype.escape = function (columnName) {\n        return columnName;\n    };\n    /**\n     * Build full table name with database name, schema name and table name.\n     * E.g. \"myDB\".\"mySchema\".\"myTable\"\n     */\n    MongoDriver.prototype.buildTableName = function (tableName, schema, database) {\n        return tableName;\n    };\n    /**\n     * Prepares given value to a value to be persisted, based on its column type and metadata.\n     */\n    MongoDriver.prototype.preparePersistentValue = function (value, columnMetadata) {\n        if (columnMetadata.transformer)\n            value = columnMetadata.transformer.to(value);\n        return value;\n    };\n    /**\n     * Prepares given value to a value to be persisted, based on its column type or metadata.\n     */\n    MongoDriver.prototype.prepareHydratedValue = function (value, columnMetadata) {\n        if (columnMetadata.transformer)\n            value = columnMetadata.transformer.from(value);\n        return value;\n    };\n    /**\n     * Creates a database type from a given column metadata.\n     */\n    MongoDriver.prototype.normalizeType = function (column) {\n        throw new Error(\"MongoDB is schema-less, not supported by this driver.\");\n    };\n    /**\n     * Normalizes \"default\" value of the column.\n     */\n    MongoDriver.prototype.normalizeDefault = function (columnMetadata) {\n        throw new Error(\"MongoDB is schema-less, not supported by this driver.\");\n    };\n    /**\n     * Normalizes \"isUnique\" value of the column.\n     */\n    MongoDriver.prototype.normalizeIsUnique = function (column) {\n        throw new Error(\"MongoDB is schema-less, not supported by this driver.\");\n    };\n    /**\n     * Calculates column length taking into account the default length values.\n     */\n    MongoDriver.prototype.getColumnLength = function (column) {\n        throw new Error(\"MongoDB is schema-less, not supported by this driver.\");\n    };\n    /**\n     * Normalizes \"default\" value of the column.\n     */\n    MongoDriver.prototype.createFullType = function (column) {\n        throw new Error(\"MongoDB is schema-less, not supported by this driver.\");\n    };\n    /**\n     * Obtains a new database connection to a master server.\n     * Used for replication.\n     * If replication is not setup then returns default connection's database connection.\n     */\n    MongoDriver.prototype.obtainMasterConnection = function () {\n        return Promise.resolve();\n    };\n    /**\n     * Obtains a new database connection to a slave server.\n     * Used for replication.\n     * If replication is not setup then returns master (default) connection's database connection.\n     */\n    MongoDriver.prototype.obtainSlaveConnection = function () {\n        return Promise.resolve();\n    };\n    /**\n     * Creates generated map of values generated or returned by database after INSERT query.\n     */\n    MongoDriver.prototype.createGeneratedMap = function (metadata, insertedId) {\n        return metadata.objectIdColumn.createValueMap(insertedId);\n    };\n    /**\n     * Differentiate columns of this table and columns from the given column metadatas columns\n     * and returns only changed.\n     */\n    MongoDriver.prototype.findChangedColumns = function (tableColumns, columnMetadatas) {\n        throw new Error(\"MongoDB is schema-less, not supported by this driver.\");\n    };\n    /**\n     * Returns true if driver supports RETURNING / OUTPUT statement.\n     */\n    MongoDriver.prototype.isReturningSqlSupported = function () {\n        return false;\n    };\n    /**\n     * Returns true if driver supports uuid values generation on its own.\n     */\n    MongoDriver.prototype.isUUIDGenerationSupported = function () {\n        return false;\n    };\n    /**\n     * Creates an escaped parameter.\n     */\n    MongoDriver.prototype.createParameter = function (parameterName, index) {\n        return \"\";\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Validate driver options to make sure everything is correct and driver will be able to establish connection.\n     */\n    MongoDriver.prototype.validateOptions = function (options) {\n        // if (!options.url) {\n        //     if (!options.database)\n        //         throw new DriverOptionNotSetError(\"database\");\n        // }\n    };\n    /**\n     * Loads all driver dependencies.\n     */\n    MongoDriver.prototype.loadDependencies = function () {\n        try {\n            this.mongodb = PlatformTools_1.PlatformTools.load(\"mongodb\"); // try to load native driver dynamically\n        }\n        catch (e) {\n            throw new DriverPackageNotInstalledError_1.DriverPackageNotInstalledError(\"MongoDB\", \"mongodb\");\n        }\n    };\n    /**\n     * Builds connection url that is passed to underlying driver to perform connection to the mongodb database.\n     */\n    MongoDriver.prototype.buildConnectionUrl = function () {\n        if (this.options.url)\n            return this.options.url;\n        var credentialsUrlPart = (this.options.username && this.options.password)\n            ? this.options.username + \":\" + this.options.password + \"@\"\n            : \"\";\n        return \"mongodb://\" + credentialsUrlPart + (this.options.host || \"127.0.0.1\") + \":\" + (this.options.port || \"27017\") + \"/\" + this.options.database;\n    };\n    return MongoDriver;\n}());\nexports.MongoDriver = MongoDriver;\n\n//# sourceMappingURL=MongoDriver.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/driver/mongodb/MongoDriver.js?");

/***/ }),

/***/ "./node_modules/typeorm/driver/mongodb/MongoQueryRunner.js":
/*!*****************************************************************!*\
  !*** ./node_modules/typeorm/driver/mongodb/MongoQueryRunner.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Broadcaster_1 = __webpack_require__(/*! ../../subscriber/Broadcaster */ \"./node_modules/typeorm/subscriber/Broadcaster.js\");\n/**\n * Runs queries on a single MongoDB connection.\n */\nvar MongoQueryRunner = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function MongoQueryRunner(connection, databaseConnection) {\n        /**\n         * Indicates if connection for this query runner is released.\n         * Once its released, query runner cannot run queries anymore.\n         * Always false for mongodb since mongodb has a single query executor instance.\n         */\n        this.isReleased = false;\n        /**\n         * Indicates if transaction is active in this query executor.\n         * Always false for mongodb since mongodb does not support transactions.\n         */\n        this.isTransactionActive = false;\n        /**\n         * Stores temporarily user data.\n         * Useful for sharing data with subscribers.\n         */\n        this.data = {};\n        this.connection = connection;\n        this.databaseConnection = databaseConnection;\n        this.broadcaster = new Broadcaster_1.Broadcaster(this);\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates a cursor for a query that can be used to iterate over results from MongoDB.\n     */\n    MongoQueryRunner.prototype.cursor = function (collectionName, query) {\n        return this.getCollection(collectionName).find(query || {});\n    };\n    /**\n     * Execute an aggregation framework pipeline against the collection.\n     */\n    MongoQueryRunner.prototype.aggregate = function (collectionName, pipeline, options) {\n        return this.getCollection(collectionName).aggregate(pipeline, options);\n    };\n    /**\n     * Perform a bulkWrite operation without a fluent API.\n     */\n    MongoQueryRunner.prototype.bulkWrite = function (collectionName, operations, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getCollection(collectionName).bulkWrite(operations, options)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /**\n     * Count number of matching documents in the db to a query.\n     */\n    MongoQueryRunner.prototype.count = function (collectionName, query, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getCollection(collectionName).count(query || {}, options)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /**\n     * Creates an index on the db and collection.\n     */\n    MongoQueryRunner.prototype.createCollectionIndex = function (collectionName, fieldOrSpec, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getCollection(collectionName).createIndex(fieldOrSpec, options)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /**\n     * Creates multiple indexes in the collection, this method is only supported for MongoDB 2.6 or higher.\n     * Earlier version of MongoDB will throw a command not supported error. Index specifications are defined at http://docs.mongodb.org/manual/reference/command/createIndexes/.\n     */\n    MongoQueryRunner.prototype.createCollectionIndexes = function (collectionName, indexSpecs) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getCollection(collectionName).createIndexes(indexSpecs)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /**\n     * Delete multiple documents on MongoDB.\n     */\n    MongoQueryRunner.prototype.deleteMany = function (collectionName, query, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getCollection(collectionName).deleteMany(query, options)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /**\n     * Delete a document on MongoDB.\n     */\n    MongoQueryRunner.prototype.deleteOne = function (collectionName, query, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getCollection(collectionName).deleteOne(query, options)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /**\n     * The distinct command returns returns a list of distinct values for the given key across a collection.\n     */\n    MongoQueryRunner.prototype.distinct = function (collectionName, key, query, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getCollection(collectionName).distinct(key, query, options)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /**\n     * Drops an index from this collection.\n     */\n    MongoQueryRunner.prototype.dropCollectionIndex = function (collectionName, indexName, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getCollection(collectionName).dropIndex(indexName, options)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /**\n     * Drops all indexes from the collection.\n     */\n    MongoQueryRunner.prototype.dropCollectionIndexes = function (collectionName) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getCollection(collectionName).dropIndexes()];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /**\n     * Find a document and delete it in one atomic operation, requires a write lock for the duration of the operation.\n     */\n    MongoQueryRunner.prototype.findOneAndDelete = function (collectionName, query, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getCollection(collectionName).findOneAndDelete(query, options)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /**\n     * Find a document and replace it in one atomic operation, requires a write lock for the duration of the operation.\n     */\n    MongoQueryRunner.prototype.findOneAndReplace = function (collectionName, query, replacement, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getCollection(collectionName).findOneAndReplace(query, replacement, options)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /**\n     * Find a document and update it in one atomic operation, requires a write lock for the duration of the operation.\n     */\n    MongoQueryRunner.prototype.findOneAndUpdate = function (collectionName, query, update, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getCollection(collectionName).findOneAndUpdate(query, update, options)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /**\n     * Execute a geo search using a geo haystack index on a collection.\n     */\n    MongoQueryRunner.prototype.geoHaystackSearch = function (collectionName, x, y, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getCollection(collectionName).geoHaystackSearch(x, y, options)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /**\n     * Execute the geoNear command to search for items in the collection.\n     */\n    MongoQueryRunner.prototype.geoNear = function (collectionName, x, y, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getCollection(collectionName).geoNear(x, y, options)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /**\n     * Run a group command across a collection.\n     */\n    MongoQueryRunner.prototype.group = function (collectionName, keys, condition, initial, reduce, finalize, command, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getCollection(collectionName).group(keys, condition, initial, reduce, finalize, command, options)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieve all the indexes on the collection.\n     */\n    MongoQueryRunner.prototype.collectionIndexes = function (collectionName) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getCollection(collectionName).indexes()];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieve all the indexes on the collection.\n     */\n    MongoQueryRunner.prototype.collectionIndexExists = function (collectionName, indexes) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getCollection(collectionName).indexExists(indexes)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves this collections index info.\n     */\n    MongoQueryRunner.prototype.collectionIndexInformation = function (collectionName, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getCollection(collectionName).indexInformation(options)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /**\n     * Initiate an In order bulk write operation, operations will be serially executed in the order they are added, creating a new operation for each switch in types.\n     */\n    MongoQueryRunner.prototype.initializeOrderedBulkOp = function (collectionName, options) {\n        return this.getCollection(collectionName).initializeOrderedBulkOp(options);\n    };\n    /**\n     * Initiate a Out of order batch write operation. All operations will be buffered into insert/update/remove commands executed out of order.\n     */\n    MongoQueryRunner.prototype.initializeUnorderedBulkOp = function (collectionName, options) {\n        return this.getCollection(collectionName).initializeUnorderedBulkOp(options);\n    };\n    /**\n     * Inserts an array of documents into MongoDB.\n     */\n    MongoQueryRunner.prototype.insertMany = function (collectionName, docs, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getCollection(collectionName).insertMany(docs, options)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /**\n     * Inserts a single document into MongoDB.\n     */\n    MongoQueryRunner.prototype.insertOne = function (collectionName, doc, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getCollection(collectionName).insertOne(doc, options)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /**\n     * Returns if the collection is a capped collection.\n     */\n    MongoQueryRunner.prototype.isCapped = function (collectionName) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getCollection(collectionName).isCapped()];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /**\n     * Get the list of all indexes information for the collection.\n     */\n    MongoQueryRunner.prototype.listCollectionIndexes = function (collectionName, options) {\n        return this.getCollection(collectionName).listIndexes(options);\n    };\n    /**\n     * Run Map Reduce across a collection. Be aware that the inline option for out will return an array of results not a collection.\n     */\n    MongoQueryRunner.prototype.mapReduce = function (collectionName, map, reduce, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getCollection(collectionName).mapReduce(map, reduce, options)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /**\n     * Return N number of parallel cursors for a collection allowing parallel reading of entire collection.\n     * There are no ordering guarantees for returned results.\n     */\n    MongoQueryRunner.prototype.parallelCollectionScan = function (collectionName, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getCollection(collectionName).parallelCollectionScan(options)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /**\n     * Reindex all indexes on the collection Warning: reIndex is a blocking operation (indexes are rebuilt in the foreground) and will be slow for large collections.\n     */\n    MongoQueryRunner.prototype.reIndex = function (collectionName) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getCollection(collectionName).reIndex()];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /**\n     * Reindex all indexes on the collection Warning: reIndex is a blocking operation (indexes are rebuilt in the foreground) and will be slow for large collections.\n     */\n    MongoQueryRunner.prototype.rename = function (collectionName, newName, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getCollection(collectionName).rename(newName, options)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /**\n     * Replace a document on MongoDB.\n     */\n    MongoQueryRunner.prototype.replaceOne = function (collectionName, query, doc, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getCollection(collectionName).replaceOne(query, doc, options)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /**\n     * Get all the collection statistics.\n     */\n    MongoQueryRunner.prototype.stats = function (collectionName, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getCollection(collectionName).stats(options)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /**\n     * Update multiple documents on MongoDB.\n     */\n    MongoQueryRunner.prototype.updateMany = function (collectionName, query, update, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getCollection(collectionName).updateMany(query, update, options)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /**\n     * Update a single document on MongoDB.\n     */\n    MongoQueryRunner.prototype.updateOne = function (collectionName, query, update, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getCollection(collectionName).updateOne(query, update, options)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    // -------------------------------------------------------------------------\n    // Public Implemented Methods (from QueryRunner)\n    // -------------------------------------------------------------------------\n    /**\n     * Removes all collections from the currently connected database.\n     * Be careful with using this method and avoid using it in production or migrations\n     * (because it can clear all your database).\n     */\n    MongoQueryRunner.prototype.clearDatabase = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.databaseConnection.db(this.connection.driver.database).dropDatabase()];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * For MongoDB database we don't create connection, because its single connection already created by a driver.\n     */\n    MongoQueryRunner.prototype.connect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * For MongoDB database we don't release connection, because its single connection.\n     */\n    MongoQueryRunner.prototype.release = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * Starts transaction.\n     */\n    MongoQueryRunner.prototype.startTransaction = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * Commits transaction.\n     */\n    MongoQueryRunner.prototype.commitTransaction = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * Rollbacks transaction.\n     */\n    MongoQueryRunner.prototype.rollbackTransaction = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * Executes a given SQL query.\n     */\n    MongoQueryRunner.prototype.query = function (query, parameters) {\n        throw new Error(\"Executing SQL query is not supported by MongoDB driver.\");\n    };\n    /**\n     * Returns raw data stream.\n     */\n    MongoQueryRunner.prototype.stream = function (query, parameters, onEnd, onError) {\n        throw new Error(\"Stream is not supported by MongoDB driver.\");\n    };\n    /**\n     * Insert a new row with given values into the given table.\n     * Returns value of inserted object id.\n\n    async insert(collectionName: string, keyValues: ObjectLiteral): Promise<any> { // todo: fix any\n        const results = await this.databaseConnection\n            .collection(collectionName)\n            .insertOne(keyValues);\n        const generatedMap = this.connection.getMetadata(collectionName).objectIdColumn!.createValueMap(results.insertedId);\n        return {\n            result: results,\n            generatedMap: generatedMap\n        };\n    }*/\n    /**\n     * Updates rows that match given conditions in the given table.\n\n    async update(collectionName: string, valuesMap: ObjectLiteral, conditions: ObjectLiteral): Promise<any> { // todo: fix any\n        await this.databaseConnection\n            .collection(collectionName)\n            .updateOne(conditions, valuesMap);\n    }*/\n    /**\n     * Deletes from the given table by a given conditions.\n\n    async delete(collectionName: string, conditions: ObjectLiteral|ObjectLiteral[]|string, maybeParameters?: any[]): Promise<any> { // todo: fix any\n        if (typeof conditions === \"string\")\n            throw new Error(`String condition is not supported by MongoDB driver.`);\n\n        await this.databaseConnection\n            .collection(collectionName)\n            .deleteOne(conditions);\n    }*/\n    /**\n     * Returns all available database names including system databases.\n     */\n    MongoQueryRunner.prototype.getDatabases = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"Schema update queries are not supported by MongoDB driver.\");\n            });\n        });\n    };\n    /**\n     * Returns all available schema names including system schemas.\n     * If database parameter specified, returns schemas of that database.\n     */\n    MongoQueryRunner.prototype.getSchemas = function (database) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"Schema update queries are not supported by MongoDB driver.\");\n            });\n        });\n    };\n    /**\n     * Loads given table's data from the database.\n     */\n    MongoQueryRunner.prototype.getTable = function (collectionName) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"Schema update queries are not supported by MongoDB driver.\");\n            });\n        });\n    };\n    /**\n     * Loads all tables (with given names) from the database and creates a Table from them.\n     */\n    MongoQueryRunner.prototype.getTables = function (collectionNames) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"Schema update queries are not supported by MongoDB driver.\");\n            });\n        });\n    };\n    /**\n     * Checks if database with the given name exist.\n     */\n    MongoQueryRunner.prototype.hasDatabase = function (database) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"Check database queries are not supported by MongoDB driver.\");\n            });\n        });\n    };\n    /**\n     * Checks if schema with the given name exist.\n     */\n    MongoQueryRunner.prototype.hasSchema = function (schema) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"Check schema queries are not supported by MongoDB driver.\");\n            });\n        });\n    };\n    /**\n     * Checks if table with the given name exist in the database.\n     */\n    MongoQueryRunner.prototype.hasTable = function (collectionName) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"Check schema queries are not supported by MongoDB driver.\");\n            });\n        });\n    };\n    /**\n     * Checks if column with the given name exist in the given table.\n     */\n    MongoQueryRunner.prototype.hasColumn = function (tableOrName, columnName) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"Schema update queries are not supported by MongoDB driver.\");\n            });\n        });\n    };\n    /**\n     * Creates a database if it's not created.\n     */\n    MongoQueryRunner.prototype.createDatabase = function (database) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"Database create queries are not supported by MongoDB driver.\");\n            });\n        });\n    };\n    /**\n     * Drops database.\n     */\n    MongoQueryRunner.prototype.dropDatabase = function (database, ifExist) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"Database drop queries are not supported by MongoDB driver.\");\n            });\n        });\n    };\n    /**\n     * Creates a new table schema.\n     */\n    MongoQueryRunner.prototype.createSchema = function (schema, ifNotExist) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"Schema create queries are not supported by MongoDB driver.\");\n            });\n        });\n    };\n    /**\n     * Drops table schema.\n     */\n    MongoQueryRunner.prototype.dropSchema = function (schemaPath, ifExist) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"Schema drop queries are not supported by MongoDB driver.\");\n            });\n        });\n    };\n    /**\n     * Creates a new table from the given table and columns inside it.\n     */\n    MongoQueryRunner.prototype.createTable = function (table) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"Schema update queries are not supported by MongoDB driver.\");\n            });\n        });\n    };\n    /**\n     * Drops the table.\n     */\n    MongoQueryRunner.prototype.dropTable = function (tableName) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"Schema update queries are not supported by MongoDB driver.\");\n            });\n        });\n    };\n    /**\n     * Renames the given table.\n     */\n    MongoQueryRunner.prototype.renameTable = function (oldTableOrName, newTableOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"Schema update queries are not supported by MongoDB driver.\");\n            });\n        });\n    };\n    /**\n     * Creates a new column from the column in the table.\n     */\n    MongoQueryRunner.prototype.addColumn = function (tableOrName, column) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"Schema update queries are not supported by MongoDB driver.\");\n            });\n        });\n    };\n    /**\n     * Creates a new columns from the column in the table.\n     */\n    MongoQueryRunner.prototype.addColumns = function (tableOrName, columns) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"Schema update queries are not supported by MongoDB driver.\");\n            });\n        });\n    };\n    /**\n     * Renames column in the given table.\n     */\n    MongoQueryRunner.prototype.renameColumn = function (tableOrName, oldTableColumnOrName, newTableColumnOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"Schema update queries are not supported by MongoDB driver.\");\n            });\n        });\n    };\n    /**\n     * Changes a column in the table.\n     */\n    MongoQueryRunner.prototype.changeColumn = function (tableOrName, oldTableColumnOrName, newColumn) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"Schema update queries are not supported by MongoDB driver.\");\n            });\n        });\n    };\n    /**\n     * Changes a column in the table.\n     */\n    MongoQueryRunner.prototype.changeColumns = function (tableOrName, changedColumns) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"Schema update queries are not supported by MongoDB driver.\");\n            });\n        });\n    };\n    /**\n     * Drops column in the table.\n     */\n    MongoQueryRunner.prototype.dropColumn = function (tableOrName, columnOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"Schema update queries are not supported by MongoDB driver.\");\n            });\n        });\n    };\n    /**\n     * Drops the columns in the table.\n     */\n    MongoQueryRunner.prototype.dropColumns = function (tableOrName, columns) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"Schema update queries are not supported by MongoDB driver.\");\n            });\n        });\n    };\n    /**\n     * Creates a new primary key.\n     */\n    MongoQueryRunner.prototype.createPrimaryKey = function (tableOrName, columnNames) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"Schema update queries are not supported by MongoDB driver.\");\n            });\n        });\n    };\n    /**\n     * Updates composite primary keys.\n     */\n    MongoQueryRunner.prototype.updatePrimaryKeys = function (tableOrName, columns) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"Schema update queries are not supported by MongoDB driver.\");\n            });\n        });\n    };\n    /**\n     * Drops a primary key.\n     */\n    MongoQueryRunner.prototype.dropPrimaryKey = function (tableOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"Schema update queries are not supported by MongoDB driver.\");\n            });\n        });\n    };\n    /**\n     * Creates a new unique constraint.\n     */\n    MongoQueryRunner.prototype.createUniqueConstraint = function (tableOrName, uniqueConstraint) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"Schema update queries are not supported by MongoDB driver.\");\n            });\n        });\n    };\n    /**\n     * Creates a new unique constraints.\n     */\n    MongoQueryRunner.prototype.createUniqueConstraints = function (tableOrName, uniqueConstraints) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"Schema update queries are not supported by MongoDB driver.\");\n            });\n        });\n    };\n    /**\n     * Drops an unique constraint.\n     */\n    MongoQueryRunner.prototype.dropUniqueConstraint = function (tableOrName, uniqueOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"Schema update queries are not supported by MongoDB driver.\");\n            });\n        });\n    };\n    /**\n     * Drops an unique constraints.\n     */\n    MongoQueryRunner.prototype.dropUniqueConstraints = function (tableOrName, uniqueConstraints) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"Schema update queries are not supported by MongoDB driver.\");\n            });\n        });\n    };\n    /**\n     * Creates a new check constraint.\n     */\n    MongoQueryRunner.prototype.createCheckConstraint = function (tableOrName, checkConstraint) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"Schema update queries are not supported by MongoDB driver.\");\n            });\n        });\n    };\n    /**\n     * Creates a new check constraints.\n     */\n    MongoQueryRunner.prototype.createCheckConstraints = function (tableOrName, checkConstraints) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"Schema update queries are not supported by MongoDB driver.\");\n            });\n        });\n    };\n    /**\n     * Drops check constraint.\n     */\n    MongoQueryRunner.prototype.dropCheckConstraint = function (tableOrName, checkOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"Schema update queries are not supported by MongoDB driver.\");\n            });\n        });\n    };\n    /**\n     * Drops check constraints.\n     */\n    MongoQueryRunner.prototype.dropCheckConstraints = function (tableOrName, checkConstraints) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"Schema update queries are not supported by MongoDB driver.\");\n            });\n        });\n    };\n    /**\n     * Creates a new foreign key.\n     */\n    MongoQueryRunner.prototype.createForeignKey = function (tableOrName, foreignKey) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"Schema update queries are not supported by MongoDB driver.\");\n            });\n        });\n    };\n    /**\n     * Creates a new foreign keys.\n     */\n    MongoQueryRunner.prototype.createForeignKeys = function (tableOrName, foreignKeys) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"Schema update queries are not supported by MongoDB driver.\");\n            });\n        });\n    };\n    /**\n     * Drops a foreign key from the table.\n     */\n    MongoQueryRunner.prototype.dropForeignKey = function (tableOrName, foreignKey) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"Schema update queries are not supported by MongoDB driver.\");\n            });\n        });\n    };\n    /**\n     * Drops a foreign keys from the table.\n     */\n    MongoQueryRunner.prototype.dropForeignKeys = function (tableOrName, foreignKeys) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"Schema update queries are not supported by MongoDB driver.\");\n            });\n        });\n    };\n    /**\n     * Creates a new index.\n     */\n    MongoQueryRunner.prototype.createIndex = function (tableOrName, index) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"Schema update queries are not supported by MongoDB driver.\");\n            });\n        });\n    };\n    /**\n     * Creates a new indices\n     */\n    MongoQueryRunner.prototype.createIndices = function (tableOrName, indices) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"Schema update queries are not supported by MongoDB driver.\");\n            });\n        });\n    };\n    /**\n     * Drops an index from the table.\n     */\n    MongoQueryRunner.prototype.dropIndex = function (collectionName, indexName) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"Schema update queries are not supported by MongoDB driver.\");\n            });\n        });\n    };\n    /**\n     * Drops an indices from the table.\n     */\n    MongoQueryRunner.prototype.dropIndices = function (tableOrName, indices) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"Schema update queries are not supported by MongoDB driver.\");\n            });\n        });\n    };\n    /**\n     * Drops collection.\n     */\n    MongoQueryRunner.prototype.clearTable = function (collectionName) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.databaseConnection\n                            .db(this.connection.driver.database)\n                            .dropCollection(collectionName)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Enables special query runner mode in which sql queries won't be executed,\n     * instead they will be memorized into a special variable inside query runner.\n     * You can get memorized sql using getMemorySql() method.\n     */\n    MongoQueryRunner.prototype.enableSqlMemory = function () {\n        throw new Error(\"This operation is not supported by MongoDB driver.\");\n    };\n    /**\n     * Disables special query runner mode in which sql queries won't be executed\n     * started by calling enableSqlMemory() method.\n     *\n     * Previously memorized sql will be flushed.\n     */\n    MongoQueryRunner.prototype.disableSqlMemory = function () {\n        throw new Error(\"This operation is not supported by MongoDB driver.\");\n    };\n    /**\n     * Flushes all memorized sqls.\n     */\n    MongoQueryRunner.prototype.clearSqlMemory = function () {\n        throw new Error(\"This operation is not supported by MongoDB driver.\");\n    };\n    /**\n     * Gets sql stored in the memory. Parameters in the sql are already replaced.\n     */\n    MongoQueryRunner.prototype.getMemorySql = function () {\n        throw new Error(\"This operation is not supported by MongoDB driver.\");\n    };\n    /**\n     * Executes up sql queries.\n     */\n    MongoQueryRunner.prototype.executeMemoryUpSql = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"This operation is not supported by MongoDB driver.\");\n            });\n        });\n    };\n    /**\n     * Executes down sql queries.\n     */\n    MongoQueryRunner.prototype.executeMemoryDownSql = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"This operation is not supported by MongoDB driver.\");\n            });\n        });\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Gets collection from the database with a given name.\n     */\n    MongoQueryRunner.prototype.getCollection = function (collectionName) {\n        return this.databaseConnection.db(this.connection.driver.database).collection(collectionName);\n    };\n    return MongoQueryRunner;\n}());\nexports.MongoQueryRunner = MongoQueryRunner;\n\n//# sourceMappingURL=MongoQueryRunner.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/driver/mongodb/MongoQueryRunner.js?");

/***/ }),

/***/ "./node_modules/typeorm/driver/mongodb/typings.js":
/*!********************************************************!*\
  !*** ./node_modules/typeorm/driver/mongodb/typings.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar PlatformTools_1 = __webpack_require__(/*! ../../platform/PlatformTools */ \"./node_modules/typeorm/platform/PlatformTools.js\");\n\n//# sourceMappingURL=typings.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/driver/mongodb/typings.js?");

/***/ }),

/***/ "./node_modules/typeorm/driver/mysql/MysqlDriver.js":
/*!**********************************************************!*\
  !*** ./node_modules/typeorm/driver/mysql/MysqlDriver.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(Buffer) {\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ConnectionIsNotSetError_1 = __webpack_require__(/*! ../../error/ConnectionIsNotSetError */ \"./node_modules/typeorm/error/ConnectionIsNotSetError.js\");\nvar DriverPackageNotInstalledError_1 = __webpack_require__(/*! ../../error/DriverPackageNotInstalledError */ \"./node_modules/typeorm/error/DriverPackageNotInstalledError.js\");\nvar DriverUtils_1 = __webpack_require__(/*! ../DriverUtils */ \"./node_modules/typeorm/driver/DriverUtils.js\");\nvar MysqlQueryRunner_1 = __webpack_require__(/*! ./MysqlQueryRunner */ \"./node_modules/typeorm/driver/mysql/MysqlQueryRunner.js\");\nvar DateUtils_1 = __webpack_require__(/*! ../../util/DateUtils */ \"./node_modules/typeorm/util/DateUtils.js\");\nvar PlatformTools_1 = __webpack_require__(/*! ../../platform/PlatformTools */ \"./node_modules/typeorm/platform/PlatformTools.js\");\nvar RdbmsSchemaBuilder_1 = __webpack_require__(/*! ../../schema-builder/RdbmsSchemaBuilder */ \"./node_modules/typeorm/schema-builder/RdbmsSchemaBuilder.js\");\nvar OrmUtils_1 = __webpack_require__(/*! ../../util/OrmUtils */ \"./node_modules/typeorm/util/OrmUtils.js\");\n/**\n * Organizes communication with MySQL DBMS.\n */\nvar MysqlDriver = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function MysqlDriver(connection) {\n        /**\n         * Indicates if replication is enabled.\n         */\n        this.isReplicated = false;\n        /**\n         * Indicates if tree tables are supported by this driver.\n         */\n        this.treeSupport = true;\n        /**\n         * Gets list of supported column data types by a driver.\n         *\n         * @see https://www.tutorialspoint.com/mysql/mysql-data-types.htm\n         * @see https://dev.mysql.com/doc/refman/5.7/en/data-types.html\n         */\n        this.supportedDataTypes = [\n            \"int\",\n            \"tinyint\",\n            \"smallint\",\n            \"mediumint\",\n            \"bigint\",\n            \"float\",\n            \"double\",\n            \"dec\",\n            \"decimal\",\n            \"numeric\",\n            \"date\",\n            \"datetime\",\n            \"timestamp\",\n            \"time\",\n            \"year\",\n            \"char\",\n            \"varchar\",\n            \"nvarchar\",\n            \"blob\",\n            \"text\",\n            \"tinyblob\",\n            \"tinytext\",\n            \"mediumblob\",\n            \"mediumtext\",\n            \"longblob\",\n            \"longtext\",\n            \"enum\",\n            \"json\",\n            \"binary\",\n            \"varbinary\",\n            \"geometry\",\n            \"point\",\n            \"linestring\",\n            \"polygon\",\n            \"multipoint\",\n            \"multilinestring\",\n            \"multipolygon\",\n            \"geometrycollection\"\n        ];\n        /**\n         * Gets list of spatial column data types.\n         */\n        this.spatialTypes = [\n            \"geometry\",\n            \"point\",\n            \"linestring\",\n            \"polygon\",\n            \"multipoint\",\n            \"multilinestring\",\n            \"multipolygon\",\n            \"geometrycollection\"\n        ];\n        /**\n         * Gets list of column data types that support length by a driver.\n         */\n        this.withLengthColumnTypes = [\n            \"char\",\n            \"varchar\",\n            \"nvarchar\",\n            \"binary\",\n            \"varbinary\"\n        ];\n        /**\n         * Gets list of column data types that support length by a driver.\n         */\n        this.withWidthColumnTypes = [\n            \"tinyint\",\n            \"smallint\",\n            \"mediumint\",\n            \"int\",\n            \"bigint\"\n        ];\n        /**\n         * Gets list of column data types that support precision by a driver.\n         */\n        this.withPrecisionColumnTypes = [\n            \"decimal\",\n            \"float\",\n            \"double\",\n            \"time\",\n            \"datetime\",\n            \"timestamp\"\n        ];\n        /**\n         * Gets list of column data types that supports scale by a driver.\n         */\n        this.withScaleColumnTypes = [\n            \"decimal\",\n            \"float\",\n            \"double\",\n        ];\n        /**\n         * Gets list of column data types that supports UNSIGNED and ZEROFILL attributes.\n         */\n        this.unsignedAndZerofillTypes = [\n            \"int\",\n            \"smallint\",\n            \"tinyint\",\n            \"mediumint\",\n            \"bigint\",\n            \"decimal\",\n            \"float\",\n            \"double\"\n        ];\n        /**\n         * ORM has special columns and we need to know what database column types should be for those columns.\n         * Column types are driver dependant.\n         */\n        this.mappedDataTypes = {\n            createDate: \"datetime\",\n            createDatePrecision: 6,\n            createDateDefault: \"CURRENT_TIMESTAMP(6)\",\n            updateDate: \"datetime\",\n            updateDatePrecision: 6,\n            updateDateDefault: \"CURRENT_TIMESTAMP(6)\",\n            version: \"int\",\n            treeLevel: \"int\",\n            migrationId: \"int\",\n            migrationName: \"varchar\",\n            migrationTimestamp: \"bigint\",\n            cacheId: \"int\",\n            cacheIdentifier: \"varchar\",\n            cacheTime: \"bigint\",\n            cacheDuration: \"int\",\n            cacheQuery: \"text\",\n            cacheResult: \"text\",\n        };\n        /**\n         * Default values of length, precision and scale depends on column data type.\n         * Used in the cases when length/precision/scale is not specified by user.\n         */\n        this.dataTypeDefaults = {\n            \"varchar\": { length: 255 },\n            \"char\": { length: 1 },\n            \"binary\": { length: 1 },\n            \"varbinary\": { length: 255 },\n            \"decimal\": { precision: 10, scale: 0 },\n            \"float\": { precision: 12 },\n            \"double\": { precision: 22 },\n            \"int\": { width: 11 },\n            \"tinyint\": { width: 4 },\n            \"smallint\": { width: 6 },\n            \"mediumint\": { width: 9 },\n            \"bigint\": { width: 20 }\n        };\n        this.connection = connection;\n        this.options = connection.options;\n        this.isReplicated = this.options.replication ? true : false;\n        // load mysql package\n        this.loadDependencies();\n        this.database = this.options.replication ? this.options.replication.master.database : this.options.database;\n        // validate options to make sure everything is set\n        // todo: revisit validation with replication in mind\n        // if (!(this.options.host || (this.options.extra && this.options.extra.socketPath)) && !this.options.socketPath)\n        //     throw new DriverOptionNotSetError(\"socketPath and host\");\n        // if (!this.options.username)\n        //     throw new DriverOptionNotSetError(\"username\");\n        // if (!this.options.database)\n        //     throw new DriverOptionNotSetError(\"database\");\n        // todo: check what is going on when connection is setup without database and how to connect to a database then?\n        // todo: provide options to auto-create a database if it does not exist yet\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Performs connection to the database.\n     */\n    MysqlDriver.prototype.connect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!this.options.replication) return [3 /*break*/, 1];\n                        this.poolCluster = this.mysql.createPoolCluster(this.options.replication);\n                        this.options.replication.slaves.forEach(function (slave, index) {\n                            _this.poolCluster.add(\"SLAVE\" + index, _this.createConnectionOptions(_this.options, slave));\n                        });\n                        this.poolCluster.add(\"MASTER\", this.createConnectionOptions(this.options, this.options.replication.master));\n                        return [3 /*break*/, 3];\n                    case 1:\n                        _a = this;\n                        return [4 /*yield*/, this.createPool(this.createConnectionOptions(this.options, this.options))];\n                    case 2:\n                        _a.pool = _b.sent();\n                        _b.label = 3;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Makes any action after connection (e.g. create extensions in Postgres driver).\n     */\n    MysqlDriver.prototype.afterConnect = function () {\n        return Promise.resolve();\n    };\n    /**\n     * Closes connection with the database.\n     */\n    MysqlDriver.prototype.disconnect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                if (!this.poolCluster && !this.pool)\n                    return [2 /*return*/, Promise.reject(new ConnectionIsNotSetError_1.ConnectionIsNotSetError(\"mysql\"))];\n                if (this.poolCluster) {\n                    return [2 /*return*/, new Promise(function (ok, fail) {\n                            _this.poolCluster.end(function (err) { return err ? fail(err) : ok(); });\n                            _this.poolCluster = undefined;\n                        })];\n                }\n                if (this.pool) {\n                    return [2 /*return*/, new Promise(function (ok, fail) {\n                            _this.pool.end(function (err) {\n                                if (err)\n                                    return fail(err);\n                                _this.pool = undefined;\n                                ok();\n                            });\n                        })];\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * Creates a schema builder used to build and sync a schema.\n     */\n    MysqlDriver.prototype.createSchemaBuilder = function () {\n        return new RdbmsSchemaBuilder_1.RdbmsSchemaBuilder(this.connection);\n    };\n    /**\n     * Creates a query runner used to execute database queries.\n     */\n    MysqlDriver.prototype.createQueryRunner = function (mode) {\n        if (mode === void 0) { mode = \"master\"; }\n        return new MysqlQueryRunner_1.MysqlQueryRunner(this, mode);\n    };\n    /**\n     * Replaces parameters in the given sql with special escaping character\n     * and an array of parameter names to be passed to a query.\n     */\n    MysqlDriver.prototype.escapeQueryWithParameters = function (sql, parameters, nativeParameters) {\n        var escapedParameters = Object.keys(nativeParameters).map(function (key) { return nativeParameters[key]; });\n        if (!parameters || !Object.keys(parameters).length)\n            return [sql, escapedParameters];\n        var keys = Object.keys(parameters).map(function (parameter) { return \"(:(\\\\.\\\\.\\\\.)?\" + parameter + \"\\\\b)\"; }).join(\"|\");\n        sql = sql.replace(new RegExp(keys, \"g\"), function (key) {\n            var value;\n            if (key.substr(0, 4) === \":...\") {\n                value = parameters[key.substr(4)];\n            }\n            else {\n                value = parameters[key.substr(1)];\n            }\n            if (value instanceof Function) {\n                return value();\n            }\n            else {\n                escapedParameters.push(value);\n                return \"?\";\n            }\n        }); // todo: make replace only in value statements, otherwise problems\n        return [sql, escapedParameters];\n    };\n    /**\n     * Escapes a column name.\n     */\n    MysqlDriver.prototype.escape = function (columnName) {\n        return \"`\" + columnName + \"`\";\n    };\n    /**\n     * Build full table name with database name, schema name and table name.\n     * E.g. \"myDB\".\"mySchema\".\"myTable\"\n     */\n    MysqlDriver.prototype.buildTableName = function (tableName, schema, database) {\n        return database ? database + \".\" + tableName : tableName;\n    };\n    /**\n     * Prepares given value to a value to be persisted, based on its column type and metadata.\n     */\n    MysqlDriver.prototype.preparePersistentValue = function (value, columnMetadata) {\n        if (columnMetadata.transformer)\n            value = columnMetadata.transformer.to(value);\n        if (value === null || value === undefined)\n            return value;\n        if (columnMetadata.type === Boolean) {\n            return value === true ? 1 : 0;\n        }\n        else if (columnMetadata.type === \"date\") {\n            return DateUtils_1.DateUtils.mixedDateToDateString(value);\n        }\n        else if (columnMetadata.type === \"time\") {\n            return DateUtils_1.DateUtils.mixedDateToTimeString(value);\n        }\n        else if (columnMetadata.type === \"json\") {\n            return JSON.stringify(value);\n        }\n        else if (columnMetadata.type === \"timestamp\" || columnMetadata.type === \"datetime\" || columnMetadata.type === Date) {\n            return DateUtils_1.DateUtils.mixedDateToDate(value);\n        }\n        else if (columnMetadata.type === \"simple-array\") {\n            return DateUtils_1.DateUtils.simpleArrayToString(value);\n        }\n        else if (columnMetadata.type === \"simple-json\") {\n            return DateUtils_1.DateUtils.simpleJsonToString(value);\n        }\n        return value;\n    };\n    /**\n     * Prepares given value to a value to be persisted, based on its column type or metadata.\n     */\n    MysqlDriver.prototype.prepareHydratedValue = function (value, columnMetadata) {\n        if (value === null || value === undefined)\n            return value;\n        if (columnMetadata.type === Boolean) {\n            value = value ? true : false;\n        }\n        else if (columnMetadata.type === \"datetime\" || columnMetadata.type === Date) {\n            value = DateUtils_1.DateUtils.normalizeHydratedDate(value);\n        }\n        else if (columnMetadata.type === \"date\") {\n            value = DateUtils_1.DateUtils.mixedDateToDateString(value);\n        }\n        else if (columnMetadata.type === \"json\") {\n            value = typeof value === \"string\" ? JSON.parse(value) : value;\n        }\n        else if (columnMetadata.type === \"time\") {\n            value = DateUtils_1.DateUtils.mixedTimeToString(value);\n        }\n        else if (columnMetadata.type === \"simple-array\") {\n            value = DateUtils_1.DateUtils.stringToSimpleArray(value);\n        }\n        else if (columnMetadata.type === \"simple-json\") {\n            value = DateUtils_1.DateUtils.stringToSimpleJson(value);\n        }\n        if (columnMetadata.transformer)\n            value = columnMetadata.transformer.from(value);\n        return value;\n    };\n    /**\n     * Creates a database type from a given column metadata.\n     */\n    MysqlDriver.prototype.normalizeType = function (column) {\n        if (column.type === Number || column.type === \"integer\") {\n            return \"int\";\n        }\n        else if (column.type === String || column.type === \"nvarchar\") {\n            return \"varchar\";\n        }\n        else if (column.type === Date) {\n            return \"datetime\";\n        }\n        else if (column.type === Buffer) {\n            return \"blob\";\n        }\n        else if (column.type === Boolean) {\n            return \"tinyint\";\n        }\n        else if (column.type === \"numeric\" || column.type === \"dec\") {\n            return \"decimal\";\n        }\n        else if (column.type === \"uuid\") {\n            return \"varchar\";\n        }\n        else if (column.type === \"simple-array\" || column.type === \"simple-json\") {\n            return \"text\";\n        }\n        else {\n            return column.type || \"\";\n        }\n    };\n    /**\n     * Normalizes \"default\" value of the column.\n     */\n    MysqlDriver.prototype.normalizeDefault = function (columnMetadata) {\n        var defaultValue = columnMetadata.default;\n        if (typeof defaultValue === \"number\") {\n            return \"\" + defaultValue;\n        }\n        else if (typeof defaultValue === \"boolean\") {\n            return defaultValue === true ? \"1\" : \"0\";\n        }\n        else if (typeof defaultValue === \"function\") {\n            return defaultValue();\n        }\n        else if (typeof defaultValue === \"string\") {\n            return \"'\" + defaultValue + \"'\";\n        }\n        else {\n            return defaultValue;\n        }\n    };\n    /**\n     * Normalizes \"isUnique\" value of the column.\n     */\n    MysqlDriver.prototype.normalizeIsUnique = function (column) {\n        return column.entityMetadata.indices.some(function (idx) { return idx.isUnique && idx.columns.length === 1 && idx.columns[0] === column; });\n    };\n    /**\n     * Returns default column lengths, which is required on column creation.\n     */\n    MysqlDriver.prototype.getColumnLength = function (column) {\n        if (column.length)\n            return column.length.toString();\n        switch (column.type) {\n            case String:\n            case \"varchar\":\n            case \"nvarchar\":\n                return \"255\";\n            case \"uuid\":\n                return \"36\";\n            case \"varbinary\":\n                return \"255\";\n            default:\n                return \"\";\n        }\n    };\n    /**\n     * Creates column type definition including length, precision and scale\n     */\n    MysqlDriver.prototype.createFullType = function (column) {\n        var type = column.type;\n        // used 'getColumnLength()' method, because MySQL requires column length for `varchar`, `nvarchar` and `varbinary` data types\n        if (this.getColumnLength(column)) {\n            type += \"(\" + this.getColumnLength(column) + \")\";\n        }\n        else if (column.width) {\n            type += \"(\" + column.width + \")\";\n        }\n        else if (column.precision !== null && column.precision !== undefined && column.scale !== null && column.scale !== undefined) {\n            type += \"(\" + column.precision + \",\" + column.scale + \")\";\n        }\n        else if (column.precision !== null && column.precision !== undefined) {\n            type += \"(\" + column.precision + \")\";\n        }\n        if (column.isArray)\n            type += \" array\";\n        return type;\n    };\n    /**\n     * Obtains a new database connection to a master server.\n     * Used for replication.\n     * If replication is not setup then returns default connection's database connection.\n     */\n    MysqlDriver.prototype.obtainMasterConnection = function () {\n        var _this = this;\n        return new Promise(function (ok, fail) {\n            if (_this.poolCluster) {\n                _this.poolCluster.getConnection(\"MASTER\", function (err, dbConnection) {\n                    err ? fail(err) : ok(_this.prepareDbConnection(dbConnection));\n                });\n            }\n            else if (_this.pool) {\n                _this.pool.getConnection(function (err, dbConnection) {\n                    err ? fail(err) : ok(_this.prepareDbConnection(dbConnection));\n                });\n            }\n            else {\n                fail(new Error(\"Connection is not established with mysql database\"));\n            }\n        });\n    };\n    /**\n     * Obtains a new database connection to a slave server.\n     * Used for replication.\n     * If replication is not setup then returns master (default) connection's database connection.\n     */\n    MysqlDriver.prototype.obtainSlaveConnection = function () {\n        var _this = this;\n        if (!this.poolCluster)\n            return this.obtainMasterConnection();\n        return new Promise(function (ok, fail) {\n            _this.poolCluster.getConnection(\"SLAVE*\", function (err, dbConnection) {\n                err ? fail(err) : ok(dbConnection);\n            });\n        });\n    };\n    /**\n     * Creates generated map of values generated or returned by database after INSERT query.\n     */\n    MysqlDriver.prototype.createGeneratedMap = function (metadata, insertResult) {\n        var generatedMap = metadata.generatedColumns.reduce(function (map, generatedColumn) {\n            var value;\n            if (generatedColumn.generationStrategy === \"increment\" && insertResult.insertId) {\n                value = insertResult.insertId;\n                // } else if (generatedColumn.generationStrategy === \"uuid\") {\n                //     console.log(\"getting db value:\", generatedColumn.databaseName);\n                //     value = generatedColumn.getEntityValue(uuidMap);\n            }\n            return OrmUtils_1.OrmUtils.mergeDeep(map, generatedColumn.createValueMap(value));\n        }, {});\n        return Object.keys(generatedMap).length > 0 ? generatedMap : undefined;\n    };\n    /**\n     * Differentiate columns of this table and columns from the given column metadatas columns\n     * and returns only changed.\n     */\n    MysqlDriver.prototype.findChangedColumns = function (tableColumns, columnMetadatas) {\n        var _this = this;\n        return columnMetadatas.filter(function (columnMetadata) {\n            var tableColumn = tableColumns.find(function (c) { return c.name === columnMetadata.databaseName; });\n            if (!tableColumn)\n                return false; // we don't need new columns, we only need exist and changed\n            // console.log(\"table:\", columnMetadata.entityMetadata.tableName);\n            // console.log(\"name:\", tableColumn.name, columnMetadata.databaseName);\n            // console.log(\"type:\", tableColumn.type, this.normalizeType(columnMetadata));\n            // console.log(\"length:\", tableColumn.length, columnMetadata.length);\n            // console.log(\"width:\", tableColumn.width, columnMetadata.width);\n            // console.log(\"precision:\", tableColumn.precision, columnMetadata.precision);\n            // console.log(\"scale:\", tableColumn.scale, columnMetadata.scale);\n            // console.log(\"zerofill:\", tableColumn.zerofill, columnMetadata.zerofill);\n            // console.log(\"unsigned:\", tableColumn.unsigned, columnMetadata.unsigned);\n            // console.log(\"asExpression:\", tableColumn.asExpression, columnMetadata.asExpression);\n            // console.log(\"generatedType:\", tableColumn.generatedType, columnMetadata.generatedType);\n            // console.log(\"comment:\", tableColumn.comment, columnMetadata.comment);\n            // console.log(\"default:\", tableColumn.default, columnMetadata.default);\n            // console.log(\"default changed:\", !this.compareDefaultValues(this.normalizeDefault(columnMetadata), tableColumn.default));\n            // console.log(\"onUpdate:\", tableColumn.onUpdate, columnMetadata.onUpdate);\n            // console.log(\"isPrimary:\", tableColumn.isPrimary, columnMetadata.isPrimary);\n            // console.log(\"isNullable:\", tableColumn.isNullable, columnMetadata.isNullable);\n            // console.log(\"isUnique:\", tableColumn.isUnique, this.normalizeIsUnique(columnMetadata));\n            // console.log(\"isGenerated:\", tableColumn.isGenerated, columnMetadata.isGenerated);\n            // console.log(\"==========================================\");\n            return tableColumn.name !== columnMetadata.databaseName\n                || tableColumn.type !== _this.normalizeType(columnMetadata)\n                || tableColumn.length !== columnMetadata.length\n                || tableColumn.width !== columnMetadata.width\n                || tableColumn.precision !== columnMetadata.precision\n                || tableColumn.scale !== columnMetadata.scale\n                || tableColumn.zerofill !== columnMetadata.zerofill\n                || tableColumn.unsigned !== columnMetadata.unsigned\n                || tableColumn.asExpression !== columnMetadata.asExpression\n                || tableColumn.generatedType !== columnMetadata.generatedType\n                // || tableColumn.comment !== columnMetadata.comment // todo\n                || !_this.compareDefaultValues(_this.normalizeDefault(columnMetadata), tableColumn.default)\n                || tableColumn.onUpdate !== columnMetadata.onUpdate\n                || tableColumn.isPrimary !== columnMetadata.isPrimary\n                || tableColumn.isNullable !== columnMetadata.isNullable\n                || tableColumn.isUnique !== _this.normalizeIsUnique(columnMetadata)\n                || (columnMetadata.generationStrategy !== \"uuid\" && tableColumn.isGenerated !== columnMetadata.isGenerated);\n        });\n    };\n    /**\n     * Returns true if driver supports RETURNING / OUTPUT statement.\n     */\n    MysqlDriver.prototype.isReturningSqlSupported = function () {\n        return false;\n    };\n    /**\n     * Returns true if driver supports uuid values generation on its own.\n     */\n    MysqlDriver.prototype.isUUIDGenerationSupported = function () {\n        return false;\n    };\n    /**\n     * Creates an escaped parameter.\n     */\n    MysqlDriver.prototype.createParameter = function (parameterName, index) {\n        return \"?\";\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Loads all driver dependencies.\n     */\n    MysqlDriver.prototype.loadDependencies = function () {\n        try {\n            this.mysql = PlatformTools_1.PlatformTools.load(\"mysql\"); // try to load first supported package\n            /*\n             * Some frameworks (such as Jest) may mess up Node's require cache and provide garbage for the 'mysql' module\n             * if it was not installed. We check that the object we got actually contains something otherwise we treat\n             * it as if the `require` call failed.\n             *\n             * @see https://github.com/typeorm/typeorm/issues/1373\n             */\n            if (Object.keys(this.mysql).length === 0) {\n                throw new Error(\"'mysql' was found but it is empty. Falling back to 'mysql2'.\");\n            }\n        }\n        catch (e) {\n            try {\n                this.mysql = PlatformTools_1.PlatformTools.load(\"mysql2\"); // try to load second supported package\n            }\n            catch (e) {\n                throw new DriverPackageNotInstalledError_1.DriverPackageNotInstalledError(\"Mysql\", \"mysql\");\n            }\n        }\n    };\n    /**\n     * Creates a new connection pool for a given database credentials.\n     */\n    MysqlDriver.prototype.createConnectionOptions = function (options, credentials) {\n        credentials = Object.assign(credentials, DriverUtils_1.DriverUtils.buildDriverOptions(credentials)); // todo: do it better way\n        // build connection options for the driver\n        return Object.assign({}, {\n            charset: options.charset,\n            timezone: options.timezone,\n            connectTimeout: options.connectTimeout,\n            insecureAuth: options.insecureAuth,\n            supportBigNumbers: options.supportBigNumbers !== undefined ? options.supportBigNumbers : true,\n            bigNumberStrings: options.bigNumberStrings !== undefined ? options.bigNumberStrings : true,\n            dateStrings: options.dateStrings,\n            debug: options.debug,\n            trace: options.trace,\n            multipleStatements: options.multipleStatements,\n            flags: options.flags\n        }, {\n            host: credentials.host,\n            user: credentials.username,\n            password: credentials.password,\n            database: credentials.database,\n            port: credentials.port,\n            ssl: options.ssl\n        }, options.extra || {});\n    };\n    /**\n     * Creates a new connection pool for a given database credentials.\n     */\n    MysqlDriver.prototype.createPool = function (connectionOptions) {\n        // create a connection pool\n        var pool = this.mysql.createPool(connectionOptions);\n        // make sure connection is working fine\n        return new Promise(function (ok, fail) {\n            // (issue #610) we make first connection to database to make sure if connection credentials are wrong\n            // we give error before calling any other method that creates actual query runner\n            pool.getConnection(function (err, connection) {\n                if (err)\n                    return pool.end(function () { return fail(err); });\n                connection.release();\n                ok(pool);\n            });\n        });\n    };\n    /**\n     * Attaches all required base handlers to a database connection, such as the unhandled error handler.\n     */\n    MysqlDriver.prototype.prepareDbConnection = function (connection) {\n        var logger = this.connection.logger;\n        /*\n          Attaching an error handler to connection errors is essential, as, otherwise, errors raised will go unhandled and\n          cause the hosting app to crash.\n         */\n        if (connection.listeners(\"error\").length === 0) {\n            connection.on(\"error\", function (error) { return logger.log(\"warn\", \"MySQL connection raised an error. \" + error); });\n        }\n        return connection;\n    };\n    /**\n     * Checks if \"DEFAULT\" values in the column metadata and in the database are equal.\n     */\n    MysqlDriver.prototype.compareDefaultValues = function (columnMetadataValue, databaseValue) {\n        if (typeof columnMetadataValue === \"string\" && typeof databaseValue === \"string\") {\n            // we need to cut out \"'\" because in mysql we can understand returned value is a string or a function\n            // as result compare cannot understand if default is really changed or not\n            columnMetadataValue = columnMetadataValue.replace(/^'+|'+$/g, \"\");\n            databaseValue = databaseValue.replace(/^'+|'+$/g, \"\");\n        }\n        return columnMetadataValue === databaseValue;\n    };\n    return MysqlDriver;\n}());\nexports.MysqlDriver = MysqlDriver;\n\n//# sourceMappingURL=MysqlDriver.js.map\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../node-libs-browser/node_modules/buffer/index.js */ \"./node_modules/node-libs-browser/node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:///./node_modules/typeorm/driver/mysql/MysqlDriver.js?");

/***/ }),

/***/ "./node_modules/typeorm/driver/mysql/MysqlQueryRunner.js":
/*!***************************************************************!*\
  !*** ./node_modules/typeorm/driver/mysql/MysqlQueryRunner.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TransactionAlreadyStartedError_1 = __webpack_require__(/*! ../../error/TransactionAlreadyStartedError */ \"./node_modules/typeorm/error/TransactionAlreadyStartedError.js\");\nvar TransactionNotStartedError_1 = __webpack_require__(/*! ../../error/TransactionNotStartedError */ \"./node_modules/typeorm/error/TransactionNotStartedError.js\");\nvar TableColumn_1 = __webpack_require__(/*! ../../schema-builder/table/TableColumn */ \"./node_modules/typeorm/schema-builder/table/TableColumn.js\");\nvar Table_1 = __webpack_require__(/*! ../../schema-builder/table/Table */ \"./node_modules/typeorm/schema-builder/table/Table.js\");\nvar TableForeignKey_1 = __webpack_require__(/*! ../../schema-builder/table/TableForeignKey */ \"./node_modules/typeorm/schema-builder/table/TableForeignKey.js\");\nvar TableIndex_1 = __webpack_require__(/*! ../../schema-builder/table/TableIndex */ \"./node_modules/typeorm/schema-builder/table/TableIndex.js\");\nvar QueryRunnerAlreadyReleasedError_1 = __webpack_require__(/*! ../../error/QueryRunnerAlreadyReleasedError */ \"./node_modules/typeorm/error/QueryRunnerAlreadyReleasedError.js\");\nvar OrmUtils_1 = __webpack_require__(/*! ../../util/OrmUtils */ \"./node_modules/typeorm/util/OrmUtils.js\");\nvar QueryFailedError_1 = __webpack_require__(/*! ../../error/QueryFailedError */ \"./node_modules/typeorm/error/QueryFailedError.js\");\nvar TableUnique_1 = __webpack_require__(/*! ../../schema-builder/table/TableUnique */ \"./node_modules/typeorm/schema-builder/table/TableUnique.js\");\nvar BaseQueryRunner_1 = __webpack_require__(/*! ../../query-runner/BaseQueryRunner */ \"./node_modules/typeorm/query-runner/BaseQueryRunner.js\");\nvar Broadcaster_1 = __webpack_require__(/*! ../../subscriber/Broadcaster */ \"./node_modules/typeorm/subscriber/Broadcaster.js\");\nvar index_1 = __webpack_require__(/*! ../../index */ \"./node_modules/typeorm/index.js\");\n/**\n * Runs queries on a single mysql database connection.\n */\nvar MysqlQueryRunner = /** @class */ (function (_super) {\n    __extends(MysqlQueryRunner, _super);\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function MysqlQueryRunner(driver, mode) {\n        if (mode === void 0) { mode = \"master\"; }\n        var _this = _super.call(this) || this;\n        _this.driver = driver;\n        _this.connection = driver.connection;\n        _this.broadcaster = new Broadcaster_1.Broadcaster(_this);\n        _this.mode = mode;\n        return _this;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates/uses database connection from the connection pool to perform further operations.\n     * Returns obtained database connection.\n     */\n    MysqlQueryRunner.prototype.connect = function () {\n        var _this = this;\n        if (this.databaseConnection)\n            return Promise.resolve(this.databaseConnection);\n        if (this.databaseConnectionPromise)\n            return this.databaseConnectionPromise;\n        if (this.mode === \"slave\" && this.driver.isReplicated) {\n            this.databaseConnectionPromise = this.driver.obtainSlaveConnection().then(function (connection) {\n                _this.databaseConnection = connection;\n                return _this.databaseConnection;\n            });\n        }\n        else { // master\n            this.databaseConnectionPromise = this.driver.obtainMasterConnection().then(function (connection) {\n                _this.databaseConnection = connection;\n                return _this.databaseConnection;\n            });\n        }\n        return this.databaseConnectionPromise;\n    };\n    /**\n     * Releases used database connection.\n     * You cannot use query runner methods once its released.\n     */\n    MysqlQueryRunner.prototype.release = function () {\n        this.isReleased = true;\n        if (this.databaseConnection)\n            this.databaseConnection.release();\n        return Promise.resolve();\n    };\n    /**\n     * Starts transaction on the current connection.\n     */\n    MysqlQueryRunner.prototype.startTransaction = function (isolationLevel) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.isTransactionActive)\n                            throw new TransactionAlreadyStartedError_1.TransactionAlreadyStartedError();\n                        this.isTransactionActive = true;\n                        return [4 /*yield*/, this.query(\"START TRANSACTION\")];\n                    case 1:\n                        _a.sent();\n                        if (!isolationLevel) return [3 /*break*/, 3];\n                        return [4 /*yield*/, this.query(\"SET SESSION TRANSACTION ISOLATION LEVEL \" + isolationLevel)];\n                    case 2:\n                        _a.sent();\n                        _a.label = 3;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Commits transaction.\n     * Error will be thrown if transaction was not started.\n     */\n    MysqlQueryRunner.prototype.commitTransaction = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.isTransactionActive)\n                            throw new TransactionNotStartedError_1.TransactionNotStartedError();\n                        return [4 /*yield*/, this.query(\"COMMIT\")];\n                    case 1:\n                        _a.sent();\n                        this.isTransactionActive = false;\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Rollbacks transaction.\n     * Error will be thrown if transaction was not started.\n     */\n    MysqlQueryRunner.prototype.rollbackTransaction = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.isTransactionActive)\n                            throw new TransactionNotStartedError_1.TransactionNotStartedError();\n                        return [4 /*yield*/, this.query(\"ROLLBACK\")];\n                    case 1:\n                        _a.sent();\n                        this.isTransactionActive = false;\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Executes a raw SQL query.\n     */\n    MysqlQueryRunner.prototype.query = function (query, parameters) {\n        var _this = this;\n        if (this.isReleased)\n            throw new QueryRunnerAlreadyReleasedError_1.QueryRunnerAlreadyReleasedError();\n        return new Promise(function (ok, fail) { return __awaiter(_this, void 0, void 0, function () {\n            var _this = this;\n            var databaseConnection, queryStartTime_1, err_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this.connect()];\n                    case 1:\n                        databaseConnection = _a.sent();\n                        this.driver.connection.logger.logQuery(query, parameters, this);\n                        queryStartTime_1 = +new Date();\n                        databaseConnection.query(query, parameters, function (err, result) {\n                            // log slow queries if maxQueryExecution time is set\n                            var maxQueryExecutionTime = _this.driver.connection.options.maxQueryExecutionTime;\n                            var queryEndTime = +new Date();\n                            var queryExecutionTime = queryEndTime - queryStartTime_1;\n                            if (maxQueryExecutionTime && queryExecutionTime > maxQueryExecutionTime)\n                                _this.driver.connection.logger.logQuerySlow(queryExecutionTime, query, parameters, _this);\n                            if (err) {\n                                _this.driver.connection.logger.logQueryError(err, query, parameters, _this);\n                                return fail(new QueryFailedError_1.QueryFailedError(query, parameters, err));\n                            }\n                            ok(result);\n                        });\n                        return [3 /*break*/, 3];\n                    case 2:\n                        err_1 = _a.sent();\n                        fail(err_1);\n                        return [3 /*break*/, 3];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        }); });\n    };\n    /**\n     * Returns raw data stream.\n     */\n    MysqlQueryRunner.prototype.stream = function (query, parameters, onEnd, onError) {\n        var _this = this;\n        if (this.isReleased)\n            throw new QueryRunnerAlreadyReleasedError_1.QueryRunnerAlreadyReleasedError();\n        return new Promise(function (ok, fail) { return __awaiter(_this, void 0, void 0, function () {\n            var databaseConnection, stream, err_2;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this.connect()];\n                    case 1:\n                        databaseConnection = _a.sent();\n                        this.driver.connection.logger.logQuery(query, parameters, this);\n                        stream = databaseConnection.query(query, parameters);\n                        if (onEnd)\n                            stream.on(\"end\", onEnd);\n                        if (onError)\n                            stream.on(\"error\", onError);\n                        ok(stream);\n                        return [3 /*break*/, 3];\n                    case 2:\n                        err_2 = _a.sent();\n                        fail(err_2);\n                        return [3 /*break*/, 3];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        }); });\n    };\n    /**\n     * Returns all available database names including system databases.\n     */\n    MysqlQueryRunner.prototype.getDatabases = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, Promise.resolve([])];\n            });\n        });\n    };\n    /**\n     * Returns all available schema names including system schemas.\n     * If database parameter specified, returns schemas of that database.\n     */\n    MysqlQueryRunner.prototype.getSchemas = function (database) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"MySql driver does not support table schemas\");\n            });\n        });\n    };\n    /**\n     * Checks if database with the given name exist.\n     */\n    MysqlQueryRunner.prototype.hasDatabase = function (database) {\n        return __awaiter(this, void 0, void 0, function () {\n            var result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.query(\"SELECT * FROM `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = '\" + database + \"'\")];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, result.length ? true : false];\n                }\n            });\n        });\n    };\n    /**\n     * Checks if schema with the given name exist.\n     */\n    MysqlQueryRunner.prototype.hasSchema = function (schema) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"MySql driver does not support table schemas\");\n            });\n        });\n    };\n    /**\n     * Checks if table with the given name exist in the database.\n     */\n    MysqlQueryRunner.prototype.hasTable = function (tableOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var parsedTableName, sql, result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        parsedTableName = this.parseTableName(tableOrName);\n                        sql = \"SELECT * FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = '\" + parsedTableName.database + \"' AND `TABLE_NAME` = '\" + parsedTableName.tableName + \"'\";\n                        return [4 /*yield*/, this.query(sql)];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, result.length ? true : false];\n                }\n            });\n        });\n    };\n    /**\n     * Checks if column with the given name exist in the given table.\n     */\n    MysqlQueryRunner.prototype.hasColumn = function (tableOrName, column) {\n        return __awaiter(this, void 0, void 0, function () {\n            var parsedTableName, columnName, sql, result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        parsedTableName = this.parseTableName(tableOrName);\n                        columnName = column instanceof TableColumn_1.TableColumn ? column.name : column;\n                        sql = \"SELECT * FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = '\" + parsedTableName.database + \"' AND `TABLE_NAME` = '\" + parsedTableName.tableName + \"' AND `COLUMN_NAME` = '\" + columnName + \"'\";\n                        return [4 /*yield*/, this.query(sql)];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, result.length ? true : false];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new database.\n     */\n    MysqlQueryRunner.prototype.createDatabase = function (database, ifNotExist) {\n        return __awaiter(this, void 0, void 0, function () {\n            var up, down;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        up = ifNotExist ? \"CREATE DATABASE IF NOT EXISTS `\" + database + \"`\" : \"CREATE DATABASE `\" + database + \"`\";\n                        down = \"DROP DATABASE `\" + database + \"`\";\n                        return [4 /*yield*/, this.executeQueries(up, down)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops database.\n     */\n    MysqlQueryRunner.prototype.dropDatabase = function (database, ifExist) {\n        return __awaiter(this, void 0, void 0, function () {\n            var up, down;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        up = ifExist ? \"DROP DATABASE IF EXISTS `\" + database + \"`\" : \"DROP DATABASE `\" + database + \"`\";\n                        down = \"CREATE DATABASE `\" + database + \"`\";\n                        return [4 /*yield*/, this.executeQueries(up, down)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new table schema.\n     */\n    MysqlQueryRunner.prototype.createSchema = function (schema, ifNotExist) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"Schema create queries are not supported by MySql driver.\");\n            });\n        });\n    };\n    /**\n     * Drops table schema.\n     */\n    MysqlQueryRunner.prototype.dropSchema = function (schemaPath, ifExist) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"Schema drop queries are not supported by MySql driver.\");\n            });\n        });\n    };\n    /**\n     * Creates a new table.\n     */\n    MysqlQueryRunner.prototype.createTable = function (table, ifNotExist, createForeignKeys) {\n        if (ifNotExist === void 0) { ifNotExist = false; }\n        if (createForeignKeys === void 0) { createForeignKeys = true; }\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var isTableExist, upQueries, downQueries;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!ifNotExist) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.hasTable(table)];\n                    case 1:\n                        isTableExist = _a.sent();\n                        if (isTableExist)\n                            return [2 /*return*/, Promise.resolve()];\n                        _a.label = 2;\n                    case 2:\n                        upQueries = [];\n                        downQueries = [];\n                        upQueries.push(this.createTableSql(table, createForeignKeys));\n                        downQueries.push(this.dropTableSql(table));\n                        // we must first drop indices, than drop foreign keys, because drop queries runs in reversed order\n                        // and foreign keys will be dropped first as indices. This order is very important, because we can't drop index\n                        // if it related to the foreign key.\n                        // createTable does not need separate method to create indices, because it create indices in the same query with table creation.\n                        table.indices.forEach(function (index) { return downQueries.push(_this.dropIndexSql(table, index)); });\n                        // if createForeignKeys is true, we must drop created foreign keys in down query.\n                        // createTable does not need separate method to create foreign keys, because it create fk's in the same query with table creation.\n                        if (createForeignKeys)\n                            table.foreignKeys.forEach(function (foreignKey) { return downQueries.push(_this.dropForeignKeySql(table, foreignKey)); });\n                        return [2 /*return*/, this.executeQueries(upQueries, downQueries)];\n                }\n            });\n        });\n    };\n    /**\n     * Drop the table.\n     */\n    MysqlQueryRunner.prototype.dropTable = function (target, ifExist, dropForeignKeys) {\n        if (dropForeignKeys === void 0) { dropForeignKeys = true; }\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var isTableExist, createForeignKeys, tableName, table, upQueries, downQueries;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!ifExist) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.hasTable(target)];\n                    case 1:\n                        isTableExist = _a.sent();\n                        if (!isTableExist)\n                            return [2 /*return*/, Promise.resolve()];\n                        _a.label = 2;\n                    case 2:\n                        createForeignKeys = dropForeignKeys;\n                        tableName = target instanceof Table_1.Table ? target.name : target;\n                        return [4 /*yield*/, this.getCachedTable(tableName)];\n                    case 3:\n                        table = _a.sent();\n                        upQueries = [];\n                        downQueries = [];\n                        if (dropForeignKeys)\n                            table.foreignKeys.forEach(function (foreignKey) { return upQueries.push(_this.dropForeignKeySql(table, foreignKey)); });\n                        table.indices.forEach(function (index) { return upQueries.push(_this.dropIndexSql(table, index)); });\n                        upQueries.push(this.dropTableSql(table));\n                        downQueries.push(this.createTableSql(table, createForeignKeys));\n                        return [4 /*yield*/, this.executeQueries(upQueries, downQueries)];\n                    case 4:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Renames a table.\n     */\n    MysqlQueryRunner.prototype.renameTable = function (oldTableOrName, newTableName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var upQueries, downQueries, oldTable, _a, newTable, dbName;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        upQueries = [];\n                        downQueries = [];\n                        if (!(oldTableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = oldTableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(oldTableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        oldTable = _a;\n                        newTable = oldTable.clone();\n                        dbName = oldTable.name.indexOf(\".\") === -1 ? undefined : oldTable.name.split(\".\")[0];\n                        newTable.name = dbName ? dbName + \".\" + newTableName : newTableName;\n                        // rename table\n                        upQueries.push(\"RENAME TABLE \" + this.escapeTableName(oldTable.name) + \" TO \" + this.escapeTableName(newTable.name));\n                        downQueries.push(\"RENAME TABLE \" + this.escapeTableName(newTable.name) + \" TO \" + this.escapeTableName(oldTable.name));\n                        // rename index constraints\n                        newTable.indices.forEach(function (index) {\n                            // build new constraint name\n                            var columnNames = index.columnNames.map(function (column) { return \"`\" + column + \"`\"; }).join(\", \");\n                            var newIndexName = _this.connection.namingStrategy.indexName(newTable, index.columnNames, index.where);\n                            // build queries\n                            var indexType = \"\";\n                            if (index.isUnique)\n                                indexType += \"UNIQUE \";\n                            if (index.isSpatial)\n                                indexType += \"SPATIAL \";\n                            if (index.isFulltext)\n                                indexType += \"FULLTEXT \";\n                            upQueries.push(\"ALTER TABLE \" + _this.escapeTableName(newTable) + \" DROP INDEX `\" + index.name + \"`, ADD \" + indexType + \"INDEX `\" + newIndexName + \"` (\" + columnNames + \")\");\n                            downQueries.push(\"ALTER TABLE \" + _this.escapeTableName(newTable) + \" DROP INDEX `\" + newIndexName + \"`, ADD \" + indexType + \"INDEX `\" + index.name + \"` (\" + columnNames + \")\");\n                            // replace constraint name\n                            index.name = newIndexName;\n                        });\n                        // rename foreign key constraint\n                        newTable.foreignKeys.forEach(function (foreignKey) {\n                            // build new constraint name\n                            var columnNames = foreignKey.columnNames.map(function (column) { return \"`\" + column + \"`\"; }).join(\", \");\n                            var referencedColumnNames = foreignKey.referencedColumnNames.map(function (column) { return \"`\" + column + \"`\"; }).join(\",\");\n                            var newForeignKeyName = _this.connection.namingStrategy.foreignKeyName(newTable, foreignKey.columnNames);\n                            // build queries\n                            var up = \"ALTER TABLE \" + _this.escapeTableName(newTable) + \" DROP FOREIGN KEY `\" + foreignKey.name + \"`, ADD CONSTRAINT `\" + newForeignKeyName + \"` FOREIGN KEY (\" + columnNames + \") \" +\n                                (\"REFERENCES \" + _this.escapeTableName(foreignKey.referencedTableName) + \"(\" + referencedColumnNames + \")\");\n                            if (foreignKey.onDelete)\n                                up += \" ON DELETE \" + foreignKey.onDelete;\n                            if (foreignKey.onUpdate)\n                                up += \" ON UPDATE \" + foreignKey.onUpdate;\n                            var down = \"ALTER TABLE \" + _this.escapeTableName(newTable) + \" DROP FOREIGN KEY `\" + newForeignKeyName + \"`, ADD CONSTRAINT `\" + foreignKey.name + \"` FOREIGN KEY (\" + columnNames + \") \" +\n                                (\"REFERENCES \" + _this.escapeTableName(foreignKey.referencedTableName) + \"(\" + referencedColumnNames + \")\");\n                            if (foreignKey.onDelete)\n                                down += \" ON DELETE \" + foreignKey.onDelete;\n                            if (foreignKey.onUpdate)\n                                down += \" ON UPDATE \" + foreignKey.onUpdate;\n                            upQueries.push(up);\n                            downQueries.push(down);\n                            // replace constraint name\n                            foreignKey.name = newForeignKeyName;\n                        });\n                        return [4 /*yield*/, this.executeQueries(upQueries, downQueries)];\n                    case 4:\n                        _b.sent();\n                        // rename old table and replace it in cached tabled;\n                        oldTable.name = newTable.name;\n                        this.replaceCachedTable(oldTable, newTable);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new column from the column in the table.\n     */\n    MysqlQueryRunner.prototype.addColumn = function (tableOrName, column) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, clonedTable, upQueries, downQueries, skipColumnLevelPrimary, generatedColumn, nonGeneratedColumn, primaryColumns, columnNames, nonGeneratedColumn, columnIndex, uniqueIndex;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        clonedTable = table.clone();\n                        upQueries = [];\n                        downQueries = [];\n                        skipColumnLevelPrimary = clonedTable.primaryColumns.length > 0;\n                        upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ADD \" + this.buildCreateColumnSql(column, skipColumnLevelPrimary, false));\n                        downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" DROP COLUMN `\" + column.name + \"`\");\n                        // create or update primary key constraint\n                        if (column.isPrimary && skipColumnLevelPrimary) {\n                            generatedColumn = clonedTable.columns.find(function (column) { return column.isGenerated && column.generationStrategy === \"increment\"; });\n                            if (generatedColumn) {\n                                nonGeneratedColumn = generatedColumn.clone();\n                                nonGeneratedColumn.isGenerated = false;\n                                nonGeneratedColumn.generationStrategy = undefined;\n                                upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" CHANGE `\" + column.name + \"` \" + this.buildCreateColumnSql(nonGeneratedColumn, true));\n                                downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" CHANGE `\" + nonGeneratedColumn.name + \"` \" + this.buildCreateColumnSql(column, true));\n                            }\n                            primaryColumns = clonedTable.primaryColumns;\n                            columnNames = primaryColumns.map(function (column) { return \"`\" + column.name + \"`\"; }).join(\", \");\n                            upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" DROP PRIMARY KEY\");\n                            downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ADD PRIMARY KEY (\" + columnNames + \")\");\n                            primaryColumns.push(column);\n                            columnNames = primaryColumns.map(function (column) { return \"`\" + column.name + \"`\"; }).join(\", \");\n                            upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ADD PRIMARY KEY (\" + columnNames + \")\");\n                            downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" DROP PRIMARY KEY\");\n                            // if we previously dropped AUTO_INCREMENT property, we must bring it back\n                            if (generatedColumn) {\n                                nonGeneratedColumn = generatedColumn.clone();\n                                nonGeneratedColumn.isGenerated = false;\n                                nonGeneratedColumn.generationStrategy = undefined;\n                                upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" CHANGE `\" + nonGeneratedColumn.name + \"` \" + this.buildCreateColumnSql(column, true));\n                                downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" CHANGE `\" + column.name + \"` \" + this.buildCreateColumnSql(nonGeneratedColumn, true));\n                            }\n                        }\n                        columnIndex = clonedTable.indices.find(function (index) { return index.columnNames.length === 1 && index.columnNames[0] === column.name; });\n                        if (columnIndex) {\n                            upQueries.push(this.createIndexSql(table, columnIndex));\n                            downQueries.push(this.dropIndexSql(table, columnIndex));\n                        }\n                        else if (column.isUnique) {\n                            uniqueIndex = new TableIndex_1.TableIndex({\n                                name: this.connection.namingStrategy.indexName(table.name, [column.name]),\n                                columnNames: [column.name],\n                                isUnique: true\n                            });\n                            clonedTable.indices.push(uniqueIndex);\n                            clonedTable.uniques.push(new TableUnique_1.TableUnique({\n                                name: uniqueIndex.name,\n                                columnNames: uniqueIndex.columnNames\n                            }));\n                            upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ADD UNIQUE INDEX `\" + uniqueIndex.name + \"` (`\" + column.name + \"`)\");\n                            downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" DROP INDEX `\" + uniqueIndex.name + \"`\");\n                        }\n                        return [4 /*yield*/, this.executeQueries(upQueries, downQueries)];\n                    case 4:\n                        _b.sent();\n                        clonedTable.addColumn(column);\n                        this.replaceCachedTable(table, clonedTable);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new columns from the column in the table.\n     */\n    MysqlQueryRunner.prototype.addColumns = function (tableOrName, columns) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, index_1.PromiseUtils.runInSequence(columns, function (column) { return _this.addColumn(tableOrName, column); })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Renames column in the given table.\n     */\n    MysqlQueryRunner.prototype.renameColumn = function (tableOrName, oldTableColumnOrName, newTableColumnOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, oldColumn, newColumn;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        oldColumn = oldTableColumnOrName instanceof TableColumn_1.TableColumn ? oldTableColumnOrName : table.columns.find(function (c) { return c.name === oldTableColumnOrName; });\n                        if (!oldColumn)\n                            throw new Error(\"Column \\\"\" + oldTableColumnOrName + \"\\\" was not found in the \\\"\" + table.name + \"\\\" table.\");\n                        newColumn = undefined;\n                        if (newTableColumnOrName instanceof TableColumn_1.TableColumn) {\n                            newColumn = newTableColumnOrName;\n                        }\n                        else {\n                            newColumn = oldColumn.clone();\n                            newColumn.name = newTableColumnOrName;\n                        }\n                        return [4 /*yield*/, this.changeColumn(table, oldColumn, newColumn)];\n                    case 4:\n                        _b.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Changes a column in the table.\n     */\n    MysqlQueryRunner.prototype.changeColumn = function (tableOrName, oldColumnOrName, newColumn) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var table, _a, clonedTable, upQueries, downQueries, oldColumn, oldTableColumn, generatedColumn, nonGeneratedColumn, primaryColumns, columnNames, column, columnNames, primaryColumn, column, columnNames, nonGeneratedColumn, uniqueIndex, uniqueIndex_1, tableUnique;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        clonedTable = table.clone();\n                        upQueries = [];\n                        downQueries = [];\n                        oldColumn = oldColumnOrName instanceof TableColumn_1.TableColumn\n                            ? oldColumnOrName\n                            : table.columns.find(function (column) { return column.name === oldColumnOrName; });\n                        if (!oldColumn)\n                            throw new Error(\"Column \\\"\" + oldColumnOrName + \"\\\" was not found in the \\\"\" + table.name + \"\\\" table.\");\n                        if (!((newColumn.isGenerated !== oldColumn.isGenerated && newColumn.generationStrategy !== \"uuid\")\n                            || oldColumn.type !== newColumn.type\n                            || oldColumn.length !== newColumn.length\n                            || oldColumn.generatedType !== newColumn.generatedType)) return [3 /*break*/, 6];\n                        return [4 /*yield*/, this.dropColumn(table, oldColumn)];\n                    case 4:\n                        _b.sent();\n                        return [4 /*yield*/, this.addColumn(table, newColumn)];\n                    case 5:\n                        _b.sent();\n                        // update cloned table\n                        clonedTable = table.clone();\n                        return [3 /*break*/, 7];\n                    case 6:\n                        if (newColumn.name !== oldColumn.name) {\n                            // We don't change any column properties, just rename it.\n                            upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" CHANGE `\" + oldColumn.name + \"` `\" + newColumn.name + \"` \" + this.buildCreateColumnSql(oldColumn, true, true));\n                            downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" CHANGE `\" + newColumn.name + \"` `\" + oldColumn.name + \"` \" + this.buildCreateColumnSql(oldColumn, true, true));\n                            // rename index constraints\n                            clonedTable.findColumnIndices(oldColumn).forEach(function (index) {\n                                // build new constraint name\n                                index.columnNames.splice(index.columnNames.indexOf(oldColumn.name), 1);\n                                index.columnNames.push(newColumn.name);\n                                var columnNames = index.columnNames.map(function (column) { return \"`\" + column + \"`\"; }).join(\", \");\n                                var newIndexName = _this.connection.namingStrategy.indexName(clonedTable, index.columnNames, index.where);\n                                // build queries\n                                var indexType = \"\";\n                                if (index.isUnique)\n                                    indexType += \"UNIQUE \";\n                                if (index.isSpatial)\n                                    indexType += \"SPATIAL \";\n                                if (index.isFulltext)\n                                    indexType += \"FULLTEXT \";\n                                upQueries.push(\"ALTER TABLE \" + _this.escapeTableName(table) + \" DROP INDEX `\" + index.name + \"`, ADD \" + indexType + \"INDEX `\" + newIndexName + \"` (\" + columnNames + \")\");\n                                downQueries.push(\"ALTER TABLE \" + _this.escapeTableName(table) + \" DROP INDEX `\" + newIndexName + \"`, ADD \" + indexType + \"INDEX `\" + index.name + \"` (\" + columnNames + \")\");\n                                // replace constraint name\n                                index.name = newIndexName;\n                            });\n                            // rename foreign key constraints\n                            clonedTable.findColumnForeignKeys(oldColumn).forEach(function (foreignKey) {\n                                // build new constraint name\n                                foreignKey.columnNames.splice(foreignKey.columnNames.indexOf(oldColumn.name), 1);\n                                foreignKey.columnNames.push(newColumn.name);\n                                var columnNames = foreignKey.columnNames.map(function (column) { return \"`\" + column + \"`\"; }).join(\", \");\n                                var referencedColumnNames = foreignKey.referencedColumnNames.map(function (column) { return \"`\" + column + \"`\"; }).join(\",\");\n                                var newForeignKeyName = _this.connection.namingStrategy.foreignKeyName(clonedTable, foreignKey.columnNames);\n                                // build queries\n                                var up = \"ALTER TABLE \" + _this.escapeTableName(table) + \" DROP FOREIGN KEY `\" + foreignKey.name + \"`, ADD CONSTRAINT `\" + newForeignKeyName + \"` FOREIGN KEY (\" + columnNames + \") \" +\n                                    (\"REFERENCES \" + _this.escapeTableName(foreignKey.referencedTableName) + \"(\" + referencedColumnNames + \")\");\n                                if (foreignKey.onDelete)\n                                    up += \" ON DELETE \" + foreignKey.onDelete;\n                                if (foreignKey.onUpdate)\n                                    up += \" ON UPDATE \" + foreignKey.onUpdate;\n                                var down = \"ALTER TABLE \" + _this.escapeTableName(table) + \" DROP FOREIGN KEY `\" + newForeignKeyName + \"`, ADD CONSTRAINT `\" + foreignKey.name + \"` FOREIGN KEY (\" + columnNames + \") \" +\n                                    (\"REFERENCES \" + _this.escapeTableName(foreignKey.referencedTableName) + \"(\" + referencedColumnNames + \")\");\n                                if (foreignKey.onDelete)\n                                    down += \" ON DELETE \" + foreignKey.onDelete;\n                                if (foreignKey.onUpdate)\n                                    down += \" ON UPDATE \" + foreignKey.onUpdate;\n                                upQueries.push(up);\n                                downQueries.push(down);\n                                // replace constraint name\n                                foreignKey.name = newForeignKeyName;\n                            });\n                            oldTableColumn = clonedTable.columns.find(function (column) { return column.name === oldColumn.name; });\n                            clonedTable.columns[clonedTable.columns.indexOf(oldTableColumn)].name = newColumn.name;\n                            oldColumn.name = newColumn.name;\n                        }\n                        if (this.isColumnChanged(oldColumn, newColumn, true)) {\n                            upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" CHANGE `\" + oldColumn.name + \"` \" + this.buildCreateColumnSql(newColumn, true));\n                            downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" CHANGE `\" + newColumn.name + \"` \" + this.buildCreateColumnSql(oldColumn, true));\n                        }\n                        if (newColumn.isPrimary !== oldColumn.isPrimary) {\n                            generatedColumn = clonedTable.columns.find(function (column) { return column.isGenerated && column.generationStrategy === \"increment\"; });\n                            if (generatedColumn) {\n                                nonGeneratedColumn = generatedColumn.clone();\n                                nonGeneratedColumn.isGenerated = false;\n                                nonGeneratedColumn.generationStrategy = undefined;\n                                upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" CHANGE `\" + generatedColumn.name + \"` \" + this.buildCreateColumnSql(nonGeneratedColumn, true));\n                                downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" CHANGE `\" + nonGeneratedColumn.name + \"` \" + this.buildCreateColumnSql(generatedColumn, true));\n                            }\n                            primaryColumns = clonedTable.primaryColumns;\n                            // if primary column state changed, we must always drop existed constraint.\n                            if (primaryColumns.length > 0) {\n                                columnNames = primaryColumns.map(function (column) { return \"`\" + column.name + \"`\"; }).join(\", \");\n                                upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" DROP PRIMARY KEY\");\n                                downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ADD PRIMARY KEY (\" + columnNames + \")\");\n                            }\n                            if (newColumn.isPrimary === true) {\n                                primaryColumns.push(newColumn);\n                                column = clonedTable.columns.find(function (column) { return column.name === newColumn.name; });\n                                column.isPrimary = true;\n                                columnNames = primaryColumns.map(function (column) { return \"`\" + column.name + \"`\"; }).join(\", \");\n                                upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ADD PRIMARY KEY (\" + columnNames + \")\");\n                                downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" DROP PRIMARY KEY\");\n                            }\n                            else {\n                                primaryColumn = primaryColumns.find(function (c) { return c.name === newColumn.name; });\n                                primaryColumns.splice(primaryColumns.indexOf(primaryColumn), 1);\n                                column = clonedTable.columns.find(function (column) { return column.name === newColumn.name; });\n                                column.isPrimary = false;\n                                // if we have another primary keys, we must recreate constraint.\n                                if (primaryColumns.length > 0) {\n                                    columnNames = primaryColumns.map(function (column) { return \"`\" + column.name + \"`\"; }).join(\", \");\n                                    upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ADD PRIMARY KEY (\" + columnNames + \")\");\n                                    downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" DROP PRIMARY KEY\");\n                                }\n                            }\n                            // if we have generated column, and we dropped AUTO_INCREMENT property before, we must bring it back\n                            if (generatedColumn) {\n                                nonGeneratedColumn = generatedColumn.clone();\n                                nonGeneratedColumn.isGenerated = false;\n                                nonGeneratedColumn.generationStrategy = undefined;\n                                upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" CHANGE `\" + nonGeneratedColumn.name + \"` \" + this.buildCreateColumnSql(generatedColumn, true));\n                                downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" CHANGE `\" + generatedColumn.name + \"` \" + this.buildCreateColumnSql(nonGeneratedColumn, true));\n                            }\n                        }\n                        if (newColumn.isUnique !== oldColumn.isUnique) {\n                            if (newColumn.isUnique === true) {\n                                uniqueIndex = new TableIndex_1.TableIndex({\n                                    name: this.connection.namingStrategy.indexName(table.name, [newColumn.name]),\n                                    columnNames: [newColumn.name],\n                                    isUnique: true\n                                });\n                                clonedTable.indices.push(uniqueIndex);\n                                clonedTable.uniques.push(new TableUnique_1.TableUnique({\n                                    name: uniqueIndex.name,\n                                    columnNames: uniqueIndex.columnNames\n                                }));\n                                upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ADD UNIQUE INDEX `\" + uniqueIndex.name + \"` (`\" + newColumn.name + \"`)\");\n                                downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" DROP INDEX `\" + uniqueIndex.name + \"`\");\n                            }\n                            else {\n                                uniqueIndex_1 = clonedTable.indices.find(function (index) {\n                                    return index.columnNames.length === 1 && index.isUnique === true && !!index.columnNames.find(function (columnName) { return columnName === newColumn.name; });\n                                });\n                                clonedTable.indices.splice(clonedTable.indices.indexOf(uniqueIndex_1), 1);\n                                tableUnique = clonedTable.uniques.find(function (unique) { return unique.name === uniqueIndex_1.name; });\n                                clonedTable.uniques.splice(clonedTable.uniques.indexOf(tableUnique), 1);\n                                upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" DROP INDEX `\" + uniqueIndex_1.name + \"`\");\n                                downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ADD UNIQUE INDEX `\" + uniqueIndex_1.name + \"` (`\" + newColumn.name + \"`)\");\n                            }\n                        }\n                        _b.label = 7;\n                    case 7: return [4 /*yield*/, this.executeQueries(upQueries, downQueries)];\n                    case 8:\n                        _b.sent();\n                        this.replaceCachedTable(table, clonedTable);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Changes a column in the table.\n     */\n    MysqlQueryRunner.prototype.changeColumns = function (tableOrName, changedColumns) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, index_1.PromiseUtils.runInSequence(changedColumns, function (changedColumn) { return _this.changeColumn(tableOrName, changedColumn.oldColumn, changedColumn.newColumn); })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops column in the table.\n     */\n    MysqlQueryRunner.prototype.dropColumn = function (tableOrName, columnOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, column, clonedTable, upQueries, downQueries, generatedColumn, nonGeneratedColumn, columnNames, tableColumn, columnNames_1, nonGeneratedColumn, columnIndex, uniqueName_1, foundUnique, indexName_1, foundIndex;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        column = columnOrName instanceof TableColumn_1.TableColumn ? columnOrName : table.findColumnByName(columnOrName);\n                        if (!column)\n                            throw new Error(\"Column \\\"\" + columnOrName + \"\\\" was not found in table \\\"\" + table.name + \"\\\"\");\n                        clonedTable = table.clone();\n                        upQueries = [];\n                        downQueries = [];\n                        // drop primary key constraint\n                        if (column.isPrimary) {\n                            generatedColumn = clonedTable.columns.find(function (column) { return column.isGenerated && column.generationStrategy === \"increment\"; });\n                            if (generatedColumn) {\n                                nonGeneratedColumn = generatedColumn.clone();\n                                nonGeneratedColumn.isGenerated = false;\n                                nonGeneratedColumn.generationStrategy = undefined;\n                                upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" CHANGE `\" + generatedColumn.name + \"` \" + this.buildCreateColumnSql(nonGeneratedColumn, true));\n                                downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" CHANGE `\" + nonGeneratedColumn.name + \"` \" + this.buildCreateColumnSql(generatedColumn, true));\n                            }\n                            columnNames = clonedTable.primaryColumns.map(function (primaryColumn) { return \"`\" + primaryColumn.name + \"`\"; }).join(\", \");\n                            upQueries.push(\"ALTER TABLE \" + this.escapeTableName(clonedTable) + \" DROP PRIMARY KEY\");\n                            downQueries.push(\"ALTER TABLE \" + this.escapeTableName(clonedTable) + \" ADD PRIMARY KEY (\" + columnNames + \")\");\n                            tableColumn = clonedTable.findColumnByName(column.name);\n                            tableColumn.isPrimary = false;\n                            // if primary key have multiple columns, we must recreate it without dropped column\n                            if (clonedTable.primaryColumns.length > 0) {\n                                columnNames_1 = clonedTable.primaryColumns.map(function (primaryColumn) { return \"`\" + primaryColumn.name + \"`\"; }).join(\", \");\n                                upQueries.push(\"ALTER TABLE \" + this.escapeTableName(clonedTable) + \" ADD PRIMARY KEY (\" + columnNames_1 + \")\");\n                                downQueries.push(\"ALTER TABLE \" + this.escapeTableName(clonedTable) + \" DROP PRIMARY KEY\");\n                            }\n                            // if we have generated column, and we dropped AUTO_INCREMENT property before, and this column is not current dropping column, we must bring it back\n                            if (generatedColumn && generatedColumn.name !== column.name) {\n                                nonGeneratedColumn = generatedColumn.clone();\n                                nonGeneratedColumn.isGenerated = false;\n                                nonGeneratedColumn.generationStrategy = undefined;\n                                upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" CHANGE `\" + nonGeneratedColumn.name + \"` \" + this.buildCreateColumnSql(generatedColumn, true));\n                                downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" CHANGE `\" + generatedColumn.name + \"` \" + this.buildCreateColumnSql(nonGeneratedColumn, true));\n                            }\n                        }\n                        columnIndex = clonedTable.indices.find(function (index) { return index.columnNames.length === 1 && index.columnNames[0] === column.name; });\n                        if (columnIndex) {\n                            clonedTable.indices.splice(clonedTable.indices.indexOf(columnIndex), 1);\n                            upQueries.push(this.dropIndexSql(table, columnIndex));\n                            downQueries.push(this.createIndexSql(table, columnIndex));\n                        }\n                        else if (column.isUnique) {\n                            uniqueName_1 = this.connection.namingStrategy.uniqueConstraintName(table.name, [column.name]);\n                            foundUnique = clonedTable.uniques.find(function (unique) { return unique.name === uniqueName_1; });\n                            if (foundUnique)\n                                clonedTable.uniques.splice(clonedTable.uniques.indexOf(foundUnique), 1);\n                            indexName_1 = this.connection.namingStrategy.indexName(table.name, [column.name]);\n                            foundIndex = clonedTable.indices.find(function (index) { return index.name === indexName_1; });\n                            if (foundIndex)\n                                clonedTable.indices.splice(clonedTable.indices.indexOf(foundIndex), 1);\n                            upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" DROP INDEX `\" + indexName_1 + \"`\");\n                            downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ADD UNIQUE INDEX `\" + indexName_1 + \"` (`\" + column.name + \"`)\");\n                        }\n                        upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" DROP COLUMN `\" + column.name + \"`\");\n                        downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ADD \" + this.buildCreateColumnSql(column, true));\n                        return [4 /*yield*/, this.executeQueries(upQueries, downQueries)];\n                    case 4:\n                        _b.sent();\n                        clonedTable.removeColumn(column);\n                        this.replaceCachedTable(table, clonedTable);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops the columns in the table.\n     */\n    MysqlQueryRunner.prototype.dropColumns = function (tableOrName, columns) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, index_1.PromiseUtils.runInSequence(columns, function (column) { return _this.dropColumn(tableOrName, column); })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new primary key.\n     */\n    MysqlQueryRunner.prototype.createPrimaryKey = function (tableOrName, columnNames) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, clonedTable, up, down;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        clonedTable = table.clone();\n                        up = this.createPrimaryKeySql(table, columnNames);\n                        down = this.dropPrimaryKeySql(table);\n                        return [4 /*yield*/, this.executeQueries(up, down)];\n                    case 4:\n                        _b.sent();\n                        clonedTable.columns.forEach(function (column) {\n                            if (columnNames.find(function (columnName) { return columnName === column.name; }))\n                                column.isPrimary = true;\n                        });\n                        this.replaceCachedTable(table, clonedTable);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Updates composite primary keys.\n     */\n    MysqlQueryRunner.prototype.updatePrimaryKeys = function (tableOrName, columns) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, clonedTable, columnNames, upQueries, downQueries, generatedColumn, nonGeneratedColumn, primaryColumns, columnNames_2, columnNamesString, newOrExistGeneratedColumn, nonGeneratedColumn, changedGeneratedColumn;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        clonedTable = table.clone();\n                        columnNames = columns.map(function (column) { return column.name; });\n                        upQueries = [];\n                        downQueries = [];\n                        generatedColumn = clonedTable.columns.find(function (column) { return column.isGenerated && column.generationStrategy === \"increment\"; });\n                        if (generatedColumn) {\n                            nonGeneratedColumn = generatedColumn.clone();\n                            nonGeneratedColumn.isGenerated = false;\n                            nonGeneratedColumn.generationStrategy = undefined;\n                            upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" CHANGE `\" + generatedColumn.name + \"` \" + this.buildCreateColumnSql(nonGeneratedColumn, true));\n                            downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" CHANGE `\" + nonGeneratedColumn.name + \"` \" + this.buildCreateColumnSql(generatedColumn, true));\n                        }\n                        primaryColumns = clonedTable.primaryColumns;\n                        if (primaryColumns.length > 0) {\n                            columnNames_2 = primaryColumns.map(function (column) { return \"`\" + column.name + \"`\"; }).join(\", \");\n                            upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" DROP PRIMARY KEY\");\n                            downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ADD PRIMARY KEY (\" + columnNames_2 + \")\");\n                        }\n                        // update columns in table.\n                        clonedTable.columns\n                            .filter(function (column) { return columnNames.indexOf(column.name) !== -1; })\n                            .forEach(function (column) { return column.isPrimary = true; });\n                        columnNamesString = columnNames.map(function (columnName) { return \"`\" + columnName + \"`\"; }).join(\", \");\n                        upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ADD PRIMARY KEY (\" + columnNamesString + \")\");\n                        downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" DROP PRIMARY KEY\");\n                        newOrExistGeneratedColumn = generatedColumn ? generatedColumn : columns.find(function (column) { return column.isGenerated && column.generationStrategy === \"increment\"; });\n                        if (newOrExistGeneratedColumn) {\n                            nonGeneratedColumn = newOrExistGeneratedColumn.clone();\n                            nonGeneratedColumn.isGenerated = false;\n                            nonGeneratedColumn.generationStrategy = undefined;\n                            upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" CHANGE `\" + nonGeneratedColumn.name + \"` \" + this.buildCreateColumnSql(newOrExistGeneratedColumn, true));\n                            downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" CHANGE `\" + newOrExistGeneratedColumn.name + \"` \" + this.buildCreateColumnSql(nonGeneratedColumn, true));\n                            changedGeneratedColumn = clonedTable.columns.find(function (column) { return column.name === newOrExistGeneratedColumn.name; });\n                            changedGeneratedColumn.isGenerated = true;\n                            changedGeneratedColumn.generationStrategy = \"increment\";\n                        }\n                        return [4 /*yield*/, this.executeQueries(upQueries, downQueries)];\n                    case 4:\n                        _b.sent();\n                        this.replaceCachedTable(table, clonedTable);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops a primary key.\n     */\n    MysqlQueryRunner.prototype.dropPrimaryKey = function (tableOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, up, down;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        up = this.dropPrimaryKeySql(table);\n                        down = this.createPrimaryKeySql(table, table.primaryColumns.map(function (column) { return column.name; }));\n                        return [4 /*yield*/, this.executeQueries(up, down)];\n                    case 4:\n                        _b.sent();\n                        table.primaryColumns.forEach(function (column) {\n                            column.isPrimary = false;\n                        });\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new unique constraint.\n     */\n    MysqlQueryRunner.prototype.createUniqueConstraint = function (tableOrName, uniqueConstraint) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"MySql does not support unique constraints. Use unique index instead.\");\n            });\n        });\n    };\n    /**\n     * Creates a new unique constraints.\n     */\n    MysqlQueryRunner.prototype.createUniqueConstraints = function (tableOrName, uniqueConstraints) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"MySql does not support unique constraints. Use unique index instead.\");\n            });\n        });\n    };\n    /**\n     * Drops an unique constraint.\n     */\n    MysqlQueryRunner.prototype.dropUniqueConstraint = function (tableOrName, uniqueOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"MySql does not support unique constraints. Use unique index instead.\");\n            });\n        });\n    };\n    /**\n     * Drops an unique constraints.\n     */\n    MysqlQueryRunner.prototype.dropUniqueConstraints = function (tableOrName, uniqueConstraints) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"MySql does not support unique constraints. Use unique index instead.\");\n            });\n        });\n    };\n    /**\n     * Creates a new check constraint.\n     */\n    MysqlQueryRunner.prototype.createCheckConstraint = function (tableOrName, checkConstraint) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"MySql does not support check constraints.\");\n            });\n        });\n    };\n    /**\n     * Creates a new check constraints.\n     */\n    MysqlQueryRunner.prototype.createCheckConstraints = function (tableOrName, checkConstraints) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"MySql does not support check constraints.\");\n            });\n        });\n    };\n    /**\n     * Drops check constraint.\n     */\n    MysqlQueryRunner.prototype.dropCheckConstraint = function (tableOrName, checkOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"MySql does not support check constraints.\");\n            });\n        });\n    };\n    /**\n     * Drops check constraints.\n     */\n    MysqlQueryRunner.prototype.dropCheckConstraints = function (tableOrName, checkConstraints) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"MySql does not support check constraints.\");\n            });\n        });\n    };\n    /**\n     * Creates a new foreign key.\n     */\n    MysqlQueryRunner.prototype.createForeignKey = function (tableOrName, foreignKey) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, up, down;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        // new FK may be passed without name. In this case we generate FK name manually.\n                        if (!foreignKey.name)\n                            foreignKey.name = this.connection.namingStrategy.foreignKeyName(table.name, foreignKey.columnNames);\n                        up = this.createForeignKeySql(table, foreignKey);\n                        down = this.dropForeignKeySql(table, foreignKey);\n                        return [4 /*yield*/, this.executeQueries(up, down)];\n                    case 4:\n                        _b.sent();\n                        table.addForeignKey(foreignKey);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new foreign keys.\n     */\n    MysqlQueryRunner.prototype.createForeignKeys = function (tableOrName, foreignKeys) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var promises;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        promises = foreignKeys.map(function (foreignKey) { return _this.createForeignKey(tableOrName, foreignKey); });\n                        return [4 /*yield*/, Promise.all(promises)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops a foreign key.\n     */\n    MysqlQueryRunner.prototype.dropForeignKey = function (tableOrName, foreignKeyOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, foreignKey, up, down;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        foreignKey = foreignKeyOrName instanceof TableForeignKey_1.TableForeignKey ? foreignKeyOrName : table.foreignKeys.find(function (fk) { return fk.name === foreignKeyOrName; });\n                        if (!foreignKey)\n                            throw new Error(\"Supplied foreign key was not found in table \" + table.name);\n                        up = this.dropForeignKeySql(table, foreignKey);\n                        down = this.createForeignKeySql(table, foreignKey);\n                        return [4 /*yield*/, this.executeQueries(up, down)];\n                    case 4:\n                        _b.sent();\n                        table.removeForeignKey(foreignKey);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops a foreign keys from the table.\n     */\n    MysqlQueryRunner.prototype.dropForeignKeys = function (tableOrName, foreignKeys) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var promises;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        promises = foreignKeys.map(function (foreignKey) { return _this.dropForeignKey(tableOrName, foreignKey); });\n                        return [4 /*yield*/, Promise.all(promises)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new index.\n     */\n    MysqlQueryRunner.prototype.createIndex = function (tableOrName, index) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, up, down;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        // new index may be passed without name. In this case we generate index name manually.\n                        if (!index.name)\n                            index.name = this.connection.namingStrategy.indexName(table.name, index.columnNames, index.where);\n                        up = this.createIndexSql(table, index);\n                        down = this.dropIndexSql(table, index);\n                        return [4 /*yield*/, this.executeQueries(up, down)];\n                    case 4:\n                        _b.sent();\n                        table.addIndex(index, true);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new indices\n     */\n    MysqlQueryRunner.prototype.createIndices = function (tableOrName, indices) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var promises;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        promises = indices.map(function (index) { return _this.createIndex(tableOrName, index); });\n                        return [4 /*yield*/, Promise.all(promises)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops an index.\n     */\n    MysqlQueryRunner.prototype.dropIndex = function (tableOrName, indexOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, index, up, down;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        index = indexOrName instanceof TableIndex_1.TableIndex ? indexOrName : table.indices.find(function (i) { return i.name === indexOrName; });\n                        if (!index)\n                            throw new Error(\"Supplied index was not found in table \" + table.name);\n                        up = this.dropIndexSql(table, index);\n                        down = this.createIndexSql(table, index);\n                        return [4 /*yield*/, this.executeQueries(up, down)];\n                    case 4:\n                        _b.sent();\n                        table.removeIndex(index, true);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops an indices from the table.\n     */\n    MysqlQueryRunner.prototype.dropIndices = function (tableOrName, indices) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var promises;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        promises = indices.map(function (index) { return _this.dropIndex(tableOrName, index); });\n                        return [4 /*yield*/, Promise.all(promises)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Clears all table contents.\n     * Note: this operation uses SQL's TRUNCATE query which cannot be reverted in transactions.\n     */\n    MysqlQueryRunner.prototype.clearTable = function (tableOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.query(\"TRUNCATE TABLE \" + this.escapeTableName(tableOrName))];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Removes all tables from the currently connected database.\n     * Be careful using this method and avoid using it in production or migrations\n     * (because it can clear all your database).\n     */\n    MysqlQueryRunner.prototype.clearDatabase = function (database) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var dbName, isDatabaseExist, disableForeignKeysCheckQuery, dropTablesQuery, enableForeignKeysCheckQuery, dropQueries, error_1, rollbackError_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        dbName = database ? database : this.driver.database;\n                        if (!dbName) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.hasDatabase(dbName)];\n                    case 1:\n                        isDatabaseExist = _a.sent();\n                        if (!isDatabaseExist)\n                            return [2 /*return*/, Promise.resolve()];\n                        return [3 /*break*/, 3];\n                    case 2: throw new Error(\"Can not clear database. No database is specified\");\n                    case 3: return [4 /*yield*/, this.startTransaction()];\n                    case 4:\n                        _a.sent();\n                        _a.label = 5;\n                    case 5:\n                        _a.trys.push([5, 11, , 16]);\n                        disableForeignKeysCheckQuery = \"SET FOREIGN_KEY_CHECKS = 0;\";\n                        dropTablesQuery = \"SELECT concat('DROP TABLE IF EXISTS `', table_schema, '`.`', table_name, '`') AS `query` FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_SCHEMA` = '\" + dbName + \"'\";\n                        enableForeignKeysCheckQuery = \"SET FOREIGN_KEY_CHECKS = 1;\";\n                        return [4 /*yield*/, this.query(disableForeignKeysCheckQuery)];\n                    case 6:\n                        _a.sent();\n                        return [4 /*yield*/, this.query(dropTablesQuery)];\n                    case 7:\n                        dropQueries = _a.sent();\n                        return [4 /*yield*/, Promise.all(dropQueries.map(function (query) { return _this.query(query[\"query\"]); }))];\n                    case 8:\n                        _a.sent();\n                        return [4 /*yield*/, this.query(enableForeignKeysCheckQuery)];\n                    case 9:\n                        _a.sent();\n                        return [4 /*yield*/, this.commitTransaction()];\n                    case 10:\n                        _a.sent();\n                        return [3 /*break*/, 16];\n                    case 11:\n                        error_1 = _a.sent();\n                        _a.label = 12;\n                    case 12:\n                        _a.trys.push([12, 14, , 15]);\n                        return [4 /*yield*/, this.rollbackTransaction()];\n                    case 13:\n                        _a.sent();\n                        return [3 /*break*/, 15];\n                    case 14:\n                        rollbackError_1 = _a.sent();\n                        return [3 /*break*/, 15];\n                    case 15: throw error_1;\n                    case 16: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Returns current database.\n     */\n    MysqlQueryRunner.prototype.getCurrentDatabase = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var currentDBQuery;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.query(\"SELECT DATABASE() AS `db_name`\")];\n                    case 1:\n                        currentDBQuery = _a.sent();\n                        return [2 /*return*/, currentDBQuery[0][\"db_name\"]];\n                }\n            });\n        });\n    };\n    /**\n     * Loads all tables (with given names) from the database and creates a Table from them.\n     */\n    MysqlQueryRunner.prototype.loadTables = function (tableNames) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var currentDatabase, tablesCondition, tablesSql, columnsSql, primaryKeySql, collationsSql, indicesCondition, indicesSql, foreignKeysCondition, foreignKeysSql, _a, dbTables, dbColumns, dbPrimaryKeys, dbCollations, dbIndices, dbForeignKeys, isMariaDb;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        // if no tables given then no need to proceed\n                        if (!tableNames || !tableNames.length)\n                            return [2 /*return*/, []];\n                        return [4 /*yield*/, this.getCurrentDatabase()];\n                    case 1:\n                        currentDatabase = _b.sent();\n                        tablesCondition = tableNames.map(function (tableName) {\n                            var _a = __read(tableName.split(\".\"), 2), database = _a[0], name = _a[1];\n                            if (!name) {\n                                name = database;\n                                database = _this.driver.database || currentDatabase;\n                            }\n                            return \"(`TABLE_SCHEMA` = '\" + database + \"' AND `TABLE_NAME` = '\" + name + \"')\";\n                        }).join(\" OR \");\n                        tablesSql = \"SELECT * FROM `INFORMATION_SCHEMA`.`TABLES` WHERE \" + tablesCondition;\n                        columnsSql = \"SELECT * FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE \" + tablesCondition;\n                        primaryKeySql = \"SELECT * FROM `INFORMATION_SCHEMA`.`KEY_COLUMN_USAGE` WHERE `CONSTRAINT_NAME` = 'PRIMARY' AND (\" + tablesCondition + \")\";\n                        collationsSql = \"SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME` as `CHARSET`, `DEFAULT_COLLATION_NAME` AS `COLLATION` FROM `INFORMATION_SCHEMA`.`SCHEMATA`\";\n                        indicesCondition = tableNames.map(function (tableName) {\n                            var _a = __read(tableName.split(\".\"), 2), database = _a[0], name = _a[1];\n                            if (!name) {\n                                name = database;\n                                database = _this.driver.database || currentDatabase;\n                            }\n                            return \"(`s`.`TABLE_SCHEMA` = '\" + database + \"' AND `s`.`TABLE_NAME` = '\" + name + \"')\";\n                        }).join(\" OR \");\n                        indicesSql = \"SELECT `s`.* FROM `INFORMATION_SCHEMA`.`STATISTICS` `s` \" +\n                            \"LEFT JOIN `INFORMATION_SCHEMA`.`REFERENTIAL_CONSTRAINTS` `rc` ON `s`.`INDEX_NAME` = `rc`.`CONSTRAINT_NAME` \" +\n                            (\"WHERE (\" + indicesCondition + \") AND `s`.`INDEX_NAME` != 'PRIMARY' AND `rc`.`CONSTRAINT_NAME` IS NULL\");\n                        foreignKeysCondition = tableNames.map(function (tableName) {\n                            var _a = __read(tableName.split(\".\"), 2), database = _a[0], name = _a[1];\n                            if (!name) {\n                                name = database;\n                                database = _this.driver.database || currentDatabase;\n                            }\n                            return \"(`kcu`.`TABLE_SCHEMA` = '\" + database + \"' AND `kcu`.`TABLE_NAME` = '\" + name + \"')\";\n                        }).join(\" OR \");\n                        foreignKeysSql = \"SELECT `kcu`.`TABLE_SCHEMA`, `kcu`.`TABLE_NAME`, `kcu`.`CONSTRAINT_NAME`, `kcu`.`COLUMN_NAME`, `kcu`.`REFERENCED_TABLE_SCHEMA`, \" +\n                            \"`kcu`.`REFERENCED_TABLE_NAME`, `kcu`.`REFERENCED_COLUMN_NAME`, `rc`.`DELETE_RULE` `ON_DELETE`, `rc`.`UPDATE_RULE` `ON_UPDATE` \" +\n                            \"FROM `INFORMATION_SCHEMA`.`KEY_COLUMN_USAGE` `kcu` \" +\n                            \"INNER JOIN `INFORMATION_SCHEMA`.`REFERENTIAL_CONSTRAINTS` `rc` ON `rc`.`constraint_name` = `kcu`.`constraint_name` \" +\n                            \"WHERE \" + foreignKeysCondition;\n                        return [4 /*yield*/, Promise.all([\n                                this.query(tablesSql),\n                                this.query(columnsSql),\n                                this.query(primaryKeySql),\n                                this.query(collationsSql),\n                                this.query(indicesSql),\n                                this.query(foreignKeysSql)\n                            ])];\n                    case 2:\n                        _a = __read.apply(void 0, [_b.sent(), 6]), dbTables = _a[0], dbColumns = _a[1], dbPrimaryKeys = _a[2], dbCollations = _a[3], dbIndices = _a[4], dbForeignKeys = _a[5];\n                        // if tables were not found in the db, no need to proceed\n                        if (!dbTables.length)\n                            return [2 /*return*/, []];\n                        isMariaDb = this.driver.options.type === \"mariadb\";\n                        // create tables for loaded tables\n                        return [2 /*return*/, Promise.all(dbTables.map(function (dbTable) { return __awaiter(_this, void 0, void 0, function () {\n                                var _this = this;\n                                var table, dbCollation, defaultCollation, defaultCharset, db, tableFullName, tableForeignKeyConstraints, tableIndexConstraints;\n                                return __generator(this, function (_a) {\n                                    table = new Table_1.Table();\n                                    dbCollation = dbCollations.find(function (coll) { return coll[\"SCHEMA_NAME\"] === dbTable[\"TABLE_SCHEMA\"]; });\n                                    defaultCollation = dbCollation[\"COLLATION\"];\n                                    defaultCharset = dbCollation[\"CHARSET\"];\n                                    db = dbTable[\"TABLE_SCHEMA\"] === currentDatabase ? undefined : dbTable[\"TABLE_SCHEMA\"];\n                                    table.name = this.driver.buildTableName(dbTable[\"TABLE_NAME\"], undefined, db);\n                                    tableFullName = this.driver.buildTableName(dbTable[\"TABLE_NAME\"], undefined, dbTable[\"TABLE_SCHEMA\"]);\n                                    // create columns from the loaded columns\n                                    table.columns = dbColumns\n                                        .filter(function (dbColumn) { return _this.driver.buildTableName(dbColumn[\"TABLE_NAME\"], undefined, dbColumn[\"TABLE_SCHEMA\"]) === tableFullName; })\n                                        .map(function (dbColumn) {\n                                        var columnUniqueIndex = dbIndices.find(function (dbIndex) {\n                                            return _this.driver.buildTableName(dbIndex[\"TABLE_NAME\"], undefined, dbIndex[\"TABLE_SCHEMA\"]) === tableFullName\n                                                && dbIndex[\"COLUMN_NAME\"] === dbColumn[\"COLUMN_NAME\"] && dbIndex[\"NON_UNIQUE\"] === \"0\";\n                                        });\n                                        var tableMetadata = _this.connection.entityMetadatas.find(function (metadata) { return metadata.tablePath === table.name; });\n                                        var hasIgnoredIndex = columnUniqueIndex && tableMetadata && tableMetadata.indices\n                                            .some(function (index) { return index.name === columnUniqueIndex[\"INDEX_NAME\"] && index.synchronize === false; });\n                                        var isConstraintComposite = columnUniqueIndex\n                                            ? !!dbIndices.find(function (dbIndex) { return dbIndex[\"INDEX_NAME\"] === columnUniqueIndex[\"INDEX_NAME\"] && dbIndex[\"COLUMN_NAME\"] !== dbColumn[\"COLUMN_NAME\"]; })\n                                            : false;\n                                        var tableColumn = new TableColumn_1.TableColumn();\n                                        tableColumn.name = dbColumn[\"COLUMN_NAME\"];\n                                        tableColumn.type = dbColumn[\"DATA_TYPE\"].toLowerCase();\n                                        if (_this.driver.withWidthColumnTypes.indexOf(tableColumn.type) !== -1) {\n                                            var width = dbColumn[\"COLUMN_TYPE\"].substring(dbColumn[\"COLUMN_TYPE\"].indexOf(\"(\") + 1, dbColumn[\"COLUMN_TYPE\"].indexOf(\")\"));\n                                            tableColumn.width = width && !_this.isDefaultColumnWidth(table, tableColumn, parseInt(width)) ? parseInt(width) : undefined;\n                                        }\n                                        if (dbColumn[\"COLUMN_DEFAULT\"] === null\n                                            || dbColumn[\"COLUMN_DEFAULT\"] === undefined\n                                            || (isMariaDb && dbColumn[\"COLUMN_DEFAULT\"] === \"NULL\")) {\n                                            tableColumn.default = undefined;\n                                        }\n                                        else {\n                                            tableColumn.default = dbColumn[\"COLUMN_DEFAULT\"] === \"CURRENT_TIMESTAMP\" ? dbColumn[\"COLUMN_DEFAULT\"] : \"'\" + dbColumn[\"COLUMN_DEFAULT\"] + \"'\";\n                                        }\n                                        if (dbColumn[\"EXTRA\"].indexOf(\"on update\") !== -1) {\n                                            tableColumn.onUpdate = dbColumn[\"EXTRA\"].substring(10);\n                                        }\n                                        if (dbColumn[\"GENERATION_EXPRESSION\"]) {\n                                            tableColumn.asExpression = dbColumn[\"GENERATION_EXPRESSION\"];\n                                            tableColumn.generatedType = dbColumn[\"EXTRA\"].indexOf(\"VIRTUAL\") !== -1 ? \"VIRTUAL\" : \"STORED\";\n                                        }\n                                        tableColumn.isUnique = !!columnUniqueIndex && !hasIgnoredIndex && !isConstraintComposite;\n                                        tableColumn.isNullable = dbColumn[\"IS_NULLABLE\"] === \"YES\";\n                                        tableColumn.isPrimary = dbPrimaryKeys.some(function (dbPrimaryKey) {\n                                            return _this.driver.buildTableName(dbPrimaryKey[\"TABLE_NAME\"], undefined, dbPrimaryKey[\"TABLE_SCHEMA\"]) === tableFullName && dbPrimaryKey[\"COLUMN_NAME\"] === tableColumn.name;\n                                        });\n                                        tableColumn.zerofill = dbColumn[\"COLUMN_TYPE\"].indexOf(\"zerofill\") !== -1;\n                                        tableColumn.unsigned = tableColumn.zerofill ? true : dbColumn[\"COLUMN_TYPE\"].indexOf(\"unsigned\") !== -1;\n                                        tableColumn.isGenerated = dbColumn[\"EXTRA\"].indexOf(\"auto_increment\") !== -1;\n                                        if (tableColumn.isGenerated)\n                                            tableColumn.generationStrategy = \"increment\";\n                                        tableColumn.comment = dbColumn[\"COLUMN_COMMENT\"];\n                                        if (dbColumn[\"CHARACTER_SET_NAME\"])\n                                            tableColumn.charset = dbColumn[\"CHARACTER_SET_NAME\"] === defaultCharset ? undefined : dbColumn[\"CHARACTER_SET_NAME\"];\n                                        if (dbColumn[\"COLLATION_NAME\"])\n                                            tableColumn.collation = dbColumn[\"COLLATION_NAME\"] === defaultCollation ? undefined : dbColumn[\"COLLATION_NAME\"];\n                                        // check only columns that have length property\n                                        if (_this.driver.withLengthColumnTypes.indexOf(tableColumn.type) !== -1 && dbColumn[\"CHARACTER_MAXIMUM_LENGTH\"]) {\n                                            var length = dbColumn[\"CHARACTER_MAXIMUM_LENGTH\"].toString();\n                                            tableColumn.length = !_this.isDefaultColumnLength(table, tableColumn, length) ? length : \"\";\n                                        }\n                                        if (tableColumn.type === \"decimal\" || tableColumn.type === \"double\" || tableColumn.type === \"float\") {\n                                            if (dbColumn[\"NUMERIC_PRECISION\"] !== null && !_this.isDefaultColumnPrecision(table, tableColumn, dbColumn[\"NUMERIC_PRECISION\"]))\n                                                tableColumn.precision = parseInt(dbColumn[\"NUMERIC_PRECISION\"]);\n                                            if (dbColumn[\"NUMERIC_SCALE\"] !== null && !_this.isDefaultColumnScale(table, tableColumn, dbColumn[\"NUMERIC_SCALE\"]))\n                                                tableColumn.scale = parseInt(dbColumn[\"NUMERIC_SCALE\"]);\n                                        }\n                                        if (tableColumn.type === \"enum\") {\n                                            var colType = dbColumn[\"COLUMN_TYPE\"];\n                                            var items = colType.substring(colType.indexOf(\"(\") + 1, colType.indexOf(\")\")).split(\",\");\n                                            tableColumn.enum = items.map(function (item) {\n                                                return item.substring(1, item.length - 1);\n                                            });\n                                            tableColumn.length = \"\";\n                                        }\n                                        if ((tableColumn.type === \"datetime\" || tableColumn.type === \"time\" || tableColumn.type === \"timestamp\") && dbColumn[\"DATETIME_PRECISION\"]) {\n                                            tableColumn.precision = parseInt(dbColumn[\"DATETIME_PRECISION\"]);\n                                        }\n                                        return tableColumn;\n                                    });\n                                    tableForeignKeyConstraints = OrmUtils_1.OrmUtils.uniq(dbForeignKeys.filter(function (dbForeignKey) {\n                                        return _this.driver.buildTableName(dbForeignKey[\"TABLE_NAME\"], undefined, dbForeignKey[\"TABLE_SCHEMA\"]) === tableFullName;\n                                    }), function (dbForeignKey) { return dbForeignKey[\"CONSTRAINT_NAME\"]; });\n                                    table.foreignKeys = tableForeignKeyConstraints.map(function (dbForeignKey) {\n                                        var foreignKeys = dbForeignKeys.filter(function (dbFk) { return dbFk[\"CONSTRAINT_NAME\"] === dbForeignKey[\"CONSTRAINT_NAME\"]; });\n                                        // if referenced table located in currently used db, we don't need to concat db name to table name.\n                                        var database = dbForeignKey[\"REFERENCED_TABLE_SCHEMA\"] === currentDatabase ? undefined : dbForeignKey[\"REFERENCED_TABLE_SCHEMA\"];\n                                        var referencedTableName = _this.driver.buildTableName(dbForeignKey[\"REFERENCED_TABLE_NAME\"], undefined, database);\n                                        return new TableForeignKey_1.TableForeignKey({\n                                            name: dbForeignKey[\"CONSTRAINT_NAME\"],\n                                            columnNames: foreignKeys.map(function (dbFk) { return dbFk[\"COLUMN_NAME\"]; }),\n                                            referencedTableName: referencedTableName,\n                                            referencedColumnNames: foreignKeys.map(function (dbFk) { return dbFk[\"REFERENCED_COLUMN_NAME\"]; }),\n                                            onDelete: dbForeignKey[\"ON_DELETE\"],\n                                            onUpdate: dbForeignKey[\"ON_UPDATE\"]\n                                        });\n                                    });\n                                    tableIndexConstraints = OrmUtils_1.OrmUtils.uniq(dbIndices.filter(function (dbIndex) {\n                                        return _this.driver.buildTableName(dbIndex[\"TABLE_NAME\"], undefined, dbIndex[\"TABLE_SCHEMA\"]) === tableFullName;\n                                    }), function (dbIndex) { return dbIndex[\"INDEX_NAME\"]; });\n                                    table.indices = tableIndexConstraints.map(function (constraint) {\n                                        var indices = dbIndices.filter(function (index) { return index[\"INDEX_NAME\"] === constraint[\"INDEX_NAME\"]; });\n                                        return new TableIndex_1.TableIndex({\n                                            table: table,\n                                            name: constraint[\"INDEX_NAME\"],\n                                            columnNames: indices.map(function (i) { return i[\"COLUMN_NAME\"]; }),\n                                            isUnique: constraint[\"NON_UNIQUE\"] === \"0\",\n                                            isSpatial: constraint[\"INDEX_TYPE\"] === \"SPATIAL\",\n                                            isFulltext: constraint[\"INDEX_TYPE\"] === \"FULLTEXT\"\n                                        });\n                                    });\n                                    return [2 /*return*/, table];\n                                });\n                            }); }))];\n                }\n            });\n        });\n    };\n    /**\n     * Builds create table sql\n     */\n    MysqlQueryRunner.prototype.createTableSql = function (table, createForeignKeys) {\n        var _this = this;\n        var columnDefinitions = table.columns.map(function (column) { return _this.buildCreateColumnSql(column, true); }).join(\", \");\n        var sql = \"CREATE TABLE \" + this.escapeTableName(table) + \" (\" + columnDefinitions;\n        // we create unique indexes instead of unique constraints, because MySql does not have unique constraints.\n        // if we mark column as Unique, it means that we create UNIQUE INDEX.\n        table.columns\n            .filter(function (column) { return column.isUnique; })\n            .forEach(function (column) {\n            var isUniqueIndexExist = table.indices.some(function (index) {\n                return index.columnNames.length === 1 && !!index.isUnique && index.columnNames.indexOf(column.name) !== -1;\n            });\n            var isUniqueConstraintExist = table.uniques.some(function (unique) {\n                return unique.columnNames.length === 1 && unique.columnNames.indexOf(column.name) !== -1;\n            });\n            if (!isUniqueIndexExist && !isUniqueConstraintExist)\n                table.indices.push(new TableIndex_1.TableIndex({\n                    name: _this.connection.namingStrategy.uniqueConstraintName(table.name, [column.name]),\n                    columnNames: [column.name],\n                    isUnique: true\n                }));\n        });\n        // as MySql does not have unique constraints, we must create table indices from table uniques and mark them as unique.\n        if (table.uniques.length > 0) {\n            table.uniques.forEach(function (unique) {\n                var uniqueExist = table.indices.some(function (index) { return index.name === unique.name; });\n                if (!uniqueExist) {\n                    table.indices.push(new TableIndex_1.TableIndex({\n                        name: unique.name,\n                        columnNames: unique.columnNames,\n                        isUnique: true\n                    }));\n                }\n            });\n        }\n        if (table.indices.length > 0) {\n            var indicesSql = table.indices.map(function (index) {\n                var columnNames = index.columnNames.map(function (columnName) { return \"`\" + columnName + \"`\"; }).join(\", \");\n                if (!index.name)\n                    index.name = _this.connection.namingStrategy.indexName(table.name, index.columnNames, index.where);\n                var indexType = \"\";\n                if (index.isUnique)\n                    indexType += \"UNIQUE \";\n                if (index.isSpatial)\n                    indexType += \"SPATIAL \";\n                if (index.isFulltext)\n                    indexType += \"FULLTEXT \";\n                return indexType + \"INDEX `\" + index.name + \"` (\" + columnNames + \")\";\n            }).join(\", \");\n            sql += \", \" + indicesSql;\n        }\n        if (table.foreignKeys.length > 0 && createForeignKeys) {\n            var foreignKeysSql = table.foreignKeys.map(function (fk) {\n                var columnNames = fk.columnNames.map(function (columnName) { return \"`\" + columnName + \"`\"; }).join(\", \");\n                if (!fk.name)\n                    fk.name = _this.connection.namingStrategy.foreignKeyName(table.name, fk.columnNames);\n                var referencedColumnNames = fk.referencedColumnNames.map(function (columnName) { return \"`\" + columnName + \"`\"; }).join(\", \");\n                var constraint = \"CONSTRAINT `\" + fk.name + \"` FOREIGN KEY (\" + columnNames + \") REFERENCES \" + _this.escapeTableName(fk.referencedTableName) + \" (\" + referencedColumnNames + \")\";\n                if (fk.onDelete)\n                    constraint += \" ON DELETE \" + fk.onDelete;\n                if (fk.onUpdate)\n                    constraint += \" ON UPDATE \" + fk.onUpdate;\n                return constraint;\n            }).join(\", \");\n            sql += \", \" + foreignKeysSql;\n        }\n        if (table.primaryColumns.length > 0) {\n            var columnNames = table.primaryColumns.map(function (column) { return \"`\" + column.name + \"`\"; }).join(\", \");\n            sql += \", PRIMARY KEY (\" + columnNames + \")\";\n        }\n        sql += \") ENGINE=\" + (table.engine || \"InnoDB\");\n        return sql;\n    };\n    /**\n     * Builds drop table sql\n     */\n    MysqlQueryRunner.prototype.dropTableSql = function (tableOrName) {\n        return \"DROP TABLE \" + this.escapeTableName(tableOrName);\n    };\n    /**\n     * Builds create index sql.\n     */\n    MysqlQueryRunner.prototype.createIndexSql = function (table, index) {\n        var columns = index.columnNames.map(function (columnName) { return \"`\" + columnName + \"`\"; }).join(\", \");\n        var indexType = \"\";\n        if (index.isUnique)\n            indexType += \"UNIQUE \";\n        if (index.isSpatial)\n            indexType += \"SPATIAL \";\n        if (index.isFulltext)\n            indexType += \"FULLTEXT \";\n        return \"CREATE \" + indexType + \"INDEX `\" + index.name + \"` ON \" + this.escapeTableName(table) + \"(\" + columns + \")\";\n    };\n    /**\n     * Builds drop index sql.\n     */\n    MysqlQueryRunner.prototype.dropIndexSql = function (table, indexOrName) {\n        var indexName = indexOrName instanceof TableIndex_1.TableIndex ? indexOrName.name : indexOrName;\n        return \"DROP INDEX `\" + indexName + \"` ON \" + this.escapeTableName(table);\n    };\n    /**\n     * Builds create primary key sql.\n     */\n    MysqlQueryRunner.prototype.createPrimaryKeySql = function (table, columnNames) {\n        var columnNamesString = columnNames.map(function (columnName) { return \"`\" + columnName + \"`\"; }).join(\", \");\n        return \"ALTER TABLE \" + this.escapeTableName(table) + \" ADD PRIMARY KEY (\" + columnNamesString + \")\";\n    };\n    /**\n     * Builds drop primary key sql.\n     */\n    MysqlQueryRunner.prototype.dropPrimaryKeySql = function (table) {\n        return \"ALTER TABLE \" + this.escapeTableName(table) + \" DROP PRIMARY KEY\";\n    };\n    /**\n     * Builds create foreign key sql.\n     */\n    MysqlQueryRunner.prototype.createForeignKeySql = function (table, foreignKey) {\n        var columnNames = foreignKey.columnNames.map(function (column) { return \"`\" + column + \"`\"; }).join(\", \");\n        var referencedColumnNames = foreignKey.referencedColumnNames.map(function (column) { return \"`\" + column + \"`\"; }).join(\",\");\n        var sql = \"ALTER TABLE \" + this.escapeTableName(table) + \" ADD CONSTRAINT `\" + foreignKey.name + \"` FOREIGN KEY (\" + columnNames + \") \" +\n            (\"REFERENCES \" + this.escapeTableName(foreignKey.referencedTableName) + \"(\" + referencedColumnNames + \")\");\n        if (foreignKey.onDelete)\n            sql += \" ON DELETE \" + foreignKey.onDelete;\n        if (foreignKey.onUpdate)\n            sql += \" ON UPDATE \" + foreignKey.onUpdate;\n        return sql;\n    };\n    /**\n     * Builds drop foreign key sql.\n     */\n    MysqlQueryRunner.prototype.dropForeignKeySql = function (table, foreignKeyOrName) {\n        var foreignKeyName = foreignKeyOrName instanceof TableForeignKey_1.TableForeignKey ? foreignKeyOrName.name : foreignKeyOrName;\n        return \"ALTER TABLE \" + this.escapeTableName(table) + \" DROP FOREIGN KEY `\" + foreignKeyName + \"`\";\n    };\n    MysqlQueryRunner.prototype.parseTableName = function (target) {\n        var tableName = target instanceof Table_1.Table ? target.name : target;\n        return {\n            database: tableName.indexOf(\".\") !== -1 ? tableName.split(\".\")[0] : this.driver.database,\n            tableName: tableName.indexOf(\".\") !== -1 ? tableName.split(\".\")[1] : tableName\n        };\n    };\n    /**\n     * Escapes given table name.\n     */\n    MysqlQueryRunner.prototype.escapeTableName = function (target, disableEscape) {\n        var tableName = target instanceof Table_1.Table ? target.name : target;\n        return tableName.split(\".\").map(function (i) { return disableEscape ? i : \"`\" + i + \"`\"; }).join(\".\");\n    };\n    /**\n     * Builds a part of query to create/change a column.\n     */\n    MysqlQueryRunner.prototype.buildCreateColumnSql = function (column, skipPrimary, skipName) {\n        if (skipName === void 0) { skipName = false; }\n        var c = \"\";\n        if (skipName) {\n            c = this.connection.driver.createFullType(column);\n        }\n        else {\n            c = \"`\" + column.name + \"` \" + this.connection.driver.createFullType(column);\n        }\n        if (column.asExpression)\n            c += \" AS (\" + column.asExpression + \") \" + (column.generatedType ? column.generatedType : \"VIRTUAL\");\n        // if you specify ZEROFILL for a numeric column, MySQL automatically adds the UNSIGNED attribute to that column.\n        if (column.zerofill) {\n            c += \" ZEROFILL\";\n        }\n        else if (column.unsigned) {\n            c += \" UNSIGNED\";\n        }\n        if (column.enum)\n            c += \" (\" + column.enum.map(function (value) { return \"'\" + value + \"'\"; }).join(\", \") + \")\";\n        if (column.charset)\n            c += \" CHARACTER SET \\\"\" + column.charset + \"\\\"\";\n        if (column.collation)\n            c += \" COLLATE \\\"\" + column.collation + \"\\\"\";\n        if (!column.isNullable)\n            c += \" NOT NULL\";\n        if (column.isNullable)\n            c += \" NULL\";\n        if (column.isPrimary && !skipPrimary)\n            c += \" PRIMARY KEY\";\n        if (column.isGenerated && column.generationStrategy === \"increment\") // don't use skipPrimary here since updates can update already exist primary without auto inc.\n            c += \" AUTO_INCREMENT\";\n        if (column.comment)\n            c += \" COMMENT '\" + column.comment + \"'\";\n        if (column.default !== undefined && column.default !== null)\n            c += \" DEFAULT \" + column.default;\n        if (column.onUpdate)\n            c += \" ON UPDATE \" + column.onUpdate;\n        return c;\n    };\n    return MysqlQueryRunner;\n}(BaseQueryRunner_1.BaseQueryRunner));\nexports.MysqlQueryRunner = MysqlQueryRunner;\n\n//# sourceMappingURL=MysqlQueryRunner.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/driver/mysql/MysqlQueryRunner.js?");

/***/ }),

/***/ "./node_modules/typeorm/driver/nativescript/NativescriptDriver.js":
/*!************************************************************************!*\
  !*** ./node_modules/typeorm/driver/nativescript/NativescriptDriver.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(Buffer) {\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar AbstractSqliteDriver_1 = __webpack_require__(/*! ../sqlite-abstract/AbstractSqliteDriver */ \"./node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js\");\nvar NativescriptQueryRunner_1 = __webpack_require__(/*! ./NativescriptQueryRunner */ \"./node_modules/typeorm/driver/nativescript/NativescriptQueryRunner.js\");\nvar DriverOptionNotSetError_1 = __webpack_require__(/*! ../../error/DriverOptionNotSetError */ \"./node_modules/typeorm/error/DriverOptionNotSetError.js\");\nvar DriverPackageNotInstalledError_1 = __webpack_require__(/*! ../../error/DriverPackageNotInstalledError */ \"./node_modules/typeorm/error/DriverPackageNotInstalledError.js\");\n/**\n * Organizes communication with sqlite DBMS within Nativescript.\n */\nvar NativescriptDriver = /** @class */ (function (_super) {\n    __extends(NativescriptDriver, _super);\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function NativescriptDriver(connection) {\n        var _this = _super.call(this, connection) || this;\n        _this.connection = connection;\n        _this.options = connection.options;\n        _this.database = _this.options.database;\n        // validate options to make sure everything is set\n        if (!_this.options.database)\n            throw new DriverOptionNotSetError_1.DriverOptionNotSetError(\"database\");\n        // load sqlite package\n        _this.loadDependencies();\n        return _this;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Closes connection with database.\n     */\n    NativescriptDriver.prototype.disconnect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2 /*return*/, new Promise(function (ok, fail) {\n                        _this.queryRunner = undefined;\n                        _this.databaseConnection.close().then(ok).catch(fail);\n                    })];\n            });\n        });\n    };\n    /**\n     * Creates a query runner used to execute database queries.\n     */\n    NativescriptDriver.prototype.createQueryRunner = function (mode) {\n        if (mode === void 0) { mode = \"master\"; }\n        if (!this.queryRunner)\n            this.queryRunner = new NativescriptQueryRunner_1.NativescriptQueryRunner(this);\n        return this.queryRunner;\n    };\n    NativescriptDriver.prototype.normalizeType = function (column) {\n        if (column.type === Buffer) {\n            return \"blob\";\n        }\n        return _super.prototype.normalizeType.call(this, column);\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates connection with the database.\n     */\n    NativescriptDriver.prototype.createDatabaseConnection = function () {\n        var _this = this;\n        return new Promise(function (ok, fail) {\n            var options = Object.assign({}, {\n                name: _this.options.database,\n            }, _this.options.extra || {});\n            new _this.sqlite(options.name, function (err, db) {\n                if (err)\n                    return fail(err);\n                // use object mode to work with TypeORM\n                db.resultType(_this.sqlite.RESULTSASOBJECT);\n                // we need to enable foreign keys in sqlite to make sure all foreign key related features\n                // working properly. this also makes onDelete work with sqlite.\n                db.execSQL(\"PRAGMA foreign_keys = ON;\", [], function (err, result) {\n                    if (err)\n                        return fail(err);\n                    // We are all set\n                    ok(db);\n                });\n            });\n        });\n    };\n    /**\n     * If driver dependency is not given explicitly, then try to load it via \"require\".\n     */\n    NativescriptDriver.prototype.loadDependencies = function () {\n        try {\n            this.sqlite = __webpack_require__(!(function webpackMissingModule() { var e = new Error(\"Cannot find module 'nativescript-sqlite'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));\n        }\n        catch (e) {\n            throw new DriverPackageNotInstalledError_1.DriverPackageNotInstalledError(\"Nativescript\", \"nativescript-sqlite\");\n        }\n    };\n    return NativescriptDriver;\n}(AbstractSqliteDriver_1.AbstractSqliteDriver));\nexports.NativescriptDriver = NativescriptDriver;\n\n//# sourceMappingURL=NativescriptDriver.js.map\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../node-libs-browser/node_modules/buffer/index.js */ \"./node_modules/node-libs-browser/node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:///./node_modules/typeorm/driver/nativescript/NativescriptDriver.js?");

/***/ }),

/***/ "./node_modules/typeorm/driver/nativescript/NativescriptQueryRunner.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/typeorm/driver/nativescript/NativescriptQueryRunner.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar QueryRunnerAlreadyReleasedError_1 = __webpack_require__(/*! ../../error/QueryRunnerAlreadyReleasedError */ \"./node_modules/typeorm/error/QueryRunnerAlreadyReleasedError.js\");\nvar QueryFailedError_1 = __webpack_require__(/*! ../../error/QueryFailedError */ \"./node_modules/typeorm/error/QueryFailedError.js\");\nvar AbstractSqliteQueryRunner_1 = __webpack_require__(/*! ../sqlite-abstract/AbstractSqliteQueryRunner */ \"./node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteQueryRunner.js\");\nvar Broadcaster_1 = __webpack_require__(/*! ../../subscriber/Broadcaster */ \"./node_modules/typeorm/subscriber/Broadcaster.js\");\n/**\n * Runs queries on a single sqlite database connection.\n */\nvar NativescriptQueryRunner = /** @class */ (function (_super) {\n    __extends(NativescriptQueryRunner, _super);\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function NativescriptQueryRunner(driver) {\n        var _this = _super.call(this) || this;\n        _this.driver = driver;\n        _this.connection = driver.connection;\n        _this.broadcaster = new Broadcaster_1.Broadcaster(_this);\n        return _this;\n    }\n    /**\n     * Executes a given SQL query.\n     */\n    NativescriptQueryRunner.prototype.query = function (query, parameters) {\n        var _this = this;\n        if (this.isReleased)\n            throw new QueryRunnerAlreadyReleasedError_1.QueryRunnerAlreadyReleasedError();\n        var connection = this.driver.connection;\n        return new Promise(function (ok, fail) {\n            var isInsertQuery = query.substr(0, 11) === \"INSERT INTO\";\n            var handler = function (err, result) {\n                // log slow queries if maxQueryExecution time is set\n                var maxQueryExecutionTime = connection.options.maxQueryExecutionTime;\n                var queryEndTime = +new Date();\n                var queryExecutionTime = queryEndTime - queryStartTime;\n                if (maxQueryExecutionTime && queryExecutionTime > maxQueryExecutionTime)\n                    connection.logger.logQuerySlow(queryExecutionTime, query, parameters, this);\n                if (err) {\n                    connection.logger.logQueryError(err, query, parameters, this);\n                    fail(new QueryFailedError_1.QueryFailedError(query, parameters, err));\n                }\n                else {\n                    // when isInsertQuery == true, result is the id\n                    ok(result);\n                }\n            };\n            _this.driver.connection.logger.logQuery(query, parameters, _this);\n            var queryStartTime = +new Date();\n            _this.connect().then(function (databaseConnection) {\n                if (isInsertQuery) {\n                    databaseConnection.execSQL(query, parameters, handler);\n                }\n                else {\n                    databaseConnection.all(query, parameters, handler);\n                }\n            });\n        });\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Parametrizes given object of values. Used to create column=value queries.\n     */\n    NativescriptQueryRunner.prototype.parametrize = function (objectLiteral, startIndex) {\n        if (startIndex === void 0) { startIndex = 0; }\n        return Object.keys(objectLiteral).map(function (key, index) { return \"\\\"\" + key + \"\\\"\" + \"=?\"; });\n    };\n    return NativescriptQueryRunner;\n}(AbstractSqliteQueryRunner_1.AbstractSqliteQueryRunner));\nexports.NativescriptQueryRunner = NativescriptQueryRunner;\n\n//# sourceMappingURL=NativescriptQueryRunner.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/driver/nativescript/NativescriptQueryRunner.js?");

/***/ }),

/***/ "./node_modules/typeorm/driver/oracle/OracleDriver.js":
/*!************************************************************!*\
  !*** ./node_modules/typeorm/driver/oracle/OracleDriver.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(Buffer) {\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ConnectionIsNotSetError_1 = __webpack_require__(/*! ../../error/ConnectionIsNotSetError */ \"./node_modules/typeorm/error/ConnectionIsNotSetError.js\");\nvar DriverPackageNotInstalledError_1 = __webpack_require__(/*! ../../error/DriverPackageNotInstalledError */ \"./node_modules/typeorm/error/DriverPackageNotInstalledError.js\");\nvar OracleQueryRunner_1 = __webpack_require__(/*! ./OracleQueryRunner */ \"./node_modules/typeorm/driver/oracle/OracleQueryRunner.js\");\nvar DateUtils_1 = __webpack_require__(/*! ../../util/DateUtils */ \"./node_modules/typeorm/util/DateUtils.js\");\nvar PlatformTools_1 = __webpack_require__(/*! ../../platform/PlatformTools */ \"./node_modules/typeorm/platform/PlatformTools.js\");\nvar RdbmsSchemaBuilder_1 = __webpack_require__(/*! ../../schema-builder/RdbmsSchemaBuilder */ \"./node_modules/typeorm/schema-builder/RdbmsSchemaBuilder.js\");\nvar DriverUtils_1 = __webpack_require__(/*! ../DriverUtils */ \"./node_modules/typeorm/driver/DriverUtils.js\");\nvar OrmUtils_1 = __webpack_require__(/*! ../../util/OrmUtils */ \"./node_modules/typeorm/util/OrmUtils.js\");\n/**\n * Organizes communication with Oracle RDBMS.\n */\nvar OracleDriver = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function OracleDriver(connection) {\n        /**\n         * Pool for slave databases.\n         * Used in replication.\n         */\n        this.slaves = [];\n        /**\n         * Indicates if replication is enabled.\n         */\n        this.isReplicated = false;\n        /**\n         * Indicates if tree tables are supported by this driver.\n         */\n        this.treeSupport = true;\n        /**\n         * Gets list of supported column data types by a driver.\n         *\n         * @see https://www.techonthenet.com/oracle/datatypes.php\n         * @see https://docs.oracle.com/cd/B28359_01/server.111/b28318/datatype.htm#CNCPT012\n         */\n        this.supportedDataTypes = [\n            \"char\",\n            \"nchar\",\n            \"nvarchar2\",\n            \"varchar2\",\n            \"long\",\n            \"raw\",\n            \"long raw\",\n            \"number\",\n            \"numeric\",\n            \"float\",\n            \"dec\",\n            \"decimal\",\n            \"integer\",\n            \"int\",\n            \"smallint\",\n            \"real\",\n            \"double precision\",\n            \"date\",\n            \"timestamp\",\n            \"timestamp with time zone\",\n            \"timestamp with local time zone\",\n            \"interval year to month\",\n            \"interval day to second\",\n            \"bfile\",\n            \"blob\",\n            \"clob\",\n            \"nclob\",\n            \"rowid\",\n            \"urowid\"\n        ];\n        /**\n         * Gets list of spatial column data types.\n         */\n        this.spatialTypes = [];\n        /**\n         * Gets list of column data types that support length by a driver.\n         */\n        this.withLengthColumnTypes = [\n            \"char\",\n            \"nchar\",\n            \"nvarchar2\",\n            \"varchar2\",\n            \"varchar\",\n            \"raw\"\n        ];\n        /**\n         * Gets list of column data types that support precision by a driver.\n         */\n        this.withPrecisionColumnTypes = [\n            \"number\",\n            \"float\",\n            \"timestamp\",\n            \"timestamp with time zone\",\n            \"timestamp with local time zone\"\n        ];\n        /**\n         * Gets list of column data types that support scale by a driver.\n         */\n        this.withScaleColumnTypes = [\n            \"number\"\n        ];\n        /**\n         * Orm has special columns and we need to know what database column types should be for those types.\n         * Column types are driver dependant.\n         */\n        this.mappedDataTypes = {\n            createDate: \"timestamp\",\n            createDateDefault: \"CURRENT_TIMESTAMP\",\n            updateDate: \"timestamp\",\n            updateDateDefault: \"CURRENT_TIMESTAMP\",\n            version: \"number\",\n            treeLevel: \"number\",\n            migrationId: \"number\",\n            migrationName: \"varchar2\",\n            migrationTimestamp: \"number\",\n            cacheId: \"number\",\n            cacheIdentifier: \"varchar2\",\n            cacheTime: \"number\",\n            cacheDuration: \"number\",\n            cacheQuery: \"clob\",\n            cacheResult: \"clob\",\n        };\n        /**\n         * Default values of length, precision and scale depends on column data type.\n         * Used in the cases when length/precision/scale is not specified by user.\n         */\n        this.dataTypeDefaults = {\n            \"char\": { length: 1 },\n            \"nchar\": { length: 1 },\n            \"varchar\": { length: 255 },\n            \"varchar2\": { length: 255 },\n            \"nvarchar2\": { length: 255 },\n            \"raw\": { length: 2000 },\n            \"float\": { precision: 126 },\n            \"timestamp\": { precision: 6 },\n            \"timestamp with time zone\": { precision: 6 },\n            \"timestamp with local time zone\": { precision: 6 }\n        };\n        this.connection = connection;\n        this.options = connection.options;\n        // load oracle package\n        this.loadDependencies();\n        // extra oracle setup\n        this.oracle.outFormat = this.oracle.OBJECT;\n        // Object.assign(connection.options, DriverUtils.buildDriverOptions(connection.options)); // todo: do it better way\n        // validate options to make sure everything is set\n        // if (!this.options.host)\n        //     throw new DriverOptionNotSetError(\"host\");\n        // if (!this.options.username)\n        //     throw new DriverOptionNotSetError(\"username\");\n        // if (!this.options.sid)\n        //     throw new DriverOptionNotSetError(\"sid\");\n        //\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Performs connection to the database.\n     * Based on pooling options, it can either create connection immediately,\n     * either create a pool and create connection when needed.\n     */\n    OracleDriver.prototype.connect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var _a, _b, _c;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        this.oracle.fetchAsString = [this.oracle.CLOB];\n                        this.oracle.fetchAsBuffer = [this.oracle.BLOB];\n                        if (!this.options.replication) return [3 /*break*/, 3];\n                        _a = this;\n                        return [4 /*yield*/, Promise.all(this.options.replication.slaves.map(function (slave) {\n                                return _this.createPool(_this.options, slave);\n                            }))];\n                    case 1:\n                        _a.slaves = _d.sent();\n                        _b = this;\n                        return [4 /*yield*/, this.createPool(this.options, this.options.replication.master)];\n                    case 2:\n                        _b.master = _d.sent();\n                        this.database = this.options.replication.master.database;\n                        return [3 /*break*/, 5];\n                    case 3:\n                        _c = this;\n                        return [4 /*yield*/, this.createPool(this.options, this.options)];\n                    case 4:\n                        _c.master = _d.sent();\n                        this.database = this.options.database;\n                        _d.label = 5;\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Makes any action after connection (e.g. create extensions in Postgres driver).\n     */\n    OracleDriver.prototype.afterConnect = function () {\n        return Promise.resolve();\n    };\n    /**\n     * Closes connection with the database.\n     */\n    OracleDriver.prototype.disconnect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.master)\n                            return [2 /*return*/, Promise.reject(new ConnectionIsNotSetError_1.ConnectionIsNotSetError(\"oracle\"))];\n                        return [4 /*yield*/, this.closePool(this.master)];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, Promise.all(this.slaves.map(function (slave) { return _this.closePool(slave); }))];\n                    case 2:\n                        _a.sent();\n                        this.master = undefined;\n                        this.slaves = [];\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a schema builder used to build and sync a schema.\n     */\n    OracleDriver.prototype.createSchemaBuilder = function () {\n        return new RdbmsSchemaBuilder_1.RdbmsSchemaBuilder(this.connection);\n    };\n    /**\n     * Creates a query runner used to execute database queries.\n     */\n    OracleDriver.prototype.createQueryRunner = function (mode) {\n        if (mode === void 0) { mode = \"master\"; }\n        return new OracleQueryRunner_1.OracleQueryRunner(this, mode);\n    };\n    /**\n     * Replaces parameters in the given sql with special escaping character\n     * and an array of parameter names to be passed to a query.\n     */\n    OracleDriver.prototype.escapeQueryWithParameters = function (sql, parameters, nativeParameters) {\n        var escapedParameters = Object.keys(nativeParameters).map(function (key) {\n            if (typeof nativeParameters[key] === \"boolean\")\n                return nativeParameters[key] ? 1 : 0;\n            return nativeParameters[key];\n        });\n        if (!parameters || !Object.keys(parameters).length)\n            return [sql, escapedParameters];\n        var keys = Object.keys(parameters).map(function (parameter) { return \"(:(\\\\.\\\\.\\\\.)?\" + parameter + \"\\\\b)\"; }).join(\"|\");\n        sql = sql.replace(new RegExp(keys, \"g\"), function (key) {\n            var value;\n            var isArray = false;\n            if (key.substr(0, 4) === \":...\") {\n                isArray = true;\n                value = parameters[key.substr(4)];\n            }\n            else {\n                value = parameters[key.substr(1)];\n            }\n            if (isArray) {\n                return value.map(function (v, index) {\n                    escapedParameters.push(v);\n                    return \":\" + key.substr(4) + index;\n                }).join(\", \");\n            }\n            else if (value instanceof Function) {\n                return value();\n            }\n            else if (typeof value === \"boolean\") {\n                return value ? 1 : 0;\n            }\n            else {\n                escapedParameters.push(value);\n                return key;\n            }\n        }); // todo: make replace only in value statements, otherwise problems\n        return [sql, escapedParameters];\n    };\n    /**\n     * Escapes a column name.\n     */\n    OracleDriver.prototype.escape = function (columnName) {\n        return \"\\\"\" + columnName + \"\\\"\";\n    };\n    /**\n     * Build full table name with database name, schema name and table name.\n     * Oracle does not support table schemas. One user can have only one schema.\n     */\n    OracleDriver.prototype.buildTableName = function (tableName, schema, database) {\n        return tableName;\n    };\n    /**\n     * Prepares given value to a value to be persisted, based on its column type and metadata.\n     */\n    OracleDriver.prototype.preparePersistentValue = function (value, columnMetadata) {\n        if (columnMetadata.transformer)\n            value = columnMetadata.transformer.to(value);\n        if (value === null || value === undefined)\n            return value;\n        if (columnMetadata.type === Boolean) {\n            return value ? 1 : 0;\n        }\n        else if (columnMetadata.type === \"date\") {\n            if (typeof value === \"string\")\n                value = value.replace(/[^0-9-]/g, \"\");\n            return function () { return \"TO_DATE('\" + DateUtils_1.DateUtils.mixedDateToDateString(value) + \"', 'YYYY-MM-DD')\"; };\n        }\n        else if (columnMetadata.type === Date\n            || columnMetadata.type === \"timestamp\"\n            || columnMetadata.type === \"timestamp with time zone\"\n            || columnMetadata.type === \"timestamp with local time zone\") {\n            return DateUtils_1.DateUtils.mixedDateToDate(value);\n        }\n        else if (columnMetadata.type === \"simple-array\") {\n            return DateUtils_1.DateUtils.simpleArrayToString(value);\n        }\n        else if (columnMetadata.type === \"simple-json\") {\n            return DateUtils_1.DateUtils.simpleJsonToString(value);\n        }\n        return value;\n    };\n    /**\n     * Prepares given value to a value to be persisted, based on its column type or metadata.\n     */\n    OracleDriver.prototype.prepareHydratedValue = function (value, columnMetadata) {\n        if (value === null || value === undefined)\n            return value;\n        if (columnMetadata.type === Boolean) {\n            value = value === 1 ? true : false;\n        }\n        else if (columnMetadata.type === \"date\") {\n            value = DateUtils_1.DateUtils.mixedDateToDateString(value);\n        }\n        else if (columnMetadata.type === \"time\") {\n            value = DateUtils_1.DateUtils.mixedTimeToString(value);\n        }\n        else if (columnMetadata.type === Date\n            || columnMetadata.type === \"timestamp\"\n            || columnMetadata.type === \"timestamp with time zone\"\n            || columnMetadata.type === \"timestamp with local time zone\") {\n            value = DateUtils_1.DateUtils.normalizeHydratedDate(value);\n        }\n        else if (columnMetadata.type === \"json\") {\n            value = JSON.parse(value);\n        }\n        else if (columnMetadata.type === \"simple-array\") {\n            value = DateUtils_1.DateUtils.stringToSimpleArray(value);\n        }\n        else if (columnMetadata.type === \"simple-json\") {\n            value = DateUtils_1.DateUtils.stringToSimpleJson(value);\n        }\n        if (columnMetadata.transformer)\n            value = columnMetadata.transformer.from(value);\n        return value;\n    };\n    /**\n     * Creates a database type from a given column metadata.\n     */\n    OracleDriver.prototype.normalizeType = function (column) {\n        if (column.type === Number || column.type === Boolean || column.type === \"numeric\"\n            || column.type === \"dec\" || column.type === \"decimal\" || column.type === \"int\"\n            || column.type === \"integer\" || column.type === \"smallint\") {\n            return \"number\";\n        }\n        else if (column.type === \"real\" || column.type === \"double precision\") {\n            return \"float\";\n        }\n        else if (column.type === String || column.type === \"varchar\") {\n            return \"varchar2\";\n        }\n        else if (column.type === Date) {\n            return \"timestamp\";\n        }\n        else if (column.type === Buffer) {\n            return \"blob\";\n        }\n        else if (column.type === \"uuid\") {\n            return \"varchar2\";\n        }\n        else if (column.type === \"simple-array\") {\n            return \"clob\";\n        }\n        else if (column.type === \"simple-json\") {\n            return \"clob\";\n        }\n        else {\n            return column.type || \"\";\n        }\n    };\n    /**\n     * Normalizes \"default\" value of the column.\n     */\n    OracleDriver.prototype.normalizeDefault = function (columnMetadata) {\n        var defaultValue = columnMetadata.default;\n        if (typeof defaultValue === \"number\") {\n            return \"\" + defaultValue;\n        }\n        else if (typeof defaultValue === \"boolean\") {\n            return defaultValue === true ? \"1\" : \"0\";\n        }\n        else if (typeof defaultValue === \"function\") {\n            return defaultValue();\n        }\n        else if (typeof defaultValue === \"string\") {\n            return \"'\" + defaultValue + \"'\";\n        }\n        else {\n            return defaultValue;\n        }\n    };\n    /**\n     * Normalizes \"isUnique\" value of the column.\n     */\n    OracleDriver.prototype.normalizeIsUnique = function (column) {\n        return column.entityMetadata.uniques.some(function (uq) { return uq.columns.length === 1 && uq.columns[0] === column; });\n    };\n    /**\n     * Calculates column length taking into account the default length values.\n     */\n    OracleDriver.prototype.getColumnLength = function (column) {\n        if (column.length)\n            return column.length.toString();\n        switch (column.type) {\n            case String:\n            case \"varchar\":\n            case \"varchar2\":\n            case \"nvarchar2\":\n                return \"255\";\n            case \"raw\":\n                return \"2000\";\n            case \"uuid\":\n                return \"36\";\n            default:\n                return \"\";\n        }\n    };\n    OracleDriver.prototype.createFullType = function (column) {\n        var type = column.type;\n        // used 'getColumnLength()' method, because in Oracle column length is required for some data types.\n        if (this.getColumnLength(column)) {\n            type += \"(\" + this.getColumnLength(column) + \")\";\n        }\n        else if (column.precision !== null && column.precision !== undefined && column.scale !== null && column.scale !== undefined) {\n            type += \"(\" + column.precision + \",\" + column.scale + \")\";\n        }\n        else if (column.precision !== null && column.precision !== undefined) {\n            type += \"(\" + column.precision + \")\";\n        }\n        if (column.type === \"timestamp with time zone\") {\n            type = \"TIMESTAMP\" + (column.precision !== null && column.precision !== undefined ? \"(\" + column.precision + \")\" : \"\") + \" WITH TIME ZONE\";\n        }\n        else if (column.type === \"timestamp with local time zone\") {\n            type = \"TIMESTAMP\" + (column.precision !== null && column.precision !== undefined ? \"(\" + column.precision + \")\" : \"\") + \" WITH LOCAL TIME ZONE\";\n        }\n        if (column.isArray)\n            type += \" array\";\n        return type;\n    };\n    /**\n     * Obtains a new database connection to a master server.\n     * Used for replication.\n     * If replication is not setup then returns default connection's database connection.\n     */\n    OracleDriver.prototype.obtainMasterConnection = function () {\n        var _this = this;\n        return new Promise(function (ok, fail) {\n            _this.master.getConnection(function (err, connection, release) {\n                if (err)\n                    return fail(err);\n                ok(connection);\n            });\n        });\n    };\n    /**\n     * Obtains a new database connection to a slave server.\n     * Used for replication.\n     * If replication is not setup then returns master (default) connection's database connection.\n     */\n    OracleDriver.prototype.obtainSlaveConnection = function () {\n        var _this = this;\n        if (!this.slaves.length)\n            return this.obtainMasterConnection();\n        return new Promise(function (ok, fail) {\n            var random = Math.floor(Math.random() * _this.slaves.length);\n            _this.slaves[random].getConnection(function (err, connection) {\n                if (err)\n                    return fail(err);\n                ok(connection);\n            });\n        });\n    };\n    /**\n     * Creates generated map of values generated or returned by database after INSERT query.\n     */\n    OracleDriver.prototype.createGeneratedMap = function (metadata, insertResult) {\n        if (!insertResult)\n            return undefined;\n        return Object.keys(insertResult).reduce(function (map, key) {\n            var column = metadata.findColumnWithDatabaseName(key);\n            if (column) {\n                OrmUtils_1.OrmUtils.mergeDeep(map, column.createValueMap(insertResult[key]));\n            }\n            return map;\n        }, {});\n    };\n    /**\n     * Differentiate columns of this table and columns from the given column metadatas columns\n     * and returns only changed.\n     */\n    OracleDriver.prototype.findChangedColumns = function (tableColumns, columnMetadatas) {\n        var _this = this;\n        return columnMetadatas.filter(function (columnMetadata) {\n            var tableColumn = tableColumns.find(function (c) { return c.name === columnMetadata.databaseName; });\n            if (!tableColumn)\n                return false; // we don't need new columns, we only need exist and changed\n            return tableColumn.name !== columnMetadata.databaseName\n                || tableColumn.type !== _this.normalizeType(columnMetadata)\n                || tableColumn.length !== columnMetadata.length\n                || tableColumn.precision !== columnMetadata.precision\n                || tableColumn.scale !== columnMetadata.scale\n                // || tableColumn.comment !== columnMetadata.comment || // todo\n                || _this.normalizeDefault(columnMetadata) !== tableColumn.default\n                || tableColumn.isPrimary !== columnMetadata.isPrimary\n                || tableColumn.isNullable !== columnMetadata.isNullable\n                || tableColumn.isUnique !== _this.normalizeIsUnique(columnMetadata)\n                || (columnMetadata.generationStrategy !== \"uuid\" && tableColumn.isGenerated !== columnMetadata.isGenerated);\n        });\n    };\n    /**\n     * Returns true if driver supports RETURNING / OUTPUT statement.\n     */\n    OracleDriver.prototype.isReturningSqlSupported = function () {\n        return true;\n    };\n    /**\n     * Returns true if driver supports uuid values generation on its own.\n     */\n    OracleDriver.prototype.isUUIDGenerationSupported = function () {\n        return false;\n    };\n    /**\n     * Creates an escaped parameter.\n     */\n    OracleDriver.prototype.createParameter = function (parameterName, index) {\n        return \":\" + parameterName;\n    };\n    /**\n     * Converts column type in to native oracle type.\n     */\n    OracleDriver.prototype.columnTypeToNativeParameter = function (type) {\n        switch (this.normalizeType({ type: type })) {\n            case \"number\":\n            case \"numeric\":\n            case \"int\":\n            case \"integer\":\n            case \"smallint\":\n            case \"dec\":\n            case \"decimal\":\n                return this.oracle.NUMBER;\n            case \"char\":\n            case \"nchar\":\n            case \"nvarchar2\":\n            case \"varchar2\":\n                return this.oracle.STRING;\n            case \"blob\":\n                return this.oracle.BLOB;\n            case \"clob\":\n                return this.oracle.CLOB;\n            case \"date\":\n            case \"timestamp\":\n            case \"timestamp with time zone\":\n            case \"timestamp with local time zone\":\n                return this.oracle.DATE;\n        }\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Loads all driver dependencies.\n     */\n    OracleDriver.prototype.loadDependencies = function () {\n        try {\n            this.oracle = PlatformTools_1.PlatformTools.load(\"oracledb\");\n        }\n        catch (e) {\n            throw new DriverPackageNotInstalledError_1.DriverPackageNotInstalledError(\"Oracle\", \"oracledb\");\n        }\n    };\n    /**\n     * Creates a new connection pool for a given database credentials.\n     */\n    OracleDriver.prototype.createPool = function (options, credentials) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var connectionOptions;\n            return __generator(this, function (_a) {\n                credentials = Object.assign(credentials, DriverUtils_1.DriverUtils.buildDriverOptions(credentials)); // todo: do it better way\n                connectionOptions = Object.assign({}, {\n                    user: credentials.username,\n                    password: credentials.password,\n                    connectString: credentials.connectString ? credentials.connectString : credentials.host + \":\" + credentials.port + \"/\" + credentials.sid,\n                }, options.extra || {});\n                // pooling is enabled either when its set explicitly to true,\n                // either when its not defined at all (e.g. enabled by default)\n                return [2 /*return*/, new Promise(function (ok, fail) {\n                        _this.oracle.createPool(connectionOptions, function (err, pool) {\n                            if (err)\n                                return fail(err);\n                            ok(pool);\n                        });\n                    })];\n            });\n        });\n    };\n    /**\n     * Closes connection pool.\n     */\n    OracleDriver.prototype.closePool = function (pool) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, new Promise(function (ok, fail) {\n                        pool.close(function (err) { return err ? fail(err) : ok(); });\n                        pool = undefined;\n                    })];\n            });\n        });\n    };\n    return OracleDriver;\n}());\nexports.OracleDriver = OracleDriver;\n\n//# sourceMappingURL=OracleDriver.js.map\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../node-libs-browser/node_modules/buffer/index.js */ \"./node_modules/node-libs-browser/node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:///./node_modules/typeorm/driver/oracle/OracleDriver.js?");

/***/ }),

/***/ "./node_modules/typeorm/driver/oracle/OracleQueryRunner.js":
/*!*****************************************************************!*\
  !*** ./node_modules/typeorm/driver/oracle/OracleQueryRunner.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TransactionAlreadyStartedError_1 = __webpack_require__(/*! ../../error/TransactionAlreadyStartedError */ \"./node_modules/typeorm/error/TransactionAlreadyStartedError.js\");\nvar TransactionNotStartedError_1 = __webpack_require__(/*! ../../error/TransactionNotStartedError */ \"./node_modules/typeorm/error/TransactionNotStartedError.js\");\nvar TableColumn_1 = __webpack_require__(/*! ../../schema-builder/table/TableColumn */ \"./node_modules/typeorm/schema-builder/table/TableColumn.js\");\nvar Table_1 = __webpack_require__(/*! ../../schema-builder/table/Table */ \"./node_modules/typeorm/schema-builder/table/Table.js\");\nvar TableForeignKey_1 = __webpack_require__(/*! ../../schema-builder/table/TableForeignKey */ \"./node_modules/typeorm/schema-builder/table/TableForeignKey.js\");\nvar TableIndex_1 = __webpack_require__(/*! ../../schema-builder/table/TableIndex */ \"./node_modules/typeorm/schema-builder/table/TableIndex.js\");\nvar QueryRunnerAlreadyReleasedError_1 = __webpack_require__(/*! ../../error/QueryRunnerAlreadyReleasedError */ \"./node_modules/typeorm/error/QueryRunnerAlreadyReleasedError.js\");\nvar QueryFailedError_1 = __webpack_require__(/*! ../../error/QueryFailedError */ \"./node_modules/typeorm/error/QueryFailedError.js\");\nvar TableUnique_1 = __webpack_require__(/*! ../../schema-builder/table/TableUnique */ \"./node_modules/typeorm/schema-builder/table/TableUnique.js\");\nvar Broadcaster_1 = __webpack_require__(/*! ../../subscriber/Broadcaster */ \"./node_modules/typeorm/subscriber/Broadcaster.js\");\nvar BaseQueryRunner_1 = __webpack_require__(/*! ../../query-runner/BaseQueryRunner */ \"./node_modules/typeorm/query-runner/BaseQueryRunner.js\");\nvar OrmUtils_1 = __webpack_require__(/*! ../../util/OrmUtils */ \"./node_modules/typeorm/util/OrmUtils.js\");\nvar TableCheck_1 = __webpack_require__(/*! ../../schema-builder/table/TableCheck */ \"./node_modules/typeorm/schema-builder/table/TableCheck.js\");\nvar index_1 = __webpack_require__(/*! ../../index */ \"./node_modules/typeorm/index.js\");\n/**\n * Runs queries on a single oracle database connection.\n */\nvar OracleQueryRunner = /** @class */ (function (_super) {\n    __extends(OracleQueryRunner, _super);\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function OracleQueryRunner(driver, mode) {\n        if (mode === void 0) { mode = \"master\"; }\n        var _this = _super.call(this) || this;\n        _this.driver = driver;\n        _this.connection = driver.connection;\n        _this.broadcaster = new Broadcaster_1.Broadcaster(_this);\n        _this.mode = mode;\n        return _this;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates/uses database connection from the connection pool to perform further operations.\n     * Returns obtained database connection.\n     */\n    OracleQueryRunner.prototype.connect = function () {\n        var _this = this;\n        if (this.databaseConnection)\n            return Promise.resolve(this.databaseConnection);\n        if (this.databaseConnectionPromise)\n            return this.databaseConnectionPromise;\n        if (this.mode === \"slave\" && this.driver.isReplicated) {\n            this.databaseConnectionPromise = this.driver.obtainSlaveConnection().then(function (connection) {\n                _this.databaseConnection = connection;\n                return _this.databaseConnection;\n            });\n        }\n        else { // master\n            this.databaseConnectionPromise = this.driver.obtainMasterConnection().then(function (connection) {\n                _this.databaseConnection = connection;\n                return _this.databaseConnection;\n            });\n        }\n        return this.databaseConnectionPromise;\n    };\n    /**\n     * Releases used database connection.\n     * You cannot use query runner methods once its released.\n     */\n    OracleQueryRunner.prototype.release = function () {\n        var _this = this;\n        return new Promise(function (ok, fail) {\n            _this.isReleased = true;\n            if (_this.databaseConnection) {\n                _this.databaseConnection.close(function (err) {\n                    if (err)\n                        return fail(err);\n                    ok();\n                });\n            }\n            else {\n                ok();\n            }\n        });\n    };\n    /**\n     * Starts transaction.\n     */\n    OracleQueryRunner.prototype.startTransaction = function (isolationLevel) {\n        if (isolationLevel === void 0) { isolationLevel = \"READ COMMITTED\"; }\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.isReleased)\n                            throw new QueryRunnerAlreadyReleasedError_1.QueryRunnerAlreadyReleasedError();\n                        if (this.isTransactionActive)\n                            throw new TransactionAlreadyStartedError_1.TransactionAlreadyStartedError();\n                        // await this.query(\"START TRANSACTION\");\n                        if (isolationLevel !== \"SERIALIZABLE\" && isolationLevel !== \"READ COMMITTED\") {\n                            throw new Error(\"Oracle only supports SERIALIZABLE and READ COMMITTED isolation\");\n                        }\n                        return [4 /*yield*/, this.query(\"SET TRANSACTION ISOLATION LEVEL \" + isolationLevel)];\n                    case 1:\n                        _a.sent();\n                        this.isTransactionActive = true;\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Commits transaction.\n     * Error will be thrown if transaction was not started.\n     */\n    OracleQueryRunner.prototype.commitTransaction = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.isTransactionActive)\n                            throw new TransactionNotStartedError_1.TransactionNotStartedError();\n                        return [4 /*yield*/, this.query(\"COMMIT\")];\n                    case 1:\n                        _a.sent();\n                        this.isTransactionActive = false;\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Rollbacks transaction.\n     * Error will be thrown if transaction was not started.\n     */\n    OracleQueryRunner.prototype.rollbackTransaction = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.isTransactionActive)\n                            throw new TransactionNotStartedError_1.TransactionNotStartedError();\n                        return [4 /*yield*/, this.query(\"ROLLBACK\")];\n                    case 1:\n                        _a.sent();\n                        this.isTransactionActive = false;\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Executes a given SQL query.\n     */\n    OracleQueryRunner.prototype.query = function (query, parameters) {\n        var _this = this;\n        if (this.isReleased)\n            throw new QueryRunnerAlreadyReleasedError_1.QueryRunnerAlreadyReleasedError();\n        return new Promise(function (ok, fail) { return __awaiter(_this, void 0, void 0, function () {\n            var _this = this;\n            var queryStartTime_1, handler, executionOptions, databaseConnection, err_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        this.driver.connection.logger.logQuery(query, parameters, this);\n                        queryStartTime_1 = +new Date();\n                        handler = function (err, result) {\n                            // log slow queries if maxQueryExecution time is set\n                            var maxQueryExecutionTime = _this.driver.connection.options.maxQueryExecutionTime;\n                            var queryEndTime = +new Date();\n                            var queryExecutionTime = queryEndTime - queryStartTime_1;\n                            if (maxQueryExecutionTime && queryExecutionTime > maxQueryExecutionTime)\n                                _this.driver.connection.logger.logQuerySlow(queryExecutionTime, query, parameters, _this);\n                            if (err) {\n                                _this.driver.connection.logger.logQueryError(err, query, parameters, _this);\n                                return fail(new QueryFailedError_1.QueryFailedError(query, parameters, err));\n                            }\n                            ok(result.rows || result.outBinds);\n                        };\n                        executionOptions = {\n                            autoCommit: this.isTransactionActive ? false : true\n                        };\n                        return [4 /*yield*/, this.connect()];\n                    case 1:\n                        databaseConnection = _a.sent();\n                        databaseConnection.execute(query, parameters || {}, executionOptions, handler);\n                        return [3 /*break*/, 3];\n                    case 2:\n                        err_1 = _a.sent();\n                        fail(err_1);\n                        return [3 /*break*/, 3];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        }); });\n    };\n    /**\n     * Returns raw data stream.\n     */\n    OracleQueryRunner.prototype.stream = function (query, parameters, onEnd, onError) {\n        throw new Error(\"Stream is not supported by Oracle driver.\");\n    };\n    /**\n     * Returns all available database names including system databases.\n     */\n    OracleQueryRunner.prototype.getDatabases = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, Promise.resolve([])];\n            });\n        });\n    };\n    /**\n     * Returns all available schema names including system schemas.\n     * If database parameter specified, returns schemas of that database.\n     */\n    OracleQueryRunner.prototype.getSchemas = function (database) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, Promise.resolve([])];\n            });\n        });\n    };\n    /**\n     * Checks if database with the given name exist.\n     */\n    OracleQueryRunner.prototype.hasDatabase = function (database) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, Promise.resolve(false)];\n            });\n        });\n    };\n    /**\n     * Checks if schema with the given name exist.\n     */\n    OracleQueryRunner.prototype.hasSchema = function (schema) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, Promise.resolve(false)];\n            });\n        });\n    };\n    /**\n     * Checks if table with the given name exist in the database.\n     */\n    OracleQueryRunner.prototype.hasTable = function (tableOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var tableName, sql, result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        tableName = tableOrName instanceof Table_1.Table ? tableOrName.name : tableOrName;\n                        sql = \"SELECT \\\"TABLE_NAME\\\" FROM \\\"USER_TABLES\\\" WHERE \\\"TABLE_NAME\\\" = '\" + tableName + \"'\";\n                        return [4 /*yield*/, this.query(sql)];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, result.length ? true : false];\n                }\n            });\n        });\n    };\n    /**\n     * Checks if column with the given name exist in the given table.\n     */\n    OracleQueryRunner.prototype.hasColumn = function (tableOrName, columnName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var tableName, sql, result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        tableName = tableOrName instanceof Table_1.Table ? tableOrName.name : tableOrName;\n                        sql = \"SELECT \\\"COLUMN_NAME\\\" FROM \\\"USER_TAB_COLS\\\" WHERE \\\"TABLE_NAME\\\" = '\" + tableName + \"' AND \\\"COLUMN_NAME\\\" = '\" + columnName + \"'\";\n                        return [4 /*yield*/, this.query(sql)];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, result.length ? true : false];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new database.\n     */\n    OracleQueryRunner.prototype.createDatabase = function (database, ifNotExist) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.query(\"CREATE DATABASE IF NOT EXISTS \\\"\" + database + \"\\\"\")];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops database.\n     */\n    OracleQueryRunner.prototype.dropDatabase = function (database, ifExist) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, Promise.resolve()];\n            });\n        });\n    };\n    /**\n     * Creates a new table schema.\n     */\n    OracleQueryRunner.prototype.createSchema = function (schemas, ifNotExist) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"Schema create queries are not supported by Oracle driver.\");\n            });\n        });\n    };\n    /**\n     * Drops table schema.\n     */\n    OracleQueryRunner.prototype.dropSchema = function (schemaPath, ifExist) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"Schema drop queries are not supported by Oracle driver.\");\n            });\n        });\n    };\n    /**\n     * Creates a new table.\n     */\n    OracleQueryRunner.prototype.createTable = function (table, ifNotExist, createForeignKeys, createIndices) {\n        if (ifNotExist === void 0) { ifNotExist = false; }\n        if (createForeignKeys === void 0) { createForeignKeys = true; }\n        if (createIndices === void 0) { createIndices = true; }\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var isTableExist, upQueries, downQueries;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!ifNotExist) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.hasTable(table)];\n                    case 1:\n                        isTableExist = _a.sent();\n                        if (isTableExist)\n                            return [2 /*return*/, Promise.resolve()];\n                        _a.label = 2;\n                    case 2:\n                        upQueries = [];\n                        downQueries = [];\n                        upQueries.push(this.createTableSql(table, createForeignKeys));\n                        downQueries.push(this.dropTableSql(table));\n                        // if createForeignKeys is true, we must drop created foreign keys in down query.\n                        // createTable does not need separate method to create foreign keys, because it create fk's in the same query with table creation.\n                        if (createForeignKeys)\n                            table.foreignKeys.forEach(function (foreignKey) { return downQueries.push(_this.dropForeignKeySql(table, foreignKey)); });\n                        if (createIndices) {\n                            table.indices.forEach(function (index) {\n                                // new index may be passed without name. In this case we generate index name manually.\n                                if (!index.name)\n                                    index.name = _this.connection.namingStrategy.indexName(table.name, index.columnNames, index.where);\n                                upQueries.push(_this.createIndexSql(table, index));\n                                downQueries.push(_this.dropIndexSql(index));\n                            });\n                        }\n                        return [4 /*yield*/, this.executeQueries(upQueries, downQueries)];\n                    case 3:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops the table.\n     */\n    OracleQueryRunner.prototype.dropTable = function (tableOrName, ifExist, dropForeignKeys, dropIndices) {\n        if (dropForeignKeys === void 0) { dropForeignKeys = true; }\n        if (dropIndices === void 0) { dropIndices = true; }\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var isTableExist, createForeignKeys, table, _a, upQueries, downQueries;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!ifExist) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.hasTable(tableOrName)];\n                    case 1:\n                        isTableExist = _b.sent();\n                        if (!isTableExist)\n                            return [2 /*return*/, Promise.resolve()];\n                        _b.label = 2;\n                    case 2:\n                        createForeignKeys = dropForeignKeys;\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 3];\n                        _a = tableOrName;\n                        return [3 /*break*/, 5];\n                    case 3: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 4:\n                        _a = _b.sent();\n                        _b.label = 5;\n                    case 5:\n                        table = _a;\n                        upQueries = [];\n                        downQueries = [];\n                        if (dropIndices) {\n                            table.indices.forEach(function (index) {\n                                upQueries.push(_this.dropIndexSql(index));\n                                downQueries.push(_this.createIndexSql(table, index));\n                            });\n                        }\n                        // if dropForeignKeys is true, we just drop the table, otherwise we also drop table foreign keys.\n                        // createTable does not need separate method to create foreign keys, because it create fk's in the same query with table creation.\n                        if (dropForeignKeys)\n                            table.foreignKeys.forEach(function (foreignKey) { return upQueries.push(_this.dropForeignKeySql(table, foreignKey)); });\n                        upQueries.push(this.dropTableSql(table));\n                        downQueries.push(this.createTableSql(table, createForeignKeys));\n                        return [4 /*yield*/, this.executeQueries(upQueries, downQueries)];\n                    case 6:\n                        _b.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Renames the given table.\n     */\n    OracleQueryRunner.prototype.renameTable = function (oldTableOrName, newTableOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var upQueries, downQueries, oldTable, _a, newTable, columnNames, oldPkName, newPkName;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        upQueries = [];\n                        downQueries = [];\n                        if (!(oldTableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = oldTableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(oldTableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        oldTable = _a;\n                        newTable = oldTable.clone();\n                        if (newTableOrName instanceof Table_1.Table) {\n                            newTable = newTableOrName;\n                        }\n                        else {\n                            newTable.name = newTableOrName;\n                        }\n                        // rename table\n                        upQueries.push(\"ALTER TABLE \\\"\" + oldTable.name + \"\\\" RENAME TO \\\"\" + newTable.name + \"\\\"\");\n                        downQueries.push(\"ALTER TABLE \\\"\" + newTable.name + \"\\\" RENAME TO \\\"\" + oldTable.name + \"\\\"\");\n                        // rename primary key constraint\n                        if (newTable.primaryColumns.length > 0) {\n                            columnNames = newTable.primaryColumns.map(function (column) { return column.name; });\n                            oldPkName = this.connection.namingStrategy.primaryKeyName(oldTable, columnNames);\n                            newPkName = this.connection.namingStrategy.primaryKeyName(newTable, columnNames);\n                            // build queries\n                            upQueries.push(\"ALTER TABLE \\\"\" + newTable.name + \"\\\" RENAME CONSTRAINT \\\"\" + oldPkName + \"\\\" TO \\\"\" + newPkName + \"\\\"\");\n                            downQueries.push(\"ALTER TABLE \\\"\" + newTable.name + \"\\\" RENAME CONSTRAINT \\\"\" + newPkName + \"\\\" TO \\\"\" + oldPkName + \"\\\"\");\n                        }\n                        // rename unique constraints\n                        newTable.uniques.forEach(function (unique) {\n                            // build new constraint name\n                            var newUniqueName = _this.connection.namingStrategy.uniqueConstraintName(newTable, unique.columnNames);\n                            // build queries\n                            upQueries.push(\"ALTER TABLE \\\"\" + newTable.name + \"\\\" RENAME CONSTRAINT \\\"\" + unique.name + \"\\\" TO \\\"\" + newUniqueName + \"\\\"\");\n                            downQueries.push(\"ALTER TABLE \\\"\" + newTable.name + \"\\\" RENAME CONSTRAINT \\\"\" + newUniqueName + \"\\\" TO \\\"\" + unique.name + \"\\\"\");\n                            // replace constraint name\n                            unique.name = newUniqueName;\n                        });\n                        // rename index constraints\n                        newTable.indices.forEach(function (index) {\n                            // build new constraint name\n                            var newIndexName = _this.connection.namingStrategy.indexName(newTable, index.columnNames, index.where);\n                            // build queries\n                            upQueries.push(\"ALTER INDEX \\\"\" + index.name + \"\\\" RENAME TO \\\"\" + newIndexName + \"\\\"\");\n                            downQueries.push(\"ALTER INDEX \\\"\" + newIndexName + \"\\\" RENAME TO \\\"\" + index.name + \"\\\"\");\n                            // replace constraint name\n                            index.name = newIndexName;\n                        });\n                        // rename foreign key constraints\n                        newTable.foreignKeys.forEach(function (foreignKey) {\n                            // build new constraint name\n                            var newForeignKeyName = _this.connection.namingStrategy.foreignKeyName(newTable, foreignKey.columnNames);\n                            // build queries\n                            upQueries.push(\"ALTER TABLE \\\"\" + newTable.name + \"\\\" RENAME CONSTRAINT \\\"\" + foreignKey.name + \"\\\" TO \\\"\" + newForeignKeyName + \"\\\"\");\n                            downQueries.push(\"ALTER TABLE \\\"\" + newTable.name + \"\\\" RENAME CONSTRAINT \\\"\" + newForeignKeyName + \"\\\" TO \\\"\" + foreignKey.name + \"\\\"\");\n                            // replace constraint name\n                            foreignKey.name = newForeignKeyName;\n                        });\n                        return [4 /*yield*/, this.executeQueries(upQueries, downQueries)];\n                    case 4:\n                        _b.sent();\n                        // rename old table and replace it in cached tabled;\n                        oldTable.name = newTable.name;\n                        this.replaceCachedTable(oldTable, newTable);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new column from the column in the table.\n     */\n    OracleQueryRunner.prototype.addColumn = function (tableOrName, column) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, clonedTable, upQueries, downQueries, primaryColumns, pkName_1, columnNames_1, pkName, columnNames, columnIndex, uniqueConstraint;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        clonedTable = table.clone();\n                        upQueries = [];\n                        downQueries = [];\n                        upQueries.push(\"ALTER TABLE \\\"\" + table.name + \"\\\" ADD \" + this.buildCreateColumnSql(column));\n                        downQueries.push(\"ALTER TABLE \\\"\" + table.name + \"\\\" DROP COLUMN \\\"\" + column.name + \"\\\"\");\n                        // create or update primary key constraint\n                        if (column.isPrimary) {\n                            primaryColumns = clonedTable.primaryColumns;\n                            // if table already have primary key, me must drop it and recreate again\n                            if (primaryColumns.length > 0) {\n                                pkName_1 = this.connection.namingStrategy.primaryKeyName(clonedTable.name, primaryColumns.map(function (column) { return column.name; }));\n                                columnNames_1 = primaryColumns.map(function (column) { return \"\\\"\" + column.name + \"\\\"\"; }).join(\", \");\n                                upQueries.push(\"ALTER TABLE \\\"\" + table.name + \"\\\" DROP CONSTRAINT \\\"\" + pkName_1 + \"\\\"\");\n                                downQueries.push(\"ALTER TABLE \\\"\" + table.name + \"\\\" ADD CONSTRAINT \\\"\" + pkName_1 + \"\\\" PRIMARY KEY (\" + columnNames_1 + \")\");\n                            }\n                            primaryColumns.push(column);\n                            pkName = this.connection.namingStrategy.primaryKeyName(clonedTable.name, primaryColumns.map(function (column) { return column.name; }));\n                            columnNames = primaryColumns.map(function (column) { return \"\\\"\" + column.name + \"\\\"\"; }).join(\", \");\n                            upQueries.push(\"ALTER TABLE \\\"\" + table.name + \"\\\" ADD CONSTRAINT \\\"\" + pkName + \"\\\" PRIMARY KEY (\" + columnNames + \")\");\n                            downQueries.push(\"ALTER TABLE \\\"\" + table.name + \"\\\" DROP CONSTRAINT \\\"\" + pkName + \"\\\"\");\n                        }\n                        columnIndex = clonedTable.indices.find(function (index) { return index.columnNames.length === 1 && index.columnNames[0] === column.name; });\n                        if (columnIndex) {\n                            clonedTable.indices.splice(clonedTable.indices.indexOf(columnIndex), 1);\n                            upQueries.push(this.createIndexSql(table, columnIndex));\n                            downQueries.push(this.dropIndexSql(columnIndex));\n                        }\n                        // create unique constraint\n                        if (column.isUnique) {\n                            uniqueConstraint = new TableUnique_1.TableUnique({\n                                name: this.connection.namingStrategy.uniqueConstraintName(table.name, [column.name]),\n                                columnNames: [column.name]\n                            });\n                            clonedTable.uniques.push(uniqueConstraint);\n                            upQueries.push(\"ALTER TABLE \\\"\" + table.name + \"\\\" ADD CONSTRAINT \\\"\" + uniqueConstraint.name + \"\\\" UNIQUE (\\\"\" + column.name + \"\\\")\");\n                            downQueries.push(\"ALTER TABLE \\\"\" + table.name + \"\\\" DROP CONSTRAINT \\\"\" + uniqueConstraint.name + \"\\\"\");\n                        }\n                        return [4 /*yield*/, this.executeQueries(upQueries, downQueries)];\n                    case 4:\n                        _b.sent();\n                        clonedTable.addColumn(column);\n                        this.replaceCachedTable(table, clonedTable);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new columns from the column in the table.\n     */\n    OracleQueryRunner.prototype.addColumns = function (tableOrName, columns) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, index_1.PromiseUtils.runInSequence(columns, function (column) { return _this.addColumn(tableOrName, column); })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Renames column in the given table.\n     */\n    OracleQueryRunner.prototype.renameColumn = function (tableOrName, oldTableColumnOrName, newTableColumnOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, oldColumn, newColumn;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        oldColumn = oldTableColumnOrName instanceof TableColumn_1.TableColumn ? oldTableColumnOrName : table.columns.find(function (c) { return c.name === oldTableColumnOrName; });\n                        if (!oldColumn)\n                            throw new Error(\"Column \\\"\" + oldTableColumnOrName + \"\\\" was not found in the \\\"\" + table.name + \"\\\" table.\");\n                        newColumn = undefined;\n                        if (newTableColumnOrName instanceof TableColumn_1.TableColumn) {\n                            newColumn = newTableColumnOrName;\n                        }\n                        else {\n                            newColumn = oldColumn.clone();\n                            newColumn.name = newTableColumnOrName;\n                        }\n                        return [4 /*yield*/, this.changeColumn(table, oldColumn, newColumn)];\n                    case 4:\n                        _b.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Changes a column in the table.\n     */\n    OracleQueryRunner.prototype.changeColumn = function (tableOrName, oldTableColumnOrName, newColumn) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var table, _a, clonedTable, upQueries, downQueries, oldColumn, primaryColumns, columnNames, oldPkName, newPkName, oldTableColumn, defaultUp, defaultDown, nullableUp, nullableDown, primaryColumns, pkName, columnNames, column, pkName, columnNames, primaryColumn, column, pkName, columnNames, uniqueConstraint, uniqueConstraint;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        clonedTable = table.clone();\n                        upQueries = [];\n                        downQueries = [];\n                        oldColumn = oldTableColumnOrName instanceof TableColumn_1.TableColumn\n                            ? oldTableColumnOrName\n                            : table.columns.find(function (column) { return column.name === oldTableColumnOrName; });\n                        if (!oldColumn)\n                            throw new Error(\"Column \\\"\" + oldTableColumnOrName + \"\\\" was not found in the \\\"\" + table.name + \"\\\" table.\");\n                        if (!((newColumn.isGenerated !== oldColumn.isGenerated && newColumn.generationStrategy !== \"uuid\") || oldColumn.type !== newColumn.type || oldColumn.length !== newColumn.length)) return [3 /*break*/, 6];\n                        // Oracle does not support changing of IDENTITY column, so we must drop column and recreate it again.\n                        // Also, we recreate column if column type changed\n                        return [4 /*yield*/, this.dropColumn(table, oldColumn)];\n                    case 4:\n                        // Oracle does not support changing of IDENTITY column, so we must drop column and recreate it again.\n                        // Also, we recreate column if column type changed\n                        _b.sent();\n                        return [4 /*yield*/, this.addColumn(table, newColumn)];\n                    case 5:\n                        _b.sent();\n                        // update cloned table\n                        clonedTable = table.clone();\n                        return [3 /*break*/, 8];\n                    case 6:\n                        if (newColumn.name !== oldColumn.name) {\n                            // rename column\n                            upQueries.push(\"ALTER TABLE \\\"\" + table.name + \"\\\" RENAME COLUMN \\\"\" + oldColumn.name + \"\\\" TO \\\"\" + newColumn.name + \"\\\"\");\n                            downQueries.push(\"ALTER TABLE \\\"\" + table.name + \"\\\" RENAME COLUMN \\\"\" + newColumn.name + \"\\\" TO \\\"\" + oldColumn.name + \"\\\"\");\n                            // rename column primary key constraint\n                            if (oldColumn.isPrimary === true) {\n                                primaryColumns = clonedTable.primaryColumns;\n                                columnNames = primaryColumns.map(function (column) { return column.name; });\n                                oldPkName = this.connection.namingStrategy.primaryKeyName(clonedTable, columnNames);\n                                // replace old column name with new column name\n                                columnNames.splice(columnNames.indexOf(oldColumn.name), 1);\n                                columnNames.push(newColumn.name);\n                                newPkName = this.connection.namingStrategy.primaryKeyName(clonedTable, columnNames);\n                                upQueries.push(\"ALTER TABLE \\\"\" + table.name + \"\\\" RENAME CONSTRAINT \\\"\" + oldPkName + \"\\\" TO \\\"\" + newPkName + \"\\\"\");\n                                downQueries.push(\"ALTER TABLE \\\"\" + table.name + \"\\\" RENAME CONSTRAINT \\\"\" + newPkName + \"\\\" TO \\\"\" + oldPkName + \"\\\"\");\n                            }\n                            // rename unique constraints\n                            clonedTable.findColumnUniques(oldColumn).forEach(function (unique) {\n                                // build new constraint name\n                                unique.columnNames.splice(unique.columnNames.indexOf(oldColumn.name), 1);\n                                unique.columnNames.push(newColumn.name);\n                                var newUniqueName = _this.connection.namingStrategy.uniqueConstraintName(clonedTable, unique.columnNames);\n                                // build queries\n                                upQueries.push(\"ALTER TABLE \\\"\" + table.name + \"\\\" RENAME CONSTRAINT \\\"\" + unique.name + \"\\\" TO \\\"\" + newUniqueName + \"\\\"\");\n                                downQueries.push(\"ALTER TABLE \\\"\" + table.name + \"\\\" RENAME CONSTRAINT \\\"\" + newUniqueName + \"\\\" TO \\\"\" + unique.name + \"\\\"\");\n                                // replace constraint name\n                                unique.name = newUniqueName;\n                            });\n                            // rename index constraints\n                            clonedTable.findColumnIndices(oldColumn).forEach(function (index) {\n                                // build new constraint name\n                                index.columnNames.splice(index.columnNames.indexOf(oldColumn.name), 1);\n                                index.columnNames.push(newColumn.name);\n                                var newIndexName = _this.connection.namingStrategy.indexName(clonedTable, index.columnNames, index.where);\n                                // build queries\n                                upQueries.push(\"ALTER INDEX \\\"\" + index.name + \"\\\" RENAME TO \\\"\" + newIndexName + \"\\\"\");\n                                downQueries.push(\"ALTER INDEX \\\"\" + newIndexName + \"\\\" RENAME TO \\\"\" + index.name + \"\\\"\");\n                                // replace constraint name\n                                index.name = newIndexName;\n                            });\n                            // rename foreign key constraints\n                            clonedTable.findColumnForeignKeys(oldColumn).forEach(function (foreignKey) {\n                                // build new constraint name\n                                foreignKey.columnNames.splice(foreignKey.columnNames.indexOf(oldColumn.name), 1);\n                                foreignKey.columnNames.push(newColumn.name);\n                                var newForeignKeyName = _this.connection.namingStrategy.foreignKeyName(clonedTable, foreignKey.columnNames);\n                                // build queries\n                                upQueries.push(\"ALTER TABLE \\\"\" + table.name + \"\\\" RENAME CONSTRAINT \\\"\" + foreignKey.name + \"\\\" TO \\\"\" + newForeignKeyName + \"\\\"\");\n                                downQueries.push(\"ALTER TABLE \\\"\" + table.name + \"\\\" RENAME CONSTRAINT \\\"\" + newForeignKeyName + \"\\\" TO \\\"\" + foreignKey.name + \"\\\"\");\n                                // replace constraint name\n                                foreignKey.name = newForeignKeyName;\n                            });\n                            oldTableColumn = clonedTable.columns.find(function (column) { return column.name === oldColumn.name; });\n                            clonedTable.columns[clonedTable.columns.indexOf(oldTableColumn)].name = newColumn.name;\n                            oldColumn.name = newColumn.name;\n                        }\n                        if (this.isColumnChanged(oldColumn, newColumn, true)) {\n                            defaultUp = \"\";\n                            defaultDown = \"\";\n                            nullableUp = \"\";\n                            nullableDown = \"\";\n                            // changing column default\n                            if (newColumn.default !== null && newColumn.default !== undefined) {\n                                defaultUp = \"DEFAULT \" + newColumn.default;\n                                if (oldColumn.default !== null && oldColumn.default !== undefined) {\n                                    defaultDown = \"DEFAULT \" + oldColumn.default;\n                                }\n                                else {\n                                    defaultDown = \"DEFAULT NULL\";\n                                }\n                            }\n                            else if (oldColumn.default !== null && oldColumn.default !== undefined) {\n                                defaultUp = \"DEFAULT NULL\";\n                                defaultDown = \"DEFAULT \" + oldColumn.default;\n                            }\n                            // changing column isNullable property\n                            if (newColumn.isNullable !== oldColumn.isNullable) {\n                                if (newColumn.isNullable === true) {\n                                    nullableUp = \"NULL\";\n                                    nullableDown = \"NOT NULL\";\n                                }\n                                else {\n                                    nullableUp = \"NOT NULL\";\n                                    nullableDown = \"NULL\";\n                                }\n                            }\n                            upQueries.push(\"ALTER TABLE \\\"\" + table.name + \"\\\" MODIFY \\\"\" + oldColumn.name + \"\\\" \" + this.connection.driver.createFullType(newColumn) + \" \" + defaultUp + \" \" + nullableUp);\n                            downQueries.push(\"ALTER TABLE \\\"\" + table.name + \"\\\" MODIFY \\\"\" + oldColumn.name + \"\\\" \" + this.connection.driver.createFullType(oldColumn) + \" \" + defaultDown + \" \" + nullableDown);\n                        }\n                        if (newColumn.isPrimary !== oldColumn.isPrimary) {\n                            primaryColumns = clonedTable.primaryColumns;\n                            // if primary column state changed, we must always drop existed constraint.\n                            if (primaryColumns.length > 0) {\n                                pkName = this.connection.namingStrategy.primaryKeyName(clonedTable.name, primaryColumns.map(function (column) { return column.name; }));\n                                columnNames = primaryColumns.map(function (column) { return \"\\\"\" + column.name + \"\\\"\"; }).join(\", \");\n                                upQueries.push(\"ALTER TABLE \\\"\" + table.name + \"\\\" DROP CONSTRAINT \\\"\" + pkName + \"\\\"\");\n                                downQueries.push(\"ALTER TABLE \\\"\" + table.name + \"\\\" ADD CONSTRAINT \\\"\" + pkName + \"\\\" PRIMARY KEY (\" + columnNames + \")\");\n                            }\n                            if (newColumn.isPrimary === true) {\n                                primaryColumns.push(newColumn);\n                                column = clonedTable.columns.find(function (column) { return column.name === newColumn.name; });\n                                column.isPrimary = true;\n                                pkName = this.connection.namingStrategy.primaryKeyName(clonedTable.name, primaryColumns.map(function (column) { return column.name; }));\n                                columnNames = primaryColumns.map(function (column) { return \"\\\"\" + column.name + \"\\\"\"; }).join(\", \");\n                                upQueries.push(\"ALTER TABLE \\\"\" + table.name + \"\\\" ADD CONSTRAINT \\\"\" + pkName + \"\\\" PRIMARY KEY (\" + columnNames + \")\");\n                                downQueries.push(\"ALTER TABLE \\\"\" + table.name + \"\\\" DROP CONSTRAINT \\\"\" + pkName + \"\\\"\");\n                            }\n                            else {\n                                primaryColumn = primaryColumns.find(function (c) { return c.name === newColumn.name; });\n                                primaryColumns.splice(primaryColumns.indexOf(primaryColumn), 1);\n                                column = clonedTable.columns.find(function (column) { return column.name === newColumn.name; });\n                                column.isPrimary = false;\n                                // if we have another primary keys, we must recreate constraint.\n                                if (primaryColumns.length > 0) {\n                                    pkName = this.connection.namingStrategy.primaryKeyName(clonedTable.name, primaryColumns.map(function (column) { return column.name; }));\n                                    columnNames = primaryColumns.map(function (column) { return \"\\\"\" + column.name + \"\\\"\"; }).join(\", \");\n                                    upQueries.push(\"ALTER TABLE \\\"\" + table.name + \"\\\" ADD CONSTRAINT \\\"\" + pkName + \"\\\" PRIMARY KEY (\" + columnNames + \")\");\n                                    downQueries.push(\"ALTER TABLE \\\"\" + table.name + \"\\\" DROP CONSTRAINT \\\"\" + pkName + \"\\\"\");\n                                }\n                            }\n                        }\n                        if (newColumn.isUnique !== oldColumn.isUnique) {\n                            if (newColumn.isUnique === true) {\n                                uniqueConstraint = new TableUnique_1.TableUnique({\n                                    name: this.connection.namingStrategy.uniqueConstraintName(table.name, [newColumn.name]),\n                                    columnNames: [newColumn.name]\n                                });\n                                clonedTable.uniques.push(uniqueConstraint);\n                                upQueries.push(\"ALTER TABLE \\\"\" + table.name + \"\\\" ADD CONSTRAINT \\\"\" + uniqueConstraint.name + \"\\\" UNIQUE (\\\"\" + newColumn.name + \"\\\")\");\n                                downQueries.push(\"ALTER TABLE \\\"\" + table.name + \"\\\" DROP CONSTRAINT \\\"\" + uniqueConstraint.name + \"\\\"\");\n                            }\n                            else {\n                                uniqueConstraint = clonedTable.uniques.find(function (unique) {\n                                    return unique.columnNames.length === 1 && !!unique.columnNames.find(function (columnName) { return columnName === newColumn.name; });\n                                });\n                                clonedTable.uniques.splice(clonedTable.uniques.indexOf(uniqueConstraint), 1);\n                                upQueries.push(\"ALTER TABLE \\\"\" + table.name + \"\\\" DROP CONSTRAINT \\\"\" + uniqueConstraint.name + \"\\\"\");\n                                downQueries.push(\"ALTER TABLE \\\"\" + table.name + \"\\\" ADD CONSTRAINT \\\"\" + uniqueConstraint.name + \"\\\" UNIQUE (\\\"\" + newColumn.name + \"\\\")\");\n                            }\n                        }\n                        return [4 /*yield*/, this.executeQueries(upQueries, downQueries)];\n                    case 7:\n                        _b.sent();\n                        this.replaceCachedTable(table, clonedTable);\n                        _b.label = 8;\n                    case 8: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Changes a column in the table.\n     */\n    OracleQueryRunner.prototype.changeColumns = function (tableOrName, changedColumns) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, index_1.PromiseUtils.runInSequence(changedColumns, function (changedColumn) { return _this.changeColumn(tableOrName, changedColumn.oldColumn, changedColumn.newColumn); })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops column in the table.\n     */\n    OracleQueryRunner.prototype.dropColumn = function (tableOrName, columnOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, column, clonedTable, upQueries, downQueries, pkName, columnNames, tableColumn, pkName_2, columnNames_2, columnIndex, columnCheck, columnUnique;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        column = columnOrName instanceof TableColumn_1.TableColumn ? columnOrName : table.findColumnByName(columnOrName);\n                        if (!column)\n                            throw new Error(\"Column \\\"\" + columnOrName + \"\\\" was not found in table \\\"\" + table.name + \"\\\"\");\n                        clonedTable = table.clone();\n                        upQueries = [];\n                        downQueries = [];\n                        // drop primary key constraint\n                        if (column.isPrimary) {\n                            pkName = this.connection.namingStrategy.primaryKeyName(clonedTable.name, clonedTable.primaryColumns.map(function (column) { return column.name; }));\n                            columnNames = clonedTable.primaryColumns.map(function (primaryColumn) { return \"\\\"\" + primaryColumn.name + \"\\\"\"; }).join(\", \");\n                            upQueries.push(\"ALTER TABLE \\\"\" + clonedTable.name + \"\\\" DROP CONSTRAINT \\\"\" + pkName + \"\\\"\");\n                            downQueries.push(\"ALTER TABLE \\\"\" + clonedTable.name + \"\\\" ADD CONSTRAINT \\\"\" + pkName + \"\\\" PRIMARY KEY (\" + columnNames + \")\");\n                            tableColumn = clonedTable.findColumnByName(column.name);\n                            tableColumn.isPrimary = false;\n                            // if primary key have multiple columns, we must recreate it without dropped column\n                            if (clonedTable.primaryColumns.length > 0) {\n                                pkName_2 = this.connection.namingStrategy.primaryKeyName(clonedTable.name, clonedTable.primaryColumns.map(function (column) { return column.name; }));\n                                columnNames_2 = clonedTable.primaryColumns.map(function (primaryColumn) { return \"\\\"\" + primaryColumn.name + \"\\\"\"; }).join(\", \");\n                                upQueries.push(\"ALTER TABLE \\\"\" + clonedTable.name + \"\\\" ADD CONSTRAINT \\\"\" + pkName_2 + \"\\\" PRIMARY KEY (\" + columnNames_2 + \")\");\n                                downQueries.push(\"ALTER TABLE \\\"\" + clonedTable.name + \"\\\" DROP CONSTRAINT \\\"\" + pkName_2 + \"\\\"\");\n                            }\n                        }\n                        columnIndex = clonedTable.indices.find(function (index) { return index.columnNames.length === 1 && index.columnNames[0] === column.name; });\n                        if (columnIndex) {\n                            upQueries.push(this.dropIndexSql(columnIndex));\n                            downQueries.push(this.createIndexSql(table, columnIndex));\n                        }\n                        columnCheck = clonedTable.checks.find(function (check) { return !!check.columnNames && check.columnNames.length === 1 && check.columnNames[0] === column.name; });\n                        if (columnCheck) {\n                            clonedTable.checks.splice(clonedTable.checks.indexOf(columnCheck), 1);\n                            upQueries.push(this.dropCheckConstraintSql(table, columnCheck));\n                            downQueries.push(this.createCheckConstraintSql(table, columnCheck));\n                        }\n                        columnUnique = clonedTable.uniques.find(function (unique) { return unique.columnNames.length === 1 && unique.columnNames[0] === column.name; });\n                        if (columnUnique) {\n                            clonedTable.uniques.splice(clonedTable.uniques.indexOf(columnUnique), 1);\n                            upQueries.push(this.dropUniqueConstraintSql(table, columnUnique));\n                            downQueries.push(this.createUniqueConstraintSql(table, columnUnique));\n                        }\n                        upQueries.push(\"ALTER TABLE \\\"\" + table.name + \"\\\" DROP COLUMN \\\"\" + column.name + \"\\\"\");\n                        downQueries.push(\"ALTER TABLE \\\"\" + table.name + \"\\\" ADD \" + this.buildCreateColumnSql(column));\n                        return [4 /*yield*/, this.executeQueries(upQueries, downQueries)];\n                    case 4:\n                        _b.sent();\n                        clonedTable.removeColumn(column);\n                        this.replaceCachedTable(table, clonedTable);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops the columns in the table.\n     */\n    OracleQueryRunner.prototype.dropColumns = function (tableOrName, columns) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, index_1.PromiseUtils.runInSequence(columns, function (column) { return _this.dropColumn(tableOrName, column); })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new primary key.\n     */\n    OracleQueryRunner.prototype.createPrimaryKey = function (tableOrName, columnNames) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, clonedTable, up, down;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        clonedTable = table.clone();\n                        up = this.createPrimaryKeySql(table, columnNames);\n                        // mark columns as primary, because dropPrimaryKeySql build constraint name from table primary column names.\n                        clonedTable.columns.forEach(function (column) {\n                            if (columnNames.find(function (columnName) { return columnName === column.name; }))\n                                column.isPrimary = true;\n                        });\n                        down = this.dropPrimaryKeySql(clonedTable);\n                        return [4 /*yield*/, this.executeQueries(up, down)];\n                    case 4:\n                        _b.sent();\n                        this.replaceCachedTable(table, clonedTable);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Updates composite primary keys.\n     */\n    OracleQueryRunner.prototype.updatePrimaryKeys = function (tableOrName, columns) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, columnNames, clonedTable, upQueries, downQueries, primaryColumns, pkName_3, columnNamesString_1, pkName, columnNamesString;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        columnNames = columns.map(function (column) { return column.name; });\n                        clonedTable = table.clone();\n                        upQueries = [];\n                        downQueries = [];\n                        primaryColumns = clonedTable.primaryColumns;\n                        if (primaryColumns.length > 0) {\n                            pkName_3 = this.connection.namingStrategy.primaryKeyName(clonedTable.name, primaryColumns.map(function (column) { return column.name; }));\n                            columnNamesString_1 = primaryColumns.map(function (column) { return \"\\\"\" + column.name + \"\\\"\"; }).join(\", \");\n                            upQueries.push(\"ALTER TABLE \\\"\" + table.name + \"\\\" DROP CONSTRAINT \\\"\" + pkName_3 + \"\\\"\");\n                            downQueries.push(\"ALTER TABLE \\\"\" + table.name + \"\\\" ADD CONSTRAINT \\\"\" + pkName_3 + \"\\\" PRIMARY KEY (\" + columnNamesString_1 + \")\");\n                        }\n                        // update columns in table.\n                        clonedTable.columns\n                            .filter(function (column) { return columnNames.indexOf(column.name) !== -1; })\n                            .forEach(function (column) { return column.isPrimary = true; });\n                        pkName = this.connection.namingStrategy.primaryKeyName(clonedTable.name, columnNames);\n                        columnNamesString = columnNames.map(function (columnName) { return \"\\\"\" + columnName + \"\\\"\"; }).join(\", \");\n                        upQueries.push(\"ALTER TABLE \\\"\" + table.name + \"\\\" ADD CONSTRAINT \\\"\" + pkName + \"\\\" PRIMARY KEY (\" + columnNamesString + \")\");\n                        downQueries.push(\"ALTER TABLE \\\"\" + table.name + \"\\\" DROP CONSTRAINT \\\"\" + pkName + \"\\\"\");\n                        return [4 /*yield*/, this.executeQueries(upQueries, downQueries)];\n                    case 4:\n                        _b.sent();\n                        this.replaceCachedTable(table, clonedTable);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops a primary key.\n     */\n    OracleQueryRunner.prototype.dropPrimaryKey = function (tableOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, up, down;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        up = this.dropPrimaryKeySql(table);\n                        down = this.createPrimaryKeySql(table, table.primaryColumns.map(function (column) { return column.name; }));\n                        return [4 /*yield*/, this.executeQueries(up, down)];\n                    case 4:\n                        _b.sent();\n                        table.primaryColumns.forEach(function (column) {\n                            column.isPrimary = false;\n                        });\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new unique constraint.\n     */\n    OracleQueryRunner.prototype.createUniqueConstraint = function (tableOrName, uniqueConstraint) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, up, down;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        // new unique constraint may be passed without name. In this case we generate unique name manually.\n                        if (!uniqueConstraint.name)\n                            uniqueConstraint.name = this.connection.namingStrategy.uniqueConstraintName(table.name, uniqueConstraint.columnNames);\n                        up = this.createUniqueConstraintSql(table, uniqueConstraint);\n                        down = this.dropUniqueConstraintSql(table, uniqueConstraint);\n                        return [4 /*yield*/, this.executeQueries(up, down)];\n                    case 4:\n                        _b.sent();\n                        table.addUniqueConstraint(uniqueConstraint);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new unique constraints.\n     */\n    OracleQueryRunner.prototype.createUniqueConstraints = function (tableOrName, uniqueConstraints) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var promises;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        promises = uniqueConstraints.map(function (uniqueConstraint) { return _this.createUniqueConstraint(tableOrName, uniqueConstraint); });\n                        return [4 /*yield*/, Promise.all(promises)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops an unique constraint.\n     */\n    OracleQueryRunner.prototype.dropUniqueConstraint = function (tableOrName, uniqueOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, uniqueConstraint, up, down;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        uniqueConstraint = uniqueOrName instanceof TableUnique_1.TableUnique ? uniqueOrName : table.uniques.find(function (u) { return u.name === uniqueOrName; });\n                        if (!uniqueConstraint)\n                            throw new Error(\"Supplied unique constraint was not found in table \" + table.name);\n                        up = this.dropUniqueConstraintSql(table, uniqueConstraint);\n                        down = this.createUniqueConstraintSql(table, uniqueConstraint);\n                        return [4 /*yield*/, this.executeQueries(up, down)];\n                    case 4:\n                        _b.sent();\n                        table.removeUniqueConstraint(uniqueConstraint);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates an unique constraints.\n     */\n    OracleQueryRunner.prototype.dropUniqueConstraints = function (tableOrName, uniqueConstraints) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var promises;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        promises = uniqueConstraints.map(function (uniqueConstraint) { return _this.dropUniqueConstraint(tableOrName, uniqueConstraint); });\n                        return [4 /*yield*/, Promise.all(promises)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates new check constraint.\n     */\n    OracleQueryRunner.prototype.createCheckConstraint = function (tableOrName, checkConstraint) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, up, down;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        // new unique constraint may be passed without name. In this case we generate unique name manually.\n                        if (!checkConstraint.name)\n                            checkConstraint.name = this.connection.namingStrategy.checkConstraintName(table.name, checkConstraint.expression);\n                        up = this.createCheckConstraintSql(table, checkConstraint);\n                        down = this.dropCheckConstraintSql(table, checkConstraint);\n                        return [4 /*yield*/, this.executeQueries(up, down)];\n                    case 4:\n                        _b.sent();\n                        table.addCheckConstraint(checkConstraint);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates new check constraints.\n     */\n    OracleQueryRunner.prototype.createCheckConstraints = function (tableOrName, checkConstraints) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var promises;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        promises = checkConstraints.map(function (checkConstraint) { return _this.createCheckConstraint(tableOrName, checkConstraint); });\n                        return [4 /*yield*/, Promise.all(promises)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops check constraint.\n     */\n    OracleQueryRunner.prototype.dropCheckConstraint = function (tableOrName, checkOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, checkConstraint, up, down;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        checkConstraint = checkOrName instanceof TableCheck_1.TableCheck ? checkOrName : table.checks.find(function (c) { return c.name === checkOrName; });\n                        if (!checkConstraint)\n                            throw new Error(\"Supplied check constraint was not found in table \" + table.name);\n                        up = this.dropCheckConstraintSql(table, checkConstraint);\n                        down = this.createCheckConstraintSql(table, checkConstraint);\n                        return [4 /*yield*/, this.executeQueries(up, down)];\n                    case 4:\n                        _b.sent();\n                        table.removeCheckConstraint(checkConstraint);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops check constraints.\n     */\n    OracleQueryRunner.prototype.dropCheckConstraints = function (tableOrName, checkConstraints) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var promises;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        promises = checkConstraints.map(function (checkConstraint) { return _this.dropCheckConstraint(tableOrName, checkConstraint); });\n                        return [4 /*yield*/, Promise.all(promises)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new foreign key.\n     */\n    OracleQueryRunner.prototype.createForeignKey = function (tableOrName, foreignKey) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, up, down;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        // new FK may be passed without name. In this case we generate FK name manually.\n                        if (!foreignKey.name)\n                            foreignKey.name = this.connection.namingStrategy.foreignKeyName(table.name, foreignKey.columnNames);\n                        up = this.createForeignKeySql(table, foreignKey);\n                        down = this.dropForeignKeySql(table, foreignKey);\n                        return [4 /*yield*/, this.executeQueries(up, down)];\n                    case 4:\n                        _b.sent();\n                        table.addForeignKey(foreignKey);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new foreign keys.\n     */\n    OracleQueryRunner.prototype.createForeignKeys = function (tableOrName, foreignKeys) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var promises;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        promises = foreignKeys.map(function (foreignKey) { return _this.createForeignKey(tableOrName, foreignKey); });\n                        return [4 /*yield*/, Promise.all(promises)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops a foreign key from the table.\n     */\n    OracleQueryRunner.prototype.dropForeignKey = function (tableOrName, foreignKeyOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, foreignKey, up, down;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        foreignKey = foreignKeyOrName instanceof TableForeignKey_1.TableForeignKey ? foreignKeyOrName : table.foreignKeys.find(function (fk) { return fk.name === foreignKeyOrName; });\n                        if (!foreignKey)\n                            throw new Error(\"Supplied foreign key was not found in table \" + table.name);\n                        up = this.dropForeignKeySql(table, foreignKey);\n                        down = this.createForeignKeySql(table, foreignKey);\n                        return [4 /*yield*/, this.executeQueries(up, down)];\n                    case 4:\n                        _b.sent();\n                        table.removeForeignKey(foreignKey);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops a foreign keys from the table.\n     */\n    OracleQueryRunner.prototype.dropForeignKeys = function (tableOrName, foreignKeys) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var promises;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        promises = foreignKeys.map(function (foreignKey) { return _this.dropForeignKey(tableOrName, foreignKey); });\n                        return [4 /*yield*/, Promise.all(promises)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new index.\n     */\n    OracleQueryRunner.prototype.createIndex = function (tableOrName, index) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, up, down;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        // new index may be passed without name. In this case we generate index name manually.\n                        if (!index.name)\n                            index.name = this.connection.namingStrategy.indexName(table.name, index.columnNames, index.where);\n                        up = this.createIndexSql(table, index);\n                        down = this.dropIndexSql(index);\n                        return [4 /*yield*/, this.executeQueries(up, down)];\n                    case 4:\n                        _b.sent();\n                        table.addIndex(index);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new indices\n     */\n    OracleQueryRunner.prototype.createIndices = function (tableOrName, indices) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var promises;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        promises = indices.map(function (index) { return _this.createIndex(tableOrName, index); });\n                        return [4 /*yield*/, Promise.all(promises)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops an index from the table.\n     */\n    OracleQueryRunner.prototype.dropIndex = function (tableOrName, indexOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, index, up, down;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        index = indexOrName instanceof TableIndex_1.TableIndex ? indexOrName : table.indices.find(function (i) { return i.name === indexOrName; });\n                        if (!index)\n                            throw new Error(\"Supplied index was not found in table \" + table.name);\n                        up = this.dropIndexSql(index);\n                        down = this.createIndexSql(table, index);\n                        return [4 /*yield*/, this.executeQueries(up, down)];\n                    case 4:\n                        _b.sent();\n                        table.removeIndex(index);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops an indices from the table.\n     */\n    OracleQueryRunner.prototype.dropIndices = function (tableOrName, indices) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var promises;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        promises = indices.map(function (index) { return _this.dropIndex(tableOrName, index); });\n                        return [4 /*yield*/, Promise.all(promises)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Clears all table contents.\n     * Note: this operation uses SQL's TRUNCATE query which cannot be reverted in transactions.\n     */\n    OracleQueryRunner.prototype.clearTable = function (tableName) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.query(\"TRUNCATE TABLE \\\"\" + tableName + \"\\\"\")];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Removes all tables from the currently connected database.\n     */\n    OracleQueryRunner.prototype.clearDatabase = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var dropTablesQuery, dropQueries, error_1, rollbackError_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.startTransaction()];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2:\n                        _a.trys.push([2, 6, , 11]);\n                        dropTablesQuery = \"SELECT 'DROP TABLE \\\"' || TABLE_NAME || '\\\" CASCADE CONSTRAINTS' AS \\\"query\\\" FROM \\\"USER_TABLES\\\"\";\n                        return [4 /*yield*/, this.query(dropTablesQuery)];\n                    case 3:\n                        dropQueries = _a.sent();\n                        return [4 /*yield*/, Promise.all(dropQueries.map(function (query) { return _this.query(query[\"query\"]); }))];\n                    case 4:\n                        _a.sent();\n                        return [4 /*yield*/, this.commitTransaction()];\n                    case 5:\n                        _a.sent();\n                        return [3 /*break*/, 11];\n                    case 6:\n                        error_1 = _a.sent();\n                        _a.label = 7;\n                    case 7:\n                        _a.trys.push([7, 9, , 10]);\n                        return [4 /*yield*/, this.rollbackTransaction()];\n                    case 8:\n                        _a.sent();\n                        return [3 /*break*/, 10];\n                    case 9:\n                        rollbackError_1 = _a.sent();\n                        return [3 /*break*/, 10];\n                    case 10: throw error_1;\n                    case 11: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Loads all tables (with given names) from the database and creates a Table from them.\n     */\n    OracleQueryRunner.prototype.loadTables = function (tableNames) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var tableNamesString, tablesSql, columnsSql, indicesSql, foreignKeysSql, constraintsSql, _a, dbTables, dbColumns, dbIndices, dbForeignKeys, dbConstraints;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        // if no tables given then no need to proceed\n                        if (!tableNames || !tableNames.length)\n                            return [2 /*return*/, []];\n                        tableNamesString = tableNames.map(function (name) { return \"'\" + name + \"'\"; }).join(\", \");\n                        tablesSql = \"SELECT * FROM \\\"USER_TABLES\\\" WHERE \\\"TABLE_NAME\\\" IN (\" + tableNamesString + \")\";\n                        columnsSql = \"SELECT * FROM \\\"USER_TAB_COLS\\\" WHERE \\\"TABLE_NAME\\\" IN (\" + tableNamesString + \")\";\n                        indicesSql = \"SELECT \\\"IND\\\".\\\"INDEX_NAME\\\", \\\"IND\\\".\\\"TABLE_NAME\\\", \\\"IND\\\".\\\"UNIQUENESS\\\", \" +\n                            \"LISTAGG (\\\"COL\\\".\\\"COLUMN_NAME\\\", ',') WITHIN GROUP (ORDER BY \\\"COL\\\".\\\"COLUMN_NAME\\\") AS \\\"COLUMN_NAMES\\\" \" +\n                            \"FROM \\\"USER_INDEXES\\\" \\\"IND\\\" \" +\n                            \"INNER JOIN \\\"USER_IND_COLUMNS\\\" \\\"COL\\\" ON \\\"COL\\\".\\\"INDEX_NAME\\\" = \\\"IND\\\".\\\"INDEX_NAME\\\" \" +\n                            \"LEFT JOIN \\\"USER_CONSTRAINTS\\\" \\\"CON\\\" ON \\\"CON\\\".\\\"CONSTRAINT_NAME\\\" = \\\"IND\\\".\\\"INDEX_NAME\\\" \" +\n                            (\"WHERE \\\"IND\\\".\\\"TABLE_NAME\\\" IN (\" + tableNamesString + \") AND \\\"CON\\\".\\\"CONSTRAINT_NAME\\\" IS NULL \") +\n                            \"GROUP BY \\\"IND\\\".\\\"INDEX_NAME\\\", \\\"IND\\\".\\\"TABLE_NAME\\\", \\\"IND\\\".\\\"UNIQUENESS\\\"\";\n                        foreignKeysSql = \"SELECT \\\"C\\\".\\\"CONSTRAINT_NAME\\\", \\\"C\\\".\\\"TABLE_NAME\\\", \\\"COL\\\".\\\"COLUMN_NAME\\\", \\\"REF_COL\\\".\\\"TABLE_NAME\\\" AS \\\"REFERENCED_TABLE_NAME\\\", \" +\n                            \"\\\"REF_COL\\\".\\\"COLUMN_NAME\\\" AS \\\"REFERENCED_COLUMN_NAME\\\", \\\"C\\\".\\\"DELETE_RULE\\\" AS \\\"ON_DELETE\\\" \" +\n                            \"FROM \\\"USER_CONSTRAINTS\\\" \\\"C\\\" \" +\n                            \"INNER JOIN \\\"USER_CONS_COLUMNS\\\" \\\"COL\\\" ON \\\"COL\\\".\\\"OWNER\\\" = \\\"C\\\".\\\"OWNER\\\" AND \\\"COL\\\".\\\"CONSTRAINT_NAME\\\" = \\\"C\\\".\\\"CONSTRAINT_NAME\\\" \" +\n                            \"INNER JOIN \\\"USER_CONS_COLUMNS\\\" \\\"REF_COL\\\" ON \\\"REF_COL\\\".\\\"OWNER\\\" = \\\"C\\\".\\\"R_OWNER\\\" AND \\\"REF_COL\\\".\\\"CONSTRAINT_NAME\\\" = \\\"C\\\".\\\"R_CONSTRAINT_NAME\\\" AND \\\"REF_COL\\\".\\\"POSITION\\\" = \\\"COL\\\".\\\"POSITION\\\" \" +\n                            (\"WHERE \\\"C\\\".\\\"TABLE_NAME\\\" IN (\" + tableNamesString + \") AND \\\"C\\\".\\\"CONSTRAINT_TYPE\\\" = 'R'\");\n                        constraintsSql = \"SELECT \\\"C\\\".\\\"CONSTRAINT_NAME\\\", \\\"C\\\".\\\"CONSTRAINT_TYPE\\\", \\\"C\\\".\\\"TABLE_NAME\\\", \\\"COL\\\".\\\"COLUMN_NAME\\\", \\\"C\\\".\\\"SEARCH_CONDITION\\\" \" +\n                            \"FROM \\\"USER_CONSTRAINTS\\\" \\\"C\\\" \" +\n                            \"INNER JOIN \\\"USER_CONS_COLUMNS\\\" \\\"COL\\\" ON \\\"COL\\\".\\\"OWNER\\\" = \\\"C\\\".\\\"OWNER\\\" AND \\\"COL\\\".\\\"CONSTRAINT_NAME\\\" = \\\"C\\\".\\\"CONSTRAINT_NAME\\\" \" +\n                            (\"WHERE \\\"C\\\".\\\"TABLE_NAME\\\" IN (\" + tableNamesString + \") AND \\\"C\\\".\\\"CONSTRAINT_TYPE\\\" IN ('C', 'U', 'P') AND \\\"C\\\".\\\"GENERATED\\\" = 'USER NAME'\");\n                        return [4 /*yield*/, Promise.all([\n                                this.query(tablesSql),\n                                this.query(columnsSql),\n                                this.query(indicesSql),\n                                this.query(foreignKeysSql),\n                                this.query(constraintsSql),\n                            ])];\n                    case 1:\n                        _a = __read.apply(void 0, [_b.sent(), 5]), dbTables = _a[0], dbColumns = _a[1], dbIndices = _a[2], dbForeignKeys = _a[3], dbConstraints = _a[4];\n                        // if tables were not found in the db, no need to proceed\n                        if (!dbTables.length)\n                            return [2 /*return*/, []];\n                        // create tables for loaded tables\n                        return [2 /*return*/, dbTables.map(function (dbTable) {\n                                var table = new Table_1.Table();\n                                table.name = dbTable[\"TABLE_NAME\"];\n                                // create columns from the loaded columns\n                                table.columns = dbColumns\n                                    .filter(function (dbColumn) { return dbColumn[\"TABLE_NAME\"] === table.name; })\n                                    .map(function (dbColumn) {\n                                    var columnConstraints = dbConstraints.filter(function (dbConstraint) { return dbConstraint[\"TABLE_NAME\"] === table.name && dbConstraint[\"COLUMN_NAME\"] === dbColumn[\"COLUMN_NAME\"]; });\n                                    var uniqueConstraint = columnConstraints.find(function (constraint) { return constraint[\"CONSTRAINT_TYPE\"] === \"U\"; });\n                                    var isConstraintComposite = uniqueConstraint\n                                        ? !!dbConstraints.find(function (dbConstraint) { return dbConstraint[\"CONSTRAINT_TYPE\"] === \"U\"\n                                            && dbConstraint[\"CONSTRAINT_NAME\"] === uniqueConstraint[\"CONSTRAINT_NAME\"]\n                                            && dbConstraint[\"COLUMN_NAME\"] !== dbColumn[\"COLUMN_NAME\"]; })\n                                        : false;\n                                    var isUnique = !!uniqueConstraint && !isConstraintComposite;\n                                    var isPrimary = !!columnConstraints.find(function (constraint) { return constraint[\"CONSTRAINT_TYPE\"] === \"P\"; });\n                                    var tableColumn = new TableColumn_1.TableColumn();\n                                    tableColumn.name = dbColumn[\"COLUMN_NAME\"];\n                                    tableColumn.type = dbColumn[\"DATA_TYPE\"].toLowerCase();\n                                    if (tableColumn.type.indexOf(\"(\") !== -1)\n                                        tableColumn.type = tableColumn.type.replace(/\\([0-9]*\\)/, \"\");\n                                    // check only columns that have length property\n                                    if (_this.driver.withLengthColumnTypes.indexOf(tableColumn.type) !== -1) {\n                                        var length = tableColumn.type === \"raw\" ? dbColumn[\"DATA_LENGTH\"] : dbColumn[\"CHAR_COL_DECL_LENGTH\"];\n                                        tableColumn.length = length && !_this.isDefaultColumnLength(table, tableColumn, length) ? length.toString() : \"\";\n                                    }\n                                    if (tableColumn.type === \"number\" || tableColumn.type === \"float\") {\n                                        if (dbColumn[\"DATA_PRECISION\"] !== null && !_this.isDefaultColumnPrecision(table, tableColumn, dbColumn[\"DATA_PRECISION\"]))\n                                            tableColumn.precision = dbColumn[\"DATA_PRECISION\"];\n                                        if (dbColumn[\"DATA_SCALE\"] !== null && !_this.isDefaultColumnScale(table, tableColumn, dbColumn[\"DATA_SCALE\"]))\n                                            tableColumn.scale = dbColumn[\"DATA_SCALE\"];\n                                    }\n                                    else if ((tableColumn.type === \"timestamp\"\n                                        || tableColumn.type === \"timestamp with time zone\"\n                                        || tableColumn.type === \"timestamp with local time zone\") && dbColumn[\"DATA_SCALE\"] !== null) {\n                                        tableColumn.precision = !_this.isDefaultColumnPrecision(table, tableColumn, dbColumn[\"DATA_SCALE\"]) ? dbColumn[\"DATA_SCALE\"] : undefined;\n                                    }\n                                    tableColumn.default = dbColumn[\"DATA_DEFAULT\"] !== null\n                                        && dbColumn[\"DATA_DEFAULT\"] !== undefined\n                                        && dbColumn[\"DATA_DEFAULT\"].trim() !== \"NULL\" ? tableColumn.default = dbColumn[\"DATA_DEFAULT\"].trim() : undefined;\n                                    tableColumn.isNullable = dbColumn[\"NULLABLE\"] === \"Y\";\n                                    tableColumn.isUnique = isUnique;\n                                    tableColumn.isPrimary = isPrimary;\n                                    tableColumn.isGenerated = dbColumn[\"IDENTITY_COLUMN\"] === \"YES\";\n                                    if (tableColumn.isGenerated) {\n                                        tableColumn.generationStrategy = \"increment\";\n                                        tableColumn.default = undefined;\n                                    }\n                                    tableColumn.comment = \"\"; // todo\n                                    return tableColumn;\n                                });\n                                // find unique constraints of table, group them by constraint name and build TableUnique.\n                                var tableUniqueConstraints = OrmUtils_1.OrmUtils.uniq(dbConstraints.filter(function (dbConstraint) {\n                                    return dbConstraint[\"TABLE_NAME\"] === table.name && dbConstraint[\"CONSTRAINT_TYPE\"] === \"U\";\n                                }), function (dbConstraint) { return dbConstraint[\"CONSTRAINT_NAME\"]; });\n                                table.uniques = tableUniqueConstraints.map(function (constraint) {\n                                    var uniques = dbConstraints.filter(function (dbC) { return dbC[\"CONSTRAINT_NAME\"] === constraint[\"CONSTRAINT_NAME\"]; });\n                                    return new TableUnique_1.TableUnique({\n                                        name: constraint[\"CONSTRAINT_NAME\"],\n                                        columnNames: uniques.map(function (u) { return u[\"COLUMN_NAME\"]; })\n                                    });\n                                });\n                                // find check constraints of table, group them by constraint name and build TableCheck.\n                                var tableCheckConstraints = OrmUtils_1.OrmUtils.uniq(dbConstraints.filter(function (dbConstraint) {\n                                    return dbConstraint[\"TABLE_NAME\"] === table.name && dbConstraint[\"CONSTRAINT_TYPE\"] === \"C\";\n                                }), function (dbConstraint) { return dbConstraint[\"CONSTRAINT_NAME\"]; });\n                                table.checks = tableCheckConstraints.map(function (constraint) {\n                                    var checks = dbConstraints.filter(function (dbC) { return dbC[\"CONSTRAINT_NAME\"] === constraint[\"CONSTRAINT_NAME\"]; });\n                                    return new TableCheck_1.TableCheck({\n                                        name: constraint[\"CONSTRAINT_NAME\"],\n                                        columnNames: checks.map(function (c) { return c[\"COLUMN_NAME\"]; }),\n                                        expression: constraint[\"SEARCH_CONDITION\"]\n                                    });\n                                });\n                                // find foreign key constraints of table, group them by constraint name and build TableForeignKey.\n                                var tableForeignKeyConstraints = OrmUtils_1.OrmUtils.uniq(dbForeignKeys.filter(function (dbForeignKey) {\n                                    return dbForeignKey[\"TABLE_NAME\"] === table.name;\n                                }), function (dbForeignKey) { return dbForeignKey[\"CONSTRAINT_NAME\"]; });\n                                table.foreignKeys = tableForeignKeyConstraints.map(function (dbForeignKey) {\n                                    var foreignKeys = dbForeignKeys.filter(function (dbFk) { return dbFk[\"CONSTRAINT_NAME\"] === dbForeignKey[\"CONSTRAINT_NAME\"]; });\n                                    return new TableForeignKey_1.TableForeignKey({\n                                        name: dbForeignKey[\"CONSTRAINT_NAME\"],\n                                        columnNames: foreignKeys.map(function (dbFk) { return dbFk[\"COLUMN_NAME\"]; }),\n                                        referencedTableName: dbForeignKey[\"REFERENCED_TABLE_NAME\"],\n                                        referencedColumnNames: foreignKeys.map(function (dbFk) { return dbFk[\"REFERENCED_COLUMN_NAME\"]; }),\n                                        onDelete: dbForeignKey[\"ON_DELETE\"] === \"NO ACTION\" ? undefined : dbForeignKey[\"ON_DELETE\"]\n                                    });\n                                });\n                                // create TableIndex objects from the loaded indices\n                                table.indices = dbIndices\n                                    .filter(function (dbIndex) { return dbIndex[\"TABLE_NAME\"] === table.name; })\n                                    .map(function (dbIndex) {\n                                    return new TableIndex_1.TableIndex({\n                                        name: dbIndex[\"INDEX_NAME\"],\n                                        columnNames: dbIndex[\"COLUMN_NAMES\"].split(\",\"),\n                                        isUnique: dbIndex[\"UNIQUENESS\"] === \"UNIQUE\"\n                                    });\n                                });\n                                return table;\n                            })];\n                }\n            });\n        });\n    };\n    /**\n     * Builds and returns SQL for create table.\n     */\n    OracleQueryRunner.prototype.createTableSql = function (table, createForeignKeys) {\n        var _this = this;\n        var columnDefinitions = table.columns.map(function (column) { return _this.buildCreateColumnSql(column); }).join(\", \");\n        var sql = \"CREATE TABLE \\\"\" + table.name + \"\\\" (\" + columnDefinitions;\n        table.columns\n            .filter(function (column) { return column.isUnique; })\n            .forEach(function (column) {\n            var isUniqueExist = table.uniques.some(function (unique) { return unique.columnNames.length === 1 && unique.columnNames[0] === column.name; });\n            if (!isUniqueExist)\n                table.uniques.push(new TableUnique_1.TableUnique({\n                    name: _this.connection.namingStrategy.uniqueConstraintName(table.name, [column.name]),\n                    columnNames: [column.name]\n                }));\n        });\n        if (table.uniques.length > 0) {\n            var uniquesSql = table.uniques.map(function (unique) {\n                var uniqueName = unique.name ? unique.name : _this.connection.namingStrategy.uniqueConstraintName(table.name, unique.columnNames);\n                var columnNames = unique.columnNames.map(function (columnName) { return \"\\\"\" + columnName + \"\\\"\"; }).join(\", \");\n                return \"CONSTRAINT \\\"\" + uniqueName + \"\\\" UNIQUE (\" + columnNames + \")\";\n            }).join(\", \");\n            sql += \", \" + uniquesSql;\n        }\n        if (table.checks.length > 0) {\n            var checksSql = table.checks.map(function (check) {\n                var checkName = check.name ? check.name : _this.connection.namingStrategy.checkConstraintName(table.name, check.expression);\n                return \"CONSTRAINT \\\"\" + checkName + \"\\\" CHECK (\" + check.expression + \")\";\n            }).join(\", \");\n            sql += \", \" + checksSql;\n        }\n        if (table.foreignKeys.length > 0 && createForeignKeys) {\n            var foreignKeysSql = table.foreignKeys.map(function (fk) {\n                var columnNames = fk.columnNames.map(function (columnName) { return \"\\\"\" + columnName + \"\\\"\"; }).join(\", \");\n                if (!fk.name)\n                    fk.name = _this.connection.namingStrategy.foreignKeyName(table.name, fk.columnNames);\n                var referencedColumnNames = fk.referencedColumnNames.map(function (columnName) { return \"\\\"\" + columnName + \"\\\"\"; }).join(\", \");\n                var constraint = \"CONSTRAINT \\\"\" + fk.name + \"\\\" FOREIGN KEY (\" + columnNames + \") REFERENCES \\\"\" + fk.referencedTableName + \"\\\" (\" + referencedColumnNames + \")\";\n                if (fk.onDelete)\n                    constraint += \" ON DELETE \" + fk.onDelete;\n                return constraint;\n            }).join(\", \");\n            sql += \", \" + foreignKeysSql;\n        }\n        var primaryColumns = table.columns.filter(function (column) { return column.isPrimary; });\n        if (primaryColumns.length > 0) {\n            var primaryKeyName = this.connection.namingStrategy.primaryKeyName(table.name, primaryColumns.map(function (column) { return column.name; }));\n            var columnNames = primaryColumns.map(function (column) { return \"\\\"\" + column.name + \"\\\"\"; }).join(\", \");\n            sql += \", CONSTRAINT \\\"\" + primaryKeyName + \"\\\" PRIMARY KEY (\" + columnNames + \")\";\n        }\n        sql += \")\";\n        return sql;\n    };\n    /**\n     * Builds drop table sql.\n     */\n    OracleQueryRunner.prototype.dropTableSql = function (tableOrName, ifExist) {\n        var tableName = tableOrName instanceof Table_1.Table ? tableOrName.name : tableOrName;\n        return ifExist ? \"DROP TABLE IF EXISTS \\\"\" + tableName + \"\\\"\" : \"DROP TABLE \\\"\" + tableName + \"\\\"\";\n    };\n    /**\n     * Builds create index sql.\n     */\n    OracleQueryRunner.prototype.createIndexSql = function (table, index) {\n        var columns = index.columnNames.map(function (columnName) { return \"\\\"\" + columnName + \"\\\"\"; }).join(\", \");\n        return \"CREATE \" + (index.isUnique ? \"UNIQUE \" : \"\") + \"INDEX \\\"\" + index.name + \"\\\" ON \\\"\" + table.name + \"\\\"(\" + columns + \")\";\n    };\n    /**\n     * Builds drop index sql.\n     */\n    OracleQueryRunner.prototype.dropIndexSql = function (indexOrName) {\n        var indexName = indexOrName instanceof TableIndex_1.TableIndex ? indexOrName.name : indexOrName;\n        return \"DROP INDEX \\\"\" + indexName + \"\\\"\";\n    };\n    /**\n     * Builds create primary key sql.\n     */\n    OracleQueryRunner.prototype.createPrimaryKeySql = function (table, columnNames) {\n        var primaryKeyName = this.connection.namingStrategy.primaryKeyName(table.name, columnNames);\n        var columnNamesString = columnNames.map(function (columnName) { return \"\\\"\" + columnName + \"\\\"\"; }).join(\", \");\n        return \"ALTER TABLE \\\"\" + table.name + \"\\\" ADD CONSTRAINT \\\"\" + primaryKeyName + \"\\\" PRIMARY KEY (\" + columnNamesString + \")\";\n    };\n    /**\n     * Builds drop primary key sql.\n     */\n    OracleQueryRunner.prototype.dropPrimaryKeySql = function (table) {\n        var columnNames = table.primaryColumns.map(function (column) { return column.name; });\n        var primaryKeyName = this.connection.namingStrategy.primaryKeyName(table.name, columnNames);\n        return \"ALTER TABLE \\\"\" + table.name + \"\\\" DROP CONSTRAINT \\\"\" + primaryKeyName + \"\\\"\";\n    };\n    /**\n     * Builds create unique constraint sql.\n     */\n    OracleQueryRunner.prototype.createUniqueConstraintSql = function (table, uniqueConstraint) {\n        var columnNames = uniqueConstraint.columnNames.map(function (column) { return \"\\\"\" + column + \"\\\"\"; }).join(\", \");\n        return \"ALTER TABLE \\\"\" + table.name + \"\\\" ADD CONSTRAINT \\\"\" + uniqueConstraint.name + \"\\\" UNIQUE (\" + columnNames + \")\";\n    };\n    /**\n     * Builds drop unique constraint sql.\n     */\n    OracleQueryRunner.prototype.dropUniqueConstraintSql = function (table, uniqueOrName) {\n        var uniqueName = uniqueOrName instanceof TableUnique_1.TableUnique ? uniqueOrName.name : uniqueOrName;\n        return \"ALTER TABLE \\\"\" + table.name + \"\\\" DROP CONSTRAINT \\\"\" + uniqueName + \"\\\"\";\n    };\n    /**\n     * Builds create check constraint sql.\n     */\n    OracleQueryRunner.prototype.createCheckConstraintSql = function (table, checkConstraint) {\n        return \"ALTER TABLE \\\"\" + table.name + \"\\\" ADD CONSTRAINT \\\"\" + checkConstraint.name + \"\\\" CHECK (\" + checkConstraint.expression + \")\";\n    };\n    /**\n     * Builds drop check constraint sql.\n     */\n    OracleQueryRunner.prototype.dropCheckConstraintSql = function (table, checkOrName) {\n        var checkName = checkOrName instanceof TableCheck_1.TableCheck ? checkOrName.name : checkOrName;\n        return \"ALTER TABLE \\\"\" + table.name + \"\\\" DROP CONSTRAINT \\\"\" + checkName + \"\\\"\";\n    };\n    /**\n     * Builds create foreign key sql.\n     */\n    OracleQueryRunner.prototype.createForeignKeySql = function (table, foreignKey) {\n        var columnNames = foreignKey.columnNames.map(function (column) { return \"\\\"\" + column + \"\\\"\"; }).join(\", \");\n        var referencedColumnNames = foreignKey.referencedColumnNames.map(function (column) { return \"\\\"\" + column + \"\\\"\"; }).join(\",\");\n        var sql = \"ALTER TABLE \\\"\" + table.name + \"\\\" ADD CONSTRAINT \\\"\" + foreignKey.name + \"\\\" FOREIGN KEY (\" + columnNames + \") \" +\n            (\"REFERENCES \\\"\" + foreignKey.referencedTableName + \"\\\" (\" + referencedColumnNames + \")\");\n        if (foreignKey.onDelete)\n            sql += \" ON DELETE \" + foreignKey.onDelete;\n        return sql;\n    };\n    /**\n     * Builds drop foreign key sql.\n     */\n    OracleQueryRunner.prototype.dropForeignKeySql = function (table, foreignKeyOrName) {\n        var foreignKeyName = foreignKeyOrName instanceof TableForeignKey_1.TableForeignKey ? foreignKeyOrName.name : foreignKeyOrName;\n        return \"ALTER TABLE \\\"\" + table.name + \"\\\" DROP CONSTRAINT \\\"\" + foreignKeyName + \"\\\"\";\n    };\n    /**\n     * Builds a query for create column.\n     */\n    OracleQueryRunner.prototype.buildCreateColumnSql = function (column) {\n        var c = \"\\\"\" + column.name + \"\\\" \" + this.connection.driver.createFullType(column);\n        if (column.charset)\n            c += \" CHARACTER SET \" + column.charset;\n        if (column.collation)\n            c += \" COLLATE \" + column.collation;\n        if (column.default !== undefined && column.default !== null) // DEFAULT must be placed before NOT NULL\n            c += \" DEFAULT \" + column.default;\n        if (column.isNullable !== true && !column.isGenerated) // NOT NULL is not supported with GENERATED\n            c += \" NOT NULL\";\n        if (column.isGenerated === true && column.generationStrategy === \"increment\")\n            c += \" GENERATED ALWAYS AS IDENTITY\";\n        return c;\n    };\n    return OracleQueryRunner;\n}(BaseQueryRunner_1.BaseQueryRunner));\nexports.OracleQueryRunner = OracleQueryRunner;\n\n//# sourceMappingURL=OracleQueryRunner.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/driver/oracle/OracleQueryRunner.js?");

/***/ }),

/***/ "./node_modules/typeorm/driver/postgres/PostgresDriver.js":
/*!****************************************************************!*\
  !*** ./node_modules/typeorm/driver/postgres/PostgresDriver.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ConnectionIsNotSetError_1 = __webpack_require__(/*! ../../error/ConnectionIsNotSetError */ \"./node_modules/typeorm/error/ConnectionIsNotSetError.js\");\nvar DriverPackageNotInstalledError_1 = __webpack_require__(/*! ../../error/DriverPackageNotInstalledError */ \"./node_modules/typeorm/error/DriverPackageNotInstalledError.js\");\nvar DriverUtils_1 = __webpack_require__(/*! ../DriverUtils */ \"./node_modules/typeorm/driver/DriverUtils.js\");\nvar PostgresQueryRunner_1 = __webpack_require__(/*! ./PostgresQueryRunner */ \"./node_modules/typeorm/driver/postgres/PostgresQueryRunner.js\");\nvar DateUtils_1 = __webpack_require__(/*! ../../util/DateUtils */ \"./node_modules/typeorm/util/DateUtils.js\");\nvar PlatformTools_1 = __webpack_require__(/*! ../../platform/PlatformTools */ \"./node_modules/typeorm/platform/PlatformTools.js\");\nvar RdbmsSchemaBuilder_1 = __webpack_require__(/*! ../../schema-builder/RdbmsSchemaBuilder */ \"./node_modules/typeorm/schema-builder/RdbmsSchemaBuilder.js\");\nvar OrmUtils_1 = __webpack_require__(/*! ../../util/OrmUtils */ \"./node_modules/typeorm/util/OrmUtils.js\");\n/**\n * Organizes communication with PostgreSQL DBMS.\n */\nvar PostgresDriver = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function PostgresDriver(connection) {\n        /**\n         * Pool for slave databases.\n         * Used in replication.\n         */\n        this.slaves = [];\n        /**\n         * We store all created query runners because we need to release them.\n         */\n        this.connectedQueryRunners = [];\n        /**\n         * Indicates if replication is enabled.\n         */\n        this.isReplicated = false;\n        /**\n         * Indicates if tree tables are supported by this driver.\n         */\n        this.treeSupport = true;\n        /**\n         * Gets list of supported column data types by a driver.\n         *\n         * @see https://www.tutorialspoint.com/postgresql/postgresql_data_types.htm\n         * @see https://www.postgresql.org/docs/9.2/static/datatype.html\n         */\n        this.supportedDataTypes = [\n            \"int\",\n            \"int2\",\n            \"int4\",\n            \"int8\",\n            \"smallint\",\n            \"integer\",\n            \"bigint\",\n            \"decimal\",\n            \"numeric\",\n            \"real\",\n            \"float\",\n            \"float4\",\n            \"float8\",\n            \"double precision\",\n            \"money\",\n            \"character varying\",\n            \"varchar\",\n            \"character\",\n            \"char\",\n            \"text\",\n            \"citext\",\n            \"hstore\",\n            \"bytea\",\n            \"bit\",\n            \"varbit\",\n            \"bit varying\",\n            \"timetz\",\n            \"timestamptz\",\n            \"timestamp\",\n            \"timestamp without time zone\",\n            \"timestamp with time zone\",\n            \"date\",\n            \"time\",\n            \"time without time zone\",\n            \"time with time zone\",\n            \"interval\",\n            \"bool\",\n            \"boolean\",\n            \"enum\",\n            \"point\",\n            \"line\",\n            \"lseg\",\n            \"box\",\n            \"path\",\n            \"polygon\",\n            \"circle\",\n            \"cidr\",\n            \"inet\",\n            \"macaddr\",\n            \"tsvector\",\n            \"tsquery\",\n            \"uuid\",\n            \"xml\",\n            \"json\",\n            \"jsonb\",\n            \"int4range\",\n            \"int8range\",\n            \"numrange\",\n            \"tsrange\",\n            \"tstzrange\",\n            \"daterange\",\n            \"geometry\",\n            \"geography\"\n        ];\n        /**\n         * Gets list of spatial column data types.\n         */\n        this.spatialTypes = [\n            \"geometry\",\n            \"geography\"\n        ];\n        /**\n         * Gets list of column data types that support length by a driver.\n         */\n        this.withLengthColumnTypes = [\n            \"character varying\",\n            \"varchar\",\n            \"character\",\n            \"char\",\n            \"bit\",\n            \"varbit\",\n            \"bit varying\"\n        ];\n        /**\n         * Gets list of column data types that support precision by a driver.\n         */\n        this.withPrecisionColumnTypes = [\n            \"numeric\",\n            \"decimal\",\n            \"interval\",\n            \"time without time zone\",\n            \"time with time zone\",\n            \"timestamp without time zone\",\n            \"timestamp with time zone\"\n        ];\n        /**\n         * Gets list of column data types that support scale by a driver.\n         */\n        this.withScaleColumnTypes = [\n            \"numeric\",\n            \"decimal\"\n        ];\n        /**\n         * Orm has special columns and we need to know what database column types should be for those types.\n         * Column types are driver dependant.\n         */\n        this.mappedDataTypes = {\n            createDate: \"timestamp\",\n            createDateDefault: \"now()\",\n            updateDate: \"timestamp\",\n            updateDateDefault: \"now()\",\n            version: \"int4\",\n            treeLevel: \"int4\",\n            migrationId: \"int4\",\n            migrationName: \"varchar\",\n            migrationTimestamp: \"int8\",\n            cacheId: \"int4\",\n            cacheIdentifier: \"varchar\",\n            cacheTime: \"int8\",\n            cacheDuration: \"int4\",\n            cacheQuery: \"text\",\n            cacheResult: \"text\",\n        };\n        /**\n         * Default values of length, precision and scale depends on column data type.\n         * Used in the cases when length/precision/scale is not specified by user.\n         */\n        this.dataTypeDefaults = {\n            \"character\": { length: 1 },\n            \"bit\": { length: 1 },\n            \"interval\": { precision: 6 },\n            \"time without time zone\": { precision: 6 },\n            \"time with time zone\": { precision: 6 },\n            \"timestamp without time zone\": { precision: 6 },\n            \"timestamp with time zone\": { precision: 6 },\n        };\n        this.connection = connection;\n        this.options = connection.options;\n        this.isReplicated = this.options.replication ? true : false;\n        // load postgres package\n        this.loadDependencies();\n        // Object.assign(this.options, DriverUtils.buildDriverOptions(connection.options)); // todo: do it better way\n        // validate options to make sure everything is set\n        // todo: revisit validation with replication in mind\n        // if (!this.options.host)\n        //     throw new DriverOptionNotSetError(\"host\");\n        // if (!this.options.username)\n        //     throw new DriverOptionNotSetError(\"username\");\n        // if (!this.options.database)\n        //     throw new DriverOptionNotSetError(\"database\");\n    }\n    // -------------------------------------------------------------------------\n    // Public Implemented Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Performs connection to the database.\n     * Based on pooling options, it can either create connection immediately,\n     * either create a pool and create connection when needed.\n     */\n    PostgresDriver.prototype.connect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var _a, _b, _c;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        if (!this.options.replication) return [3 /*break*/, 3];\n                        _a = this;\n                        return [4 /*yield*/, Promise.all(this.options.replication.slaves.map(function (slave) {\n                                return _this.createPool(_this.options, slave);\n                            }))];\n                    case 1:\n                        _a.slaves = _d.sent();\n                        _b = this;\n                        return [4 /*yield*/, this.createPool(this.options, this.options.replication.master)];\n                    case 2:\n                        _b.master = _d.sent();\n                        this.database = this.options.replication.master.database;\n                        return [3 /*break*/, 5];\n                    case 3:\n                        _c = this;\n                        return [4 /*yield*/, this.createPool(this.options, this.options)];\n                    case 4:\n                        _c.master = _d.sent();\n                        this.database = this.options.database;\n                        _d.label = 5;\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Makes any action after connection (e.g. create extensions in Postgres driver).\n     */\n    PostgresDriver.prototype.afterConnect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var hasUuidColumns, hasCitextColumns, hasHstoreColumns, hasGeometryColumns;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        hasUuidColumns = this.connection.entityMetadatas.some(function (metadata) {\n                            return metadata.generatedColumns.filter(function (column) { return column.generationStrategy === \"uuid\"; }).length > 0;\n                        });\n                        hasCitextColumns = this.connection.entityMetadatas.some(function (metadata) {\n                            return metadata.columns.filter(function (column) { return column.type === \"citext\"; }).length > 0;\n                        });\n                        hasHstoreColumns = this.connection.entityMetadatas.some(function (metadata) {\n                            return metadata.columns.filter(function (column) { return column.type === \"hstore\"; }).length > 0;\n                        });\n                        hasGeometryColumns = this.connection.entityMetadatas.some(function (metadata) {\n                            return metadata.columns.filter(function (column) { return _this.spatialTypes.indexOf(column.type) >= 0; }).length > 0;\n                        });\n                        if (!(hasUuidColumns || hasCitextColumns || hasHstoreColumns || hasGeometryColumns)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, Promise.all(__spread([this.master], this.slaves).map(function (pool) {\n                                return new Promise(function (ok, fail) {\n                                    pool.connect(function (err, connection, release) { return __awaiter(_this, void 0, void 0, function () {\n                                        var logger, _1, _2, _3, _4;\n                                        return __generator(this, function (_a) {\n                                            switch (_a.label) {\n                                                case 0:\n                                                    logger = this.connection.logger;\n                                                    if (err)\n                                                        return [2 /*return*/, fail(err)];\n                                                    if (!hasUuidColumns) return [3 /*break*/, 4];\n                                                    _a.label = 1;\n                                                case 1:\n                                                    _a.trys.push([1, 3, , 4]);\n                                                    return [4 /*yield*/, this.executeQuery(connection, \"CREATE EXTENSION IF NOT EXISTS \\\"uuid-ossp\\\"\")];\n                                                case 2:\n                                                    _a.sent();\n                                                    return [3 /*break*/, 4];\n                                                case 3:\n                                                    _1 = _a.sent();\n                                                    logger.log(\"warn\", \"At least one of the entities has uuid column, but the 'uuid-ossp' extension cannot be installed automatically. Please install it manually using superuser rights\");\n                                                    return [3 /*break*/, 4];\n                                                case 4:\n                                                    if (!hasCitextColumns) return [3 /*break*/, 8];\n                                                    _a.label = 5;\n                                                case 5:\n                                                    _a.trys.push([5, 7, , 8]);\n                                                    return [4 /*yield*/, this.executeQuery(connection, \"CREATE EXTENSION IF NOT EXISTS \\\"citext\\\"\")];\n                                                case 6:\n                                                    _a.sent();\n                                                    return [3 /*break*/, 8];\n                                                case 7:\n                                                    _2 = _a.sent();\n                                                    logger.log(\"warn\", \"At least one of the entities has citext column, but the 'citext' extension cannot be installed automatically. Please install it manually using superuser rights\");\n                                                    return [3 /*break*/, 8];\n                                                case 8:\n                                                    if (!hasHstoreColumns) return [3 /*break*/, 12];\n                                                    _a.label = 9;\n                                                case 9:\n                                                    _a.trys.push([9, 11, , 12]);\n                                                    return [4 /*yield*/, this.executeQuery(connection, \"CREATE EXTENSION IF NOT EXISTS \\\"hstore\\\"\")];\n                                                case 10:\n                                                    _a.sent();\n                                                    return [3 /*break*/, 12];\n                                                case 11:\n                                                    _3 = _a.sent();\n                                                    logger.log(\"warn\", \"At least one of the entities has hstore column, but the 'hstore' extension cannot be installed automatically. Please install it manually using superuser rights\");\n                                                    return [3 /*break*/, 12];\n                                                case 12:\n                                                    if (!hasGeometryColumns) return [3 /*break*/, 16];\n                                                    _a.label = 13;\n                                                case 13:\n                                                    _a.trys.push([13, 15, , 16]);\n                                                    return [4 /*yield*/, this.executeQuery(connection, \"CREATE EXTENSION IF NOT EXISTS \\\"postgis\\\"\")];\n                                                case 14:\n                                                    _a.sent();\n                                                    return [3 /*break*/, 16];\n                                                case 15:\n                                                    _4 = _a.sent();\n                                                    logger.log(\"warn\", \"At least one of the entities has a geometry column, but the 'postgis' extension cannot be installed automatically. Please install it manually using superuser rights\");\n                                                    return [3 /*break*/, 16];\n                                                case 16:\n                                                    release();\n                                                    ok();\n                                                    return [2 /*return*/];\n                                            }\n                                        });\n                                    }); });\n                                });\n                            }))];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2: return [2 /*return*/, Promise.resolve()];\n                }\n            });\n        });\n    };\n    /**\n     * Closes connection with database.\n     */\n    PostgresDriver.prototype.disconnect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.master)\n                            return [2 /*return*/, Promise.reject(new ConnectionIsNotSetError_1.ConnectionIsNotSetError(\"postgres\"))];\n                        return [4 /*yield*/, this.closePool(this.master)];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, Promise.all(this.slaves.map(function (slave) { return _this.closePool(slave); }))];\n                    case 2:\n                        _a.sent();\n                        this.master = undefined;\n                        this.slaves = [];\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a schema builder used to build and sync a schema.\n     */\n    PostgresDriver.prototype.createSchemaBuilder = function () {\n        return new RdbmsSchemaBuilder_1.RdbmsSchemaBuilder(this.connection);\n    };\n    /**\n     * Creates a query runner used to execute database queries.\n     */\n    PostgresDriver.prototype.createQueryRunner = function (mode) {\n        if (mode === void 0) { mode = \"master\"; }\n        return new PostgresQueryRunner_1.PostgresQueryRunner(this, mode);\n    };\n    /**\n     * Prepares given value to a value to be persisted, based on its column type and metadata.\n     */\n    PostgresDriver.prototype.preparePersistentValue = function (value, columnMetadata) {\n        if (columnMetadata.transformer)\n            value = columnMetadata.transformer.to(value);\n        if (value === null || value === undefined)\n            return value;\n        if (columnMetadata.type === Boolean) {\n            return value === true ? 1 : 0;\n        }\n        else if (columnMetadata.type === \"date\") {\n            return DateUtils_1.DateUtils.mixedDateToDateString(value);\n        }\n        else if (columnMetadata.type === \"time\") {\n            return DateUtils_1.DateUtils.mixedDateToTimeString(value);\n        }\n        else if (columnMetadata.type === \"datetime\"\n            || columnMetadata.type === Date\n            || columnMetadata.type === \"timestamp\"\n            || columnMetadata.type === \"timestamp with time zone\"\n            || columnMetadata.type === \"timestamp without time zone\") {\n            return DateUtils_1.DateUtils.mixedDateToDate(value);\n        }\n        else if (__spread([\"json\", \"jsonb\"], this.spatialTypes).indexOf(columnMetadata.type) >= 0) {\n            return JSON.stringify(value);\n        }\n        else if (columnMetadata.type === \"hstore\") {\n            if (typeof value === \"string\") {\n                return value;\n            }\n            else {\n                return Object.keys(value).map(function (key) {\n                    return \"\\\"\" + key + \"\\\"=>\\\"\" + value[key] + \"\\\"\";\n                }).join(\", \");\n            }\n        }\n        else if (columnMetadata.type === \"simple-array\") {\n            return DateUtils_1.DateUtils.simpleArrayToString(value);\n        }\n        else if (columnMetadata.type === \"simple-json\") {\n            return DateUtils_1.DateUtils.simpleJsonToString(value);\n        }\n        return value;\n    };\n    /**\n     * Prepares given value to a value to be persisted, based on its column type or metadata.\n     */\n    PostgresDriver.prototype.prepareHydratedValue = function (value, columnMetadata) {\n        if (value === null || value === undefined)\n            return value;\n        if (columnMetadata.type === Boolean) {\n            value = value ? true : false;\n        }\n        else if (columnMetadata.type === \"datetime\"\n            || columnMetadata.type === Date\n            || columnMetadata.type === \"timestamp\"\n            || columnMetadata.type === \"timestamp with time zone\"\n            || columnMetadata.type === \"timestamp without time zone\") {\n            value = DateUtils_1.DateUtils.normalizeHydratedDate(value);\n        }\n        else if (columnMetadata.type === \"date\") {\n            value = DateUtils_1.DateUtils.mixedDateToDateString(value);\n        }\n        else if (columnMetadata.type === \"time\") {\n            value = DateUtils_1.DateUtils.mixedTimeToString(value);\n        }\n        else if (columnMetadata.type === \"hstore\") {\n            if (columnMetadata.hstoreType === \"object\") {\n                var regexp = /\"(.*?)\"=>\"(.*?[^\\\\\"])\"/gi;\n                var matchValue = value.match(regexp);\n                var object = {};\n                var match = void 0;\n                while (match = regexp.exec(matchValue)) {\n                    object[match[1].replace(\"\\\\\\\"\", \"\\\"\")] = match[2].replace(\"\\\\\\\"\", \"\\\"\");\n                }\n                return object;\n            }\n            else {\n                return value;\n            }\n        }\n        else if (columnMetadata.type === \"simple-array\") {\n            value = DateUtils_1.DateUtils.stringToSimpleArray(value);\n        }\n        else if (columnMetadata.type === \"simple-json\") {\n            value = DateUtils_1.DateUtils.stringToSimpleJson(value);\n        }\n        // manually convert enum array to array of values (pg does not support, see https://github.com/brianc/node-pg-types/issues/56)\n        if (columnMetadata.enum && columnMetadata.isArray)\n            value = value.substr(1).substr(0, value.length - 2).split(\",\");\n        if (columnMetadata.transformer)\n            value = columnMetadata.transformer.from(value);\n        return value;\n    };\n    /**\n     * Replaces parameters in the given sql with special escaping character\n     * and an array of parameter names to be passed to a query.\n     */\n    PostgresDriver.prototype.escapeQueryWithParameters = function (sql, parameters, nativeParameters) {\n        var builtParameters = Object.keys(nativeParameters).map(function (key) { return nativeParameters[key]; });\n        if (!parameters || !Object.keys(parameters).length)\n            return [sql, builtParameters];\n        var keys = Object.keys(parameters).map(function (parameter) { return \"(:(\\\\.\\\\.\\\\.)?\" + parameter + \"\\\\b)\"; }).join(\"|\");\n        sql = sql.replace(new RegExp(keys, \"g\"), function (key) {\n            var value;\n            var isArray = false;\n            if (key.substr(0, 4) === \":...\") {\n                isArray = true;\n                value = parameters[key.substr(4)];\n            }\n            else {\n                value = parameters[key.substr(1)];\n            }\n            if (isArray) {\n                return value.map(function (v) {\n                    builtParameters.push(v);\n                    return \"$\" + builtParameters.length;\n                }).join(\", \");\n            }\n            else if (value instanceof Function) {\n                return value();\n            }\n            else {\n                builtParameters.push(value);\n                return \"$\" + builtParameters.length;\n            }\n        }); // todo: make replace only in value statements, otherwise problems\n        return [sql, builtParameters];\n    };\n    /**\n     * Escapes a column name.\n     */\n    PostgresDriver.prototype.escape = function (columnName) {\n        return \"\\\"\" + columnName + \"\\\"\";\n    };\n    /**\n     * Build full table name with schema name and table name.\n     * E.g. \"mySchema\".\"myTable\"\n     */\n    PostgresDriver.prototype.buildTableName = function (tableName, schema) {\n        return schema ? schema + \".\" + tableName : tableName;\n    };\n    /**\n     * Creates a database type from a given column metadata.\n     */\n    PostgresDriver.prototype.normalizeType = function (column) {\n        if (column.type === Number || column.type === \"int\" || column.type === \"int4\") {\n            return \"integer\";\n        }\n        else if (column.type === String || column.type === \"varchar\") {\n            return \"character varying\";\n        }\n        else if (column.type === Date || column.type === \"timestamp\") {\n            return \"timestamp without time zone\";\n        }\n        else if (column.type === \"timestamptz\") {\n            return \"timestamp with time zone\";\n        }\n        else if (column.type === \"time\") {\n            return \"time without time zone\";\n        }\n        else if (column.type === \"timetz\") {\n            return \"time with time zone\";\n        }\n        else if (column.type === Boolean || column.type === \"bool\") {\n            return \"boolean\";\n        }\n        else if (column.type === \"simple-array\") {\n            return \"text\";\n        }\n        else if (column.type === \"simple-json\") {\n            return \"text\";\n        }\n        else if (column.type === \"int2\") {\n            return \"smallint\";\n        }\n        else if (column.type === \"int8\") {\n            return \"bigint\";\n        }\n        else if (column.type === \"decimal\") {\n            return \"numeric\";\n        }\n        else if (column.type === \"float8\") {\n            return \"double precision\";\n        }\n        else if (column.type === \"float4\") {\n            return \"real\";\n        }\n        else if (column.type === \"char\") {\n            return \"character\";\n        }\n        else if (column.type === \"varbit\") {\n            return \"bit varying\";\n        }\n        else {\n            return column.type || \"\";\n        }\n    };\n    /**\n     * Normalizes \"default\" value of the column.\n     */\n    PostgresDriver.prototype.normalizeDefault = function (columnMetadata) {\n        var defaultValue = columnMetadata.default;\n        var arrayCast = columnMetadata.isArray ? \"::\" + columnMetadata.type + \"[]\" : \"\";\n        if (typeof defaultValue === \"number\") {\n            return \"\" + defaultValue;\n        }\n        else if (typeof defaultValue === \"boolean\") {\n            return defaultValue === true ? \"true\" : \"false\";\n        }\n        else if (typeof defaultValue === \"function\") {\n            return defaultValue();\n        }\n        else if (typeof defaultValue === \"string\") {\n            return \"'\" + defaultValue + \"'\" + arrayCast;\n        }\n        else if (typeof defaultValue === \"object\") {\n            return \"'\" + JSON.stringify(defaultValue) + \"'\";\n        }\n        else {\n            return defaultValue;\n        }\n    };\n    /**\n     * Normalizes \"isUnique\" value of the column.\n     */\n    PostgresDriver.prototype.normalizeIsUnique = function (column) {\n        return column.entityMetadata.uniques.some(function (uq) { return uq.columns.length === 1 && uq.columns[0] === column; });\n    };\n    /**\n     * Returns default column lengths, which is required on column creation.\n     */\n    PostgresDriver.prototype.getColumnLength = function (column) {\n        return column.length ? column.length.toString() : \"\";\n    };\n    /**\n     * Creates column type definition including length, precision and scale\n     */\n    PostgresDriver.prototype.createFullType = function (column) {\n        var type = column.type;\n        if (column.length) {\n            type += \"(\" + column.length + \")\";\n        }\n        else if (column.precision !== null && column.precision !== undefined && column.scale !== null && column.scale !== undefined) {\n            type += \"(\" + column.precision + \",\" + column.scale + \")\";\n        }\n        else if (column.precision !== null && column.precision !== undefined) {\n            type += \"(\" + column.precision + \")\";\n        }\n        if (column.type === \"time without time zone\") {\n            type = \"TIME\" + (column.precision !== null && column.precision !== undefined ? \"(\" + column.precision + \")\" : \"\");\n        }\n        else if (column.type === \"time with time zone\") {\n            type = \"TIME\" + (column.precision !== null && column.precision !== undefined ? \"(\" + column.precision + \")\" : \"\") + \" WITH TIME ZONE\";\n        }\n        else if (column.type === \"timestamp without time zone\") {\n            type = \"TIMESTAMP\" + (column.precision !== null && column.precision !== undefined ? \"(\" + column.precision + \")\" : \"\");\n        }\n        else if (column.type === \"timestamp with time zone\") {\n            type = \"TIMESTAMP\" + (column.precision !== null && column.precision !== undefined ? \"(\" + column.precision + \")\" : \"\") + \" WITH TIME ZONE\";\n        }\n        else if (this.spatialTypes.indexOf(column.type) >= 0) {\n            if (column.spatialFeatureType != null && column.srid != null) {\n                type = column.type + \"(\" + column.spatialFeatureType + \",\" + column.srid + \")\";\n            }\n            else if (column.spatialFeatureType != null) {\n                type = column.type + \"(\" + column.spatialFeatureType + \")\";\n            }\n            else {\n                type = column.type;\n            }\n        }\n        if (column.isArray)\n            type += \" array\";\n        return type;\n    };\n    /**\n     * Obtains a new database connection to a master server.\n     * Used for replication.\n     * If replication is not setup then returns default connection's database connection.\n     */\n    PostgresDriver.prototype.obtainMasterConnection = function () {\n        var _this = this;\n        return new Promise(function (ok, fail) {\n            _this.master.connect(function (err, connection, release) {\n                err ? fail(err) : ok([connection, release]);\n            });\n        });\n    };\n    /**\n     * Obtains a new database connection to a slave server.\n     * Used for replication.\n     * If replication is not setup then returns master (default) connection's database connection.\n     */\n    PostgresDriver.prototype.obtainSlaveConnection = function () {\n        var _this = this;\n        if (!this.slaves.length)\n            return this.obtainMasterConnection();\n        return new Promise(function (ok, fail) {\n            var random = Math.floor(Math.random() * _this.slaves.length);\n            _this.slaves[random].connect(function (err, connection, release) {\n                err ? fail(err) : ok([connection, release]);\n            });\n        });\n    };\n    /**\n     * Creates generated map of values generated or returned by database after INSERT query.\n     *\n     * todo: slow. optimize Object.keys(), OrmUtils.mergeDeep and column.createValueMap parts\n     */\n    PostgresDriver.prototype.createGeneratedMap = function (metadata, insertResult) {\n        if (!insertResult)\n            return undefined;\n        return Object.keys(insertResult).reduce(function (map, key) {\n            var column = metadata.findColumnWithDatabaseName(key);\n            if (column) {\n                OrmUtils_1.OrmUtils.mergeDeep(map, column.createValueMap(insertResult[key]));\n            }\n            return map;\n        }, {});\n    };\n    /**\n     * Differentiate columns of this table and columns from the given column metadatas columns\n     * and returns only changed.\n     */\n    PostgresDriver.prototype.findChangedColumns = function (tableColumns, columnMetadatas) {\n        var _this = this;\n        return columnMetadatas.filter(function (columnMetadata) {\n            var tableColumn = tableColumns.find(function (c) { return c.name === columnMetadata.databaseName; });\n            if (!tableColumn)\n                return false; // we don't need new columns, we only need exist and changed\n            return tableColumn.name !== columnMetadata.databaseName\n                || tableColumn.type !== _this.normalizeType(columnMetadata)\n                || tableColumn.length !== columnMetadata.length\n                || tableColumn.precision !== columnMetadata.precision\n                || tableColumn.scale !== columnMetadata.scale\n                // || tableColumn.comment !== columnMetadata.comment // todo\n                || (!tableColumn.isGenerated && _this.normalizeDefault(columnMetadata) !== tableColumn.default) // we included check for generated here, because generated columns already can have default values\n                || tableColumn.isPrimary !== columnMetadata.isPrimary\n                || tableColumn.isNullable !== columnMetadata.isNullable\n                || tableColumn.isUnique !== _this.normalizeIsUnique(columnMetadata)\n                || (tableColumn.enum && columnMetadata.enum && !OrmUtils_1.OrmUtils.isArraysEqual(tableColumn.enum, columnMetadata.enum))\n                || tableColumn.isGenerated !== columnMetadata.isGenerated\n                || (tableColumn.spatialFeatureType || \"\").toLowerCase() !== (columnMetadata.spatialFeatureType || \"\").toLowerCase()\n                || tableColumn.srid !== columnMetadata.srid;\n        });\n    };\n    /**\n     * Returns true if driver supports RETURNING / OUTPUT statement.\n     */\n    PostgresDriver.prototype.isReturningSqlSupported = function () {\n        return true;\n    };\n    /**\n     * Returns true if driver supports uuid values generation on its own.\n     */\n    PostgresDriver.prototype.isUUIDGenerationSupported = function () {\n        return true;\n    };\n    /**\n     * Creates an escaped parameter.\n     */\n    PostgresDriver.prototype.createParameter = function (parameterName, index) {\n        return \"$\" + (index + 1);\n    };\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Loads postgres query stream package.\n     */\n    PostgresDriver.prototype.loadStreamDependency = function () {\n        try {\n            return PlatformTools_1.PlatformTools.load(\"pg-query-stream\");\n        }\n        catch (e) { // todo: better error for browser env\n            throw new Error(\"To use streams you should install pg-query-stream package. Please run npm i pg-query-stream --save command.\");\n        }\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * If driver dependency is not given explicitly, then try to load it via \"require\".\n     */\n    PostgresDriver.prototype.loadDependencies = function () {\n        try {\n            this.postgres = PlatformTools_1.PlatformTools.load(\"pg\");\n            try {\n                var pgNative = PlatformTools_1.PlatformTools.load(\"pg-native\");\n                if (pgNative && this.postgres.native)\n                    this.postgres = this.postgres.native;\n            }\n            catch (e) { }\n        }\n        catch (e) { // todo: better error for browser env\n            throw new DriverPackageNotInstalledError_1.DriverPackageNotInstalledError(\"Postgres\", \"pg\");\n        }\n    };\n    /**\n     * Creates a new connection pool for a given database credentials.\n     */\n    PostgresDriver.prototype.createPool = function (options, credentials) {\n        return __awaiter(this, void 0, void 0, function () {\n            var connectionOptions, pool, logger;\n            return __generator(this, function (_a) {\n                credentials = Object.assign(credentials, DriverUtils_1.DriverUtils.buildDriverOptions(credentials)); // todo: do it better way\n                connectionOptions = Object.assign({}, {\n                    host: credentials.host,\n                    user: credentials.username,\n                    password: credentials.password,\n                    database: credentials.database,\n                    port: credentials.port,\n                    ssl: credentials.ssl\n                }, options.extra || {});\n                pool = new this.postgres.Pool(connectionOptions);\n                logger = this.connection.logger;\n                /*\n                  Attaching an error handler to pool errors is essential, as, otherwise, errors raised will go unhandled and\n                  cause the hosting app to crash.\n                 */\n                pool.on(\"error\", function (error) { return logger.log(\"warn\", \"Postgres pool raised an error. \" + error); });\n                return [2 /*return*/, new Promise(function (ok, fail) {\n                        pool.connect(function (err, connection, release) {\n                            if (err)\n                                return fail(err);\n                            release();\n                            ok(pool);\n                        });\n                    })];\n            });\n        });\n    };\n    /**\n     * Closes connection pool.\n     */\n    PostgresDriver.prototype.closePool = function (pool) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, Promise.all(this.connectedQueryRunners.map(function (queryRunner) { return queryRunner.release(); }))];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/, new Promise(function (ok, fail) {\n                                pool.end(function (err) { return err ? fail(err) : ok(); });\n                            })];\n                }\n            });\n        });\n    };\n    /**\n     * Executes given query.\n     */\n    PostgresDriver.prototype.executeQuery = function (connection, query) {\n        return new Promise(function (ok, fail) {\n            connection.query(query, function (err, result) {\n                if (err)\n                    return fail(err);\n                ok(result);\n            });\n        });\n    };\n    return PostgresDriver;\n}());\nexports.PostgresDriver = PostgresDriver;\n\n//# sourceMappingURL=PostgresDriver.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/driver/postgres/PostgresDriver.js?");

/***/ }),

/***/ "./node_modules/typeorm/driver/postgres/PostgresQueryRunner.js":
/*!*********************************************************************!*\
  !*** ./node_modules/typeorm/driver/postgres/PostgresQueryRunner.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TransactionAlreadyStartedError_1 = __webpack_require__(/*! ../../error/TransactionAlreadyStartedError */ \"./node_modules/typeorm/error/TransactionAlreadyStartedError.js\");\nvar TransactionNotStartedError_1 = __webpack_require__(/*! ../../error/TransactionNotStartedError */ \"./node_modules/typeorm/error/TransactionNotStartedError.js\");\nvar TableColumn_1 = __webpack_require__(/*! ../../schema-builder/table/TableColumn */ \"./node_modules/typeorm/schema-builder/table/TableColumn.js\");\nvar Table_1 = __webpack_require__(/*! ../../schema-builder/table/Table */ \"./node_modules/typeorm/schema-builder/table/Table.js\");\nvar TableIndex_1 = __webpack_require__(/*! ../../schema-builder/table/TableIndex */ \"./node_modules/typeorm/schema-builder/table/TableIndex.js\");\nvar TableForeignKey_1 = __webpack_require__(/*! ../../schema-builder/table/TableForeignKey */ \"./node_modules/typeorm/schema-builder/table/TableForeignKey.js\");\nvar QueryRunnerAlreadyReleasedError_1 = __webpack_require__(/*! ../../error/QueryRunnerAlreadyReleasedError */ \"./node_modules/typeorm/error/QueryRunnerAlreadyReleasedError.js\");\nvar QueryFailedError_1 = __webpack_require__(/*! ../../error/QueryFailedError */ \"./node_modules/typeorm/error/QueryFailedError.js\");\nvar Broadcaster_1 = __webpack_require__(/*! ../../subscriber/Broadcaster */ \"./node_modules/typeorm/subscriber/Broadcaster.js\");\nvar TableUnique_1 = __webpack_require__(/*! ../../schema-builder/table/TableUnique */ \"./node_modules/typeorm/schema-builder/table/TableUnique.js\");\nvar BaseQueryRunner_1 = __webpack_require__(/*! ../../query-runner/BaseQueryRunner */ \"./node_modules/typeorm/query-runner/BaseQueryRunner.js\");\nvar OrmUtils_1 = __webpack_require__(/*! ../../util/OrmUtils */ \"./node_modules/typeorm/util/OrmUtils.js\");\nvar _1 = __webpack_require__(/*! ../../ */ \"./node_modules/typeorm/index.js\");\nvar TableCheck_1 = __webpack_require__(/*! ../../schema-builder/table/TableCheck */ \"./node_modules/typeorm/schema-builder/table/TableCheck.js\");\n/**\n * Runs queries on a single postgres database connection.\n */\nvar PostgresQueryRunner = /** @class */ (function (_super) {\n    __extends(PostgresQueryRunner, _super);\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function PostgresQueryRunner(driver, mode) {\n        if (mode === void 0) { mode = \"master\"; }\n        var _this = _super.call(this) || this;\n        _this.driver = driver;\n        _this.connection = driver.connection;\n        _this.mode = mode;\n        _this.broadcaster = new Broadcaster_1.Broadcaster(_this);\n        return _this;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates/uses database connection from the connection pool to perform further operations.\n     * Returns obtained database connection.\n     */\n    PostgresQueryRunner.prototype.connect = function () {\n        var _this = this;\n        if (this.databaseConnection)\n            return Promise.resolve(this.databaseConnection);\n        if (this.databaseConnectionPromise)\n            return this.databaseConnectionPromise;\n        if (this.mode === \"slave\" && this.driver.isReplicated) {\n            this.databaseConnectionPromise = this.driver.obtainSlaveConnection().then(function (_a) {\n                var _b = __read(_a, 2), connection = _b[0], release = _b[1];\n                _this.driver.connectedQueryRunners.push(_this);\n                _this.databaseConnection = connection;\n                _this.releaseCallback = release;\n                return _this.databaseConnection;\n            });\n        }\n        else { // master\n            this.databaseConnectionPromise = this.driver.obtainMasterConnection().then(function (_a) {\n                var _b = __read(_a, 2), connection = _b[0], release = _b[1];\n                _this.driver.connectedQueryRunners.push(_this);\n                _this.databaseConnection = connection;\n                _this.releaseCallback = release;\n                return _this.databaseConnection;\n            });\n        }\n        return this.databaseConnectionPromise;\n    };\n    /**\n     * Releases used database connection.\n     * You cannot use query runner methods once its released.\n     */\n    PostgresQueryRunner.prototype.release = function () {\n        this.isReleased = true;\n        if (this.releaseCallback)\n            this.releaseCallback();\n        var index = this.driver.connectedQueryRunners.indexOf(this);\n        if (index !== -1)\n            this.driver.connectedQueryRunners.splice(index);\n        return Promise.resolve();\n    };\n    /**\n     * Starts transaction.\n     */\n    PostgresQueryRunner.prototype.startTransaction = function (isolationLevel) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.isTransactionActive)\n                            throw new TransactionAlreadyStartedError_1.TransactionAlreadyStartedError();\n                        this.isTransactionActive = true;\n                        return [4 /*yield*/, this.query(\"START TRANSACTION\")];\n                    case 1:\n                        _a.sent();\n                        if (!isolationLevel) return [3 /*break*/, 3];\n                        return [4 /*yield*/, this.query(\"SET TRANSACTION ISOLATION LEVEL \" + isolationLevel)];\n                    case 2:\n                        _a.sent();\n                        _a.label = 3;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Commits transaction.\n     * Error will be thrown if transaction was not started.\n     */\n    PostgresQueryRunner.prototype.commitTransaction = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.isTransactionActive)\n                            throw new TransactionNotStartedError_1.TransactionNotStartedError();\n                        return [4 /*yield*/, this.query(\"COMMIT\")];\n                    case 1:\n                        _a.sent();\n                        this.isTransactionActive = false;\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Rollbacks transaction.\n     * Error will be thrown if transaction was not started.\n     */\n    PostgresQueryRunner.prototype.rollbackTransaction = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.isTransactionActive)\n                            throw new TransactionNotStartedError_1.TransactionNotStartedError();\n                        return [4 /*yield*/, this.query(\"ROLLBACK\")];\n                    case 1:\n                        _a.sent();\n                        this.isTransactionActive = false;\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Executes a given SQL query.\n     */\n    PostgresQueryRunner.prototype.query = function (query, parameters) {\n        var _this = this;\n        if (this.isReleased)\n            throw new QueryRunnerAlreadyReleasedError_1.QueryRunnerAlreadyReleasedError();\n        return new Promise(function (ok, fail) { return __awaiter(_this, void 0, void 0, function () {\n            var _this = this;\n            var databaseConnection, queryStartTime_1, err_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this.connect()];\n                    case 1:\n                        databaseConnection = _a.sent();\n                        this.driver.connection.logger.logQuery(query, parameters, this);\n                        queryStartTime_1 = +new Date();\n                        databaseConnection.query(query, parameters, function (err, result) {\n                            // log slow queries if maxQueryExecution time is set\n                            var maxQueryExecutionTime = _this.driver.connection.options.maxQueryExecutionTime;\n                            var queryEndTime = +new Date();\n                            var queryExecutionTime = queryEndTime - queryStartTime_1;\n                            if (maxQueryExecutionTime && queryExecutionTime > maxQueryExecutionTime)\n                                _this.driver.connection.logger.logQuerySlow(queryExecutionTime, query, parameters, _this);\n                            if (err) {\n                                _this.driver.connection.logger.logQueryError(err, query, parameters, _this);\n                                fail(new QueryFailedError_1.QueryFailedError(query, parameters, err));\n                            }\n                            else {\n                                ok(result.rows);\n                            }\n                        });\n                        return [3 /*break*/, 3];\n                    case 2:\n                        err_1 = _a.sent();\n                        fail(err_1);\n                        return [3 /*break*/, 3];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        }); });\n    };\n    /**\n     * Returns raw data stream.\n     */\n    PostgresQueryRunner.prototype.stream = function (query, parameters, onEnd, onError) {\n        var _this = this;\n        var QueryStream = this.driver.loadStreamDependency();\n        if (this.isReleased)\n            throw new QueryRunnerAlreadyReleasedError_1.QueryRunnerAlreadyReleasedError();\n        return new Promise(function (ok, fail) { return __awaiter(_this, void 0, void 0, function () {\n            var databaseConnection, stream, err_2;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this.connect()];\n                    case 1:\n                        databaseConnection = _a.sent();\n                        this.driver.connection.logger.logQuery(query, parameters, this);\n                        stream = databaseConnection.query(new QueryStream(query, parameters));\n                        if (onEnd)\n                            stream.on(\"end\", onEnd);\n                        if (onError)\n                            stream.on(\"error\", onError);\n                        ok(stream);\n                        return [3 /*break*/, 3];\n                    case 2:\n                        err_2 = _a.sent();\n                        fail(err_2);\n                        return [3 /*break*/, 3];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        }); });\n    };\n    /**\n     * Returns all available database names including system databases.\n     */\n    PostgresQueryRunner.prototype.getDatabases = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, Promise.resolve([])];\n            });\n        });\n    };\n    /**\n     * Returns all available schema names including system schemas.\n     * If database parameter specified, returns schemas of that database.\n     */\n    PostgresQueryRunner.prototype.getSchemas = function (database) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, Promise.resolve([])];\n            });\n        });\n    };\n    /**\n     * Checks if database with the given name exist.\n     */\n    PostgresQueryRunner.prototype.hasDatabase = function (database) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, Promise.resolve(false)];\n            });\n        });\n    };\n    /**\n     * Checks if schema with the given name exist.\n     */\n    PostgresQueryRunner.prototype.hasSchema = function (schema) {\n        return __awaiter(this, void 0, void 0, function () {\n            var result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.query(\"SELECT * FROM \\\"information_schema\\\".\\\"schemata\\\" WHERE \\\"schema_name\\\" = '\" + schema + \"'\")];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, result.length ? true : false];\n                }\n            });\n        });\n    };\n    /**\n     * Checks if table with the given name exist in the database.\n     */\n    PostgresQueryRunner.prototype.hasTable = function (tableOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var parsedTableName, sql, result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        parsedTableName = this.parseTableName(tableOrName);\n                        sql = \"SELECT * FROM \\\"information_schema\\\".\\\"tables\\\" WHERE \\\"table_schema\\\" = \" + parsedTableName.schema + \" AND \\\"table_name\\\" = \" + parsedTableName.tableName;\n                        return [4 /*yield*/, this.query(sql)];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, result.length ? true : false];\n                }\n            });\n        });\n    };\n    /**\n     * Checks if column with the given name exist in the given table.\n     */\n    PostgresQueryRunner.prototype.hasColumn = function (tableOrName, columnName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var parsedTableName, sql, result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        parsedTableName = this.parseTableName(tableOrName);\n                        sql = \"SELECT * FROM \\\"information_schema\\\".\\\"columns\\\" WHERE \\\"table_schema\\\" = \" + parsedTableName.schema + \" AND \\\"table_name\\\" = \" + parsedTableName.tableName + \" AND \\\"column_name\\\" = '\" + columnName + \"'\";\n                        return [4 /*yield*/, this.query(sql)];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, result.length ? true : false];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new database.\n     * Postgres does not supports database creation inside a transaction block.\n     */\n    PostgresQueryRunner.prototype.createDatabase = function (database, ifNotExist) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, Promise.resolve()];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops database.\n     * Postgres does not supports database drop inside a transaction block.\n     */\n    PostgresQueryRunner.prototype.dropDatabase = function (database, ifExist) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, Promise.resolve()];\n            });\n        });\n    };\n    /**\n     * Creates a new table schema.\n     */\n    PostgresQueryRunner.prototype.createSchema = function (schema, ifNotExist) {\n        return __awaiter(this, void 0, void 0, function () {\n            var up, down;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        up = ifNotExist ? \"CREATE SCHEMA IF NOT EXISTS \\\"\" + schema + \"\\\"\" : \"CREATE SCHEMA \\\"\" + schema + \"\\\"\";\n                        down = \"DROP SCHEMA \\\"\" + schema + \"\\\" CASCADE\";\n                        return [4 /*yield*/, this.executeQueries(up, down)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops table schema.\n     */\n    PostgresQueryRunner.prototype.dropSchema = function (schemaPath, ifExist, isCascade) {\n        return __awaiter(this, void 0, void 0, function () {\n            var schema, up, down;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        schema = schemaPath.indexOf(\".\") === -1 ? schemaPath : schemaPath.split(\".\")[0];\n                        up = ifExist ? \"DROP SCHEMA IF EXISTS \\\"\" + schema + \"\\\" \" + (isCascade ? \"CASCADE\" : \"\") : \"DROP SCHEMA \\\"\" + schema + \"\\\" \" + (isCascade ? \"CASCADE\" : \"\");\n                        down = \"CREATE SCHEMA \\\"\" + schema + \"\\\"\";\n                        return [4 /*yield*/, this.executeQueries(up, down)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new table.\n     */\n    PostgresQueryRunner.prototype.createTable = function (table, ifNotExist, createForeignKeys, createIndices) {\n        if (ifNotExist === void 0) { ifNotExist = false; }\n        if (createForeignKeys === void 0) { createForeignKeys = true; }\n        if (createIndices === void 0) { createIndices = true; }\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var isTableExist, upQueries, downQueries;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!ifNotExist) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.hasTable(table)];\n                    case 1:\n                        isTableExist = _a.sent();\n                        if (isTableExist)\n                            return [2 /*return*/, Promise.resolve()];\n                        _a.label = 2;\n                    case 2:\n                        upQueries = [];\n                        downQueries = [];\n                        // if table have column with ENUM type, we must create this type in postgres.\n                        return [4 /*yield*/, Promise.all(table.columns\n                                .filter(function (column) { return column.type === \"enum\"; })\n                                .map(function (column) { return __awaiter(_this, void 0, void 0, function () {\n                                var hasEnum;\n                                return __generator(this, function (_a) {\n                                    switch (_a.label) {\n                                        case 0: return [4 /*yield*/, this.hasEnumType(table, column)];\n                                        case 1:\n                                            hasEnum = _a.sent();\n                                            if (!hasEnum) {\n                                                upQueries.push(this.createEnumTypeSql(table, column));\n                                                downQueries.push(this.dropEnumTypeSql(table, column));\n                                            }\n                                            return [2 /*return*/, Promise.resolve()];\n                                    }\n                                });\n                            }); }))];\n                    case 3:\n                        // if table have column with ENUM type, we must create this type in postgres.\n                        _a.sent();\n                        upQueries.push(this.createTableSql(table, createForeignKeys));\n                        downQueries.push(this.dropTableSql(table));\n                        // if createForeignKeys is true, we must drop created foreign keys in down query.\n                        // createTable does not need separate method to create foreign keys, because it create fk's in the same query with table creation.\n                        if (createForeignKeys)\n                            table.foreignKeys.forEach(function (foreignKey) { return downQueries.push(_this.dropForeignKeySql(table, foreignKey)); });\n                        if (createIndices) {\n                            table.indices.forEach(function (index) {\n                                // new index may be passed without name. In this case we generate index name manually.\n                                if (!index.name)\n                                    index.name = _this.connection.namingStrategy.indexName(table.name, index.columnNames, index.where);\n                                upQueries.push(_this.createIndexSql(table, index));\n                                downQueries.push(_this.dropIndexSql(table, index));\n                            });\n                        }\n                        return [4 /*yield*/, this.executeQueries(upQueries, downQueries)];\n                    case 4:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops the table.\n     */\n    PostgresQueryRunner.prototype.dropTable = function (target, ifExist, dropForeignKeys, dropIndices) {\n        if (dropForeignKeys === void 0) { dropForeignKeys = true; }\n        if (dropIndices === void 0) { dropIndices = true; }\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var isTableExist, createForeignKeys, tableName, table, upQueries, downQueries;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!ifExist) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.hasTable(target)];\n                    case 1:\n                        isTableExist = _a.sent();\n                        if (!isTableExist)\n                            return [2 /*return*/, Promise.resolve()];\n                        _a.label = 2;\n                    case 2:\n                        createForeignKeys = dropForeignKeys;\n                        tableName = target instanceof Table_1.Table ? target.name : target;\n                        return [4 /*yield*/, this.getCachedTable(tableName)];\n                    case 3:\n                        table = _a.sent();\n                        upQueries = [];\n                        downQueries = [];\n                        if (dropIndices) {\n                            table.indices.forEach(function (index) {\n                                upQueries.push(_this.dropIndexSql(table, index));\n                                downQueries.push(_this.createIndexSql(table, index));\n                            });\n                        }\n                        if (dropForeignKeys)\n                            table.foreignKeys.forEach(function (foreignKey) { return upQueries.push(_this.dropForeignKeySql(table, foreignKey)); });\n                        upQueries.push(this.dropTableSql(table));\n                        downQueries.push(this.createTableSql(table, createForeignKeys));\n                        return [4 /*yield*/, this.executeQueries(upQueries, downQueries)];\n                    case 4:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Renames the given table.\n     */\n    PostgresQueryRunner.prototype.renameTable = function (oldTableOrName, newTableName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var upQueries, downQueries, oldTable, _a, newTable, oldTableName, schemaName, columnNames, oldPkName, newPkName;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        upQueries = [];\n                        downQueries = [];\n                        if (!(oldTableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = oldTableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(oldTableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        oldTable = _a;\n                        newTable = oldTable.clone();\n                        oldTableName = oldTable.name.indexOf(\".\") === -1 ? oldTable.name : oldTable.name.split(\".\")[1];\n                        schemaName = oldTable.name.indexOf(\".\") === -1 ? undefined : oldTable.name.split(\".\")[0];\n                        newTable.name = schemaName ? schemaName + \".\" + newTableName : newTableName;\n                        upQueries.push(\"ALTER TABLE \" + this.escapeTableName(oldTable) + \" RENAME TO \\\"\" + newTableName + \"\\\"\");\n                        downQueries.push(\"ALTER TABLE \" + this.escapeTableName(newTable) + \" RENAME TO \\\"\" + oldTableName + \"\\\"\");\n                        // rename column primary key constraint\n                        if (newTable.primaryColumns.length > 0) {\n                            columnNames = newTable.primaryColumns.map(function (column) { return column.name; });\n                            oldPkName = this.connection.namingStrategy.primaryKeyName(oldTable, columnNames);\n                            newPkName = this.connection.namingStrategy.primaryKeyName(newTable, columnNames);\n                            upQueries.push(\"ALTER TABLE \" + this.escapeTableName(newTable) + \" RENAME CONSTRAINT \\\"\" + oldPkName + \"\\\" TO \\\"\" + newPkName + \"\\\"\");\n                            downQueries.push(\"ALTER TABLE \" + this.escapeTableName(newTable) + \" RENAME CONSTRAINT \\\"\" + newPkName + \"\\\" TO \\\"\" + oldPkName + \"\\\"\");\n                        }\n                        // rename unique constraints\n                        newTable.uniques.forEach(function (unique) {\n                            // build new constraint name\n                            var newUniqueName = _this.connection.namingStrategy.uniqueConstraintName(newTable, unique.columnNames);\n                            // build queries\n                            upQueries.push(\"ALTER TABLE \" + _this.escapeTableName(newTable) + \" RENAME CONSTRAINT \\\"\" + unique.name + \"\\\" TO \\\"\" + newUniqueName + \"\\\"\");\n                            downQueries.push(\"ALTER TABLE \" + _this.escapeTableName(newTable) + \" RENAME CONSTRAINT \\\"\" + newUniqueName + \"\\\" TO \\\"\" + unique.name + \"\\\"\");\n                            // replace constraint name\n                            unique.name = newUniqueName;\n                        });\n                        // rename index constraints\n                        newTable.indices.forEach(function (index) {\n                            // build new constraint name\n                            var schema = _this.extractSchema(newTable);\n                            var newIndexName = _this.connection.namingStrategy.indexName(newTable, index.columnNames, index.where);\n                            // build queries\n                            var up = schema ? \"ALTER INDEX \\\"\" + schema + \"\\\".\\\"\" + index.name + \"\\\" RENAME TO \\\"\" + newIndexName + \"\\\"\" : \"ALTER INDEX \\\"\" + index.name + \"\\\" RENAME TO \\\"\" + newIndexName + \"\\\"\";\n                            var down = schema ? \"ALTER INDEX \\\"\" + schema + \"\\\".\\\"\" + newIndexName + \"\\\" RENAME TO \\\"\" + index.name + \"\\\"\" : \"ALTER INDEX \\\"\" + newIndexName + \"\\\" RENAME TO \\\"\" + index.name + \"\\\"\";\n                            upQueries.push(up);\n                            downQueries.push(down);\n                            // replace constraint name\n                            index.name = newIndexName;\n                        });\n                        // rename foreign key constraints\n                        newTable.foreignKeys.forEach(function (foreignKey) {\n                            // build new constraint name\n                            var newForeignKeyName = _this.connection.namingStrategy.foreignKeyName(newTable, foreignKey.columnNames);\n                            // build queries\n                            upQueries.push(\"ALTER TABLE \" + _this.escapeTableName(newTable) + \" RENAME CONSTRAINT \\\"\" + foreignKey.name + \"\\\" TO \\\"\" + newForeignKeyName + \"\\\"\");\n                            downQueries.push(\"ALTER TABLE \" + _this.escapeTableName(newTable) + \" RENAME CONSTRAINT \\\"\" + newForeignKeyName + \"\\\" TO \\\"\" + foreignKey.name + \"\\\"\");\n                            // replace constraint name\n                            foreignKey.name = newForeignKeyName;\n                        });\n                        // rename ENUM types\n                        newTable.columns\n                            .filter(function (column) { return column.type === \"enum\"; })\n                            .forEach(function (column) {\n                            upQueries.push(\"ALTER TYPE \" + _this.buildEnumName(oldTable, column) + \" RENAME TO \" + _this.buildEnumName(newTable, column, false));\n                            downQueries.push(\"ALTER TYPE \" + _this.buildEnumName(newTable, column) + \" RENAME TO \" + _this.buildEnumName(oldTable, column, false));\n                        });\n                        return [4 /*yield*/, this.executeQueries(upQueries, downQueries)];\n                    case 4:\n                        _b.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new column from the column in the table.\n     */\n    PostgresQueryRunner.prototype.addColumn = function (tableOrName, column) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, clonedTable, upQueries, downQueries, hasEnum, primaryColumns, pkName_1, columnNames_1, pkName, columnNames, columnIndex, uniqueConstraint;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        clonedTable = table.clone();\n                        upQueries = [];\n                        downQueries = [];\n                        if (!(column.type === \"enum\")) return [3 /*break*/, 5];\n                        return [4 /*yield*/, this.hasEnumType(table, column)];\n                    case 4:\n                        hasEnum = _b.sent();\n                        if (!hasEnum) {\n                            upQueries.push(this.createEnumTypeSql(table, column));\n                            downQueries.push(this.dropEnumTypeSql(table, column));\n                        }\n                        _b.label = 5;\n                    case 5:\n                        upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ADD \" + this.buildCreateColumnSql(table, column));\n                        downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" DROP COLUMN \\\"\" + column.name + \"\\\"\");\n                        // create or update primary key constraint\n                        if (column.isPrimary) {\n                            primaryColumns = clonedTable.primaryColumns;\n                            // if table already have primary key, me must drop it and recreate again\n                            if (primaryColumns.length > 0) {\n                                pkName_1 = this.connection.namingStrategy.primaryKeyName(clonedTable.name, primaryColumns.map(function (column) { return column.name; }));\n                                columnNames_1 = primaryColumns.map(function (column) { return \"\\\"\" + column.name + \"\\\"\"; }).join(\", \");\n                                upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" DROP CONSTRAINT \\\"\" + pkName_1 + \"\\\"\");\n                                downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ADD CONSTRAINT \\\"\" + pkName_1 + \"\\\" PRIMARY KEY (\" + columnNames_1 + \")\");\n                            }\n                            primaryColumns.push(column);\n                            pkName = this.connection.namingStrategy.primaryKeyName(clonedTable.name, primaryColumns.map(function (column) { return column.name; }));\n                            columnNames = primaryColumns.map(function (column) { return \"\\\"\" + column.name + \"\\\"\"; }).join(\", \");\n                            upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ADD CONSTRAINT \\\"\" + pkName + \"\\\" PRIMARY KEY (\" + columnNames + \")\");\n                            downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" DROP CONSTRAINT \\\"\" + pkName + \"\\\"\");\n                        }\n                        columnIndex = clonedTable.indices.find(function (index) { return index.columnNames.length === 1 && index.columnNames[0] === column.name; });\n                        if (columnIndex) {\n                            upQueries.push(this.createIndexSql(table, columnIndex));\n                            downQueries.push(this.dropIndexSql(table, columnIndex));\n                        }\n                        // create unique constraint\n                        if (column.isUnique) {\n                            uniqueConstraint = new TableUnique_1.TableUnique({\n                                name: this.connection.namingStrategy.uniqueConstraintName(table.name, [column.name]),\n                                columnNames: [column.name]\n                            });\n                            clonedTable.uniques.push(uniqueConstraint);\n                            upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ADD CONSTRAINT \\\"\" + uniqueConstraint.name + \"\\\" UNIQUE (\\\"\" + column.name + \"\\\")\");\n                            downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" DROP CONSTRAINT \\\"\" + uniqueConstraint.name + \"\\\"\");\n                        }\n                        return [4 /*yield*/, this.executeQueries(upQueries, downQueries)];\n                    case 6:\n                        _b.sent();\n                        clonedTable.addColumn(column);\n                        this.replaceCachedTable(table, clonedTable);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new columns from the column in the table.\n     */\n    PostgresQueryRunner.prototype.addColumns = function (tableOrName, columns) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, _1.PromiseUtils.runInSequence(columns, function (column) { return _this.addColumn(tableOrName, column); })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Renames column in the given table.\n     */\n    PostgresQueryRunner.prototype.renameColumn = function (tableOrName, oldTableColumnOrName, newTableColumnOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, oldColumn, newColumn;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        oldColumn = oldTableColumnOrName instanceof TableColumn_1.TableColumn ? oldTableColumnOrName : table.columns.find(function (c) { return c.name === oldTableColumnOrName; });\n                        if (!oldColumn)\n                            throw new Error(\"Column \\\"\" + oldTableColumnOrName + \"\\\" was not found in the \\\"\" + table.name + \"\\\" table.\");\n                        if (newTableColumnOrName instanceof TableColumn_1.TableColumn) {\n                            newColumn = newTableColumnOrName;\n                        }\n                        else {\n                            newColumn = oldColumn.clone();\n                            newColumn.name = newTableColumnOrName;\n                        }\n                        return [2 /*return*/, this.changeColumn(table, oldColumn, newColumn)];\n                }\n            });\n        });\n    };\n    /**\n     * Changes a column in the table.\n     */\n    PostgresQueryRunner.prototype.changeColumn = function (tableOrName, oldTableColumnOrName, newColumn) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var table, _a, clonedTable, upQueries, downQueries, oldColumn, primaryColumns, columnNames, oldPkName, newPkName, schema, seqName, newSeqName, up, down, oldTableColumn, enumName, enumNameWithoutSchema, oldEnumName, oldEnumNameWithoutSchema, upType, downType, primaryColumns, pkName, columnNames, column, pkName, columnNames, primaryColumn, column, pkName, columnNames, uniqueConstraint, uniqueConstraint;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        clonedTable = table.clone();\n                        upQueries = [];\n                        downQueries = [];\n                        oldColumn = oldTableColumnOrName instanceof TableColumn_1.TableColumn\n                            ? oldTableColumnOrName\n                            : table.columns.find(function (column) { return column.name === oldTableColumnOrName; });\n                        if (!oldColumn)\n                            throw new Error(\"Column \\\"\" + oldTableColumnOrName + \"\\\" was not found in the \\\"\" + table.name + \"\\\" table.\");\n                        if (!(oldColumn.type !== newColumn.type || oldColumn.length !== newColumn.length)) return [3 /*break*/, 6];\n                        // To avoid data conversion, we just recreate column\n                        return [4 /*yield*/, this.dropColumn(table, oldColumn)];\n                    case 4:\n                        // To avoid data conversion, we just recreate column\n                        _b.sent();\n                        return [4 /*yield*/, this.addColumn(table, newColumn)];\n                    case 5:\n                        _b.sent();\n                        // update cloned table\n                        clonedTable = table.clone();\n                        return [3 /*break*/, 7];\n                    case 6:\n                        if (oldColumn.name !== newColumn.name) {\n                            // rename column\n                            upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" RENAME COLUMN \\\"\" + oldColumn.name + \"\\\" TO \\\"\" + newColumn.name + \"\\\"\");\n                            downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" RENAME COLUMN \\\"\" + newColumn.name + \"\\\" TO \\\"\" + oldColumn.name + \"\\\"\");\n                            // rename ENUM type\n                            if (oldColumn.type === \"enum\") {\n                                upQueries.push(\"ALTER TYPE \" + this.buildEnumName(table, oldColumn) + \" RENAME TO \" + this.buildEnumName(table, newColumn, false));\n                                downQueries.push(\"ALTER TYPE \" + this.buildEnumName(table, newColumn) + \" RENAME TO \" + this.buildEnumName(table, oldColumn, false));\n                            }\n                            // rename column primary key constraint\n                            if (oldColumn.isPrimary === true) {\n                                primaryColumns = clonedTable.primaryColumns;\n                                columnNames = primaryColumns.map(function (column) { return column.name; });\n                                oldPkName = this.connection.namingStrategy.primaryKeyName(clonedTable, columnNames);\n                                // replace old column name with new column name\n                                columnNames.splice(columnNames.indexOf(oldColumn.name), 1);\n                                columnNames.push(newColumn.name);\n                                newPkName = this.connection.namingStrategy.primaryKeyName(clonedTable, columnNames);\n                                upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" RENAME CONSTRAINT \\\"\" + oldPkName + \"\\\" TO \\\"\" + newPkName + \"\\\"\");\n                                downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" RENAME CONSTRAINT \\\"\" + newPkName + \"\\\" TO \\\"\" + oldPkName + \"\\\"\");\n                            }\n                            // rename column sequence\n                            if (oldColumn.isGenerated === true && newColumn.generationStrategy === \"increment\") {\n                                schema = this.extractSchema(table);\n                                seqName = this.buildSequenceName(table, oldColumn.name, undefined, true, true);\n                                newSeqName = this.buildSequenceName(table, newColumn.name, undefined, true, true);\n                                up = schema ? \"ALTER SEQUENCE \\\"\" + schema + \"\\\".\\\"\" + seqName + \"\\\" RENAME TO \\\"\" + newSeqName + \"\\\"\" : \"ALTER SEQUENCE \\\"\" + seqName + \"\\\" RENAME TO \\\"\" + newSeqName + \"\\\"\";\n                                down = schema ? \"ALTER SEQUENCE \\\"\" + schema + \"\\\".\\\"\" + newSeqName + \"\\\" RENAME TO \\\"\" + seqName + \"\\\"\" : \"ALTER SEQUENCE \\\"\" + newSeqName + \"\\\" RENAME TO \\\"\" + seqName + \"\\\"\";\n                                upQueries.push(up);\n                                downQueries.push(down);\n                            }\n                            // rename unique constraints\n                            clonedTable.findColumnUniques(oldColumn).forEach(function (unique) {\n                                // build new constraint name\n                                unique.columnNames.splice(unique.columnNames.indexOf(oldColumn.name), 1);\n                                unique.columnNames.push(newColumn.name);\n                                var newUniqueName = _this.connection.namingStrategy.uniqueConstraintName(clonedTable, unique.columnNames);\n                                // build queries\n                                upQueries.push(\"ALTER TABLE \" + _this.escapeTableName(table) + \" RENAME CONSTRAINT \\\"\" + unique.name + \"\\\" TO \\\"\" + newUniqueName + \"\\\"\");\n                                downQueries.push(\"ALTER TABLE \" + _this.escapeTableName(table) + \" RENAME CONSTRAINT \\\"\" + newUniqueName + \"\\\" TO \\\"\" + unique.name + \"\\\"\");\n                                // replace constraint name\n                                unique.name = newUniqueName;\n                            });\n                            // rename index constraints\n                            clonedTable.findColumnIndices(oldColumn).forEach(function (index) {\n                                // build new constraint name\n                                index.columnNames.splice(index.columnNames.indexOf(oldColumn.name), 1);\n                                index.columnNames.push(newColumn.name);\n                                var schema = _this.extractSchema(table);\n                                var newIndexName = _this.connection.namingStrategy.indexName(clonedTable, index.columnNames, index.where);\n                                // build queries\n                                var up = schema ? \"ALTER INDEX \\\"\" + schema + \"\\\".\\\"\" + index.name + \"\\\" RENAME TO \\\"\" + newIndexName + \"\\\"\" : \"ALTER INDEX \\\"\" + index.name + \"\\\" RENAME TO \\\"\" + newIndexName + \"\\\"\";\n                                var down = schema ? \"ALTER INDEX \\\"\" + schema + \"\\\".\\\"\" + newIndexName + \"\\\" RENAME TO \\\"\" + index.name + \"\\\"\" : \"ALTER INDEX \\\"\" + newIndexName + \"\\\" RENAME TO \\\"\" + index.name + \"\\\"\";\n                                upQueries.push(up);\n                                downQueries.push(down);\n                                // replace constraint name\n                                index.name = newIndexName;\n                            });\n                            // rename foreign key constraints\n                            clonedTable.findColumnForeignKeys(oldColumn).forEach(function (foreignKey) {\n                                // build new constraint name\n                                foreignKey.columnNames.splice(foreignKey.columnNames.indexOf(oldColumn.name), 1);\n                                foreignKey.columnNames.push(newColumn.name);\n                                var newForeignKeyName = _this.connection.namingStrategy.foreignKeyName(clonedTable, foreignKey.columnNames);\n                                // build queries\n                                upQueries.push(\"ALTER TABLE \" + _this.escapeTableName(table) + \" RENAME CONSTRAINT \\\"\" + foreignKey.name + \"\\\" TO \\\"\" + newForeignKeyName + \"\\\"\");\n                                downQueries.push(\"ALTER TABLE \" + _this.escapeTableName(table) + \" RENAME CONSTRAINT \\\"\" + newForeignKeyName + \"\\\" TO \\\"\" + foreignKey.name + \"\\\"\");\n                                // replace constraint name\n                                foreignKey.name = newForeignKeyName;\n                            });\n                            oldTableColumn = clonedTable.columns.find(function (column) { return column.name === oldColumn.name; });\n                            clonedTable.columns[clonedTable.columns.indexOf(oldTableColumn)].name = newColumn.name;\n                            oldColumn.name = newColumn.name;\n                        }\n                        if (newColumn.precision !== oldColumn.precision || newColumn.scale !== oldColumn.scale) {\n                            upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ALTER COLUMN \\\"\" + newColumn.name + \"\\\" TYPE \" + this.driver.createFullType(newColumn));\n                            downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ALTER COLUMN \\\"\" + newColumn.name + \"\\\" TYPE \" + this.driver.createFullType(oldColumn));\n                        }\n                        if (newColumn.type === \"enum\" && oldColumn.type === \"enum\" && !OrmUtils_1.OrmUtils.isArraysEqual(newColumn.enum, oldColumn.enum)) {\n                            enumName = this.buildEnumName(table, newColumn);\n                            enumNameWithoutSchema = this.buildEnumName(table, newColumn, false);\n                            oldEnumName = this.buildEnumName(table, newColumn, true, false, true);\n                            oldEnumNameWithoutSchema = this.buildEnumName(table, newColumn, false, false, true);\n                            // rename old ENUM\n                            upQueries.push(\"ALTER TYPE \" + enumName + \" RENAME TO \" + oldEnumNameWithoutSchema);\n                            downQueries.push(\"ALTER TYPE \" + oldEnumName + \" RENAME TO \" + enumNameWithoutSchema);\n                            // create new ENUM\n                            upQueries.push(this.createEnumTypeSql(table, newColumn));\n                            downQueries.push(this.dropEnumTypeSql(table, oldColumn));\n                            // if column have default value, we must drop it to avoid issues with type casting\n                            if (newColumn.default !== null && newColumn.default !== undefined) {\n                                upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ALTER COLUMN \\\"\" + newColumn.name + \"\\\" DROP DEFAULT\");\n                                downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ALTER COLUMN \\\"\" + newColumn.name + \"\\\" SET DEFAULT \" + newColumn.default);\n                            }\n                            upType = enumNameWithoutSchema + \" USING \\\"\" + newColumn.name + \"\\\"::\\\"text\\\"::\" + enumNameWithoutSchema;\n                            downType = oldEnumNameWithoutSchema + \" USING \\\"\" + newColumn.name + \"\\\"::\\\"text\\\"::\" + oldEnumNameWithoutSchema;\n                            // update column to use new type\n                            upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ALTER COLUMN \\\"\" + newColumn.name + \"\\\" TYPE \" + upType);\n                            downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ALTER COLUMN \\\"\" + newColumn.name + \"\\\" TYPE \" + downType);\n                            // if column have default value and we dropped it before, we must bring it back\n                            if (newColumn.default !== null && newColumn.default !== undefined) {\n                                upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ALTER COLUMN \\\"\" + newColumn.name + \"\\\" SET DEFAULT \" + newColumn.default);\n                                downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ALTER COLUMN \\\"\" + newColumn.name + \"\\\" DROP DEFAULT\");\n                            }\n                            // remove old ENUM\n                            upQueries.push(this.dropEnumTypeSql(table, newColumn, oldEnumName));\n                            downQueries.push(this.createEnumTypeSql(table, oldColumn, oldEnumName));\n                        }\n                        if (oldColumn.isNullable !== newColumn.isNullable) {\n                            if (newColumn.isNullable) {\n                                upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ALTER COLUMN \\\"\" + oldColumn.name + \"\\\" DROP NOT NULL\");\n                                downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ALTER COLUMN \\\"\" + oldColumn.name + \"\\\" SET NOT NULL\");\n                            }\n                            else {\n                                upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ALTER COLUMN \\\"\" + oldColumn.name + \"\\\" SET NOT NULL\");\n                                downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ALTER COLUMN \\\"\" + oldColumn.name + \"\\\" DROP NOT NULL\");\n                            }\n                        }\n                        if (oldColumn.comment !== newColumn.comment) {\n                            upQueries.push(\"COMMENT ON COLUMN \" + this.escapeTableName(table) + \".\\\"\" + oldColumn.name + \"\\\" IS '\" + newColumn.comment + \"'\");\n                            downQueries.push(\"COMMENT ON COLUMN \" + this.escapeTableName(table) + \".\\\"\" + newColumn.name + \"\\\" IS '\" + oldColumn.comment + \"'\");\n                        }\n                        if (newColumn.isPrimary !== oldColumn.isPrimary) {\n                            primaryColumns = clonedTable.primaryColumns;\n                            // if primary column state changed, we must always drop existed constraint.\n                            if (primaryColumns.length > 0) {\n                                pkName = this.connection.namingStrategy.primaryKeyName(clonedTable.name, primaryColumns.map(function (column) { return column.name; }));\n                                columnNames = primaryColumns.map(function (column) { return \"\\\"\" + column.name + \"\\\"\"; }).join(\", \");\n                                upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" DROP CONSTRAINT \\\"\" + pkName + \"\\\"\");\n                                downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ADD CONSTRAINT \\\"\" + pkName + \"\\\" PRIMARY KEY (\" + columnNames + \")\");\n                            }\n                            if (newColumn.isPrimary === true) {\n                                primaryColumns.push(newColumn);\n                                column = clonedTable.columns.find(function (column) { return column.name === newColumn.name; });\n                                column.isPrimary = true;\n                                pkName = this.connection.namingStrategy.primaryKeyName(clonedTable.name, primaryColumns.map(function (column) { return column.name; }));\n                                columnNames = primaryColumns.map(function (column) { return \"\\\"\" + column.name + \"\\\"\"; }).join(\", \");\n                                upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ADD CONSTRAINT \\\"\" + pkName + \"\\\" PRIMARY KEY (\" + columnNames + \")\");\n                                downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" DROP CONSTRAINT \\\"\" + pkName + \"\\\"\");\n                            }\n                            else {\n                                primaryColumn = primaryColumns.find(function (c) { return c.name === newColumn.name; });\n                                primaryColumns.splice(primaryColumns.indexOf(primaryColumn), 1);\n                                column = clonedTable.columns.find(function (column) { return column.name === newColumn.name; });\n                                column.isPrimary = false;\n                                // if we have another primary keys, we must recreate constraint.\n                                if (primaryColumns.length > 0) {\n                                    pkName = this.connection.namingStrategy.primaryKeyName(clonedTable.name, primaryColumns.map(function (column) { return column.name; }));\n                                    columnNames = primaryColumns.map(function (column) { return \"\\\"\" + column.name + \"\\\"\"; }).join(\", \");\n                                    upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ADD CONSTRAINT \\\"\" + pkName + \"\\\" PRIMARY KEY (\" + columnNames + \")\");\n                                    downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" DROP CONSTRAINT \\\"\" + pkName + \"\\\"\");\n                                }\n                            }\n                        }\n                        if (newColumn.isUnique !== oldColumn.isUnique) {\n                            if (newColumn.isUnique === true) {\n                                uniqueConstraint = new TableUnique_1.TableUnique({\n                                    name: this.connection.namingStrategy.uniqueConstraintName(table.name, [newColumn.name]),\n                                    columnNames: [newColumn.name]\n                                });\n                                clonedTable.uniques.push(uniqueConstraint);\n                                upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ADD CONSTRAINT \\\"\" + uniqueConstraint.name + \"\\\" UNIQUE (\\\"\" + newColumn.name + \"\\\")\");\n                                downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" DROP CONSTRAINT \\\"\" + uniqueConstraint.name + \"\\\"\");\n                            }\n                            else {\n                                uniqueConstraint = clonedTable.uniques.find(function (unique) {\n                                    return unique.columnNames.length === 1 && !!unique.columnNames.find(function (columnName) { return columnName === newColumn.name; });\n                                });\n                                clonedTable.uniques.splice(clonedTable.uniques.indexOf(uniqueConstraint), 1);\n                                upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" DROP CONSTRAINT \\\"\" + uniqueConstraint.name + \"\\\"\");\n                                downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ADD CONSTRAINT \\\"\" + uniqueConstraint.name + \"\\\" UNIQUE (\\\"\" + newColumn.name + \"\\\")\");\n                            }\n                        }\n                        if (oldColumn.isGenerated !== newColumn.isGenerated && newColumn.generationStrategy !== \"uuid\") {\n                            if (newColumn.isGenerated === true) {\n                                upQueries.push(\"CREATE SEQUENCE \" + this.buildSequenceName(table, newColumn) + \" OWNED BY \" + this.escapeTableName(table) + \".\\\"\" + newColumn.name + \"\\\"\");\n                                downQueries.push(\"DROP SEQUENCE \" + this.buildSequenceName(table, newColumn));\n                                upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ALTER COLUMN \\\"\" + newColumn.name + \"\\\" SET DEFAULT nextval('\" + this.buildSequenceName(table, newColumn, undefined, true) + \"')\");\n                                downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ALTER COLUMN \\\"\" + newColumn.name + \"\\\" DROP DEFAULT\");\n                            }\n                            else {\n                                upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ALTER COLUMN \\\"\" + newColumn.name + \"\\\" DROP DEFAULT\");\n                                downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ALTER COLUMN \\\"\" + newColumn.name + \"\\\" SET DEFAULT nextval('\" + this.buildSequenceName(table, newColumn, undefined, true) + \"')\");\n                                upQueries.push(\"DROP SEQUENCE \" + this.buildSequenceName(table, newColumn));\n                                downQueries.push(\"CREATE SEQUENCE \" + this.buildSequenceName(table, newColumn) + \" OWNED BY \" + this.escapeTableName(table) + \".\\\"\" + newColumn.name + \"\\\"\");\n                            }\n                        }\n                        if (newColumn.default !== oldColumn.default) {\n                            if (newColumn.default !== null && newColumn.default !== undefined) {\n                                upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ALTER COLUMN \\\"\" + newColumn.name + \"\\\" SET DEFAULT \" + newColumn.default);\n                                if (oldColumn.default !== null && oldColumn.default !== undefined) {\n                                    downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ALTER COLUMN \\\"\" + newColumn.name + \"\\\" SET DEFAULT \" + oldColumn.default);\n                                }\n                                else {\n                                    downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ALTER COLUMN \\\"\" + newColumn.name + \"\\\" DROP DEFAULT\");\n                                }\n                            }\n                            else if (oldColumn.default !== null && oldColumn.default !== undefined) {\n                                upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ALTER COLUMN \\\"\" + newColumn.name + \"\\\" DROP DEFAULT\");\n                                downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ALTER COLUMN \\\"\" + newColumn.name + \"\\\" SET DEFAULT \" + oldColumn.default);\n                            }\n                        }\n                        if ((newColumn.spatialFeatureType || \"\").toLowerCase() !== (oldColumn.spatialFeatureType || \"\").toLowerCase() || newColumn.srid !== oldColumn.srid) {\n                            upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ALTER COLUMN \\\"\" + newColumn.name + \"\\\" TYPE \" + this.driver.createFullType(newColumn));\n                            downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ALTER COLUMN \\\"\" + newColumn.name + \"\\\" TYPE \" + this.driver.createFullType(oldColumn));\n                        }\n                        _b.label = 7;\n                    case 7: return [4 /*yield*/, this.executeQueries(upQueries, downQueries)];\n                    case 8:\n                        _b.sent();\n                        this.replaceCachedTable(table, clonedTable);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Changes a column in the table.\n     */\n    PostgresQueryRunner.prototype.changeColumns = function (tableOrName, changedColumns) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, _1.PromiseUtils.runInSequence(changedColumns, function (changedColumn) { return _this.changeColumn(tableOrName, changedColumn.oldColumn, changedColumn.newColumn); })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops column in the table.\n     */\n    PostgresQueryRunner.prototype.dropColumn = function (tableOrName, columnOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, column, clonedTable, upQueries, downQueries, pkName, columnNames, tableColumn, pkName_2, columnNames_2, columnIndex, columnCheck, columnUnique, hasEnum;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        column = columnOrName instanceof TableColumn_1.TableColumn ? columnOrName : table.findColumnByName(columnOrName);\n                        if (!column)\n                            throw new Error(\"Column \\\"\" + columnOrName + \"\\\" was not found in table \\\"\" + table.name + \"\\\"\");\n                        clonedTable = table.clone();\n                        upQueries = [];\n                        downQueries = [];\n                        // drop primary key constraint\n                        if (column.isPrimary) {\n                            pkName = this.connection.namingStrategy.primaryKeyName(clonedTable.name, clonedTable.primaryColumns.map(function (column) { return column.name; }));\n                            columnNames = clonedTable.primaryColumns.map(function (primaryColumn) { return \"\\\"\" + primaryColumn.name + \"\\\"\"; }).join(\", \");\n                            upQueries.push(\"ALTER TABLE \" + this.escapeTableName(clonedTable) + \" DROP CONSTRAINT \\\"\" + pkName + \"\\\"\");\n                            downQueries.push(\"ALTER TABLE \" + this.escapeTableName(clonedTable) + \" ADD CONSTRAINT \\\"\" + pkName + \"\\\" PRIMARY KEY (\" + columnNames + \")\");\n                            tableColumn = clonedTable.findColumnByName(column.name);\n                            tableColumn.isPrimary = false;\n                            // if primary key have multiple columns, we must recreate it without dropped column\n                            if (clonedTable.primaryColumns.length > 0) {\n                                pkName_2 = this.connection.namingStrategy.primaryKeyName(clonedTable.name, clonedTable.primaryColumns.map(function (column) { return column.name; }));\n                                columnNames_2 = clonedTable.primaryColumns.map(function (primaryColumn) { return \"\\\"\" + primaryColumn.name + \"\\\"\"; }).join(\", \");\n                                upQueries.push(\"ALTER TABLE \" + this.escapeTableName(clonedTable) + \" ADD CONSTRAINT \\\"\" + pkName_2 + \"\\\" PRIMARY KEY (\" + columnNames_2 + \")\");\n                                downQueries.push(\"ALTER TABLE \" + this.escapeTableName(clonedTable) + \" DROP CONSTRAINT \\\"\" + pkName_2 + \"\\\"\");\n                            }\n                        }\n                        columnIndex = clonedTable.indices.find(function (index) { return index.columnNames.length === 1 && index.columnNames[0] === column.name; });\n                        if (columnIndex) {\n                            clonedTable.indices.splice(clonedTable.indices.indexOf(columnIndex), 1);\n                            upQueries.push(this.dropIndexSql(table, columnIndex));\n                            downQueries.push(this.createIndexSql(table, columnIndex));\n                        }\n                        columnCheck = clonedTable.checks.find(function (check) { return !!check.columnNames && check.columnNames.length === 1 && check.columnNames[0] === column.name; });\n                        if (columnCheck) {\n                            clonedTable.checks.splice(clonedTable.checks.indexOf(columnCheck), 1);\n                            upQueries.push(this.dropCheckConstraintSql(table, columnCheck));\n                            downQueries.push(this.createCheckConstraintSql(table, columnCheck));\n                        }\n                        columnUnique = clonedTable.uniques.find(function (unique) { return unique.columnNames.length === 1 && unique.columnNames[0] === column.name; });\n                        if (columnUnique) {\n                            clonedTable.uniques.splice(clonedTable.uniques.indexOf(columnUnique), 1);\n                            upQueries.push(this.dropUniqueConstraintSql(table, columnUnique));\n                            downQueries.push(this.createUniqueConstraintSql(table, columnUnique));\n                        }\n                        upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" DROP COLUMN \\\"\" + column.name + \"\\\"\");\n                        downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ADD \" + this.buildCreateColumnSql(table, column));\n                        if (!(column.type === \"enum\")) return [3 /*break*/, 5];\n                        return [4 /*yield*/, this.hasEnumType(table, column)];\n                    case 4:\n                        hasEnum = _b.sent();\n                        if (hasEnum) {\n                            upQueries.push(this.dropEnumTypeSql(table, column));\n                            downQueries.push(this.createEnumTypeSql(table, column));\n                        }\n                        _b.label = 5;\n                    case 5: return [4 /*yield*/, this.executeQueries(upQueries, downQueries)];\n                    case 6:\n                        _b.sent();\n                        clonedTable.removeColumn(column);\n                        this.replaceCachedTable(table, clonedTable);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops the columns in the table.\n     */\n    PostgresQueryRunner.prototype.dropColumns = function (tableOrName, columns) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, _1.PromiseUtils.runInSequence(columns, function (column) { return _this.dropColumn(tableOrName, column); })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new primary key.\n     */\n    PostgresQueryRunner.prototype.createPrimaryKey = function (tableOrName, columnNames) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, clonedTable, up, down;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        clonedTable = table.clone();\n                        up = this.createPrimaryKeySql(table, columnNames);\n                        // mark columns as primary, because dropPrimaryKeySql build constraint name from table primary column names.\n                        clonedTable.columns.forEach(function (column) {\n                            if (columnNames.find(function (columnName) { return columnName === column.name; }))\n                                column.isPrimary = true;\n                        });\n                        down = this.dropPrimaryKeySql(clonedTable);\n                        return [4 /*yield*/, this.executeQueries(up, down)];\n                    case 4:\n                        _b.sent();\n                        this.replaceCachedTable(table, clonedTable);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Updates composite primary keys.\n     */\n    PostgresQueryRunner.prototype.updatePrimaryKeys = function (tableOrName, columns) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, clonedTable, columnNames, upQueries, downQueries, primaryColumns, pkName_3, columnNamesString_1, pkName, columnNamesString;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        clonedTable = table.clone();\n                        columnNames = columns.map(function (column) { return column.name; });\n                        upQueries = [];\n                        downQueries = [];\n                        primaryColumns = clonedTable.primaryColumns;\n                        if (primaryColumns.length > 0) {\n                            pkName_3 = this.connection.namingStrategy.primaryKeyName(clonedTable.name, primaryColumns.map(function (column) { return column.name; }));\n                            columnNamesString_1 = primaryColumns.map(function (column) { return \"\\\"\" + column.name + \"\\\"\"; }).join(\", \");\n                            upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" DROP CONSTRAINT \\\"\" + pkName_3 + \"\\\"\");\n                            downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ADD CONSTRAINT \\\"\" + pkName_3 + \"\\\" PRIMARY KEY (\" + columnNamesString_1 + \")\");\n                        }\n                        // update columns in table.\n                        clonedTable.columns\n                            .filter(function (column) { return columnNames.indexOf(column.name) !== -1; })\n                            .forEach(function (column) { return column.isPrimary = true; });\n                        pkName = this.connection.namingStrategy.primaryKeyName(clonedTable.name, columnNames);\n                        columnNamesString = columnNames.map(function (columnName) { return \"\\\"\" + columnName + \"\\\"\"; }).join(\", \");\n                        upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ADD CONSTRAINT \\\"\" + pkName + \"\\\" PRIMARY KEY (\" + columnNamesString + \")\");\n                        downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" DROP CONSTRAINT \\\"\" + pkName + \"\\\"\");\n                        return [4 /*yield*/, this.executeQueries(upQueries, downQueries)];\n                    case 4:\n                        _b.sent();\n                        this.replaceCachedTable(table, clonedTable);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops a primary key.\n     */\n    PostgresQueryRunner.prototype.dropPrimaryKey = function (tableOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, up, down;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        up = this.dropPrimaryKeySql(table);\n                        down = this.createPrimaryKeySql(table, table.primaryColumns.map(function (column) { return column.name; }));\n                        return [4 /*yield*/, this.executeQueries(up, down)];\n                    case 4:\n                        _b.sent();\n                        table.primaryColumns.forEach(function (column) {\n                            column.isPrimary = false;\n                        });\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates new unique constraint.\n     */\n    PostgresQueryRunner.prototype.createUniqueConstraint = function (tableOrName, uniqueConstraint) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, up, down;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        // new unique constraint may be passed without name. In this case we generate unique name manually.\n                        if (!uniqueConstraint.name)\n                            uniqueConstraint.name = this.connection.namingStrategy.uniqueConstraintName(table.name, uniqueConstraint.columnNames);\n                        up = this.createUniqueConstraintSql(table, uniqueConstraint);\n                        down = this.dropUniqueConstraintSql(table, uniqueConstraint);\n                        return [4 /*yield*/, this.executeQueries(up, down)];\n                    case 4:\n                        _b.sent();\n                        table.addUniqueConstraint(uniqueConstraint);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates new unique constraints.\n     */\n    PostgresQueryRunner.prototype.createUniqueConstraints = function (tableOrName, uniqueConstraints) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, _1.PromiseUtils.runInSequence(uniqueConstraints, function (uniqueConstraint) { return _this.createUniqueConstraint(tableOrName, uniqueConstraint); })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops unique constraint.\n     */\n    PostgresQueryRunner.prototype.dropUniqueConstraint = function (tableOrName, uniqueOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, uniqueConstraint, up, down;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        uniqueConstraint = uniqueOrName instanceof TableUnique_1.TableUnique ? uniqueOrName : table.uniques.find(function (u) { return u.name === uniqueOrName; });\n                        if (!uniqueConstraint)\n                            throw new Error(\"Supplied unique constraint was not found in table \" + table.name);\n                        up = this.dropUniqueConstraintSql(table, uniqueConstraint);\n                        down = this.createUniqueConstraintSql(table, uniqueConstraint);\n                        return [4 /*yield*/, this.executeQueries(up, down)];\n                    case 4:\n                        _b.sent();\n                        table.removeUniqueConstraint(uniqueConstraint);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops unique constraints.\n     */\n    PostgresQueryRunner.prototype.dropUniqueConstraints = function (tableOrName, uniqueConstraints) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, _1.PromiseUtils.runInSequence(uniqueConstraints, function (uniqueConstraint) { return _this.dropUniqueConstraint(tableOrName, uniqueConstraint); })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates new check constraint.\n     */\n    PostgresQueryRunner.prototype.createCheckConstraint = function (tableOrName, checkConstraint) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, up, down;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        // new unique constraint may be passed without name. In this case we generate unique name manually.\n                        if (!checkConstraint.name)\n                            checkConstraint.name = this.connection.namingStrategy.checkConstraintName(table.name, checkConstraint.expression);\n                        up = this.createCheckConstraintSql(table, checkConstraint);\n                        down = this.dropCheckConstraintSql(table, checkConstraint);\n                        return [4 /*yield*/, this.executeQueries(up, down)];\n                    case 4:\n                        _b.sent();\n                        table.addCheckConstraint(checkConstraint);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates new check constraints.\n     */\n    PostgresQueryRunner.prototype.createCheckConstraints = function (tableOrName, checkConstraints) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var promises;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        promises = checkConstraints.map(function (checkConstraint) { return _this.createCheckConstraint(tableOrName, checkConstraint); });\n                        return [4 /*yield*/, Promise.all(promises)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops check constraint.\n     */\n    PostgresQueryRunner.prototype.dropCheckConstraint = function (tableOrName, checkOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, checkConstraint, up, down;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        checkConstraint = checkOrName instanceof TableCheck_1.TableCheck ? checkOrName : table.checks.find(function (c) { return c.name === checkOrName; });\n                        if (!checkConstraint)\n                            throw new Error(\"Supplied check constraint was not found in table \" + table.name);\n                        up = this.dropCheckConstraintSql(table, checkConstraint);\n                        down = this.createCheckConstraintSql(table, checkConstraint);\n                        return [4 /*yield*/, this.executeQueries(up, down)];\n                    case 4:\n                        _b.sent();\n                        table.removeCheckConstraint(checkConstraint);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops check constraints.\n     */\n    PostgresQueryRunner.prototype.dropCheckConstraints = function (tableOrName, checkConstraints) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var promises;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        promises = checkConstraints.map(function (checkConstraint) { return _this.dropCheckConstraint(tableOrName, checkConstraint); });\n                        return [4 /*yield*/, Promise.all(promises)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new foreign key.\n     */\n    PostgresQueryRunner.prototype.createForeignKey = function (tableOrName, foreignKey) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, up, down;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        // new FK may be passed without name. In this case we generate FK name manually.\n                        if (!foreignKey.name)\n                            foreignKey.name = this.connection.namingStrategy.foreignKeyName(table.name, foreignKey.columnNames);\n                        up = this.createForeignKeySql(table, foreignKey);\n                        down = this.dropForeignKeySql(table, foreignKey);\n                        return [4 /*yield*/, this.executeQueries(up, down)];\n                    case 4:\n                        _b.sent();\n                        table.addForeignKey(foreignKey);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new foreign keys.\n     */\n    PostgresQueryRunner.prototype.createForeignKeys = function (tableOrName, foreignKeys) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, _1.PromiseUtils.runInSequence(foreignKeys, function (foreignKey) { return _this.createForeignKey(tableOrName, foreignKey); })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops a foreign key from the table.\n     */\n    PostgresQueryRunner.prototype.dropForeignKey = function (tableOrName, foreignKeyOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, foreignKey, up, down;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        foreignKey = foreignKeyOrName instanceof TableForeignKey_1.TableForeignKey ? foreignKeyOrName : table.foreignKeys.find(function (fk) { return fk.name === foreignKeyOrName; });\n                        if (!foreignKey)\n                            throw new Error(\"Supplied foreign key was not found in table \" + table.name);\n                        up = this.dropForeignKeySql(table, foreignKey);\n                        down = this.createForeignKeySql(table, foreignKey);\n                        return [4 /*yield*/, this.executeQueries(up, down)];\n                    case 4:\n                        _b.sent();\n                        table.removeForeignKey(foreignKey);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops a foreign keys from the table.\n     */\n    PostgresQueryRunner.prototype.dropForeignKeys = function (tableOrName, foreignKeys) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, _1.PromiseUtils.runInSequence(foreignKeys, function (foreignKey) { return _this.dropForeignKey(tableOrName, foreignKey); })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new index.\n     */\n    PostgresQueryRunner.prototype.createIndex = function (tableOrName, index) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, up, down;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        // new index may be passed without name. In this case we generate index name manually.\n                        if (!index.name)\n                            index.name = this.connection.namingStrategy.indexName(table.name, index.columnNames, index.where);\n                        up = this.createIndexSql(table, index);\n                        down = this.dropIndexSql(table, index);\n                        return [4 /*yield*/, this.executeQueries(up, down)];\n                    case 4:\n                        _b.sent();\n                        table.addIndex(index);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new indices\n     */\n    PostgresQueryRunner.prototype.createIndices = function (tableOrName, indices) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, _1.PromiseUtils.runInSequence(indices, function (index) { return _this.createIndex(tableOrName, index); })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops an index from the table.\n     */\n    PostgresQueryRunner.prototype.dropIndex = function (tableOrName, indexOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, index, up, down;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        index = indexOrName instanceof TableIndex_1.TableIndex ? indexOrName : table.indices.find(function (i) { return i.name === indexOrName; });\n                        if (!index)\n                            throw new Error(\"Supplied index was not found in table \" + table.name);\n                        up = this.dropIndexSql(table, index);\n                        down = this.createIndexSql(table, index);\n                        return [4 /*yield*/, this.executeQueries(up, down)];\n                    case 4:\n                        _b.sent();\n                        table.removeIndex(index);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops an indices from the table.\n     */\n    PostgresQueryRunner.prototype.dropIndices = function (tableOrName, indices) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, _1.PromiseUtils.runInSequence(indices, function (index) { return _this.dropIndex(tableOrName, index); })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Clears all table contents.\n     * Note: this operation uses SQL's TRUNCATE query which cannot be reverted in transactions.\n     */\n    PostgresQueryRunner.prototype.clearTable = function (tableName) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.query(\"TRUNCATE TABLE \" + this.escapeTableName(tableName))];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Removes all tables from the currently connected database.\n     */\n    PostgresQueryRunner.prototype.clearDatabase = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var schemas, schemaNamesString, selectDropsQuery, dropQueries, error_1, rollbackError_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        schemas = [];\n                        this.connection.entityMetadatas\n                            .filter(function (metadata) { return metadata.schema; })\n                            .forEach(function (metadata) {\n                            var isSchemaExist = !!schemas.find(function (schema) { return schema === metadata.schema; });\n                            if (!isSchemaExist)\n                                schemas.push(metadata.schema);\n                        });\n                        schemas.push(this.driver.options.schema || \"current_schema()\");\n                        schemaNamesString = schemas.map(function (name) {\n                            return name === \"current_schema()\" ? name : \"'\" + name + \"'\";\n                        }).join(\", \");\n                        return [4 /*yield*/, this.startTransaction()];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2:\n                        _a.trys.push([2, 7, , 12]);\n                        selectDropsQuery = \"SELECT 'DROP TABLE IF EXISTS \\\"' || schemaname || '\\\".\\\"' || tablename || '\\\" CASCADE;' as \\\"query\\\" FROM \\\"pg_tables\\\" WHERE \\\"schemaname\\\" IN (\" + schemaNamesString + \") AND tablename NOT IN ('spatial_ref_sys')\";\n                        return [4 /*yield*/, this.query(selectDropsQuery)];\n                    case 3:\n                        dropQueries = _a.sent();\n                        return [4 /*yield*/, Promise.all(dropQueries.map(function (q) { return _this.query(q[\"query\"]); }))];\n                    case 4:\n                        _a.sent();\n                        return [4 /*yield*/, this.dropEnumTypes(schemaNamesString)];\n                    case 5:\n                        _a.sent();\n                        return [4 /*yield*/, this.commitTransaction()];\n                    case 6:\n                        _a.sent();\n                        return [3 /*break*/, 12];\n                    case 7:\n                        error_1 = _a.sent();\n                        _a.label = 8;\n                    case 8:\n                        _a.trys.push([8, 10, , 11]);\n                        return [4 /*yield*/, this.rollbackTransaction()];\n                    case 9:\n                        _a.sent();\n                        return [3 /*break*/, 11];\n                    case 10:\n                        rollbackError_1 = _a.sent();\n                        return [3 /*break*/, 11];\n                    case 11: throw error_1;\n                    case 12: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Loads all tables (with given names) from the database and creates a Table from them.\n     */\n    PostgresQueryRunner.prototype.loadTables = function (tableNames) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var currentSchemaQuery, currentSchema, tablesCondition, tablesSql, columnsSql, constraintsCondition, constraintsSql, indicesSql, foreignKeysCondition, foreignKeysSql, _a, dbTables, dbColumns, dbConstraints, dbIndices, dbForeignKeys;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        // if no tables given then no need to proceed\n                        if (!tableNames || !tableNames.length)\n                            return [2 /*return*/, []];\n                        return [4 /*yield*/, this.query(\"SELECT * FROM current_schema()\")];\n                    case 1:\n                        currentSchemaQuery = _b.sent();\n                        currentSchema = currentSchemaQuery[0][\"current_schema\"];\n                        tablesCondition = tableNames.map(function (tableName) {\n                            var _a = __read(tableName.split(\".\"), 2), schema = _a[0], name = _a[1];\n                            if (!name) {\n                                name = schema;\n                                schema = _this.driver.options.schema || currentSchema;\n                            }\n                            return \"(\\\"table_schema\\\" = '\" + schema + \"' AND \\\"table_name\\\" = '\" + name + \"')\";\n                        }).join(\" OR \");\n                        tablesSql = \"SELECT * FROM \\\"information_schema\\\".\\\"tables\\\" WHERE \" + tablesCondition;\n                        columnsSql = \"SELECT *, \\\"udt_name\\\"::\\\"regtype\\\" AS \\\"regtype\\\" FROM \\\"information_schema\\\".\\\"columns\\\" WHERE \" + tablesCondition;\n                        constraintsCondition = tableNames.map(function (tableName) {\n                            var _a = __read(tableName.split(\".\"), 2), schema = _a[0], name = _a[1];\n                            if (!name) {\n                                name = schema;\n                                schema = _this.driver.options.schema || currentSchema;\n                            }\n                            return \"(\\\"ns\\\".\\\"nspname\\\" = '\" + schema + \"' AND \\\"t\\\".\\\"relname\\\" = '\" + name + \"')\";\n                        }).join(\" OR \");\n                        constraintsSql = \"SELECT \\\"ns\\\".\\\"nspname\\\" AS \\\"table_schema\\\", \\\"t\\\".\\\"relname\\\" AS \\\"table_name\\\", \\\"cnst\\\".\\\"conname\\\" AS \\\"constraint_name\\\", \\\"cnst\\\".\\\"consrc\\\" AS \\\"expression\\\", \" +\n                            \"CASE \\\"cnst\\\".\\\"contype\\\" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' END AS \\\"constraint_type\\\", \\\"a\\\".\\\"attname\\\" AS \\\"column_name\\\" \" +\n                            \"FROM \\\"pg_constraint\\\" \\\"cnst\\\" \" +\n                            \"INNER JOIN \\\"pg_class\\\" \\\"t\\\" ON \\\"t\\\".\\\"oid\\\" = \\\"cnst\\\".\\\"conrelid\\\" \" +\n                            \"INNER JOIN \\\"pg_namespace\\\" \\\"ns\\\" ON \\\"ns\\\".\\\"oid\\\" = \\\"cnst\\\".\\\"connamespace\\\" \" +\n                            \"INNER JOIN \\\"pg_attribute\\\" \\\"a\\\" ON \\\"a\\\".\\\"attrelid\\\" = \\\"cnst\\\".\\\"conrelid\\\" AND \\\"a\\\".\\\"attnum\\\" = ANY (\\\"cnst\\\".\\\"conkey\\\") \" +\n                            (\"WHERE \\\"t\\\".\\\"relkind\\\" = 'r' AND (\" + constraintsCondition + \")\");\n                        indicesSql = \"SELECT \\\"ns\\\".\\\"nspname\\\" AS \\\"table_schema\\\", \\\"t\\\".\\\"relname\\\" AS \\\"table_name\\\", \\\"i\\\".\\\"relname\\\" AS \\\"constraint_name\\\", \\\"a\\\".\\\"attname\\\" AS \\\"column_name\\\", \" +\n                            \"CASE \\\"ix\\\".\\\"indisunique\\\" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS \\\"is_unique\\\", pg_get_expr(\\\"ix\\\".\\\"indpred\\\", \\\"ix\\\".\\\"indrelid\\\") AS \\\"condition\\\", \" +\n                            \"\\\"types\\\".\\\"typname\\\" AS \\\"type_name\\\" \" +\n                            \"FROM \\\"pg_class\\\" \\\"t\\\" \" +\n                            \"INNER JOIN \\\"pg_index\\\" \\\"ix\\\" ON \\\"ix\\\".\\\"indrelid\\\" = \\\"t\\\".\\\"oid\\\" \" +\n                            \"INNER JOIN \\\"pg_attribute\\\" \\\"a\\\" ON \\\"a\\\".\\\"attrelid\\\" = \\\"t\\\".\\\"oid\\\"  AND \\\"a\\\".\\\"attnum\\\" = ANY (\\\"ix\\\".\\\"indkey\\\") \" +\n                            \"INNER JOIN \\\"pg_namespace\\\" \\\"ns\\\" ON \\\"ns\\\".\\\"oid\\\" = \\\"t\\\".\\\"relnamespace\\\" \" +\n                            \"INNER JOIN \\\"pg_class\\\" \\\"i\\\" ON \\\"i\\\".\\\"oid\\\" = \\\"ix\\\".\\\"indexrelid\\\" \" +\n                            \"INNER JOIN \\\"pg_type\\\" \\\"types\\\" ON \\\"types\\\".\\\"oid\\\" = \\\"a\\\".\\\"atttypid\\\" \" +\n                            \"LEFT JOIN \\\"pg_constraint\\\" \\\"cnst\\\" ON \\\"cnst\\\".\\\"conname\\\" = \\\"i\\\".\\\"relname\\\" \" +\n                            (\"WHERE \\\"t\\\".\\\"relkind\\\" = 'r' AND \\\"cnst\\\".\\\"contype\\\" IS NULL AND (\" + constraintsCondition + \")\");\n                        foreignKeysCondition = tableNames.map(function (tableName) {\n                            var _a = __read(tableName.split(\".\"), 2), schema = _a[0], name = _a[1];\n                            if (!name) {\n                                name = schema;\n                                schema = _this.driver.options.schema || currentSchema;\n                            }\n                            return \"(\\\"ns\\\".\\\"nspname\\\" = '\" + schema + \"' AND \\\"cl\\\".\\\"relname\\\" = '\" + name + \"')\";\n                        }).join(\" OR \");\n                        foreignKeysSql = \"SELECT \\\"con\\\".\\\"conname\\\" AS \\\"constraint_name\\\", \\\"con\\\".\\\"nspname\\\" AS \\\"table_schema\\\", \\\"con\\\".\\\"relname\\\" AS \\\"table_name\\\", \\\"att2\\\".\\\"attname\\\" AS \\\"column_name\\\", \" +\n                            \"\\\"ns\\\".\\\"nspname\\\" AS \\\"referenced_table_schema\\\", \\\"cl\\\".\\\"relname\\\" AS \\\"referenced_table_name\\\", \\\"att\\\".\\\"attname\\\" AS \\\"referenced_column_name\\\", \\\"con\\\".\\\"confdeltype\\\" AS \\\"on_delete\\\", \\\"con\\\".\\\"confupdtype\\\" AS \\\"on_update\\\" \" +\n                            \"FROM ( \" +\n                            \"SELECT UNNEST (\\\"con1\\\".\\\"conkey\\\") AS \\\"parent\\\", UNNEST (\\\"con1\\\".\\\"confkey\\\") AS \\\"child\\\", \\\"con1\\\".\\\"confrelid\\\", \\\"con1\\\".\\\"conrelid\\\", \\\"con1\\\".\\\"conname\\\", \\\"con1\\\".\\\"contype\\\", \\\"ns\\\".\\\"nspname\\\", \\\"cl\\\".\\\"relname\\\", \" +\n                            \"CASE \\\"con1\\\".\\\"confdeltype\\\" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as \\\"confdeltype\\\", \" +\n                            \"CASE \\\"con1\\\".\\\"confupdtype\\\" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as \\\"confupdtype\\\" \" +\n                            \"FROM \\\"pg_class\\\" \\\"cl\\\" \" +\n                            \"INNER JOIN \\\"pg_namespace\\\" \\\"ns\\\" ON \\\"cl\\\".\\\"relnamespace\\\" = \\\"ns\\\".\\\"oid\\\" \" +\n                            \"INNER JOIN \\\"pg_constraint\\\" \\\"con1\\\" ON \\\"con1\\\".\\\"conrelid\\\" = \\\"cl\\\".\\\"oid\\\" \" +\n                            (\"WHERE \\\"con1\\\".\\\"contype\\\" = 'f' AND (\" + foreignKeysCondition + \") \") +\n                            \") \\\"con\\\" \" +\n                            \"INNER JOIN \\\"pg_attribute\\\" \\\"att\\\" ON \\\"att\\\".\\\"attrelid\\\" = \\\"con\\\".\\\"confrelid\\\" AND \\\"att\\\".\\\"attnum\\\" = \\\"con\\\".\\\"child\\\" \" +\n                            \"INNER JOIN \\\"pg_class\\\" \\\"cl\\\" ON \\\"cl\\\".\\\"oid\\\" = \\\"con\\\".\\\"confrelid\\\" \" +\n                            \"INNER JOIN \\\"pg_namespace\\\" \\\"ns\\\" ON \\\"cl\\\".\\\"relnamespace\\\" = \\\"ns\\\".\\\"oid\\\" \" +\n                            \"INNER JOIN \\\"pg_attribute\\\" \\\"att2\\\" ON \\\"att2\\\".\\\"attrelid\\\" = \\\"con\\\".\\\"conrelid\\\" AND \\\"att2\\\".\\\"attnum\\\" = \\\"con\\\".\\\"parent\\\"\";\n                        return [4 /*yield*/, Promise.all([\n                                this.query(tablesSql),\n                                this.query(columnsSql),\n                                this.query(constraintsSql),\n                                this.query(indicesSql),\n                                this.query(foreignKeysSql),\n                            ])];\n                    case 2:\n                        _a = __read.apply(void 0, [_b.sent(), 5]), dbTables = _a[0], dbColumns = _a[1], dbConstraints = _a[2], dbIndices = _a[3], dbForeignKeys = _a[4];\n                        // if tables were not found in the db, no need to proceed\n                        if (!dbTables.length)\n                            return [2 /*return*/, []];\n                        // create tables for loaded tables\n                        return [2 /*return*/, Promise.all(dbTables.map(function (dbTable) { return __awaiter(_this, void 0, void 0, function () {\n                                var _this = this;\n                                var table, schema, tableFullName, _a, tableUniqueConstraints, tableCheckConstraints, tableForeignKeyConstraints, tableIndexConstraints;\n                                return __generator(this, function (_b) {\n                                    switch (_b.label) {\n                                        case 0:\n                                            table = new Table_1.Table();\n                                            schema = dbTable[\"table_schema\"] === currentSchema && !this.driver.options.schema ? undefined : dbTable[\"table_schema\"];\n                                            table.name = this.driver.buildTableName(dbTable[\"table_name\"], schema);\n                                            tableFullName = this.driver.buildTableName(dbTable[\"table_name\"], dbTable[\"table_schema\"]);\n                                            // create columns from the loaded columns\n                                            _a = table;\n                                            return [4 /*yield*/, Promise.all(dbColumns\n                                                    .filter(function (dbColumn) { return _this.driver.buildTableName(dbColumn[\"table_name\"], dbColumn[\"table_schema\"]) === tableFullName; })\n                                                    .map(function (dbColumn) { return __awaiter(_this, void 0, void 0, function () {\n                                                    var _this = this;\n                                                    var columnConstraints, tableColumn, type, sql, results, geometryColumnSql, results, geographyColumnSql, results, length, uniqueConstraint, isConstraintComposite;\n                                                    return __generator(this, function (_a) {\n                                                        switch (_a.label) {\n                                                            case 0:\n                                                                columnConstraints = dbConstraints.filter(function (dbConstraint) {\n                                                                    return _this.driver.buildTableName(dbConstraint[\"table_name\"], dbConstraint[\"table_schema\"]) === tableFullName && dbConstraint[\"column_name\"] === dbColumn[\"column_name\"];\n                                                                });\n                                                                tableColumn = new TableColumn_1.TableColumn();\n                                                                tableColumn.name = dbColumn[\"column_name\"];\n                                                                tableColumn.type = dbColumn[\"regtype\"].toLowerCase();\n                                                                if (tableColumn.type === \"numeric\" || tableColumn.type === \"decimal\" || tableColumn.type === \"float\") {\n                                                                    // If one of these properties was set, and another was not, Postgres sets '0' in to unspecified property\n                                                                    // we set 'undefined' in to unspecified property to avoid changing column on sync\n                                                                    if (dbColumn[\"numeric_precision\"] !== null && !this.isDefaultColumnPrecision(table, tableColumn, dbColumn[\"numeric_precision\"])) {\n                                                                        tableColumn.precision = dbColumn[\"numeric_precision\"];\n                                                                    }\n                                                                    else if (dbColumn[\"numeric_scale\"] !== null && !this.isDefaultColumnScale(table, tableColumn, dbColumn[\"numeric_scale\"])) {\n                                                                        tableColumn.precision = undefined;\n                                                                    }\n                                                                    if (dbColumn[\"numeric_scale\"] !== null && !this.isDefaultColumnScale(table, tableColumn, dbColumn[\"numeric_scale\"])) {\n                                                                        tableColumn.scale = dbColumn[\"numeric_scale\"];\n                                                                    }\n                                                                    else if (dbColumn[\"numeric_precision\"] !== null && !this.isDefaultColumnPrecision(table, tableColumn, dbColumn[\"numeric_precision\"])) {\n                                                                        tableColumn.scale = undefined;\n                                                                    }\n                                                                }\n                                                                if (dbColumn[\"data_type\"].toLowerCase() === \"array\") {\n                                                                    tableColumn.isArray = true;\n                                                                    type = tableColumn.type.replace(\"[]\", \"\");\n                                                                    tableColumn.type = this.connection.driver.normalizeType({ type: type });\n                                                                }\n                                                                if (tableColumn.type === \"interval\"\n                                                                    || tableColumn.type === \"time without time zone\"\n                                                                    || tableColumn.type === \"time with time zone\"\n                                                                    || tableColumn.type === \"timestamp without time zone\"\n                                                                    || tableColumn.type === \"timestamp with time zone\") {\n                                                                    tableColumn.precision = !this.isDefaultColumnPrecision(table, tableColumn, dbColumn[\"datetime_precision\"]) ? dbColumn[\"datetime_precision\"] : undefined;\n                                                                }\n                                                                if (!(tableColumn.type.indexOf(\"enum\") !== -1)) return [3 /*break*/, 2];\n                                                                tableColumn.type = \"enum\";\n                                                                sql = \"SELECT \\\"e\\\".\\\"enumlabel\\\" AS \\\"value\\\" FROM \\\"pg_enum\\\" \\\"e\\\" \" +\n                                                                    \"INNER JOIN \\\"pg_type\\\" \\\"t\\\" ON \\\"t\\\".\\\"oid\\\" = \\\"e\\\".\\\"enumtypid\\\" \" +\n                                                                    \"INNER JOIN \\\"pg_namespace\\\" \\\"n\\\" ON \\\"n\\\".\\\"oid\\\" = \\\"t\\\".\\\"typnamespace\\\" \" +\n                                                                    (\"WHERE \\\"n\\\".\\\"nspname\\\" = '\" + dbTable[\"table_schema\"] + \"' AND \\\"t\\\".\\\"typname\\\" = '\" + this.buildEnumName(table, tableColumn.name, false, true) + \"'\");\n                                                                return [4 /*yield*/, this.query(sql)];\n                                                            case 1:\n                                                                results = _a.sent();\n                                                                tableColumn.enum = results.map(function (result) { return result[\"value\"]; });\n                                                                _a.label = 2;\n                                                            case 2:\n                                                                if (!(tableColumn.type === \"geometry\")) return [3 /*break*/, 4];\n                                                                geometryColumnSql = \"SELECT * FROM (\\n                        SELECT\\n                          f_table_schema table_schema,\\n                          f_table_name table_name,\\n                          f_geometry_column column_name,\\n                          srid,\\n                          type\\n                        FROM geometry_columns\\n                      ) AS _\\n                      WHERE \" + tablesCondition + \" AND column_name = '\" + tableColumn.name + \"'\";\n                                                                return [4 /*yield*/, this.query(geometryColumnSql)];\n                                                            case 3:\n                                                                results = _a.sent();\n                                                                tableColumn.spatialFeatureType = results[0].type;\n                                                                tableColumn.srid = results[0].srid;\n                                                                _a.label = 4;\n                                                            case 4:\n                                                                if (!(tableColumn.type === \"geography\")) return [3 /*break*/, 6];\n                                                                geographyColumnSql = \"SELECT * FROM (\\n                        SELECT\\n                          f_table_schema table_schema,\\n                          f_table_name table_name,\\n                          f_geography_column column_name,\\n                          srid,\\n                          type\\n                        FROM geography_columns\\n                      ) AS _\\n                      WHERE \" + tablesCondition + \" AND column_name = '\" + tableColumn.name + \"'\";\n                                                                return [4 /*yield*/, this.query(geographyColumnSql)];\n                                                            case 5:\n                                                                results = _a.sent();\n                                                                tableColumn.spatialFeatureType = results[0].type;\n                                                                tableColumn.srid = results[0].srid;\n                                                                _a.label = 6;\n                                                            case 6:\n                                                                // check only columns that have length property\n                                                                if (this.driver.withLengthColumnTypes.indexOf(tableColumn.type) !== -1 && dbColumn[\"character_maximum_length\"]) {\n                                                                    length = dbColumn[\"character_maximum_length\"].toString();\n                                                                    tableColumn.length = !this.isDefaultColumnLength(table, tableColumn, length) ? length : \"\";\n                                                                }\n                                                                tableColumn.isNullable = dbColumn[\"is_nullable\"] === \"YES\";\n                                                                tableColumn.isPrimary = !!columnConstraints.find(function (constraint) { return constraint[\"constraint_type\"] === \"PRIMARY\"; });\n                                                                uniqueConstraint = columnConstraints.find(function (constraint) { return constraint[\"constraint_type\"] === \"UNIQUE\"; });\n                                                                isConstraintComposite = uniqueConstraint\n                                                                    ? !!dbConstraints.find(function (dbConstraint) { return dbConstraint[\"constraint_type\"] === \"UNIQUE\"\n                                                                        && dbConstraint[\"constraint_name\"] === uniqueConstraint[\"constraint_name\"]\n                                                                        && dbConstraint[\"column_name\"] !== dbColumn[\"column_name\"]; })\n                                                                    : false;\n                                                                tableColumn.isUnique = !!uniqueConstraint && !isConstraintComposite;\n                                                                if (dbColumn[\"column_default\"] !== null && dbColumn[\"column_default\"] !== undefined) {\n                                                                    if (dbColumn[\"column_default\"].replace(/\"/gi, \"\") === \"nextval('\" + this.buildSequenceName(table, dbColumn[\"column_name\"], currentSchema, true) + \"'::regclass)\") {\n                                                                        tableColumn.isGenerated = true;\n                                                                        tableColumn.generationStrategy = \"increment\";\n                                                                    }\n                                                                    else if (/^uuid_generate_v\\d\\(\\)/.test(dbColumn[\"column_default\"])) {\n                                                                        tableColumn.isGenerated = true;\n                                                                        tableColumn.generationStrategy = \"uuid\";\n                                                                    }\n                                                                    else {\n                                                                        tableColumn.default = dbColumn[\"column_default\"].replace(/::.*/, \"\");\n                                                                    }\n                                                                }\n                                                                tableColumn.comment = \"\"; // dbColumn[\"COLUMN_COMMENT\"];\n                                                                if (dbColumn[\"character_set_name\"])\n                                                                    tableColumn.charset = dbColumn[\"character_set_name\"];\n                                                                if (dbColumn[\"collation_name\"])\n                                                                    tableColumn.collation = dbColumn[\"collation_name\"];\n                                                                return [2 /*return*/, tableColumn];\n                                                        }\n                                                    });\n                                                }); }))];\n                                        case 1:\n                                            // create columns from the loaded columns\n                                            _a.columns = _b.sent();\n                                            tableUniqueConstraints = OrmUtils_1.OrmUtils.uniq(dbConstraints.filter(function (dbConstraint) {\n                                                return _this.driver.buildTableName(dbConstraint[\"table_name\"], dbConstraint[\"table_schema\"]) === tableFullName\n                                                    && dbConstraint[\"constraint_type\"] === \"UNIQUE\";\n                                            }), function (dbConstraint) { return dbConstraint[\"constraint_name\"]; });\n                                            table.uniques = tableUniqueConstraints.map(function (constraint) {\n                                                var uniques = dbConstraints.filter(function (dbC) { return dbC[\"constraint_name\"] === constraint[\"constraint_name\"]; });\n                                                return new TableUnique_1.TableUnique({\n                                                    name: constraint[\"constraint_name\"],\n                                                    columnNames: uniques.map(function (u) { return u[\"column_name\"]; })\n                                                });\n                                            });\n                                            tableCheckConstraints = OrmUtils_1.OrmUtils.uniq(dbConstraints.filter(function (dbConstraint) {\n                                                return _this.driver.buildTableName(dbConstraint[\"table_name\"], dbConstraint[\"table_schema\"]) === tableFullName\n                                                    && dbConstraint[\"constraint_type\"] === \"CHECK\";\n                                            }), function (dbConstraint) { return dbConstraint[\"constraint_name\"]; });\n                                            table.checks = tableCheckConstraints.map(function (constraint) {\n                                                var checks = dbConstraints.filter(function (dbC) { return dbC[\"constraint_name\"] === constraint[\"constraint_name\"]; });\n                                                return new TableCheck_1.TableCheck({\n                                                    name: constraint[\"constraint_name\"],\n                                                    columnNames: checks.map(function (c) { return c[\"column_name\"]; }),\n                                                    expression: constraint[\"expression\"] // column names are not escaped, may cause problems\n                                                });\n                                            });\n                                            tableForeignKeyConstraints = OrmUtils_1.OrmUtils.uniq(dbForeignKeys.filter(function (dbForeignKey) {\n                                                return _this.driver.buildTableName(dbForeignKey[\"table_name\"], dbForeignKey[\"table_schema\"]) === tableFullName;\n                                            }), function (dbForeignKey) { return dbForeignKey[\"constraint_name\"]; });\n                                            table.foreignKeys = tableForeignKeyConstraints.map(function (dbForeignKey) {\n                                                var foreignKeys = dbForeignKeys.filter(function (dbFk) { return dbFk[\"constraint_name\"] === dbForeignKey[\"constraint_name\"]; });\n                                                // if referenced table located in currently used schema, we don't need to concat schema name to table name.\n                                                var schema = dbForeignKey[\"referenced_table_schema\"] === currentSchema ? undefined : dbTable[\"referenced_table_schema\"];\n                                                var referencedTableName = _this.driver.buildTableName(dbForeignKey[\"referenced_table_name\"], schema);\n                                                return new TableForeignKey_1.TableForeignKey({\n                                                    name: dbForeignKey[\"constraint_name\"],\n                                                    columnNames: foreignKeys.map(function (dbFk) { return dbFk[\"column_name\"]; }),\n                                                    referencedTableName: referencedTableName,\n                                                    referencedColumnNames: foreignKeys.map(function (dbFk) { return dbFk[\"referenced_column_name\"]; }),\n                                                    onDelete: dbForeignKey[\"on_delete\"],\n                                                    onUpdate: dbForeignKey[\"on_update\"]\n                                                });\n                                            });\n                                            tableIndexConstraints = OrmUtils_1.OrmUtils.uniq(dbIndices.filter(function (dbIndex) {\n                                                return _this.driver.buildTableName(dbIndex[\"table_name\"], dbIndex[\"table_schema\"]) === tableFullName;\n                                            }), function (dbIndex) { return dbIndex[\"constraint_name\"]; });\n                                            table.indices = tableIndexConstraints.map(function (constraint) {\n                                                var indices = dbIndices.filter(function (index) { return index[\"constraint_name\"] === constraint[\"constraint_name\"]; });\n                                                return new TableIndex_1.TableIndex({\n                                                    table: table,\n                                                    name: constraint[\"constraint_name\"],\n                                                    columnNames: indices.map(function (i) { return i[\"column_name\"]; }),\n                                                    isUnique: constraint[\"is_unique\"] === \"TRUE\",\n                                                    where: constraint[\"condition\"],\n                                                    isSpatial: indices.every(function (i) { return _this.driver.spatialTypes.indexOf(i[\"type_name\"]) >= 0; }),\n                                                    isFulltext: false\n                                                });\n                                            });\n                                            return [2 /*return*/, table];\n                                    }\n                                });\n                            }); }))];\n                }\n            });\n        });\n    };\n    /**\n     * Builds create table sql.\n     */\n    PostgresQueryRunner.prototype.createTableSql = function (table, createForeignKeys) {\n        var _this = this;\n        var columnDefinitions = table.columns.map(function (column) { return _this.buildCreateColumnSql(table, column); }).join(\", \");\n        var sql = \"CREATE TABLE \" + this.escapeTableName(table) + \" (\" + columnDefinitions;\n        table.columns\n            .filter(function (column) { return column.isUnique; })\n            .forEach(function (column) {\n            var isUniqueExist = table.uniques.some(function (unique) { return unique.columnNames.length === 1 && unique.columnNames[0] === column.name; });\n            if (!isUniqueExist)\n                table.uniques.push(new TableUnique_1.TableUnique({\n                    name: _this.connection.namingStrategy.uniqueConstraintName(table.name, [column.name]),\n                    columnNames: [column.name]\n                }));\n        });\n        if (table.uniques.length > 0) {\n            var uniquesSql = table.uniques.map(function (unique) {\n                var uniqueName = unique.name ? unique.name : _this.connection.namingStrategy.uniqueConstraintName(table.name, unique.columnNames);\n                var columnNames = unique.columnNames.map(function (columnName) { return \"\\\"\" + columnName + \"\\\"\"; }).join(\", \");\n                return \"CONSTRAINT \\\"\" + uniqueName + \"\\\" UNIQUE (\" + columnNames + \")\";\n            }).join(\", \");\n            sql += \", \" + uniquesSql;\n        }\n        if (table.checks.length > 0) {\n            var checksSql = table.checks.map(function (check) {\n                var checkName = check.name ? check.name : _this.connection.namingStrategy.checkConstraintName(table.name, check.expression);\n                return \"CONSTRAINT \\\"\" + checkName + \"\\\" CHECK (\" + check.expression + \")\";\n            }).join(\", \");\n            sql += \", \" + checksSql;\n        }\n        if (table.foreignKeys.length > 0 && createForeignKeys) {\n            var foreignKeysSql = table.foreignKeys.map(function (fk) {\n                var columnNames = fk.columnNames.map(function (columnName) { return \"\\\"\" + columnName + \"\\\"\"; }).join(\", \");\n                if (!fk.name)\n                    fk.name = _this.connection.namingStrategy.foreignKeyName(table.name, fk.columnNames);\n                var referencedColumnNames = fk.referencedColumnNames.map(function (columnName) { return \"\\\"\" + columnName + \"\\\"\"; }).join(\", \");\n                var constraint = \"CONSTRAINT \\\"\" + fk.name + \"\\\" FOREIGN KEY (\" + columnNames + \") REFERENCES \" + _this.escapeTableName(fk.referencedTableName) + \" (\" + referencedColumnNames + \")\";\n                if (fk.onDelete)\n                    constraint += \" ON DELETE \" + fk.onDelete;\n                if (fk.onUpdate)\n                    constraint += \" ON UPDATE \" + fk.onUpdate;\n                return constraint;\n            }).join(\", \");\n            sql += \", \" + foreignKeysSql;\n        }\n        var primaryColumns = table.columns.filter(function (column) { return column.isPrimary; });\n        if (primaryColumns.length > 0) {\n            var primaryKeyName = this.connection.namingStrategy.primaryKeyName(table.name, primaryColumns.map(function (column) { return column.name; }));\n            var columnNames = primaryColumns.map(function (column) { return \"\\\"\" + column.name + \"\\\"\"; }).join(\", \");\n            sql += \", CONSTRAINT \\\"\" + primaryKeyName + \"\\\" PRIMARY KEY (\" + columnNames + \")\";\n        }\n        sql += \")\";\n        return sql;\n    };\n    /**\n     * Extracts schema name from given Table object or table name string.\n     */\n    PostgresQueryRunner.prototype.extractSchema = function (target) {\n        var tableName = target instanceof Table_1.Table ? target.name : target;\n        return tableName.indexOf(\".\") === -1 ? this.driver.options.schema : tableName.split(\".\")[0];\n    };\n    /**\n     * Drops ENUM type from given schemas.\n     */\n    PostgresQueryRunner.prototype.dropEnumTypes = function (schemaNames) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var selectDropsQuery, dropQueries;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        selectDropsQuery = \"SELECT 'DROP TYPE IF EXISTS \\\"' || n.nspname || '\\\".\\\"' || t.typname || '\\\" CASCADE;' as \\\"query\\\" FROM \\\"pg_type\\\" \\\"t\\\" \" +\n                            \"INNER JOIN \\\"pg_enum\\\" \\\"e\\\" ON \\\"e\\\".\\\"enumtypid\\\" = \\\"t\\\".\\\"oid\\\" \" +\n                            \"INNER JOIN \\\"pg_namespace\\\" \\\"n\\\" ON \\\"n\\\".\\\"oid\\\" = \\\"t\\\".\\\"typnamespace\\\" \" +\n                            (\"WHERE \\\"n\\\".\\\"nspname\\\" IN (\" + schemaNames + \") GROUP BY \\\"n\\\".\\\"nspname\\\", \\\"t\\\".\\\"typname\\\"\");\n                        return [4 /*yield*/, this.query(selectDropsQuery)];\n                    case 1:\n                        dropQueries = _a.sent();\n                        return [4 /*yield*/, Promise.all(dropQueries.map(function (q) { return _this.query(q[\"query\"]); }))];\n                    case 2:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Checks if enum with the given name exist in the database.\n     */\n    PostgresQueryRunner.prototype.hasEnumType = function (table, column) {\n        return __awaiter(this, void 0, void 0, function () {\n            var schema, enumName, sql, result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        schema = this.parseTableName(table).schema;\n                        enumName = this.buildEnumName(table, column, false, true);\n                        sql = \"SELECT \\\"n\\\".\\\"nspname\\\", \\\"t\\\".\\\"typname\\\" FROM \\\"pg_type\\\" \\\"t\\\" \" +\n                            \"INNER JOIN \\\"pg_namespace\\\" \\\"n\\\" ON \\\"n\\\".\\\"oid\\\" = \\\"t\\\".\\\"typnamespace\\\" \" +\n                            (\"WHERE \\\"n\\\".\\\"nspname\\\" = \" + schema + \" AND \\\"t\\\".\\\"typname\\\" = '\" + enumName + \"'\");\n                        return [4 /*yield*/, this.query(sql)];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, result.length ? true : false];\n                }\n            });\n        });\n    };\n    /**\n     * Builds create ENUM type sql.\n     */\n    PostgresQueryRunner.prototype.createEnumTypeSql = function (table, column, enumName) {\n        if (!enumName)\n            enumName = this.buildEnumName(table, column);\n        var enumValues = column.enum.map(function (value) { return \"'\" + value + \"'\"; }).join(\", \");\n        return \"CREATE TYPE \" + enumName + \" AS ENUM(\" + enumValues + \")\";\n    };\n    /**\n     * Builds create ENUM type sql.\n     */\n    PostgresQueryRunner.prototype.dropEnumTypeSql = function (table, column, enumName) {\n        if (!enumName)\n            enumName = this.buildEnumName(table, column);\n        return \"DROP TYPE \" + enumName;\n    };\n    /**\n     * Builds drop table sql.\n     */\n    PostgresQueryRunner.prototype.dropTableSql = function (tableOrPath) {\n        return \"DROP TABLE \" + this.escapeTableName(tableOrPath);\n    };\n    /**\n     * Builds create index sql.\n     */\n    PostgresQueryRunner.prototype.createIndexSql = function (table, index) {\n        var columns = index.columnNames.map(function (columnName) { return \"\\\"\" + columnName + \"\\\"\"; }).join(\", \");\n        return \"CREATE \" + (index.isUnique ? \"UNIQUE \" : \"\") + \"INDEX \\\"\" + index.name + \"\\\" ON \" + this.escapeTableName(table) + \" \" + (index.isSpatial ? \"USING GiST \" : \"\") + \" (\" + columns + \") \" + (index.where ? \"WHERE \" + index.where : \"\");\n    };\n    /**\n     * Builds drop index sql.\n     */\n    PostgresQueryRunner.prototype.dropIndexSql = function (table, indexOrName) {\n        var indexName = indexOrName instanceof TableIndex_1.TableIndex ? indexOrName.name : indexOrName;\n        var schema = this.extractSchema(table);\n        return schema ? \"DROP INDEX \\\"\" + schema + \"\\\".\\\"\" + indexName + \"\\\"\" : \"DROP INDEX \\\"\" + indexName + \"\\\"\";\n    };\n    /**\n     * Builds create primary key sql.\n     */\n    PostgresQueryRunner.prototype.createPrimaryKeySql = function (table, columnNames) {\n        var primaryKeyName = this.connection.namingStrategy.primaryKeyName(table.name, columnNames);\n        var columnNamesString = columnNames.map(function (columnName) { return \"\\\"\" + columnName + \"\\\"\"; }).join(\", \");\n        return \"ALTER TABLE \" + this.escapeTableName(table) + \" ADD CONSTRAINT \\\"\" + primaryKeyName + \"\\\" PRIMARY KEY (\" + columnNamesString + \")\";\n    };\n    /**\n     * Builds drop primary key sql.\n     */\n    PostgresQueryRunner.prototype.dropPrimaryKeySql = function (table) {\n        var columnNames = table.primaryColumns.map(function (column) { return column.name; });\n        var primaryKeyName = this.connection.namingStrategy.primaryKeyName(table.name, columnNames);\n        return \"ALTER TABLE \" + this.escapeTableName(table) + \" DROP CONSTRAINT \\\"\" + primaryKeyName + \"\\\"\";\n    };\n    /**\n     * Builds create unique constraint sql.\n     */\n    PostgresQueryRunner.prototype.createUniqueConstraintSql = function (table, uniqueConstraint) {\n        var columnNames = uniqueConstraint.columnNames.map(function (column) { return \"\\\"\" + column + \"\\\"\"; }).join(\", \");\n        return \"ALTER TABLE \" + this.escapeTableName(table) + \" ADD CONSTRAINT \\\"\" + uniqueConstraint.name + \"\\\" UNIQUE (\" + columnNames + \")\";\n    };\n    /**\n     * Builds drop unique constraint sql.\n     */\n    PostgresQueryRunner.prototype.dropUniqueConstraintSql = function (table, uniqueOrName) {\n        var uniqueName = uniqueOrName instanceof TableUnique_1.TableUnique ? uniqueOrName.name : uniqueOrName;\n        return \"ALTER TABLE \" + this.escapeTableName(table) + \" DROP CONSTRAINT \\\"\" + uniqueName + \"\\\"\";\n    };\n    /**\n     * Builds create check constraint sql.\n     */\n    PostgresQueryRunner.prototype.createCheckConstraintSql = function (table, checkConstraint) {\n        return \"ALTER TABLE \" + this.escapeTableName(table) + \" ADD CONSTRAINT \\\"\" + checkConstraint.name + \"\\\" CHECK (\" + checkConstraint.expression + \")\";\n    };\n    /**\n     * Builds drop check constraint sql.\n     */\n    PostgresQueryRunner.prototype.dropCheckConstraintSql = function (table, checkOrName) {\n        var checkName = checkOrName instanceof TableCheck_1.TableCheck ? checkOrName.name : checkOrName;\n        return \"ALTER TABLE \" + this.escapeTableName(table) + \" DROP CONSTRAINT \\\"\" + checkName + \"\\\"\";\n    };\n    /**\n     * Builds create foreign key sql.\n     */\n    PostgresQueryRunner.prototype.createForeignKeySql = function (table, foreignKey) {\n        var columnNames = foreignKey.columnNames.map(function (column) { return \"\\\"\" + column + \"\\\"\"; }).join(\", \");\n        var referencedColumnNames = foreignKey.referencedColumnNames.map(function (column) { return \"\\\"\" + column + \"\\\"\"; }).join(\",\");\n        var sql = \"ALTER TABLE \" + this.escapeTableName(table) + \" ADD CONSTRAINT \\\"\" + foreignKey.name + \"\\\" FOREIGN KEY (\" + columnNames + \") \" +\n            (\"REFERENCES \" + this.escapeTableName(foreignKey.referencedTableName) + \"(\" + referencedColumnNames + \")\");\n        if (foreignKey.onDelete)\n            sql += \" ON DELETE \" + foreignKey.onDelete;\n        if (foreignKey.onUpdate)\n            sql += \" ON UPDATE \" + foreignKey.onUpdate;\n        return sql;\n    };\n    /**\n     * Builds drop foreign key sql.\n     */\n    PostgresQueryRunner.prototype.dropForeignKeySql = function (table, foreignKeyOrName) {\n        var foreignKeyName = foreignKeyOrName instanceof TableForeignKey_1.TableForeignKey ? foreignKeyOrName.name : foreignKeyOrName;\n        return \"ALTER TABLE \" + this.escapeTableName(table) + \" DROP CONSTRAINT \\\"\" + foreignKeyName + \"\\\"\";\n    };\n    /**\n     * Builds sequence name from given table and column.\n     */\n    PostgresQueryRunner.prototype.buildSequenceName = function (table, columnOrName, currentSchema, disableEscape, skipSchema) {\n        var columnName = columnOrName instanceof TableColumn_1.TableColumn ? columnOrName.name : columnOrName;\n        var schema = undefined;\n        var tableName = undefined;\n        if (table.name.indexOf(\".\") === -1) {\n            tableName = table.name;\n        }\n        else {\n            schema = table.name.split(\".\")[0];\n            tableName = table.name.split(\".\")[1];\n        }\n        if (schema && schema !== currentSchema && !skipSchema) {\n            return disableEscape ? schema + \".\" + tableName + \"_\" + columnName + \"_seq\" : \"\\\"\" + schema + \"\\\".\\\"\" + tableName + \"_\" + columnName + \"_seq\\\"\";\n        }\n        else {\n            return disableEscape ? tableName + \"_\" + columnName + \"_seq\" : \"\\\"\" + tableName + \"_\" + columnName + \"_seq\\\"\";\n        }\n    };\n    /**\n     * Builds ENUM type name from given table and column.\n     */\n    PostgresQueryRunner.prototype.buildEnumName = function (table, columnOrName, withSchema, disableEscape, toOld) {\n        if (withSchema === void 0) { withSchema = true; }\n        var columnName = columnOrName instanceof TableColumn_1.TableColumn ? columnOrName.name : columnOrName;\n        var schema = table.name.indexOf(\".\") === -1 ? this.driver.options.schema : table.name.split(\".\")[0];\n        var tableName = table.name.indexOf(\".\") === -1 ? table.name : table.name.split(\".\")[1];\n        var enumName = schema && withSchema ? schema + \".\" + tableName + \"_\" + columnName.toLowerCase() + \"_enum\" : tableName + \"_\" + columnName.toLowerCase() + \"_enum\";\n        if (toOld)\n            enumName = enumName + \"_old\";\n        return enumName.split(\".\").map(function (i) {\n            return disableEscape ? i : \"\\\"\" + i + \"\\\"\";\n        }).join(\".\");\n    };\n    /**\n     * Escapes given table path.\n     */\n    PostgresQueryRunner.prototype.escapeTableName = function (target, disableEscape) {\n        var tableName = target instanceof Table_1.Table ? target.name : target;\n        tableName = tableName.indexOf(\".\") === -1 && this.driver.options.schema ? this.driver.options.schema + \".\" + tableName : tableName;\n        return tableName.split(\".\").map(function (i) {\n            return disableEscape ? i : \"\\\"\" + i + \"\\\"\";\n        }).join(\".\");\n    };\n    /**\n     * Returns object with table schema and table name.\n     */\n    PostgresQueryRunner.prototype.parseTableName = function (target) {\n        var tableName = target instanceof Table_1.Table ? target.name : target;\n        if (tableName.indexOf(\".\") === -1) {\n            return {\n                schema: this.driver.options.schema ? \"'\" + this.driver.options.schema + \"'\" : \"current_schema()\",\n                tableName: \"'\" + tableName + \"'\"\n            };\n        }\n        else {\n            return {\n                schema: \"'\" + tableName.split(\".\")[0] + \"'\",\n                tableName: \"'\" + tableName.split(\".\")[1] + \"'\"\n            };\n        }\n    };\n    /**\n     * Builds a query for create column.\n     */\n    PostgresQueryRunner.prototype.buildCreateColumnSql = function (table, column) {\n        var c = \"\\\"\" + column.name + \"\\\"\";\n        if (column.isGenerated === true && column.generationStrategy !== \"uuid\") {\n            if (column.type === \"integer\" || column.type === \"int\" || column.type === \"int4\")\n                c += \" SERIAL\";\n            if (column.type === \"smallint\" || column.type === \"int2\")\n                c += \" SMALLSERIAL\";\n            if (column.type === \"bigint\" || column.type === \"int8\")\n                c += \" BIGSERIAL\";\n        }\n        if (column.type === \"enum\") {\n            c += \" \" + this.buildEnumName(table, column, false);\n            if (column.isArray)\n                c += \" array\";\n        }\n        else if (!column.isGenerated || column.type === \"uuid\") {\n            c += \" \" + this.connection.driver.createFullType(column);\n        }\n        if (column.charset)\n            c += \" CHARACTER SET \\\"\" + column.charset + \"\\\"\";\n        if (column.collation)\n            c += \" COLLATE \\\"\" + column.collation + \"\\\"\";\n        if (column.isNullable !== true)\n            c += \" NOT NULL\";\n        if (column.default !== undefined && column.default !== null)\n            c += \" DEFAULT \" + column.default;\n        if (column.isGenerated && column.generationStrategy === \"uuid\" && !column.default)\n            c += \" DEFAULT uuid_generate_v4()\";\n        return c;\n    };\n    return PostgresQueryRunner;\n}(BaseQueryRunner_1.BaseQueryRunner));\nexports.PostgresQueryRunner = PostgresQueryRunner;\n\n//# sourceMappingURL=PostgresQueryRunner.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/driver/postgres/PostgresQueryRunner.js?");

/***/ }),

/***/ "./node_modules/typeorm/driver/react-native/ReactNativeDriver.js":
/*!***********************************************************************!*\
  !*** ./node_modules/typeorm/driver/react-native/ReactNativeDriver.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar AbstractSqliteDriver_1 = __webpack_require__(/*! ../sqlite-abstract/AbstractSqliteDriver */ \"./node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js\");\nvar ReactNativeQueryRunner_1 = __webpack_require__(/*! ./ReactNativeQueryRunner */ \"./node_modules/typeorm/driver/react-native/ReactNativeQueryRunner.js\");\nvar DriverOptionNotSetError_1 = __webpack_require__(/*! ../../error/DriverOptionNotSetError */ \"./node_modules/typeorm/error/DriverOptionNotSetError.js\");\nvar DriverPackageNotInstalledError_1 = __webpack_require__(/*! ../../error/DriverPackageNotInstalledError */ \"./node_modules/typeorm/error/DriverPackageNotInstalledError.js\");\nvar ReactNativeDriver = /** @class */ (function (_super) {\n    __extends(ReactNativeDriver, _super);\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function ReactNativeDriver(connection) {\n        var _this = _super.call(this, connection) || this;\n        _this.database = _this.options.database;\n        // validate options to make sure everything is set\n        if (!_this.options.database)\n            throw new DriverOptionNotSetError_1.DriverOptionNotSetError(\"database\");\n        if (!_this.options.location)\n            throw new DriverOptionNotSetError_1.DriverOptionNotSetError(\"location\");\n        // load sqlite package\n        _this.loadDependencies();\n        return _this;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Closes connection with database.\n     */\n    ReactNativeDriver.prototype.disconnect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2 /*return*/, new Promise(function (ok, fail) {\n                        _this.queryRunner = undefined;\n                        _this.databaseConnection.close(ok, fail);\n                    })];\n            });\n        });\n    };\n    /**\n     * Creates a query runner used to execute database queries.\n     */\n    ReactNativeDriver.prototype.createQueryRunner = function (mode) {\n        if (mode === void 0) { mode = \"master\"; }\n        if (!this.queryRunner)\n            this.queryRunner = new ReactNativeQueryRunner_1.ReactNativeQueryRunner(this);\n        return this.queryRunner;\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates connection with the database.\n     */\n    ReactNativeDriver.prototype.createDatabaseConnection = function () {\n        var _this = this;\n        return new Promise(function (ok, fail) {\n            var options = Object.assign({}, {\n                name: _this.options.database,\n                location: _this.options.location,\n            }, _this.options.extra || {});\n            _this.sqlite.openDatabase(options, function (db) {\n                var databaseConnection = db;\n                // we need to enable foreign keys in sqlite to make sure all foreign key related features\n                // working properly. this also makes onDelete work with sqlite.\n                databaseConnection.executeSql(\"PRAGMA foreign_keys = ON;\", [], function (result) {\n                    ok(databaseConnection);\n                }, function (error) {\n                    fail(error);\n                });\n            }, function (error) {\n                fail(error);\n            });\n        });\n    };\n    /**\n     * If driver dependency is not given explicitly, then try to load it via \"require\".\n     */\n    ReactNativeDriver.prototype.loadDependencies = function () {\n        try {\n            this.sqlite = __webpack_require__(!(function webpackMissingModule() { var e = new Error(\"Cannot find module 'react-native-sqlite-storage'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));\n        }\n        catch (e) {\n            throw new DriverPackageNotInstalledError_1.DriverPackageNotInstalledError(\"React-Native\", \"react-native-sqlite-storage\");\n        }\n    };\n    return ReactNativeDriver;\n}(AbstractSqliteDriver_1.AbstractSqliteDriver));\nexports.ReactNativeDriver = ReactNativeDriver;\n\n//# sourceMappingURL=ReactNativeDriver.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/driver/react-native/ReactNativeDriver.js?");

/***/ }),

/***/ "./node_modules/typeorm/driver/react-native/ReactNativeQueryRunner.js":
/*!****************************************************************************!*\
  !*** ./node_modules/typeorm/driver/react-native/ReactNativeQueryRunner.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar QueryRunnerAlreadyReleasedError_1 = __webpack_require__(/*! ../../error/QueryRunnerAlreadyReleasedError */ \"./node_modules/typeorm/error/QueryRunnerAlreadyReleasedError.js\");\nvar QueryFailedError_1 = __webpack_require__(/*! ../../error/QueryFailedError */ \"./node_modules/typeorm/error/QueryFailedError.js\");\nvar AbstractSqliteQueryRunner_1 = __webpack_require__(/*! ../sqlite-abstract/AbstractSqliteQueryRunner */ \"./node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteQueryRunner.js\");\nvar Broadcaster_1 = __webpack_require__(/*! ../../subscriber/Broadcaster */ \"./node_modules/typeorm/subscriber/Broadcaster.js\");\n/**\n * Runs queries on a single sqlite database connection.\n */\nvar ReactNativeQueryRunner = /** @class */ (function (_super) {\n    __extends(ReactNativeQueryRunner, _super);\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function ReactNativeQueryRunner(driver) {\n        var _this = _super.call(this) || this;\n        _this.driver = driver;\n        _this.connection = driver.connection;\n        _this.broadcaster = new Broadcaster_1.Broadcaster(_this);\n        return _this;\n    }\n    /**\n     * Executes a given SQL query.\n     */\n    ReactNativeQueryRunner.prototype.query = function (query, parameters) {\n        var _this = this;\n        if (this.isReleased)\n            throw new QueryRunnerAlreadyReleasedError_1.QueryRunnerAlreadyReleasedError();\n        return new Promise(function (ok, fail) { return __awaiter(_this, void 0, void 0, function () {\n            var _this = this;\n            var databaseConnection, queryStartTime;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.connect()];\n                    case 1:\n                        databaseConnection = _a.sent();\n                        this.driver.connection.logger.logQuery(query, parameters, this);\n                        queryStartTime = +new Date();\n                        databaseConnection.executeSql(query, parameters, function (result) {\n                            // log slow queries if maxQueryExecution time is set\n                            var maxQueryExecutionTime = _this.driver.connection.options.maxQueryExecutionTime;\n                            var queryEndTime = +new Date();\n                            var queryExecutionTime = queryEndTime - queryStartTime;\n                            if (maxQueryExecutionTime && queryExecutionTime > maxQueryExecutionTime)\n                                _this.driver.connection.logger.logQuerySlow(queryExecutionTime, query, parameters, _this);\n                            // return id of inserted row, if query was insert statement.\n                            if (query.substr(0, 11) === \"INSERT INTO\") {\n                                ok(result.insertId);\n                            }\n                            else {\n                                var resultSet = [];\n                                for (var i = 0; i < result.rows.length; i++) {\n                                    resultSet.push(result.rows.item(i));\n                                }\n                                ok(resultSet);\n                            }\n                        }, function (err) {\n                            _this.driver.connection.logger.logQueryError(err, query, parameters, _this);\n                            fail(new QueryFailedError_1.QueryFailedError(query, parameters, err));\n                        });\n                        return [2 /*return*/];\n                }\n            });\n        }); });\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Parametrizes given object of values. Used to create column=value queries.\n     */\n    ReactNativeQueryRunner.prototype.parametrize = function (objectLiteral, startIndex) {\n        if (startIndex === void 0) { startIndex = 0; }\n        return Object.keys(objectLiteral).map(function (key, index) { return \"\\\"\" + key + \"\\\"\" + \"=?\"; });\n    };\n    return ReactNativeQueryRunner;\n}(AbstractSqliteQueryRunner_1.AbstractSqliteQueryRunner));\nexports.ReactNativeQueryRunner = ReactNativeQueryRunner;\n\n//# sourceMappingURL=ReactNativeQueryRunner.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/driver/react-native/ReactNativeQueryRunner.js?");

/***/ }),

/***/ "./node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DateUtils_1 = __webpack_require__(/*! ../../util/DateUtils */ \"./node_modules/typeorm/util/DateUtils.js\");\nvar RdbmsSchemaBuilder_1 = __webpack_require__(/*! ../../schema-builder/RdbmsSchemaBuilder */ \"./node_modules/typeorm/schema-builder/RdbmsSchemaBuilder.js\");\nvar OrmUtils_1 = __webpack_require__(/*! ../../util/OrmUtils */ \"./node_modules/typeorm/util/OrmUtils.js\");\n/**\n * Organizes communication with sqlite DBMS.\n */\nvar AbstractSqliteDriver = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function AbstractSqliteDriver(connection) {\n        /**\n         * Indicates if replication is enabled.\n         */\n        this.isReplicated = false;\n        /**\n         * Indicates if tree tables are supported by this driver.\n         */\n        this.treeSupport = true;\n        /**\n         * Gets list of supported column data types by a driver.\n         *\n         * @see https://www.tutorialspoint.com/sqlite/sqlite_data_types.htm\n         * @see https://sqlite.org/datatype3.html\n         */\n        this.supportedDataTypes = [\n            \"int\",\n            \"integer\",\n            \"tinyint\",\n            \"smallint\",\n            \"mediumint\",\n            \"bigint\",\n            \"unsigned big int\",\n            \"int2\",\n            \"int8\",\n            \"integer\",\n            \"character\",\n            \"varchar\",\n            \"varying character\",\n            \"nchar\",\n            \"native character\",\n            \"nvarchar\",\n            \"text\",\n            \"clob\",\n            \"text\",\n            \"blob\",\n            \"real\",\n            \"double\",\n            \"double precision\",\n            \"float\",\n            \"real\",\n            \"numeric\",\n            \"decimal\",\n            \"boolean\",\n            \"date\",\n            \"time\",\n            \"datetime\"\n        ];\n        /**\n         * Gets list of column data types that support length by a driver.\n         */\n        this.withLengthColumnTypes = [\n            \"character\",\n            \"varchar\",\n            \"varying character\",\n            \"nchar\",\n            \"native character\",\n            \"nvarchar\",\n            \"text\",\n            \"blob\",\n            \"clob\"\n        ];\n        /**\n         * Gets list of spatial column data types.\n         */\n        this.spatialTypes = [];\n        /**\n         * Gets list of column data types that support precision by a driver.\n         */\n        this.withPrecisionColumnTypes = [];\n        /**\n         * Gets list of column data types that support scale by a driver.\n         */\n        this.withScaleColumnTypes = [];\n        /**\n         * Orm has special columns and we need to know what database column types should be for those types.\n         * Column types are driver dependant.\n         */\n        this.mappedDataTypes = {\n            createDate: \"datetime\",\n            createDateDefault: \"datetime('now')\",\n            updateDate: \"datetime\",\n            updateDateDefault: \"datetime('now')\",\n            version: \"integer\",\n            treeLevel: \"integer\",\n            migrationId: \"integer\",\n            migrationName: \"varchar\",\n            migrationTimestamp: \"bigint\",\n            cacheId: \"int\",\n            cacheIdentifier: \"varchar\",\n            cacheTime: \"bigint\",\n            cacheDuration: \"int\",\n            cacheQuery: \"text\",\n            cacheResult: \"text\",\n        };\n        this.connection = connection;\n        this.options = connection.options;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Performs connection to the database.\n     */\n    AbstractSqliteDriver.prototype.connect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = this;\n                        return [4 /*yield*/, this.createDatabaseConnection()];\n                    case 1:\n                        _a.databaseConnection = _b.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Makes any action after connection (e.g. create extensions in Postgres driver).\n     */\n    AbstractSqliteDriver.prototype.afterConnect = function () {\n        return Promise.resolve();\n    };\n    /**\n     * Closes connection with database.\n     */\n    AbstractSqliteDriver.prototype.disconnect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2 /*return*/, new Promise(function (ok, fail) {\n                        _this.queryRunner = undefined;\n                        _this.databaseConnection.close(function (err) { return err ? fail(err) : ok(); });\n                    })];\n            });\n        });\n    };\n    /**\n     * Creates a schema builder used to build and sync a schema.\n     */\n    AbstractSqliteDriver.prototype.createSchemaBuilder = function () {\n        return new RdbmsSchemaBuilder_1.RdbmsSchemaBuilder(this.connection);\n    };\n    /**\n     * Prepares given value to a value to be persisted, based on its column type and metadata.\n     */\n    AbstractSqliteDriver.prototype.preparePersistentValue = function (value, columnMetadata) {\n        if (columnMetadata.transformer)\n            value = columnMetadata.transformer.to(value);\n        if (value === null || value === undefined)\n            return value;\n        if (columnMetadata.type === Boolean || columnMetadata.type === \"boolean\") {\n            return value === true ? 1 : 0;\n        }\n        else if (columnMetadata.type === \"date\") {\n            return DateUtils_1.DateUtils.mixedDateToDateString(value);\n        }\n        else if (columnMetadata.type === \"time\") {\n            return DateUtils_1.DateUtils.mixedDateToTimeString(value);\n        }\n        else if (columnMetadata.type === \"datetime\" || columnMetadata.type === Date) {\n            // to string conversation needs because SQLite stores date as integer number, when date came as Object\n            // TODO: think about `toUTC` conversion\n            return DateUtils_1.DateUtils.mixedDateToUtcDatetimeString(value);\n        }\n        else if (columnMetadata.type === \"simple-array\") {\n            return DateUtils_1.DateUtils.simpleArrayToString(value);\n        }\n        else if (columnMetadata.type === \"simple-json\") {\n            return DateUtils_1.DateUtils.simpleJsonToString(value);\n        }\n        return value;\n    };\n    /**\n     * Prepares given value to a value to be hydrated, based on its column type or metadata.\n     */\n    AbstractSqliteDriver.prototype.prepareHydratedValue = function (value, columnMetadata) {\n        if (value === null || value === undefined)\n            return value;\n        if (columnMetadata.type === Boolean || columnMetadata.type === \"boolean\") {\n            value = value ? true : false;\n        }\n        else if (columnMetadata.type === \"datetime\" || columnMetadata.type === Date) {\n            /**\n             * Fix date conversion issue\n             *\n             * If the format of the date string is \"2018-03-14 02:33:33.906\", Safari (and iOS WKWebView) will convert it to an invalid date object.\n             * We need to modify the date string to \"2018-03-14T02:33:33.906Z\" and Safari will convert it correctly.\n             *\n             * ISO 8601\n             * https://www.w3.org/TR/NOTE-datetime\n             */\n            if (value && typeof value === \"string\") {\n                value = value.replace(\" \", \"T\") + \"Z\";\n            }\n            value = DateUtils_1.DateUtils.normalizeHydratedDate(value);\n        }\n        else if (columnMetadata.type === \"date\") {\n            value = DateUtils_1.DateUtils.mixedDateToDateString(value);\n        }\n        else if (columnMetadata.type === \"time\") {\n            value = DateUtils_1.DateUtils.mixedTimeToString(value);\n        }\n        else if (columnMetadata.type === \"simple-array\") {\n            value = DateUtils_1.DateUtils.stringToSimpleArray(value);\n        }\n        else if (columnMetadata.type === \"simple-json\") {\n            value = DateUtils_1.DateUtils.stringToSimpleJson(value);\n        }\n        if (columnMetadata.transformer)\n            value = columnMetadata.transformer.from(value);\n        return value;\n    };\n    /**\n     * Replaces parameters in the given sql with special escaping character\n     * and an array of parameter names to be passed to a query.\n     */\n    AbstractSqliteDriver.prototype.escapeQueryWithParameters = function (sql, parameters, nativeParameters) {\n        var builtParameters = Object.keys(nativeParameters).map(function (key) {\n            // Mapping boolean values to their numeric representation\n            if (typeof nativeParameters[key] === \"boolean\") {\n                return nativeParameters[key] === true ? 1 : 0;\n            }\n            return nativeParameters[key];\n        });\n        if (!parameters || !Object.keys(parameters).length)\n            return [sql, builtParameters];\n        var keys = Object.keys(parameters).map(function (parameter) { return \"(:(\\\\.\\\\.\\\\.)?\" + parameter + \"\\\\b)\"; }).join(\"|\");\n        sql = sql.replace(new RegExp(keys, \"g\"), function (key) {\n            var value;\n            var isArray = false;\n            if (key.substr(0, 4) === \":...\") {\n                isArray = true;\n                value = parameters[key.substr(4)];\n            }\n            else {\n                value = parameters[key.substr(1)];\n            }\n            if (isArray) {\n                return value.map(function (v) {\n                    builtParameters.push(v);\n                    return \"?\";\n                    // return \"$\" + builtParameters.length;\n                }).join(\", \");\n            }\n            else if (value instanceof Function) {\n                return value();\n            }\n            else {\n                builtParameters.push(value);\n                return \"?\";\n                // return \"$\" + builtParameters.length;\n            }\n        }); // todo: make replace only in value statements, otherwise problems\n        return [sql, builtParameters];\n    };\n    /**\n     * Escapes a column name.\n     */\n    AbstractSqliteDriver.prototype.escape = function (columnName) {\n        return \"\\\"\" + columnName + \"\\\"\";\n    };\n    /**\n     * Build full table name with database name, schema name and table name.\n     * E.g. \"myDB\".\"mySchema\".\"myTable\"\n     *\n     * Returns only simple table name because all inherited drivers does not supports schema and database.\n     */\n    AbstractSqliteDriver.prototype.buildTableName = function (tableName, schema, database) {\n        return tableName;\n    };\n    /**\n     * Creates a database type from a given column metadata.\n     */\n    AbstractSqliteDriver.prototype.normalizeType = function (column) {\n        if (column.type === Number || column.type === \"int\") {\n            return \"integer\";\n        }\n        else if (column.type === String) {\n            return \"varchar\";\n        }\n        else if (column.type === Date) {\n            return \"datetime\";\n        }\n        else if (column.type === Boolean) {\n            return \"boolean\";\n        }\n        else if (column.type === \"uuid\") {\n            return \"varchar\";\n        }\n        else if (column.type === \"simple-array\") {\n            return \"text\";\n        }\n        else if (column.type === \"simple-json\") {\n            return \"text\";\n        }\n        else {\n            return column.type || \"\";\n        }\n    };\n    /**\n     * Normalizes \"default\" value of the column.\n     */\n    AbstractSqliteDriver.prototype.normalizeDefault = function (columnMetadata) {\n        var defaultValue = columnMetadata.default;\n        if (typeof defaultValue === \"number\") {\n            return \"\" + defaultValue;\n        }\n        else if (typeof defaultValue === \"boolean\") {\n            return defaultValue === true ? \"1\" : \"0\";\n        }\n        else if (typeof defaultValue === \"function\") {\n            return defaultValue();\n        }\n        else if (typeof defaultValue === \"string\") {\n            return \"'\" + defaultValue + \"'\";\n        }\n        else {\n            return defaultValue;\n        }\n    };\n    /**\n     * Normalizes \"isUnique\" value of the column.\n     */\n    AbstractSqliteDriver.prototype.normalizeIsUnique = function (column) {\n        return column.entityMetadata.uniques.some(function (uq) { return uq.columns.length === 1 && uq.columns[0] === column; });\n    };\n    /**\n     * Calculates column length taking into account the default length values.\n     */\n    AbstractSqliteDriver.prototype.getColumnLength = function (column) {\n        return column.length ? column.length.toString() : \"\";\n    };\n    /**\n     * Normalizes \"default\" value of the column.\n     */\n    AbstractSqliteDriver.prototype.createFullType = function (column) {\n        var type = column.type;\n        if (column.length) {\n            type += \"(\" + column.length + \")\";\n        }\n        else if (column.precision !== null && column.precision !== undefined && column.scale !== null && column.scale !== undefined) {\n            type += \"(\" + column.precision + \",\" + column.scale + \")\";\n        }\n        else if (column.precision !== null && column.precision !== undefined) {\n            type += \"(\" + column.precision + \")\";\n        }\n        if (column.isArray)\n            type += \" array\";\n        return type;\n    };\n    /**\n     * Obtains a new database connection to a master server.\n     * Used for replication.\n     * If replication is not setup then returns default connection's database connection.\n     */\n    AbstractSqliteDriver.prototype.obtainMasterConnection = function () {\n        return Promise.resolve();\n    };\n    /**\n     * Obtains a new database connection to a slave server.\n     * Used for replication.\n     * If replication is not setup then returns master (default) connection's database connection.\n     */\n    AbstractSqliteDriver.prototype.obtainSlaveConnection = function () {\n        return Promise.resolve();\n    };\n    /**\n     * Creates generated map of values generated or returned by database after INSERT query.\n     */\n    AbstractSqliteDriver.prototype.createGeneratedMap = function (metadata, insertResult) {\n        var generatedMap = metadata.generatedColumns.reduce(function (map, generatedColumn) {\n            var value;\n            if (generatedColumn.generationStrategy === \"increment\" && insertResult) {\n                value = insertResult;\n                // } else if (generatedColumn.generationStrategy === \"uuid\") {\n                //     value = insertValue[generatedColumn.databaseName];\n            }\n            if (!value)\n                return map;\n            return OrmUtils_1.OrmUtils.mergeDeep(map, generatedColumn.createValueMap(value));\n        }, {});\n        return Object.keys(generatedMap).length > 0 ? generatedMap : undefined;\n    };\n    /**\n     * Differentiate columns of this table and columns from the given column metadatas columns\n     * and returns only changed.\n     */\n    AbstractSqliteDriver.prototype.findChangedColumns = function (tableColumns, columnMetadatas) {\n        var _this = this;\n        return columnMetadatas.filter(function (columnMetadata) {\n            var tableColumn = tableColumns.find(function (c) { return c.name === columnMetadata.databaseName; });\n            if (!tableColumn)\n                return false; // we don't need new columns, we only need exist and changed\n            // console.log(\"table:\", columnMetadata.entityMetadata.tableName);\n            // console.log(\"name:\", tableColumn.name, columnMetadata.databaseName);\n            // console.log(\"type:\", tableColumn.type, this.normalizeType(columnMetadata));\n            // console.log(\"length:\", tableColumn.length, columnMetadata.length);\n            // console.log(\"precision:\", tableColumn.precision, columnMetadata.precision);\n            // console.log(\"scale:\", tableColumn.scale, columnMetadata.scale);\n            // console.log(\"comment:\", tableColumn.comment, columnMetadata.comment);\n            // console.log(\"default:\", tableColumn.default, columnMetadata.default);\n            // console.log(\"isPrimary:\", tableColumn.isPrimary, columnMetadata.isPrimary);\n            // console.log(\"isNullable:\", tableColumn.isNullable, columnMetadata.isNullable);\n            // console.log(\"isUnique:\", tableColumn.isUnique, this.normalizeIsUnique(columnMetadata));\n            // console.log(\"isGenerated:\", tableColumn.isGenerated, columnMetadata.isGenerated);\n            // console.log(\"==========================================\");\n            return tableColumn.name !== columnMetadata.databaseName\n                || tableColumn.type !== _this.normalizeType(columnMetadata)\n                || tableColumn.length !== columnMetadata.length\n                || tableColumn.precision !== columnMetadata.precision\n                || tableColumn.scale !== columnMetadata.scale\n                //  || tableColumn.comment !== columnMetadata.comment || // todo\n                || _this.normalizeDefault(columnMetadata) !== tableColumn.default\n                || tableColumn.isPrimary !== columnMetadata.isPrimary\n                || tableColumn.isNullable !== columnMetadata.isNullable\n                || tableColumn.isUnique !== _this.normalizeIsUnique(columnMetadata)\n                || (columnMetadata.generationStrategy !== \"uuid\" && tableColumn.isGenerated !== columnMetadata.isGenerated);\n        });\n    };\n    /**\n     * Returns true if driver supports RETURNING / OUTPUT statement.\n     */\n    AbstractSqliteDriver.prototype.isReturningSqlSupported = function () {\n        return false;\n    };\n    /**\n     * Returns true if driver supports uuid values generation on its own.\n     */\n    AbstractSqliteDriver.prototype.isUUIDGenerationSupported = function () {\n        return false;\n    };\n    /**\n     * Creates an escaped parameter.\n     */\n    AbstractSqliteDriver.prototype.createParameter = function (parameterName, index) {\n        // return \"$\" + (index + 1);\n        return \"?\";\n        // return \"$\" + parameterName;\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates connection with the database.\n     */\n    AbstractSqliteDriver.prototype.createDatabaseConnection = function () {\n        throw new Error(\"Do not use AbstractSqlite directly, it has to be used with one of the sqlite drivers\");\n    };\n    /**\n     * If driver dependency is not given explicitly, then try to load it via \"require\".\n     */\n    AbstractSqliteDriver.prototype.loadDependencies = function () {\n        // dependencies have to be loaded in the specific driver\n    };\n    return AbstractSqliteDriver;\n}());\nexports.AbstractSqliteDriver = AbstractSqliteDriver;\n\n//# sourceMappingURL=AbstractSqliteDriver.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js?");

/***/ }),

/***/ "./node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteQueryRunner.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteQueryRunner.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TransactionAlreadyStartedError_1 = __webpack_require__(/*! ../../error/TransactionAlreadyStartedError */ \"./node_modules/typeorm/error/TransactionAlreadyStartedError.js\");\nvar TransactionNotStartedError_1 = __webpack_require__(/*! ../../error/TransactionNotStartedError */ \"./node_modules/typeorm/error/TransactionNotStartedError.js\");\nvar TableColumn_1 = __webpack_require__(/*! ../../schema-builder/table/TableColumn */ \"./node_modules/typeorm/schema-builder/table/TableColumn.js\");\nvar ColumnMetadata_1 = __webpack_require__(/*! ../../metadata/ColumnMetadata */ \"./node_modules/typeorm/metadata/ColumnMetadata.js\");\nvar Table_1 = __webpack_require__(/*! ../../schema-builder/table/Table */ \"./node_modules/typeorm/schema-builder/table/Table.js\");\nvar TableIndex_1 = __webpack_require__(/*! ../../schema-builder/table/TableIndex */ \"./node_modules/typeorm/schema-builder/table/TableIndex.js\");\nvar TableForeignKey_1 = __webpack_require__(/*! ../../schema-builder/table/TableForeignKey */ \"./node_modules/typeorm/schema-builder/table/TableForeignKey.js\");\nvar TableUnique_1 = __webpack_require__(/*! ../../schema-builder/table/TableUnique */ \"./node_modules/typeorm/schema-builder/table/TableUnique.js\");\nvar BaseQueryRunner_1 = __webpack_require__(/*! ../../query-runner/BaseQueryRunner */ \"./node_modules/typeorm/query-runner/BaseQueryRunner.js\");\nvar OrmUtils_1 = __webpack_require__(/*! ../../util/OrmUtils */ \"./node_modules/typeorm/util/OrmUtils.js\");\nvar TableCheck_1 = __webpack_require__(/*! ../../schema-builder/table/TableCheck */ \"./node_modules/typeorm/schema-builder/table/TableCheck.js\");\n/**\n * Runs queries on a single sqlite database connection.\n */\nvar AbstractSqliteQueryRunner = /** @class */ (function (_super) {\n    __extends(AbstractSqliteQueryRunner, _super);\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function AbstractSqliteQueryRunner() {\n        return _super.call(this) || this;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates/uses database connection from the connection pool to perform further operations.\n     * Returns obtained database connection.\n     */\n    AbstractSqliteQueryRunner.prototype.connect = function () {\n        return Promise.resolve(this.driver.databaseConnection);\n    };\n    /**\n     * Releases used database connection.\n     * We just clear loaded tables and sql in memory, because sqlite do not support multiple connections thus query runners.\n     */\n    AbstractSqliteQueryRunner.prototype.release = function () {\n        this.loadedTables = [];\n        this.clearSqlMemory();\n        return Promise.resolve();\n    };\n    /**\n     * Starts transaction.\n     */\n    AbstractSqliteQueryRunner.prototype.startTransaction = function (isolationLevel) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.isTransactionActive)\n                            throw new TransactionAlreadyStartedError_1.TransactionAlreadyStartedError();\n                        this.isTransactionActive = true;\n                        if (!isolationLevel) return [3 /*break*/, 4];\n                        if (isolationLevel !== \"READ UNCOMMITTED\" && isolationLevel !== \"SERIALIZABLE\") {\n                            throw new Error(\"SQLite only supports SERIALIZABLE and READ UNCOMMITTED isolation\");\n                        }\n                        if (!(isolationLevel === \"READ UNCOMMITTED\")) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.query(\"PRAGMA read_uncommitted = true\")];\n                    case 1:\n                        _a.sent();\n                        return [3 /*break*/, 4];\n                    case 2: return [4 /*yield*/, this.query(\"PRAGMA read_uncommitted = false\")];\n                    case 3:\n                        _a.sent();\n                        _a.label = 4;\n                    case 4: return [4 /*yield*/, this.query(\"BEGIN TRANSACTION\")];\n                    case 5:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Commits transaction.\n     * Error will be thrown if transaction was not started.\n     */\n    AbstractSqliteQueryRunner.prototype.commitTransaction = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.isTransactionActive)\n                            throw new TransactionNotStartedError_1.TransactionNotStartedError();\n                        return [4 /*yield*/, this.query(\"COMMIT\")];\n                    case 1:\n                        _a.sent();\n                        this.isTransactionActive = false;\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Rollbacks transaction.\n     * Error will be thrown if transaction was not started.\n     */\n    AbstractSqliteQueryRunner.prototype.rollbackTransaction = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.isTransactionActive)\n                            throw new TransactionNotStartedError_1.TransactionNotStartedError();\n                        return [4 /*yield*/, this.query(\"ROLLBACK\")];\n                    case 1:\n                        _a.sent();\n                        this.isTransactionActive = false;\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Returns raw data stream.\n     */\n    AbstractSqliteQueryRunner.prototype.stream = function (query, parameters, onEnd, onError) {\n        throw new Error(\"Stream is not supported by sqlite driver.\");\n    };\n    /**\n     * Returns all available database names including system databases.\n     */\n    AbstractSqliteQueryRunner.prototype.getDatabases = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, Promise.resolve([])];\n            });\n        });\n    };\n    /**\n     * Returns all available schema names including system schemas.\n     * If database parameter specified, returns schemas of that database.\n     */\n    AbstractSqliteQueryRunner.prototype.getSchemas = function (database) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, Promise.resolve([])];\n            });\n        });\n    };\n    /**\n     * Checks if database with the given name exist.\n     */\n    AbstractSqliteQueryRunner.prototype.hasDatabase = function (database) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, Promise.resolve(false)];\n            });\n        });\n    };\n    /**\n     * Checks if schema with the given name exist.\n     */\n    AbstractSqliteQueryRunner.prototype.hasSchema = function (schema) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"This driver does not support table schemas\");\n            });\n        });\n    };\n    /**\n     * Checks if table with the given name exist in the database.\n     */\n    AbstractSqliteQueryRunner.prototype.hasTable = function (tableOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var tableName, sql, result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        tableName = tableOrName instanceof Table_1.Table ? tableOrName.name : tableOrName;\n                        sql = \"SELECT * FROM \\\"sqlite_master\\\" WHERE \\\"type\\\" = 'table' AND \\\"name\\\" = '\" + tableName + \"'\";\n                        return [4 /*yield*/, this.query(sql)];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, result.length ? true : false];\n                }\n            });\n        });\n    };\n    /**\n     * Checks if column with the given name exist in the given table.\n     */\n    AbstractSqliteQueryRunner.prototype.hasColumn = function (tableOrName, columnName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var tableName, sql, columns;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        tableName = tableOrName instanceof Table_1.Table ? tableOrName.name : tableOrName;\n                        sql = \"PRAGMA table_info(\\\"\" + tableName + \"\\\")\";\n                        return [4 /*yield*/, this.query(sql)];\n                    case 1:\n                        columns = _a.sent();\n                        return [2 /*return*/, !!columns.find(function (column) { return column[\"name\"] === columnName; })];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new database.\n     */\n    AbstractSqliteQueryRunner.prototype.createDatabase = function (database, ifNotExist) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, Promise.resolve()];\n            });\n        });\n    };\n    /**\n     * Drops database.\n     */\n    AbstractSqliteQueryRunner.prototype.dropDatabase = function (database, ifExist) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, Promise.resolve()];\n            });\n        });\n    };\n    /**\n     * Creates a new table schema.\n     */\n    AbstractSqliteQueryRunner.prototype.createSchema = function (schema, ifNotExist) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, Promise.resolve()];\n            });\n        });\n    };\n    /**\n     * Drops table schema.\n     */\n    AbstractSqliteQueryRunner.prototype.dropSchema = function (schemaPath, ifExist) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, Promise.resolve()];\n            });\n        });\n    };\n    /**\n     * Creates a new table.\n     */\n    AbstractSqliteQueryRunner.prototype.createTable = function (table, ifNotExist, createForeignKeys, createIndices) {\n        if (ifNotExist === void 0) { ifNotExist = false; }\n        if (createForeignKeys === void 0) { createForeignKeys = true; }\n        if (createIndices === void 0) { createIndices = true; }\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var upQueries, downQueries, isTableExist;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        upQueries = [];\n                        downQueries = [];\n                        if (!ifNotExist) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.hasTable(table)];\n                    case 1:\n                        isTableExist = _a.sent();\n                        if (isTableExist)\n                            return [2 /*return*/, Promise.resolve()];\n                        _a.label = 2;\n                    case 2:\n                        upQueries.push(this.createTableSql(table, createForeignKeys));\n                        downQueries.push(this.dropTableSql(table));\n                        if (createIndices) {\n                            table.indices.forEach(function (index) {\n                                // new index may be passed without name. In this case we generate index name manually.\n                                if (!index.name)\n                                    index.name = _this.connection.namingStrategy.indexName(table.name, index.columnNames, index.where);\n                                upQueries.push(_this.createIndexSql(table, index));\n                                downQueries.push(_this.dropIndexSql(index));\n                            });\n                        }\n                        return [4 /*yield*/, this.executeQueries(upQueries, downQueries)];\n                    case 3:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops the table.\n     */\n    AbstractSqliteQueryRunner.prototype.dropTable = function (tableOrName, ifExist, dropForeignKeys, dropIndices) {\n        if (dropForeignKeys === void 0) { dropForeignKeys = true; }\n        if (dropIndices === void 0) { dropIndices = true; }\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var isTableExist, createForeignKeys, table, _a, upQueries, downQueries;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!ifExist) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.hasTable(tableOrName)];\n                    case 1:\n                        isTableExist = _b.sent();\n                        if (!isTableExist)\n                            return [2 /*return*/, Promise.resolve()];\n                        _b.label = 2;\n                    case 2:\n                        createForeignKeys = dropForeignKeys;\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 3];\n                        _a = tableOrName;\n                        return [3 /*break*/, 5];\n                    case 3: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 4:\n                        _a = _b.sent();\n                        _b.label = 5;\n                    case 5:\n                        table = _a;\n                        upQueries = [];\n                        downQueries = [];\n                        if (dropIndices) {\n                            table.indices.forEach(function (index) {\n                                upQueries.push(_this.dropIndexSql(index));\n                                downQueries.push(_this.createIndexSql(table, index));\n                            });\n                        }\n                        upQueries.push(this.dropTableSql(table, ifExist));\n                        downQueries.push(this.createTableSql(table, createForeignKeys));\n                        return [4 /*yield*/, this.executeQueries(upQueries, downQueries)];\n                    case 6:\n                        _b.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Renames the given table.\n     */\n    AbstractSqliteQueryRunner.prototype.renameTable = function (oldTableOrName, newTableName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var oldTable, _a, newTable, up, down;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(oldTableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = oldTableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(oldTableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        oldTable = _a;\n                        newTable = oldTable.clone();\n                        newTable.name = newTableName;\n                        up = \"ALTER TABLE \\\"\" + oldTable.name + \"\\\" RENAME TO \\\"\" + newTableName + \"\\\"\";\n                        down = \"ALTER TABLE \\\"\" + newTableName + \"\\\" RENAME TO \\\"\" + oldTable.name + \"\\\"\";\n                        return [4 /*yield*/, this.executeQueries(up, down)];\n                    case 4:\n                        _b.sent();\n                        // rename old table;\n                        oldTable.name = newTable.name;\n                        // rename unique constraints\n                        newTable.uniques.forEach(function (unique) {\n                            unique.name = _this.connection.namingStrategy.uniqueConstraintName(newTable, unique.columnNames);\n                        });\n                        // rename foreign key constraints\n                        newTable.foreignKeys.forEach(function (foreignKey) {\n                            foreignKey.name = _this.connection.namingStrategy.foreignKeyName(newTable, foreignKey.columnNames);\n                        });\n                        // rename indices\n                        newTable.indices.forEach(function (index) {\n                            index.name = _this.connection.namingStrategy.indexName(newTable, index.columnNames, index.where);\n                        });\n                        // recreate table with new constraint names\n                        return [4 /*yield*/, this.recreateTable(newTable, oldTable)];\n                    case 5:\n                        // recreate table with new constraint names\n                        _b.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new column from the column in the table.\n     */\n    AbstractSqliteQueryRunner.prototype.addColumn = function (tableOrName, column) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        return [2 /*return*/, this.addColumns(table, [column])];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new columns from the column in the table.\n     */\n    AbstractSqliteQueryRunner.prototype.addColumns = function (tableOrName, columns) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, changedTable;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        changedTable = table.clone();\n                        columns.forEach(function (column) { return changedTable.addColumn(column); });\n                        return [4 /*yield*/, this.recreateTable(changedTable, table)];\n                    case 4:\n                        _b.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Renames column in the given table.\n     */\n    AbstractSqliteQueryRunner.prototype.renameColumn = function (tableOrName, oldTableColumnOrName, newTableColumnOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, oldColumn, newColumn;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        oldColumn = oldTableColumnOrName instanceof TableColumn_1.TableColumn ? oldTableColumnOrName : table.columns.find(function (c) { return c.name === oldTableColumnOrName; });\n                        if (!oldColumn)\n                            throw new Error(\"Column \\\"\" + oldTableColumnOrName + \"\\\" was not found in the \\\"\" + table.name + \"\\\" table.\");\n                        newColumn = undefined;\n                        if (newTableColumnOrName instanceof TableColumn_1.TableColumn) {\n                            newColumn = newTableColumnOrName;\n                        }\n                        else {\n                            newColumn = oldColumn.clone();\n                            newColumn.name = newTableColumnOrName;\n                        }\n                        return [2 /*return*/, this.changeColumn(table, oldColumn, newColumn)];\n                }\n            });\n        });\n    };\n    /**\n     * Changes a column in the table.\n     */\n    AbstractSqliteQueryRunner.prototype.changeColumn = function (tableOrName, oldTableColumnOrName, newColumn) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, oldColumn;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        oldColumn = oldTableColumnOrName instanceof TableColumn_1.TableColumn ? oldTableColumnOrName : table.columns.find(function (c) { return c.name === oldTableColumnOrName; });\n                        if (!oldColumn)\n                            throw new Error(\"Column \\\"\" + oldTableColumnOrName + \"\\\" was not found in the \\\"\" + table.name + \"\\\" table.\");\n                        return [4 /*yield*/, this.changeColumns(table, [{ oldColumn: oldColumn, newColumn: newColumn }])];\n                    case 4:\n                        _b.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Changes a column in the table.\n     * Changed column looses all its keys in the db.\n     */\n    AbstractSqliteQueryRunner.prototype.changeColumns = function (tableOrName, changedColumns) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var table, _a, changedTable;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        changedTable = table.clone();\n                        changedColumns.forEach(function (changedColumnSet) {\n                            if (changedColumnSet.newColumn.name !== changedColumnSet.oldColumn.name) {\n                                changedTable.findColumnUniques(changedColumnSet.oldColumn).forEach(function (unique) {\n                                    unique.columnNames.splice(unique.columnNames.indexOf(changedColumnSet.oldColumn.name), 1);\n                                    unique.columnNames.push(changedColumnSet.newColumn.name);\n                                    unique.name = _this.connection.namingStrategy.uniqueConstraintName(changedTable, unique.columnNames);\n                                });\n                                changedTable.findColumnForeignKeys(changedColumnSet.oldColumn).forEach(function (fk) {\n                                    fk.columnNames.splice(fk.columnNames.indexOf(changedColumnSet.oldColumn.name), 1);\n                                    fk.columnNames.push(changedColumnSet.newColumn.name);\n                                    fk.name = _this.connection.namingStrategy.foreignKeyName(changedTable, fk.columnNames);\n                                });\n                                changedTable.findColumnIndices(changedColumnSet.oldColumn).forEach(function (index) {\n                                    index.columnNames.splice(index.columnNames.indexOf(changedColumnSet.oldColumn.name), 1);\n                                    index.columnNames.push(changedColumnSet.newColumn.name);\n                                    index.name = _this.connection.namingStrategy.indexName(changedTable, index.columnNames, index.where);\n                                });\n                            }\n                            var originalColumn = changedTable.columns.find(function (column) { return column.name === changedColumnSet.oldColumn.name; });\n                            if (originalColumn)\n                                changedTable.columns[changedTable.columns.indexOf(originalColumn)] = changedColumnSet.newColumn;\n                        });\n                        return [4 /*yield*/, this.recreateTable(changedTable, table)];\n                    case 4:\n                        _b.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops column in the table.\n     */\n    AbstractSqliteQueryRunner.prototype.dropColumn = function (tableOrName, columnOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, column;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        column = columnOrName instanceof TableColumn_1.TableColumn ? columnOrName : table.findColumnByName(columnOrName);\n                        if (!column)\n                            throw new Error(\"Column \\\"\" + columnOrName + \"\\\" was not found in table \\\"\" + table.name + \"\\\"\");\n                        return [4 /*yield*/, this.dropColumns(table, [column])];\n                    case 4:\n                        _b.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops the columns in the table.\n     */\n    AbstractSqliteQueryRunner.prototype.dropColumns = function (tableOrName, columns) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, changedTable;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        changedTable = table.clone();\n                        columns.forEach(function (column) {\n                            changedTable.removeColumn(column);\n                            changedTable.findColumnUniques(column).forEach(function (unique) { return changedTable.removeUniqueConstraint(unique); });\n                            changedTable.findColumnIndices(column).forEach(function (index) { return changedTable.removeIndex(index); });\n                            changedTable.findColumnForeignKeys(column).forEach(function (fk) { return changedTable.removeForeignKey(fk); });\n                        });\n                        return [4 /*yield*/, this.recreateTable(changedTable, table)];\n                    case 4:\n                        _b.sent();\n                        // remove column and its constraints from original table.\n                        columns.forEach(function (column) {\n                            table.removeColumn(column);\n                            table.findColumnUniques(column).forEach(function (unique) { return table.removeUniqueConstraint(unique); });\n                            table.findColumnIndices(column).forEach(function (index) { return table.removeIndex(index); });\n                            table.findColumnForeignKeys(column).forEach(function (fk) { return table.removeForeignKey(fk); });\n                        });\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new primary key.\n     */\n    AbstractSqliteQueryRunner.prototype.createPrimaryKey = function (tableOrName, columnNames) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, changedTable;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        changedTable = table.clone();\n                        changedTable.columns.forEach(function (column) {\n                            if (columnNames.find(function (columnName) { return columnName === column.name; }))\n                                column.isPrimary = true;\n                        });\n                        return [4 /*yield*/, this.recreateTable(changedTable, table)];\n                    case 4:\n                        _b.sent();\n                        // mark columns as primary in original table\n                        table.columns.forEach(function (column) {\n                            if (columnNames.find(function (columnName) { return columnName === column.name; }))\n                                column.isPrimary = true;\n                        });\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Updates composite primary keys.\n     */\n    AbstractSqliteQueryRunner.prototype.updatePrimaryKeys = function (tableOrName, columns) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, Promise.resolve()];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops a primary key.\n     */\n    AbstractSqliteQueryRunner.prototype.dropPrimaryKey = function (tableOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, changedTable;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        changedTable = table.clone();\n                        changedTable.primaryColumns.forEach(function (column) {\n                            column.isPrimary = false;\n                        });\n                        return [4 /*yield*/, this.recreateTable(changedTable, table)];\n                    case 4:\n                        _b.sent();\n                        // mark primary columns as non-primary in original table\n                        table.primaryColumns.forEach(function (column) {\n                            column.isPrimary = false;\n                        });\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new unique constraint.\n     */\n    AbstractSqliteQueryRunner.prototype.createUniqueConstraint = function (tableOrName, uniqueConstraint) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.createUniqueConstraints(tableOrName, [uniqueConstraint])];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new unique constraints.\n     */\n    AbstractSqliteQueryRunner.prototype.createUniqueConstraints = function (tableOrName, uniqueConstraints) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, changedTable;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        changedTable = table.clone();\n                        uniqueConstraints.forEach(function (uniqueConstraint) { return changedTable.addUniqueConstraint(uniqueConstraint); });\n                        return [4 /*yield*/, this.recreateTable(changedTable, table)];\n                    case 4:\n                        _b.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops an unique constraint.\n     */\n    AbstractSqliteQueryRunner.prototype.dropUniqueConstraint = function (tableOrName, uniqueOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, uniqueConstraint;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        uniqueConstraint = uniqueOrName instanceof TableUnique_1.TableUnique ? uniqueOrName : table.uniques.find(function (u) { return u.name === uniqueOrName; });\n                        if (!uniqueConstraint)\n                            throw new Error(\"Supplied unique constraint was not found in table \" + table.name);\n                        return [4 /*yield*/, this.dropUniqueConstraints(table, [uniqueConstraint])];\n                    case 4:\n                        _b.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates an unique constraints.\n     */\n    AbstractSqliteQueryRunner.prototype.dropUniqueConstraints = function (tableOrName, uniqueConstraints) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, changedTable;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        changedTable = table.clone();\n                        uniqueConstraints.forEach(function (uniqueConstraint) { return changedTable.removeUniqueConstraint(uniqueConstraint); });\n                        return [4 /*yield*/, this.recreateTable(changedTable, table)];\n                    case 4:\n                        _b.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates new check constraint.\n     */\n    AbstractSqliteQueryRunner.prototype.createCheckConstraint = function (tableOrName, checkConstraint) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.createCheckConstraints(tableOrName, [checkConstraint])];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates new check constraints.\n     */\n    AbstractSqliteQueryRunner.prototype.createCheckConstraints = function (tableOrName, checkConstraints) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, changedTable;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        changedTable = table.clone();\n                        checkConstraints.forEach(function (checkConstraint) { return changedTable.addCheckConstraint(checkConstraint); });\n                        return [4 /*yield*/, this.recreateTable(changedTable, table)];\n                    case 4:\n                        _b.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops check constraint.\n     */\n    AbstractSqliteQueryRunner.prototype.dropCheckConstraint = function (tableOrName, checkOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, checkConstraint;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        checkConstraint = checkOrName instanceof TableCheck_1.TableCheck ? checkOrName : table.checks.find(function (c) { return c.name === checkOrName; });\n                        if (!checkConstraint)\n                            throw new Error(\"Supplied check constraint was not found in table \" + table.name);\n                        return [4 /*yield*/, this.dropCheckConstraints(table, [checkConstraint])];\n                    case 4:\n                        _b.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops check constraints.\n     */\n    AbstractSqliteQueryRunner.prototype.dropCheckConstraints = function (tableOrName, checkConstraints) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, changedTable;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        changedTable = table.clone();\n                        checkConstraints.forEach(function (checkConstraint) { return changedTable.removeCheckConstraint(checkConstraint); });\n                        return [4 /*yield*/, this.recreateTable(changedTable, table)];\n                    case 4:\n                        _b.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new foreign key.\n     */\n    AbstractSqliteQueryRunner.prototype.createForeignKey = function (tableOrName, foreignKey) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.createForeignKeys(tableOrName, [foreignKey])];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new foreign keys.\n     */\n    AbstractSqliteQueryRunner.prototype.createForeignKeys = function (tableOrName, foreignKeys) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, changedTable;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        changedTable = table.clone();\n                        foreignKeys.forEach(function (foreignKey) { return changedTable.addForeignKey(foreignKey); });\n                        return [4 /*yield*/, this.recreateTable(changedTable, table)];\n                    case 4:\n                        _b.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops a foreign key from the table.\n     */\n    AbstractSqliteQueryRunner.prototype.dropForeignKey = function (tableOrName, foreignKeyOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, foreignKey;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        foreignKey = foreignKeyOrName instanceof TableForeignKey_1.TableForeignKey ? foreignKeyOrName : table.foreignKeys.find(function (fk) { return fk.name === foreignKeyOrName; });\n                        if (!foreignKey)\n                            throw new Error(\"Supplied foreign key was not found in table \" + table.name);\n                        return [4 /*yield*/, this.dropForeignKeys(tableOrName, [foreignKey])];\n                    case 4:\n                        _b.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops a foreign keys from the table.\n     */\n    AbstractSqliteQueryRunner.prototype.dropForeignKeys = function (tableOrName, foreignKeys) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, changedTable;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        changedTable = table.clone();\n                        foreignKeys.forEach(function (foreignKey) { return changedTable.removeForeignKey(foreignKey); });\n                        return [4 /*yield*/, this.recreateTable(changedTable, table)];\n                    case 4:\n                        _b.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new index.\n     */\n    AbstractSqliteQueryRunner.prototype.createIndex = function (tableOrName, index) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, up, down;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        // new index may be passed without name. In this case we generate index name manually.\n                        if (!index.name)\n                            index.name = this.connection.namingStrategy.indexName(table.name, index.columnNames, index.where);\n                        up = this.createIndexSql(table, index);\n                        down = this.dropIndexSql(index);\n                        return [4 /*yield*/, this.executeQueries(up, down)];\n                    case 4:\n                        _b.sent();\n                        table.addIndex(index);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new indices\n     */\n    AbstractSqliteQueryRunner.prototype.createIndices = function (tableOrName, indices) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var promises;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        promises = indices.map(function (index) { return _this.createIndex(tableOrName, index); });\n                        return [4 /*yield*/, Promise.all(promises)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops an index from the table.\n     */\n    AbstractSqliteQueryRunner.prototype.dropIndex = function (tableOrName, indexOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, index, up, down;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        index = indexOrName instanceof TableIndex_1.TableIndex ? indexOrName : table.indices.find(function (i) { return i.name === indexOrName; });\n                        if (!index)\n                            throw new Error(\"Supplied index was not found in table \" + table.name);\n                        up = this.dropIndexSql(index);\n                        down = this.createIndexSql(table, index);\n                        return [4 /*yield*/, this.executeQueries(up, down)];\n                    case 4:\n                        _b.sent();\n                        table.removeIndex(index);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops an indices from the table.\n     */\n    AbstractSqliteQueryRunner.prototype.dropIndices = function (tableOrName, indices) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var promises;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        promises = indices.map(function (index) { return _this.dropIndex(tableOrName, index); });\n                        return [4 /*yield*/, Promise.all(promises)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Clears all table contents.\n     * Note: this operation uses SQL's TRUNCATE query which cannot be reverted in transactions.\n     */\n    AbstractSqliteQueryRunner.prototype.clearTable = function (tableName) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.query(\"DELETE FROM \\\"\" + tableName + \"\\\"\")];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Removes all tables from the currently connected database.\n     */\n    AbstractSqliteQueryRunner.prototype.clearDatabase = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var selectDropsQuery, dropQueries, error_1, rollbackError_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.query(\"PRAGMA foreign_keys = OFF;\")];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, this.startTransaction()];\n                    case 2:\n                        _a.sent();\n                        _a.label = 3;\n                    case 3:\n                        _a.trys.push([3, 7, 12, 14]);\n                        selectDropsQuery = \"SELECT 'DROP TABLE \\\"' || name || '\\\";' as query FROM \\\"sqlite_master\\\" WHERE \\\"type\\\" = 'table' AND \\\"name\\\" != 'sqlite_sequence'\";\n                        return [4 /*yield*/, this.query(selectDropsQuery)];\n                    case 4:\n                        dropQueries = _a.sent();\n                        return [4 /*yield*/, Promise.all(dropQueries.map(function (q) { return _this.query(q[\"query\"]); }))];\n                    case 5:\n                        _a.sent();\n                        return [4 /*yield*/, this.commitTransaction()];\n                    case 6:\n                        _a.sent();\n                        return [3 /*break*/, 14];\n                    case 7:\n                        error_1 = _a.sent();\n                        _a.label = 8;\n                    case 8:\n                        _a.trys.push([8, 10, , 11]);\n                        return [4 /*yield*/, this.rollbackTransaction()];\n                    case 9:\n                        _a.sent();\n                        return [3 /*break*/, 11];\n                    case 10:\n                        rollbackError_1 = _a.sent();\n                        return [3 /*break*/, 11];\n                    case 11: throw error_1;\n                    case 12: return [4 /*yield*/, this.query(\"PRAGMA foreign_keys = ON;\")];\n                    case 13:\n                        _a.sent();\n                        return [7 /*endfinally*/];\n                    case 14: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Loads all tables (with given names) from the database and creates a Table from them.\n     */\n    AbstractSqliteQueryRunner.prototype.loadTables = function (tableNames) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var tableNamesString, dbTables, dbIndicesDef;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        // if no tables given then no need to proceed\n                        if (!tableNames || !tableNames.length)\n                            return [2 /*return*/, []];\n                        tableNamesString = tableNames.map(function (tableName) { return \"'\" + tableName + \"'\"; }).join(\", \");\n                        return [4 /*yield*/, this.query(\"SELECT * FROM \\\"sqlite_master\\\" WHERE \\\"type\\\" = 'table' AND \\\"name\\\" IN (\" + tableNamesString + \")\")];\n                    case 1:\n                        dbTables = _a.sent();\n                        return [4 /*yield*/, this.query(\"SELECT * FROM \\\"sqlite_master\\\" WHERE \\\"type\\\" = 'index' AND \\\"tbl_name\\\" IN (\" + tableNamesString + \")\")];\n                    case 2:\n                        dbIndicesDef = _a.sent();\n                        // if tables were not found in the db, no need to proceed\n                        if (!dbTables || !dbTables.length)\n                            return [2 /*return*/, []];\n                        // create table schemas for loaded tables\n                        return [2 /*return*/, Promise.all(dbTables.map(function (dbTable) { return __awaiter(_this, void 0, void 0, function () {\n                                var _this = this;\n                                var table, sql, _a, dbColumns, dbIndices, dbForeignKeys, autoIncrementColumnName, tableSql, comma, bracket, tableForeignKeyConstraints, tableUniquePromises, _b, result, regexp, indicesPromises, indices;\n                                return __generator(this, function (_c) {\n                                    switch (_c.label) {\n                                        case 0:\n                                            table = new Table_1.Table({ name: dbTable[\"name\"] });\n                                            sql = dbTable[\"sql\"];\n                                            return [4 /*yield*/, Promise.all([\n                                                    this.query(\"PRAGMA table_info(\\\"\" + dbTable[\"name\"] + \"\\\")\"),\n                                                    this.query(\"PRAGMA index_list(\\\"\" + dbTable[\"name\"] + \"\\\")\"),\n                                                    this.query(\"PRAGMA foreign_key_list(\\\"\" + dbTable[\"name\"] + \"\\\")\"),\n                                                ])];\n                                        case 1:\n                                            _a = __read.apply(void 0, [_c.sent(), 3]), dbColumns = _a[0], dbIndices = _a[1], dbForeignKeys = _a[2];\n                                            autoIncrementColumnName = undefined;\n                                            tableSql = dbTable[\"sql\"];\n                                            if (tableSql.indexOf(\"AUTOINCREMENT\") !== -1) {\n                                                autoIncrementColumnName = tableSql.substr(0, tableSql.indexOf(\"AUTOINCREMENT\"));\n                                                comma = autoIncrementColumnName.lastIndexOf(\",\");\n                                                bracket = autoIncrementColumnName.lastIndexOf(\"(\");\n                                                if (comma !== -1) {\n                                                    autoIncrementColumnName = autoIncrementColumnName.substr(comma);\n                                                    autoIncrementColumnName = autoIncrementColumnName.substr(0, autoIncrementColumnName.lastIndexOf(\"\\\"\"));\n                                                    autoIncrementColumnName = autoIncrementColumnName.substr(autoIncrementColumnName.indexOf(\"\\\"\") + 1);\n                                                }\n                                                else if (bracket !== -1) {\n                                                    autoIncrementColumnName = autoIncrementColumnName.substr(bracket);\n                                                    autoIncrementColumnName = autoIncrementColumnName.substr(0, autoIncrementColumnName.lastIndexOf(\"\\\"\"));\n                                                    autoIncrementColumnName = autoIncrementColumnName.substr(autoIncrementColumnName.indexOf(\"\\\"\") + 1);\n                                                }\n                                            }\n                                            // create columns from the loaded columns\n                                            table.columns = dbColumns.map(function (dbColumn) {\n                                                var tableColumn = new TableColumn_1.TableColumn();\n                                                tableColumn.name = dbColumn[\"name\"];\n                                                tableColumn.type = dbColumn[\"type\"].toLowerCase();\n                                                tableColumn.default = dbColumn[\"dflt_value\"] !== null && dbColumn[\"dflt_value\"] !== undefined ? dbColumn[\"dflt_value\"] : undefined;\n                                                tableColumn.isNullable = dbColumn[\"notnull\"] === 0;\n                                                // primary keys are numbered starting with 1, columns that aren't primary keys are marked with 0\n                                                tableColumn.isPrimary = dbColumn[\"pk\"] > 0;\n                                                tableColumn.comment = \"\"; // SQLite does not support column comments\n                                                tableColumn.isGenerated = autoIncrementColumnName === dbColumn[\"name\"];\n                                                if (tableColumn.isGenerated) {\n                                                    tableColumn.generationStrategy = \"increment\";\n                                                }\n                                                // parse datatype and attempt to retrieve length\n                                                var pos = tableColumn.type.indexOf(\"(\");\n                                                if (pos !== -1) {\n                                                    var dataType_1 = tableColumn.type.substr(0, pos);\n                                                    if (!!_this.driver.withLengthColumnTypes.find(function (col) { return col === dataType_1; })) {\n                                                        var len = parseInt(tableColumn.type.substring(pos + 1, tableColumn.type.length - 1));\n                                                        if (len) {\n                                                            tableColumn.length = len.toString();\n                                                            tableColumn.type = dataType_1; // remove the length part from the datatype\n                                                        }\n                                                    }\n                                                }\n                                                return tableColumn;\n                                            });\n                                            tableForeignKeyConstraints = OrmUtils_1.OrmUtils.uniq(dbForeignKeys, function (dbForeignKey) { return dbForeignKey[\"id\"]; });\n                                            table.foreignKeys = tableForeignKeyConstraints.map(function (foreignKey) {\n                                                var ownForeignKeys = dbForeignKeys.filter(function (dbForeignKey) { return dbForeignKey[\"id\"] === foreignKey[\"id\"] && dbForeignKey[\"table\"] === foreignKey[\"table\"]; });\n                                                var columnNames = ownForeignKeys.map(function (dbForeignKey) { return dbForeignKey[\"from\"]; });\n                                                var referencedColumnNames = ownForeignKeys.map(function (dbForeignKey) { return dbForeignKey[\"to\"]; });\n                                                // build foreign key name, because we can not get it directly.\n                                                var fkName = _this.connection.namingStrategy.foreignKeyName(table, columnNames);\n                                                return new TableForeignKey_1.TableForeignKey({\n                                                    name: fkName,\n                                                    columnNames: columnNames,\n                                                    referencedTableName: foreignKey[\"table\"],\n                                                    referencedColumnNames: referencedColumnNames,\n                                                    onDelete: foreignKey[\"on_delete\"],\n                                                    onUpdate: foreignKey[\"on_update\"]\n                                                });\n                                            });\n                                            tableUniquePromises = dbIndices\n                                                .filter(function (dbIndex) { return dbIndex[\"origin\"] === \"u\"; })\n                                                .map(function (dbIndex) { return dbIndex[\"name\"]; })\n                                                .filter(function (value, index, self) { return self.indexOf(value) === index; })\n                                                .map(function (dbIndexName) { return __awaiter(_this, void 0, void 0, function () {\n                                                var dbIndex, indexInfos, indexColumns, column;\n                                                return __generator(this, function (_a) {\n                                                    switch (_a.label) {\n                                                        case 0:\n                                                            dbIndex = dbIndices.find(function (dbIndex) { return dbIndex[\"name\"] === dbIndexName; });\n                                                            return [4 /*yield*/, this.query(\"PRAGMA index_info(\\\"\" + dbIndex[\"name\"] + \"\\\")\")];\n                                                        case 1:\n                                                            indexInfos = _a.sent();\n                                                            indexColumns = indexInfos\n                                                                .sort(function (indexInfo1, indexInfo2) { return parseInt(indexInfo1[\"seqno\"]) - parseInt(indexInfo2[\"seqno\"]); })\n                                                                .map(function (indexInfo) { return indexInfo[\"name\"]; });\n                                                            if (indexColumns.length === 1) {\n                                                                column = table.columns.find(function (column) {\n                                                                    return !!indexColumns.find(function (indexColumn) { return indexColumn === column.name; });\n                                                                });\n                                                                if (column)\n                                                                    column.isUnique = true;\n                                                            }\n                                                            // Sqlite does not store unique constraint name, so we generate its name manually.\n                                                            return [2 /*return*/, new TableUnique_1.TableUnique({\n                                                                    name: this.connection.namingStrategy.uniqueConstraintName(table, indexColumns),\n                                                                    columnNames: indexColumns\n                                                                })];\n                                                    }\n                                                });\n                                            }); });\n                                            _b = table;\n                                            return [4 /*yield*/, Promise.all(tableUniquePromises)];\n                                        case 2:\n                                            _b.uniques = (_c.sent());\n                                            regexp = /CONSTRAINT \"([^\"]*)\" CHECK (\\(.*?\\))([,]|[)]$)/g;\n                                            while (((result = regexp.exec(sql)) !== null)) {\n                                                table.checks.push(new TableCheck_1.TableCheck({ name: result[1], expression: result[2] }));\n                                            }\n                                            indicesPromises = dbIndices\n                                                .filter(function (dbIndex) { return dbIndex[\"origin\"] === \"c\"; })\n                                                .map(function (dbIndex) { return dbIndex[\"name\"]; })\n                                                .filter(function (value, index, self) { return self.indexOf(value) === index; }) // unqiue\n                                                .map(function (dbIndexName) { return __awaiter(_this, void 0, void 0, function () {\n                                                var indexDef, condition, dbIndex, indexInfos, indexColumns, isUnique;\n                                                return __generator(this, function (_a) {\n                                                    switch (_a.label) {\n                                                        case 0:\n                                                            indexDef = dbIndicesDef.find(function (dbIndexDef) { return dbIndexDef[\"name\"] === dbIndexName; });\n                                                            condition = /WHERE (.*)/.exec(indexDef[\"sql\"]);\n                                                            dbIndex = dbIndices.find(function (dbIndex) { return dbIndex[\"name\"] === dbIndexName; });\n                                                            return [4 /*yield*/, this.query(\"PRAGMA index_info(\\\"\" + dbIndex[\"name\"] + \"\\\")\")];\n                                                        case 1:\n                                                            indexInfos = _a.sent();\n                                                            indexColumns = indexInfos\n                                                                .sort(function (indexInfo1, indexInfo2) { return parseInt(indexInfo1[\"seqno\"]) - parseInt(indexInfo2[\"seqno\"]); })\n                                                                .map(function (indexInfo) { return indexInfo[\"name\"]; });\n                                                            isUnique = dbIndex[\"unique\"] === \"1\" || dbIndex[\"unique\"] === 1;\n                                                            return [2 /*return*/, new TableIndex_1.TableIndex({\n                                                                    table: table,\n                                                                    name: dbIndex[\"name\"],\n                                                                    columnNames: indexColumns,\n                                                                    isUnique: isUnique,\n                                                                    where: condition ? condition[1] : undefined\n                                                                })];\n                                                    }\n                                                });\n                                            }); });\n                                            return [4 /*yield*/, Promise.all(indicesPromises)];\n                                        case 3:\n                                            indices = _c.sent();\n                                            table.indices = indices.filter(function (index) { return !!index; });\n                                            return [2 /*return*/, table];\n                                    }\n                                });\n                            }); }))];\n                }\n            });\n        });\n    };\n    /**\n     * Builds create table sql.\n     */\n    AbstractSqliteQueryRunner.prototype.createTableSql = function (table, createForeignKeys) {\n        var _this = this;\n        var primaryColumns = table.columns.filter(function (column) { return column.isPrimary; });\n        var hasAutoIncrement = primaryColumns.find(function (column) { return column.isGenerated && column.generationStrategy === \"increment\"; });\n        var skipPrimary = primaryColumns.length > 1;\n        if (skipPrimary && hasAutoIncrement)\n            throw new Error(\"Sqlite does not support AUTOINCREMENT on composite primary key\");\n        var columnDefinitions = table.columns.map(function (column) { return _this.buildCreateColumnSql(column, skipPrimary); }).join(\", \");\n        var sql = \"CREATE TABLE \\\"\" + table.name + \"\\\" (\" + columnDefinitions;\n        // need for `addColumn()` method, because it recreates table.\n        table.columns\n            .filter(function (column) { return column.isUnique; })\n            .forEach(function (column) {\n            var isUniqueExist = table.uniques.some(function (unique) { return unique.columnNames.length === 1 && unique.columnNames[0] === column.name; });\n            if (!isUniqueExist)\n                table.uniques.push(new TableUnique_1.TableUnique({\n                    name: _this.connection.namingStrategy.uniqueConstraintName(table.name, [column.name]),\n                    columnNames: [column.name]\n                }));\n        });\n        if (table.uniques.length > 0) {\n            var uniquesSql = table.uniques.map(function (unique) {\n                var uniqueName = unique.name ? unique.name : _this.connection.namingStrategy.uniqueConstraintName(table.name, unique.columnNames);\n                var columnNames = unique.columnNames.map(function (columnName) { return \"\\\"\" + columnName + \"\\\"\"; }).join(\", \");\n                return \"CONSTRAINT \\\"\" + uniqueName + \"\\\" UNIQUE (\" + columnNames + \")\";\n            }).join(\", \");\n            sql += \", \" + uniquesSql;\n        }\n        if (table.checks.length > 0) {\n            var checksSql = table.checks.map(function (check) {\n                var checkName = check.name ? check.name : _this.connection.namingStrategy.checkConstraintName(table.name, check.expression);\n                return \"CONSTRAINT \\\"\" + checkName + \"\\\" CHECK (\" + check.expression + \")\";\n            }).join(\", \");\n            sql += \", \" + checksSql;\n        }\n        if (table.foreignKeys.length > 0 && createForeignKeys) {\n            var foreignKeysSql = table.foreignKeys.map(function (fk) {\n                var columnNames = fk.columnNames.map(function (columnName) { return \"\\\"\" + columnName + \"\\\"\"; }).join(\", \");\n                if (!fk.name)\n                    fk.name = _this.connection.namingStrategy.foreignKeyName(table.name, fk.columnNames);\n                var referencedColumnNames = fk.referencedColumnNames.map(function (columnName) { return \"\\\"\" + columnName + \"\\\"\"; }).join(\", \");\n                var constraint = \"CONSTRAINT \\\"\" + fk.name + \"\\\" FOREIGN KEY (\" + columnNames + \") REFERENCES \\\"\" + fk.referencedTableName + \"\\\" (\" + referencedColumnNames + \")\";\n                if (fk.onDelete)\n                    constraint += \" ON DELETE \" + fk.onDelete;\n                if (fk.onUpdate)\n                    constraint += \" ON UPDATE \" + fk.onUpdate;\n                return constraint;\n            }).join(\", \");\n            sql += \", \" + foreignKeysSql;\n        }\n        if (primaryColumns.length > 1) {\n            var columnNames = primaryColumns.map(function (column) { return \"\\\"\" + column.name + \"\\\"\"; }).join(\", \");\n            sql += \", PRIMARY KEY (\" + columnNames + \")\";\n        }\n        sql += \")\";\n        return sql;\n    };\n    /**\n     * Builds drop table sql.\n     */\n    AbstractSqliteQueryRunner.prototype.dropTableSql = function (tableOrName, ifExist) {\n        var tableName = tableOrName instanceof Table_1.Table ? tableOrName.name : tableOrName;\n        return ifExist ? \"DROP TABLE IF EXISTS \\\"\" + tableName + \"\\\"\" : \"DROP TABLE \\\"\" + tableName + \"\\\"\";\n    };\n    /**\n     * Builds create index sql.\n     */\n    AbstractSqliteQueryRunner.prototype.createIndexSql = function (table, index) {\n        var columns = index.columnNames.map(function (columnName) { return \"\\\"\" + columnName + \"\\\"\"; }).join(\", \");\n        return \"CREATE \" + (index.isUnique ? \"UNIQUE \" : \"\") + \"INDEX \\\"\" + index.name + \"\\\" ON \\\"\" + table.name + \"\\\" (\" + columns + \") \" + (index.where ? \"WHERE \" + index.where : \"\");\n    };\n    /**\n     * Builds drop index sql.\n     */\n    AbstractSqliteQueryRunner.prototype.dropIndexSql = function (indexOrName) {\n        var indexName = indexOrName instanceof TableIndex_1.TableIndex ? indexOrName.name : indexOrName;\n        return \"DROP INDEX \\\"\" + indexName + \"\\\"\";\n    };\n    /**\n     * Builds a query for create column.\n     */\n    AbstractSqliteQueryRunner.prototype.buildCreateColumnSql = function (column, skipPrimary) {\n        var c = \"\\\"\" + column.name + \"\\\"\";\n        if (column instanceof ColumnMetadata_1.ColumnMetadata) {\n            c += \" \" + this.driver.normalizeType(column);\n        }\n        else {\n            c += \" \" + this.connection.driver.createFullType(column);\n        }\n        if (column.isPrimary && !skipPrimary)\n            c += \" PRIMARY KEY\";\n        if (column.isGenerated === true && column.generationStrategy === \"increment\") // don't use skipPrimary here since updates can update already exist primary without auto inc.\n            c += \" AUTOINCREMENT\";\n        if (column.collation)\n            c += \" COLLATE \" + column.collation;\n        if (column.isNullable !== true)\n            c += \" NOT NULL\";\n        if (column.default !== undefined && column.default !== null)\n            c += \" DEFAULT (\" + column.default + \")\";\n        return c;\n    };\n    AbstractSqliteQueryRunner.prototype.recreateTable = function (newTable, oldTable, migrateData) {\n        if (migrateData === void 0) { migrateData = true; }\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var upQueries, downQueries, newColumnNames, oldColumnNames;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        upQueries = [];\n                        downQueries = [];\n                        // drop old table indices\n                        oldTable.indices.forEach(function (index) {\n                            upQueries.push(_this.dropIndexSql(index));\n                            downQueries.push(_this.createIndexSql(oldTable, index));\n                        });\n                        // change table name into 'temporary_table'\n                        newTable.name = \"temporary_\" + newTable.name;\n                        // create new table\n                        upQueries.push(this.createTableSql(newTable, true));\n                        downQueries.push(this.dropTableSql(newTable));\n                        // migrate all data from the old table into new table\n                        if (migrateData) {\n                            newColumnNames = newTable.columns.map(function (column) { return \"\\\"\" + column.name + \"\\\"\"; }).join(\", \");\n                            oldColumnNames = oldTable.columns.map(function (column) { return \"\\\"\" + column.name + \"\\\"\"; }).join(\", \");\n                            if (oldTable.columns.length < newTable.columns.length) {\n                                newColumnNames = newTable.columns.filter(function (column) {\n                                    return oldTable.columns.find(function (c) { return c.name === column.name; });\n                                }).map(function (column) { return \"\\\"\" + column.name + \"\\\"\"; }).join(\", \");\n                            }\n                            else if (oldTable.columns.length > newTable.columns.length) {\n                                oldColumnNames = oldTable.columns.filter(function (column) {\n                                    return newTable.columns.find(function (c) { return c.name === column.name; });\n                                }).map(function (column) { return \"\\\"\" + column.name + \"\\\"\"; }).join(\", \");\n                            }\n                            upQueries.push(\"INSERT INTO \\\"\" + newTable.name + \"\\\"(\" + newColumnNames + \") SELECT \" + oldColumnNames + \" FROM \\\"\" + oldTable.name + \"\\\"\");\n                            downQueries.push(\"INSERT INTO \\\"\" + oldTable.name + \"\\\"(\" + oldColumnNames + \") SELECT \" + newColumnNames + \" FROM \\\"\" + newTable.name + \"\\\"\");\n                        }\n                        // drop old table\n                        upQueries.push(this.dropTableSql(oldTable));\n                        downQueries.push(this.createTableSql(oldTable, true));\n                        // rename old table\n                        upQueries.push(\"ALTER TABLE \\\"\" + newTable.name + \"\\\" RENAME TO \\\"\" + oldTable.name + \"\\\"\");\n                        downQueries.push(\"ALTER TABLE \\\"\" + oldTable.name + \"\\\" RENAME TO \\\"\" + newTable.name + \"\\\"\");\n                        newTable.name = oldTable.name;\n                        // recreate table indices\n                        newTable.indices.forEach(function (index) {\n                            // new index may be passed without name. In this case we generate index name manually.\n                            if (!index.name)\n                                index.name = _this.connection.namingStrategy.indexName(newTable.name, index.columnNames, index.where);\n                            upQueries.push(_this.createIndexSql(newTable, index));\n                            downQueries.push(_this.dropIndexSql(index));\n                        });\n                        return [4 /*yield*/, this.executeQueries(upQueries, downQueries)];\n                    case 1:\n                        _a.sent();\n                        this.replaceCachedTable(oldTable, newTable);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return AbstractSqliteQueryRunner;\n}(BaseQueryRunner_1.BaseQueryRunner));\nexports.AbstractSqliteQueryRunner = AbstractSqliteQueryRunner;\n\n//# sourceMappingURL=AbstractSqliteQueryRunner.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteQueryRunner.js?");

/***/ }),

/***/ "./node_modules/typeorm/driver/sqlite/SqliteDriver.js":
/*!************************************************************!*\
  !*** ./node_modules/typeorm/driver/sqlite/SqliteDriver.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(Buffer) {\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DriverPackageNotInstalledError_1 = __webpack_require__(/*! ../../error/DriverPackageNotInstalledError */ \"./node_modules/typeorm/error/DriverPackageNotInstalledError.js\");\nvar SqliteQueryRunner_1 = __webpack_require__(/*! ./SqliteQueryRunner */ \"./node_modules/typeorm/driver/sqlite/SqliteQueryRunner.js\");\nvar DriverOptionNotSetError_1 = __webpack_require__(/*! ../../error/DriverOptionNotSetError */ \"./node_modules/typeorm/error/DriverOptionNotSetError.js\");\nvar PlatformTools_1 = __webpack_require__(/*! ../../platform/PlatformTools */ \"./node_modules/typeorm/platform/PlatformTools.js\");\nvar AbstractSqliteDriver_1 = __webpack_require__(/*! ../sqlite-abstract/AbstractSqliteDriver */ \"./node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js\");\n/**\n * Organizes communication with sqlite DBMS.\n */\nvar SqliteDriver = /** @class */ (function (_super) {\n    __extends(SqliteDriver, _super);\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function SqliteDriver(connection) {\n        var _this = _super.call(this, connection) || this;\n        _this.connection = connection;\n        _this.options = connection.options;\n        _this.database = _this.options.database;\n        // validate options to make sure everything is set\n        if (!_this.options.database)\n            throw new DriverOptionNotSetError_1.DriverOptionNotSetError(\"database\");\n        // load sqlite package\n        _this.loadDependencies();\n        return _this;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Closes connection with database.\n     */\n    SqliteDriver.prototype.disconnect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2 /*return*/, new Promise(function (ok, fail) {\n                        _this.queryRunner = undefined;\n                        _this.databaseConnection.close(function (err) { return err ? fail(err) : ok(); });\n                    })];\n            });\n        });\n    };\n    /**\n     * Creates a query runner used to execute database queries.\n     */\n    SqliteDriver.prototype.createQueryRunner = function (mode) {\n        if (mode === void 0) { mode = \"master\"; }\n        if (!this.queryRunner)\n            this.queryRunner = new SqliteQueryRunner_1.SqliteQueryRunner(this);\n        return this.queryRunner;\n    };\n    SqliteDriver.prototype.normalizeType = function (column) {\n        if (column.type === Buffer) {\n            return \"blob\";\n        }\n        return _super.prototype.normalizeType.call(this, column);\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates connection with the database.\n     */\n    SqliteDriver.prototype.createDatabaseConnection = function () {\n        var _this = this;\n        return new Promise(function (ok, fail) { return __awaiter(_this, void 0, void 0, function () {\n            var _this = this;\n            var databaseConnection;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.createDatabaseDirectory(this.options.database)];\n                    case 1:\n                        _a.sent();\n                        databaseConnection = new this.sqlite.Database(this.options.database, function (err) {\n                            if (err)\n                                return fail(err);\n                            // we need to enable foreign keys in sqlite to make sure all foreign key related features\n                            // working properly. this also makes onDelete to work with sqlite.\n                            databaseConnection.run(\"PRAGMA foreign_keys = ON;\", function (err, result) {\n                                if (err)\n                                    return fail(err);\n                                ok(databaseConnection);\n                            });\n                            // in the options, if encryption key for for SQLCipher is setted.\n                            if (_this.options.key) {\n                                databaseConnection.run(\"PRAGMA key = \" + _this.options.key + \";\", function (err, result) {\n                                    if (err)\n                                        return fail(err);\n                                    ok(databaseConnection);\n                                });\n                            }\n                        });\n                        return [2 /*return*/];\n                }\n            });\n        }); });\n    };\n    /**\n     * If driver dependency is not given explicitly, then try to load it via \"require\".\n     */\n    SqliteDriver.prototype.loadDependencies = function () {\n        try {\n            this.sqlite = PlatformTools_1.PlatformTools.load(\"sqlite3\").verbose();\n        }\n        catch (e) {\n            throw new DriverPackageNotInstalledError_1.DriverPackageNotInstalledError(\"SQLite\", \"sqlite3\");\n        }\n    };\n    /**\n     * Auto creates database directory if it does not exist.\n     */\n    SqliteDriver.prototype.createDatabaseDirectory = function (fullPath) {\n        return new Promise(function (resolve, reject) {\n            var mkdirp = PlatformTools_1.PlatformTools.load(\"mkdirp\");\n            var path = PlatformTools_1.PlatformTools.load(\"path\");\n            mkdirp(path.dirname(fullPath), function (err) { return err ? reject(err) : resolve(); });\n        });\n    };\n    return SqliteDriver;\n}(AbstractSqliteDriver_1.AbstractSqliteDriver));\nexports.SqliteDriver = SqliteDriver;\n\n//# sourceMappingURL=SqliteDriver.js.map\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../node-libs-browser/node_modules/buffer/index.js */ \"./node_modules/node-libs-browser/node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:///./node_modules/typeorm/driver/sqlite/SqliteDriver.js?");

/***/ }),

/***/ "./node_modules/typeorm/driver/sqlite/SqliteQueryRunner.js":
/*!*****************************************************************!*\
  !*** ./node_modules/typeorm/driver/sqlite/SqliteQueryRunner.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar QueryRunnerAlreadyReleasedError_1 = __webpack_require__(/*! ../../error/QueryRunnerAlreadyReleasedError */ \"./node_modules/typeorm/error/QueryRunnerAlreadyReleasedError.js\");\nvar QueryFailedError_1 = __webpack_require__(/*! ../../error/QueryFailedError */ \"./node_modules/typeorm/error/QueryFailedError.js\");\nvar AbstractSqliteQueryRunner_1 = __webpack_require__(/*! ../sqlite-abstract/AbstractSqliteQueryRunner */ \"./node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteQueryRunner.js\");\nvar Broadcaster_1 = __webpack_require__(/*! ../../subscriber/Broadcaster */ \"./node_modules/typeorm/subscriber/Broadcaster.js\");\n/**\n * Runs queries on a single sqlite database connection.\n *\n * Does not support compose primary keys with autoincrement field.\n * todo: need to throw exception for this case.\n */\nvar SqliteQueryRunner = /** @class */ (function (_super) {\n    __extends(SqliteQueryRunner, _super);\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function SqliteQueryRunner(driver) {\n        var _this = _super.call(this) || this;\n        _this.driver = driver;\n        _this.connection = driver.connection;\n        _this.broadcaster = new Broadcaster_1.Broadcaster(_this);\n        return _this;\n    }\n    /**\n     * Executes a given SQL query.\n     */\n    SqliteQueryRunner.prototype.query = function (query, parameters) {\n        var _this = this;\n        if (this.isReleased)\n            throw new QueryRunnerAlreadyReleasedError_1.QueryRunnerAlreadyReleasedError();\n        var connection = this.driver.connection;\n        return new Promise(function (ok, fail) { return __awaiter(_this, void 0, void 0, function () {\n            var handler, databaseConnection, queryStartTime, isInsertQuery;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        handler = function (err, result) {\n                            // log slow queries if maxQueryExecution time is set\n                            var maxQueryExecutionTime = connection.options.maxQueryExecutionTime;\n                            var queryEndTime = +new Date();\n                            var queryExecutionTime = queryEndTime - queryStartTime;\n                            if (maxQueryExecutionTime && queryExecutionTime > maxQueryExecutionTime)\n                                connection.logger.logQuerySlow(queryExecutionTime, query, parameters, this);\n                            if (err) {\n                                connection.logger.logQueryError(err, query, parameters, this);\n                                fail(new QueryFailedError_1.QueryFailedError(query, parameters, err));\n                            }\n                            else {\n                                ok(isInsertQuery ? this[\"lastID\"] : result);\n                            }\n                        };\n                        return [4 /*yield*/, this.connect()];\n                    case 1:\n                        databaseConnection = _a.sent();\n                        this.driver.connection.logger.logQuery(query, parameters, this);\n                        queryStartTime = +new Date();\n                        isInsertQuery = query.substr(0, 11) === \"INSERT INTO\";\n                        if (isInsertQuery) {\n                            databaseConnection.run(query, parameters, handler);\n                        }\n                        else {\n                            databaseConnection.all(query, parameters, handler);\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        }); });\n    };\n    return SqliteQueryRunner;\n}(AbstractSqliteQueryRunner_1.AbstractSqliteQueryRunner));\nexports.SqliteQueryRunner = SqliteQueryRunner;\n\n//# sourceMappingURL=SqliteQueryRunner.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/driver/sqlite/SqliteQueryRunner.js?");

/***/ }),

/***/ "./node_modules/typeorm/driver/sqljs/SqljsDriver.js":
/*!**********************************************************!*\
  !*** ./node_modules/typeorm/driver/sqljs/SqljsDriver.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(Buffer) {\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar AbstractSqliteDriver_1 = __webpack_require__(/*! ../sqlite-abstract/AbstractSqliteDriver */ \"./node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js\");\nvar SqljsQueryRunner_1 = __webpack_require__(/*! ./SqljsQueryRunner */ \"./node_modules/typeorm/driver/sqljs/SqljsQueryRunner.js\");\nvar DriverPackageNotInstalledError_1 = __webpack_require__(/*! ../../error/DriverPackageNotInstalledError */ \"./node_modules/typeorm/error/DriverPackageNotInstalledError.js\");\nvar DriverOptionNotSetError_1 = __webpack_require__(/*! ../../error/DriverOptionNotSetError */ \"./node_modules/typeorm/error/DriverOptionNotSetError.js\");\nvar PlatformTools_1 = __webpack_require__(/*! ../../platform/PlatformTools */ \"./node_modules/typeorm/platform/PlatformTools.js\");\nvar OrmUtils_1 = __webpack_require__(/*! ../../util/OrmUtils */ \"./node_modules/typeorm/util/OrmUtils.js\");\nvar SqljsDriver = /** @class */ (function (_super) {\n    __extends(SqljsDriver, _super);\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function SqljsDriver(connection) {\n        var _this = _super.call(this, connection) || this;\n        // If autoSave is enabled by user, location or autoSaveCallback have to be set\n        // because either autoSave saves to location or calls autoSaveCallback.\n        if (_this.options.autoSave && !_this.options.location && !_this.options.autoSaveCallback) {\n            throw new DriverOptionNotSetError_1.DriverOptionNotSetError(\"location or autoSaveCallback\");\n        }\n        // load sql.js package\n        _this.loadDependencies();\n        return _this;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Performs connection to the database.\n     */\n    SqljsDriver.prototype.connect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = this;\n                        return [4 /*yield*/, this.createDatabaseConnection()];\n                    case 1:\n                        _a.databaseConnection = _b.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Closes connection with database.\n     */\n    SqljsDriver.prototype.disconnect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2 /*return*/, new Promise(function (ok, fail) {\n                        try {\n                            _this.queryRunner = undefined;\n                            _this.databaseConnection.close();\n                            ok();\n                        }\n                        catch (e) {\n                            fail(e);\n                        }\n                    })];\n            });\n        });\n    };\n    /**\n     * Creates a query runner used to execute database queries.\n     */\n    SqljsDriver.prototype.createQueryRunner = function (mode) {\n        if (mode === void 0) { mode = \"master\"; }\n        if (!this.queryRunner)\n            this.queryRunner = new SqljsQueryRunner_1.SqljsQueryRunner(this);\n        return this.queryRunner;\n    };\n    /**\n     * Loads a database from a given file (Node.js), local storage key (browser) or array.\n     * This will delete the current database!\n     */\n    SqljsDriver.prototype.load = function (fileNameOrLocalStorageOrData, checkIfFileOrLocalStorageExists) {\n        if (checkIfFileOrLocalStorageExists === void 0) { checkIfFileOrLocalStorageExists = true; }\n        if (typeof fileNameOrLocalStorageOrData === \"string\") {\n            // content has to be loaded\n            if (PlatformTools_1.PlatformTools.type === \"node\") {\n                // Node.js\n                // fileNameOrLocalStorageOrData should be a path to the file\n                if (PlatformTools_1.PlatformTools.fileExist(fileNameOrLocalStorageOrData)) {\n                    var database = PlatformTools_1.PlatformTools.readFileSync(fileNameOrLocalStorageOrData);\n                    return this.createDatabaseConnectionWithImport(database);\n                }\n                else if (checkIfFileOrLocalStorageExists) {\n                    throw new Error(\"File \" + fileNameOrLocalStorageOrData + \" does not exist\");\n                }\n                else {\n                    // File doesn't exist and checkIfFileOrLocalStorageExists is set to false.\n                    // Therefore open a database without importing an existing file.\n                    // File will be written on first write operation.\n                    return this.createDatabaseConnectionWithImport();\n                }\n            }\n            else {\n                // browser\n                // fileNameOrLocalStorageOrData should be a local storage key\n                var localStorageContent = PlatformTools_1.PlatformTools.getGlobalVariable().localStorage.getItem(fileNameOrLocalStorageOrData);\n                if (localStorageContent != null) {\n                    // localStorage value exists.\n                    return this.createDatabaseConnectionWithImport(JSON.parse(localStorageContent));\n                }\n                else if (checkIfFileOrLocalStorageExists) {\n                    throw new Error(\"File \" + fileNameOrLocalStorageOrData + \" does not exist\");\n                }\n                else {\n                    // localStorage value doesn't exist and checkIfFileOrLocalStorageExists is set to false.\n                    // Therefore open a database without importing anything.\n                    // localStorage value will be written on first write operation.\n                    return this.createDatabaseConnectionWithImport();\n                }\n            }\n        }\n        else {\n            return this.createDatabaseConnectionWithImport(fileNameOrLocalStorageOrData);\n        }\n    };\n    /**\n     * Saved the current database to the given file (Node.js) or local storage key (browser).\n     * If no location path is given, the location path in the options (if specified) will be used.\n     */\n    SqljsDriver.prototype.save = function (location) {\n        return __awaiter(this, void 0, void 0, function () {\n            var path, content, e_1, database, databaseArray;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!location && !this.options.location) {\n                            throw new Error(\"No location is set, specify a location parameter or add the location option to your configuration\");\n                        }\n                        path = \"\";\n                        if (location) {\n                            path = location;\n                        }\n                        else if (this.options.location) {\n                            path = this.options.location;\n                        }\n                        if (!(PlatformTools_1.PlatformTools.type === \"node\")) return [3 /*break*/, 5];\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        content = new Buffer(this.databaseConnection.export());\n                        return [4 /*yield*/, PlatformTools_1.PlatformTools.writeFile(path, content)];\n                    case 2:\n                        _a.sent();\n                        return [3 /*break*/, 4];\n                    case 3:\n                        e_1 = _a.sent();\n                        throw new Error(\"Could not save database, error: \" + e_1);\n                    case 4: return [3 /*break*/, 6];\n                    case 5:\n                        database = this.databaseConnection.export();\n                        databaseArray = [].slice.call(database);\n                        PlatformTools_1.PlatformTools.getGlobalVariable().localStorage.setItem(path, JSON.stringify(databaseArray));\n                        _a.label = 6;\n                    case 6: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * This gets called by the QueryRunner when a change to the database is made.\n     * If a custom autoSaveCallback is specified, it get's called with the database as Uint8Array,\n     * otherwise the save method is called which saves it to file (Node.js) or localstorage (browser).\n     */\n    SqljsDriver.prototype.autoSave = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.options.autoSave) return [3 /*break*/, 4];\n                        if (!this.options.autoSaveCallback) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.options.autoSaveCallback(this.export())];\n                    case 1:\n                        _a.sent();\n                        return [3 /*break*/, 4];\n                    case 2: return [4 /*yield*/, this.save()];\n                    case 3:\n                        _a.sent();\n                        _a.label = 4;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Returns the current database as Uint8Array.\n     */\n    SqljsDriver.prototype.export = function () {\n        return this.databaseConnection.export();\n    };\n    /**\n     * Creates generated map of values generated or returned by database after INSERT query.\n     */\n    SqljsDriver.prototype.createGeneratedMap = function (metadata, insertResult) {\n        var _this = this;\n        var generatedMap = metadata.generatedColumns.reduce(function (map, generatedColumn) {\n            // seems to be the only way to get the inserted id, see https://github.com/kripken/sql.js/issues/77\n            if (generatedColumn.isPrimary && generatedColumn.generationStrategy === \"increment\") {\n                var query = \"SELECT last_insert_rowid()\";\n                try {\n                    var result = _this.databaseConnection.exec(query);\n                    _this.connection.logger.logQuery(query);\n                    return OrmUtils_1.OrmUtils.mergeDeep(map, generatedColumn.createValueMap(result[0].values[0][0]));\n                }\n                catch (e) {\n                    _this.connection.logger.logQueryError(e, query, []);\n                }\n            }\n            return map;\n        }, {});\n        return Object.keys(generatedMap).length > 0 ? generatedMap : undefined;\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates connection with the database.\n     * If the location option is set, the database is loaded first.\n     */\n    SqljsDriver.prototype.createDatabaseConnection = function () {\n        if (this.options.location) {\n            return this.load(this.options.location, false);\n        }\n        return this.createDatabaseConnectionWithImport(this.options.database);\n    };\n    /**\n     * Creates connection with an optional database.\n     * If database is specified it is loaded, otherwise a new empty database is created.\n     */\n    SqljsDriver.prototype.createDatabaseConnectionWithImport = function (database) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                if (database && database.length > 0) {\n                    this.databaseConnection = new this.sqlite.Database(database);\n                }\n                else {\n                    this.databaseConnection = new this.sqlite.Database();\n                }\n                // Enable foreign keys for database\n                return [2 /*return*/, new Promise(function (ok, fail) {\n                        try {\n                            _this.databaseConnection.exec(\"PRAGMA foreign_keys = ON;\");\n                            ok(_this.databaseConnection);\n                        }\n                        catch (e) {\n                            fail(e);\n                        }\n                    })];\n            });\n        });\n    };\n    /**\n     * If driver dependency is not given explicitly, then try to load it via \"require\".\n     */\n    SqljsDriver.prototype.loadDependencies = function () {\n        if (PlatformTools_1.PlatformTools.type === \"browser\") {\n            this.sqlite = window.SQL;\n        }\n        else {\n            try {\n                this.sqlite = PlatformTools_1.PlatformTools.load(\"sql.js\");\n            }\n            catch (e) {\n                throw new DriverPackageNotInstalledError_1.DriverPackageNotInstalledError(\"sql.js\", \"sql.js\");\n            }\n        }\n    };\n    return SqljsDriver;\n}(AbstractSqliteDriver_1.AbstractSqliteDriver));\nexports.SqljsDriver = SqljsDriver;\n\n//# sourceMappingURL=SqljsDriver.js.map\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../node-libs-browser/node_modules/buffer/index.js */ \"./node_modules/node-libs-browser/node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:///./node_modules/typeorm/driver/sqljs/SqljsDriver.js?");

/***/ }),

/***/ "./node_modules/typeorm/driver/sqljs/SqljsQueryRunner.js":
/*!***************************************************************!*\
  !*** ./node_modules/typeorm/driver/sqljs/SqljsQueryRunner.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar QueryRunnerAlreadyReleasedError_1 = __webpack_require__(/*! ../../error/QueryRunnerAlreadyReleasedError */ \"./node_modules/typeorm/error/QueryRunnerAlreadyReleasedError.js\");\nvar AbstractSqliteQueryRunner_1 = __webpack_require__(/*! ../sqlite-abstract/AbstractSqliteQueryRunner */ \"./node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteQueryRunner.js\");\nvar Broadcaster_1 = __webpack_require__(/*! ../../subscriber/Broadcaster */ \"./node_modules/typeorm/subscriber/Broadcaster.js\");\nvar QueryFailedError_1 = __webpack_require__(/*! ../../error/QueryFailedError */ \"./node_modules/typeorm/error/QueryFailedError.js\");\n/**\n * Runs queries on a single sqlite database connection.\n */\nvar SqljsQueryRunner = /** @class */ (function (_super) {\n    __extends(SqljsQueryRunner, _super);\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function SqljsQueryRunner(driver) {\n        var _this = _super.call(this) || this;\n        _this.driver = driver;\n        _this.connection = driver.connection;\n        _this.broadcaster = new Broadcaster_1.Broadcaster(_this);\n        return _this;\n    }\n    // -------------------------------------------------------------------------\n    // Public methods\n    // -------------------------------------------------------------------------\n    /**\n     * Commits transaction.\n     * Error will be thrown if transaction was not started.\n     */\n    SqljsQueryRunner.prototype.commitTransaction = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, _super.prototype.commitTransaction.call(this)];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, this.driver.autoSave()];\n                    case 2:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Executes a given SQL query.\n     */\n    SqljsQueryRunner.prototype.query = function (query, parameters) {\n        var _this = this;\n        if (this.isReleased)\n            throw new QueryRunnerAlreadyReleasedError_1.QueryRunnerAlreadyReleasedError();\n        return new Promise(function (ok, fail) { return __awaiter(_this, void 0, void 0, function () {\n            var databaseConnection, queryStartTime, statement, maxQueryExecutionTime, queryEndTime, queryExecutionTime, result;\n            return __generator(this, function (_a) {\n                databaseConnection = this.driver.databaseConnection;\n                this.driver.connection.logger.logQuery(query, parameters, this);\n                queryStartTime = +new Date();\n                try {\n                    statement = databaseConnection.prepare(query);\n                    statement.bind(parameters);\n                    maxQueryExecutionTime = this.driver.connection.options.maxQueryExecutionTime;\n                    queryEndTime = +new Date();\n                    queryExecutionTime = queryEndTime - queryStartTime;\n                    if (maxQueryExecutionTime && queryExecutionTime > maxQueryExecutionTime)\n                        this.driver.connection.logger.logQuerySlow(queryExecutionTime, query, parameters, this);\n                    result = [];\n                    while (statement.step()) {\n                        result.push(statement.getAsObject());\n                    }\n                    statement.free();\n                    ok(result);\n                }\n                catch (e) {\n                    if (statement) {\n                        statement.free();\n                    }\n                    this.driver.connection.logger.logQueryError(e, query, parameters, this);\n                    fail(new QueryFailedError_1.QueryFailedError(query, parameters, e));\n                }\n                return [2 /*return*/];\n            });\n        }); });\n    };\n    return SqljsQueryRunner;\n}(AbstractSqliteQueryRunner_1.AbstractSqliteQueryRunner));\nexports.SqljsQueryRunner = SqljsQueryRunner;\n\n//# sourceMappingURL=SqljsQueryRunner.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/driver/sqljs/SqljsQueryRunner.js?");

/***/ }),

/***/ "./node_modules/typeorm/driver/sqlserver/MssqlParameter.js":
/*!*****************************************************************!*\
  !*** ./node_modules/typeorm/driver/sqlserver/MssqlParameter.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Sql server driver requires parameter types to be specified fo input parameters used in the query.\n *\n * @see https://github.com/patriksimek/node-mssql#data-types\n */\nvar MssqlParameter = /** @class */ (function () {\n    function MssqlParameter(value, type) {\n        var params = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            params[_i - 2] = arguments[_i];\n        }\n        this.value = value;\n        this.type = type;\n        // -------------------------------------------------------------------------\n        // Public Properties\n        // -------------------------------------------------------------------------\n        this.params = [];\n        this.params = params || [];\n    }\n    return MssqlParameter;\n}());\nexports.MssqlParameter = MssqlParameter;\n\n//# sourceMappingURL=MssqlParameter.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/driver/sqlserver/MssqlParameter.js?");

/***/ }),

/***/ "./node_modules/typeorm/driver/sqlserver/SqlServerDriver.js":
/*!******************************************************************!*\
  !*** ./node_modules/typeorm/driver/sqlserver/SqlServerDriver.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(Buffer) {\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ConnectionIsNotSetError_1 = __webpack_require__(/*! ../../error/ConnectionIsNotSetError */ \"./node_modules/typeorm/error/ConnectionIsNotSetError.js\");\nvar DriverPackageNotInstalledError_1 = __webpack_require__(/*! ../../error/DriverPackageNotInstalledError */ \"./node_modules/typeorm/error/DriverPackageNotInstalledError.js\");\nvar DriverUtils_1 = __webpack_require__(/*! ../DriverUtils */ \"./node_modules/typeorm/driver/DriverUtils.js\");\nvar SqlServerQueryRunner_1 = __webpack_require__(/*! ./SqlServerQueryRunner */ \"./node_modules/typeorm/driver/sqlserver/SqlServerQueryRunner.js\");\nvar DateUtils_1 = __webpack_require__(/*! ../../util/DateUtils */ \"./node_modules/typeorm/util/DateUtils.js\");\nvar PlatformTools_1 = __webpack_require__(/*! ../../platform/PlatformTools */ \"./node_modules/typeorm/platform/PlatformTools.js\");\nvar RdbmsSchemaBuilder_1 = __webpack_require__(/*! ../../schema-builder/RdbmsSchemaBuilder */ \"./node_modules/typeorm/schema-builder/RdbmsSchemaBuilder.js\");\nvar MssqlParameter_1 = __webpack_require__(/*! ./MssqlParameter */ \"./node_modules/typeorm/driver/sqlserver/MssqlParameter.js\");\nvar OrmUtils_1 = __webpack_require__(/*! ../../util/OrmUtils */ \"./node_modules/typeorm/util/OrmUtils.js\");\n/**\n * Organizes communication with SQL Server DBMS.\n */\nvar SqlServerDriver = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function SqlServerDriver(connection) {\n        /**\n         * Pool for slave databases.\n         * Used in replication.\n         */\n        this.slaves = [];\n        /**\n         * Indicates if replication is enabled.\n         */\n        this.isReplicated = false;\n        /**\n         * Indicates if tree tables are supported by this driver.\n         */\n        this.treeSupport = true;\n        /**\n         * Gets list of supported column data types by a driver.\n         *\n         * @see https://docs.microsoft.com/en-us/sql/t-sql/data-types/data-types-transact-sql\n         */\n        this.supportedDataTypes = [\n            \"int\",\n            \"bigint\",\n            \"bit\",\n            \"decimal\",\n            \"money\",\n            \"numeric\",\n            \"smallint\",\n            \"smallmoney\",\n            \"tinyint\",\n            \"float\",\n            \"real\",\n            \"date\",\n            \"datetime2\",\n            \"datetime\",\n            \"datetimeoffset\",\n            \"smalldatetime\",\n            \"time\",\n            \"char\",\n            \"varchar\",\n            \"text\",\n            \"nchar\",\n            \"nvarchar\",\n            \"ntext\",\n            \"binary\",\n            \"image\",\n            \"varbinary\",\n            \"hierarchyid\",\n            \"sql_variant\",\n            \"timestamp\",\n            \"uniqueidentifier\",\n            \"xml\",\n            \"geometry\",\n            \"geography\",\n            \"rowversion\"\n        ];\n        /**\n         * Gets list of spatial column data types.\n         */\n        this.spatialTypes = [\n            \"geometry\",\n            \"geography\"\n        ];\n        /**\n         * Gets list of column data types that support length by a driver.\n         */\n        this.withLengthColumnTypes = [\n            \"char\",\n            \"varchar\",\n            \"nchar\",\n            \"nvarchar\",\n            \"binary\",\n            \"varbinary\"\n        ];\n        /**\n         * Gets list of column data types that support precision by a driver.\n         */\n        this.withPrecisionColumnTypes = [\n            \"decimal\",\n            \"numeric\",\n            \"time\",\n            \"datetime2\",\n            \"datetimeoffset\"\n        ];\n        /**\n         * Gets list of column data types that support scale by a driver.\n         */\n        this.withScaleColumnTypes = [\n            \"decimal\",\n            \"numeric\"\n        ];\n        /**\n         * Orm has special columns and we need to know what database column types should be for those types.\n         * Column types are driver dependant.\n         */\n        this.mappedDataTypes = {\n            createDate: \"datetime2\",\n            createDateDefault: \"getdate()\",\n            updateDate: \"datetime2\",\n            updateDateDefault: \"getdate()\",\n            version: \"int\",\n            treeLevel: \"int\",\n            migrationId: \"int\",\n            migrationName: \"varchar\",\n            migrationTimestamp: \"bigint\",\n            cacheId: \"int\",\n            cacheIdentifier: \"nvarchar\",\n            cacheTime: \"bigint\",\n            cacheDuration: \"int\",\n            cacheQuery: \"nvarchar(MAX)\",\n            cacheResult: \"nvarchar(MAX)\",\n        };\n        /**\n         * Default values of length, precision and scale depends on column data type.\n         * Used in the cases when length/precision/scale is not specified by user.\n         */\n        this.dataTypeDefaults = {\n            \"char\": { length: 1 },\n            \"nchar\": { length: 1 },\n            \"varchar\": { length: 255 },\n            \"nvarchar\": { length: 255 },\n            \"binary\": { length: 1 },\n            \"varbinary\": { length: 1 },\n            \"decimal\": { precision: 18, scale: 0 },\n            \"numeric\": { precision: 18, scale: 0 },\n            \"time\": { precision: 7 },\n            \"datetime2\": { precision: 7 },\n            \"datetimeoffset\": { precision: 7 }\n        };\n        this.connection = connection;\n        this.options = connection.options;\n        this.isReplicated = this.options.replication ? true : false;\n        // load mssql package\n        this.loadDependencies();\n        // Object.assign(connection.options, DriverUtils.buildDriverOptions(connection.options)); // todo: do it better way\n        // validate options to make sure everything is set\n        // if (!this.options.host)\n        // throw new DriverOptionNotSetError(\"host\");\n        // if (!this.options.username)\n        //     throw new DriverOptionNotSetError(\"username\");\n        // if (!this.options.database)\n        //     throw new DriverOptionNotSetError(\"database\");\n    }\n    // -------------------------------------------------------------------------\n    // Public Implemented Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Performs connection to the database.\n     * Based on pooling options, it can either create connection immediately,\n     * either create a pool and create connection when needed.\n     */\n    SqlServerDriver.prototype.connect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var _a, _b, _c;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        if (!this.options.replication) return [3 /*break*/, 3];\n                        _a = this;\n                        return [4 /*yield*/, Promise.all(this.options.replication.slaves.map(function (slave) {\n                                return _this.createPool(_this.options, slave);\n                            }))];\n                    case 1:\n                        _a.slaves = _d.sent();\n                        _b = this;\n                        return [4 /*yield*/, this.createPool(this.options, this.options.replication.master)];\n                    case 2:\n                        _b.master = _d.sent();\n                        this.database = this.options.replication.master.database;\n                        return [3 /*break*/, 5];\n                    case 3:\n                        _c = this;\n                        return [4 /*yield*/, this.createPool(this.options, this.options)];\n                    case 4:\n                        _c.master = _d.sent();\n                        this.database = this.options.database;\n                        _d.label = 5;\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Makes any action after connection (e.g. create extensions in Postgres driver).\n     */\n    SqlServerDriver.prototype.afterConnect = function () {\n        return Promise.resolve();\n    };\n    /**\n     * Closes connection with the database.\n     */\n    SqlServerDriver.prototype.disconnect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                if (!this.master)\n                    return [2 /*return*/, Promise.reject(new ConnectionIsNotSetError_1.ConnectionIsNotSetError(\"mssql\"))];\n                this.master.close();\n                this.slaves.forEach(function (slave) { return slave.close(); });\n                this.master = undefined;\n                this.slaves = [];\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * Creates a schema builder used to build and sync a schema.\n     */\n    SqlServerDriver.prototype.createSchemaBuilder = function () {\n        return new RdbmsSchemaBuilder_1.RdbmsSchemaBuilder(this.connection);\n    };\n    /**\n     * Creates a query runner used to execute database queries.\n     */\n    SqlServerDriver.prototype.createQueryRunner = function (mode) {\n        if (mode === void 0) { mode = \"master\"; }\n        return new SqlServerQueryRunner_1.SqlServerQueryRunner(this, mode);\n    };\n    /**\n     * Replaces parameters in the given sql with special escaping character\n     * and an array of parameter names to be passed to a query.\n     */\n    SqlServerDriver.prototype.escapeQueryWithParameters = function (sql, parameters, nativeParameters) {\n        var escapedParameters = Object.keys(nativeParameters).map(function (key) { return nativeParameters[key]; });\n        if (!parameters || !Object.keys(parameters).length)\n            return [sql, escapedParameters];\n        var keys = Object.keys(parameters).map(function (parameter) { return \"(:(\\\\.\\\\.\\\\.)?\" + parameter + \"\\\\b)\"; }).join(\"|\");\n        sql = sql.replace(new RegExp(keys, \"g\"), function (key) {\n            var value;\n            var isArray = false;\n            if (key.substr(0, 4) === \":...\") {\n                isArray = true;\n                value = parameters[key.substr(4)];\n            }\n            else {\n                value = parameters[key.substr(1)];\n            }\n            if (isArray) {\n                return value.map(function (v) {\n                    escapedParameters.push(v);\n                    return \"@\" + (escapedParameters.length - 1);\n                }).join(\", \");\n            }\n            else if (value instanceof Function) {\n                return value();\n            }\n            else {\n                escapedParameters.push(value);\n                return \"@\" + (escapedParameters.length - 1);\n            }\n        }); // todo: make replace only in value statements, otherwise problems\n        return [sql, escapedParameters];\n    };\n    /**\n     * Escapes a column name.\n     */\n    SqlServerDriver.prototype.escape = function (columnName) {\n        return \"\\\"\" + columnName + \"\\\"\";\n    };\n    /**\n     * Build full table name with database name, schema name and table name.\n     * E.g. \"myDB\".\"mySchema\".\"myTable\"\n     */\n    SqlServerDriver.prototype.buildTableName = function (tableName, schema, database) {\n        var fullName = tableName;\n        if (schema)\n            fullName = schema + \".\" + tableName;\n        if (database) {\n            if (!schema) {\n                fullName = database + \"..\" + tableName;\n            }\n            else {\n                fullName = database + \".\" + fullName;\n            }\n        }\n        return fullName;\n    };\n    /**\n     * Prepares given value to a value to be persisted, based on its column type and metadata.\n     */\n    SqlServerDriver.prototype.preparePersistentValue = function (value, columnMetadata) {\n        if (columnMetadata.transformer)\n            value = columnMetadata.transformer.to(value);\n        if (value === null || value === undefined)\n            return value;\n        if (columnMetadata.type === Boolean) {\n            return value === true ? 1 : 0;\n        }\n        else if (columnMetadata.type === \"date\") {\n            return DateUtils_1.DateUtils.mixedDateToDate(value);\n        }\n        else if (columnMetadata.type === \"time\") {\n            return DateUtils_1.DateUtils.mixedTimeToDate(value);\n        }\n        else if (columnMetadata.type === \"datetime\"\n            || columnMetadata.type === \"smalldatetime\"\n            || columnMetadata.type === Date) {\n            return DateUtils_1.DateUtils.mixedDateToDate(value, false, false);\n        }\n        else if (columnMetadata.type === \"datetime2\"\n            || columnMetadata.type === \"datetimeoffset\") {\n            return DateUtils_1.DateUtils.mixedDateToDate(value, false, true);\n        }\n        else if (columnMetadata.type === \"simple-array\") {\n            return DateUtils_1.DateUtils.simpleArrayToString(value);\n        }\n        else if (columnMetadata.type === \"simple-json\") {\n            return DateUtils_1.DateUtils.simpleJsonToString(value);\n        }\n        return value;\n    };\n    /**\n     * Prepares given value to a value to be persisted, based on its column type or metadata.\n     */\n    SqlServerDriver.prototype.prepareHydratedValue = function (value, columnMetadata) {\n        if (value === null || value === undefined)\n            return value;\n        if (columnMetadata.type === Boolean) {\n            value = value ? true : false;\n        }\n        else if (columnMetadata.type === \"datetime\"\n            || columnMetadata.type === Date\n            || columnMetadata.type === \"datetime2\"\n            || columnMetadata.type === \"smalldatetime\"\n            || columnMetadata.type === \"datetimeoffset\") {\n            value = DateUtils_1.DateUtils.normalizeHydratedDate(value);\n        }\n        else if (columnMetadata.type === \"date\") {\n            value = DateUtils_1.DateUtils.mixedDateToDateString(value);\n        }\n        else if (columnMetadata.type === \"time\") {\n            value = DateUtils_1.DateUtils.mixedTimeToString(value);\n        }\n        else if (columnMetadata.type === \"simple-array\") {\n            value = DateUtils_1.DateUtils.stringToSimpleArray(value);\n        }\n        else if (columnMetadata.type === \"simple-json\") {\n            value = DateUtils_1.DateUtils.stringToSimpleJson(value);\n        }\n        if (columnMetadata.transformer)\n            value = columnMetadata.transformer.from(value);\n        return value;\n    };\n    /**\n     * Creates a database type from a given column metadata.\n     */\n    SqlServerDriver.prototype.normalizeType = function (column) {\n        if (column.type === Number || column.type === \"integer\") {\n            return \"int\";\n        }\n        else if (column.type === String) {\n            return \"nvarchar\";\n        }\n        else if (column.type === Date) {\n            return \"datetime\";\n        }\n        else if (column.type === Boolean) {\n            return \"bit\";\n        }\n        else if (column.type === Buffer) {\n            return \"binary\";\n        }\n        else if (column.type === \"uuid\") {\n            return \"uniqueidentifier\";\n        }\n        else if (column.type === \"simple-array\" || column.type === \"simple-json\") {\n            return \"ntext\";\n        }\n        else if (column.type === \"dec\") {\n            return \"decimal\";\n        }\n        else if (column.type === \"double precision\") {\n            return \"float\";\n        }\n        else if (column.type === \"rowversion\") {\n            return \"timestamp\"; // the rowversion type's name in SQL server metadata is timestamp            \n        }\n        else {\n            return column.type || \"\";\n        }\n    };\n    /**\n     * Normalizes \"default\" value of the column.\n     */\n    SqlServerDriver.prototype.normalizeDefault = function (columnMetadata) {\n        var defaultValue = columnMetadata.default;\n        if (typeof defaultValue === \"number\") {\n            return \"\" + defaultValue;\n        }\n        else if (typeof defaultValue === \"boolean\") {\n            return defaultValue === true ? \"1\" : \"0\";\n        }\n        else if (typeof defaultValue === \"function\") {\n            return /*\"(\" + */ defaultValue() /* + \")\"*/;\n        }\n        else if (typeof defaultValue === \"string\") {\n            return \"'\" + defaultValue + \"'\";\n        }\n        else {\n            return defaultValue;\n        }\n    };\n    /**\n     * Normalizes \"isUnique\" value of the column.\n     */\n    SqlServerDriver.prototype.normalizeIsUnique = function (column) {\n        return column.entityMetadata.uniques.some(function (uq) { return uq.columns.length === 1 && uq.columns[0] === column; });\n    };\n    /**\n     * Returns default column lengths, which is required on column creation.\n     */\n    SqlServerDriver.prototype.getColumnLength = function (column) {\n        if (column.length)\n            return column.length.toString();\n        if (column.type === \"varchar\" || column.type === \"nvarchar\" || column.type === String)\n            return \"255\";\n        return \"\";\n    };\n    /**\n     * Creates column type definition including length, precision and scale\n     */\n    SqlServerDriver.prototype.createFullType = function (column) {\n        var type = column.type;\n        // used 'getColumnLength()' method, because SqlServer sets `varchar` and `nvarchar` length to 1 by default.\n        if (this.getColumnLength(column)) {\n            type += \"(\" + this.getColumnLength(column) + \")\";\n        }\n        else if (column.precision !== null && column.precision !== undefined && column.scale !== null && column.scale !== undefined) {\n            type += \"(\" + column.precision + \",\" + column.scale + \")\";\n        }\n        else if (column.precision !== null && column.precision !== undefined) {\n            type += \"(\" + column.precision + \")\";\n        }\n        if (column.isArray)\n            type += \" array\";\n        return type;\n    };\n    /**\n     * Obtains a new database connection to a master server.\n     * Used for replication.\n     * If replication is not setup then returns default connection's database connection.\n     */\n    SqlServerDriver.prototype.obtainMasterConnection = function () {\n        return Promise.resolve(this.master);\n    };\n    /**\n     * Obtains a new database connection to a slave server.\n     * Used for replication.\n     * If replication is not setup then returns master (default) connection's database connection.\n     */\n    SqlServerDriver.prototype.obtainSlaveConnection = function () {\n        if (!this.slaves.length)\n            return this.obtainMasterConnection();\n        var random = Math.floor(Math.random() * this.slaves.length);\n        return Promise.resolve(this.slaves[random]);\n    };\n    /**\n     * Creates generated map of values generated or returned by database after INSERT query.\n     */\n    SqlServerDriver.prototype.createGeneratedMap = function (metadata, insertResult) {\n        if (!insertResult)\n            return undefined;\n        return Object.keys(insertResult).reduce(function (map, key) {\n            var column = metadata.findColumnWithDatabaseName(key);\n            if (column) {\n                OrmUtils_1.OrmUtils.mergeDeep(map, column.createValueMap(insertResult[key]));\n            }\n            return map;\n        }, {});\n    };\n    /**\n     * Differentiate columns of this table and columns from the given column metadatas columns\n     * and returns only changed.\n     */\n    SqlServerDriver.prototype.findChangedColumns = function (tableColumns, columnMetadatas) {\n        var _this = this;\n        return columnMetadatas.filter(function (columnMetadata) {\n            var tableColumn = tableColumns.find(function (c) { return c.name === columnMetadata.databaseName; });\n            if (!tableColumn)\n                return false; // we don't need new columns, we only need exist and changed\n            return tableColumn.name !== columnMetadata.databaseName\n                || tableColumn.type !== _this.normalizeType(columnMetadata)\n                || tableColumn.length !== columnMetadata.length\n                || tableColumn.precision !== columnMetadata.precision\n                || tableColumn.scale !== columnMetadata.scale\n                // || tableColumn.comment !== columnMetadata.comment || // todo\n                || (!tableColumn.isGenerated && _this.normalizeDefault(columnMetadata) !== tableColumn.default) // we included check for generated here, because generated columns already can have default values\n                || tableColumn.isPrimary !== columnMetadata.isPrimary\n                || tableColumn.isNullable !== columnMetadata.isNullable\n                || tableColumn.isUnique !== _this.normalizeIsUnique(columnMetadata)\n                || tableColumn.isGenerated !== columnMetadata.isGenerated;\n        });\n    };\n    /**\n     * Returns true if driver supports RETURNING / OUTPUT statement.\n     */\n    SqlServerDriver.prototype.isReturningSqlSupported = function () {\n        return true;\n    };\n    /**\n     * Returns true if driver supports uuid values generation on its own.\n     */\n    SqlServerDriver.prototype.isUUIDGenerationSupported = function () {\n        return true;\n    };\n    /**\n     * Creates an escaped parameter.\n     */\n    SqlServerDriver.prototype.createParameter = function (parameterName, index) {\n        return \"@\" + index;\n    };\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Sql server's parameters needs to be wrapped into special object with type information about this value.\n     * This method wraps given value into MssqlParameter based on its column definition.\n     */\n    SqlServerDriver.prototype.parametrizeValue = function (column, value) {\n        // if its already MssqlParameter then simply return it\n        if (value instanceof MssqlParameter_1.MssqlParameter)\n            return value;\n        var normalizedType = this.normalizeType({ type: column.type });\n        if (column.length) {\n            return new MssqlParameter_1.MssqlParameter(value, normalizedType, column.length);\n        }\n        else if (column.precision !== null && column.precision !== undefined && column.scale !== null && column.scale !== undefined) {\n            return new MssqlParameter_1.MssqlParameter(value, normalizedType, column.precision, column.scale);\n        }\n        else if (column.precision !== null && column.precision !== undefined) {\n            return new MssqlParameter_1.MssqlParameter(value, normalizedType, column.precision);\n        }\n        else if (column.scale !== null && column.scale !== undefined) {\n            return new MssqlParameter_1.MssqlParameter(value, normalizedType, column.scale);\n        }\n        return new MssqlParameter_1.MssqlParameter(value, normalizedType);\n    };\n    /**\n     * Sql server's parameters needs to be wrapped into special object with type information about this value.\n     * This method wraps all values of the given object into MssqlParameter based on their column definitions in the given table.\n     */\n    SqlServerDriver.prototype.parametrizeMap = function (tablePath, map) {\n        var _this = this;\n        // find metadata for the given table\n        if (!this.connection.hasMetadata(tablePath)) // if no metadata found then we can't proceed because we don't have columns and their types\n            return map;\n        var metadata = this.connection.getMetadata(tablePath);\n        return Object.keys(map).reduce(function (newMap, key) {\n            var value = map[key];\n            // find column metadata\n            var column = metadata.findColumnWithDatabaseName(key);\n            if (!column) // if we didn't find a column then we can't proceed because we don't have a column type\n                return value;\n            newMap[key] = _this.parametrizeValue(column, value);\n            return newMap;\n        }, {});\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * If driver dependency is not given explicitly, then try to load it via \"require\".\n     */\n    SqlServerDriver.prototype.loadDependencies = function () {\n        try {\n            this.mssql = PlatformTools_1.PlatformTools.load(\"mssql\");\n        }\n        catch (e) { // todo: better error for browser env\n            throw new DriverPackageNotInstalledError_1.DriverPackageNotInstalledError(\"SQL Server\", \"mssql\");\n        }\n    };\n    /**\n     * Creates a new connection pool for a given database credentials.\n     */\n    SqlServerDriver.prototype.createPool = function (options, credentials) {\n        var _this = this;\n        credentials = Object.assign(credentials, DriverUtils_1.DriverUtils.buildDriverOptions(credentials)); // todo: do it better way\n        // build connection options for the driver\n        var connectionOptions = Object.assign({}, {\n            connectionTimeout: this.options.connectionTimeout,\n            requestTimeout: this.options.requestTimeout,\n            stream: this.options.stream,\n            pool: this.options.pool,\n            options: this.options.options,\n        }, {\n            server: credentials.host,\n            user: credentials.username,\n            password: credentials.password,\n            database: credentials.database,\n            port: credentials.port,\n            domain: credentials.domain,\n        }, options.extra || {});\n        // set default useUTC option if it hasn't been set\n        if (!connectionOptions.options)\n            connectionOptions.options = { useUTC: false };\n        else if (!connectionOptions.options.useUTC)\n            connectionOptions.options.useUTC = false;\n        // pooling is enabled either when its set explicitly to true,\n        // either when its not defined at all (e.g. enabled by default)\n        return new Promise(function (ok, fail) {\n            var pool = new _this.mssql.ConnectionPool(connectionOptions);\n            var logger = _this.connection.logger;\n            /*\n              Attaching an error handler to pool errors is essential, as, otherwise, errors raised will go unhandled and\n              cause the hosting app to crash.\n             */\n            pool.on(\"error\", function (error) { return logger.log(\"warn\", \"MSSQL pool raised an error. \" + error); });\n            var connection = pool.connect(function (err) {\n                if (err)\n                    return fail(err);\n                ok(connection);\n            });\n        });\n    };\n    return SqlServerDriver;\n}());\nexports.SqlServerDriver = SqlServerDriver;\n\n//# sourceMappingURL=SqlServerDriver.js.map\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../node-libs-browser/node_modules/buffer/index.js */ \"./node_modules/node-libs-browser/node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:///./node_modules/typeorm/driver/sqlserver/SqlServerDriver.js?");

/***/ }),

/***/ "./node_modules/typeorm/driver/sqlserver/SqlServerQueryRunner.js":
/*!***********************************************************************!*\
  !*** ./node_modules/typeorm/driver/sqlserver/SqlServerQueryRunner.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TransactionAlreadyStartedError_1 = __webpack_require__(/*! ../../error/TransactionAlreadyStartedError */ \"./node_modules/typeorm/error/TransactionAlreadyStartedError.js\");\nvar TransactionNotStartedError_1 = __webpack_require__(/*! ../../error/TransactionNotStartedError */ \"./node_modules/typeorm/error/TransactionNotStartedError.js\");\nvar TableColumn_1 = __webpack_require__(/*! ../../schema-builder/table/TableColumn */ \"./node_modules/typeorm/schema-builder/table/TableColumn.js\");\nvar Table_1 = __webpack_require__(/*! ../../schema-builder/table/Table */ \"./node_modules/typeorm/schema-builder/table/Table.js\");\nvar TableForeignKey_1 = __webpack_require__(/*! ../../schema-builder/table/TableForeignKey */ \"./node_modules/typeorm/schema-builder/table/TableForeignKey.js\");\nvar TableIndex_1 = __webpack_require__(/*! ../../schema-builder/table/TableIndex */ \"./node_modules/typeorm/schema-builder/table/TableIndex.js\");\nvar QueryRunnerAlreadyReleasedError_1 = __webpack_require__(/*! ../../error/QueryRunnerAlreadyReleasedError */ \"./node_modules/typeorm/error/QueryRunnerAlreadyReleasedError.js\");\nvar MssqlParameter_1 = __webpack_require__(/*! ./MssqlParameter */ \"./node_modules/typeorm/driver/sqlserver/MssqlParameter.js\");\nvar OrmUtils_1 = __webpack_require__(/*! ../../util/OrmUtils */ \"./node_modules/typeorm/util/OrmUtils.js\");\nvar QueryFailedError_1 = __webpack_require__(/*! ../../error/QueryFailedError */ \"./node_modules/typeorm/error/QueryFailedError.js\");\nvar TableUnique_1 = __webpack_require__(/*! ../../schema-builder/table/TableUnique */ \"./node_modules/typeorm/schema-builder/table/TableUnique.js\");\nvar TableCheck_1 = __webpack_require__(/*! ../../schema-builder/table/TableCheck */ \"./node_modules/typeorm/schema-builder/table/TableCheck.js\");\nvar BaseQueryRunner_1 = __webpack_require__(/*! ../../query-runner/BaseQueryRunner */ \"./node_modules/typeorm/query-runner/BaseQueryRunner.js\");\nvar Broadcaster_1 = __webpack_require__(/*! ../../subscriber/Broadcaster */ \"./node_modules/typeorm/subscriber/Broadcaster.js\");\nvar index_1 = __webpack_require__(/*! ../../index */ \"./node_modules/typeorm/index.js\");\n/**\n * Runs queries on a single SQL Server database connection.\n */\nvar SqlServerQueryRunner = /** @class */ (function (_super) {\n    __extends(SqlServerQueryRunner, _super);\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function SqlServerQueryRunner(driver, mode) {\n        if (mode === void 0) { mode = \"master\"; }\n        var _this = _super.call(this) || this;\n        // -------------------------------------------------------------------------\n        // Protected Properties\n        // -------------------------------------------------------------------------\n        /**\n         * Last executed query in a transaction.\n         * This is needed because in transaction mode mssql cannot execute parallel queries,\n         * that's why we store last executed query promise to wait it when we execute next query.\n         *\n         * @see https://github.com/patriksimek/node-mssql/issues/491\n         */\n        _this.queryResponsibilityChain = [];\n        _this.driver = driver;\n        _this.connection = driver.connection;\n        _this.broadcaster = new Broadcaster_1.Broadcaster(_this);\n        _this.mode = mode;\n        return _this;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates/uses database connection from the connection pool to perform further operations.\n     * Returns obtained database connection.\n     */\n    SqlServerQueryRunner.prototype.connect = function () {\n        return Promise.resolve();\n    };\n    /**\n     * Releases used database connection.\n     * You cannot use query runner methods once its released.\n     */\n    SqlServerQueryRunner.prototype.release = function () {\n        this.isReleased = true;\n        return Promise.resolve();\n    };\n    /**\n     * Starts transaction.\n     */\n    SqlServerQueryRunner.prototype.startTransaction = function (isolationLevel) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                if (this.isReleased)\n                    throw new QueryRunnerAlreadyReleasedError_1.QueryRunnerAlreadyReleasedError();\n                if (this.isTransactionActive)\n                    throw new TransactionAlreadyStartedError_1.TransactionAlreadyStartedError();\n                return [2 /*return*/, new Promise(function (ok, fail) { return __awaiter(_this, void 0, void 0, function () {\n                        var _this = this;\n                        var pool, transactionCallback;\n                        return __generator(this, function (_a) {\n                            switch (_a.label) {\n                                case 0:\n                                    this.isTransactionActive = true;\n                                    return [4 /*yield*/, (this.mode === \"slave\" ? this.driver.obtainSlaveConnection() : this.driver.obtainMasterConnection())];\n                                case 1:\n                                    pool = _a.sent();\n                                    this.databaseConnection = pool.transaction();\n                                    transactionCallback = function (err) {\n                                        if (err) {\n                                            _this.isTransactionActive = false;\n                                            return fail(err);\n                                        }\n                                        ok();\n                                        _this.connection.logger.logQuery(\"BEGIN TRANSACTION\");\n                                        if (isolationLevel) {\n                                            _this.connection.logger.logQuery(\"SET TRANSACTION ISOLATION LEVEL \" + isolationLevel);\n                                        }\n                                    };\n                                    if (isolationLevel) {\n                                        this.databaseConnection.begin(this.convertIsolationLevel(isolationLevel), transactionCallback);\n                                    }\n                                    else {\n                                        this.databaseConnection.begin(transactionCallback);\n                                    }\n                                    return [2 /*return*/];\n                            }\n                        });\n                    }); })];\n            });\n        });\n    };\n    /**\n     * Commits transaction.\n     * Error will be thrown if transaction was not started.\n     */\n    SqlServerQueryRunner.prototype.commitTransaction = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                if (this.isReleased)\n                    throw new QueryRunnerAlreadyReleasedError_1.QueryRunnerAlreadyReleasedError();\n                if (!this.isTransactionActive)\n                    throw new TransactionNotStartedError_1.TransactionNotStartedError();\n                return [2 /*return*/, new Promise(function (ok, fail) {\n                        _this.databaseConnection.commit(function (err) {\n                            if (err)\n                                return fail(err);\n                            _this.isTransactionActive = false;\n                            _this.databaseConnection = null;\n                            ok();\n                            _this.connection.logger.logQuery(\"COMMIT\");\n                        });\n                    })];\n            });\n        });\n    };\n    /**\n     * Rollbacks transaction.\n     * Error will be thrown if transaction was not started.\n     */\n    SqlServerQueryRunner.prototype.rollbackTransaction = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                if (this.isReleased)\n                    throw new QueryRunnerAlreadyReleasedError_1.QueryRunnerAlreadyReleasedError();\n                if (!this.isTransactionActive)\n                    throw new TransactionNotStartedError_1.TransactionNotStartedError();\n                return [2 /*return*/, new Promise(function (ok, fail) {\n                        _this.databaseConnection.rollback(function (err) {\n                            if (err)\n                                return fail(err);\n                            _this.isTransactionActive = false;\n                            _this.databaseConnection = null;\n                            ok();\n                            _this.connection.logger.logQuery(\"ROLLBACK\");\n                        });\n                    })];\n            });\n        });\n    };\n    /**\n     * Executes a given SQL query.\n     */\n    SqlServerQueryRunner.prototype.query = function (query, parameters) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var waitingOkay, waitingPromise, otherWaitingPromises, promise;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.isReleased)\n                            throw new QueryRunnerAlreadyReleasedError_1.QueryRunnerAlreadyReleasedError();\n                        waitingPromise = new Promise(function (ok) { return waitingOkay = ok; });\n                        if (!this.queryResponsibilityChain.length) return [3 /*break*/, 2];\n                        otherWaitingPromises = __spread(this.queryResponsibilityChain);\n                        this.queryResponsibilityChain.push(waitingPromise);\n                        return [4 /*yield*/, Promise.all(otherWaitingPromises)];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2:\n                        promise = new Promise(function (ok, fail) { return __awaiter(_this, void 0, void 0, function () {\n                            var _this = this;\n                            var pool, request_1, queryStartTime_1, err_1;\n                            return __generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0:\n                                        _a.trys.push([0, 2, , 3]);\n                                        this.driver.connection.logger.logQuery(query, parameters, this);\n                                        return [4 /*yield*/, (this.mode === \"slave\" ? this.driver.obtainSlaveConnection() : this.driver.obtainMasterConnection())];\n                                    case 1:\n                                        pool = _a.sent();\n                                        request_1 = new this.driver.mssql.Request(this.isTransactionActive ? this.databaseConnection : pool);\n                                        if (parameters && parameters.length) {\n                                            parameters.forEach(function (parameter, index) {\n                                                if (parameter instanceof MssqlParameter_1.MssqlParameter) {\n                                                    var mssqlParameter = _this.mssqlParameterToNativeParameter(parameter);\n                                                    if (mssqlParameter) {\n                                                        request_1.input(index, mssqlParameter, parameter.value);\n                                                    }\n                                                    else {\n                                                        request_1.input(index, parameter.value);\n                                                    }\n                                                }\n                                                else {\n                                                    request_1.input(index, parameter);\n                                                }\n                                            });\n                                        }\n                                        queryStartTime_1 = +new Date();\n                                        request_1.query(query, function (err, result) {\n                                            // log slow queries if maxQueryExecution time is set\n                                            var maxQueryExecutionTime = _this.driver.connection.options.maxQueryExecutionTime;\n                                            var queryEndTime = +new Date();\n                                            var queryExecutionTime = queryEndTime - queryStartTime_1;\n                                            if (maxQueryExecutionTime && queryExecutionTime > maxQueryExecutionTime)\n                                                _this.driver.connection.logger.logQuerySlow(queryExecutionTime, query, parameters, _this);\n                                            var resolveChain = function () {\n                                                if (promiseIndex !== -1)\n                                                    _this.queryResponsibilityChain.splice(promiseIndex, 1);\n                                                if (waitingPromiseIndex !== -1)\n                                                    _this.queryResponsibilityChain.splice(waitingPromiseIndex, 1);\n                                                waitingOkay();\n                                            };\n                                            var promiseIndex = _this.queryResponsibilityChain.indexOf(promise);\n                                            var waitingPromiseIndex = _this.queryResponsibilityChain.indexOf(waitingPromise);\n                                            if (err) {\n                                                _this.driver.connection.logger.logQueryError(err, query, parameters, _this);\n                                                resolveChain();\n                                                return fail(new QueryFailedError_1.QueryFailedError(query, parameters, err));\n                                            }\n                                            ok(result.recordset);\n                                            resolveChain();\n                                        });\n                                        return [3 /*break*/, 3];\n                                    case 2:\n                                        err_1 = _a.sent();\n                                        fail(err_1);\n                                        return [3 /*break*/, 3];\n                                    case 3: return [2 /*return*/];\n                                }\n                            });\n                        }); });\n                        // with this condition, Promise.all causes unexpected behavior.\n                        // if (this.isTransactionActive)\n                        this.queryResponsibilityChain.push(promise);\n                        return [2 /*return*/, promise];\n                }\n            });\n        });\n    };\n    /**\n     * Returns raw data stream.\n     */\n    SqlServerQueryRunner.prototype.stream = function (query, parameters, onEnd, onError) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var waitingOkay, waitingPromise, otherWaitingPromises, promise;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.isReleased)\n                            throw new QueryRunnerAlreadyReleasedError_1.QueryRunnerAlreadyReleasedError();\n                        waitingPromise = new Promise(function (ok) { return waitingOkay = ok; });\n                        if (!this.queryResponsibilityChain.length) return [3 /*break*/, 2];\n                        otherWaitingPromises = __spread(this.queryResponsibilityChain);\n                        this.queryResponsibilityChain.push(waitingPromise);\n                        return [4 /*yield*/, Promise.all(otherWaitingPromises)];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2:\n                        promise = new Promise(function (ok, fail) { return __awaiter(_this, void 0, void 0, function () {\n                            var _this = this;\n                            var pool, request;\n                            return __generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0:\n                                        this.driver.connection.logger.logQuery(query, parameters, this);\n                                        return [4 /*yield*/, (this.mode === \"slave\" ? this.driver.obtainSlaveConnection() : this.driver.obtainMasterConnection())];\n                                    case 1:\n                                        pool = _a.sent();\n                                        request = new this.driver.mssql.Request(this.isTransactionActive ? this.databaseConnection : pool);\n                                        request.stream = true;\n                                        if (parameters && parameters.length) {\n                                            parameters.forEach(function (parameter, index) {\n                                                if (parameter instanceof MssqlParameter_1.MssqlParameter) {\n                                                    request.input(index, _this.mssqlParameterToNativeParameter(parameter), parameter.value);\n                                                }\n                                                else {\n                                                    request.input(index, parameter);\n                                                }\n                                            });\n                                        }\n                                        request.query(query, function (err, result) {\n                                            var resolveChain = function () {\n                                                if (promiseIndex !== -1)\n                                                    _this.queryResponsibilityChain.splice(promiseIndex, 1);\n                                                if (waitingPromiseIndex !== -1)\n                                                    _this.queryResponsibilityChain.splice(waitingPromiseIndex, 1);\n                                                waitingOkay();\n                                            };\n                                            var promiseIndex = _this.queryResponsibilityChain.indexOf(promise);\n                                            var waitingPromiseIndex = _this.queryResponsibilityChain.indexOf(waitingPromise);\n                                            if (err) {\n                                                _this.driver.connection.logger.logQueryError(err, query, parameters, _this);\n                                                resolveChain();\n                                                return fail(err);\n                                            }\n                                            ok(result.recordset);\n                                            resolveChain();\n                                        });\n                                        if (onEnd)\n                                            request.on(\"done\", onEnd);\n                                        if (onError)\n                                            request.on(\"error\", onError);\n                                        ok(request);\n                                        return [2 /*return*/];\n                                }\n                            });\n                        }); });\n                        if (this.isTransactionActive)\n                            this.queryResponsibilityChain.push(promise);\n                        return [2 /*return*/, promise];\n                }\n            });\n        });\n    };\n    /**\n     * Returns all available database names including system databases.\n     */\n    SqlServerQueryRunner.prototype.getDatabases = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var results;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.query(\"EXEC sp_databases\")];\n                    case 1:\n                        results = _a.sent();\n                        return [2 /*return*/, results.map(function (result) { return result[\"DATABASE_NAME\"]; })];\n                }\n            });\n        });\n    };\n    /**\n     * Returns all available schema names including system schemas.\n     * If database parameter specified, returns schemas of that database.\n     */\n    SqlServerQueryRunner.prototype.getSchemas = function (database) {\n        return __awaiter(this, void 0, void 0, function () {\n            var query, results;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        query = database ? \"SELECT * FROM \\\"\" + database + \"\\\".\\\"sys\\\".\\\"schema\\\"\" : \"SELECT * FROM \\\"sys\\\".\\\"schemas\\\"\";\n                        return [4 /*yield*/, this.query(query)];\n                    case 1:\n                        results = _a.sent();\n                        return [2 /*return*/, results.map(function (result) { return result[\"name\"]; })];\n                }\n            });\n        });\n    };\n    /**\n     * Checks if database with the given name exist.\n     */\n    SqlServerQueryRunner.prototype.hasDatabase = function (database) {\n        return __awaiter(this, void 0, void 0, function () {\n            var result, dbId;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.query(\"SELECT DB_ID('\" + database + \"') as \\\"db_id\\\"\")];\n                    case 1:\n                        result = _a.sent();\n                        dbId = result[0][\"db_id\"];\n                        return [2 /*return*/, !!dbId];\n                }\n            });\n        });\n    };\n    /**\n     * Checks if schema with the given name exist.\n     */\n    SqlServerQueryRunner.prototype.hasSchema = function (schema) {\n        return __awaiter(this, void 0, void 0, function () {\n            var result, schemaId;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.query(\"SELECT SCHEMA_ID('\" + schema + \"') as \\\"schema_id\\\"\")];\n                    case 1:\n                        result = _a.sent();\n                        schemaId = result[0][\"schema_id\"];\n                        return [2 /*return*/, !!schemaId];\n                }\n            });\n        });\n    };\n    /**\n     * Checks if table with the given name exist in the database.\n     */\n    SqlServerQueryRunner.prototype.hasTable = function (tableOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var parsedTableName, schema, sql, result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        parsedTableName = this.parseTableName(tableOrName);\n                        schema = parsedTableName.schema === \"SCHEMA_NAME()\" ? parsedTableName.schema : \"'\" + parsedTableName.schema + \"'\";\n                        sql = \"SELECT * FROM \\\"\" + parsedTableName.database + \"\\\".\\\"INFORMATION_SCHEMA\\\".\\\"TABLES\\\" WHERE \\\"TABLE_NAME\\\" = '\" + parsedTableName.tableName + \"' AND \\\"TABLE_SCHEMA\\\" = \" + schema;\n                        return [4 /*yield*/, this.query(sql)];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, result.length ? true : false];\n                }\n            });\n        });\n    };\n    /**\n     * Checks if column exist in the table.\n     */\n    SqlServerQueryRunner.prototype.hasColumn = function (tableOrName, columnName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var parsedTableName, schema, sql, result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        parsedTableName = this.parseTableName(tableOrName);\n                        schema = parsedTableName.schema === \"SCHEMA_NAME()\" ? parsedTableName.schema : \"'\" + parsedTableName.schema + \"'\";\n                        sql = \"SELECT * FROM \\\"\" + parsedTableName.database + \"\\\".\\\"INFORMATION_SCHEMA\\\".\\\"TABLES\\\" WHERE \\\"TABLE_NAME\\\" = '\" + parsedTableName.tableName + \"' AND \\\"COLUMN_NAME\\\" = '\" + columnName + \"' AND \\\"TABLE_SCHEMA\\\" = \" + schema;\n                        return [4 /*yield*/, this.query(sql)];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, result.length ? true : false];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new database.\n     */\n    SqlServerQueryRunner.prototype.createDatabase = function (database, ifNotExist) {\n        return __awaiter(this, void 0, void 0, function () {\n            var up, down;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        up = ifNotExist ? \"IF DB_ID('\" + database + \"') IS NULL CREATE DATABASE \\\"\" + database + \"\\\"\" : \"CREATE DATABASE \\\"\" + database + \"\\\"\";\n                        down = \"DROP DATABASE \\\"\" + database + \"\\\"\";\n                        return [4 /*yield*/, this.executeQueries(up, down)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops database.\n     */\n    SqlServerQueryRunner.prototype.dropDatabase = function (database, ifExist) {\n        return __awaiter(this, void 0, void 0, function () {\n            var up, down;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        up = ifExist ? \"IF DB_ID('\" + database + \"') IS NOT NULL DROP DATABASE \\\"\" + database + \"\\\"\" : \"DROP DATABASE \\\"\" + database + \"\\\"\";\n                        down = \"CREATE DATABASE \\\"\" + database + \"\\\"\";\n                        return [4 /*yield*/, this.executeQueries(up, down)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates table schema.\n     * If database name also specified (e.g. 'dbName.schemaName') schema will be created in specified database.\n     */\n    SqlServerQueryRunner.prototype.createSchema = function (schemaPath, ifNotExist) {\n        return __awaiter(this, void 0, void 0, function () {\n            var upQueries, downQueries, upQuery, dbName, schema, currentDB, upQuery;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        upQueries = [];\n                        downQueries = [];\n                        if (!(schemaPath.indexOf(\".\") === -1)) return [3 /*break*/, 1];\n                        upQuery = ifNotExist ? \"IF SCHEMA_ID('\" + schemaPath + \"') IS NULL BEGIN EXEC ('CREATE SCHEMA \\\"\" + schemaPath + \"\\\"') END\" : \"CREATE SCHEMA \\\"\" + schemaPath + \"\\\"\";\n                        upQueries.push(upQuery);\n                        downQueries.push(\"DROP SCHEMA \\\"\" + schemaPath + \"\\\"\");\n                        return [3 /*break*/, 3];\n                    case 1:\n                        dbName = schemaPath.split(\".\")[0];\n                        schema = schemaPath.split(\".\")[1];\n                        return [4 /*yield*/, this.getCurrentDatabase()];\n                    case 2:\n                        currentDB = _a.sent();\n                        upQueries.push(\"USE \\\"\" + dbName + \"\\\"\");\n                        downQueries.push(\"USE \\\"\" + currentDB + \"\\\"\");\n                        upQuery = ifNotExist ? \"IF SCHEMA_ID('\" + schema + \"') IS NULL BEGIN EXEC ('CREATE SCHEMA \\\"\" + schema + \"\\\"') END\" : \"CREATE SCHEMA \\\"\" + schema + \"\\\"\";\n                        upQueries.push(upQuery);\n                        downQueries.push(\"DROP SCHEMA \\\"\" + schema + \"\\\"\");\n                        upQueries.push(\"USE \\\"\" + currentDB + \"\\\"\");\n                        downQueries.push(\"USE \\\"\" + dbName + \"\\\"\");\n                        _a.label = 3;\n                    case 3: return [4 /*yield*/, this.executeQueries(upQueries, downQueries)];\n                    case 4:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops table schema.\n     * If database name also specified (e.g. 'dbName.schemaName') schema will be dropped in specified database.\n     */\n    SqlServerQueryRunner.prototype.dropSchema = function (schemaPath, ifExist) {\n        return __awaiter(this, void 0, void 0, function () {\n            var upQueries, downQueries, upQuery, dbName, schema, currentDB, upQuery;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        upQueries = [];\n                        downQueries = [];\n                        if (!(schemaPath.indexOf(\".\") === -1)) return [3 /*break*/, 1];\n                        upQuery = ifExist ? \"IF SCHEMA_ID('\" + schemaPath + \"') IS NULL BEGIN EXEC ('DROP SCHEMA \\\"\" + schemaPath + \"\\\"') END\" : \"DROP SCHEMA \\\"\" + schemaPath + \"\\\"\";\n                        upQueries.push(upQuery);\n                        downQueries.push(\"CREATE SCHEMA \\\"\" + schemaPath + \"\\\"\");\n                        return [3 /*break*/, 3];\n                    case 1:\n                        dbName = schemaPath.split(\".\")[0];\n                        schema = schemaPath.split(\".\")[1];\n                        return [4 /*yield*/, this.getCurrentDatabase()];\n                    case 2:\n                        currentDB = _a.sent();\n                        upQueries.push(\"USE \\\"\" + dbName + \"\\\"\");\n                        downQueries.push(\"USE \\\"\" + currentDB + \"\\\"\");\n                        upQuery = ifExist ? \"IF SCHEMA_ID('\" + schema + \"') IS NULL BEGIN EXEC ('DROP SCHEMA \\\"\" + schema + \"\\\"') END\" : \"DROP SCHEMA \\\"\" + schema + \"\\\"\";\n                        upQueries.push(upQuery);\n                        downQueries.push(\"CREATE SCHEMA \\\"\" + schema + \"\\\"\");\n                        upQueries.push(\"USE \\\"\" + currentDB + \"\\\"\");\n                        downQueries.push(\"USE \\\"\" + dbName + \"\\\"\");\n                        _a.label = 3;\n                    case 3: return [4 /*yield*/, this.executeQueries(upQueries, downQueries)];\n                    case 4:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new table.\n     */\n    SqlServerQueryRunner.prototype.createTable = function (table, ifNotExist, createForeignKeys, createIndices) {\n        if (ifNotExist === void 0) { ifNotExist = false; }\n        if (createForeignKeys === void 0) { createForeignKeys = true; }\n        if (createIndices === void 0) { createIndices = true; }\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var isTableExist, upQueries, downQueries;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!ifNotExist) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.hasTable(table)];\n                    case 1:\n                        isTableExist = _a.sent();\n                        if (isTableExist)\n                            return [2 /*return*/, Promise.resolve()];\n                        _a.label = 2;\n                    case 2:\n                        upQueries = [];\n                        downQueries = [];\n                        upQueries.push(this.createTableSql(table, createForeignKeys));\n                        downQueries.push(this.dropTableSql(table));\n                        // if createForeignKeys is true, we must drop created foreign keys in down query.\n                        // createTable does not need separate method to create foreign keys, because it create fk's in the same query with table creation.\n                        if (createForeignKeys)\n                            table.foreignKeys.forEach(function (foreignKey) { return downQueries.push(_this.dropForeignKeySql(table, foreignKey)); });\n                        if (createIndices) {\n                            table.indices.forEach(function (index) {\n                                // new index may be passed without name. In this case we generate index name manually.\n                                if (!index.name)\n                                    index.name = _this.connection.namingStrategy.indexName(table.name, index.columnNames, index.where);\n                                upQueries.push(_this.createIndexSql(table, index));\n                                downQueries.push(_this.dropIndexSql(table, index));\n                            });\n                        }\n                        return [4 /*yield*/, this.executeQueries(upQueries, downQueries)];\n                    case 3:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops the table.\n     */\n    SqlServerQueryRunner.prototype.dropTable = function (tableOrName, ifExist, dropForeignKeys, dropIndices) {\n        if (dropForeignKeys === void 0) { dropForeignKeys = true; }\n        if (dropIndices === void 0) { dropIndices = true; }\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var isTableExist, createForeignKeys, table, _a, upQueries, downQueries;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!ifExist) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.hasTable(tableOrName)];\n                    case 1:\n                        isTableExist = _b.sent();\n                        if (!isTableExist)\n                            return [2 /*return*/, Promise.resolve()];\n                        _b.label = 2;\n                    case 2:\n                        createForeignKeys = dropForeignKeys;\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 3];\n                        _a = tableOrName;\n                        return [3 /*break*/, 5];\n                    case 3: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 4:\n                        _a = _b.sent();\n                        _b.label = 5;\n                    case 5:\n                        table = _a;\n                        upQueries = [];\n                        downQueries = [];\n                        // It needs because if table does not exist and dropForeignKeys or dropIndices is true, we don't need\n                        // to perform drop queries for foreign keys and indices.\n                        if (dropIndices) {\n                            table.indices.forEach(function (index) {\n                                upQueries.push(_this.dropIndexSql(table, index));\n                                downQueries.push(_this.createIndexSql(table, index));\n                            });\n                        }\n                        // if dropForeignKeys is true, we just drop the table, otherwise we also drop table foreign keys.\n                        // createTable does not need separate method to create foreign keys, because it create fk's in the same query with table creation.\n                        if (dropForeignKeys)\n                            table.foreignKeys.forEach(function (foreignKey) { return upQueries.push(_this.dropForeignKeySql(table, foreignKey)); });\n                        upQueries.push(this.dropTableSql(table));\n                        downQueries.push(this.createTableSql(table, createForeignKeys));\n                        return [4 /*yield*/, this.executeQueries(upQueries, downQueries)];\n                    case 6:\n                        _b.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Renames a table.\n     */\n    SqlServerQueryRunner.prototype.renameTable = function (oldTableOrName, newTableName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var upQueries, downQueries, oldTable, _a, newTable, dbName, schemaName, oldTableName, splittedName, currentDB, columnNames, oldPkName, newPkName;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        upQueries = [];\n                        downQueries = [];\n                        if (!(oldTableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = oldTableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(oldTableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        oldTable = _a;\n                        newTable = oldTable.clone();\n                        dbName = undefined;\n                        schemaName = undefined;\n                        oldTableName = oldTable.name;\n                        splittedName = oldTable.name.split(\".\");\n                        if (splittedName.length === 3) {\n                            dbName = splittedName[0];\n                            oldTableName = splittedName[2];\n                            if (splittedName[1] !== \"\")\n                                schemaName = splittedName[1];\n                        }\n                        else if (splittedName.length === 2) {\n                            schemaName = splittedName[0];\n                            oldTableName = splittedName[1];\n                        }\n                        newTable.name = this.driver.buildTableName(newTableName, schemaName, dbName);\n                        return [4 /*yield*/, this.getCurrentDatabase()];\n                    case 4:\n                        currentDB = _b.sent();\n                        if (dbName && dbName !== currentDB) {\n                            upQueries.push(\"USE \\\"\" + dbName + \"\\\"\");\n                            downQueries.push(\"USE \\\"\" + currentDB + \"\\\"\");\n                        }\n                        // rename table\n                        upQueries.push(\"EXEC sp_rename \\\"\" + this.escapeTableName(oldTable, true) + \"\\\", \\\"\" + newTableName + \"\\\"\");\n                        downQueries.push(\"EXEC sp_rename \\\"\" + this.escapeTableName(newTable, true) + \"\\\", \\\"\" + oldTableName + \"\\\"\");\n                        // rename primary key constraint\n                        if (newTable.primaryColumns.length > 0) {\n                            columnNames = newTable.primaryColumns.map(function (column) { return column.name; });\n                            oldPkName = this.connection.namingStrategy.primaryKeyName(oldTable, columnNames);\n                            newPkName = this.connection.namingStrategy.primaryKeyName(newTable, columnNames);\n                            // rename primary constraint\n                            upQueries.push(\"EXEC sp_rename \\\"\" + this.escapeTableName(newTable, true) + \".\" + oldPkName + \"\\\", \\\"\" + newPkName + \"\\\"\");\n                            downQueries.push(\"EXEC sp_rename \\\"\" + this.escapeTableName(newTable, true) + \".\" + newPkName + \"\\\", \\\"\" + oldPkName + \"\\\"\");\n                        }\n                        // rename unique constraints\n                        newTable.uniques.forEach(function (unique) {\n                            // build new constraint name\n                            var newUniqueName = _this.connection.namingStrategy.uniqueConstraintName(newTable, unique.columnNames);\n                            // build queries\n                            upQueries.push(\"EXEC sp_rename \\\"\" + _this.escapeTableName(newTable, true) + \".\" + unique.name + \"\\\", \\\"\" + newUniqueName + \"\\\"\");\n                            downQueries.push(\"EXEC sp_rename \\\"\" + _this.escapeTableName(newTable, true) + \".\" + newUniqueName + \"\\\", \\\"\" + unique.name + \"\\\"\");\n                            // replace constraint name\n                            unique.name = newUniqueName;\n                        });\n                        // rename index constraints\n                        newTable.indices.forEach(function (index) {\n                            // build new constraint name\n                            var newIndexName = _this.connection.namingStrategy.indexName(newTable, index.columnNames, index.where);\n                            // build queries\n                            upQueries.push(\"EXEC sp_rename \\\"\" + _this.escapeTableName(newTable, true) + \".\" + index.name + \"\\\", \\\"\" + newIndexName + \"\\\", \\\"INDEX\\\"\");\n                            downQueries.push(\"EXEC sp_rename \\\"\" + _this.escapeTableName(newTable, true) + \".\" + newIndexName + \"\\\", \\\"\" + index.name + \"\\\", \\\"INDEX\\\"\");\n                            // replace constraint name\n                            index.name = newIndexName;\n                        });\n                        // rename foreign key constraints\n                        newTable.foreignKeys.forEach(function (foreignKey) {\n                            // build new constraint name\n                            var newForeignKeyName = _this.connection.namingStrategy.foreignKeyName(newTable, foreignKey.columnNames);\n                            // build queries\n                            upQueries.push(\"EXEC sp_rename \\\"\" + _this.buildForeignKeyName(foreignKey.name, schemaName, dbName) + \"\\\", \\\"\" + newForeignKeyName + \"\\\"\");\n                            downQueries.push(\"EXEC sp_rename \\\"\" + _this.buildForeignKeyName(newForeignKeyName, schemaName, dbName) + \"\\\", \\\"\" + foreignKey.name + \"\\\"\");\n                            // replace constraint name\n                            foreignKey.name = newForeignKeyName;\n                        });\n                        // change currently used database back to default db.\n                        if (dbName && dbName !== currentDB) {\n                            upQueries.push(\"USE \\\"\" + currentDB + \"\\\"\");\n                            downQueries.push(\"USE \\\"\" + dbName + \"\\\"\");\n                        }\n                        return [4 /*yield*/, this.executeQueries(upQueries, downQueries)];\n                    case 5:\n                        _b.sent();\n                        // rename old table and replace it in cached tabled;\n                        oldTable.name = newTable.name;\n                        this.replaceCachedTable(oldTable, newTable);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new column from the column in the table.\n     */\n    SqlServerQueryRunner.prototype.addColumn = function (tableOrName, column) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, clonedTable, upQueries, downQueries, primaryColumns, pkName_1, columnNames_1, pkName, columnNames, columnIndex, uniqueConstraint, defaultName;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        clonedTable = table.clone();\n                        upQueries = [];\n                        downQueries = [];\n                        upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ADD \" + this.buildCreateColumnSql(table, column, false, false));\n                        downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" DROP COLUMN \\\"\" + column.name + \"\\\"\");\n                        // create or update primary key constraint\n                        if (column.isPrimary) {\n                            primaryColumns = clonedTable.primaryColumns;\n                            // if table already have primary key, me must drop it and recreate again\n                            if (primaryColumns.length > 0) {\n                                pkName_1 = this.connection.namingStrategy.primaryKeyName(clonedTable.name, primaryColumns.map(function (column) { return column.name; }));\n                                columnNames_1 = primaryColumns.map(function (column) { return \"\\\"\" + column.name + \"\\\"\"; }).join(\", \");\n                                upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" DROP CONSTRAINT \\\"\" + pkName_1 + \"\\\"\");\n                                downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ADD CONSTRAINT \\\"\" + pkName_1 + \"\\\" PRIMARY KEY (\" + columnNames_1 + \")\");\n                            }\n                            primaryColumns.push(column);\n                            pkName = this.connection.namingStrategy.primaryKeyName(clonedTable.name, primaryColumns.map(function (column) { return column.name; }));\n                            columnNames = primaryColumns.map(function (column) { return \"\\\"\" + column.name + \"\\\"\"; }).join(\", \");\n                            upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ADD CONSTRAINT \\\"\" + pkName + \"\\\" PRIMARY KEY (\" + columnNames + \")\");\n                            downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" DROP CONSTRAINT \\\"\" + pkName + \"\\\"\");\n                        }\n                        columnIndex = clonedTable.indices.find(function (index) { return index.columnNames.length === 1 && index.columnNames[0] === column.name; });\n                        if (columnIndex) {\n                            upQueries.push(this.createIndexSql(table, columnIndex));\n                            downQueries.push(this.dropIndexSql(table, columnIndex));\n                        }\n                        // create unique constraint\n                        if (column.isUnique) {\n                            uniqueConstraint = new TableUnique_1.TableUnique({\n                                name: this.connection.namingStrategy.uniqueConstraintName(table.name, [column.name]),\n                                columnNames: [column.name]\n                            });\n                            clonedTable.uniques.push(uniqueConstraint);\n                            upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ADD CONSTRAINT \\\"\" + uniqueConstraint.name + \"\\\" UNIQUE (\\\"\" + column.name + \"\\\")\");\n                            downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" DROP CONSTRAINT \\\"\" + uniqueConstraint.name + \"\\\"\");\n                        }\n                        // create default constraint\n                        if (column.default !== null && column.default !== undefined) {\n                            defaultName = this.connection.namingStrategy.defaultConstraintName(table.name, column.name);\n                            upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ADD CONSTRAINT \\\"\" + defaultName + \"\\\" DEFAULT \" + column.default + \" FOR \\\"\" + column.name + \"\\\"\");\n                            downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" DROP CONSTRAINT \\\"\" + defaultName + \"\\\"\");\n                        }\n                        return [4 /*yield*/, this.executeQueries(upQueries, downQueries)];\n                    case 4:\n                        _b.sent();\n                        clonedTable.addColumn(column);\n                        this.replaceCachedTable(table, clonedTable);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new columns from the column in the table.\n     */\n    SqlServerQueryRunner.prototype.addColumns = function (tableOrName, columns) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, index_1.PromiseUtils.runInSequence(columns, function (column) { return _this.addColumn(tableOrName, column); })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Renames column in the given table.\n     */\n    SqlServerQueryRunner.prototype.renameColumn = function (tableOrName, oldTableColumnOrName, newTableColumnOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, oldColumn, newColumn;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        oldColumn = oldTableColumnOrName instanceof TableColumn_1.TableColumn ? oldTableColumnOrName : table.columns.find(function (c) { return c.name === oldTableColumnOrName; });\n                        if (!oldColumn)\n                            throw new Error(\"Column \\\"\" + oldTableColumnOrName + \"\\\" was not found in the \\\"\" + table.name + \"\\\" table.\");\n                        newColumn = undefined;\n                        if (newTableColumnOrName instanceof TableColumn_1.TableColumn) {\n                            newColumn = newTableColumnOrName;\n                        }\n                        else {\n                            newColumn = oldColumn.clone();\n                            newColumn.name = newTableColumnOrName;\n                        }\n                        return [4 /*yield*/, this.changeColumn(table, oldColumn, newColumn)];\n                    case 4:\n                        _b.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Changes a column in the table.\n     */\n    SqlServerQueryRunner.prototype.changeColumn = function (tableOrName, oldTableColumnOrName, newColumn) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var table, _a, clonedTable, upQueries, downQueries, oldColumn, dbName_1, schemaName_1, splittedName, currentDB, primaryColumns, columnNames, oldPkName, newPkName, oldTableColumn, primaryColumns, pkName, columnNames, column, pkName, columnNames, primaryColumn, column, pkName, columnNames, uniqueConstraint, uniqueConstraint, defaultName, defaultName;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        clonedTable = table.clone();\n                        upQueries = [];\n                        downQueries = [];\n                        oldColumn = oldTableColumnOrName instanceof TableColumn_1.TableColumn\n                            ? oldTableColumnOrName\n                            : table.columns.find(function (column) { return column.name === oldTableColumnOrName; });\n                        if (!oldColumn)\n                            throw new Error(\"Column \\\"\" + oldTableColumnOrName + \"\\\" was not found in the \\\"\" + table.name + \"\\\" table.\");\n                        if (!((newColumn.isGenerated !== oldColumn.isGenerated && newColumn.generationStrategy !== \"uuid\") || newColumn.type !== oldColumn.type || newColumn.length !== oldColumn.length)) return [3 /*break*/, 6];\n                        // SQL Server does not support changing of IDENTITY column, so we must drop column and recreate it again.\n                        // Also, we recreate column if column type changed\n                        return [4 /*yield*/, this.dropColumn(table, oldColumn)];\n                    case 4:\n                        // SQL Server does not support changing of IDENTITY column, so we must drop column and recreate it again.\n                        // Also, we recreate column if column type changed\n                        _b.sent();\n                        return [4 /*yield*/, this.addColumn(table, newColumn)];\n                    case 5:\n                        _b.sent();\n                        // update cloned table\n                        clonedTable = table.clone();\n                        return [3 /*break*/, 10];\n                    case 6:\n                        if (!(newColumn.name !== oldColumn.name)) return [3 /*break*/, 8];\n                        dbName_1 = undefined;\n                        schemaName_1 = undefined;\n                        splittedName = table.name.split(\".\");\n                        if (splittedName.length === 3) {\n                            dbName_1 = splittedName[0];\n                            if (splittedName[1] !== \"\")\n                                schemaName_1 = splittedName[1];\n                        }\n                        else if (splittedName.length === 2) {\n                            schemaName_1 = splittedName[0];\n                        }\n                        return [4 /*yield*/, this.getCurrentDatabase()];\n                    case 7:\n                        currentDB = _b.sent();\n                        if (dbName_1 && dbName_1 !== currentDB) {\n                            upQueries.push(\"USE \\\"\" + dbName_1 + \"\\\"\");\n                            downQueries.push(\"USE \\\"\" + currentDB + \"\\\"\");\n                        }\n                        // rename the column\n                        upQueries.push(\"EXEC sp_rename \\\"\" + this.escapeTableName(table, true) + \".\" + oldColumn.name + \"\\\", \\\"\" + newColumn.name + \"\\\"\");\n                        downQueries.push(\"EXEC sp_rename \\\"\" + this.escapeTableName(table, true) + \".\" + newColumn.name + \"\\\", \\\"\" + oldColumn.name + \"\\\"\");\n                        if (oldColumn.isPrimary === true) {\n                            primaryColumns = clonedTable.primaryColumns;\n                            columnNames = primaryColumns.map(function (column) { return column.name; });\n                            oldPkName = this.connection.namingStrategy.primaryKeyName(clonedTable, columnNames);\n                            // replace old column name with new column name\n                            columnNames.splice(columnNames.indexOf(oldColumn.name), 1);\n                            columnNames.push(newColumn.name);\n                            newPkName = this.connection.namingStrategy.primaryKeyName(clonedTable, columnNames);\n                            // rename primary constraint\n                            upQueries.push(\"EXEC sp_rename \\\"\" + this.escapeTableName(clonedTable, true) + \".\" + oldPkName + \"\\\", \\\"\" + newPkName + \"\\\"\");\n                            downQueries.push(\"EXEC sp_rename \\\"\" + this.escapeTableName(clonedTable, true) + \".\" + newPkName + \"\\\", \\\"\" + oldPkName + \"\\\"\");\n                        }\n                        // rename index constraints\n                        clonedTable.findColumnIndices(oldColumn).forEach(function (index) {\n                            // build new constraint name\n                            index.columnNames.splice(index.columnNames.indexOf(oldColumn.name), 1);\n                            index.columnNames.push(newColumn.name);\n                            var newIndexName = _this.connection.namingStrategy.indexName(clonedTable, index.columnNames, index.where);\n                            // build queries\n                            upQueries.push(\"EXEC sp_rename \\\"\" + _this.escapeTableName(clonedTable, true) + \".\" + index.name + \"\\\", \\\"\" + newIndexName + \"\\\", \\\"INDEX\\\"\");\n                            downQueries.push(\"EXEC sp_rename \\\"\" + _this.escapeTableName(clonedTable, true) + \".\" + newIndexName + \"\\\", \\\"\" + index.name + \"\\\", \\\"INDEX\\\"\");\n                            // replace constraint name\n                            index.name = newIndexName;\n                        });\n                        // rename foreign key constraints\n                        clonedTable.findColumnForeignKeys(oldColumn).forEach(function (foreignKey) {\n                            // build new constraint name\n                            foreignKey.columnNames.splice(foreignKey.columnNames.indexOf(oldColumn.name), 1);\n                            foreignKey.columnNames.push(newColumn.name);\n                            var newForeignKeyName = _this.connection.namingStrategy.foreignKeyName(clonedTable, foreignKey.columnNames);\n                            // build queries\n                            upQueries.push(\"EXEC sp_rename \\\"\" + _this.buildForeignKeyName(foreignKey.name, schemaName_1, dbName_1) + \"\\\", \\\"\" + newForeignKeyName + \"\\\"\");\n                            downQueries.push(\"EXEC sp_rename \\\"\" + _this.buildForeignKeyName(newForeignKeyName, schemaName_1, dbName_1) + \"\\\", \\\"\" + foreignKey.name + \"\\\"\");\n                            // replace constraint name\n                            foreignKey.name = newForeignKeyName;\n                        });\n                        // rename check constraints\n                        clonedTable.findColumnChecks(oldColumn).forEach(function (check) {\n                            // build new constraint name\n                            check.columnNames.splice(check.columnNames.indexOf(oldColumn.name), 1);\n                            check.columnNames.push(newColumn.name);\n                            var newCheckName = _this.connection.namingStrategy.checkConstraintName(clonedTable, check.expression);\n                            // build queries\n                            upQueries.push(\"EXEC sp_rename \\\"\" + _this.escapeTableName(clonedTable, true) + \".\" + check.name + \"\\\", \\\"\" + newCheckName + \"\\\"\");\n                            downQueries.push(\"EXEC sp_rename \\\"\" + _this.escapeTableName(clonedTable, true) + \".\" + newCheckName + \"\\\", \\\"\" + check.name + \"\\\"\");\n                            // replace constraint name\n                            check.name = newCheckName;\n                        });\n                        // rename unique constraints\n                        clonedTable.findColumnUniques(oldColumn).forEach(function (unique) {\n                            // build new constraint name\n                            unique.columnNames.splice(unique.columnNames.indexOf(oldColumn.name), 1);\n                            unique.columnNames.push(newColumn.name);\n                            var newUniqueName = _this.connection.namingStrategy.uniqueConstraintName(clonedTable, unique.columnNames);\n                            // build queries\n                            upQueries.push(\"EXEC sp_rename \\\"\" + _this.escapeTableName(clonedTable, true) + \".\" + unique.name + \"\\\", \\\"\" + newUniqueName + \"\\\"\");\n                            downQueries.push(\"EXEC sp_rename \\\"\" + _this.escapeTableName(clonedTable, true) + \".\" + newUniqueName + \"\\\", \\\"\" + unique.name + \"\\\"\");\n                            // replace constraint name\n                            unique.name = newUniqueName;\n                        });\n                        // change currently used database back to default db.\n                        if (dbName_1 && dbName_1 !== currentDB) {\n                            upQueries.push(\"USE \\\"\" + currentDB + \"\\\"\");\n                            downQueries.push(\"USE \\\"\" + dbName_1 + \"\\\"\");\n                        }\n                        oldTableColumn = clonedTable.columns.find(function (column) { return column.name === oldColumn.name; });\n                        clonedTable.columns[clonedTable.columns.indexOf(oldTableColumn)].name = newColumn.name;\n                        oldColumn.name = newColumn.name;\n                        _b.label = 8;\n                    case 8:\n                        if (this.isColumnChanged(oldColumn, newColumn)) {\n                            upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ALTER COLUMN \" + this.buildCreateColumnSql(table, newColumn, true, false));\n                            downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ALTER COLUMN \" + this.buildCreateColumnSql(table, oldColumn, true, false));\n                        }\n                        if (newColumn.isPrimary !== oldColumn.isPrimary) {\n                            primaryColumns = clonedTable.primaryColumns;\n                            // if primary column state changed, we must always drop existed constraint.\n                            if (primaryColumns.length > 0) {\n                                pkName = this.connection.namingStrategy.primaryKeyName(clonedTable.name, primaryColumns.map(function (column) { return column.name; }));\n                                columnNames = primaryColumns.map(function (column) { return \"\\\"\" + column.name + \"\\\"\"; }).join(\", \");\n                                upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" DROP CONSTRAINT \\\"\" + pkName + \"\\\"\");\n                                downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ADD CONSTRAINT \\\"\" + pkName + \"\\\" PRIMARY KEY (\" + columnNames + \")\");\n                            }\n                            if (newColumn.isPrimary === true) {\n                                primaryColumns.push(newColumn);\n                                column = clonedTable.columns.find(function (column) { return column.name === newColumn.name; });\n                                column.isPrimary = true;\n                                pkName = this.connection.namingStrategy.primaryKeyName(clonedTable.name, primaryColumns.map(function (column) { return column.name; }));\n                                columnNames = primaryColumns.map(function (column) { return \"\\\"\" + column.name + \"\\\"\"; }).join(\", \");\n                                upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ADD CONSTRAINT \\\"\" + pkName + \"\\\" PRIMARY KEY (\" + columnNames + \")\");\n                                downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" DROP CONSTRAINT \\\"\" + pkName + \"\\\"\");\n                            }\n                            else {\n                                primaryColumn = primaryColumns.find(function (c) { return c.name === newColumn.name; });\n                                primaryColumns.splice(primaryColumns.indexOf(primaryColumn), 1);\n                                column = clonedTable.columns.find(function (column) { return column.name === newColumn.name; });\n                                column.isPrimary = false;\n                                // if we have another primary keys, we must recreate constraint.\n                                if (primaryColumns.length > 0) {\n                                    pkName = this.connection.namingStrategy.primaryKeyName(clonedTable.name, primaryColumns.map(function (column) { return column.name; }));\n                                    columnNames = primaryColumns.map(function (column) { return \"\\\"\" + column.name + \"\\\"\"; }).join(\", \");\n                                    upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ADD CONSTRAINT \\\"\" + pkName + \"\\\" PRIMARY KEY (\" + columnNames + \")\");\n                                    downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" DROP CONSTRAINT \\\"\" + pkName + \"\\\"\");\n                                }\n                            }\n                        }\n                        if (newColumn.isUnique !== oldColumn.isUnique) {\n                            if (newColumn.isUnique === true) {\n                                uniqueConstraint = new TableUnique_1.TableUnique({\n                                    name: this.connection.namingStrategy.uniqueConstraintName(table.name, [newColumn.name]),\n                                    columnNames: [newColumn.name]\n                                });\n                                clonedTable.uniques.push(uniqueConstraint);\n                                upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ADD CONSTRAINT \\\"\" + uniqueConstraint.name + \"\\\" UNIQUE (\\\"\" + newColumn.name + \"\\\")\");\n                                downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" DROP CONSTRAINT \\\"\" + uniqueConstraint.name + \"\\\"\");\n                            }\n                            else {\n                                uniqueConstraint = clonedTable.uniques.find(function (unique) {\n                                    return unique.columnNames.length === 1 && !!unique.columnNames.find(function (columnName) { return columnName === newColumn.name; });\n                                });\n                                clonedTable.uniques.splice(clonedTable.uniques.indexOf(uniqueConstraint), 1);\n                                upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" DROP CONSTRAINT \\\"\" + uniqueConstraint.name + \"\\\"\");\n                                downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ADD CONSTRAINT \\\"\" + uniqueConstraint.name + \"\\\" UNIQUE (\\\"\" + newColumn.name + \"\\\")\");\n                            }\n                        }\n                        if (newColumn.default !== oldColumn.default) {\n                            if (newColumn.default !== null && newColumn.default !== undefined) {\n                                defaultName = this.connection.namingStrategy.defaultConstraintName(table.name, newColumn.name);\n                                upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ADD CONSTRAINT \\\"\" + defaultName + \"\\\" DEFAULT \" + newColumn.default + \" FOR \\\"\" + newColumn.name + \"\\\"\");\n                                downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" DROP CONSTRAINT \\\"\" + defaultName + \"\\\"\");\n                            }\n                            else if (oldColumn.default !== null && oldColumn.default !== undefined) {\n                                defaultName = this.connection.namingStrategy.defaultConstraintName(table.name, oldColumn.name);\n                                upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" DROP CONSTRAINT \\\"\" + defaultName + \"\\\"\");\n                                downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ADD CONSTRAINT \\\"\" + defaultName + \"\\\" DEFAULT \" + oldColumn.default + \" FOR \\\"\" + oldColumn.name + \"\\\"\");\n                            }\n                        }\n                        return [4 /*yield*/, this.executeQueries(upQueries, downQueries)];\n                    case 9:\n                        _b.sent();\n                        this.replaceCachedTable(table, clonedTable);\n                        _b.label = 10;\n                    case 10: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Changes a column in the table.\n     */\n    SqlServerQueryRunner.prototype.changeColumns = function (tableOrName, changedColumns) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, index_1.PromiseUtils.runInSequence(changedColumns, function (changedColumn) { return _this.changeColumn(tableOrName, changedColumn.oldColumn, changedColumn.newColumn); })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops column in the table.\n     */\n    SqlServerQueryRunner.prototype.dropColumn = function (tableOrName, columnOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, column, clonedTable, upQueries, downQueries, pkName, columnNames, tableColumn, pkName_2, columnNames_2, columnIndex, columnCheck, columnUnique, defaultName;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        column = columnOrName instanceof TableColumn_1.TableColumn ? columnOrName : table.findColumnByName(columnOrName);\n                        if (!column)\n                            throw new Error(\"Column \\\"\" + columnOrName + \"\\\" was not found in table \\\"\" + table.name + \"\\\"\");\n                        clonedTable = table.clone();\n                        upQueries = [];\n                        downQueries = [];\n                        // drop primary key constraint\n                        if (column.isPrimary) {\n                            pkName = this.connection.namingStrategy.primaryKeyName(clonedTable.name, clonedTable.primaryColumns.map(function (column) { return column.name; }));\n                            columnNames = clonedTable.primaryColumns.map(function (primaryColumn) { return \"\\\"\" + primaryColumn.name + \"\\\"\"; }).join(\", \");\n                            upQueries.push(\"ALTER TABLE \" + this.escapeTableName(clonedTable) + \" DROP CONSTRAINT \\\"\" + pkName + \"\\\"\");\n                            downQueries.push(\"ALTER TABLE \" + this.escapeTableName(clonedTable) + \" ADD CONSTRAINT \\\"\" + pkName + \"\\\" PRIMARY KEY (\" + columnNames + \")\");\n                            tableColumn = clonedTable.findColumnByName(column.name);\n                            tableColumn.isPrimary = false;\n                            // if primary key have multiple columns, we must recreate it without dropped column\n                            if (clonedTable.primaryColumns.length > 0) {\n                                pkName_2 = this.connection.namingStrategy.primaryKeyName(clonedTable.name, clonedTable.primaryColumns.map(function (column) { return column.name; }));\n                                columnNames_2 = clonedTable.primaryColumns.map(function (primaryColumn) { return \"\\\"\" + primaryColumn.name + \"\\\"\"; }).join(\", \");\n                                upQueries.push(\"ALTER TABLE \" + this.escapeTableName(clonedTable) + \" ADD CONSTRAINT \\\"\" + pkName_2 + \"\\\" PRIMARY KEY (\" + columnNames_2 + \")\");\n                                downQueries.push(\"ALTER TABLE \" + this.escapeTableName(clonedTable) + \" DROP CONSTRAINT \\\"\" + pkName_2 + \"\\\"\");\n                            }\n                        }\n                        columnIndex = clonedTable.indices.find(function (index) { return index.columnNames.length === 1 && index.columnNames[0] === column.name; });\n                        if (columnIndex) {\n                            clonedTable.indices.splice(clonedTable.indices.indexOf(columnIndex), 1);\n                            upQueries.push(this.dropIndexSql(table, columnIndex));\n                            downQueries.push(this.createIndexSql(table, columnIndex));\n                        }\n                        columnCheck = clonedTable.checks.find(function (check) { return !!check.columnNames && check.columnNames.length === 1 && check.columnNames[0] === column.name; });\n                        if (columnCheck) {\n                            clonedTable.checks.splice(clonedTable.checks.indexOf(columnCheck), 1);\n                            upQueries.push(this.dropCheckConstraintSql(table, columnCheck));\n                            downQueries.push(this.createCheckConstraintSql(table, columnCheck));\n                        }\n                        columnUnique = clonedTable.uniques.find(function (unique) { return unique.columnNames.length === 1 && unique.columnNames[0] === column.name; });\n                        if (columnUnique) {\n                            clonedTable.uniques.splice(clonedTable.uniques.indexOf(columnUnique), 1);\n                            upQueries.push(this.dropUniqueConstraintSql(table, columnUnique));\n                            downQueries.push(this.createUniqueConstraintSql(table, columnUnique));\n                        }\n                        // drop default constraint\n                        if (column.default !== null && column.default !== undefined) {\n                            defaultName = this.connection.namingStrategy.defaultConstraintName(table.name, column.name);\n                            upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" DROP CONSTRAINT \\\"\" + defaultName + \"\\\"\");\n                            downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ADD CONSTRAINT \\\"\" + defaultName + \"\\\" DEFAULT \" + column.default + \" FOR \\\"\" + column.name + \"\\\"\");\n                        }\n                        upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" DROP COLUMN \\\"\" + column.name + \"\\\"\");\n                        downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ADD \" + this.buildCreateColumnSql(table, column, false, false));\n                        return [4 /*yield*/, this.executeQueries(upQueries, downQueries)];\n                    case 4:\n                        _b.sent();\n                        clonedTable.removeColumn(column);\n                        this.replaceCachedTable(table, clonedTable);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops the columns in the table.\n     */\n    SqlServerQueryRunner.prototype.dropColumns = function (tableOrName, columns) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, index_1.PromiseUtils.runInSequence(columns, function (column) { return _this.dropColumn(tableOrName, column); })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new primary key.\n     */\n    SqlServerQueryRunner.prototype.createPrimaryKey = function (tableOrName, columnNames) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, clonedTable, up, down;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        clonedTable = table.clone();\n                        up = this.createPrimaryKeySql(table, columnNames);\n                        // mark columns as primary, because dropPrimaryKeySql build constraint name from table primary column names.\n                        clonedTable.columns.forEach(function (column) {\n                            if (columnNames.find(function (columnName) { return columnName === column.name; }))\n                                column.isPrimary = true;\n                        });\n                        down = this.dropPrimaryKeySql(clonedTable);\n                        return [4 /*yield*/, this.executeQueries(up, down)];\n                    case 4:\n                        _b.sent();\n                        this.replaceCachedTable(table, clonedTable);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Updates composite primary keys.\n     */\n    SqlServerQueryRunner.prototype.updatePrimaryKeys = function (tableOrName, columns) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, clonedTable, columnNames, upQueries, downQueries, primaryColumns, pkName_3, columnNamesString_1, pkName, columnNamesString;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        clonedTable = table.clone();\n                        columnNames = columns.map(function (column) { return column.name; });\n                        upQueries = [];\n                        downQueries = [];\n                        primaryColumns = clonedTable.primaryColumns;\n                        if (primaryColumns.length > 0) {\n                            pkName_3 = this.connection.namingStrategy.primaryKeyName(clonedTable.name, primaryColumns.map(function (column) { return column.name; }));\n                            columnNamesString_1 = primaryColumns.map(function (column) { return \"\\\"\" + column.name + \"\\\"\"; }).join(\", \");\n                            upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" DROP CONSTRAINT \\\"\" + pkName_3 + \"\\\"\");\n                            downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ADD CONSTRAINT \\\"\" + pkName_3 + \"\\\" PRIMARY KEY (\" + columnNamesString_1 + \")\");\n                        }\n                        // update columns in table.\n                        clonedTable.columns\n                            .filter(function (column) { return columnNames.indexOf(column.name) !== -1; })\n                            .forEach(function (column) { return column.isPrimary = true; });\n                        pkName = this.connection.namingStrategy.primaryKeyName(clonedTable.name, columnNames);\n                        columnNamesString = columnNames.map(function (columnName) { return \"\\\"\" + columnName + \"\\\"\"; }).join(\", \");\n                        upQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" ADD CONSTRAINT \\\"\" + pkName + \"\\\" PRIMARY KEY (\" + columnNamesString + \")\");\n                        downQueries.push(\"ALTER TABLE \" + this.escapeTableName(table) + \" DROP CONSTRAINT \\\"\" + pkName + \"\\\"\");\n                        return [4 /*yield*/, this.executeQueries(upQueries, downQueries)];\n                    case 4:\n                        _b.sent();\n                        this.replaceCachedTable(table, clonedTable);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops a primary key.\n     */\n    SqlServerQueryRunner.prototype.dropPrimaryKey = function (tableOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, up, down;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        up = this.dropPrimaryKeySql(table);\n                        down = this.createPrimaryKeySql(table, table.primaryColumns.map(function (column) { return column.name; }));\n                        return [4 /*yield*/, this.executeQueries(up, down)];\n                    case 4:\n                        _b.sent();\n                        table.primaryColumns.forEach(function (column) {\n                            column.isPrimary = false;\n                        });\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new unique constraint.\n     */\n    SqlServerQueryRunner.prototype.createUniqueConstraint = function (tableOrName, uniqueConstraint) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, up, down;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        // new unique constraint may be passed without name. In this case we generate unique name manually.\n                        if (!uniqueConstraint.name)\n                            uniqueConstraint.name = this.connection.namingStrategy.uniqueConstraintName(table.name, uniqueConstraint.columnNames);\n                        up = this.createUniqueConstraintSql(table, uniqueConstraint);\n                        down = this.dropUniqueConstraintSql(table, uniqueConstraint);\n                        return [4 /*yield*/, this.executeQueries(up, down)];\n                    case 4:\n                        _b.sent();\n                        table.addUniqueConstraint(uniqueConstraint);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new unique constraints.\n     */\n    SqlServerQueryRunner.prototype.createUniqueConstraints = function (tableOrName, uniqueConstraints) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var promises;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        promises = uniqueConstraints.map(function (uniqueConstraint) { return _this.createUniqueConstraint(tableOrName, uniqueConstraint); });\n                        return [4 /*yield*/, Promise.all(promises)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops unique constraint.\n     */\n    SqlServerQueryRunner.prototype.dropUniqueConstraint = function (tableOrName, uniqueOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, uniqueConstraint, up, down;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        uniqueConstraint = uniqueOrName instanceof TableUnique_1.TableUnique ? uniqueOrName : table.uniques.find(function (u) { return u.name === uniqueOrName; });\n                        if (!uniqueConstraint)\n                            throw new Error(\"Supplied unique constraint was not found in table \" + table.name);\n                        up = this.dropUniqueConstraintSql(table, uniqueConstraint);\n                        down = this.createUniqueConstraintSql(table, uniqueConstraint);\n                        return [4 /*yield*/, this.executeQueries(up, down)];\n                    case 4:\n                        _b.sent();\n                        table.removeUniqueConstraint(uniqueConstraint);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops an unique constraints.\n     */\n    SqlServerQueryRunner.prototype.dropUniqueConstraints = function (tableOrName, uniqueConstraints) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var promises;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        promises = uniqueConstraints.map(function (uniqueConstraint) { return _this.dropUniqueConstraint(tableOrName, uniqueConstraint); });\n                        return [4 /*yield*/, Promise.all(promises)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new check constraint.\n     */\n    SqlServerQueryRunner.prototype.createCheckConstraint = function (tableOrName, checkConstraint) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, up, down;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        // new unique constraint may be passed without name. In this case we generate unique name manually.\n                        if (!checkConstraint.name)\n                            checkConstraint.name = this.connection.namingStrategy.checkConstraintName(table.name, checkConstraint.expression);\n                        up = this.createCheckConstraintSql(table, checkConstraint);\n                        down = this.dropCheckConstraintSql(table, checkConstraint);\n                        return [4 /*yield*/, this.executeQueries(up, down)];\n                    case 4:\n                        _b.sent();\n                        table.addCheckConstraint(checkConstraint);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new check constraints.\n     */\n    SqlServerQueryRunner.prototype.createCheckConstraints = function (tableOrName, checkConstraints) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var promises;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        promises = checkConstraints.map(function (checkConstraint) { return _this.createCheckConstraint(tableOrName, checkConstraint); });\n                        return [4 /*yield*/, Promise.all(promises)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops check constraint.\n     */\n    SqlServerQueryRunner.prototype.dropCheckConstraint = function (tableOrName, checkOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, checkConstraint, up, down;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        checkConstraint = checkOrName instanceof TableCheck_1.TableCheck ? checkOrName : table.checks.find(function (c) { return c.name === checkOrName; });\n                        if (!checkConstraint)\n                            throw new Error(\"Supplied check constraint was not found in table \" + table.name);\n                        up = this.dropCheckConstraintSql(table, checkConstraint);\n                        down = this.createCheckConstraintSql(table, checkConstraint);\n                        return [4 /*yield*/, this.executeQueries(up, down)];\n                    case 4:\n                        _b.sent();\n                        table.removeCheckConstraint(checkConstraint);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops check constraints.\n     */\n    SqlServerQueryRunner.prototype.dropCheckConstraints = function (tableOrName, checkConstraints) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var promises;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        promises = checkConstraints.map(function (checkConstraint) { return _this.dropCheckConstraint(tableOrName, checkConstraint); });\n                        return [4 /*yield*/, Promise.all(promises)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new foreign key.\n     */\n    SqlServerQueryRunner.prototype.createForeignKey = function (tableOrName, foreignKey) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, up, down;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        // new FK may be passed without name. In this case we generate FK name manually.\n                        if (!foreignKey.name)\n                            foreignKey.name = this.connection.namingStrategy.foreignKeyName(table.name, foreignKey.columnNames);\n                        up = this.createForeignKeySql(table, foreignKey);\n                        down = this.dropForeignKeySql(table, foreignKey);\n                        return [4 /*yield*/, this.executeQueries(up, down)];\n                    case 4:\n                        _b.sent();\n                        table.addForeignKey(foreignKey);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new foreign keys.\n     */\n    SqlServerQueryRunner.prototype.createForeignKeys = function (tableOrName, foreignKeys) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var promises;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        promises = foreignKeys.map(function (foreignKey) { return _this.createForeignKey(tableOrName, foreignKey); });\n                        return [4 /*yield*/, Promise.all(promises)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops a foreign key from the table.\n     */\n    SqlServerQueryRunner.prototype.dropForeignKey = function (tableOrName, foreignKeyOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, foreignKey, up, down;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        foreignKey = foreignKeyOrName instanceof TableForeignKey_1.TableForeignKey ? foreignKeyOrName : table.foreignKeys.find(function (fk) { return fk.name === foreignKeyOrName; });\n                        if (!foreignKey)\n                            throw new Error(\"Supplied foreign key was not found in table \" + table.name);\n                        up = this.dropForeignKeySql(table, foreignKey);\n                        down = this.createForeignKeySql(table, foreignKey);\n                        return [4 /*yield*/, this.executeQueries(up, down)];\n                    case 4:\n                        _b.sent();\n                        table.removeForeignKey(foreignKey);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops a foreign keys from the table.\n     */\n    SqlServerQueryRunner.prototype.dropForeignKeys = function (tableOrName, foreignKeys) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var promises;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        promises = foreignKeys.map(function (foreignKey) { return _this.dropForeignKey(tableOrName, foreignKey); });\n                        return [4 /*yield*/, Promise.all(promises)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new index.\n     */\n    SqlServerQueryRunner.prototype.createIndex = function (tableOrName, index) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, up, down;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        // new index may be passed without name. In this case we generate index name manually.\n                        if (!index.name)\n                            index.name = this.connection.namingStrategy.indexName(table.name, index.columnNames, index.where);\n                        up = this.createIndexSql(table, index);\n                        down = this.dropIndexSql(table, index);\n                        return [4 /*yield*/, this.executeQueries(up, down)];\n                    case 4:\n                        _b.sent();\n                        table.addIndex(index);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new indices\n     */\n    SqlServerQueryRunner.prototype.createIndices = function (tableOrName, indices) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var promises;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        promises = indices.map(function (index) { return _this.createIndex(tableOrName, index); });\n                        return [4 /*yield*/, Promise.all(promises)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops an index.\n     */\n    SqlServerQueryRunner.prototype.dropIndex = function (tableOrName, indexOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, index, up, down;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table_1.Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        index = indexOrName instanceof TableIndex_1.TableIndex ? indexOrName : table.indices.find(function (i) { return i.name === indexOrName; });\n                        if (!index)\n                            throw new Error(\"Supplied index was not found in table \" + table.name);\n                        up = this.dropIndexSql(table, index);\n                        down = this.createIndexSql(table, index);\n                        return [4 /*yield*/, this.executeQueries(up, down)];\n                    case 4:\n                        _b.sent();\n                        table.removeIndex(index);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops an indices from the table.\n     */\n    SqlServerQueryRunner.prototype.dropIndices = function (tableOrName, indices) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var promises;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        promises = indices.map(function (index) { return _this.dropIndex(tableOrName, index); });\n                        return [4 /*yield*/, Promise.all(promises)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Clears all table contents.\n     * Note: this operation uses SQL's TRUNCATE query which cannot be reverted in transactions.\n     */\n    SqlServerQueryRunner.prototype.clearTable = function (tablePath) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.query(\"TRUNCATE TABLE \" + this.escapeTableName(tablePath))];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Removes all tables from the currently connected database.\n     */\n    SqlServerQueryRunner.prototype.clearDatabase = function (database) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var isDatabaseExist, allTablesSql, allTablesResults, error_1, rollbackError_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!database) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.hasDatabase(database)];\n                    case 1:\n                        isDatabaseExist = _a.sent();\n                        if (!isDatabaseExist)\n                            return [2 /*return*/, Promise.resolve()];\n                        _a.label = 2;\n                    case 2: return [4 /*yield*/, this.startTransaction()];\n                    case 3:\n                        _a.sent();\n                        _a.label = 4;\n                    case 4:\n                        _a.trys.push([4, 9, , 14]);\n                        allTablesSql = database\n                            ? \"SELECT * FROM \\\"\" + database + \"\\\".\\\"INFORMATION_SCHEMA\\\".\\\"TABLES\\\" WHERE \\\"TABLE_TYPE\\\" = 'BASE TABLE'\"\n                            : \"SELECT * FROM \\\"INFORMATION_SCHEMA\\\".\\\"TABLES\\\" WHERE \\\"TABLE_TYPE\\\" = 'BASE TABLE'\";\n                        return [4 /*yield*/, this.query(allTablesSql)];\n                    case 5:\n                        allTablesResults = _a.sent();\n                        return [4 /*yield*/, Promise.all(allTablesResults.map(function (tablesResult) { return __awaiter(_this, void 0, void 0, function () {\n                                var _this = this;\n                                var dropForeignKeySql, dropFkQueries;\n                                return __generator(this, function (_a) {\n                                    switch (_a.label) {\n                                        case 0:\n                                            dropForeignKeySql = \"SELECT 'ALTER TABLE \\\"\" + tablesResult[\"TABLE_CATALOG\"] + \"\\\".\\\"' + OBJECT_SCHEMA_NAME(\\\"fk\\\".\\\"parent_object_id\\\", DB_ID('\" + tablesResult[\"TABLE_CATALOG\"] + \"')) + '\\\".\\\"' + OBJECT_NAME(\\\"fk\\\".\\\"parent_object_id\\\", DB_ID('\" + tablesResult[\"TABLE_CATALOG\"] + \"')) + '\\\" \" +\n                                                (\"DROP CONSTRAINT \\\"' + \\\"fk\\\".\\\"name\\\" + '\\\"' as \\\"query\\\" FROM \\\"\" + tablesResult[\"TABLE_CATALOG\"] + \"\\\".\\\"sys\\\".\\\"foreign_keys\\\" AS \\\"fk\\\" \") +\n                                                (\"WHERE \\\"fk\\\".\\\"referenced_object_id\\\" = OBJECT_ID('\\\"\" + tablesResult[\"TABLE_CATALOG\"] + \"\\\".\\\"\" + tablesResult[\"TABLE_SCHEMA\"] + \"\\\".\\\"\" + tablesResult[\"TABLE_NAME\"] + \"\\\"')\");\n                                            return [4 /*yield*/, this.query(dropForeignKeySql)];\n                                        case 1:\n                                            dropFkQueries = _a.sent();\n                                            return [2 /*return*/, Promise.all(dropFkQueries.map(function (result) { return result[\"query\"]; }).map(function (dropQuery) { return _this.query(dropQuery); }))];\n                                    }\n                                });\n                            }); }))];\n                    case 6:\n                        _a.sent();\n                        return [4 /*yield*/, Promise.all(allTablesResults.map(function (tablesResult) {\n                                var dropTableSql = \"DROP TABLE \\\"\" + tablesResult[\"TABLE_CATALOG\"] + \"\\\".\\\"\" + tablesResult[\"TABLE_SCHEMA\"] + \"\\\".\\\"\" + tablesResult[\"TABLE_NAME\"] + \"\\\"\";\n                                return _this.query(dropTableSql);\n                            }))];\n                    case 7:\n                        _a.sent();\n                        return [4 /*yield*/, this.commitTransaction()];\n                    case 8:\n                        _a.sent();\n                        return [3 /*break*/, 14];\n                    case 9:\n                        error_1 = _a.sent();\n                        _a.label = 10;\n                    case 10:\n                        _a.trys.push([10, 12, , 13]);\n                        return [4 /*yield*/, this.rollbackTransaction()];\n                    case 11:\n                        _a.sent();\n                        return [3 /*break*/, 13];\n                    case 12:\n                        rollbackError_1 = _a.sent();\n                        return [3 /*break*/, 13];\n                    case 13: throw error_1;\n                    case 14: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Return current database.\n     */\n    SqlServerQueryRunner.prototype.getCurrentDatabase = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var currentDBQuery;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.query(\"SELECT DB_NAME() AS \\\"db_name\\\"\")];\n                    case 1:\n                        currentDBQuery = _a.sent();\n                        return [2 /*return*/, currentDBQuery[0][\"db_name\"]];\n                }\n            });\n        });\n    };\n    /**\n     * Return current schema.\n     */\n    SqlServerQueryRunner.prototype.getCurrentSchema = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var currentSchemaQuery;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.query(\"SELECT SCHEMA_NAME() AS \\\"schema_name\\\"\")];\n                    case 1:\n                        currentSchemaQuery = _a.sent();\n                        return [2 /*return*/, currentSchemaQuery[0][\"schema_name\"]];\n                }\n            });\n        });\n    };\n    /**\n     * Loads all tables (with given names) from the database and creates a Table from them.\n     */\n    SqlServerQueryRunner.prototype.loadTables = function (tableNames) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var schemaNames, currentSchema, currentDatabase, extractTableSchemaAndName, dbNames, schemaNamesString, tablesCondition, tablesSql, columnsSql, constraintsCondition, constraintsSql, foreignKeysSql, identityColumnsSql, dbCollationsSql, indicesSql, _a, dbTables, dbColumns, dbConstraints, dbForeignKeys, dbIdentityColumns, dbCollations, dbIndices;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        // if no tables given then no need to proceed\n                        if (!tableNames || !tableNames.length)\n                            return [2 /*return*/, []];\n                        schemaNames = [];\n                        return [4 /*yield*/, this.getCurrentSchema()];\n                    case 1:\n                        currentSchema = _b.sent();\n                        return [4 /*yield*/, this.getCurrentDatabase()];\n                    case 2:\n                        currentDatabase = _b.sent();\n                        extractTableSchemaAndName = function (tableName) {\n                            var _a = __read(tableName.split(\".\"), 3), database = _a[0], schema = _a[1], name = _a[2];\n                            // if name is empty, it means that tableName have only schema name and table name or only table name\n                            if (!name) {\n                                // if schema is empty, it means tableName have only name of a table. Otherwise it means that we have \"schemaName\".\"tableName\" string.\n                                if (!schema) {\n                                    name = database;\n                                    schema = _this.driver.options.schema || currentSchema;\n                                }\n                                else {\n                                    name = schema;\n                                    schema = database;\n                                }\n                            }\n                            else if (schema === \"\") {\n                                schema = _this.driver.options.schema || currentSchema;\n                            }\n                            return [schema, name];\n                        };\n                        tableNames.filter(function (tablePath) { return tablePath.indexOf(\".\") !== -1; })\n                            .forEach(function (tablePath) {\n                            if (tablePath.split(\".\").length === 3) {\n                                if (tablePath.split(\".\")[1] !== \"\")\n                                    schemaNames.push(tablePath.split(\".\")[1]);\n                            }\n                            else {\n                                schemaNames.push(tablePath.split(\".\")[0]);\n                            }\n                        });\n                        schemaNames.push(this.driver.options.schema || currentSchema);\n                        dbNames = tableNames\n                            .filter(function (tablePath) { return tablePath.split(\".\").length === 3; })\n                            .map(function (tablePath) { return tablePath.split(\".\")[0]; });\n                        if (this.driver.database && !dbNames.find(function (dbName) { return dbName === _this.driver.database; }))\n                            dbNames.push(this.driver.database);\n                        schemaNamesString = schemaNames.map(function (name) { return \"'\" + name + \"'\"; }).join(\", \");\n                        tablesCondition = tableNames.map(function (tableName) {\n                            var _a = __read(extractTableSchemaAndName(tableName), 2), schema = _a[0], name = _a[1];\n                            return \"(\\\"TABLE_SCHEMA\\\" = '\" + schema + \"' AND \\\"TABLE_NAME\\\" = '\" + name + \"')\";\n                        }).join(\" OR \");\n                        tablesSql = dbNames.map(function (dbName) {\n                            return \"SELECT * FROM \\\"\" + dbName + \"\\\".\\\"INFORMATION_SCHEMA\\\".\\\"TABLES\\\" WHERE \" + tablesCondition;\n                        }).join(\" UNION ALL \");\n                        columnsSql = dbNames.map(function (dbName) {\n                            return \"SELECT * FROM \\\"\" + dbName + \"\\\".\\\"INFORMATION_SCHEMA\\\".\\\"COLUMNS\\\" WHERE \" + tablesCondition;\n                        }).join(\" UNION ALL \");\n                        constraintsCondition = tableNames.map(function (tableName) {\n                            var _a = __read(extractTableSchemaAndName(tableName), 2), schema = _a[0], name = _a[1];\n                            return \"(\\\"columnUsages\\\".\\\"TABLE_SCHEMA\\\" = '\" + schema + \"' AND \\\"columnUsages\\\".\\\"TABLE_NAME\\\" = '\" + name + \"' \" +\n                                (\"AND \\\"tableConstraints\\\".\\\"TABLE_SCHEMA\\\" = '\" + schema + \"' AND \\\"tableConstraints\\\".\\\"TABLE_NAME\\\" = '\" + name + \"')\");\n                        }).join(\" OR \");\n                        constraintsSql = dbNames.map(function (dbName) {\n                            return \"SELECT \\\"columnUsages\\\".*, \\\"tableConstraints\\\".\\\"CONSTRAINT_TYPE\\\", \\\"chk\\\".\\\"definition\\\" \" +\n                                (\"FROM \\\"\" + dbName + \"\\\".\\\"INFORMATION_SCHEMA\\\".\\\"CONSTRAINT_COLUMN_USAGE\\\" \\\"columnUsages\\\" \") +\n                                (\"INNER JOIN \\\"\" + dbName + \"\\\".\\\"INFORMATION_SCHEMA\\\".\\\"TABLE_CONSTRAINTS\\\" \\\"tableConstraints\\\" ON \\\"tableConstraints\\\".\\\"CONSTRAINT_NAME\\\" = \\\"columnUsages\\\".\\\"CONSTRAINT_NAME\\\" \") +\n                                (\"LEFT JOIN \\\"\" + dbName + \"\\\".\\\"sys\\\".\\\"check_constraints\\\" \\\"chk\\\" ON \\\"chk\\\".\\\"name\\\" = \\\"columnUsages\\\".\\\"CONSTRAINT_NAME\\\" \") +\n                                (\"WHERE (\" + constraintsCondition + \") AND \\\"tableConstraints\\\".\\\"CONSTRAINT_TYPE\\\" IN ('PRIMARY KEY', 'UNIQUE', 'CHECK')\");\n                        }).join(\" UNION ALL \");\n                        foreignKeysSql = dbNames.map(function (dbName) {\n                            return \"SELECT \\\"fk\\\".\\\"name\\\" AS \\\"FK_NAME\\\", '\" + dbName + \"' AS \\\"TABLE_CATALOG\\\", \\\"s1\\\".\\\"name\\\" AS \\\"TABLE_SCHEMA\\\", \\\"t1\\\".\\\"name\\\" AS \\\"TABLE_NAME\\\", \" +\n                                \"\\\"col1\\\".\\\"name\\\" AS \\\"COLUMN_NAME\\\", \\\"s2\\\".\\\"name\\\" AS \\\"REF_SCHEMA\\\", \\\"t2\\\".\\\"name\\\" AS \\\"REF_TABLE\\\", \\\"col2\\\".\\\"name\\\" AS \\\"REF_COLUMN\\\", \" +\n                                \"\\\"fk\\\".\\\"delete_referential_action_desc\\\" AS \\\"ON_DELETE\\\", \\\"fk\\\".\\\"update_referential_action_desc\\\" AS \\\"ON_UPDATE\\\" \" +\n                                (\"FROM \\\"\" + dbName + \"\\\".\\\"sys\\\".\\\"foreign_keys\\\" \\\"fk\\\" \") +\n                                (\"INNER JOIN \\\"\" + dbName + \"\\\".\\\"sys\\\".\\\"foreign_key_columns\\\" \\\"fkc\\\" ON \\\"fkc\\\".\\\"constraint_object_id\\\" = \\\"fk\\\".\\\"object_id\\\" \") +\n                                (\"INNER JOIN \\\"\" + dbName + \"\\\".\\\"sys\\\".\\\"tables\\\" \\\"t1\\\" ON \\\"t1\\\".\\\"object_id\\\" = \\\"fk\\\".\\\"parent_object_id\\\" \") +\n                                (\"INNER JOIN \\\"\" + dbName + \"\\\".\\\"sys\\\".\\\"schemas\\\" \\\"s1\\\" ON \\\"s1\\\".\\\"schema_id\\\" = \\\"t1\\\".\\\"schema_id\\\" \") +\n                                (\"INNER JOIN \\\"\" + dbName + \"\\\".\\\"sys\\\".\\\"tables\\\" \\\"t2\\\" ON \\\"t2\\\".\\\"object_id\\\" = \\\"fk\\\".\\\"referenced_object_id\\\" \") +\n                                (\"INNER JOIN \\\"\" + dbName + \"\\\".\\\"sys\\\".\\\"schemas\\\" \\\"s2\\\" ON \\\"s2\\\".\\\"schema_id\\\" = \\\"t2\\\".\\\"schema_id\\\" \") +\n                                (\"INNER JOIN \\\"\" + dbName + \"\\\".\\\"sys\\\".\\\"columns\\\" \\\"col1\\\" ON \\\"col1\\\".\\\"column_id\\\" = \\\"fkc\\\".\\\"parent_column_id\\\" AND \\\"col1\\\".\\\"object_id\\\" = \\\"fk\\\".\\\"parent_object_id\\\" \") +\n                                (\"INNER JOIN \\\"\" + dbName + \"\\\".\\\"sys\\\".\\\"columns\\\" \\\"col2\\\" ON \\\"col2\\\".\\\"column_id\\\" = \\\"fkc\\\".\\\"referenced_column_id\\\" AND \\\"col2\\\".\\\"object_id\\\" = \\\"fk\\\".\\\"referenced_object_id\\\"\");\n                        }).join(\" UNION ALL \");\n                        identityColumnsSql = dbNames.map(function (dbName) {\n                            return \"SELECT \\\"TABLE_CATALOG\\\", \\\"TABLE_SCHEMA\\\", \\\"COLUMN_NAME\\\", \\\"TABLE_NAME\\\" \" +\n                                (\"FROM \\\"\" + dbName + \"\\\".\\\"INFORMATION_SCHEMA\\\".\\\"COLUMNS\\\" \") +\n                                (\"WHERE COLUMNPROPERTY(object_id(\\\"TABLE_CATALOG\\\" + '.' + \\\"TABLE_SCHEMA\\\" + '.' + \\\"TABLE_NAME\\\"), \\\"COLUMN_NAME\\\", 'IsIdentity') = 1 AND \\\"TABLE_SCHEMA\\\" IN (\" + schemaNamesString + \")\");\n                        }).join(\" UNION ALL \");\n                        dbCollationsSql = \"SELECT \\\"NAME\\\", \\\"COLLATION_NAME\\\" FROM \\\"SYS\\\".\\\"DATABASES\\\"\";\n                        indicesSql = dbNames.map(function (dbName) {\n                            return \"SELECT '\" + dbName + \"' AS \\\"TABLE_CATALOG\\\", \\\"s\\\".\\\"name\\\" AS \\\"TABLE_SCHEMA\\\", \\\"t\\\".\\\"name\\\" AS \\\"TABLE_NAME\\\", \" +\n                                \"\\\"ind\\\".\\\"name\\\" AS \\\"INDEX_NAME\\\", \\\"col\\\".\\\"name\\\" AS \\\"COLUMN_NAME\\\", \\\"ind\\\".\\\"is_unique\\\" AS \\\"IS_UNIQUE\\\", \\\"ind\\\".\\\"filter_definition\\\" as \\\"CONDITION\\\" \" +\n                                (\"FROM \\\"\" + dbName + \"\\\".\\\"sys\\\".\\\"indexes\\\" \\\"ind\\\" \") +\n                                (\"INNER JOIN \\\"\" + dbName + \"\\\".\\\"sys\\\".\\\"index_columns\\\" \\\"ic\\\" ON \\\"ic\\\".\\\"object_id\\\" = \\\"ind\\\".\\\"object_id\\\" AND \\\"ic\\\".\\\"index_id\\\" = \\\"ind\\\".\\\"index_id\\\" \") +\n                                (\"INNER JOIN \\\"\" + dbName + \"\\\".\\\"sys\\\".\\\"columns\\\" \\\"col\\\" ON \\\"col\\\".\\\"object_id\\\" = \\\"ic\\\".\\\"object_id\\\" AND \\\"col\\\".\\\"column_id\\\" = \\\"ic\\\".\\\"column_id\\\" \") +\n                                (\"INNER JOIN \\\"\" + dbName + \"\\\".\\\"sys\\\".\\\"tables\\\" \\\"t\\\" ON \\\"t\\\".\\\"object_id\\\" = \\\"ind\\\".\\\"object_id\\\" \") +\n                                (\"INNER JOIN \\\"\" + dbName + \"\\\".\\\"sys\\\".\\\"schemas\\\" \\\"s\\\" ON \\\"s\\\".\\\"schema_id\\\" = \\\"t\\\".\\\"schema_id\\\" \") +\n                                \"WHERE \\\"ind\\\".\\\"is_primary_key\\\" = 0 AND \\\"ind\\\".\\\"is_unique_constraint\\\" = 0 AND \\\"t\\\".\\\"is_ms_shipped\\\" = 0\";\n                        }).join(\" UNION ALL \");\n                        return [4 /*yield*/, Promise.all([\n                                this.query(tablesSql),\n                                this.query(columnsSql),\n                                this.query(constraintsSql),\n                                this.query(foreignKeysSql),\n                                this.query(identityColumnsSql),\n                                this.query(dbCollationsSql),\n                                this.query(indicesSql),\n                            ])];\n                    case 3:\n                        _a = __read.apply(void 0, [_b.sent(), 7]), dbTables = _a[0], dbColumns = _a[1], dbConstraints = _a[2], dbForeignKeys = _a[3], dbIdentityColumns = _a[4], dbCollations = _a[5], dbIndices = _a[6];\n                        // if tables were not found in the db, no need to proceed\n                        if (!dbTables.length)\n                            return [2 /*return*/, []];\n                        return [4 /*yield*/, Promise.all(dbTables.map(function (dbTable) { return __awaiter(_this, void 0, void 0, function () {\n                                var _this = this;\n                                var table, db, schema, tableFullName, defaultCollation, tableUniqueConstraints, tableCheckConstraints, tableForeignKeyConstraints, tableIndexConstraints;\n                                return __generator(this, function (_a) {\n                                    table = new Table_1.Table();\n                                    db = dbTable[\"TABLE_CATALOG\"] === currentDatabase ? undefined : dbTable[\"TABLE_CATALOG\"];\n                                    schema = dbTable[\"TABLE_SCHEMA\"] === currentSchema && !this.driver.options.schema ? undefined : dbTable[\"TABLE_SCHEMA\"];\n                                    table.name = this.driver.buildTableName(dbTable[\"TABLE_NAME\"], schema, db);\n                                    tableFullName = this.driver.buildTableName(dbTable[\"TABLE_NAME\"], dbTable[\"TABLE_SCHEMA\"], dbTable[\"TABLE_CATALOG\"]);\n                                    defaultCollation = dbCollations.find(function (dbCollation) { return dbCollation[\"NAME\"] === dbTable[\"TABLE_CATALOG\"]; });\n                                    // create columns from the loaded columns\n                                    table.columns = dbColumns\n                                        .filter(function (dbColumn) { return _this.driver.buildTableName(dbColumn[\"TABLE_NAME\"], dbColumn[\"TABLE_SCHEMA\"], dbColumn[\"TABLE_CATALOG\"]) === tableFullName; })\n                                        .map(function (dbColumn) {\n                                        var columnConstraints = dbConstraints.filter(function (dbConstraint) {\n                                            return _this.driver.buildTableName(dbConstraint[\"TABLE_NAME\"], dbConstraint[\"CONSTRAINT_SCHEMA\"], dbConstraint[\"CONSTRAINT_CATALOG\"]) === tableFullName\n                                                && dbConstraint[\"COLUMN_NAME\"] === dbColumn[\"COLUMN_NAME\"];\n                                        });\n                                        var uniqueConstraint = columnConstraints.find(function (constraint) { return constraint[\"CONSTRAINT_TYPE\"] === \"UNIQUE\"; });\n                                        var isConstraintComposite = uniqueConstraint\n                                            ? !!dbConstraints.find(function (dbConstraint) { return dbConstraint[\"CONSTRAINT_TYPE\"] === \"UNIQUE\"\n                                                && dbConstraint[\"CONSTRAINT_NAME\"] === uniqueConstraint[\"CONSTRAINT_NAME\"]\n                                                && dbConstraint[\"COLUMN_NAME\"] !== dbColumn[\"COLUMN_NAME\"]; })\n                                            : false;\n                                        var isPrimary = !!columnConstraints.find(function (constraint) { return constraint[\"CONSTRAINT_TYPE\"] === \"PRIMARY KEY\"; });\n                                        var isGenerated = !!dbIdentityColumns.find(function (column) {\n                                            return _this.driver.buildTableName(column[\"TABLE_NAME\"], column[\"TABLE_SCHEMA\"], column[\"TABLE_CATALOG\"]) === tableFullName\n                                                && column[\"COLUMN_NAME\"] === dbColumn[\"COLUMN_NAME\"];\n                                        });\n                                        var tableColumn = new TableColumn_1.TableColumn();\n                                        tableColumn.name = dbColumn[\"COLUMN_NAME\"];\n                                        tableColumn.type = dbColumn[\"DATA_TYPE\"].toLowerCase();\n                                        // check only columns that have length property\n                                        if (_this.driver.withLengthColumnTypes.indexOf(tableColumn.type) !== -1 && dbColumn[\"CHARACTER_MAXIMUM_LENGTH\"]) {\n                                            var length = dbColumn[\"CHARACTER_MAXIMUM_LENGTH\"].toString();\n                                            if (length === \"-1\") {\n                                                tableColumn.length = \"MAX\";\n                                            }\n                                            else {\n                                                tableColumn.length = !_this.isDefaultColumnLength(table, tableColumn, length) ? length : \"\";\n                                            }\n                                        }\n                                        if (tableColumn.type === \"decimal\" || tableColumn.type === \"numeric\") {\n                                            if (dbColumn[\"NUMERIC_PRECISION\"] !== null && !_this.isDefaultColumnPrecision(table, tableColumn, dbColumn[\"NUMERIC_PRECISION\"]))\n                                                tableColumn.precision = dbColumn[\"NUMERIC_PRECISION\"];\n                                            if (dbColumn[\"NUMERIC_SCALE\"] !== null && !_this.isDefaultColumnScale(table, tableColumn, dbColumn[\"NUMERIC_SCALE\"]))\n                                                tableColumn.scale = dbColumn[\"NUMERIC_SCALE\"];\n                                        }\n                                        tableColumn.default = dbColumn[\"COLUMN_DEFAULT\"] !== null && dbColumn[\"COLUMN_DEFAULT\"] !== undefined\n                                            ? _this.removeParenthesisFromDefault(dbColumn[\"COLUMN_DEFAULT\"])\n                                            : undefined;\n                                        tableColumn.isNullable = dbColumn[\"IS_NULLABLE\"] === \"YES\";\n                                        tableColumn.isPrimary = isPrimary;\n                                        tableColumn.isUnique = !!uniqueConstraint && !isConstraintComposite;\n                                        tableColumn.isGenerated = isGenerated;\n                                        if (isGenerated)\n                                            tableColumn.generationStrategy = \"increment\";\n                                        if (tableColumn.default === \"newsequentialid()\") {\n                                            tableColumn.isGenerated = true;\n                                            tableColumn.generationStrategy = \"uuid\";\n                                            tableColumn.default = undefined;\n                                        }\n                                        // todo: unable to get default charset\n                                        // tableColumn.charset = dbColumn[\"CHARACTER_SET_NAME\"];\n                                        tableColumn.collation = dbColumn[\"COLLATION_NAME\"] === defaultCollation[\"COLLATION_NAME\"] ? undefined : dbColumn[\"COLLATION_NAME\"];\n                                        if (tableColumn.type === \"datetime2\" || tableColumn.type === \"time\" || tableColumn.type === \"datetimeoffset\") {\n                                            tableColumn.precision = !_this.isDefaultColumnPrecision(table, tableColumn, dbColumn[\"DATETIME_PRECISION\"]) ? dbColumn[\"DATETIME_PRECISION\"] : undefined;\n                                        }\n                                        return tableColumn;\n                                    });\n                                    tableUniqueConstraints = OrmUtils_1.OrmUtils.uniq(dbConstraints.filter(function (dbConstraint) {\n                                        return _this.driver.buildTableName(dbConstraint[\"TABLE_NAME\"], dbConstraint[\"CONSTRAINT_SCHEMA\"], dbConstraint[\"CONSTRAINT_CATALOG\"]) === tableFullName\n                                            && dbConstraint[\"CONSTRAINT_TYPE\"] === \"UNIQUE\";\n                                    }), function (dbConstraint) { return dbConstraint[\"CONSTRAINT_NAME\"]; });\n                                    table.uniques = tableUniqueConstraints.map(function (constraint) {\n                                        var uniques = dbConstraints.filter(function (dbC) { return dbC[\"CONSTRAINT_NAME\"] === constraint[\"CONSTRAINT_NAME\"]; });\n                                        return new TableUnique_1.TableUnique({\n                                            name: constraint[\"CONSTRAINT_NAME\"],\n                                            columnNames: uniques.map(function (u) { return u[\"COLUMN_NAME\"]; })\n                                        });\n                                    });\n                                    tableCheckConstraints = OrmUtils_1.OrmUtils.uniq(dbConstraints.filter(function (dbConstraint) {\n                                        return _this.driver.buildTableName(dbConstraint[\"TABLE_NAME\"], dbConstraint[\"CONSTRAINT_SCHEMA\"], dbConstraint[\"CONSTRAINT_CATALOG\"]) === tableFullName\n                                            && dbConstraint[\"CONSTRAINT_TYPE\"] === \"CHECK\";\n                                    }), function (dbConstraint) { return dbConstraint[\"CONSTRAINT_NAME\"]; });\n                                    table.checks = tableCheckConstraints.map(function (constraint) {\n                                        var checks = dbConstraints.filter(function (dbC) { return dbC[\"CONSTRAINT_NAME\"] === constraint[\"CONSTRAINT_NAME\"]; });\n                                        return new TableCheck_1.TableCheck({\n                                            name: constraint[\"CONSTRAINT_NAME\"],\n                                            columnNames: checks.map(function (c) { return c[\"COLUMN_NAME\"]; }),\n                                            expression: constraint[\"definition\"]\n                                        });\n                                    });\n                                    tableForeignKeyConstraints = OrmUtils_1.OrmUtils.uniq(dbForeignKeys.filter(function (dbForeignKey) {\n                                        return _this.driver.buildTableName(dbForeignKey[\"TABLE_NAME\"], dbForeignKey[\"TABLE_SCHEMA\"], dbForeignKey[\"TABLE_CATALOG\"]) === tableFullName;\n                                    }), function (dbForeignKey) { return dbForeignKey[\"FK_NAME\"]; });\n                                    table.foreignKeys = tableForeignKeyConstraints.map(function (dbForeignKey) {\n                                        var foreignKeys = dbForeignKeys.filter(function (dbFk) { return dbFk[\"FK_NAME\"] === dbForeignKey[\"FK_NAME\"]; });\n                                        // if referenced table located in currently used db and schema, we don't need to concat db and schema names to table name.\n                                        var db = dbForeignKey[\"TABLE_CATALOG\"] === currentDatabase ? undefined : dbForeignKey[\"TABLE_CATALOG\"];\n                                        var schema = dbForeignKey[\"REF_SCHEMA\"] === currentSchema ? undefined : dbForeignKey[\"REF_SCHEMA\"];\n                                        var referencedTableName = _this.driver.buildTableName(dbForeignKey[\"REF_TABLE\"], schema, db);\n                                        return new TableForeignKey_1.TableForeignKey({\n                                            name: dbForeignKey[\"FK_NAME\"],\n                                            columnNames: foreignKeys.map(function (dbFk) { return dbFk[\"COLUMN_NAME\"]; }),\n                                            referencedTableName: referencedTableName,\n                                            referencedColumnNames: foreignKeys.map(function (dbFk) { return dbFk[\"REF_COLUMN\"]; }),\n                                            onDelete: dbForeignKey[\"ON_DELETE\"].replace(\"_\", \" \"),\n                                            onUpdate: dbForeignKey[\"ON_UPDATE\"].replace(\"_\", \" \") // SqlServer returns NO_ACTION, instead of NO ACTION\n                                        });\n                                    });\n                                    tableIndexConstraints = OrmUtils_1.OrmUtils.uniq(dbIndices.filter(function (dbIndex) {\n                                        return _this.driver.buildTableName(dbIndex[\"TABLE_NAME\"], dbIndex[\"TABLE_SCHEMA\"], dbIndex[\"TABLE_CATALOG\"]) === tableFullName;\n                                    }), function (dbIndex) { return dbIndex[\"INDEX_NAME\"]; });\n                                    table.indices = tableIndexConstraints.map(function (constraint) {\n                                        var indices = dbIndices.filter(function (index) { return index[\"INDEX_NAME\"] === constraint[\"INDEX_NAME\"]; });\n                                        return new TableIndex_1.TableIndex({\n                                            table: table,\n                                            name: constraint[\"INDEX_NAME\"],\n                                            columnNames: indices.map(function (i) { return i[\"COLUMN_NAME\"]; }),\n                                            isUnique: constraint[\"IS_UNIQUE\"],\n                                            where: constraint[\"CONDITION\"]\n                                        });\n                                    });\n                                    return [2 /*return*/, table];\n                                });\n                            }); }))];\n                    case 4: \n                    // create table schemas for loaded tables\n                    return [2 /*return*/, _b.sent()];\n                }\n            });\n        });\n    };\n    /**\n     * Builds and returns SQL for create table.\n     */\n    SqlServerQueryRunner.prototype.createTableSql = function (table, createForeignKeys) {\n        var _this = this;\n        var columnDefinitions = table.columns.map(function (column) { return _this.buildCreateColumnSql(table, column, false, true); }).join(\", \");\n        var sql = \"CREATE TABLE \" + this.escapeTableName(table) + \" (\" + columnDefinitions;\n        table.columns\n            .filter(function (column) { return column.isUnique; })\n            .forEach(function (column) {\n            var isUniqueExist = table.uniques.some(function (unique) { return unique.columnNames.length === 1 && unique.columnNames[0] === column.name; });\n            if (!isUniqueExist)\n                table.uniques.push(new TableUnique_1.TableUnique({\n                    name: _this.connection.namingStrategy.uniqueConstraintName(table.name, [column.name]),\n                    columnNames: [column.name]\n                }));\n        });\n        if (table.uniques.length > 0) {\n            var uniquesSql = table.uniques.map(function (unique) {\n                var uniqueName = unique.name ? unique.name : _this.connection.namingStrategy.uniqueConstraintName(table.name, unique.columnNames);\n                var columnNames = unique.columnNames.map(function (columnName) { return \"\\\"\" + columnName + \"\\\"\"; }).join(\", \");\n                return \"CONSTRAINT \\\"\" + uniqueName + \"\\\" UNIQUE (\" + columnNames + \")\";\n            }).join(\", \");\n            sql += \", \" + uniquesSql;\n        }\n        if (table.checks.length > 0) {\n            var checksSql = table.checks.map(function (check) {\n                var checkName = check.name ? check.name : _this.connection.namingStrategy.checkConstraintName(table.name, check.expression);\n                return \"CONSTRAINT \\\"\" + checkName + \"\\\" CHECK (\" + check.expression + \")\";\n            }).join(\", \");\n            sql += \", \" + checksSql;\n        }\n        if (table.foreignKeys.length > 0 && createForeignKeys) {\n            var foreignKeysSql = table.foreignKeys.map(function (fk) {\n                var columnNames = fk.columnNames.map(function (columnName) { return \"\\\"\" + columnName + \"\\\"\"; }).join(\", \");\n                if (!fk.name)\n                    fk.name = _this.connection.namingStrategy.foreignKeyName(table.name, fk.columnNames);\n                var referencedColumnNames = fk.referencedColumnNames.map(function (columnName) { return \"\\\"\" + columnName + \"\\\"\"; }).join(\", \");\n                var constraint = \"CONSTRAINT \\\"\" + fk.name + \"\\\" FOREIGN KEY (\" + columnNames + \") REFERENCES \" + _this.escapeTableName(fk.referencedTableName) + \" (\" + referencedColumnNames + \")\";\n                if (fk.onDelete)\n                    constraint += \" ON DELETE \" + fk.onDelete;\n                if (fk.onUpdate)\n                    constraint += \" ON UPDATE \" + fk.onUpdate;\n                return constraint;\n            }).join(\", \");\n            sql += \", \" + foreignKeysSql;\n        }\n        var primaryColumns = table.columns.filter(function (column) { return column.isPrimary; });\n        if (primaryColumns.length > 0) {\n            var primaryKeyName = this.connection.namingStrategy.primaryKeyName(table.name, primaryColumns.map(function (column) { return column.name; }));\n            var columnNames = primaryColumns.map(function (column) { return \"\\\"\" + column.name + \"\\\"\"; }).join(\", \");\n            sql += \", CONSTRAINT \\\"\" + primaryKeyName + \"\\\" PRIMARY KEY (\" + columnNames + \")\";\n        }\n        sql += \")\";\n        return sql;\n    };\n    /**\n     * Builds drop table sql.\n     */\n    SqlServerQueryRunner.prototype.dropTableSql = function (tableOrName, ifExist) {\n        return ifExist ? \"DROP TABLE IF EXISTS \" + this.escapeTableName(tableOrName) : \"DROP TABLE \" + this.escapeTableName(tableOrName);\n    };\n    /**\n     * Builds create index sql.\n     */\n    SqlServerQueryRunner.prototype.createIndexSql = function (table, index) {\n        var columns = index.columnNames.map(function (columnName) { return \"\\\"\" + columnName + \"\\\"\"; }).join(\", \");\n        return \"CREATE \" + (index.isUnique ? \"UNIQUE \" : \"\") + \"INDEX \\\"\" + index.name + \"\\\" ON \" + this.escapeTableName(table) + \"(\" + columns + \") \" + (index.where ? \"WHERE \" + index.where : \"\");\n    };\n    /**\n     * Builds drop index sql.\n     */\n    SqlServerQueryRunner.prototype.dropIndexSql = function (table, indexOrName) {\n        var indexName = indexOrName instanceof TableIndex_1.TableIndex ? indexOrName.name : indexOrName;\n        return \"DROP INDEX \\\"\" + indexName + \"\\\" ON \" + this.escapeTableName(table);\n    };\n    /**\n     * Builds create primary key sql.\n     */\n    SqlServerQueryRunner.prototype.createPrimaryKeySql = function (table, columnNames) {\n        var primaryKeyName = this.connection.namingStrategy.primaryKeyName(table.name, columnNames);\n        var columnNamesString = columnNames.map(function (columnName) { return \"\\\"\" + columnName + \"\\\"\"; }).join(\", \");\n        return \"ALTER TABLE \" + this.escapeTableName(table) + \" ADD CONSTRAINT \\\"\" + primaryKeyName + \"\\\" PRIMARY KEY (\" + columnNamesString + \")\";\n    };\n    /**\n     * Builds drop primary key sql.\n     */\n    SqlServerQueryRunner.prototype.dropPrimaryKeySql = function (table) {\n        var columnNames = table.primaryColumns.map(function (column) { return column.name; });\n        var primaryKeyName = this.connection.namingStrategy.primaryKeyName(table.name, columnNames);\n        return \"ALTER TABLE \" + this.escapeTableName(table) + \" DROP CONSTRAINT \\\"\" + primaryKeyName + \"\\\"\";\n    };\n    /**\n     * Builds create unique constraint sql.\n     */\n    SqlServerQueryRunner.prototype.createUniqueConstraintSql = function (table, uniqueConstraint) {\n        var columnNames = uniqueConstraint.columnNames.map(function (column) { return \"\\\"\" + column + \"\\\"\"; }).join(\", \");\n        return \"ALTER TABLE \" + this.escapeTableName(table) + \" ADD CONSTRAINT \\\"\" + uniqueConstraint.name + \"\\\" UNIQUE (\" + columnNames + \")\";\n    };\n    /**\n     * Builds drop unique constraint sql.\n     */\n    SqlServerQueryRunner.prototype.dropUniqueConstraintSql = function (table, uniqueOrName) {\n        var uniqueName = uniqueOrName instanceof TableUnique_1.TableUnique ? uniqueOrName.name : uniqueOrName;\n        return \"ALTER TABLE \" + this.escapeTableName(table) + \" DROP CONSTRAINT \\\"\" + uniqueName + \"\\\"\";\n    };\n    /**\n     * Builds create check constraint sql.\n     */\n    SqlServerQueryRunner.prototype.createCheckConstraintSql = function (table, checkConstraint) {\n        return \"ALTER TABLE \" + this.escapeTableName(table) + \" ADD CONSTRAINT \\\"\" + checkConstraint.name + \"\\\" CHECK (\" + checkConstraint.expression + \")\";\n    };\n    /**\n     * Builds drop check constraint sql.\n     */\n    SqlServerQueryRunner.prototype.dropCheckConstraintSql = function (table, checkOrName) {\n        var checkName = checkOrName instanceof TableCheck_1.TableCheck ? checkOrName.name : checkOrName;\n        return \"ALTER TABLE \" + this.escapeTableName(table) + \" DROP CONSTRAINT \\\"\" + checkName + \"\\\"\";\n    };\n    /**\n     * Builds create foreign key sql.\n     */\n    SqlServerQueryRunner.prototype.createForeignKeySql = function (table, foreignKey) {\n        var columnNames = foreignKey.columnNames.map(function (column) { return \"\\\"\" + column + \"\\\"\"; }).join(\", \");\n        var referencedColumnNames = foreignKey.referencedColumnNames.map(function (column) { return \"\\\"\" + column + \"\\\"\"; }).join(\",\");\n        var sql = \"ALTER TABLE \" + this.escapeTableName(table) + \" ADD CONSTRAINT \\\"\" + foreignKey.name + \"\\\" FOREIGN KEY (\" + columnNames + \") \" +\n            (\"REFERENCES \" + this.escapeTableName(foreignKey.referencedTableName) + \"(\" + referencedColumnNames + \")\");\n        if (foreignKey.onDelete)\n            sql += \" ON DELETE \" + foreignKey.onDelete;\n        if (foreignKey.onUpdate)\n            sql += \" ON UPDATE \" + foreignKey.onUpdate;\n        return sql;\n    };\n    /**\n     * Builds drop foreign key sql.\n     */\n    SqlServerQueryRunner.prototype.dropForeignKeySql = function (table, foreignKeyOrName) {\n        var foreignKeyName = foreignKeyOrName instanceof TableForeignKey_1.TableForeignKey ? foreignKeyOrName.name : foreignKeyOrName;\n        return \"ALTER TABLE \" + this.escapeTableName(table) + \" DROP CONSTRAINT \\\"\" + foreignKeyName + \"\\\"\";\n    };\n    /**\n     * Escapes given table name.\n     */\n    SqlServerQueryRunner.prototype.escapeTableName = function (tableOrName, disableEscape) {\n        var name = tableOrName instanceof Table_1.Table ? tableOrName.name : tableOrName;\n        if (this.driver.options.schema) {\n            if (name.indexOf(\".\") === -1) {\n                name = this.driver.options.schema + \".\" + name;\n            }\n            else if (name.split(\".\").length === 3) {\n                var splittedName = name.split(\".\");\n                var dbName = splittedName[0];\n                var tableName = splittedName[2];\n                name = dbName + \".\" + this.driver.options.schema + \".\" + tableName;\n            }\n        }\n        return name.split(\".\").map(function (i) {\n            // this condition need because when custom database name was specified and schema name was not, we got `dbName..tableName` string, and doesn't need to escape middle empty string\n            if (i === \"\")\n                return i;\n            return disableEscape ? i : \"\\\"\" + i + \"\\\"\";\n        }).join(\".\");\n    };\n    SqlServerQueryRunner.prototype.parseTableName = function (target) {\n        var tableName = target instanceof Table_1.Table ? target.name : target;\n        if (tableName.split(\".\").length === 3) {\n            return {\n                database: tableName.split(\".\")[0],\n                schema: tableName.split(\".\")[1] === \"\" ? \"SCHEMA_NAME()\" : tableName.split(\".\")[1],\n                tableName: tableName.split(\".\")[2]\n            };\n        }\n        else if (tableName.split(\".\").length === 2) {\n            return {\n                database: this.driver.database,\n                schema: tableName.split(\".\")[0],\n                tableName: tableName.split(\".\")[1]\n            };\n        }\n        else {\n            return {\n                database: this.driver.database,\n                schema: this.driver.options.schema ? this.driver.options.schema : \"SCHEMA_NAME()\",\n                tableName: tableName\n            };\n        }\n    };\n    /**\n     * Concat database name and schema name to the foreign key name.\n     * Needs because FK name is relevant to the schema and database.\n     */\n    SqlServerQueryRunner.prototype.buildForeignKeyName = function (fkName, schemaName, dbName) {\n        var joinedFkName = fkName;\n        if (schemaName)\n            joinedFkName = schemaName + \".\" + joinedFkName;\n        if (dbName)\n            joinedFkName = dbName + \".\" + joinedFkName;\n        return joinedFkName;\n    };\n    /**\n     * Removes parenthesis around default value.\n     * Sql server returns default value with parenthesis around, e.g.\n     *  ('My text') - for string\n     *  ((1)) - for number\n     *  (newsequentialId()) - for function\n     */\n    SqlServerQueryRunner.prototype.removeParenthesisFromDefault = function (defaultValue) {\n        if (defaultValue.substr(0, 1) !== \"(\")\n            return defaultValue;\n        var normalizedDefault = defaultValue.substr(1, defaultValue.lastIndexOf(\")\") - 1);\n        return this.removeParenthesisFromDefault(normalizedDefault);\n    };\n    /**\n     * Builds a query for create column.\n     */\n    SqlServerQueryRunner.prototype.buildCreateColumnSql = function (table, column, skipIdentity, createDefault) {\n        var c = \"\\\"\" + column.name + \"\\\" \" + this.connection.driver.createFullType(column);\n        if (column.collation)\n            c += \" COLLATE \" + column.collation;\n        if (column.isNullable !== true)\n            c += \" NOT NULL\";\n        if (column.isGenerated === true && column.generationStrategy === \"increment\" && !skipIdentity) // don't use skipPrimary here since updates can update already exist primary without auto inc.\n            c += \" IDENTITY(1,1)\";\n        if (column.default !== undefined && column.default !== null && createDefault) {\n            // we create named constraint to be able to delete this constraint when column been dropped\n            var defaultName = this.connection.namingStrategy.defaultConstraintName(table.name, column.name);\n            c += \" CONSTRAINT \\\"\" + defaultName + \"\\\" DEFAULT \" + column.default;\n        }\n        if (column.isGenerated && column.generationStrategy === \"uuid\" && !column.default) {\n            // we create named constraint to be able to delete this constraint when column been dropped\n            var defaultName = this.connection.namingStrategy.defaultConstraintName(table.name, column.name);\n            c += \" CONSTRAINT \\\"\" + defaultName + \"\\\" DEFAULT NEWSEQUENTIALID()\";\n        }\n        return c;\n    };\n    /**\n     * Converts MssqlParameter into real mssql parameter type.\n     */\n    SqlServerQueryRunner.prototype.mssqlParameterToNativeParameter = function (parameter) {\n        switch (this.driver.normalizeType({ type: parameter.type })) {\n            case \"bit\":\n                return this.driver.mssql.Bit;\n            case \"bigint\":\n                return this.driver.mssql.BigInt;\n            case \"decimal\":\n                return (_a = this.driver.mssql).Decimal.apply(_a, __spread(parameter.params));\n            case \"float\":\n                return this.driver.mssql.Float;\n            case \"int\":\n                return this.driver.mssql.Int;\n            case \"money\":\n                return this.driver.mssql.Money;\n            case \"numeric\":\n                return (_b = this.driver.mssql).Numeric.apply(_b, __spread(parameter.params));\n            case \"smallint\":\n                return this.driver.mssql.SmallInt;\n            case \"smallmoney\":\n                return this.driver.mssql.SmallMoney;\n            case \"real\":\n                return this.driver.mssql.Real;\n            case \"tinyint\":\n                return this.driver.mssql.TinyInt;\n            case \"char\":\n                return (_c = this.driver.mssql).Char.apply(_c, __spread(parameter.params));\n            case \"nchar\":\n                return (_d = this.driver.mssql).NChar.apply(_d, __spread(parameter.params));\n            case \"text\":\n                return this.driver.mssql.Text;\n            case \"ntext\":\n                return this.driver.mssql.Ntext;\n            case \"varchar\":\n                return (_e = this.driver.mssql).VarChar.apply(_e, __spread(parameter.params));\n            case \"nvarchar\":\n                return (_f = this.driver.mssql).NVarChar.apply(_f, __spread(parameter.params));\n            case \"xml\":\n                return this.driver.mssql.Xml;\n            case \"time\":\n                return (_g = this.driver.mssql).Time.apply(_g, __spread(parameter.params));\n            case \"date\":\n                return this.driver.mssql.Date;\n            case \"datetime\":\n                return this.driver.mssql.DateTime;\n            case \"datetime2\":\n                return (_h = this.driver.mssql).DateTime2.apply(_h, __spread(parameter.params));\n            case \"datetimeoffset\":\n                return (_j = this.driver.mssql).DateTimeOffset.apply(_j, __spread(parameter.params));\n            case \"smalldatetime\":\n                return this.driver.mssql.SmallDateTime;\n            case \"uniqueidentifier\":\n                return this.driver.mssql.UniqueIdentifier;\n            case \"variant\":\n                return this.driver.mssql.Variant;\n            case \"binary\":\n                return this.driver.mssql.Binary;\n            case \"varbinary\":\n                return (_k = this.driver.mssql).VarBinary.apply(_k, __spread(parameter.params));\n            case \"image\":\n                return this.driver.mssql.Image;\n            case \"udt\":\n                return this.driver.mssql.UDT;\n            case \"rowversion\":\n                return this.driver.mssql.RowVersion;\n        }\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n    };\n    /**\n     * Converts string literal of isolation level to enum.\n     * The underlying mssql driver requires an enum for the isolation level.\n     */\n    SqlServerQueryRunner.prototype.convertIsolationLevel = function (isolation) {\n        var ISOLATION_LEVEL = this.driver.mssql.ISOLATION_LEVEL;\n        switch (isolation) {\n            case \"READ UNCOMMITTED\":\n                return ISOLATION_LEVEL.READ_UNCOMMITTED;\n            case \"REPEATABLE READ\":\n                return ISOLATION_LEVEL.REPEATABLE_READ;\n            case \"SERIALIZABLE\":\n                return ISOLATION_LEVEL.SERIALIZABLE;\n            case \"READ COMMITTED\":\n            default:\n                return ISOLATION_LEVEL.READ_COMMITTED;\n        }\n    };\n    return SqlServerQueryRunner;\n}(BaseQueryRunner_1.BaseQueryRunner));\nexports.SqlServerQueryRunner = SqlServerQueryRunner;\n\n//# sourceMappingURL=SqlServerQueryRunner.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/driver/sqlserver/SqlServerQueryRunner.js?");

/***/ }),

/***/ "./node_modules/typeorm/entity-manager/EntityManager.js":
/*!**************************************************************!*\
  !*** ./node_modules/typeorm/entity-manager/EntityManager.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar EntityNotFoundError_1 = __webpack_require__(/*! ../error/EntityNotFoundError */ \"./node_modules/typeorm/error/EntityNotFoundError.js\");\nvar QueryRunnerProviderAlreadyReleasedError_1 = __webpack_require__(/*! ../error/QueryRunnerProviderAlreadyReleasedError */ \"./node_modules/typeorm/error/QueryRunnerProviderAlreadyReleasedError.js\");\nvar NoNeedToReleaseEntityManagerError_1 = __webpack_require__(/*! ../error/NoNeedToReleaseEntityManagerError */ \"./node_modules/typeorm/error/NoNeedToReleaseEntityManagerError.js\");\nvar TreeRepository_1 = __webpack_require__(/*! ../repository/TreeRepository */ \"./node_modules/typeorm/repository/TreeRepository.js\");\nvar Repository_1 = __webpack_require__(/*! ../repository/Repository */ \"./node_modules/typeorm/repository/Repository.js\");\nvar FindOptionsUtils_1 = __webpack_require__(/*! ../find-options/FindOptionsUtils */ \"./node_modules/typeorm/find-options/FindOptionsUtils.js\");\nvar PlainObjectToNewEntityTransformer_1 = __webpack_require__(/*! ../query-builder/transformer/PlainObjectToNewEntityTransformer */ \"./node_modules/typeorm/query-builder/transformer/PlainObjectToNewEntityTransformer.js\");\nvar PlainObjectToDatabaseEntityTransformer_1 = __webpack_require__(/*! ../query-builder/transformer/PlainObjectToDatabaseEntityTransformer */ \"./node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js\");\nvar CustomRepositoryNotFoundError_1 = __webpack_require__(/*! ../error/CustomRepositoryNotFoundError */ \"./node_modules/typeorm/error/CustomRepositoryNotFoundError.js\");\nvar index_1 = __webpack_require__(/*! ../index */ \"./node_modules/typeorm/index.js\");\nvar AbstractRepository_1 = __webpack_require__(/*! ../repository/AbstractRepository */ \"./node_modules/typeorm/repository/AbstractRepository.js\");\nvar CustomRepositoryCannotInheritRepositoryError_1 = __webpack_require__(/*! ../error/CustomRepositoryCannotInheritRepositoryError */ \"./node_modules/typeorm/error/CustomRepositoryCannotInheritRepositoryError.js\");\nvar MongoDriver_1 = __webpack_require__(/*! ../driver/mongodb/MongoDriver */ \"./node_modules/typeorm/driver/mongodb/MongoDriver.js\");\nvar RepositoryNotFoundError_1 = __webpack_require__(/*! ../error/RepositoryNotFoundError */ \"./node_modules/typeorm/error/RepositoryNotFoundError.js\");\nvar RepositoryNotTreeError_1 = __webpack_require__(/*! ../error/RepositoryNotTreeError */ \"./node_modules/typeorm/error/RepositoryNotTreeError.js\");\nvar RepositoryFactory_1 = __webpack_require__(/*! ../repository/RepositoryFactory */ \"./node_modules/typeorm/repository/RepositoryFactory.js\");\nvar TreeRepositoryNotSupportedError_1 = __webpack_require__(/*! ../error/TreeRepositoryNotSupportedError */ \"./node_modules/typeorm/error/TreeRepositoryNotSupportedError.js\");\nvar EntityPersistExecutor_1 = __webpack_require__(/*! ../persistence/EntityPersistExecutor */ \"./node_modules/typeorm/persistence/EntityPersistExecutor.js\");\nvar OracleDriver_1 = __webpack_require__(/*! ../driver/oracle/OracleDriver */ \"./node_modules/typeorm/driver/oracle/OracleDriver.js\");\n/**\n * Entity manager supposed to work with any entity, automatically find its repository and call its methods,\n * whatever entity type are you passing.\n */\nvar EntityManager = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function EntityManager(connection, queryRunner) {\n        // -------------------------------------------------------------------------\n        // Protected Properties\n        // -------------------------------------------------------------------------\n        /**\n         * Once created and then reused by en repositories.\n         */\n        this.repositories = [];\n        /**\n         * Plain to object transformer used in create and merge operations.\n         */\n        this.plainObjectToEntityTransformer = new PlainObjectToNewEntityTransformer_1.PlainObjectToNewEntityTransformer();\n        this.connection = connection;\n        if (queryRunner) {\n            this.queryRunner = queryRunner;\n            // dynamic: this.queryRunner = manager;\n            Object.assign(this.queryRunner, { manager: this });\n        }\n    }\n    EntityManager.prototype.transaction = function (isolationOrRunInTransaction, runInTransactionParam) {\n        return __awaiter(this, void 0, void 0, function () {\n            var isolation, runInTransaction, queryRunner, result, err_1, rollbackError_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        isolation = typeof isolationOrRunInTransaction === \"string\" ? isolationOrRunInTransaction : undefined;\n                        runInTransaction = typeof isolationOrRunInTransaction === \"function\" ? isolationOrRunInTransaction : runInTransactionParam;\n                        if (!runInTransaction) {\n                            throw new Error(\"Transaction method requires callback in second paramter if isolation level is supplied.\");\n                        }\n                        if (this.connection.driver instanceof MongoDriver_1.MongoDriver)\n                            throw new Error(\"Transactions aren't supported by MongoDB.\");\n                        if (this.queryRunner && this.queryRunner.isReleased)\n                            throw new QueryRunnerProviderAlreadyReleasedError_1.QueryRunnerProviderAlreadyReleasedError();\n                        if (this.queryRunner && this.queryRunner.isTransactionActive)\n                            throw new Error(\"Cannot start transaction because its already started\");\n                        queryRunner = this.queryRunner || this.connection.createQueryRunner(\"master\");\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 8, 13, 16]);\n                        if (!isolation) return [3 /*break*/, 3];\n                        return [4 /*yield*/, queryRunner.startTransaction(isolation)];\n                    case 2:\n                        _a.sent();\n                        return [3 /*break*/, 5];\n                    case 3: return [4 /*yield*/, queryRunner.startTransaction()];\n                    case 4:\n                        _a.sent();\n                        _a.label = 5;\n                    case 5: return [4 /*yield*/, runInTransaction(queryRunner.manager)];\n                    case 6:\n                        result = _a.sent();\n                        return [4 /*yield*/, queryRunner.commitTransaction()];\n                    case 7:\n                        _a.sent();\n                        return [2 /*return*/, result];\n                    case 8:\n                        err_1 = _a.sent();\n                        _a.label = 9;\n                    case 9:\n                        _a.trys.push([9, 11, , 12]);\n                        return [4 /*yield*/, queryRunner.rollbackTransaction()];\n                    case 10:\n                        _a.sent();\n                        return [3 /*break*/, 12];\n                    case 11:\n                        rollbackError_1 = _a.sent();\n                        return [3 /*break*/, 12];\n                    case 12: throw err_1;\n                    case 13:\n                        if (!!this.queryRunner) return [3 /*break*/, 15];\n                        return [4 /*yield*/, queryRunner.release()];\n                    case 14:\n                        _a.sent();\n                        _a.label = 15;\n                    case 15: return [7 /*endfinally*/];\n                    case 16: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Executes raw SQL query and returns raw database results.\n     */\n    EntityManager.prototype.query = function (query, parameters) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.connection.query(query, parameters, this.queryRunner)];\n            });\n        });\n    };\n    /**\n     * Creates a new query builder that can be used to build a sql query.\n     */\n    EntityManager.prototype.createQueryBuilder = function (entityClass, alias, queryRunner) {\n        if (alias) {\n            return this.connection.createQueryBuilder(entityClass, alias, queryRunner || this.queryRunner);\n        }\n        else {\n            return this.connection.createQueryBuilder(entityClass || queryRunner || this.queryRunner);\n        }\n    };\n    /**\n     * Checks if entity has an id by its Function type or schema name.\n     */\n    EntityManager.prototype.hasId = function (targetOrEntity, maybeEntity) {\n        var target = arguments.length === 2 ? targetOrEntity : targetOrEntity.constructor;\n        var entity = arguments.length === 2 ? maybeEntity : targetOrEntity;\n        var metadata = this.connection.getMetadata(target);\n        return metadata.hasId(entity);\n    };\n    /**\n     * Gets entity mixed id.\n     */\n    EntityManager.prototype.getId = function (targetOrEntity, maybeEntity) {\n        var target = arguments.length === 2 ? targetOrEntity : targetOrEntity.constructor;\n        var entity = arguments.length === 2 ? maybeEntity : targetOrEntity;\n        var metadata = this.connection.getMetadata(target);\n        return metadata.getEntityIdMixedMap(entity);\n    };\n    /**\n     * Creates a new entity instance or instances.\n     * Can copy properties from the given object into new entities.\n     */\n    EntityManager.prototype.create = function (entityClass, plainObjectOrObjects) {\n        var _this = this;\n        var metadata = this.connection.getMetadata(entityClass);\n        if (!plainObjectOrObjects)\n            return metadata.create(this.queryRunner);\n        if (plainObjectOrObjects instanceof Array)\n            return plainObjectOrObjects.map(function (plainEntityLike) { return _this.create(entityClass, plainEntityLike); });\n        var mergeIntoEntity = metadata.create(this.queryRunner);\n        this.plainObjectToEntityTransformer.transform(mergeIntoEntity, plainObjectOrObjects, metadata, true);\n        return mergeIntoEntity;\n    };\n    /**\n     * Merges two entities into one new entity.\n     */\n    EntityManager.prototype.merge = function (entityClass, mergeIntoEntity) {\n        var _this = this;\n        var entityLikes = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            entityLikes[_i - 2] = arguments[_i];\n        }\n        var metadata = this.connection.getMetadata(entityClass);\n        entityLikes.forEach(function (object) { return _this.plainObjectToEntityTransformer.transform(mergeIntoEntity, object, metadata); });\n        return mergeIntoEntity;\n    };\n    /**\n     * Creates a new entity from the given plan javascript object. If entity already exist in the database, then\n     * it loads it (and everything related to it), replaces all values with the new ones from the given object\n     * and returns this new entity. This new entity is actually a loaded from the db entity with all properties\n     * replaced from the new object.\n     */\n    EntityManager.prototype.preload = function (entityClass, entityLike) {\n        return __awaiter(this, void 0, void 0, function () {\n            var metadata, plainObjectToDatabaseEntityTransformer, transformedEntity;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        metadata = this.connection.getMetadata(entityClass);\n                        plainObjectToDatabaseEntityTransformer = new PlainObjectToDatabaseEntityTransformer_1.PlainObjectToDatabaseEntityTransformer(this.connection.manager);\n                        return [4 /*yield*/, plainObjectToDatabaseEntityTransformer.transform(entityLike, metadata)];\n                    case 1:\n                        transformedEntity = _a.sent();\n                        if (transformedEntity)\n                            return [2 /*return*/, this.merge(entityClass, transformedEntity, entityLike)];\n                        return [2 /*return*/, undefined];\n                }\n            });\n        });\n    };\n    /**\n     * Saves a given entity in the database.\n     */\n    EntityManager.prototype.save = function (targetOrEntity, maybeEntityOrOptions, maybeOptions) {\n        // normalize mixed parameters\n        var target = (arguments.length > 1 && (targetOrEntity instanceof Function || targetOrEntity instanceof index_1.EntitySchema || typeof targetOrEntity === \"string\")) ? targetOrEntity : undefined;\n        var entity = target ? maybeEntityOrOptions : targetOrEntity;\n        var options = target ? maybeOptions : maybeEntityOrOptions;\n        if (target instanceof index_1.EntitySchema)\n            target = target.options.name;\n        // if user passed empty array of entities then we don't need to do anything\n        if (entity instanceof Array && entity.length === 0)\n            return Promise.resolve(entity);\n        // execute save operation\n        return new EntityPersistExecutor_1.EntityPersistExecutor(this.connection, this.queryRunner, \"save\", target, entity, options)\n            .execute()\n            .then(function () { return entity; });\n    };\n    /**\n     * Removes a given entity from the database.\n     */\n    EntityManager.prototype.remove = function (targetOrEntity, maybeEntityOrOptions, maybeOptions) {\n        // normalize mixed parameters\n        var target = (arguments.length > 1 && (targetOrEntity instanceof Function || typeof targetOrEntity === \"string\")) ? targetOrEntity : undefined;\n        var entity = target ? maybeEntityOrOptions : targetOrEntity;\n        var options = target ? maybeOptions : maybeEntityOrOptions;\n        // if user passed empty array of entities then we don't need to do anything\n        if (entity instanceof Array && entity.length === 0)\n            return Promise.resolve(entity);\n        // execute save operation\n        return new EntityPersistExecutor_1.EntityPersistExecutor(this.connection, this.queryRunner, \"remove\", target, entity, options)\n            .execute()\n            .then(function () { return entity; });\n    };\n    /**\n     * Inserts a given entity into the database.\n     * Unlike save method executes a primitive operation without cascades, relations and other operations included.\n     * Executes fast and efficient INSERT query.\n     * Does not check if entity exist in the database, so query will fail if duplicate entity is being inserted.\n     * You can execute bulk inserts using this method.\n     */\n    EntityManager.prototype.insert = function (target, entity, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var results;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(this.connection.driver instanceof OracleDriver_1.OracleDriver && entity instanceof Array)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, Promise.all(entity.map(function (entity) { return _this.insert(target, entity); }))];\n                    case 1:\n                        results = _a.sent();\n                        return [2 /*return*/, results.reduce(function (mergedResult, result) { return Object.assign(mergedResult, result); }, {})];\n                    case 2: return [2 /*return*/, this.createQueryBuilder()\n                            .insert()\n                            .into(target)\n                            .values(entity)\n                            .execute()];\n                }\n            });\n        });\n    };\n    /**\n     * Updates entity partially. Entity can be found by a given condition(s).\n     * Unlike save method executes a primitive operation without cascades, relations and other operations included.\n     * Executes fast and efficient UPDATE query.\n     * Does not check if entity exist in the database.\n     * Condition(s) cannot be empty.\n     */\n    EntityManager.prototype.update = function (target, criteria, partialEntity, options) {\n        // if user passed empty criteria or empty list of criterias, then throw an error\n        if (criteria === undefined ||\n            criteria === null ||\n            criteria === \"\" ||\n            (criteria instanceof Array && criteria.length === 0)) {\n            return Promise.reject(new Error(\"Empty criteria(s) are not allowed for the update method.\"));\n        }\n        if (typeof criteria === \"string\" ||\n            typeof criteria === \"number\" ||\n            criteria instanceof Date ||\n            criteria instanceof Array) {\n            return this.createQueryBuilder()\n                .update(target)\n                .set(partialEntity)\n                .whereInIds(criteria)\n                .execute();\n        }\n        else {\n            return this.createQueryBuilder()\n                .update(target)\n                .set(partialEntity)\n                .where(criteria)\n                .execute();\n        }\n    };\n    /**\n     * Deletes entities by a given condition(s).\n     * Unlike save method executes a primitive operation without cascades, relations and other operations included.\n     * Executes fast and efficient DELETE query.\n     * Does not check if entity exist in the database.\n     * Condition(s) cannot be empty.\n     */\n    EntityManager.prototype.delete = function (targetOrEntity, criteria, options) {\n        // if user passed empty criteria or empty list of criterias, then throw an error\n        if (criteria === undefined ||\n            criteria === null ||\n            criteria === \"\" ||\n            (criteria instanceof Array && criteria.length === 0)) {\n            return Promise.reject(new Error(\"Empty criteria(s) are not allowed for the delete method.\"));\n        }\n        if (typeof criteria === \"string\" ||\n            typeof criteria === \"number\" ||\n            criteria instanceof Date ||\n            criteria instanceof Array) {\n            return this.createQueryBuilder()\n                .delete()\n                .from(targetOrEntity)\n                .whereInIds(criteria)\n                .execute();\n        }\n        else {\n            return this.createQueryBuilder()\n                .delete()\n                .from(targetOrEntity)\n                .where(criteria)\n                .execute();\n        }\n    };\n    /**\n     * Counts entities that match given find options or conditions.\n     * Useful for pagination.\n     */\n    EntityManager.prototype.count = function (entityClass, optionsOrConditions) {\n        return __awaiter(this, void 0, void 0, function () {\n            var metadata, qb;\n            return __generator(this, function (_a) {\n                metadata = this.connection.getMetadata(entityClass);\n                qb = this.createQueryBuilder(entityClass, FindOptionsUtils_1.FindOptionsUtils.extractFindManyOptionsAlias(optionsOrConditions) || metadata.name);\n                return [2 /*return*/, FindOptionsUtils_1.FindOptionsUtils.applyFindManyOptionsOrConditionsToQueryBuilder(qb, optionsOrConditions).getCount()];\n            });\n        });\n    };\n    /**\n     * Finds entities that match given find options or conditions.\n     */\n    EntityManager.prototype.find = function (entityClass, optionsOrConditions) {\n        return __awaiter(this, void 0, void 0, function () {\n            var metadata, qb;\n            return __generator(this, function (_a) {\n                metadata = this.connection.getMetadata(entityClass);\n                qb = this.createQueryBuilder(entityClass, FindOptionsUtils_1.FindOptionsUtils.extractFindManyOptionsAlias(optionsOrConditions) || metadata.name);\n                if (!FindOptionsUtils_1.FindOptionsUtils.isFindManyOptions(optionsOrConditions) || optionsOrConditions.loadEagerRelations !== false)\n                    FindOptionsUtils_1.FindOptionsUtils.joinEagerRelations(qb, qb.alias, metadata);\n                return [2 /*return*/, FindOptionsUtils_1.FindOptionsUtils.applyFindManyOptionsOrConditionsToQueryBuilder(qb, optionsOrConditions).getMany()];\n            });\n        });\n    };\n    /**\n     * Finds entities that match given find options and conditions.\n     * Also counts all entities that match given conditions,\n     * but ignores pagination settings (from and take options).\n     */\n    EntityManager.prototype.findAndCount = function (entityClass, optionsOrConditions) {\n        return __awaiter(this, void 0, void 0, function () {\n            var metadata, qb;\n            return __generator(this, function (_a) {\n                metadata = this.connection.getMetadata(entityClass);\n                qb = this.createQueryBuilder(entityClass, FindOptionsUtils_1.FindOptionsUtils.extractFindManyOptionsAlias(optionsOrConditions) || metadata.name);\n                if (!FindOptionsUtils_1.FindOptionsUtils.isFindManyOptions(optionsOrConditions) || optionsOrConditions.loadEagerRelations !== false)\n                    FindOptionsUtils_1.FindOptionsUtils.joinEagerRelations(qb, qb.alias, metadata);\n                return [2 /*return*/, FindOptionsUtils_1.FindOptionsUtils.applyFindManyOptionsOrConditionsToQueryBuilder(qb, optionsOrConditions).getManyAndCount()];\n            });\n        });\n    };\n    /**\n     * Finds entities with ids.\n     * Optionally find options or conditions can be applied.\n     */\n    EntityManager.prototype.findByIds = function (entityClass, ids, optionsOrConditions) {\n        return __awaiter(this, void 0, void 0, function () {\n            var metadata, qb;\n            return __generator(this, function (_a) {\n                // if no ids passed, no need to execute a query - just return an empty array of values\n                if (!ids.length)\n                    return [2 /*return*/, Promise.resolve([])];\n                metadata = this.connection.getMetadata(entityClass);\n                qb = this.createQueryBuilder(entityClass, FindOptionsUtils_1.FindOptionsUtils.extractFindManyOptionsAlias(optionsOrConditions) || metadata.name);\n                FindOptionsUtils_1.FindOptionsUtils.applyFindManyOptionsOrConditionsToQueryBuilder(qb, optionsOrConditions);\n                if (!FindOptionsUtils_1.FindOptionsUtils.isFindManyOptions(optionsOrConditions) || optionsOrConditions.loadEagerRelations !== false)\n                    FindOptionsUtils_1.FindOptionsUtils.joinEagerRelations(qb, qb.alias, metadata);\n                return [2 /*return*/, qb.andWhereInIds(ids).getMany()];\n            });\n        });\n    };\n    /**\n     * Finds first entity that matches given conditions.\n     */\n    EntityManager.prototype.findOne = function (entityClass, idOrOptionsOrConditions, maybeOptions) {\n        return __awaiter(this, void 0, void 0, function () {\n            var findOptions, options, metadata, alias, qb;\n            return __generator(this, function (_a) {\n                findOptions = undefined;\n                if (FindOptionsUtils_1.FindOptionsUtils.isFindOneOptions(idOrOptionsOrConditions)) {\n                    findOptions = idOrOptionsOrConditions;\n                }\n                else if (maybeOptions && FindOptionsUtils_1.FindOptionsUtils.isFindOneOptions(maybeOptions)) {\n                    findOptions = maybeOptions;\n                }\n                options = undefined;\n                if (idOrOptionsOrConditions instanceof Object && !FindOptionsUtils_1.FindOptionsUtils.isFindOneOptions(idOrOptionsOrConditions))\n                    options = idOrOptionsOrConditions;\n                metadata = this.connection.getMetadata(entityClass);\n                alias = metadata.name;\n                if (findOptions && findOptions.join) {\n                    alias = findOptions.join.alias;\n                }\n                else if (maybeOptions && FindOptionsUtils_1.FindOptionsUtils.isFindOneOptions(maybeOptions) && maybeOptions.join) {\n                    alias = maybeOptions.join.alias;\n                }\n                qb = this.createQueryBuilder(entityClass, alias);\n                if (!findOptions || findOptions.loadEagerRelations !== false)\n                    FindOptionsUtils_1.FindOptionsUtils.joinEagerRelations(qb, qb.alias, qb.expressionMap.mainAlias.metadata);\n                if (findOptions)\n                    FindOptionsUtils_1.FindOptionsUtils.applyOptionsToQueryBuilder(qb, findOptions);\n                if (options) {\n                    qb.where(options);\n                }\n                else if (typeof idOrOptionsOrConditions === \"string\" || typeof idOrOptionsOrConditions === \"number\" || idOrOptionsOrConditions instanceof Date) {\n                    qb.andWhereInIds(metadata.ensureEntityIdMap(idOrOptionsOrConditions));\n                }\n                return [2 /*return*/, qb.getOne()];\n            });\n        });\n    };\n    /**\n     * Finds first entity that matches given conditions or rejects the returned promise on error.\n     */\n    EntityManager.prototype.findOneOrFail = function (entityClass, idOrOptionsOrConditions, maybeOptions) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.findOne(entityClass, idOrOptionsOrConditions, maybeOptions).then(function (value) {\n                        if (value === undefined) {\n                            return Promise.reject(new EntityNotFoundError_1.EntityNotFoundError(entityClass, idOrOptionsOrConditions));\n                        }\n                        return Promise.resolve(value);\n                    })];\n            });\n        });\n    };\n    /**\n     * Clears all the data from the given table (truncates/drops it).\n     *\n     * Note: this method uses TRUNCATE and may not work as you expect in transactions on some platforms.\n     * @see https://stackoverflow.com/a/5972738/925151\n     */\n    EntityManager.prototype.clear = function (entityClass) {\n        return __awaiter(this, void 0, void 0, function () {\n            var metadata, queryRunner;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        metadata = this.connection.getMetadata(entityClass);\n                        queryRunner = this.queryRunner || this.connection.createQueryRunner(\"master\");\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, , 3, 6]);\n                        return [4 /*yield*/, queryRunner.clearTable(metadata.tablePath)];\n                    case 2: return [2 /*return*/, _a.sent()]; // await is needed here because we are using finally\n                    case 3:\n                        if (!!this.queryRunner) return [3 /*break*/, 5];\n                        return [4 /*yield*/, queryRunner.release()];\n                    case 4:\n                        _a.sent();\n                        _a.label = 5;\n                    case 5: return [7 /*endfinally*/];\n                    case 6: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Increments some column by provided value of the entities matched given conditions.\n     */\n    EntityManager.prototype.increment = function (entityClass, conditions, propertyPath, value) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var metadata, column, _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        metadata = this.connection.getMetadata(entityClass);\n                        column = metadata.findColumnWithPropertyPath(propertyPath);\n                        if (!column)\n                            throw new Error(\"Column \" + propertyPath + \" was not found in \" + metadata.targetName + \" entity.\");\n                        return [4 /*yield*/, this\n                                .createQueryBuilder(entityClass, \"entity\")\n                                .update(entityClass)\n                                .set((_a = {},\n                                _a[propertyPath] = function () { return _this.connection.driver.escape(column.databaseName) + \" + \" + Number(value); },\n                                _a))\n                                .where(conditions)\n                                .execute()];\n                    case 1:\n                        _b.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Decrements some column by provided value of the entities matched given conditions.\n     */\n    EntityManager.prototype.decrement = function (entityClass, conditions, propertyPath, value) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var metadata, column, _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        metadata = this.connection.getMetadata(entityClass);\n                        column = metadata.findColumnWithPropertyPath(propertyPath);\n                        if (!column)\n                            throw new Error(\"Column \" + propertyPath + \" was not found in \" + metadata.targetName + \" entity.\");\n                        return [4 /*yield*/, this\n                                .createQueryBuilder(entityClass, \"entity\")\n                                .update(entityClass)\n                                .set((_a = {},\n                                _a[propertyPath] = function () { return _this.connection.driver.escape(column.databaseName) + \" - \" + Number(value); },\n                                _a))\n                                .where(conditions)\n                                .execute()];\n                    case 1:\n                        _b.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Gets repository for the given entity class or name.\n     * If single database connection mode is used, then repository is obtained from the\n     * repository aggregator, where each repository is individually created for this entity manager.\n     * When single database connection is not used, repository is being obtained from the connection.\n     */\n    EntityManager.prototype.getRepository = function (target) {\n        // throw exception if there is no repository with this target registered\n        if (!this.connection.hasMetadata(target))\n            throw new RepositoryNotFoundError_1.RepositoryNotFoundError(this.connection.name, target);\n        // find already created repository instance and return it if found\n        var metadata = this.connection.getMetadata(target);\n        var repository = this.repositories.find(function (repository) { return repository.metadata === metadata; });\n        if (repository)\n            return repository;\n        // if repository was not found then create it, store its instance and return it\n        var newRepository = new RepositoryFactory_1.RepositoryFactory().create(this, metadata, this.queryRunner);\n        this.repositories.push(newRepository);\n        return newRepository;\n    };\n    /**\n     * Gets tree repository for the given entity class or name.\n     * If single database connection mode is used, then repository is obtained from the\n     * repository aggregator, where each repository is individually created for this entity manager.\n     * When single database connection is not used, repository is being obtained from the connection.\n     */\n    EntityManager.prototype.getTreeRepository = function (target) {\n        // tree tables aren't supported by some drivers (mongodb)\n        if (this.connection.driver.treeSupport === false)\n            throw new TreeRepositoryNotSupportedError_1.TreeRepositoryNotSupportedError(this.connection.driver);\n        // check if repository is real tree repository\n        var repository = this.getRepository(target);\n        if (!(repository instanceof TreeRepository_1.TreeRepository))\n            throw new RepositoryNotTreeError_1.RepositoryNotTreeError(target);\n        return repository;\n    };\n    /**\n     * Gets mongodb repository for the given entity class.\n     */\n    EntityManager.prototype.getMongoRepository = function (target) {\n        return this.connection.getMongoRepository(target);\n    };\n    /**\n     * Gets custom entity repository marked with @EntityRepository decorator.\n     */\n    EntityManager.prototype.getCustomRepository = function (customRepository) {\n        var entityRepositoryMetadataArgs = index_1.getMetadataArgsStorage().entityRepositories.find(function (repository) {\n            return repository.target === (customRepository instanceof Function ? customRepository : customRepository.constructor);\n        });\n        if (!entityRepositoryMetadataArgs)\n            throw new CustomRepositoryNotFoundError_1.CustomRepositoryNotFoundError(customRepository);\n        var entityMetadata = entityRepositoryMetadataArgs.entity ? this.connection.getMetadata(entityRepositoryMetadataArgs.entity) : undefined;\n        var entityRepositoryInstance = new entityRepositoryMetadataArgs.target(this, entityMetadata);\n        // NOTE: dynamic access to protected properties. We need this to prevent unwanted properties in those classes to be exposed,\n        // however we need these properties for internal work of the class\n        if (entityRepositoryInstance instanceof AbstractRepository_1.AbstractRepository) {\n            if (!entityRepositoryInstance[\"manager\"])\n                entityRepositoryInstance[\"manager\"] = this;\n        }\n        if (entityRepositoryInstance instanceof Repository_1.Repository) {\n            if (!entityMetadata)\n                throw new CustomRepositoryCannotInheritRepositoryError_1.CustomRepositoryCannotInheritRepositoryError(customRepository);\n            entityRepositoryInstance[\"manager\"] = this;\n            entityRepositoryInstance[\"metadata\"] = entityMetadata;\n        }\n        return entityRepositoryInstance;\n    };\n    /**\n     * Releases all resources used by entity manager.\n     * This is used when entity manager is created with a single query runner,\n     * and this single query runner needs to be released after job with entity manager is done.\n     */\n    EntityManager.prototype.release = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                if (!this.queryRunner)\n                    throw new NoNeedToReleaseEntityManagerError_1.NoNeedToReleaseEntityManagerError();\n                return [2 /*return*/, this.queryRunner.release()];\n            });\n        });\n    };\n    return EntityManager;\n}());\nexports.EntityManager = EntityManager;\n\n//# sourceMappingURL=EntityManager.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/entity-manager/EntityManager.js?");

/***/ }),

/***/ "./node_modules/typeorm/entity-manager/EntityManagerFactory.js":
/*!*********************************************************************!*\
  !*** ./node_modules/typeorm/entity-manager/EntityManagerFactory.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar EntityManager_1 = __webpack_require__(/*! ./EntityManager */ \"./node_modules/typeorm/entity-manager/EntityManager.js\");\nvar MongoEntityManager_1 = __webpack_require__(/*! ./MongoEntityManager */ \"./node_modules/typeorm/entity-manager/MongoEntityManager.js\");\nvar MongoDriver_1 = __webpack_require__(/*! ../driver/mongodb/MongoDriver */ \"./node_modules/typeorm/driver/mongodb/MongoDriver.js\");\nvar SqljsEntityManager_1 = __webpack_require__(/*! ./SqljsEntityManager */ \"./node_modules/typeorm/entity-manager/SqljsEntityManager.js\");\nvar SqljsDriver_1 = __webpack_require__(/*! ../driver/sqljs/SqljsDriver */ \"./node_modules/typeorm/driver/sqljs/SqljsDriver.js\");\n/**\n * Helps to create entity managers.\n */\nvar EntityManagerFactory = /** @class */ (function () {\n    function EntityManagerFactory() {\n    }\n    /**\n     * Creates a new entity manager depend on a given connection's driver.\n     */\n    EntityManagerFactory.prototype.create = function (connection, queryRunner) {\n        if (connection.driver instanceof MongoDriver_1.MongoDriver)\n            return new MongoEntityManager_1.MongoEntityManager(connection);\n        if (connection.driver instanceof SqljsDriver_1.SqljsDriver)\n            return new SqljsEntityManager_1.SqljsEntityManager(connection, queryRunner);\n        return new EntityManager_1.EntityManager(connection, queryRunner);\n    };\n    return EntityManagerFactory;\n}());\nexports.EntityManagerFactory = EntityManagerFactory;\n\n//# sourceMappingURL=EntityManagerFactory.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/entity-manager/EntityManagerFactory.js?");

/***/ }),

/***/ "./node_modules/typeorm/entity-manager/MongoEntityManager.js":
/*!*******************************************************************!*\
  !*** ./node_modules/typeorm/entity-manager/MongoEntityManager.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar EntityManager_1 = __webpack_require__(/*! ./EntityManager */ \"./node_modules/typeorm/entity-manager/EntityManager.js\");\nvar DocumentToEntityTransformer_1 = __webpack_require__(/*! ../query-builder/transformer/DocumentToEntityTransformer */ \"./node_modules/typeorm/query-builder/transformer/DocumentToEntityTransformer.js\");\nvar FindOptionsUtils_1 = __webpack_require__(/*! ../find-options/FindOptionsUtils */ \"./node_modules/typeorm/find-options/FindOptionsUtils.js\");\nvar PlatformTools_1 = __webpack_require__(/*! ../platform/PlatformTools */ \"./node_modules/typeorm/platform/PlatformTools.js\");\nvar InsertResult_1 = __webpack_require__(/*! ../query-builder/result/InsertResult */ \"./node_modules/typeorm/query-builder/result/InsertResult.js\");\nvar UpdateResult_1 = __webpack_require__(/*! ../query-builder/result/UpdateResult */ \"./node_modules/typeorm/query-builder/result/UpdateResult.js\");\nvar DeleteResult_1 = __webpack_require__(/*! ../query-builder/result/DeleteResult */ \"./node_modules/typeorm/query-builder/result/DeleteResult.js\");\n/**\n * Entity manager supposed to work with any entity, automatically find its repository and call its methods,\n * whatever entity type are you passing.\n *\n * This implementation is used for MongoDB driver which has some specifics in its EntityManager.\n */\nvar MongoEntityManager = /** @class */ (function (_super) {\n    __extends(MongoEntityManager, _super);\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function MongoEntityManager(connection) {\n        return _super.call(this, connection) || this;\n    }\n    Object.defineProperty(MongoEntityManager.prototype, \"queryRunner\", {\n        // -------------------------------------------------------------------------\n        // Overridden Properties\n        // -------------------------------------------------------------------------\n        /**\n         * Gets query runner used to execute queries.\n         */\n        get: function () {\n            return this.connection.driver.queryRunner;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // -------------------------------------------------------------------------\n    // Overridden Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Finds entities that match given find options or conditions.\n     */\n    MongoEntityManager.prototype.find = function (entityClassOrName, optionsOrConditions) {\n        return __awaiter(this, void 0, void 0, function () {\n            var query, cursor;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        query = this.convertFindManyOptionsOrConditionsToMongodbQuery(optionsOrConditions);\n                        return [4 /*yield*/, this.createEntityCursor(entityClassOrName, query)];\n                    case 1:\n                        cursor = _a.sent();\n                        if (FindOptionsUtils_1.FindOptionsUtils.isFindManyOptions(optionsOrConditions)) {\n                            if (optionsOrConditions.skip)\n                                cursor.skip(optionsOrConditions.skip);\n                            if (optionsOrConditions.take)\n                                cursor.limit(optionsOrConditions.take);\n                            if (optionsOrConditions.order)\n                                cursor.sort(this.convertFindOptionsOrderToOrderCriteria(optionsOrConditions.order));\n                        }\n                        return [2 /*return*/, cursor.toArray()];\n                }\n            });\n        });\n    };\n    /**\n     * Finds entities that match given find options or conditions.\n     * Also counts all entities that match given conditions,\n     * but ignores pagination settings (from and take options).\n     */\n    MongoEntityManager.prototype.findAndCount = function (entityClassOrName, optionsOrConditions) {\n        return __awaiter(this, void 0, void 0, function () {\n            var query, cursor, _a, results, count;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        query = this.convertFindManyOptionsOrConditionsToMongodbQuery(optionsOrConditions);\n                        return [4 /*yield*/, this.createEntityCursor(entityClassOrName, query)];\n                    case 1:\n                        cursor = _b.sent();\n                        if (FindOptionsUtils_1.FindOptionsUtils.isFindManyOptions(optionsOrConditions)) {\n                            if (optionsOrConditions.skip)\n                                cursor.skip(optionsOrConditions.skip);\n                            if (optionsOrConditions.take)\n                                cursor.limit(optionsOrConditions.take);\n                            if (optionsOrConditions.order)\n                                cursor.sort(this.convertFindOptionsOrderToOrderCriteria(optionsOrConditions.order));\n                        }\n                        return [4 /*yield*/, Promise.all([\n                                cursor.toArray(),\n                                this.count(entityClassOrName, query),\n                            ])];\n                    case 2:\n                        _a = __read.apply(void 0, [_b.sent(), 2]), results = _a[0], count = _a[1];\n                        return [2 /*return*/, [results, parseInt(count)]];\n                }\n            });\n        });\n    };\n    /**\n     * Finds entities by ids.\n     * Optionally find options can be applied.\n     */\n    MongoEntityManager.prototype.findByIds = function (entityClassOrName, ids, optionsOrConditions) {\n        return __awaiter(this, void 0, void 0, function () {\n            var metadata, query, objectIdInstance, cursor;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        metadata = this.connection.getMetadata(entityClassOrName);\n                        query = this.convertFindManyOptionsOrConditionsToMongodbQuery(optionsOrConditions) || {};\n                        objectIdInstance = PlatformTools_1.PlatformTools.load(\"mongodb\").ObjectID;\n                        query[\"_id\"] = { $in: ids.map(function (id) {\n                                if (id instanceof objectIdInstance)\n                                    return id;\n                                return id[metadata.objectIdColumn.propertyName];\n                            }) };\n                        return [4 /*yield*/, this.createEntityCursor(entityClassOrName, query)];\n                    case 1:\n                        cursor = _a.sent();\n                        if (FindOptionsUtils_1.FindOptionsUtils.isFindManyOptions(optionsOrConditions)) {\n                            if (optionsOrConditions.skip)\n                                cursor.skip(optionsOrConditions.skip);\n                            if (optionsOrConditions.take)\n                                cursor.limit(optionsOrConditions.take);\n                            if (optionsOrConditions.order)\n                                cursor.sort(this.convertFindOptionsOrderToOrderCriteria(optionsOrConditions.order));\n                        }\n                        return [4 /*yield*/, cursor.toArray()];\n                    case 2: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /**\n     * Finds first entity that matches given conditions and/or find options.\n     */\n    MongoEntityManager.prototype.findOne = function (entityClassOrName, optionsOrConditions, maybeOptions) {\n        return __awaiter(this, void 0, void 0, function () {\n            var objectIdInstance, id, query, cursor, result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        objectIdInstance = PlatformTools_1.PlatformTools.load(\"mongodb\").ObjectID;\n                        id = (optionsOrConditions instanceof objectIdInstance) || typeof optionsOrConditions === \"string\" ? optionsOrConditions : undefined;\n                        query = this.convertFindOneOptionsOrConditionsToMongodbQuery((id ? maybeOptions : optionsOrConditions)) || {};\n                        if (id) {\n                            query[\"_id\"] = (id instanceof objectIdInstance) ? id : new objectIdInstance(id);\n                        }\n                        return [4 /*yield*/, this.createEntityCursor(entityClassOrName, query)];\n                    case 1:\n                        cursor = _a.sent();\n                        if (FindOptionsUtils_1.FindOptionsUtils.isFindOneOptions(optionsOrConditions)) {\n                            if (optionsOrConditions.order)\n                                cursor.sort(this.convertFindOptionsOrderToOrderCriteria(optionsOrConditions.order));\n                        }\n                        return [4 /*yield*/, cursor.limit(1).toArray()];\n                    case 2:\n                        result = _a.sent();\n                        return [2 /*return*/, result.length > 0 ? result[0] : undefined];\n                }\n            });\n        });\n    };\n    /**\n     * Inserts a given entity into the database.\n     * Unlike save method executes a primitive operation without cascades, relations and other operations included.\n     * Executes fast and efficient INSERT query.\n     * Does not check if entity exist in the database, so query will fail if duplicate entity is being inserted.\n     * You can execute bulk inserts using this method.\n     */\n    MongoEntityManager.prototype.insert = function (target, entity, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var result, _a, _b;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        result = new InsertResult_1.InsertResult();\n                        if (!(entity instanceof Array)) return [3 /*break*/, 2];\n                        _a = result;\n                        return [4 /*yield*/, this.insertMany(target, entity)];\n                    case 1:\n                        _a.raw = _c.sent();\n                        Object.keys(result.raw.insertedIds).forEach(function (key) {\n                            var insertedId = result.raw.insertedIds[key];\n                            result.generatedMaps.push(_this.connection.driver.createGeneratedMap(_this.connection.getMetadata(target), insertedId));\n                            result.identifiers.push(_this.connection.driver.createGeneratedMap(_this.connection.getMetadata(target), insertedId));\n                        });\n                        return [3 /*break*/, 4];\n                    case 2:\n                        _b = result;\n                        return [4 /*yield*/, this.insertOne(target, entity)];\n                    case 3:\n                        _b.raw = _c.sent();\n                        result.generatedMaps.push(this.connection.driver.createGeneratedMap(this.connection.getMetadata(target), result.raw.insertedId));\n                        result.identifiers.push(this.connection.driver.createGeneratedMap(this.connection.getMetadata(target), result.raw.insertedId));\n                        _c.label = 4;\n                    case 4: return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    /**\n     * Updates entity partially. Entity can be found by a given conditions.\n     * Unlike save method executes a primitive operation without cascades, relations and other operations included.\n     * Executes fast and efficient UPDATE query.\n     * Does not check if entity exist in the database.\n     */\n    MongoEntityManager.prototype.update = function (target, criteria, partialEntity, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var metadata;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(criteria instanceof Array)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, Promise.all(criteria.map(function (criteriaItem) {\n                                return _this.update(target, criteriaItem, partialEntity);\n                            }))];\n                    case 1:\n                        _a.sent();\n                        return [3 /*break*/, 4];\n                    case 2:\n                        metadata = this.connection.getMetadata(target);\n                        return [4 /*yield*/, this.updateOne(target, this.convertMixedCriteria(metadata, criteria), { $set: partialEntity })];\n                    case 3:\n                        _a.sent();\n                        _a.label = 4;\n                    case 4: return [2 /*return*/, new UpdateResult_1.UpdateResult()];\n                }\n            });\n        });\n    };\n    /**\n     * Deletes entities by a given conditions.\n     * Unlike save method executes a primitive operation without cascades, relations and other operations included.\n     * Executes fast and efficient DELETE query.\n     * Does not check if entity exist in the database.\n     */\n    MongoEntityManager.prototype.delete = function (target, criteria, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(criteria instanceof Array)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, Promise.all(criteria.map(function (criteriaItem) {\n                                return _this.delete(target, criteriaItem);\n                            }))];\n                    case 1:\n                        _a.sent();\n                        return [3 /*break*/, 4];\n                    case 2: return [4 /*yield*/, this.deleteOne(target, this.convertMixedCriteria(this.connection.getMetadata(target), criteria))];\n                    case 3:\n                        _a.sent();\n                        _a.label = 4;\n                    case 4: return [2 /*return*/, new DeleteResult_1.DeleteResult()];\n                }\n            });\n        });\n    };\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates a cursor for a query that can be used to iterate over results from MongoDB.\n     */\n    MongoEntityManager.prototype.createCursor = function (entityClassOrName, query) {\n        var metadata = this.connection.getMetadata(entityClassOrName);\n        return this.queryRunner.cursor(metadata.tableName, query);\n    };\n    /**\n     * Creates a cursor for a query that can be used to iterate over results from MongoDB.\n     * This returns modified version of cursor that transforms each result into Entity model.\n     */\n    MongoEntityManager.prototype.createEntityCursor = function (entityClassOrName, query) {\n        var metadata = this.connection.getMetadata(entityClassOrName);\n        var cursor = this.createCursor(entityClassOrName, query);\n        this.applyEntityTransformationToCursor(metadata, cursor);\n        return cursor;\n    };\n    /**\n     * Execute an aggregation framework pipeline against the collection.\n     */\n    MongoEntityManager.prototype.aggregate = function (entityClassOrName, pipeline, options) {\n        var metadata = this.connection.getMetadata(entityClassOrName);\n        return this.queryRunner.aggregate(metadata.tableName, pipeline, options);\n    };\n    /**\n     * Execute an aggregation framework pipeline against the collection.\n     * This returns modified version of cursor that transforms each result into Entity model.\n     */\n    MongoEntityManager.prototype.aggregateEntity = function (entityClassOrName, pipeline, options) {\n        var metadata = this.connection.getMetadata(entityClassOrName);\n        var cursor = this.queryRunner.aggregate(metadata.tableName, pipeline, options);\n        this.applyEntityTransformationToCursor(metadata, cursor);\n        return cursor;\n    };\n    /**\n     * Perform a bulkWrite operation without a fluent API.\n     */\n    MongoEntityManager.prototype.bulkWrite = function (entityClassOrName, operations, options) {\n        var metadata = this.connection.getMetadata(entityClassOrName);\n        return this.queryRunner.bulkWrite(metadata.tableName, operations, options);\n    };\n    /**\n     * Count number of matching documents in the db to a query.\n     */\n    MongoEntityManager.prototype.count = function (entityClassOrName, query, options) {\n        var metadata = this.connection.getMetadata(entityClassOrName);\n        return this.queryRunner.count(metadata.tableName, query, options);\n    };\n    /**\n     * Creates an index on the db and collection.\n     */\n    MongoEntityManager.prototype.createCollectionIndex = function (entityClassOrName, fieldOrSpec, options) {\n        var metadata = this.connection.getMetadata(entityClassOrName);\n        return this.queryRunner.createCollectionIndex(metadata.tableName, fieldOrSpec, options);\n    };\n    /**\n     * Creates multiple indexes in the collection, this method is only supported for MongoDB 2.6 or higher.\n     * Earlier version of MongoDB will throw a command not supported error.\n     * Index specifications are defined at http://docs.mongodb.org/manual/reference/command/createIndexes/.\n     */\n    MongoEntityManager.prototype.createCollectionIndexes = function (entityClassOrName, indexSpecs) {\n        var metadata = this.connection.getMetadata(entityClassOrName);\n        return this.queryRunner.createCollectionIndexes(metadata.tableName, indexSpecs);\n    };\n    /**\n     * Delete multiple documents on MongoDB.\n     */\n    MongoEntityManager.prototype.deleteMany = function (entityClassOrName, query, options) {\n        var metadata = this.connection.getMetadata(entityClassOrName);\n        return this.queryRunner.deleteMany(metadata.tableName, query, options);\n    };\n    /**\n     * Delete a document on MongoDB.\n     */\n    MongoEntityManager.prototype.deleteOne = function (entityClassOrName, query, options) {\n        var metadata = this.connection.getMetadata(entityClassOrName);\n        return this.queryRunner.deleteOne(metadata.tableName, query, options);\n    };\n    /**\n     * The distinct command returns returns a list of distinct values for the given key across a collection.\n     */\n    MongoEntityManager.prototype.distinct = function (entityClassOrName, key, query, options) {\n        var metadata = this.connection.getMetadata(entityClassOrName);\n        return this.queryRunner.distinct(metadata.tableName, key, query, options);\n    };\n    /**\n     * Drops an index from this collection.\n     */\n    MongoEntityManager.prototype.dropCollectionIndex = function (entityClassOrName, indexName, options) {\n        var metadata = this.connection.getMetadata(entityClassOrName);\n        return this.queryRunner.dropCollectionIndex(metadata.tableName, indexName, options);\n    };\n    /**\n     * Drops all indexes from the collection.\n     */\n    MongoEntityManager.prototype.dropCollectionIndexes = function (entityClassOrName) {\n        var metadata = this.connection.getMetadata(entityClassOrName);\n        return this.queryRunner.dropCollectionIndexes(metadata.tableName);\n    };\n    /**\n     * Find a document and delete it in one atomic operation, requires a write lock for the duration of the operation.\n     */\n    MongoEntityManager.prototype.findOneAndDelete = function (entityClassOrName, query, options) {\n        var metadata = this.connection.getMetadata(entityClassOrName);\n        return this.queryRunner.findOneAndDelete(metadata.tableName, query, options);\n    };\n    /**\n     * Find a document and replace it in one atomic operation, requires a write lock for the duration of the operation.\n     */\n    MongoEntityManager.prototype.findOneAndReplace = function (entityClassOrName, query, replacement, options) {\n        var metadata = this.connection.getMetadata(entityClassOrName);\n        return this.queryRunner.findOneAndReplace(metadata.tableName, query, replacement, options);\n    };\n    /**\n     * Find a document and update it in one atomic operation, requires a write lock for the duration of the operation.\n     */\n    MongoEntityManager.prototype.findOneAndUpdate = function (entityClassOrName, query, update, options) {\n        var metadata = this.connection.getMetadata(entityClassOrName);\n        return this.queryRunner.findOneAndUpdate(metadata.tableName, query, update, options);\n    };\n    /**\n     * Execute a geo search using a geo haystack index on a collection.\n     */\n    MongoEntityManager.prototype.geoHaystackSearch = function (entityClassOrName, x, y, options) {\n        var metadata = this.connection.getMetadata(entityClassOrName);\n        return this.queryRunner.geoHaystackSearch(metadata.tableName, x, y, options);\n    };\n    /**\n     * Execute the geoNear command to search for items in the collection.\n     */\n    MongoEntityManager.prototype.geoNear = function (entityClassOrName, x, y, options) {\n        var metadata = this.connection.getMetadata(entityClassOrName);\n        return this.queryRunner.geoNear(metadata.tableName, x, y, options);\n    };\n    /**\n     * Run a group command across a collection.\n     */\n    MongoEntityManager.prototype.group = function (entityClassOrName, keys, condition, initial, reduce, finalize, command, options) {\n        var metadata = this.connection.getMetadata(entityClassOrName);\n        return this.queryRunner.group(metadata.tableName, keys, condition, initial, reduce, finalize, command, options);\n    };\n    /**\n     * Retrieve all the indexes on the collection.\n     */\n    MongoEntityManager.prototype.collectionIndexes = function (entityClassOrName) {\n        var metadata = this.connection.getMetadata(entityClassOrName);\n        return this.queryRunner.collectionIndexes(metadata.tableName);\n    };\n    /**\n     * Retrieve all the indexes on the collection.\n     */\n    MongoEntityManager.prototype.collectionIndexExists = function (entityClassOrName, indexes) {\n        var metadata = this.connection.getMetadata(entityClassOrName);\n        return this.queryRunner.collectionIndexExists(metadata.tableName, indexes);\n    };\n    /**\n     * Retrieves this collections index info.\n     */\n    MongoEntityManager.prototype.collectionIndexInformation = function (entityClassOrName, options) {\n        var metadata = this.connection.getMetadata(entityClassOrName);\n        return this.queryRunner.collectionIndexInformation(metadata.tableName, options);\n    };\n    /**\n     * Initiate an In order bulk write operation, operations will be serially executed in the order they are added, creating a new operation for each switch in types.\n     */\n    MongoEntityManager.prototype.initializeOrderedBulkOp = function (entityClassOrName, options) {\n        var metadata = this.connection.getMetadata(entityClassOrName);\n        return this.queryRunner.initializeOrderedBulkOp(metadata.tableName, options);\n    };\n    /**\n     * Initiate a Out of order batch write operation. All operations will be buffered into insert/update/remove commands executed out of order.\n     */\n    MongoEntityManager.prototype.initializeUnorderedBulkOp = function (entityClassOrName, options) {\n        var metadata = this.connection.getMetadata(entityClassOrName);\n        return this.queryRunner.initializeUnorderedBulkOp(metadata.tableName, options);\n    };\n    /**\n     * Inserts an array of documents into MongoDB.\n     */\n    MongoEntityManager.prototype.insertMany = function (entityClassOrName, docs, options) {\n        var metadata = this.connection.getMetadata(entityClassOrName);\n        return this.queryRunner.insertMany(metadata.tableName, docs, options);\n    };\n    /**\n     * Inserts a single document into MongoDB.\n     */\n    MongoEntityManager.prototype.insertOne = function (entityClassOrName, doc, options) {\n        var metadata = this.connection.getMetadata(entityClassOrName);\n        return this.queryRunner.insertOne(metadata.tableName, doc, options);\n    };\n    /**\n     * Returns if the collection is a capped collection.\n     */\n    MongoEntityManager.prototype.isCapped = function (entityClassOrName) {\n        var metadata = this.connection.getMetadata(entityClassOrName);\n        return this.queryRunner.isCapped(metadata.tableName);\n    };\n    /**\n     * Get the list of all indexes information for the collection.\n     */\n    MongoEntityManager.prototype.listCollectionIndexes = function (entityClassOrName, options) {\n        var metadata = this.connection.getMetadata(entityClassOrName);\n        return this.queryRunner.listCollectionIndexes(metadata.tableName, options);\n    };\n    /**\n     * Run Map Reduce across a collection. Be aware that the inline option for out will return an array of results not a collection.\n     */\n    MongoEntityManager.prototype.mapReduce = function (entityClassOrName, map, reduce, options) {\n        var metadata = this.connection.getMetadata(entityClassOrName);\n        return this.queryRunner.mapReduce(metadata.tableName, map, reduce, options);\n    };\n    /**\n     * Return N number of parallel cursors for a collection allowing parallel reading of entire collection.\n     * There are no ordering guarantees for returned results.\n     */\n    MongoEntityManager.prototype.parallelCollectionScan = function (entityClassOrName, options) {\n        var metadata = this.connection.getMetadata(entityClassOrName);\n        return this.queryRunner.parallelCollectionScan(metadata.tableName, options);\n    };\n    /**\n     * Reindex all indexes on the collection Warning: reIndex is a blocking operation (indexes are rebuilt in the foreground) and will be slow for large collections.\n     */\n    MongoEntityManager.prototype.reIndex = function (entityClassOrName) {\n        var metadata = this.connection.getMetadata(entityClassOrName);\n        return this.queryRunner.reIndex(metadata.tableName);\n    };\n    /**\n     * Reindex all indexes on the collection Warning: reIndex is a blocking operation (indexes are rebuilt in the foreground) and will be slow for large collections.\n     */\n    MongoEntityManager.prototype.rename = function (entityClassOrName, newName, options) {\n        var metadata = this.connection.getMetadata(entityClassOrName);\n        return this.queryRunner.rename(metadata.tableName, newName, options);\n    };\n    /**\n     * Replace a document on MongoDB.\n     */\n    MongoEntityManager.prototype.replaceOne = function (entityClassOrName, query, doc, options) {\n        var metadata = this.connection.getMetadata(entityClassOrName);\n        return this.queryRunner.replaceOne(metadata.tableName, query, doc, options);\n    };\n    /**\n     * Get all the collection statistics.\n     */\n    MongoEntityManager.prototype.stats = function (entityClassOrName, options) {\n        var metadata = this.connection.getMetadata(entityClassOrName);\n        return this.queryRunner.stats(metadata.tableName, options);\n    };\n    /**\n     * Update multiple documents on MongoDB.\n     */\n    MongoEntityManager.prototype.updateMany = function (entityClassOrName, query, update, options) {\n        var metadata = this.connection.getMetadata(entityClassOrName);\n        return this.queryRunner.updateMany(metadata.tableName, query, update, options);\n    };\n    /**\n     * Update a single document on MongoDB.\n     */\n    MongoEntityManager.prototype.updateOne = function (entityClassOrName, query, update, options) {\n        var metadata = this.connection.getMetadata(entityClassOrName);\n        return this.queryRunner.updateOne(metadata.tableName, query, update, options);\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Converts FindManyOptions to mongodb query.\n     */\n    MongoEntityManager.prototype.convertFindManyOptionsOrConditionsToMongodbQuery = function (optionsOrConditions) {\n        if (!optionsOrConditions)\n            return undefined;\n        if (FindOptionsUtils_1.FindOptionsUtils.isFindManyOptions(optionsOrConditions))\n            // If where condition is passed as a string which contains sql we have to ignore\n            // as mongo is not a sql database\n            return typeof optionsOrConditions.where === \"string\"\n                ? {}\n                : optionsOrConditions.where;\n        return optionsOrConditions;\n    };\n    /**\n     * Converts FindOneOptions to mongodb query.\n     */\n    MongoEntityManager.prototype.convertFindOneOptionsOrConditionsToMongodbQuery = function (optionsOrConditions) {\n        if (!optionsOrConditions)\n            return undefined;\n        if (FindOptionsUtils_1.FindOptionsUtils.isFindOneOptions(optionsOrConditions))\n            // If where condition is passed as a string which contains sql we have to ignore\n            // as mongo is not a sql database\n            return typeof optionsOrConditions.where === \"string\"\n                ? {}\n                : optionsOrConditions.where;\n        return optionsOrConditions;\n    };\n    /**\n     * Converts FindOptions into mongodb order by criteria.\n     */\n    MongoEntityManager.prototype.convertFindOptionsOrderToOrderCriteria = function (order) {\n        return Object.keys(order).reduce(function (orderCriteria, key) {\n            switch (order[key]) {\n                case \"DESC\":\n                    orderCriteria[key] = -1;\n                    break;\n                case \"ASC\":\n                    orderCriteria[key] = 1;\n                    break;\n                default:\n                    orderCriteria[key] = order[key];\n            }\n            return orderCriteria;\n        }, {});\n    };\n    /**\n     * Ensures given id is an id for query.\n     */\n    MongoEntityManager.prototype.convertMixedCriteria = function (metadata, idMap) {\n        if (idMap instanceof Object) {\n            return metadata.columns.reduce(function (query, column) {\n                var columnValue = column.getEntityValue(idMap);\n                if (columnValue !== undefined)\n                    query[column.databasePath] = columnValue;\n                return query;\n            }, {});\n        }\n        // means idMap is just object id\n        var objectIdInstance = PlatformTools_1.PlatformTools.load(\"mongodb\").ObjectID;\n        return {\n            \"_id\": (idMap instanceof objectIdInstance) ? idMap : new objectIdInstance(idMap)\n        };\n    };\n    /**\n     * Overrides cursor's toArray and next methods to convert results to entity automatically.\n     */\n    MongoEntityManager.prototype.applyEntityTransformationToCursor = function (metadata, cursor) {\n        var ParentCursor = PlatformTools_1.PlatformTools.load(\"mongodb\").Cursor;\n        cursor.toArray = function (callback) {\n            if (callback) {\n                ParentCursor.prototype.toArray.call(this, function (error, results) {\n                    if (error) {\n                        callback(error, results);\n                        return;\n                    }\n                    var transformer = new DocumentToEntityTransformer_1.DocumentToEntityTransformer();\n                    return callback(error, transformer.transformAll(results, metadata));\n                });\n            }\n            else {\n                return ParentCursor.prototype.toArray.call(this).then(function (results) {\n                    var transformer = new DocumentToEntityTransformer_1.DocumentToEntityTransformer();\n                    return transformer.transformAll(results, metadata);\n                });\n            }\n        };\n        cursor.next = function (callback) {\n            if (callback) {\n                ParentCursor.prototype.next.call(this, function (error, result) {\n                    if (error || !result) {\n                        callback(error, result);\n                        return;\n                    }\n                    var transformer = new DocumentToEntityTransformer_1.DocumentToEntityTransformer();\n                    return callback(error, transformer.transform(result, metadata));\n                });\n            }\n            else {\n                return ParentCursor.prototype.next.call(this).then(function (result) {\n                    if (!result)\n                        return result;\n                    var transformer = new DocumentToEntityTransformer_1.DocumentToEntityTransformer();\n                    return transformer.transform(result, metadata);\n                });\n            }\n        };\n    };\n    return MongoEntityManager;\n}(EntityManager_1.EntityManager));\nexports.MongoEntityManager = MongoEntityManager;\n\n//# sourceMappingURL=MongoEntityManager.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/entity-manager/MongoEntityManager.js?");

/***/ }),

/***/ "./node_modules/typeorm/entity-manager/SqljsEntityManager.js":
/*!*******************************************************************!*\
  !*** ./node_modules/typeorm/entity-manager/SqljsEntityManager.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar EntityManager_1 = __webpack_require__(/*! ./EntityManager */ \"./node_modules/typeorm/entity-manager/EntityManager.js\");\n/**\n * A special EntityManager that includes import/export and load/save function\n * that are unique to Sql.js.\n */\nvar SqljsEntityManager = /** @class */ (function (_super) {\n    __extends(SqljsEntityManager, _super);\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function SqljsEntityManager(connection, queryRunner) {\n        var _this = _super.call(this, connection, queryRunner) || this;\n        _this.driver = connection.driver;\n        return _this;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Loads either the definition from a file (Node.js) or localstorage (browser)\n     * or uses the given definition to open a new database.\n     */\n    SqljsEntityManager.prototype.loadDatabase = function (fileNameOrLocalStorageOrData) {\n        this.driver.load(fileNameOrLocalStorageOrData);\n    };\n    /**\n     * Saves the current database to a file (Node.js) or localstorage (browser)\n     * if fileNameOrLocalStorage is not set options.location is used.\n     */\n    SqljsEntityManager.prototype.saveDatabase = function (fileNameOrLocalStorage) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.driver.save(fileNameOrLocalStorage)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Returns the current database definition.\n     */\n    SqljsEntityManager.prototype.exportDatabase = function () {\n        return this.driver.export();\n    };\n    return SqljsEntityManager;\n}(EntityManager_1.EntityManager));\nexports.SqljsEntityManager = SqljsEntityManager;\n\n//# sourceMappingURL=SqljsEntityManager.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/entity-manager/SqljsEntityManager.js?");

/***/ }),

/***/ "./node_modules/typeorm/entity-schema/EntitySchema.js":
/*!************************************************************!*\
  !*** ./node_modules/typeorm/entity-schema/EntitySchema.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Interface for entity metadata mappings stored inside \"schemas\" instead of models decorated by decorators.\n */\nvar EntitySchema = /** @class */ (function () {\n    function EntitySchema(options) {\n        this.options = options;\n    }\n    return EntitySchema;\n}());\nexports.EntitySchema = EntitySchema;\n\n//# sourceMappingURL=EntitySchema.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/entity-schema/EntitySchema.js?");

/***/ }),

/***/ "./node_modules/typeorm/entity-schema/EntitySchemaTransformer.js":
/*!***********************************************************************!*\
  !*** ./node_modules/typeorm/entity-schema/EntitySchemaTransformer.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MetadataArgsStorage_1 = __webpack_require__(/*! ../metadata-args/MetadataArgsStorage */ \"./node_modules/typeorm/metadata-args/MetadataArgsStorage.js\");\n/**\n * Transforms entity schema into metadata args storage.\n * The result will be just like entities read from decorators.\n */\nvar EntitySchemaTransformer = /** @class */ (function () {\n    function EntitySchemaTransformer() {\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Transforms entity schema into new metadata args storage object.\n     */\n    EntitySchemaTransformer.prototype.transform = function (schemas) {\n        var metadataArgsStorage = new MetadataArgsStorage_1.MetadataArgsStorage();\n        schemas.forEach(function (entitySchema) {\n            var options = entitySchema.options;\n            // add table metadata args from the schema\n            var tableMetadata = {\n                target: options.target || options.name,\n                name: options.tableName,\n                database: options.database,\n                schema: options.schema,\n                type: options.type || \"regular\",\n                orderBy: options.orderBy,\n                synchronize: options.synchronize\n            };\n            metadataArgsStorage.tables.push(tableMetadata);\n            // add columns metadata args from the schema\n            Object.keys(options.columns).forEach(function (columnName) {\n                var column = options.columns[columnName];\n                var mode = \"regular\";\n                if (column.createDate)\n                    mode = \"createDate\";\n                if (column.updateDate)\n                    mode = \"updateDate\";\n                if (column.version)\n                    mode = \"version\";\n                if (column.treeChildrenCount)\n                    mode = \"treeChildrenCount\";\n                if (column.treeLevel)\n                    mode = \"treeLevel\";\n                if (column.objectId)\n                    mode = \"objectId\";\n                var columnAgrs = {\n                    target: options.target || options.name,\n                    mode: mode,\n                    propertyName: columnName,\n                    options: {\n                        type: column.type,\n                        name: column.objectId ? \"_id\" : column.name,\n                        length: column.length,\n                        width: column.width,\n                        nullable: column.nullable,\n                        readonly: column.readonly,\n                        select: column.select,\n                        primary: column.primary,\n                        unique: column.unique,\n                        comment: column.comment,\n                        default: column.default,\n                        onUpdate: column.onUpdate,\n                        precision: column.precision,\n                        scale: column.scale,\n                        zerofill: column.zerofill,\n                        unsigned: column.unsigned,\n                        charset: column.charset,\n                        collation: column.collation,\n                        enum: column.enum,\n                        asExpression: column.asExpression,\n                        generatedType: column.generatedType,\n                        hstoreType: column.hstoreType,\n                        array: column.array,\n                        transformer: column.transformer\n                    }\n                };\n                metadataArgsStorage.columns.push(columnAgrs);\n                if (column.generated) {\n                    var generationArgs = {\n                        target: options.target || options.name,\n                        propertyName: columnName,\n                        strategy: typeof column.generated === \"string\" ? column.generated : \"increment\"\n                    };\n                    metadataArgsStorage.generations.push(generationArgs);\n                }\n            });\n            // add relation metadata args from the schema\n            if (options.relations) {\n                Object.keys(options.relations).forEach(function (relationName) {\n                    var relationSchema = options.relations[relationName];\n                    var relation = {\n                        target: options.target || options.name,\n                        propertyName: relationName,\n                        relationType: relationSchema.type,\n                        isLazy: relationSchema.lazy || false,\n                        type: relationSchema.target,\n                        inverseSideProperty: relationSchema.inverseSide,\n                        isTreeParent: relationSchema.treeParent,\n                        isTreeChildren: relationSchema.treeChildren,\n                        options: {\n                            eager: relationSchema.eager || false,\n                            cascade: relationSchema.cascade,\n                            nullable: relationSchema.nullable,\n                            onDelete: relationSchema.onDelete,\n                            onUpdate: relationSchema.onUpdate,\n                            primary: relationSchema.primary,\n                            persistence: relationSchema.persistence\n                        }\n                    };\n                    metadataArgsStorage.relations.push(relation);\n                    // add join column\n                    if (relationSchema.joinColumn) {\n                        if (typeof relationSchema.joinColumn === \"boolean\") {\n                            var joinColumn = {\n                                target: options.target || options.name,\n                                propertyName: relationName\n                            };\n                            metadataArgsStorage.joinColumns.push(joinColumn);\n                        }\n                        else {\n                            var joinColumn = {\n                                target: options.target || options.name,\n                                propertyName: relationName,\n                                name: relationSchema.joinColumn.name,\n                                referencedColumnName: relationSchema.joinColumn.referencedColumnName\n                            };\n                            metadataArgsStorage.joinColumns.push(joinColumn);\n                        }\n                    }\n                    // add join table\n                    if (relationSchema.joinTable) {\n                        if (typeof relationSchema.joinTable === \"boolean\") {\n                            var joinTable = {\n                                target: options.target || options.name,\n                                propertyName: relationName\n                            };\n                            metadataArgsStorage.joinTables.push(joinTable);\n                        }\n                        else {\n                            var joinTable = {\n                                target: options.target || options.name,\n                                propertyName: relationName,\n                                name: relationSchema.joinTable.name,\n                                database: relationSchema.joinTable.database,\n                                schema: relationSchema.joinTable.schema,\n                                joinColumns: (relationSchema.joinTable.joinColumn ? [relationSchema.joinTable.joinColumn] : relationSchema.joinTable.joinColumns),\n                                inverseJoinColumns: (relationSchema.joinTable.inverseJoinColumn ? [relationSchema.joinTable.inverseJoinColumn] : relationSchema.joinTable.inverseJoinColumns),\n                            };\n                            metadataArgsStorage.joinTables.push(joinTable);\n                        }\n                    }\n                });\n            }\n            // add index metadata args from the schema\n            if (options.indices) {\n                options.indices.forEach(function (index) {\n                    var indexAgrs = {\n                        target: options.target || options.name,\n                        name: index.name,\n                        unique: index.unique === true ? true : false,\n                        spatial: index.spatial === true ? true : false,\n                        fulltext: index.fulltext === true ? true : false,\n                        synchronize: index.synchronize === false ? false : true,\n                        where: index.where,\n                        sparse: index.sparse,\n                        columns: index.columns\n                    };\n                    metadataArgsStorage.indices.push(indexAgrs);\n                });\n            }\n            // add unique metadata args from the schema\n            if (options.uniques) {\n                options.uniques.forEach(function (unique) {\n                    var uniqueAgrs = {\n                        target: options.target || options.name,\n                        name: unique.name,\n                        columns: unique.columns\n                    };\n                    metadataArgsStorage.uniques.push(uniqueAgrs);\n                });\n            }\n            // add check metadata args from the schema\n            if (options.checks) {\n                options.checks.forEach(function (check) {\n                    var checkAgrs = {\n                        target: options.target || options.name,\n                        name: check.name,\n                        expression: check.expression\n                    };\n                    metadataArgsStorage.checks.push(checkAgrs);\n                });\n            }\n        });\n        return metadataArgsStorage;\n    };\n    return EntitySchemaTransformer;\n}());\nexports.EntitySchemaTransformer = EntitySchemaTransformer;\n\n//# sourceMappingURL=EntitySchemaTransformer.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/entity-schema/EntitySchemaTransformer.js?");

/***/ }),

/***/ "./node_modules/typeorm/error/AlreadyHasActiveConnectionError.js":
/*!***********************************************************************!*\
  !*** ./node_modules/typeorm/error/AlreadyHasActiveConnectionError.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Thrown when consumer tries to recreate connection with the same name, but previous connection was not closed yet.\n */\nvar AlreadyHasActiveConnectionError = /** @class */ (function (_super) {\n    __extends(AlreadyHasActiveConnectionError, _super);\n    function AlreadyHasActiveConnectionError(connectionName) {\n        var _this = _super.call(this) || this;\n        _this.name = \"AlreadyHasActiveConnectionError\";\n        Object.setPrototypeOf(_this, AlreadyHasActiveConnectionError.prototype);\n        _this.message = \"Cannot create a new connection named \\\"\" + connectionName + \"\\\", because connection with such name \" +\n            \"already exist and it now has an active connection session.\";\n        return _this;\n    }\n    return AlreadyHasActiveConnectionError;\n}(Error));\nexports.AlreadyHasActiveConnectionError = AlreadyHasActiveConnectionError;\n\n//# sourceMappingURL=AlreadyHasActiveConnectionError.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/error/AlreadyHasActiveConnectionError.js?");

/***/ }),

/***/ "./node_modules/typeorm/error/CannotAttachTreeChildrenEntityError.js":
/*!***************************************************************************!*\
  !*** ./node_modules/typeorm/error/CannotAttachTreeChildrenEntityError.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Thrown when user saves tree children entity but its parent is not saved yet.\n*/\nvar CannotAttachTreeChildrenEntityError = /** @class */ (function (_super) {\n    __extends(CannotAttachTreeChildrenEntityError, _super);\n    function CannotAttachTreeChildrenEntityError(entityName) {\n        var _this = _super.call(this) || this;\n        _this.name = \"CannotAttachTreeChildrenEntityError\";\n        Object.setPrototypeOf(_this, CannotAttachTreeChildrenEntityError.prototype);\n        _this.message = \"Cannot attach entity \\\"\" + entityName + \"\\\" to its parent. Please make sure parent is saved in the database before saving children nodes.\";\n        return _this;\n    }\n    return CannotAttachTreeChildrenEntityError;\n}(Error));\nexports.CannotAttachTreeChildrenEntityError = CannotAttachTreeChildrenEntityError;\n\n//# sourceMappingURL=CannotAttachTreeChildrenEntityError.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/error/CannotAttachTreeChildrenEntityError.js?");

/***/ }),

/***/ "./node_modules/typeorm/error/CannotConnectAlreadyConnectedError.js":
/*!**************************************************************************!*\
  !*** ./node_modules/typeorm/error/CannotConnectAlreadyConnectedError.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Thrown when consumer tries to connect when he already connected.\n */\nvar CannotConnectAlreadyConnectedError = /** @class */ (function (_super) {\n    __extends(CannotConnectAlreadyConnectedError, _super);\n    function CannotConnectAlreadyConnectedError(connectionName) {\n        var _this = _super.call(this) || this;\n        _this.name = \"CannotConnectAlreadyConnectedError\";\n        Object.setPrototypeOf(_this, CannotConnectAlreadyConnectedError.prototype);\n        _this.message = \"Cannot create a \\\"\" + connectionName + \"\\\" connection because connection to the database already established.\";\n        return _this;\n    }\n    return CannotConnectAlreadyConnectedError;\n}(Error));\nexports.CannotConnectAlreadyConnectedError = CannotConnectAlreadyConnectedError;\n\n//# sourceMappingURL=CannotConnectAlreadyConnectedError.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/error/CannotConnectAlreadyConnectedError.js?");

/***/ }),

/***/ "./node_modules/typeorm/error/CannotCreateEntityIdMapError.js":
/*!********************************************************************!*\
  !*** ./node_modules/typeorm/error/CannotCreateEntityIdMapError.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Thrown when user tries to create entity id map from the mixed id value,\n * but id value is a single value when entity requires multiple values.\n */\nvar CannotCreateEntityIdMapError = /** @class */ (function (_super) {\n    __extends(CannotCreateEntityIdMapError, _super);\n    function CannotCreateEntityIdMapError(metadata, id) {\n        var _this = _super.call(this) || this;\n        _this.name = \"CannotCreateEntityIdMapError\";\n        Object.setPrototypeOf(_this, CannotCreateEntityIdMapError.prototype);\n        var objectExample = metadata.primaryColumns.reduce(function (object, column, index) {\n            column.setEntityValue(object, index + 1);\n            return object;\n        }, {});\n        _this.message = \"Cannot use given entity id \\\"\" + id + \"\\\" because \\\"\" + metadata.targetName + \"\\\" contains multiple primary columns, you must provide object in following form: \" + JSON.stringify(objectExample) + \" as an id.\";\n        return _this;\n    }\n    return CannotCreateEntityIdMapError;\n}(Error));\nexports.CannotCreateEntityIdMapError = CannotCreateEntityIdMapError;\n\n//# sourceMappingURL=CannotCreateEntityIdMapError.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/error/CannotCreateEntityIdMapError.js?");

/***/ }),

/***/ "./node_modules/typeorm/error/CannotDetermineEntityError.js":
/*!******************************************************************!*\
  !*** ./node_modules/typeorm/error/CannotDetermineEntityError.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Thrown when user tries to save/remove/etc. constructor-less object (object literal) instead of entity.\n */\nvar CannotDetermineEntityError = /** @class */ (function (_super) {\n    __extends(CannotDetermineEntityError, _super);\n    function CannotDetermineEntityError(operation) {\n        var _this = _super.call(this) || this;\n        _this.name = \"CannotDetermineEntityError\";\n        Object.setPrototypeOf(_this, CannotDetermineEntityError.prototype);\n        _this.message = \"Cannot \" + operation + \", given value must be instance of entity class, instead object literal is given. Or you must specify an entity target to method call.\";\n        return _this;\n    }\n    return CannotDetermineEntityError;\n}(Error));\nexports.CannotDetermineEntityError = CannotDetermineEntityError;\n\n//# sourceMappingURL=CannotDetermineEntityError.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/error/CannotDetermineEntityError.js?");

/***/ }),

/***/ "./node_modules/typeorm/error/CannotExecuteNotConnectedError.js":
/*!**********************************************************************!*\
  !*** ./node_modules/typeorm/error/CannotExecuteNotConnectedError.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Thrown when consumer tries to execute operation allowed only if connection is opened.\n */\nvar CannotExecuteNotConnectedError = /** @class */ (function (_super) {\n    __extends(CannotExecuteNotConnectedError, _super);\n    function CannotExecuteNotConnectedError(connectionName) {\n        var _this = _super.call(this) || this;\n        _this.name = \"CannotExecuteNotConnectedError\";\n        Object.setPrototypeOf(_this, CannotExecuteNotConnectedError.prototype);\n        _this.message = \"Cannot execute operation on \\\"\" + connectionName + \"\\\" connection because connection is not yet established.\";\n        return _this;\n    }\n    return CannotExecuteNotConnectedError;\n}(Error));\nexports.CannotExecuteNotConnectedError = CannotExecuteNotConnectedError;\n\n//# sourceMappingURL=CannotExecuteNotConnectedError.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/error/CannotExecuteNotConnectedError.js?");

/***/ }),

/***/ "./node_modules/typeorm/error/CannotReflectMethodParameterTypeError.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/typeorm/error/CannotReflectMethodParameterTypeError.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Thrown when ORM cannot get method parameter's type.\n * Basically, when reflect-metadata is not available or tsconfig is not properly setup.\n */\nvar CannotReflectMethodParameterTypeError = /** @class */ (function (_super) {\n    __extends(CannotReflectMethodParameterTypeError, _super);\n    function CannotReflectMethodParameterTypeError(target, methodName) {\n        var _this = _super.call(this) || this;\n        _this.name = \"CannotReflectMethodParameterTypeError\";\n        Object.setPrototypeOf(_this, CannotReflectMethodParameterTypeError.prototype);\n        _this.message = \"Cannot get reflected type for a \\\"\" + methodName + \"\\\" method's parameter of \\\"\" + target.name + \"\\\" class. \" +\n            \"Make sure you have turned on an \\\"emitDecoratorMetadata\\\": true option in tsconfig.json. \" +\n            \"Also make sure you have imported \\\"reflect-metadata\\\" on top of the main entry file in your application.\";\n        return _this;\n    }\n    return CannotReflectMethodParameterTypeError;\n}(Error));\nexports.CannotReflectMethodParameterTypeError = CannotReflectMethodParameterTypeError;\n\n//# sourceMappingURL=CannotReflectMethodParameterTypeError.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/error/CannotReflectMethodParameterTypeError.js?");

/***/ }),

/***/ "./node_modules/typeorm/error/CircularRelationsError.js":
/*!**************************************************************!*\
  !*** ./node_modules/typeorm/error/CircularRelationsError.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Thrown when circular relations detected with nullable set to false.\n */\nvar CircularRelationsError = /** @class */ (function (_super) {\n    __extends(CircularRelationsError, _super);\n    function CircularRelationsError(path) {\n        var _this = _super.call(this) || this;\n        _this.name = \"CircularRelationsError\";\n        Object.setPrototypeOf(_this, CircularRelationsError.prototype);\n        _this.message = \"Circular relations detected: \" + path + \". To resolve this issue you need to set nullable: false somewhere in this dependency structure.\";\n        return _this;\n    }\n    return CircularRelationsError;\n}(Error));\nexports.CircularRelationsError = CircularRelationsError;\n\n//# sourceMappingURL=CircularRelationsError.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/error/CircularRelationsError.js?");

/***/ }),

/***/ "./node_modules/typeorm/error/ColumnTypeUndefinedError.js":
/*!****************************************************************!*\
  !*** ./node_modules/typeorm/error/ColumnTypeUndefinedError.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Thrown when ORM cannot get column's type automatically.\n * Basically, when reflect-metadata is not available or tsconfig is not properly setup.\n */\nvar ColumnTypeUndefinedError = /** @class */ (function (_super) {\n    __extends(ColumnTypeUndefinedError, _super);\n    function ColumnTypeUndefinedError(object, propertyName) {\n        var _this = _super.call(this) || this;\n        _this.name = \"ColumnTypeUndefinedError\";\n        Object.setPrototypeOf(_this, ColumnTypeUndefinedError.prototype);\n        _this.message = \"Column type for \" + object.constructor.name + \"#\" + propertyName + \" is not defined and cannot be guessed. \" +\n            \"Make sure you have turned on an \\\"emitDecoratorMetadata\\\": true option in tsconfig.json. \" +\n            \"Also make sure you have imported \\\"reflect-metadata\\\" on top of the main entry file in your application (before any entity imported).\" +\n            \"If you are using JavaScript instead of TypeScript you must explicitly provide a column type.\";\n        return _this;\n    }\n    return ColumnTypeUndefinedError;\n}(Error));\nexports.ColumnTypeUndefinedError = ColumnTypeUndefinedError;\n\n//# sourceMappingURL=ColumnTypeUndefinedError.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/error/ColumnTypeUndefinedError.js?");

/***/ }),

/***/ "./node_modules/typeorm/error/ConnectionIsNotSetError.js":
/*!***************************************************************!*\
  !*** ./node_modules/typeorm/error/ConnectionIsNotSetError.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Thrown when user tries to execute operation that requires connection to be established.\n */\nvar ConnectionIsNotSetError = /** @class */ (function (_super) {\n    __extends(ConnectionIsNotSetError, _super);\n    function ConnectionIsNotSetError(dbType) {\n        var _this = _super.call(this) || this;\n        _this.name = \"ConnectionIsNotSetError\";\n        Object.setPrototypeOf(_this, ConnectionIsNotSetError.prototype);\n        _this.message = \"Connection with \" + dbType + \" database is not established. Check connection configuration.\";\n        return _this;\n    }\n    return ConnectionIsNotSetError;\n}(Error));\nexports.ConnectionIsNotSetError = ConnectionIsNotSetError;\n\n//# sourceMappingURL=ConnectionIsNotSetError.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/error/ConnectionIsNotSetError.js?");

/***/ }),

/***/ "./node_modules/typeorm/error/ConnectionNotFoundError.js":
/*!***************************************************************!*\
  !*** ./node_modules/typeorm/error/ConnectionNotFoundError.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Thrown when consumer tries to get connection that does not exist.\n */\nvar ConnectionNotFoundError = /** @class */ (function (_super) {\n    __extends(ConnectionNotFoundError, _super);\n    function ConnectionNotFoundError(name) {\n        var _this = _super.call(this) || this;\n        _this.name = \"ConnectionNotFoundError\";\n        Object.setPrototypeOf(_this, ConnectionNotFoundError.prototype);\n        _this.message = \"Connection \\\"\" + name + \"\\\" was not found.\";\n        return _this;\n    }\n    return ConnectionNotFoundError;\n}(Error));\nexports.ConnectionNotFoundError = ConnectionNotFoundError;\n\n//# sourceMappingURL=ConnectionNotFoundError.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/error/ConnectionNotFoundError.js?");

/***/ }),

/***/ "./node_modules/typeorm/error/CustomRepositoryCannotInheritRepositoryError.js":
/*!************************************************************************************!*\
  !*** ./node_modules/typeorm/error/CustomRepositoryCannotInheritRepositoryError.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Thrown if custom repository inherits Repository class however entity is not set in @EntityRepository decorator.\n */\nvar CustomRepositoryCannotInheritRepositoryError = /** @class */ (function (_super) {\n    __extends(CustomRepositoryCannotInheritRepositoryError, _super);\n    function CustomRepositoryCannotInheritRepositoryError(repository) {\n        var _this = _super.call(this) || this;\n        _this.name = \"CustomRepositoryCannotInheritRepositoryError\";\n        Object.setPrototypeOf(_this, CustomRepositoryCannotInheritRepositoryError.prototype);\n        _this.message = \"Custom entity repository \" + (repository instanceof Function ? repository.name : repository.constructor.name) + \" \" +\n            \" cannot inherit Repository class without entity being set in the @EntityRepository decorator.\";\n        return _this;\n    }\n    return CustomRepositoryCannotInheritRepositoryError;\n}(Error));\nexports.CustomRepositoryCannotInheritRepositoryError = CustomRepositoryCannotInheritRepositoryError;\n\n//# sourceMappingURL=CustomRepositoryCannotInheritRepositoryError.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/error/CustomRepositoryCannotInheritRepositoryError.js?");

/***/ }),

/***/ "./node_modules/typeorm/error/CustomRepositoryDoesNotHaveEntityError.js":
/*!******************************************************************************!*\
  !*** ./node_modules/typeorm/error/CustomRepositoryDoesNotHaveEntityError.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Thrown if custom repositories that extend AbstractRepository classes does not have managed entity.\n */\nvar CustomRepositoryDoesNotHaveEntityError = /** @class */ (function (_super) {\n    __extends(CustomRepositoryDoesNotHaveEntityError, _super);\n    function CustomRepositoryDoesNotHaveEntityError(repository) {\n        var _this = _super.call(this) || this;\n        _this.name = \"CustomRepositoryDoesNotHaveEntityError\";\n        Object.setPrototypeOf(_this, CustomRepositoryDoesNotHaveEntityError.prototype);\n        _this.message = \"Custom repository \" + (repository instanceof Function ? repository.name : repository.constructor.name) + \" does not have managed entity. \" +\n            \"Did you forget to specify entity for it @EntityRepository(MyEntity)? \";\n        return _this;\n    }\n    return CustomRepositoryDoesNotHaveEntityError;\n}(Error));\nexports.CustomRepositoryDoesNotHaveEntityError = CustomRepositoryDoesNotHaveEntityError;\n\n//# sourceMappingURL=CustomRepositoryDoesNotHaveEntityError.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/error/CustomRepositoryDoesNotHaveEntityError.js?");

/***/ }),

/***/ "./node_modules/typeorm/error/CustomRepositoryNotFoundError.js":
/*!*********************************************************************!*\
  !*** ./node_modules/typeorm/error/CustomRepositoryNotFoundError.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Thrown if custom repository was not found.\n */\nvar CustomRepositoryNotFoundError = /** @class */ (function (_super) {\n    __extends(CustomRepositoryNotFoundError, _super);\n    function CustomRepositoryNotFoundError(repository) {\n        var _this = _super.call(this) || this;\n        _this.name = \"CustomRepositoryNotFoundError\";\n        Object.setPrototypeOf(_this, CustomRepositoryNotFoundError.prototype);\n        _this.message = \"Custom repository \" + (repository instanceof Function ? repository.name : repository.constructor.name) + \" was not found. \" +\n            \"Did you forgot to put @EntityRepository decorator on it?\";\n        return _this;\n    }\n    return CustomRepositoryNotFoundError;\n}(Error));\nexports.CustomRepositoryNotFoundError = CustomRepositoryNotFoundError;\n\n//# sourceMappingURL=CustomRepositoryNotFoundError.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/error/CustomRepositoryNotFoundError.js?");

/***/ }),

/***/ "./node_modules/typeorm/error/DataTypeNotSupportedError.js":
/*!*****************************************************************!*\
  !*** ./node_modules/typeorm/error/DataTypeNotSupportedError.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DataTypeNotSupportedError = /** @class */ (function (_super) {\n    __extends(DataTypeNotSupportedError, _super);\n    function DataTypeNotSupportedError(column, dataType, database) {\n        var _this = _super.call(this) || this;\n        _this.name = \"DataTypeNotSupportedError\";\n        Object.setPrototypeOf(_this, DataTypeNotSupportedError.prototype);\n        var type = typeof dataType === \"string\" ? dataType : dataType.name;\n        _this.message = \"Data type \\\"\" + type + \"\\\" in \\\"\" + column.entityMetadata.targetName + \".\" + column.propertyName + \"\\\" is not supported by \\\"\" + database + \"\\\" database.\";\n        return _this;\n    }\n    return DataTypeNotSupportedError;\n}(Error));\nexports.DataTypeNotSupportedError = DataTypeNotSupportedError;\n\n//# sourceMappingURL=DataTypeNotSupportedError.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/error/DataTypeNotSupportedError.js?");

/***/ }),

/***/ "./node_modules/typeorm/error/DriverOptionNotSetError.js":
/*!***************************************************************!*\
  !*** ./node_modules/typeorm/error/DriverOptionNotSetError.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Thrown if some required driver's option is not set.\n */\nvar DriverOptionNotSetError = /** @class */ (function (_super) {\n    __extends(DriverOptionNotSetError, _super);\n    function DriverOptionNotSetError(optionName) {\n        var _this = _super.call(this) || this;\n        _this.name = \"DriverOptionNotSetError\";\n        Object.setPrototypeOf(_this, DriverOptionNotSetError.prototype);\n        _this.message = \"Driver option (\" + optionName + \") is not set. Please set it to perform connection to the database.\";\n        return _this;\n    }\n    return DriverOptionNotSetError;\n}(Error));\nexports.DriverOptionNotSetError = DriverOptionNotSetError;\n\n//# sourceMappingURL=DriverOptionNotSetError.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/error/DriverOptionNotSetError.js?");

/***/ }),

/***/ "./node_modules/typeorm/error/DriverPackageNotInstalledError.js":
/*!**********************************************************************!*\
  !*** ./node_modules/typeorm/error/DriverPackageNotInstalledError.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Thrown when required driver's package is not installed.\n */\nvar DriverPackageNotInstalledError = /** @class */ (function (_super) {\n    __extends(DriverPackageNotInstalledError, _super);\n    function DriverPackageNotInstalledError(driverName, packageName) {\n        var _this = _super.call(this) || this;\n        _this.name = \"DriverPackageNotInstalledError\";\n        Object.setPrototypeOf(_this, DriverPackageNotInstalledError.prototype);\n        _this.message = driverName + \" package has not been found installed. Try to install it: npm install \" + packageName + \" --save\";\n        return _this;\n    }\n    return DriverPackageNotInstalledError;\n}(Error));\nexports.DriverPackageNotInstalledError = DriverPackageNotInstalledError;\n\n//# sourceMappingURL=DriverPackageNotInstalledError.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/error/DriverPackageNotInstalledError.js?");

/***/ }),

/***/ "./node_modules/typeorm/error/EntityMetadataNotFoundError.js":
/*!*******************************************************************!*\
  !*** ./node_modules/typeorm/error/EntityMetadataNotFoundError.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar index_1 = __webpack_require__(/*! ../index */ \"./node_modules/typeorm/index.js\");\n/**\n */\nvar EntityMetadataNotFoundError = /** @class */ (function (_super) {\n    __extends(EntityMetadataNotFoundError, _super);\n    function EntityMetadataNotFoundError(target) {\n        var _this = _super.call(this) || this;\n        _this.name = \"EntityMetadataNotFound\";\n        Object.setPrototypeOf(_this, EntityMetadataNotFoundError.prototype);\n        var targetName;\n        if (target instanceof index_1.EntitySchema) {\n            targetName = target.options.name;\n        }\n        else if (typeof target === \"function\") {\n            targetName = target.name;\n        }\n        else {\n            targetName = target;\n        }\n        _this.message = \"No metadata for \\\"\" + targetName + \"\\\" was found.\";\n        return _this;\n    }\n    return EntityMetadataNotFoundError;\n}(Error));\nexports.EntityMetadataNotFoundError = EntityMetadataNotFoundError;\n\n//# sourceMappingURL=EntityMetadataNotFoundError.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/error/EntityMetadataNotFoundError.js?");

/***/ }),

/***/ "./node_modules/typeorm/error/EntityNotFoundError.js":
/*!***********************************************************!*\
  !*** ./node_modules/typeorm/error/EntityNotFoundError.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar index_1 = __webpack_require__(/*! ../index */ \"./node_modules/typeorm/index.js\");\n/**\n * Thrown when no result could be found in methods which are not allowed to return undefined or an empty set.\n */\nvar EntityNotFoundError = /** @class */ (function (_super) {\n    __extends(EntityNotFoundError, _super);\n    function EntityNotFoundError(entityClass, criteria) {\n        var _this = _super.call(this) || this;\n        _this.name = \"EntityNotFound\";\n        Object.setPrototypeOf(_this, EntityNotFoundError.prototype);\n        var targetName;\n        if (entityClass instanceof index_1.EntitySchema) {\n            targetName = entityClass.options.name;\n        }\n        else if (typeof entityClass === \"function\") {\n            targetName = entityClass.name;\n        }\n        else {\n            targetName = entityClass;\n        }\n        var criteriaString = _this.stringifyCriteria(criteria);\n        _this.message = \"Could not find any entity of type \\\"\" + targetName + \"\\\" matching: \" + criteriaString;\n        return _this;\n    }\n    EntityNotFoundError.prototype.stringifyCriteria = function (criteria) {\n        try {\n            return JSON.stringify(criteria, null, 4);\n        }\n        catch (e) { }\n        return \"\" + criteria;\n    };\n    return EntityNotFoundError;\n}(Error));\nexports.EntityNotFoundError = EntityNotFoundError;\n\n//# sourceMappingURL=EntityNotFoundError.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/error/EntityNotFoundError.js?");

/***/ }),

/***/ "./node_modules/typeorm/error/FindRelationsNotFoundError.js":
/*!******************************************************************!*\
  !*** ./node_modules/typeorm/error/FindRelationsNotFoundError.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Thrown when relations specified in the find options were not found in the entities.\n*/\nvar FindRelationsNotFoundError = /** @class */ (function (_super) {\n    __extends(FindRelationsNotFoundError, _super);\n    function FindRelationsNotFoundError(notFoundRelations) {\n        var _this = _super.call(this) || this;\n        Object.setPrototypeOf(_this, FindRelationsNotFoundError.prototype);\n        if (notFoundRelations.length === 1) {\n            _this.message = \"Relation \\\"\" + notFoundRelations[0] + \"\\\" was not found, please check if it is correct and really exist in your entity.\";\n        }\n        else {\n            _this.message = \"Relations \" + notFoundRelations.map(function (relation) { return \"\\\"\" + relation + \"\\\"\"; }).join(\", \") + \" were not found, please check if relations are correct and they exist in your entities.\";\n        }\n        return _this;\n    }\n    return FindRelationsNotFoundError;\n}(Error));\nexports.FindRelationsNotFoundError = FindRelationsNotFoundError;\n\n//# sourceMappingURL=FindRelationsNotFoundError.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/error/FindRelationsNotFoundError.js?");

/***/ }),

/***/ "./node_modules/typeorm/error/InitializedRelationError.js":
/*!****************************************************************!*\
  !*** ./node_modules/typeorm/error/InitializedRelationError.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Thrown when relation has array initialized which is forbidden my ORM.\n *\n * @see https://github.com/typeorm/typeorm/issues/1319\n * @see http://typeorm.io/#/relations-faq/avoid-relation-property-initializers\n */\nvar InitializedRelationError = /** @class */ (function (_super) {\n    __extends(InitializedRelationError, _super);\n    function InitializedRelationError(relation) {\n        var _this = _super.call(this) || this;\n        Object.setPrototypeOf(_this, InitializedRelationError.prototype);\n        _this.message = \"Array initializations are not allowed in entity relations. \" +\n            (\"Please remove array initialization (= []) from \\\"\" + relation.entityMetadata.targetName + \"#\" + relation.propertyPath + \"\\\". \") +\n            \"This is ORM requirement to make relations to work properly. Refer docs for more information.\";\n        return _this;\n    }\n    return InitializedRelationError;\n}(Error));\nexports.InitializedRelationError = InitializedRelationError;\n\n//# sourceMappingURL=InitializedRelationError.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/error/InitializedRelationError.js?");

/***/ }),

/***/ "./node_modules/typeorm/error/InsertValuesMissingError.js":
/*!****************************************************************!*\
  !*** ./node_modules/typeorm/error/InsertValuesMissingError.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Thrown when user tries to insert using QueryBuilder but do not specify what to insert.\n */\nvar InsertValuesMissingError = /** @class */ (function (_super) {\n    __extends(InsertValuesMissingError, _super);\n    function InsertValuesMissingError() {\n        var _this = _super.call(this) || this;\n        _this.name = \"InsertValuesMissingError\";\n        Object.setPrototypeOf(_this, InsertValuesMissingError.prototype);\n        _this.message = \"Cannot perform insert query because values are not defined. Call \\\"qb.values(...)\\\" method to specify inserted values.\";\n        return _this;\n    }\n    return InsertValuesMissingError;\n}(Error));\nexports.InsertValuesMissingError = InsertValuesMissingError;\n\n//# sourceMappingURL=InsertValuesMissingError.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/error/InsertValuesMissingError.js?");

/***/ }),

/***/ "./node_modules/typeorm/error/LimitOnUpdateNotSupportedError.js":
/*!**********************************************************************!*\
  !*** ./node_modules/typeorm/error/LimitOnUpdateNotSupportedError.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Thrown when user tries to build an UPDATE query with LIMIT but the database does not support it.\n*/\nvar LimitOnUpdateNotSupportedError = /** @class */ (function (_super) {\n    __extends(LimitOnUpdateNotSupportedError, _super);\n    function LimitOnUpdateNotSupportedError() {\n        var _this = _super.call(this) || this;\n        _this.name = \"LimitOnUpdateNotSupportedError\";\n        Object.setPrototypeOf(_this, LimitOnUpdateNotSupportedError.prototype);\n        _this.message = \"Your database does not support LIMIT on UPDATE statements.\";\n        return _this;\n    }\n    return LimitOnUpdateNotSupportedError;\n}(Error));\nexports.LimitOnUpdateNotSupportedError = LimitOnUpdateNotSupportedError;\n\n//# sourceMappingURL=LimitOnUpdateNotSupportedError.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/error/LimitOnUpdateNotSupportedError.js?");

/***/ }),

/***/ "./node_modules/typeorm/error/LockNotSupportedOnGivenDriverError.js":
/*!**************************************************************************!*\
  !*** ./node_modules/typeorm/error/LockNotSupportedOnGivenDriverError.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Thrown when selected sql driver does not supports locking.\n */\nvar LockNotSupportedOnGivenDriverError = /** @class */ (function (_super) {\n    __extends(LockNotSupportedOnGivenDriverError, _super);\n    function LockNotSupportedOnGivenDriverError() {\n        var _this = _super.call(this) || this;\n        _this.name = \"LockNotSupportedOnGivenDriverError\";\n        Object.setPrototypeOf(_this, LockNotSupportedOnGivenDriverError.prototype);\n        _this.message = \"Locking not supported on given driver.\";\n        return _this;\n    }\n    return LockNotSupportedOnGivenDriverError;\n}(Error));\nexports.LockNotSupportedOnGivenDriverError = LockNotSupportedOnGivenDriverError;\n\n//# sourceMappingURL=LockNotSupportedOnGivenDriverError.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/error/LockNotSupportedOnGivenDriverError.js?");

/***/ }),

/***/ "./node_modules/typeorm/error/MissingDriverError.js":
/*!**********************************************************!*\
  !*** ./node_modules/typeorm/error/MissingDriverError.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Thrown when consumer specifies driver type that does not exist or supported.\n */\nvar MissingDriverError = /** @class */ (function (_super) {\n    __extends(MissingDriverError, _super);\n    function MissingDriverError(driverType) {\n        var _this = _super.call(this) || this;\n        _this.name = \"MissingDriverError\";\n        Object.setPrototypeOf(_this, MissingDriverError.prototype);\n        _this.message = \"Wrong driver: \\\"\" + driverType + \"\\\" given. Supported drivers are: \\\"cordova\\\", \\\"expo\\\", \\\"mariadb\\\", \\\"mongodb\\\", \\\"mssql\\\", \\\"mysql\\\", \\\"oracle\\\", \\\"postgres\\\", \\\"sqlite\\\", \\\"sqljs\\\", \\\"react-native\\\".\";\n        return _this;\n    }\n    return MissingDriverError;\n}(Error));\nexports.MissingDriverError = MissingDriverError;\n\n//# sourceMappingURL=MissingDriverError.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/error/MissingDriverError.js?");

/***/ }),

/***/ "./node_modules/typeorm/error/MissingPrimaryColumnError.js":
/*!*****************************************************************!*\
  !*** ./node_modules/typeorm/error/MissingPrimaryColumnError.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n */\nvar MissingPrimaryColumnError = /** @class */ (function (_super) {\n    __extends(MissingPrimaryColumnError, _super);\n    function MissingPrimaryColumnError(entityMetadata) {\n        var _this = _super.call(this) || this;\n        _this.name = \"MissingPrimaryColumnError\";\n        Object.setPrototypeOf(_this, MissingPrimaryColumnError.prototype);\n        _this.message = \"Entity \\\"\" + entityMetadata.name + \"\\\" does not have a primary column. Primary column is required to \" +\n            \"have in all your entities. Use @PrimaryColumn decorator to add a primary column to your entity.\";\n        return _this;\n    }\n    return MissingPrimaryColumnError;\n}(Error));\nexports.MissingPrimaryColumnError = MissingPrimaryColumnError;\n\n//# sourceMappingURL=MissingPrimaryColumnError.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/error/MissingPrimaryColumnError.js?");

/***/ }),

/***/ "./node_modules/typeorm/error/MustBeEntityError.js":
/*!*********************************************************!*\
  !*** ./node_modules/typeorm/error/MustBeEntityError.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Thrown when method expects entity but instead something else is given.\n */\nvar MustBeEntityError = /** @class */ (function (_super) {\n    __extends(MustBeEntityError, _super);\n    function MustBeEntityError(operation, wrongValue) {\n        var _this = _super.call(this) || this;\n        _this.name = \"MustBeEntityError\";\n        Object.setPrototypeOf(_this, MustBeEntityError.prototype);\n        _this.message = \"Cannot \" + operation + \", given value must be an entity, instead \\\"\" + wrongValue + \"\\\" is given.\";\n        return _this;\n    }\n    return MustBeEntityError;\n}(Error));\nexports.MustBeEntityError = MustBeEntityError;\n\n//# sourceMappingURL=MustBeEntityError.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/error/MustBeEntityError.js?");

/***/ }),

/***/ "./node_modules/typeorm/error/NoConnectionOptionError.js":
/*!***************************************************************!*\
  !*** ./node_modules/typeorm/error/NoConnectionOptionError.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Thrown when some option is not set in the connection options.\n */\nvar NoConnectionOptionError = /** @class */ (function (_super) {\n    __extends(NoConnectionOptionError, _super);\n    function NoConnectionOptionError(optionName) {\n        var _this = _super.call(this) || this;\n        Object.setPrototypeOf(_this, NoConnectionOptionError.prototype);\n        _this.message = \"Option \\\"\" + optionName + \"\\\" is not set in your connection options, please define \\\"\" + optionName + \"\\\" option in your connection options or ormconfig.json\";\n        return _this;\n    }\n    return NoConnectionOptionError;\n}(Error));\nexports.NoConnectionOptionError = NoConnectionOptionError;\n\n//# sourceMappingURL=NoConnectionOptionError.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/error/NoConnectionOptionError.js?");

/***/ }),

/***/ "./node_modules/typeorm/error/NoNeedToReleaseEntityManagerError.js":
/*!*************************************************************************!*\
  !*** ./node_modules/typeorm/error/NoNeedToReleaseEntityManagerError.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Thrown when consumer tries to release entity manager that does not use single database connection.\n */\nvar NoNeedToReleaseEntityManagerError = /** @class */ (function (_super) {\n    __extends(NoNeedToReleaseEntityManagerError, _super);\n    function NoNeedToReleaseEntityManagerError() {\n        var _this = _super.call(this) || this;\n        _this.name = \"NoNeedToReleaseEntityManagerError\";\n        Object.setPrototypeOf(_this, NoNeedToReleaseEntityManagerError.prototype);\n        _this.message = \"Entity manager is not using single database connection and cannot be released. \" +\n            \"Only entity managers created by connection#createEntityManagerWithSingleDatabaseConnection \" +\n            \"methods have a single database connection and they should be released.\";\n        return _this;\n    }\n    return NoNeedToReleaseEntityManagerError;\n}(Error));\nexports.NoNeedToReleaseEntityManagerError = NoNeedToReleaseEntityManagerError;\n\n//# sourceMappingURL=NoNeedToReleaseEntityManagerError.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/error/NoNeedToReleaseEntityManagerError.js?");

/***/ }),

/***/ "./node_modules/typeorm/error/NoVersionOrUpdateDateColumnError.js":
/*!************************************************************************!*\
  !*** ./node_modules/typeorm/error/NoVersionOrUpdateDateColumnError.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Thrown when an entity does not have no version and no update date column.\n */\nvar NoVersionOrUpdateDateColumnError = /** @class */ (function (_super) {\n    __extends(NoVersionOrUpdateDateColumnError, _super);\n    function NoVersionOrUpdateDateColumnError(entity) {\n        var _this = _super.call(this) || this;\n        _this.name = \"NoVersionOrUpdateDateColumnError\";\n        Object.setPrototypeOf(_this, NoVersionOrUpdateDateColumnError.prototype);\n        _this.message = \"Entity \" + entity + \" does not have version or update date columns.\";\n        return _this;\n    }\n    return NoVersionOrUpdateDateColumnError;\n}(Error));\nexports.NoVersionOrUpdateDateColumnError = NoVersionOrUpdateDateColumnError;\n\n//# sourceMappingURL=NoVersionOrUpdateDateColumnError.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/error/NoVersionOrUpdateDateColumnError.js?");

/***/ }),

/***/ "./node_modules/typeorm/error/OffsetWithoutLimitNotSupportedError.js":
/*!***************************************************************************!*\
  !*** ./node_modules/typeorm/error/OffsetWithoutLimitNotSupportedError.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Thrown when user tries to build SELECT query using OFFSET without LIMIT applied but database does not support it.\n*/\nvar OffsetWithoutLimitNotSupportedError = /** @class */ (function (_super) {\n    __extends(OffsetWithoutLimitNotSupportedError, _super);\n    function OffsetWithoutLimitNotSupportedError(driverName) {\n        var _this = _super.call(this) || this;\n        _this.name = \"OffsetWithoutLimitNotSupportedError\";\n        Object.setPrototypeOf(_this, OffsetWithoutLimitNotSupportedError.prototype);\n        _this.message = driverName + \" does not support OFFSET without LIMIT in SELECT statements. You must use limit in conjunction with offset function (or take in conjunction with skip function if you are using pagination).\";\n        return _this;\n    }\n    return OffsetWithoutLimitNotSupportedError;\n}(Error));\nexports.OffsetWithoutLimitNotSupportedError = OffsetWithoutLimitNotSupportedError;\n\n//# sourceMappingURL=OffsetWithoutLimitNotSupportedError.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/error/OffsetWithoutLimitNotSupportedError.js?");

/***/ }),

/***/ "./node_modules/typeorm/error/OptimisticLockCanNotBeUsedError.js":
/*!***********************************************************************!*\
  !*** ./node_modules/typeorm/error/OptimisticLockCanNotBeUsedError.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Thrown when an optimistic lock cannot be used in query builder.\n */\nvar OptimisticLockCanNotBeUsedError = /** @class */ (function (_super) {\n    __extends(OptimisticLockCanNotBeUsedError, _super);\n    function OptimisticLockCanNotBeUsedError() {\n        var _this = _super.call(this) || this;\n        _this.name = \"OptimisticLockCanNotBeUsedError\";\n        Object.setPrototypeOf(_this, OptimisticLockCanNotBeUsedError.prototype);\n        _this.message = \"The optimistic lock can be used only with getOne() method.\";\n        return _this;\n    }\n    return OptimisticLockCanNotBeUsedError;\n}(Error));\nexports.OptimisticLockCanNotBeUsedError = OptimisticLockCanNotBeUsedError;\n\n//# sourceMappingURL=OptimisticLockCanNotBeUsedError.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/error/OptimisticLockCanNotBeUsedError.js?");

/***/ }),

/***/ "./node_modules/typeorm/error/OptimisticLockVersionMismatchError.js":
/*!**************************************************************************!*\
  !*** ./node_modules/typeorm/error/OptimisticLockVersionMismatchError.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Thrown when a version check on an object that uses optimistic locking through a version field fails.\n */\nvar OptimisticLockVersionMismatchError = /** @class */ (function (_super) {\n    __extends(OptimisticLockVersionMismatchError, _super);\n    function OptimisticLockVersionMismatchError(entity, expectedVersion, actualVersion) {\n        var _this = _super.call(this) || this;\n        _this.name = \"OptimisticLockVersionMismatchError\";\n        Object.setPrototypeOf(_this, OptimisticLockVersionMismatchError.prototype);\n        _this.message = \"The optimistic lock on entity \" + entity + \" failed, version \" + expectedVersion + \" was expected, but is actually \" + actualVersion + \".\";\n        return _this;\n    }\n    return OptimisticLockVersionMismatchError;\n}(Error));\nexports.OptimisticLockVersionMismatchError = OptimisticLockVersionMismatchError;\n\n//# sourceMappingURL=OptimisticLockVersionMismatchError.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/error/OptimisticLockVersionMismatchError.js?");

/***/ }),

/***/ "./node_modules/typeorm/error/PessimisticLockTransactionRequiredError.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/typeorm/error/PessimisticLockTransactionRequiredError.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Thrown when a transaction is required for the current operation, but there is none open.\n */\nvar PessimisticLockTransactionRequiredError = /** @class */ (function (_super) {\n    __extends(PessimisticLockTransactionRequiredError, _super);\n    function PessimisticLockTransactionRequiredError() {\n        var _this = _super.call(this) || this;\n        _this.name = \"PessimisticLockTransactionRequiredError\";\n        Object.setPrototypeOf(_this, PessimisticLockTransactionRequiredError.prototype);\n        _this.message = \"An open transaction is required for pessimistic lock.\";\n        return _this;\n    }\n    return PessimisticLockTransactionRequiredError;\n}(Error));\nexports.PessimisticLockTransactionRequiredError = PessimisticLockTransactionRequiredError;\n\n//# sourceMappingURL=PessimisticLockTransactionRequiredError.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/error/PessimisticLockTransactionRequiredError.js?");

/***/ }),

/***/ "./node_modules/typeorm/error/PrimaryColumnCannotBeNullableError.js":
/*!**************************************************************************!*\
  !*** ./node_modules/typeorm/error/PrimaryColumnCannotBeNullableError.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar PrimaryColumnCannotBeNullableError = /** @class */ (function (_super) {\n    __extends(PrimaryColumnCannotBeNullableError, _super);\n    function PrimaryColumnCannotBeNullableError(object, propertyName) {\n        var _this = _super.call(this) || this;\n        _this.name = \"PrimaryColumnCannotBeNullableError\";\n        Object.setPrototypeOf(_this, PrimaryColumnCannotBeNullableError.prototype);\n        _this.message = \"Primary column \" + object.constructor.name + \"#\" + propertyName + \" cannot be nullable. \" +\n            \"Its not allowed for primary keys. Try to remove nullable option.\";\n        return _this;\n    }\n    return PrimaryColumnCannotBeNullableError;\n}(Error));\nexports.PrimaryColumnCannotBeNullableError = PrimaryColumnCannotBeNullableError;\n\n//# sourceMappingURL=PrimaryColumnCannotBeNullableError.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/error/PrimaryColumnCannotBeNullableError.js?");

/***/ }),

/***/ "./node_modules/typeorm/error/QueryFailedError.js":
/*!********************************************************!*\
  !*** ./node_modules/typeorm/error/QueryFailedError.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Thrown when query execution has failed.\n*/\nvar QueryFailedError = /** @class */ (function (_super) {\n    __extends(QueryFailedError, _super);\n    function QueryFailedError(query, parameters, driverError) {\n        var _this = _super.call(this) || this;\n        Object.setPrototypeOf(_this, QueryFailedError.prototype);\n        _this.message = driverError.toString()\n            .replace(/^error: /, \"\")\n            .replace(/^Error: /, \"\")\n            .replace(/^Request/, \"\");\n        Object.assign(_this, __assign({}, driverError, { name: \"QueryFailedError\", query: query, parameters: parameters || [] }));\n        return _this;\n    }\n    return QueryFailedError;\n}(Error));\nexports.QueryFailedError = QueryFailedError;\n\n//# sourceMappingURL=QueryFailedError.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/error/QueryFailedError.js?");

/***/ }),

/***/ "./node_modules/typeorm/error/QueryRunnerAlreadyReleasedError.js":
/*!***********************************************************************!*\
  !*** ./node_modules/typeorm/error/QueryRunnerAlreadyReleasedError.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n */\nvar QueryRunnerAlreadyReleasedError = /** @class */ (function (_super) {\n    __extends(QueryRunnerAlreadyReleasedError, _super);\n    function QueryRunnerAlreadyReleasedError() {\n        var _this = _super.call(this) || this;\n        _this.name = \"QueryRunnerAlreadyReleasedError\";\n        Object.setPrototypeOf(_this, QueryRunnerAlreadyReleasedError.prototype);\n        _this.message = \"Query runner already released. Cannot run queries anymore.\";\n        return _this;\n    }\n    return QueryRunnerAlreadyReleasedError;\n}(Error));\nexports.QueryRunnerAlreadyReleasedError = QueryRunnerAlreadyReleasedError;\n\n//# sourceMappingURL=QueryRunnerAlreadyReleasedError.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/error/QueryRunnerAlreadyReleasedError.js?");

/***/ }),

/***/ "./node_modules/typeorm/error/QueryRunnerProviderAlreadyReleasedError.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/typeorm/error/QueryRunnerProviderAlreadyReleasedError.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Thrown when consumer tries to use query runner from query runner provider after it was released.\n */\nvar QueryRunnerProviderAlreadyReleasedError = /** @class */ (function (_super) {\n    __extends(QueryRunnerProviderAlreadyReleasedError, _super);\n    function QueryRunnerProviderAlreadyReleasedError() {\n        var _this = _super.call(this) || this;\n        _this.name = \"QueryRunnerProviderAlreadyReleasedError\";\n        Object.setPrototypeOf(_this, QueryRunnerProviderAlreadyReleasedError.prototype);\n        _this.message = \"Database connection provided by a query runner was already released, cannot continue to use its querying methods anymore.\";\n        return _this;\n    }\n    return QueryRunnerProviderAlreadyReleasedError;\n}(Error));\nexports.QueryRunnerProviderAlreadyReleasedError = QueryRunnerProviderAlreadyReleasedError;\n\n//# sourceMappingURL=QueryRunnerProviderAlreadyReleasedError.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/error/QueryRunnerProviderAlreadyReleasedError.js?");

/***/ }),

/***/ "./node_modules/typeorm/error/RepositoryNotFoundError.js":
/*!***************************************************************!*\
  !*** ./node_modules/typeorm/error/RepositoryNotFoundError.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar index_1 = __webpack_require__(/*! ../index */ \"./node_modules/typeorm/index.js\");\n/**\n * Thrown when repository for the given class is not found.\n */\nvar RepositoryNotFoundError = /** @class */ (function (_super) {\n    __extends(RepositoryNotFoundError, _super);\n    function RepositoryNotFoundError(connectionName, entityClass) {\n        var _this = _super.call(this) || this;\n        _this.name = \"RepositoryNotFoundError\";\n        Object.setPrototypeOf(_this, RepositoryNotFoundError.prototype);\n        var targetName;\n        if (entityClass instanceof index_1.EntitySchema) {\n            targetName = entityClass.options.name;\n        }\n        else if (typeof entityClass === \"function\") {\n            targetName = entityClass.name;\n        }\n        else {\n            targetName = entityClass;\n        }\n        _this.message = \"No repository for \\\"\" + targetName + \"\\\" was found. Looks like this entity is not registered in \" +\n            (\"current \\\"\" + connectionName + \"\\\" connection?\");\n        return _this;\n    }\n    return RepositoryNotFoundError;\n}(Error));\nexports.RepositoryNotFoundError = RepositoryNotFoundError;\n\n//# sourceMappingURL=RepositoryNotFoundError.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/error/RepositoryNotFoundError.js?");

/***/ }),

/***/ "./node_modules/typeorm/error/RepositoryNotTreeError.js":
/*!**************************************************************!*\
  !*** ./node_modules/typeorm/error/RepositoryNotTreeError.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar index_1 = __webpack_require__(/*! ../index */ \"./node_modules/typeorm/index.js\");\n/**\n * Thrown when repository for the given class is not found.\n */\nvar RepositoryNotTreeError = /** @class */ (function (_super) {\n    __extends(RepositoryNotTreeError, _super);\n    function RepositoryNotTreeError(target) {\n        var _this = _super.call(this) || this;\n        _this.name = \"RepositoryNotTreeError\";\n        Object.setPrototypeOf(_this, RepositoryNotTreeError.prototype);\n        var targetName;\n        if (target instanceof index_1.EntitySchema) {\n            targetName = target.options.name;\n        }\n        else if (typeof target === \"function\") {\n            targetName = target.name;\n        }\n        else {\n            targetName = target;\n        }\n        _this.message = \"Repository of the \\\"\" + targetName + \"\\\" class is not a TreeRepository. Try to apply @Tree decorator on your entity.\";\n        return _this;\n    }\n    return RepositoryNotTreeError;\n}(Error));\nexports.RepositoryNotTreeError = RepositoryNotTreeError;\n\n//# sourceMappingURL=RepositoryNotTreeError.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/error/RepositoryNotTreeError.js?");

/***/ }),

/***/ "./node_modules/typeorm/error/ReturningStatementNotSupportedError.js":
/*!***************************************************************************!*\
  !*** ./node_modules/typeorm/error/ReturningStatementNotSupportedError.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Thrown when user tries to build a query with RETURNING / OUTPUT statement,\n * but used database does not support it.\n */\nvar ReturningStatementNotSupportedError = /** @class */ (function (_super) {\n    __extends(ReturningStatementNotSupportedError, _super);\n    function ReturningStatementNotSupportedError() {\n        var _this = _super.call(this) || this;\n        _this.name = \"ReturningStatementNotSupportedError\";\n        Object.setPrototypeOf(_this, ReturningStatementNotSupportedError.prototype);\n        _this.message = \"OUTPUT or RETURNING clause only supported by Microsoft SQL Server or PostgreSQL databases.\";\n        return _this;\n    }\n    return ReturningStatementNotSupportedError;\n}(Error));\nexports.ReturningStatementNotSupportedError = ReturningStatementNotSupportedError;\n\n//# sourceMappingURL=ReturningStatementNotSupportedError.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/error/ReturningStatementNotSupportedError.js?");

/***/ }),

/***/ "./node_modules/typeorm/error/SubjectRemovedAndUpdatedError.js":
/*!*********************************************************************!*\
  !*** ./node_modules/typeorm/error/SubjectRemovedAndUpdatedError.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Thrown when same object is scheduled for remove and updation at the same time.\n */\nvar SubjectRemovedAndUpdatedError = /** @class */ (function (_super) {\n    __extends(SubjectRemovedAndUpdatedError, _super);\n    function SubjectRemovedAndUpdatedError(subject) {\n        var _this = _super.call(this) || this;\n        _this.name = \"SubjectRemovedAndUpdatedError\";\n        Object.setPrototypeOf(_this, SubjectRemovedAndUpdatedError.prototype);\n        _this.message = \"Removed entity \\\"\" + subject.metadata.name + \"\\\" is also scheduled for update operation. \" +\n            \"Make sure you are not updating and removing same object (note that update or remove may be executed by cascade operations).\";\n        return _this;\n    }\n    return SubjectRemovedAndUpdatedError;\n}(Error));\nexports.SubjectRemovedAndUpdatedError = SubjectRemovedAndUpdatedError;\n\n//# sourceMappingURL=SubjectRemovedAndUpdatedError.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/error/SubjectRemovedAndUpdatedError.js?");

/***/ }),

/***/ "./node_modules/typeorm/error/SubjectWithoutIdentifierError.js":
/*!*********************************************************************!*\
  !*** ./node_modules/typeorm/error/SubjectWithoutIdentifierError.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Thrown when operation is going to be executed on a subject without identifier.\n * This error should never be thrown, however it still presents to prevent user from updation or removing the whole table.\n * If this error occurs still, it most probably is an ORM internal problem which must be reported and fixed.\n */\nvar SubjectWithoutIdentifierError = /** @class */ (function (_super) {\n    __extends(SubjectWithoutIdentifierError, _super);\n    function SubjectWithoutIdentifierError(subject) {\n        var _this = _super.call(this) || this;\n        _this.name = \"SubjectWithoutIdentifierError\";\n        Object.setPrototypeOf(_this, SubjectWithoutIdentifierError.prototype);\n        _this.message = \"Internal error. Subject \" + subject.metadata.targetName + \" must have an identifier to perform operation. \" +\n            \"Please report a github issue if you face this error.\";\n        return _this;\n    }\n    return SubjectWithoutIdentifierError;\n}(Error));\nexports.SubjectWithoutIdentifierError = SubjectWithoutIdentifierError;\n\n//# sourceMappingURL=SubjectWithoutIdentifierError.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/error/SubjectWithoutIdentifierError.js?");

/***/ }),

/***/ "./node_modules/typeorm/error/TransactionAlreadyStartedError.js":
/*!**********************************************************************!*\
  !*** ./node_modules/typeorm/error/TransactionAlreadyStartedError.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Thrown when transaction is already started and user tries to run it again.\n */\nvar TransactionAlreadyStartedError = /** @class */ (function (_super) {\n    __extends(TransactionAlreadyStartedError, _super);\n    function TransactionAlreadyStartedError() {\n        var _this = _super.call(this) || this;\n        _this.name = \"TransactionAlreadyStartedError\";\n        Object.setPrototypeOf(_this, TransactionAlreadyStartedError.prototype);\n        _this.message = \"Transaction already started for the given connection, commit current transaction before starting a new one.\";\n        return _this;\n    }\n    return TransactionAlreadyStartedError;\n}(Error));\nexports.TransactionAlreadyStartedError = TransactionAlreadyStartedError;\n\n//# sourceMappingURL=TransactionAlreadyStartedError.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/error/TransactionAlreadyStartedError.js?");

/***/ }),

/***/ "./node_modules/typeorm/error/TransactionNotStartedError.js":
/*!******************************************************************!*\
  !*** ./node_modules/typeorm/error/TransactionNotStartedError.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Thrown when transaction is not started yet and user tries to run commit or rollback.\n */\nvar TransactionNotStartedError = /** @class */ (function (_super) {\n    __extends(TransactionNotStartedError, _super);\n    function TransactionNotStartedError() {\n        var _this = _super.call(this) || this;\n        _this.name = \"TransactionNotStartedError\";\n        Object.setPrototypeOf(_this, TransactionNotStartedError.prototype);\n        _this.message = \"Transaction is not started yet, start transaction before committing or rolling it back.\";\n        return _this;\n    }\n    return TransactionNotStartedError;\n}(Error));\nexports.TransactionNotStartedError = TransactionNotStartedError;\n\n//# sourceMappingURL=TransactionNotStartedError.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/error/TransactionNotStartedError.js?");

/***/ }),

/***/ "./node_modules/typeorm/error/TreeRepositoryNotSupportedError.js":
/*!***********************************************************************!*\
  !*** ./node_modules/typeorm/error/TreeRepositoryNotSupportedError.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TreeRepositoryNotSupportedError = /** @class */ (function (_super) {\n    __extends(TreeRepositoryNotSupportedError, _super);\n    function TreeRepositoryNotSupportedError(driver) {\n        var _this = _super.call(this) || this;\n        _this.name = \"TreeRepositoryNotSupportedError\";\n        Object.setPrototypeOf(_this, TreeRepositoryNotSupportedError.prototype);\n        _this.message = \"Tree repositories are not supported in \" + driver.options.type + \" driver.\";\n        return _this;\n    }\n    return TreeRepositoryNotSupportedError;\n}(Error));\nexports.TreeRepositoryNotSupportedError = TreeRepositoryNotSupportedError;\n\n//# sourceMappingURL=TreeRepositoryNotSupportedError.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/error/TreeRepositoryNotSupportedError.js?");

/***/ }),

/***/ "./node_modules/typeorm/find-options/FindOperator.js":
/*!***********************************************************!*\
  !*** ./node_modules/typeorm/find-options/FindOperator.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Find Operator used in Find Conditions.\n */\nvar FindOperator = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function FindOperator(type, value, useParameter, multipleParameters) {\n        if (useParameter === void 0) { useParameter = true; }\n        if (multipleParameters === void 0) { multipleParameters = false; }\n        this._type = type;\n        this._value = value;\n        this._useParameter = useParameter;\n        this._multipleParameters = multipleParameters;\n    }\n    Object.defineProperty(FindOperator.prototype, \"useParameter\", {\n        // -------------------------------------------------------------------------\n        // Accessors\n        // -------------------------------------------------------------------------\n        /**\n         * Indicates if parameter is used or not for this operator.\n         * Extracts final value if value is another find operator.\n         */\n        get: function () {\n            if (this._value instanceof FindOperator)\n                return this._value.useParameter;\n            return this._useParameter;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FindOperator.prototype, \"multipleParameters\", {\n        /**\n         * Indicates if multiple parameters must be used for this operator.\n         * Extracts final value if value is another find operator.\n         */\n        get: function () {\n            if (this._value instanceof FindOperator)\n                return this._value.multipleParameters;\n            return this._multipleParameters;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FindOperator.prototype, \"value\", {\n        /**\n         * Gets the final value needs to be used as parameter value.\n         */\n        get: function () {\n            if (this._value instanceof FindOperator)\n                return this._value.value;\n            return this._value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Gets SQL needs to be inserted into final query.\n     */\n    FindOperator.prototype.toSql = function (connection, aliasPath, parameters) {\n        switch (this._type) {\n            case \"not\":\n                if (this._value instanceof FindOperator) {\n                    return \"NOT(\" + this._value.toSql(connection, aliasPath, parameters) + \")\";\n                }\n                else {\n                    return aliasPath + \" != \" + parameters[0];\n                }\n            case \"lessThan\":\n                return aliasPath + \" < \" + parameters[0];\n            case \"moreThan\":\n                return aliasPath + \" > \" + parameters[0];\n            case \"equal\":\n                return aliasPath + \" = \" + parameters[0];\n            case \"like\":\n                return aliasPath + \" LIKE \" + parameters[0];\n            case \"between\":\n                return aliasPath + \" BETWEEN \" + parameters[0] + \" AND \" + parameters[1];\n            case \"in\":\n                return aliasPath + \" IN (\" + parameters.join(\", \") + \")\";\n            case \"any\":\n                return aliasPath + \" = ANY(\" + parameters[0] + \")\";\n            case \"isNull\":\n                return aliasPath + \" IS NULL\";\n            case \"raw\":\n                if (this.value instanceof Function) {\n                    return this.value(aliasPath);\n                }\n                else {\n                    return aliasPath + \" = \" + this.value;\n                }\n        }\n        return \"\";\n    };\n    return FindOperator;\n}());\nexports.FindOperator = FindOperator;\n\n//# sourceMappingURL=FindOperator.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/find-options/FindOperator.js?");

/***/ }),

/***/ "./node_modules/typeorm/find-options/FindOptionsUtils.js":
/*!***************************************************************!*\
  !*** ./node_modules/typeorm/find-options/FindOptionsUtils.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar FindRelationsNotFoundError_1 = __webpack_require__(/*! ../error/FindRelationsNotFoundError */ \"./node_modules/typeorm/error/FindRelationsNotFoundError.js\");\n/**\n * Utilities to work with FindOptions.\n */\nvar FindOptionsUtils = /** @class */ (function () {\n    function FindOptionsUtils() {\n    }\n    // -------------------------------------------------------------------------\n    // Public Static Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Checks if given object is really instance of FindOneOptions interface.\n     */\n    FindOptionsUtils.isFindOneOptions = function (obj) {\n        var possibleOptions = obj;\n        return possibleOptions &&\n            (possibleOptions.select instanceof Array ||\n                possibleOptions.where instanceof Object ||\n                typeof possibleOptions.where === \"string\" ||\n                possibleOptions.relations instanceof Array ||\n                possibleOptions.join instanceof Object ||\n                possibleOptions.order instanceof Object ||\n                possibleOptions.cache instanceof Object ||\n                typeof possibleOptions.cache === \"boolean\" ||\n                typeof possibleOptions.cache === \"number\" ||\n                possibleOptions.loadRelationIds instanceof Object ||\n                typeof possibleOptions.loadRelationIds === \"boolean\");\n    };\n    /**\n     * Checks if given object is really instance of FindManyOptions interface.\n     */\n    FindOptionsUtils.isFindManyOptions = function (obj) {\n        var possibleOptions = obj;\n        return possibleOptions && (this.isFindOneOptions(possibleOptions) ||\n            typeof possibleOptions.skip === \"number\" ||\n            typeof possibleOptions.take === \"number\" ||\n            typeof possibleOptions.skip === \"string\" ||\n            typeof possibleOptions.take === \"string\");\n    };\n    /**\n     * Checks if given object is really instance of FindOptions interface.\n     */\n    FindOptionsUtils.extractFindManyOptionsAlias = function (object) {\n        if (this.isFindManyOptions(object) && object.join)\n            return object.join.alias;\n        return undefined;\n    };\n    /**\n     * Applies give find many options to the given query builder.\n     */\n    FindOptionsUtils.applyFindManyOptionsOrConditionsToQueryBuilder = function (qb, options) {\n        if (this.isFindManyOptions(options))\n            return this.applyOptionsToQueryBuilder(qb, options);\n        if (options)\n            return qb.where(options);\n        return qb;\n    };\n    /**\n     * Applies give find options to the given query builder.\n     */\n    FindOptionsUtils.applyOptionsToQueryBuilder = function (qb, options) {\n        // if options are not set then simply return query builder. This is made for simplicity of usage.\n        if (!options || (!this.isFindOneOptions(options) && !this.isFindManyOptions(options)))\n            return qb;\n        if (!qb.expressionMap.mainAlias || !qb.expressionMap.mainAlias.hasMetadata)\n            return qb;\n        var metadata = qb.expressionMap.mainAlias.metadata;\n        // apply all options from FindOptions\n        if (options.select) {\n            qb.select([]);\n            options.select.forEach(function (select) {\n                if (!metadata.findColumnWithPropertyPath(select))\n                    throw new Error(select + \" column was not found in the \" + metadata.name + \" entity.\");\n                qb.addSelect(qb.alias + \".\" + select);\n            });\n        }\n        if (options.where)\n            qb.where(options.where);\n        if (options.skip)\n            qb.skip(options.skip);\n        if (options.take)\n            qb.take(options.take);\n        if (options.order)\n            Object.keys(options.order).forEach(function (key) {\n                var order = options.order[key];\n                if (!metadata.findColumnWithPropertyPath(key))\n                    throw new Error(key + \" column was not found in the \" + metadata.name + \" entity.\");\n                switch (order) {\n                    case 1:\n                        qb.addOrderBy(qb.alias + \".\" + key, \"ASC\");\n                        break;\n                    case -1:\n                        qb.addOrderBy(qb.alias + \".\" + key, \"DESC\");\n                        break;\n                    case \"ASC\":\n                        qb.addOrderBy(qb.alias + \".\" + key, \"ASC\");\n                        break;\n                    case \"DESC\":\n                        qb.addOrderBy(qb.alias + \".\" + key, \"DESC\");\n                        break;\n                }\n            });\n        if (options.relations) {\n            var allRelations = options.relations.map(function (relation) { return relation; });\n            this.applyRelationsRecursively(qb, allRelations, qb.expressionMap.mainAlias.name, qb.expressionMap.mainAlias.metadata, \"\");\n            // recursive removes found relations from allRelations array\n            // if there are relations left in this array it means those relations were not found in the entity structure\n            // so, we give an exception about not found relations\n            if (allRelations.length > 0)\n                throw new FindRelationsNotFoundError_1.FindRelationsNotFoundError(allRelations);\n        }\n        if (options.join) {\n            if (options.join.leftJoin)\n                Object.keys(options.join.leftJoin).forEach(function (key) {\n                    qb.leftJoin(options.join.leftJoin[key], key);\n                });\n            if (options.join.innerJoin)\n                Object.keys(options.join.innerJoin).forEach(function (key) {\n                    qb.innerJoin(options.join.innerJoin[key], key);\n                });\n            if (options.join.leftJoinAndSelect)\n                Object.keys(options.join.leftJoinAndSelect).forEach(function (key) {\n                    qb.leftJoinAndSelect(options.join.leftJoinAndSelect[key], key);\n                });\n            if (options.join.innerJoinAndSelect)\n                Object.keys(options.join.innerJoinAndSelect).forEach(function (key) {\n                    qb.innerJoinAndSelect(options.join.innerJoinAndSelect[key], key);\n                });\n        }\n        if (options.cache) {\n            if (options.cache instanceof Object) {\n                var cache = options.cache;\n                qb.cache(cache.id, cache.milliseconds);\n            }\n            else {\n                qb.cache(options.cache);\n            }\n        }\n        if (options.loadRelationIds === true) {\n            qb.loadAllRelationIds();\n        }\n        else if (options.loadRelationIds instanceof Object) {\n            qb.loadAllRelationIds(options.loadRelationIds);\n        }\n        return qb;\n    };\n    // -------------------------------------------------------------------------\n    // Protected Static Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Adds joins for all relations and sub-relations of the given relations provided in the find options.\n     */\n    FindOptionsUtils.applyRelationsRecursively = function (qb, allRelations, alias, metadata, prefix) {\n        var _this = this;\n        // find all relations that match given prefix\n        var matchedBaseRelations = [];\n        if (prefix) {\n            var regexp_1 = new RegExp(\"^\" + prefix.replace(\".\", \"\\\\.\") + \"\\\\.\");\n            matchedBaseRelations = allRelations\n                .filter(function (relation) { return relation.match(regexp_1); })\n                .map(function (relation) { return relation.replace(regexp_1, \"\"); })\n                .filter(function (relation) { return metadata.findRelationWithPropertyPath(relation); });\n        }\n        else {\n            matchedBaseRelations = allRelations.filter(function (relation) { return metadata.findRelationWithPropertyPath(relation); });\n        }\n        // go through all matched relations and add join for them\n        matchedBaseRelations.forEach(function (relation) {\n            // add a join for the found relation\n            var selection = alias + \".\" + relation;\n            qb.leftJoinAndSelect(selection, alias + \"_\" + relation);\n            // join the eager relations of the found relation\n            var relMetadata = metadata.relations.find(function (metadata) { return metadata.propertyName === relation; });\n            if (relMetadata) {\n                _this.joinEagerRelations(qb, alias + \"_\" + relation, relMetadata.inverseEntityMetadata);\n            }\n            // remove added relations from the allRelations array, this is needed to find all not found relations at the end\n            allRelations.splice(allRelations.indexOf(prefix ? prefix + \".\" + relation : relation), 1);\n            // try to find sub-relations\n            var join = qb.expressionMap.joinAttributes.find(function (join) { return join.entityOrProperty === selection; });\n            _this.applyRelationsRecursively(qb, allRelations, join.alias.name, join.metadata, prefix ? prefix + \".\" + relation : relation);\n        });\n    };\n    FindOptionsUtils.joinEagerRelations = function (qb, alias, metadata) {\n        var _this = this;\n        metadata.eagerRelations.forEach(function (relation) {\n            var relationAlias = alias + \"_\" + relation.propertyPath.replace(\".\", \"_\");\n            qb.leftJoinAndSelect(alias + \".\" + relation.propertyPath, relationAlias);\n            _this.joinEagerRelations(qb, relationAlias, relation.inverseEntityMetadata);\n        });\n    };\n    return FindOptionsUtils;\n}());\nexports.FindOptionsUtils = FindOptionsUtils;\n\n//# sourceMappingURL=FindOptionsUtils.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/find-options/FindOptionsUtils.js?");

/***/ }),

/***/ "./node_modules/typeorm/find-options/operator/Any.js":
/*!***********************************************************!*\
  !*** ./node_modules/typeorm/find-options/operator/Any.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar FindOperator_1 = __webpack_require__(/*! ../FindOperator */ \"./node_modules/typeorm/find-options/FindOperator.js\");\n/**\n * Find Options Operator.\n * Example: { someField: Any([...]) }\n */\nfunction Any(value) {\n    return new FindOperator_1.FindOperator(\"any\", value);\n}\nexports.Any = Any;\n\n//# sourceMappingURL=Any.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/find-options/operator/Any.js?");

/***/ }),

/***/ "./node_modules/typeorm/find-options/operator/Between.js":
/*!***************************************************************!*\
  !*** ./node_modules/typeorm/find-options/operator/Between.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar FindOperator_1 = __webpack_require__(/*! ../FindOperator */ \"./node_modules/typeorm/find-options/FindOperator.js\");\n/**\n * Find Options Operator.\n * Example: { someField: Between(x, y) }\n */\nfunction Between(from, to) {\n    return new FindOperator_1.FindOperator(\"between\", [from, to], true, true);\n}\nexports.Between = Between;\n\n//# sourceMappingURL=Between.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/find-options/operator/Between.js?");

/***/ }),

/***/ "./node_modules/typeorm/find-options/operator/Equal.js":
/*!*************************************************************!*\
  !*** ./node_modules/typeorm/find-options/operator/Equal.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar FindOperator_1 = __webpack_require__(/*! ../FindOperator */ \"./node_modules/typeorm/find-options/FindOperator.js\");\n/**\n * Find Options Operator.\n * Example: { someField: Equal(\"value\") }\n */\nfunction Equal(value) {\n    return new FindOperator_1.FindOperator(\"equal\", value);\n}\nexports.Equal = Equal;\n\n//# sourceMappingURL=Equal.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/find-options/operator/Equal.js?");

/***/ }),

/***/ "./node_modules/typeorm/find-options/operator/In.js":
/*!**********************************************************!*\
  !*** ./node_modules/typeorm/find-options/operator/In.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar FindOperator_1 = __webpack_require__(/*! ../FindOperator */ \"./node_modules/typeorm/find-options/FindOperator.js\");\n/**\n * Find Options Operator.\n * Example: { someField: In([...]) }\n */\nfunction In(value) {\n    return new FindOperator_1.FindOperator(\"in\", value, true, true);\n}\nexports.In = In;\n\n//# sourceMappingURL=In.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/find-options/operator/In.js?");

/***/ }),

/***/ "./node_modules/typeorm/find-options/operator/IsNull.js":
/*!**************************************************************!*\
  !*** ./node_modules/typeorm/find-options/operator/IsNull.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar FindOperator_1 = __webpack_require__(/*! ../FindOperator */ \"./node_modules/typeorm/find-options/FindOperator.js\");\n/**\n * Find Options Operator.\n * Example: { someField: IsNull() }\n */\nfunction IsNull() {\n    return new FindOperator_1.FindOperator(\"isNull\", undefined, false);\n}\nexports.IsNull = IsNull;\n\n//# sourceMappingURL=IsNull.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/find-options/operator/IsNull.js?");

/***/ }),

/***/ "./node_modules/typeorm/find-options/operator/LessThan.js":
/*!****************************************************************!*\
  !*** ./node_modules/typeorm/find-options/operator/LessThan.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar FindOperator_1 = __webpack_require__(/*! ../FindOperator */ \"./node_modules/typeorm/find-options/FindOperator.js\");\n/**\n * Find Options Operator.\n * Example: { someField: LessThan(10) }\n */\nfunction LessThan(value) {\n    return new FindOperator_1.FindOperator(\"lessThan\", value);\n}\nexports.LessThan = LessThan;\n\n//# sourceMappingURL=LessThan.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/find-options/operator/LessThan.js?");

/***/ }),

/***/ "./node_modules/typeorm/find-options/operator/Like.js":
/*!************************************************************!*\
  !*** ./node_modules/typeorm/find-options/operator/Like.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar FindOperator_1 = __webpack_require__(/*! ../FindOperator */ \"./node_modules/typeorm/find-options/FindOperator.js\");\n/**\n * Find Options Operator.\n * Example: { someField: Like(\"%some sting%\") }\n */\nfunction Like(value) {\n    return new FindOperator_1.FindOperator(\"like\", value);\n}\nexports.Like = Like;\n\n//# sourceMappingURL=Like.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/find-options/operator/Like.js?");

/***/ }),

/***/ "./node_modules/typeorm/find-options/operator/MoreThan.js":
/*!****************************************************************!*\
  !*** ./node_modules/typeorm/find-options/operator/MoreThan.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar FindOperator_1 = __webpack_require__(/*! ../FindOperator */ \"./node_modules/typeorm/find-options/FindOperator.js\");\n/**\n * Find Options Operator.\n * Example: { someField: MoreThan(10) }\n */\nfunction MoreThan(value) {\n    return new FindOperator_1.FindOperator(\"moreThan\", value);\n}\nexports.MoreThan = MoreThan;\n\n//# sourceMappingURL=MoreThan.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/find-options/operator/MoreThan.js?");

/***/ }),

/***/ "./node_modules/typeorm/find-options/operator/Not.js":
/*!***********************************************************!*\
  !*** ./node_modules/typeorm/find-options/operator/Not.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar FindOperator_1 = __webpack_require__(/*! ../FindOperator */ \"./node_modules/typeorm/find-options/FindOperator.js\");\n/**\n * Find Options Operator.\n * Used to negotiate expression.\n * Example: { title: not(\"hello\") } will return entities where title not equal to \"hello\".\n */\nfunction Not(value) {\n    return new FindOperator_1.FindOperator(\"not\", value);\n}\nexports.Not = Not;\n\n//# sourceMappingURL=Not.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/find-options/operator/Not.js?");

/***/ }),

/***/ "./node_modules/typeorm/find-options/operator/Raw.js":
/*!***********************************************************!*\
  !*** ./node_modules/typeorm/find-options/operator/Raw.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar FindOperator_1 = __webpack_require__(/*! ../FindOperator */ \"./node_modules/typeorm/find-options/FindOperator.js\");\n/**\n * Find Options Operator.\n * Example: { someField: Raw([...]) }\n */\nfunction Raw(value) {\n    return new FindOperator_1.FindOperator(\"raw\", value, false);\n}\nexports.Raw = Raw;\n\n//# sourceMappingURL=Raw.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/find-options/operator/Raw.js?");

/***/ }),

/***/ "./node_modules/typeorm/index.js":
/*!***************************************!*\
  !*** ./node_modules/typeorm/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/*!\n */\n__webpack_require__(/*! reflect-metadata */ \"./node_modules/reflect-metadata/Reflect.js\");\nvar ConnectionManager_1 = __webpack_require__(/*! ./connection/ConnectionManager */ \"./node_modules/typeorm/connection/ConnectionManager.js\");\nvar MetadataArgsStorage_1 = __webpack_require__(/*! ./metadata-args/MetadataArgsStorage */ \"./node_modules/typeorm/metadata-args/MetadataArgsStorage.js\");\nvar container_1 = __webpack_require__(/*! ./container */ \"./node_modules/typeorm/container.js\");\nvar PlatformTools_1 = __webpack_require__(/*! ./platform/PlatformTools */ \"./node_modules/typeorm/platform/PlatformTools.js\");\nvar ConnectionOptionsReader_1 = __webpack_require__(/*! ./connection/ConnectionOptionsReader */ \"./node_modules/typeorm/connection/ConnectionOptionsReader.js\");\nvar PromiseUtils_1 = __webpack_require__(/*! ./util/PromiseUtils */ \"./node_modules/typeorm/util/PromiseUtils.js\");\n// -------------------------------------------------------------------------\n// Commonly Used exports\n// -------------------------------------------------------------------------\n__export(__webpack_require__(/*! ./container */ \"./node_modules/typeorm/container.js\"));\n__export(__webpack_require__(/*! ./error/QueryFailedError */ \"./node_modules/typeorm/error/QueryFailedError.js\"));\n__export(__webpack_require__(/*! ./decorator/columns/Column */ \"./node_modules/typeorm/decorator/columns/Column.js\"));\n__export(__webpack_require__(/*! ./decorator/columns/CreateDateColumn */ \"./node_modules/typeorm/decorator/columns/CreateDateColumn.js\"));\n__export(__webpack_require__(/*! ./decorator/columns/PrimaryGeneratedColumn */ \"./node_modules/typeorm/decorator/columns/PrimaryGeneratedColumn.js\"));\n__export(__webpack_require__(/*! ./decorator/columns/PrimaryColumn */ \"./node_modules/typeorm/decorator/columns/PrimaryColumn.js\"));\n__export(__webpack_require__(/*! ./decorator/columns/UpdateDateColumn */ \"./node_modules/typeorm/decorator/columns/UpdateDateColumn.js\"));\n__export(__webpack_require__(/*! ./decorator/columns/VersionColumn */ \"./node_modules/typeorm/decorator/columns/VersionColumn.js\"));\n__export(__webpack_require__(/*! ./decorator/columns/ObjectIdColumn */ \"./node_modules/typeorm/decorator/columns/ObjectIdColumn.js\"));\n__export(__webpack_require__(/*! ./decorator/listeners/AfterInsert */ \"./node_modules/typeorm/decorator/listeners/AfterInsert.js\"));\n__export(__webpack_require__(/*! ./decorator/listeners/AfterLoad */ \"./node_modules/typeorm/decorator/listeners/AfterLoad.js\"));\n__export(__webpack_require__(/*! ./decorator/listeners/AfterRemove */ \"./node_modules/typeorm/decorator/listeners/AfterRemove.js\"));\n__export(__webpack_require__(/*! ./decorator/listeners/AfterUpdate */ \"./node_modules/typeorm/decorator/listeners/AfterUpdate.js\"));\n__export(__webpack_require__(/*! ./decorator/listeners/BeforeInsert */ \"./node_modules/typeorm/decorator/listeners/BeforeInsert.js\"));\n__export(__webpack_require__(/*! ./decorator/listeners/BeforeRemove */ \"./node_modules/typeorm/decorator/listeners/BeforeRemove.js\"));\n__export(__webpack_require__(/*! ./decorator/listeners/BeforeUpdate */ \"./node_modules/typeorm/decorator/listeners/BeforeUpdate.js\"));\n__export(__webpack_require__(/*! ./decorator/listeners/EventSubscriber */ \"./node_modules/typeorm/decorator/listeners/EventSubscriber.js\"));\n__export(__webpack_require__(/*! ./decorator/relations/JoinColumn */ \"./node_modules/typeorm/decorator/relations/JoinColumn.js\"));\n__export(__webpack_require__(/*! ./decorator/relations/JoinTable */ \"./node_modules/typeorm/decorator/relations/JoinTable.js\"));\n__export(__webpack_require__(/*! ./decorator/relations/ManyToMany */ \"./node_modules/typeorm/decorator/relations/ManyToMany.js\"));\n__export(__webpack_require__(/*! ./decorator/relations/ManyToOne */ \"./node_modules/typeorm/decorator/relations/ManyToOne.js\"));\n__export(__webpack_require__(/*! ./decorator/relations/OneToMany */ \"./node_modules/typeorm/decorator/relations/OneToMany.js\"));\n__export(__webpack_require__(/*! ./decorator/relations/OneToOne */ \"./node_modules/typeorm/decorator/relations/OneToOne.js\"));\n__export(__webpack_require__(/*! ./decorator/relations/RelationCount */ \"./node_modules/typeorm/decorator/relations/RelationCount.js\"));\n__export(__webpack_require__(/*! ./decorator/relations/RelationId */ \"./node_modules/typeorm/decorator/relations/RelationId.js\"));\n__export(__webpack_require__(/*! ./decorator/entity/Entity */ \"./node_modules/typeorm/decorator/entity/Entity.js\"));\n__export(__webpack_require__(/*! ./decorator/entity/ChildEntity */ \"./node_modules/typeorm/decorator/entity/ChildEntity.js\"));\n__export(__webpack_require__(/*! ./decorator/entity/TableInheritance */ \"./node_modules/typeorm/decorator/entity/TableInheritance.js\"));\n__export(__webpack_require__(/*! ./decorator/transaction/Transaction */ \"./node_modules/typeorm/decorator/transaction/Transaction.js\"));\n__export(__webpack_require__(/*! ./decorator/transaction/TransactionManager */ \"./node_modules/typeorm/decorator/transaction/TransactionManager.js\"));\n__export(__webpack_require__(/*! ./decorator/transaction/TransactionRepository */ \"./node_modules/typeorm/decorator/transaction/TransactionRepository.js\"));\n__export(__webpack_require__(/*! ./decorator/tree/TreeLevelColumn */ \"./node_modules/typeorm/decorator/tree/TreeLevelColumn.js\"));\n__export(__webpack_require__(/*! ./decorator/tree/TreeParent */ \"./node_modules/typeorm/decorator/tree/TreeParent.js\"));\n__export(__webpack_require__(/*! ./decorator/tree/TreeChildren */ \"./node_modules/typeorm/decorator/tree/TreeChildren.js\"));\n__export(__webpack_require__(/*! ./decorator/tree/Tree */ \"./node_modules/typeorm/decorator/tree/Tree.js\"));\n__export(__webpack_require__(/*! ./decorator/Index */ \"./node_modules/typeorm/decorator/Index.js\"));\n__export(__webpack_require__(/*! ./decorator/Unique */ \"./node_modules/typeorm/decorator/Unique.js\"));\n__export(__webpack_require__(/*! ./decorator/Check */ \"./node_modules/typeorm/decorator/Check.js\"));\n__export(__webpack_require__(/*! ./decorator/Generated */ \"./node_modules/typeorm/decorator/Generated.js\"));\n__export(__webpack_require__(/*! ./decorator/EntityRepository */ \"./node_modules/typeorm/decorator/EntityRepository.js\"));\n__export(__webpack_require__(/*! ./find-options/operator/Any */ \"./node_modules/typeorm/find-options/operator/Any.js\"));\n__export(__webpack_require__(/*! ./find-options/operator/Between */ \"./node_modules/typeorm/find-options/operator/Between.js\"));\n__export(__webpack_require__(/*! ./find-options/operator/Equal */ \"./node_modules/typeorm/find-options/operator/Equal.js\"));\n__export(__webpack_require__(/*! ./find-options/operator/In */ \"./node_modules/typeorm/find-options/operator/In.js\"));\n__export(__webpack_require__(/*! ./find-options/operator/IsNull */ \"./node_modules/typeorm/find-options/operator/IsNull.js\"));\n__export(__webpack_require__(/*! ./find-options/operator/LessThan */ \"./node_modules/typeorm/find-options/operator/LessThan.js\"));\n__export(__webpack_require__(/*! ./find-options/operator/Like */ \"./node_modules/typeorm/find-options/operator/Like.js\"));\n__export(__webpack_require__(/*! ./find-options/operator/MoreThan */ \"./node_modules/typeorm/find-options/operator/MoreThan.js\"));\n__export(__webpack_require__(/*! ./find-options/operator/Not */ \"./node_modules/typeorm/find-options/operator/Not.js\"));\n__export(__webpack_require__(/*! ./find-options/operator/Raw */ \"./node_modules/typeorm/find-options/operator/Raw.js\"));\n__export(__webpack_require__(/*! ./find-options/FindOperator */ \"./node_modules/typeorm/find-options/FindOperator.js\"));\n__export(__webpack_require__(/*! ./logger/AdvancedConsoleLogger */ \"./node_modules/typeorm/logger/AdvancedConsoleLogger.js\"));\n__export(__webpack_require__(/*! ./logger/SimpleConsoleLogger */ \"./node_modules/typeorm/logger/SimpleConsoleLogger.js\"));\n__export(__webpack_require__(/*! ./logger/FileLogger */ \"./node_modules/typeorm/logger/FileLogger.js\"));\n__export(__webpack_require__(/*! ./metadata/EntityMetadata */ \"./node_modules/typeorm/metadata/EntityMetadata.js\"));\n__export(__webpack_require__(/*! ./entity-manager/EntityManager */ \"./node_modules/typeorm/entity-manager/EntityManager.js\"));\n__export(__webpack_require__(/*! ./repository/AbstractRepository */ \"./node_modules/typeorm/repository/AbstractRepository.js\"));\n__export(__webpack_require__(/*! ./repository/Repository */ \"./node_modules/typeorm/repository/Repository.js\"));\n__export(__webpack_require__(/*! ./repository/BaseEntity */ \"./node_modules/typeorm/repository/BaseEntity.js\"));\n__export(__webpack_require__(/*! ./repository/TreeRepository */ \"./node_modules/typeorm/repository/TreeRepository.js\"));\n__export(__webpack_require__(/*! ./repository/MongoRepository */ \"./node_modules/typeorm/repository/MongoRepository.js\"));\n__export(__webpack_require__(/*! ./schema-builder/table/TableColumn */ \"./node_modules/typeorm/schema-builder/table/TableColumn.js\"));\n__export(__webpack_require__(/*! ./schema-builder/table/TableForeignKey */ \"./node_modules/typeorm/schema-builder/table/TableForeignKey.js\"));\n__export(__webpack_require__(/*! ./schema-builder/table/TableIndex */ \"./node_modules/typeorm/schema-builder/table/TableIndex.js\"));\n__export(__webpack_require__(/*! ./schema-builder/table/Table */ \"./node_modules/typeorm/schema-builder/table/Table.js\"));\n__export(__webpack_require__(/*! ./driver/mongodb/typings */ \"./node_modules/typeorm/driver/mongodb/typings.js\"));\n__export(__webpack_require__(/*! ./driver/sqlserver/MssqlParameter */ \"./node_modules/typeorm/driver/sqlserver/MssqlParameter.js\"));\nvar ConnectionOptionsReader_2 = __webpack_require__(/*! ./connection/ConnectionOptionsReader */ \"./node_modules/typeorm/connection/ConnectionOptionsReader.js\");\nexports.ConnectionOptionsReader = ConnectionOptionsReader_2.ConnectionOptionsReader;\nvar Connection_1 = __webpack_require__(/*! ./connection/Connection */ \"./node_modules/typeorm/connection/Connection.js\");\nexports.Connection = Connection_1.Connection;\nvar ConnectionManager_2 = __webpack_require__(/*! ./connection/ConnectionManager */ \"./node_modules/typeorm/connection/ConnectionManager.js\");\nexports.ConnectionManager = ConnectionManager_2.ConnectionManager;\nvar QueryBuilder_1 = __webpack_require__(/*! ./query-builder/QueryBuilder */ \"./node_modules/typeorm/query-builder/QueryBuilder.js\");\nexports.QueryBuilder = QueryBuilder_1.QueryBuilder;\nvar SelectQueryBuilder_1 = __webpack_require__(/*! ./query-builder/SelectQueryBuilder */ \"./node_modules/typeorm/query-builder/SelectQueryBuilder.js\");\nexports.SelectQueryBuilder = SelectQueryBuilder_1.SelectQueryBuilder;\nvar DeleteQueryBuilder_1 = __webpack_require__(/*! ./query-builder/DeleteQueryBuilder */ \"./node_modules/typeorm/query-builder/DeleteQueryBuilder.js\");\nexports.DeleteQueryBuilder = DeleteQueryBuilder_1.DeleteQueryBuilder;\nvar InsertQueryBuilder_1 = __webpack_require__(/*! ./query-builder/InsertQueryBuilder */ \"./node_modules/typeorm/query-builder/InsertQueryBuilder.js\");\nexports.InsertQueryBuilder = InsertQueryBuilder_1.InsertQueryBuilder;\nvar UpdateQueryBuilder_1 = __webpack_require__(/*! ./query-builder/UpdateQueryBuilder */ \"./node_modules/typeorm/query-builder/UpdateQueryBuilder.js\");\nexports.UpdateQueryBuilder = UpdateQueryBuilder_1.UpdateQueryBuilder;\nvar RelationQueryBuilder_1 = __webpack_require__(/*! ./query-builder/RelationQueryBuilder */ \"./node_modules/typeorm/query-builder/RelationQueryBuilder.js\");\nexports.RelationQueryBuilder = RelationQueryBuilder_1.RelationQueryBuilder;\nvar Brackets_1 = __webpack_require__(/*! ./query-builder/Brackets */ \"./node_modules/typeorm/query-builder/Brackets.js\");\nexports.Brackets = Brackets_1.Brackets;\nvar InsertResult_1 = __webpack_require__(/*! ./query-builder/result/InsertResult */ \"./node_modules/typeorm/query-builder/result/InsertResult.js\");\nexports.InsertResult = InsertResult_1.InsertResult;\nvar UpdateResult_1 = __webpack_require__(/*! ./query-builder/result/UpdateResult */ \"./node_modules/typeorm/query-builder/result/UpdateResult.js\");\nexports.UpdateResult = UpdateResult_1.UpdateResult;\nvar DeleteResult_1 = __webpack_require__(/*! ./query-builder/result/DeleteResult */ \"./node_modules/typeorm/query-builder/result/DeleteResult.js\");\nexports.DeleteResult = DeleteResult_1.DeleteResult;\nvar EntityManager_1 = __webpack_require__(/*! ./entity-manager/EntityManager */ \"./node_modules/typeorm/entity-manager/EntityManager.js\");\nexports.EntityManager = EntityManager_1.EntityManager;\nvar MongoEntityManager_1 = __webpack_require__(/*! ./entity-manager/MongoEntityManager */ \"./node_modules/typeorm/entity-manager/MongoEntityManager.js\");\nexports.MongoEntityManager = MongoEntityManager_1.MongoEntityManager;\nvar DefaultNamingStrategy_1 = __webpack_require__(/*! ./naming-strategy/DefaultNamingStrategy */ \"./node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js\");\nexports.DefaultNamingStrategy = DefaultNamingStrategy_1.DefaultNamingStrategy;\nvar Repository_1 = __webpack_require__(/*! ./repository/Repository */ \"./node_modules/typeorm/repository/Repository.js\");\nexports.Repository = Repository_1.Repository;\nvar TreeRepository_1 = __webpack_require__(/*! ./repository/TreeRepository */ \"./node_modules/typeorm/repository/TreeRepository.js\");\nexports.TreeRepository = TreeRepository_1.TreeRepository;\nvar MongoRepository_1 = __webpack_require__(/*! ./repository/MongoRepository */ \"./node_modules/typeorm/repository/MongoRepository.js\");\nexports.MongoRepository = MongoRepository_1.MongoRepository;\nvar BaseEntity_1 = __webpack_require__(/*! ./repository/BaseEntity */ \"./node_modules/typeorm/repository/BaseEntity.js\");\nexports.BaseEntity = BaseEntity_1.BaseEntity;\nvar EntitySchema_1 = __webpack_require__(/*! ./entity-schema/EntitySchema */ \"./node_modules/typeorm/entity-schema/EntitySchema.js\");\nexports.EntitySchema = EntitySchema_1.EntitySchema;\nvar PromiseUtils_2 = __webpack_require__(/*! ./util/PromiseUtils */ \"./node_modules/typeorm/util/PromiseUtils.js\");\nexports.PromiseUtils = PromiseUtils_2.PromiseUtils;\n// -------------------------------------------------------------------------\n// Deprecated\n// -------------------------------------------------------------------------\n// -------------------------------------------------------------------------\n// Commonly used functionality\n// -------------------------------------------------------------------------\n/**\n * Gets metadata args storage.\n */\nfunction getMetadataArgsStorage() {\n    // we should store metadata storage in a global variable otherwise it brings too much problems\n    // one of the problem is that if any entity (or any other) will be imported before consumer will call\n    // useContainer method with his own container implementation, that entity will be registered in the\n    // old old container (default one post probably) and consumer will his entity.\n    // calling useContainer before he imports any entity (or any other) is not always convenient.\n    // another reason is that when we run migrations typeorm is being called from a global package\n    // and it may load entities which register decorators in typeorm of local package\n    // this leads to impossibility of usage of entities in migrations and cli related operations\n    var globalScope = PlatformTools_1.PlatformTools.getGlobalVariable();\n    if (!globalScope.typeormMetadataArgsStorage)\n        globalScope.typeormMetadataArgsStorage = new MetadataArgsStorage_1.MetadataArgsStorage();\n    return globalScope.typeormMetadataArgsStorage;\n}\nexports.getMetadataArgsStorage = getMetadataArgsStorage;\n/**\n * Reads connection options stored in ormconfig configuration file.\n */\nfunction getConnectionOptions(connectionName) {\n    if (connectionName === void 0) { connectionName = \"default\"; }\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            return [2 /*return*/, new ConnectionOptionsReader_1.ConnectionOptionsReader().get(connectionName)];\n        });\n    });\n}\nexports.getConnectionOptions = getConnectionOptions;\n/**\n * Gets a ConnectionManager which creates connections.\n */\nfunction getConnectionManager() {\n    return container_1.getFromContainer(ConnectionManager_1.ConnectionManager);\n}\nexports.getConnectionManager = getConnectionManager;\n/**\n * Creates a new connection and registers it in the manager.\n *\n * If connection options were not specified, then it will try to create connection automatically,\n * based on content of ormconfig (json/js/yml/xml/env) file or environment variables.\n * Only one connection from ormconfig will be created (name \"default\" or connection without name).\n */\nfunction createConnection(optionsOrName) {\n    return __awaiter(this, void 0, void 0, function () {\n        var connectionName, options, _a;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    connectionName = typeof optionsOrName === \"string\" ? optionsOrName : \"default\";\n                    if (!(optionsOrName instanceof Object)) return [3 /*break*/, 1];\n                    _a = optionsOrName;\n                    return [3 /*break*/, 3];\n                case 1: return [4 /*yield*/, getConnectionOptions(connectionName)];\n                case 2:\n                    _a = _b.sent();\n                    _b.label = 3;\n                case 3:\n                    options = _a;\n                    return [2 /*return*/, getConnectionManager().create(options).connect()];\n            }\n        });\n    });\n}\nexports.createConnection = createConnection;\n/**\n * Creates new connections and registers them in the manager.\n *\n * If connection options were not specified, then it will try to create connection automatically,\n * based on content of ormconfig (json/js/yml/xml/env) file or environment variables.\n * All connections from the ormconfig will be created.\n */\nfunction createConnections(options) {\n    return __awaiter(this, void 0, void 0, function () {\n        var connections;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!!options) return [3 /*break*/, 2];\n                    return [4 /*yield*/, new ConnectionOptionsReader_1.ConnectionOptionsReader().all()];\n                case 1:\n                    options = _a.sent();\n                    _a.label = 2;\n                case 2:\n                    connections = options.map(function (options) { return getConnectionManager().create(options); });\n                    return [2 /*return*/, PromiseUtils_1.PromiseUtils.runInSequence(connections, function (connection) { return connection.connect(); })];\n            }\n        });\n    });\n}\nexports.createConnections = createConnections;\n/**\n * Gets connection from the connection manager.\n * If connection name wasn't specified, then \"default\" connection will be retrieved.\n */\nfunction getConnection(connectionName) {\n    if (connectionName === void 0) { connectionName = \"default\"; }\n    return getConnectionManager().get(connectionName);\n}\nexports.getConnection = getConnection;\n/**\n * Gets entity manager from the connection.\n * If connection name wasn't specified, then \"default\" connection will be retrieved.\n */\nfunction getManager(connectionName) {\n    if (connectionName === void 0) { connectionName = \"default\"; }\n    return getConnectionManager().get(connectionName).manager;\n}\nexports.getManager = getManager;\n/**\n * Gets MongoDB entity manager from the connection.\n * If connection name wasn't specified, then \"default\" connection will be retrieved.\n */\nfunction getMongoManager(connectionName) {\n    if (connectionName === void 0) { connectionName = \"default\"; }\n    return getConnectionManager().get(connectionName).manager;\n}\nexports.getMongoManager = getMongoManager;\n/**\n * Gets Sqljs entity manager from connection name.\n * \"default\" connection is used, when no name is specified.\n * Only works when Sqljs driver is used.\n */\nfunction getSqljsManager(connectionName) {\n    if (connectionName === void 0) { connectionName = \"default\"; }\n    return getConnectionManager().get(connectionName).manager;\n}\nexports.getSqljsManager = getSqljsManager;\n/**\n * Gets repository for the given entity class.\n */\nfunction getRepository(entityClass, connectionName) {\n    if (connectionName === void 0) { connectionName = \"default\"; }\n    return getConnectionManager().get(connectionName).getRepository(entityClass);\n}\nexports.getRepository = getRepository;\n/**\n * Gets tree repository for the given entity class.\n */\nfunction getTreeRepository(entityClass, connectionName) {\n    if (connectionName === void 0) { connectionName = \"default\"; }\n    return getConnectionManager().get(connectionName).getTreeRepository(entityClass);\n}\nexports.getTreeRepository = getTreeRepository;\n/**\n * Gets tree repository for the given entity class.\n */\nfunction getCustomRepository(customRepository, connectionName) {\n    if (connectionName === void 0) { connectionName = \"default\"; }\n    return getConnectionManager().get(connectionName).getCustomRepository(customRepository);\n}\nexports.getCustomRepository = getCustomRepository;\n/**\n * Gets mongodb repository for the given entity class or name.\n */\nfunction getMongoRepository(entityClass, connectionName) {\n    if (connectionName === void 0) { connectionName = \"default\"; }\n    return getConnectionManager().get(connectionName).getMongoRepository(entityClass);\n}\nexports.getMongoRepository = getMongoRepository;\n/**\n * Creates a new query builder.\n */\nfunction createQueryBuilder(entityClass, alias, connectionName) {\n    if (connectionName === void 0) { connectionName = \"default\"; }\n    if (entityClass) {\n        return getRepository(entityClass, connectionName).createQueryBuilder(alias);\n    }\n    return getConnection(connectionName).createQueryBuilder();\n}\nexports.createQueryBuilder = createQueryBuilder;\n\n//# sourceMappingURL=index.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/index.js?");

/***/ }),

/***/ "./node_modules/typeorm/logger/AdvancedConsoleLogger.js":
/*!**************************************************************!*\
  !*** ./node_modules/typeorm/logger/AdvancedConsoleLogger.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar PlatformTools_1 = __webpack_require__(/*! ../platform/PlatformTools */ \"./node_modules/typeorm/platform/PlatformTools.js\");\n/**\n * Performs logging of the events in TypeORM.\n * This version of logger uses console to log events and use syntax highlighting.\n */\nvar AdvancedConsoleLogger = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function AdvancedConsoleLogger(options) {\n        this.options = options;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Logs query and parameters used in it.\n     */\n    AdvancedConsoleLogger.prototype.logQuery = function (query, parameters, queryRunner) {\n        if (this.options === \"all\" || this.options === true || (this.options instanceof Array && this.options.indexOf(\"query\") !== -1)) {\n            var sql = query + (parameters && parameters.length ? \" -- PARAMETERS: \" + this.stringifyParams(parameters) : \"\");\n            PlatformTools_1.PlatformTools.logInfo(\"query:\", PlatformTools_1.PlatformTools.highlightSql(sql));\n        }\n    };\n    /**\n     * Logs query that is failed.\n     */\n    AdvancedConsoleLogger.prototype.logQueryError = function (error, query, parameters, queryRunner) {\n        if (this.options === \"all\" || this.options === true || (this.options instanceof Array && this.options.indexOf(\"error\") !== -1)) {\n            var sql = query + (parameters && parameters.length ? \" -- PARAMETERS: \" + this.stringifyParams(parameters) : \"\");\n            PlatformTools_1.PlatformTools.logError(\"query failed:\", PlatformTools_1.PlatformTools.highlightSql(sql));\n            PlatformTools_1.PlatformTools.logError(\"error:\", error);\n        }\n    };\n    /**\n     * Logs query that is slow.\n     */\n    AdvancedConsoleLogger.prototype.logQuerySlow = function (time, query, parameters, queryRunner) {\n        var sql = query + (parameters && parameters.length ? \" -- PARAMETERS: \" + this.stringifyParams(parameters) : \"\");\n        PlatformTools_1.PlatformTools.logWarn(\"query is slow:\", PlatformTools_1.PlatformTools.highlightSql(sql));\n        PlatformTools_1.PlatformTools.logWarn(\"execution time:\", time);\n    };\n    /**\n     * Logs events from the schema build process.\n     */\n    AdvancedConsoleLogger.prototype.logSchemaBuild = function (message, queryRunner) {\n        if (this.options === \"all\" || (this.options instanceof Array && this.options.indexOf(\"schema\") !== -1)) {\n            PlatformTools_1.PlatformTools.log(message);\n        }\n    };\n    /**\n     * Logs events from the migration run process.\n     */\n    AdvancedConsoleLogger.prototype.logMigration = function (message, queryRunner) {\n        PlatformTools_1.PlatformTools.log(message);\n    };\n    /**\n     * Perform logging using given logger, or by default to the console.\n     * Log has its own level and message.\n     */\n    AdvancedConsoleLogger.prototype.log = function (level, message, queryRunner) {\n        switch (level) {\n            case \"log\":\n                if (this.options === \"all\" || (this.options instanceof Array && this.options.indexOf(\"log\") !== -1))\n                    console.log(message);\n                break;\n            case \"info\":\n                if (this.options === \"all\" || (this.options instanceof Array && this.options.indexOf(\"info\") !== -1))\n                    console.info(message);\n                break;\n            case \"warn\":\n                if (this.options === \"all\" || (this.options instanceof Array && this.options.indexOf(\"warn\") !== -1))\n                    console.warn(PlatformTools_1.PlatformTools.warn(message));\n                break;\n        }\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Converts parameters to a string.\n     * Sometimes parameters can have circular objects and therefor we are handle this case too.\n     */\n    AdvancedConsoleLogger.prototype.stringifyParams = function (parameters) {\n        try {\n            return JSON.stringify(parameters);\n        }\n        catch (error) { // most probably circular objects in parameters\n            return parameters;\n        }\n    };\n    return AdvancedConsoleLogger;\n}());\nexports.AdvancedConsoleLogger = AdvancedConsoleLogger;\n\n//# sourceMappingURL=AdvancedConsoleLogger.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/logger/AdvancedConsoleLogger.js?");

/***/ }),

/***/ "./node_modules/typeorm/logger/DebugLogger.js":
/*!****************************************************!*\
  !*** ./node_modules/typeorm/logger/DebugLogger.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar PlatformTools_1 = __webpack_require__(/*! ../platform/PlatformTools */ \"./node_modules/typeorm/platform/PlatformTools.js\");\n/**\n * Performs logging of the events in TypeORM via debug library.\n */\nvar DebugLogger = /** @class */ (function () {\n    function DebugLogger() {\n        this.debug = PlatformTools_1.PlatformTools.load(\"debug\");\n        this.debugQueryLog = this.debug(\"typeorm:query:log\");\n        this.debugQueryError = this.debug(\"typeorm:query:error\");\n        this.debugQuerySlow = this.debug(\"typeorm:query:slow\");\n        this.debugSchemaBuild = this.debug(\"typeorm:schema\");\n        this.debugMigration = this.debug(\"typeorm:migration\");\n        this.debugLog = this.debug(\"typeorm:log\");\n        this.debugInfo = this.debug(\"typeorm:info\");\n        this.debugWarn = this.debug(\"typeorm:warn\");\n    }\n    /**\n     * Logs query and parameters used in it.\n     */\n    DebugLogger.prototype.logQuery = function (query, parameters, queryRunner) {\n        if (this.debugQueryLog.enabled) {\n            this.debugQueryLog(PlatformTools_1.PlatformTools.highlightSql(query) + \";\");\n            if (parameters && parameters.length) {\n                this.debugQueryLog(\"parameters:\", parameters);\n            }\n        }\n    };\n    /**\n     * Logs query that failed.\n     */\n    DebugLogger.prototype.logQueryError = function (error, query, parameters, queryRunner) {\n        if (this.debugQueryError.enabled) {\n            this.debugQueryError(PlatformTools_1.PlatformTools.highlightSql(query) + \";\");\n            if (parameters && parameters.length) {\n                this.debugQueryError(\"parameters:\", parameters);\n            }\n            this.debugQueryError(\"error: \", error);\n        }\n    };\n    /**\n     * Logs query that is slow.\n     */\n    DebugLogger.prototype.logQuerySlow = function (time, query, parameters, queryRunner) {\n        if (this.debugQuerySlow.enabled) {\n            this.debugQuerySlow(PlatformTools_1.PlatformTools.highlightSql(query) + \";\");\n            if (parameters && parameters.length) {\n                this.debugQuerySlow(\"parameters:\", parameters);\n            }\n            this.debugQuerySlow(\"execution time:\", time);\n        }\n    };\n    /**\n     * Logs events from the schema build process.\n     */\n    DebugLogger.prototype.logSchemaBuild = function (message, queryRunner) {\n        if (this.debugSchemaBuild.enabled) {\n            this.debugSchemaBuild(message);\n        }\n    };\n    /**\n     * Logs events from the migration run process.\n     */\n    DebugLogger.prototype.logMigration = function (message, queryRunner) {\n        if (this.debugMigration.enabled) {\n            this.debugMigration(message);\n        }\n    };\n    /**\n     * Perform logging using given logger.\n     * Log has its own level and message.\n     */\n    DebugLogger.prototype.log = function (level, message, queryRunner) {\n        switch (level) {\n            case \"log\":\n                if (this.debugLog.enabled) {\n                    this.debugLog(message);\n                }\n                break;\n            case \"info\":\n                if (this.debugInfo.enabled) {\n                    this.debugInfo(message);\n                }\n                break;\n            case \"warn\":\n                if (this.debugWarn.enabled) {\n                    this.debugWarn(message);\n                }\n                break;\n        }\n    };\n    return DebugLogger;\n}());\nexports.DebugLogger = DebugLogger;\n\n//# sourceMappingURL=DebugLogger.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/logger/DebugLogger.js?");

/***/ }),

/***/ "./node_modules/typeorm/logger/FileLogger.js":
/*!***************************************************!*\
  !*** ./node_modules/typeorm/logger/FileLogger.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar PlatformTools_1 = __webpack_require__(/*! ../platform/PlatformTools */ \"./node_modules/typeorm/platform/PlatformTools.js\");\n/**\n * Performs logging of the events in TypeORM.\n * This version of logger logs everything into ormlogs.log file.\n */\nvar FileLogger = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function FileLogger(options) {\n        this.options = options;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Logs query and parameters used in it.\n     */\n    FileLogger.prototype.logQuery = function (query, parameters, queryRunner) {\n        if (this.options === \"all\" || this.options === true || (this.options instanceof Array && this.options.indexOf(\"query\") !== -1)) {\n            var sql = query + (parameters && parameters.length ? \" -- PARAMETERS: \" + this.stringifyParams(parameters) : \"\");\n            this.write(\"[QUERY]: \" + sql);\n        }\n    };\n    /**\n     * Logs query that is failed.\n     */\n    FileLogger.prototype.logQueryError = function (error, query, parameters, queryRunner) {\n        if (this.options === \"all\" || this.options === true || (this.options instanceof Array && this.options.indexOf(\"error\") !== -1)) {\n            var sql = query + (parameters && parameters.length ? \" -- PARAMETERS: \" + this.stringifyParams(parameters) : \"\");\n            this.write([\n                \"[FAILED QUERY]: \" + sql,\n                \"[QUERY ERROR]: \" + error\n            ]);\n        }\n    };\n    /**\n     * Logs query that is slow.\n     */\n    FileLogger.prototype.logQuerySlow = function (time, query, parameters, queryRunner) {\n        var sql = query + (parameters && parameters.length ? \" -- PARAMETERS: \" + this.stringifyParams(parameters) : \"\");\n        this.write(\"[SLOW QUERY: \" + time + \" ms]: \" + sql);\n    };\n    /**\n     * Logs events from the schema build process.\n     */\n    FileLogger.prototype.logSchemaBuild = function (message, queryRunner) {\n        if (this.options === \"all\" || (this.options instanceof Array && this.options.indexOf(\"schema\") !== -1)) {\n            this.write(message);\n        }\n    };\n    /**\n     * Logs events from the migrations run process.\n     */\n    FileLogger.prototype.logMigration = function (message, queryRunner) {\n        this.write(message);\n    };\n    /**\n     * Perform logging using given logger, or by default to the console.\n     * Log has its own level and message.\n     */\n    FileLogger.prototype.log = function (level, message, queryRunner) {\n        switch (level) {\n            case \"log\":\n                if (this.options === \"all\" || (this.options instanceof Array && this.options.indexOf(\"log\") !== -1))\n                    this.write(\"[LOG]: \" + message);\n                break;\n            case \"info\":\n                if (this.options === \"all\" || (this.options instanceof Array && this.options.indexOf(\"info\") !== -1))\n                    this.write(\"[INFO]: \" + message);\n                break;\n            case \"warn\":\n                if (this.options === \"all\" || (this.options instanceof Array && this.options.indexOf(\"warn\") !== -1))\n                    this.write(\"[WARN]: \" + message);\n                break;\n        }\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Writes given strings into the log file.\n     */\n    FileLogger.prototype.write = function (strings) {\n        strings = strings instanceof Array ? strings : [strings];\n        var basePath = PlatformTools_1.PlatformTools.load(\"app-root-path\").path;\n        strings = strings.map(function (str) { return \"[\" + new Date().toISOString() + \"]\" + str; });\n        PlatformTools_1.PlatformTools.appendFileSync(basePath + \"/ormlogs.log\", strings.join(\"\\r\\n\") + \"\\r\\n\"); // todo: use async or implement promises?\n    };\n    /**\n     * Converts parameters to a string.\n     * Sometimes parameters can have circular objects and therefor we are handle this case too.\n     */\n    FileLogger.prototype.stringifyParams = function (parameters) {\n        try {\n            return JSON.stringify(parameters);\n        }\n        catch (error) { // most probably circular objects in parameters\n            return parameters;\n        }\n    };\n    return FileLogger;\n}());\nexports.FileLogger = FileLogger;\n\n//# sourceMappingURL=FileLogger.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/logger/FileLogger.js?");

/***/ }),

/***/ "./node_modules/typeorm/logger/LoggerFactory.js":
/*!******************************************************!*\
  !*** ./node_modules/typeorm/logger/LoggerFactory.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar SimpleConsoleLogger_1 = __webpack_require__(/*! ./SimpleConsoleLogger */ \"./node_modules/typeorm/logger/SimpleConsoleLogger.js\");\nvar AdvancedConsoleLogger_1 = __webpack_require__(/*! ./AdvancedConsoleLogger */ \"./node_modules/typeorm/logger/AdvancedConsoleLogger.js\");\nvar FileLogger_1 = __webpack_require__(/*! ./FileLogger */ \"./node_modules/typeorm/logger/FileLogger.js\");\nvar DebugLogger_1 = __webpack_require__(/*! ./DebugLogger */ \"./node_modules/typeorm/logger/DebugLogger.js\");\n/**\n * Helps to create logger instances.\n */\nvar LoggerFactory = /** @class */ (function () {\n    function LoggerFactory() {\n    }\n    /**\n     * Creates a new logger depend on a given connection's driver.\n     */\n    LoggerFactory.prototype.create = function (logger, options) {\n        if (logger instanceof Object)\n            return logger;\n        if (logger) {\n            switch (logger) {\n                case \"simple-console\":\n                    return new SimpleConsoleLogger_1.SimpleConsoleLogger(options);\n                case \"file\":\n                    return new FileLogger_1.FileLogger(options);\n                case \"advanced-console\":\n                    return new AdvancedConsoleLogger_1.AdvancedConsoleLogger(options);\n                case \"debug\":\n                    return new DebugLogger_1.DebugLogger();\n            }\n        }\n        return new AdvancedConsoleLogger_1.AdvancedConsoleLogger(options);\n    };\n    return LoggerFactory;\n}());\nexports.LoggerFactory = LoggerFactory;\n\n//# sourceMappingURL=LoggerFactory.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/logger/LoggerFactory.js?");

/***/ }),

/***/ "./node_modules/typeorm/logger/SimpleConsoleLogger.js":
/*!************************************************************!*\
  !*** ./node_modules/typeorm/logger/SimpleConsoleLogger.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Performs logging of the events in TypeORM.\n * This version of logger uses console to log events and does not use syntax highlighting.\n */\nvar SimpleConsoleLogger = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function SimpleConsoleLogger(options) {\n        this.options = options;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Logs query and parameters used in it.\n     */\n    SimpleConsoleLogger.prototype.logQuery = function (query, parameters, queryRunner) {\n        if (this.options === \"all\" || this.options === true || (this.options instanceof Array && this.options.indexOf(\"query\") !== -1)) {\n            var sql = query + (parameters && parameters.length ? \" -- PARAMETERS: \" + this.stringifyParams(parameters) : \"\");\n            console.log(\"query\" + \": \" + sql);\n        }\n    };\n    /**\n     * Logs query that is failed.\n     */\n    SimpleConsoleLogger.prototype.logQueryError = function (error, query, parameters, queryRunner) {\n        if (this.options === \"all\" || this.options === true || (this.options instanceof Array && this.options.indexOf(\"error\") !== -1)) {\n            var sql = query + (parameters && parameters.length ? \" -- PARAMETERS: \" + this.stringifyParams(parameters) : \"\");\n            console.log(\"query failed: \" + sql);\n            console.log(\"error:\", error);\n        }\n    };\n    /**\n     * Logs query that is slow.\n     */\n    SimpleConsoleLogger.prototype.logQuerySlow = function (time, query, parameters, queryRunner) {\n        var sql = query + (parameters && parameters.length ? \" -- PARAMETERS: \" + this.stringifyParams(parameters) : \"\");\n        console.log(\"query is slow: \" + sql);\n        console.log(\"execution time: \" + time);\n    };\n    /**\n     * Logs events from the schema build process.\n     */\n    SimpleConsoleLogger.prototype.logSchemaBuild = function (message, queryRunner) {\n        if (this.options === \"all\" || (this.options instanceof Array && this.options.indexOf(\"schema\") !== -1)) {\n            console.log(message);\n        }\n    };\n    /**\n     * Logs events from the migrations run process.\n     */\n    SimpleConsoleLogger.prototype.logMigration = function (message, queryRunner) {\n        console.log(message);\n    };\n    /**\n     * Perform logging using given logger, or by default to the console.\n     * Log has its own level and message.\n     */\n    SimpleConsoleLogger.prototype.log = function (level, message, queryRunner) {\n        switch (level) {\n            case \"log\":\n                if (this.options === \"all\" || (this.options instanceof Array && this.options.indexOf(\"log\") !== -1))\n                    console.log(message);\n                break;\n            case \"info\":\n                if (this.options === \"all\" || (this.options instanceof Array && this.options.indexOf(\"info\") !== -1))\n                    console.info(message);\n                break;\n            case \"warn\":\n                if (this.options === \"all\" || (this.options instanceof Array && this.options.indexOf(\"warn\") !== -1))\n                    console.warn(message);\n                break;\n        }\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Converts parameters to a string.\n     * Sometimes parameters can have circular objects and therefor we are handle this case too.\n     */\n    SimpleConsoleLogger.prototype.stringifyParams = function (parameters) {\n        try {\n            return JSON.stringify(parameters);\n        }\n        catch (error) { // most probably circular objects in parameters\n            return parameters;\n        }\n    };\n    return SimpleConsoleLogger;\n}());\nexports.SimpleConsoleLogger = SimpleConsoleLogger;\n\n//# sourceMappingURL=SimpleConsoleLogger.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/logger/SimpleConsoleLogger.js?");

/***/ }),

/***/ "./node_modules/typeorm/metadata-args/MetadataArgsStorage.js":
/*!*******************************************************************!*\
  !*** ./node_modules/typeorm/metadata-args/MetadataArgsStorage.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MetadataUtils_1 = __webpack_require__(/*! ../metadata-builder/MetadataUtils */ \"./node_modules/typeorm/metadata-builder/MetadataUtils.js\");\n/**\n * Storage all metadatas args of all available types: tables, columns, subscribers, relations, etc.\n * Each metadata args represents some specifications of what it represents.\n * MetadataArgs used to create a real Metadata objects.\n */\nvar MetadataArgsStorage = /** @class */ (function () {\n    function MetadataArgsStorage() {\n        // -------------------------------------------------------------------------\n        // Properties\n        // -------------------------------------------------------------------------\n        this.tables = [];\n        this.trees = [];\n        this.entityRepositories = [];\n        this.transactionEntityManagers = [];\n        this.transactionRepositories = [];\n        this.namingStrategies = [];\n        this.entitySubscribers = [];\n        this.indices = [];\n        this.uniques = [];\n        this.checks = [];\n        this.columns = [];\n        this.generations = [];\n        this.relations = [];\n        this.joinColumns = [];\n        this.joinTables = [];\n        this.entityListeners = [];\n        this.relationCounts = [];\n        this.relationIds = [];\n        this.embeddeds = [];\n        this.inheritances = [];\n        this.discriminatorValues = [];\n    }\n    MetadataArgsStorage.prototype.filterTables = function (target) {\n        return this.filterByTarget(this.tables, target);\n    };\n    MetadataArgsStorage.prototype.filterColumns = function (target) {\n        return this.filterByTargetAndWithoutDuplicateProperties(this.columns, target);\n    };\n    MetadataArgsStorage.prototype.findGenerated = function (target, propertyName) {\n        return this.generations.find(function (generated) {\n            return (target instanceof Array ? target.indexOf(generated.target) !== -1 : generated.target === target) && generated.propertyName === propertyName;\n        });\n    };\n    MetadataArgsStorage.prototype.findTree = function (target) {\n        return this.trees.find(function (tree) {\n            return (target instanceof Array ? target.indexOf(tree.target) !== -1 : tree.target === target);\n        });\n    };\n    MetadataArgsStorage.prototype.filterRelations = function (target) {\n        return this.filterByTargetAndWithoutDuplicateProperties(this.relations, target);\n    };\n    MetadataArgsStorage.prototype.filterRelationIds = function (target) {\n        return this.filterByTargetAndWithoutDuplicateProperties(this.relationIds, target);\n    };\n    MetadataArgsStorage.prototype.filterRelationCounts = function (target) {\n        return this.filterByTargetAndWithoutDuplicateProperties(this.relationCounts, target);\n    };\n    MetadataArgsStorage.prototype.filterIndices = function (target) {\n        // todo: implement parent-entity overrides?\n        return this.indices.filter(function (index) {\n            return target instanceof Array ? target.indexOf(index.target) !== -1 : index.target === target;\n        });\n    };\n    MetadataArgsStorage.prototype.filterUniques = function (target) {\n        return this.uniques.filter(function (unique) {\n            return target instanceof Array ? target.indexOf(unique.target) !== -1 : unique.target === target;\n        });\n    };\n    MetadataArgsStorage.prototype.filterChecks = function (target) {\n        return this.checks.filter(function (check) {\n            return target instanceof Array ? target.indexOf(check.target) !== -1 : check.target === target;\n        });\n    };\n    MetadataArgsStorage.prototype.filterListeners = function (target) {\n        return this.filterByTarget(this.entityListeners, target);\n    };\n    MetadataArgsStorage.prototype.filterEmbeddeds = function (target) {\n        return this.filterByTargetAndWithoutDuplicateProperties(this.embeddeds, target);\n    };\n    MetadataArgsStorage.prototype.findJoinTable = function (target, propertyName) {\n        return this.joinTables.find(function (joinTable) {\n            return joinTable.target === target && joinTable.propertyName === propertyName;\n        });\n    };\n    MetadataArgsStorage.prototype.filterJoinColumns = function (target, propertyName) {\n        // todo: implement parent-entity overrides?\n        return this.joinColumns.filter(function (joinColumn) {\n            return joinColumn.target === target && joinColumn.propertyName === propertyName;\n        });\n    };\n    MetadataArgsStorage.prototype.filterSubscribers = function (target) {\n        return this.filterByTarget(this.entitySubscribers, target);\n    };\n    MetadataArgsStorage.prototype.filterNamingStrategies = function (target) {\n        return this.filterByTarget(this.namingStrategies, target);\n    };\n    MetadataArgsStorage.prototype.filterTransactionEntityManagers = function (target, propertyName) {\n        return this.transactionEntityManagers.filter(function (transactionEm) {\n            return (target instanceof Array ? target.indexOf(transactionEm.target) !== -1 : transactionEm.target === target) && transactionEm.methodName === propertyName;\n        });\n    };\n    MetadataArgsStorage.prototype.filterTransactionRepository = function (target, propertyName) {\n        return this.transactionRepositories.filter(function (transactionEm) {\n            return (target instanceof Array ? target.indexOf(transactionEm.target) !== -1 : transactionEm.target === target) && transactionEm.methodName === propertyName;\n        });\n    };\n    MetadataArgsStorage.prototype.filterSingleTableChildren = function (target) {\n        return this.tables.filter(function (table) {\n            return table.target instanceof Function\n                && target instanceof Function\n                && MetadataUtils_1.MetadataUtils.isInherited(table.target, target)\n                && table.type === \"entity-child\";\n        });\n    };\n    MetadataArgsStorage.prototype.findInheritanceType = function (target) {\n        return this.inheritances.find(function (inheritance) { return inheritance.target === target; });\n    };\n    MetadataArgsStorage.prototype.findDiscriminatorValue = function (target) {\n        return this.discriminatorValues.find(function (discriminatorValue) { return discriminatorValue.target === target; });\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Filters given array by a given target or targets.\n     */\n    MetadataArgsStorage.prototype.filterByTarget = function (array, target) {\n        return array.filter(function (table) {\n            return target instanceof Array ? target.indexOf(table.target) !== -1 : table.target === target;\n        });\n    };\n    /**\n     * Filters given array by a given target or targets and prevents duplicate property names.\n     */\n    MetadataArgsStorage.prototype.filterByTargetAndWithoutDuplicateProperties = function (array, target) {\n        var newArray = [];\n        array.forEach(function (item) {\n            var sameTarget = target instanceof Array ? target.indexOf(item.target) !== -1 : item.target === target;\n            if (sameTarget) {\n                if (!newArray.find(function (newItem) { return newItem.propertyName === item.propertyName; }))\n                    newArray.push(item);\n            }\n        });\n        return newArray;\n    };\n    return MetadataArgsStorage;\n}());\nexports.MetadataArgsStorage = MetadataArgsStorage;\n\n//# sourceMappingURL=MetadataArgsStorage.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/metadata-args/MetadataArgsStorage.js?");

/***/ }),

/***/ "./node_modules/typeorm/metadata-builder/ClosureJunctionEntityMetadataBuilder.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/typeorm/metadata-builder/ClosureJunctionEntityMetadataBuilder.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar EntityMetadata_1 = __webpack_require__(/*! ../metadata/EntityMetadata */ \"./node_modules/typeorm/metadata/EntityMetadata.js\");\nvar ColumnMetadata_1 = __webpack_require__(/*! ../metadata/ColumnMetadata */ \"./node_modules/typeorm/metadata/ColumnMetadata.js\");\nvar ForeignKeyMetadata_1 = __webpack_require__(/*! ../metadata/ForeignKeyMetadata */ \"./node_modules/typeorm/metadata/ForeignKeyMetadata.js\");\n/**\n * Creates EntityMetadata for junction tables of the closure entities.\n * Closure junction tables are tables generated by closure entities.\n */\nvar ClosureJunctionEntityMetadataBuilder = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function ClosureJunctionEntityMetadataBuilder(connection) {\n        this.connection = connection;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Builds EntityMetadata for the closure junction of the given closure entity.\n     */\n    ClosureJunctionEntityMetadataBuilder.prototype.build = function (parentClosureEntityMetadata) {\n        var _this = this;\n        // create entity metadata itself\n        var entityMetadata = new EntityMetadata_1.EntityMetadata({\n            parentClosureEntityMetadata: parentClosureEntityMetadata,\n            connection: this.connection,\n            args: {\n                target: \"\",\n                name: parentClosureEntityMetadata.tableNameWithoutPrefix,\n                type: \"closure-junction\"\n            }\n        });\n        entityMetadata.build();\n        // create ancestor and descendant columns for new closure junction table\n        parentClosureEntityMetadata.primaryColumns.forEach(function (primaryColumn) {\n            entityMetadata.ownColumns.push(new ColumnMetadata_1.ColumnMetadata({\n                connection: _this.connection,\n                entityMetadata: entityMetadata,\n                closureType: \"ancestor\",\n                referencedColumn: primaryColumn,\n                args: {\n                    target: \"\",\n                    mode: \"virtual\",\n                    propertyName: primaryColumn.propertyName + \"_ancestor\",\n                    options: {\n                        primary: true,\n                        length: primaryColumn.length,\n                        type: primaryColumn.type\n                    }\n                }\n            }));\n            entityMetadata.ownColumns.push(new ColumnMetadata_1.ColumnMetadata({\n                connection: _this.connection,\n                entityMetadata: entityMetadata,\n                closureType: \"descendant\",\n                referencedColumn: primaryColumn,\n                args: {\n                    target: \"\",\n                    mode: \"virtual\",\n                    propertyName: primaryColumn.propertyName + \"_descendant\",\n                    options: {\n                        primary: true,\n                        length: primaryColumn.length,\n                        type: primaryColumn.type,\n                    }\n                }\n            }));\n        });\n        // if tree level column was defined by a closure entity then add it to the junction columns as well\n        if (parentClosureEntityMetadata.treeLevelColumn) {\n            entityMetadata.ownColumns.push(new ColumnMetadata_1.ColumnMetadata({\n                connection: this.connection,\n                entityMetadata: entityMetadata,\n                args: {\n                    target: \"\",\n                    mode: \"virtual\",\n                    propertyName: \"level\",\n                    options: {\n                        type: this.connection.driver.mappedDataTypes.treeLevel,\n                    }\n                }\n            }));\n        }\n        // create junction table foreign keys\n        entityMetadata.foreignKeys = [\n            new ForeignKeyMetadata_1.ForeignKeyMetadata({\n                entityMetadata: entityMetadata,\n                referencedEntityMetadata: parentClosureEntityMetadata,\n                columns: [entityMetadata.ownColumns[0]],\n                referencedColumns: parentClosureEntityMetadata.primaryColumns,\n            }),\n            new ForeignKeyMetadata_1.ForeignKeyMetadata({\n                entityMetadata: entityMetadata,\n                referencedEntityMetadata: parentClosureEntityMetadata,\n                columns: [entityMetadata.ownColumns[1]],\n                referencedColumns: parentClosureEntityMetadata.primaryColumns,\n            }),\n        ];\n        return entityMetadata;\n    };\n    return ClosureJunctionEntityMetadataBuilder;\n}());\nexports.ClosureJunctionEntityMetadataBuilder = ClosureJunctionEntityMetadataBuilder;\n\n//# sourceMappingURL=ClosureJunctionEntityMetadataBuilder.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/metadata-builder/ClosureJunctionEntityMetadataBuilder.js?");

/***/ }),

/***/ "./node_modules/typeorm/metadata-builder/EntityMetadataBuilder.js":
/*!************************************************************************!*\
  !*** ./node_modules/typeorm/metadata-builder/EntityMetadataBuilder.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar EntityMetadata_1 = __webpack_require__(/*! ../metadata/EntityMetadata */ \"./node_modules/typeorm/metadata/EntityMetadata.js\");\nvar ColumnMetadata_1 = __webpack_require__(/*! ../metadata/ColumnMetadata */ \"./node_modules/typeorm/metadata/ColumnMetadata.js\");\nvar IndexMetadata_1 = __webpack_require__(/*! ../metadata/IndexMetadata */ \"./node_modules/typeorm/metadata/IndexMetadata.js\");\nvar RelationMetadata_1 = __webpack_require__(/*! ../metadata/RelationMetadata */ \"./node_modules/typeorm/metadata/RelationMetadata.js\");\nvar EmbeddedMetadata_1 = __webpack_require__(/*! ../metadata/EmbeddedMetadata */ \"./node_modules/typeorm/metadata/EmbeddedMetadata.js\");\nvar RelationIdMetadata_1 = __webpack_require__(/*! ../metadata/RelationIdMetadata */ \"./node_modules/typeorm/metadata/RelationIdMetadata.js\");\nvar RelationCountMetadata_1 = __webpack_require__(/*! ../metadata/RelationCountMetadata */ \"./node_modules/typeorm/metadata/RelationCountMetadata.js\");\nvar MetadataUtils_1 = __webpack_require__(/*! ./MetadataUtils */ \"./node_modules/typeorm/metadata-builder/MetadataUtils.js\");\nvar JunctionEntityMetadataBuilder_1 = __webpack_require__(/*! ./JunctionEntityMetadataBuilder */ \"./node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js\");\nvar ClosureJunctionEntityMetadataBuilder_1 = __webpack_require__(/*! ./ClosureJunctionEntityMetadataBuilder */ \"./node_modules/typeorm/metadata-builder/ClosureJunctionEntityMetadataBuilder.js\");\nvar RelationJoinColumnBuilder_1 = __webpack_require__(/*! ./RelationJoinColumnBuilder */ \"./node_modules/typeorm/metadata-builder/RelationJoinColumnBuilder.js\");\nvar EntityListenerMetadata_1 = __webpack_require__(/*! ../metadata/EntityListenerMetadata */ \"./node_modules/typeorm/metadata/EntityListenerMetadata.js\");\nvar UniqueMetadata_1 = __webpack_require__(/*! ../metadata/UniqueMetadata */ \"./node_modules/typeorm/metadata/UniqueMetadata.js\");\nvar MysqlDriver_1 = __webpack_require__(/*! ../driver/mysql/MysqlDriver */ \"./node_modules/typeorm/driver/mysql/MysqlDriver.js\");\nvar CheckMetadata_1 = __webpack_require__(/*! ../metadata/CheckMetadata */ \"./node_modules/typeorm/metadata/CheckMetadata.js\");\nvar SqlServerDriver_1 = __webpack_require__(/*! ../driver/sqlserver/SqlServerDriver */ \"./node_modules/typeorm/driver/sqlserver/SqlServerDriver.js\");\n/**\n * Builds EntityMetadata objects and all its sub-metadatas.\n */\nvar EntityMetadataBuilder = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function EntityMetadataBuilder(connection, metadataArgsStorage) {\n        this.connection = connection;\n        this.metadataArgsStorage = metadataArgsStorage;\n        this.junctionEntityMetadataBuilder = new JunctionEntityMetadataBuilder_1.JunctionEntityMetadataBuilder(connection);\n        this.closureJunctionEntityMetadataBuilder = new ClosureJunctionEntityMetadataBuilder_1.ClosureJunctionEntityMetadataBuilder(connection);\n        this.relationJoinColumnBuilder = new RelationJoinColumnBuilder_1.RelationJoinColumnBuilder(connection);\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Builds a complete entity metadatas for the given entity classes.\n     */\n    EntityMetadataBuilder.prototype.build = function (entityClasses) {\n        var _this = this;\n        // if entity classes to filter entities by are given then do filtering, otherwise use all\n        var allTables = entityClasses ? this.metadataArgsStorage.filterTables(entityClasses) : this.metadataArgsStorage.tables;\n        // filter out table metadata args for those we really create entity metadatas and tables in the db\n        var realTables = allTables.filter(function (table) { return table.type === \"regular\" || table.type === \"closure\" || table.type === \"entity-child\"; });\n        // create entity metadatas for a user defined entities (marked with @Entity decorator or loaded from entity schemas)\n        var entityMetadatas = realTables.map(function (tableArgs) { return _this.createEntityMetadata(tableArgs); });\n        // compute parent entity metadatas for table inheritance\n        entityMetadatas.forEach(function (entityMetadata) { return _this.computeParentEntityMetadata(entityMetadatas, entityMetadata); });\n        // after all metadatas created we set child entity metadatas for table inheritance\n        entityMetadatas.forEach(function (metadata) {\n            metadata.childEntityMetadatas = entityMetadatas.filter(function (childMetadata) {\n                return metadata.target instanceof Function\n                    && childMetadata.target instanceof Function\n                    && MetadataUtils_1.MetadataUtils.isInherited(childMetadata.target, metadata.target);\n            });\n        });\n        // build entity metadata (step0), first for non-single-table-inherited entity metadatas (dependant)\n        entityMetadatas\n            .filter(function (entityMetadata) { return entityMetadata.tableType !== \"entity-child\"; })\n            .forEach(function (entityMetadata) { return entityMetadata.build(); });\n        // build entity metadata (step0), now for single-table-inherited entity metadatas (dependant)\n        entityMetadatas\n            .filter(function (entityMetadata) { return entityMetadata.tableType === \"entity-child\"; })\n            .forEach(function (entityMetadata) { return entityMetadata.build(); });\n        // compute entity metadata columns, relations, etc. first for the regular, non-single-table-inherited entity metadatas\n        entityMetadatas\n            .filter(function (entityMetadata) { return entityMetadata.tableType !== \"entity-child\"; })\n            .forEach(function (entityMetadata) { return _this.computeEntityMetadataStep1(entityMetadatas, entityMetadata); });\n        // then do it for single table inheritance children (since they are depend on their parents to be built)\n        entityMetadatas\n            .filter(function (entityMetadata) { return entityMetadata.tableType === \"entity-child\"; })\n            .forEach(function (entityMetadata) { return _this.computeEntityMetadataStep1(entityMetadatas, entityMetadata); });\n        // calculate entity metadata computed properties and all its sub-metadatas\n        entityMetadatas.forEach(function (entityMetadata) { return _this.computeEntityMetadataStep2(entityMetadata); });\n        // calculate entity metadata's inverse properties\n        entityMetadatas.forEach(function (entityMetadata) { return _this.computeInverseProperties(entityMetadata, entityMetadatas); });\n        // go through all entity metadatas and create foreign keys / junction entity metadatas for their relations\n        entityMetadatas\n            .filter(function (entityMetadata) { return entityMetadata.tableType !== \"entity-child\"; })\n            .forEach(function (entityMetadata) {\n            // create entity's relations join columns (for many-to-one and one-to-one owner)\n            entityMetadata.relations.filter(function (relation) { return relation.isOneToOne || relation.isManyToOne; }).forEach(function (relation) {\n                var joinColumns = _this.metadataArgsStorage.filterJoinColumns(relation.target, relation.propertyName);\n                var _a = _this.relationJoinColumnBuilder.build(joinColumns, relation), foreignKey = _a.foreignKey, uniqueConstraint = _a.uniqueConstraint; // create a foreign key based on its metadata args\n                if (foreignKey) {\n                    relation.registerForeignKeys(foreignKey); // push it to the relation and thus register there a join column\n                    entityMetadata.foreignKeys.push(foreignKey);\n                }\n                if (uniqueConstraint) {\n                    if (_this.connection.driver instanceof MysqlDriver_1.MysqlDriver || _this.connection.driver instanceof SqlServerDriver_1.SqlServerDriver) {\n                        var index = new IndexMetadata_1.IndexMetadata({\n                            entityMetadata: uniqueConstraint.entityMetadata,\n                            columns: uniqueConstraint.columns,\n                            args: {\n                                target: uniqueConstraint.target,\n                                name: uniqueConstraint.name,\n                                unique: true,\n                                synchronize: true\n                            }\n                        });\n                        if (_this.connection.driver instanceof SqlServerDriver_1.SqlServerDriver) {\n                            index.where = index.columns.map(function (column) {\n                                return _this.connection.driver.escape(column.databaseName) + \" IS NOT NULL\";\n                            }).join(\" AND \");\n                        }\n                        entityMetadata.indices.push(index);\n                    }\n                    else {\n                        entityMetadata.uniques.push(uniqueConstraint);\n                    }\n                }\n            });\n            // create junction entity metadatas for entity many-to-many relations\n            entityMetadata.relations.filter(function (relation) { return relation.isManyToMany; }).forEach(function (relation) {\n                var joinTable = _this.metadataArgsStorage.findJoinTable(relation.target, relation.propertyName);\n                if (!joinTable)\n                    return; // no join table set - no need to do anything (it means this is many-to-many inverse side)\n                // here we create a junction entity metadata for a new junction table of many-to-many relation\n                var junctionEntityMetadata = _this.junctionEntityMetadataBuilder.build(relation, joinTable);\n                relation.registerForeignKeys.apply(relation, __spread(junctionEntityMetadata.foreignKeys));\n                relation.registerJunctionEntityMetadata(junctionEntityMetadata);\n                // compute new entity metadata properties and push it to entity metadatas pool\n                _this.computeEntityMetadataStep2(junctionEntityMetadata);\n                _this.computeInverseProperties(junctionEntityMetadata, entityMetadatas);\n                entityMetadatas.push(junctionEntityMetadata);\n            });\n        });\n        // update entity metadata depend properties\n        entityMetadatas\n            .forEach(function (entityMetadata) {\n            entityMetadata.relationsWithJoinColumns = entityMetadata.relations.filter(function (relation) { return relation.isWithJoinColumn; });\n            entityMetadata.hasNonNullableRelations = entityMetadata.relationsWithJoinColumns.some(function (relation) { return !relation.isNullable || relation.isPrimary; });\n        });\n        // generate closure junction tables for all closure tables\n        entityMetadatas\n            .filter(function (metadata) { return metadata.treeType === \"closure-table\"; })\n            .forEach(function (entityMetadata) {\n            var closureJunctionEntityMetadata = _this.closureJunctionEntityMetadataBuilder.build(entityMetadata);\n            entityMetadata.closureJunctionTable = closureJunctionEntityMetadata;\n            _this.computeEntityMetadataStep2(closureJunctionEntityMetadata);\n            _this.computeInverseProperties(closureJunctionEntityMetadata, entityMetadatas);\n            entityMetadatas.push(closureJunctionEntityMetadata);\n        });\n        // generate keys for tables with single-table inheritance\n        entityMetadatas\n            .filter(function (metadata) { return metadata.inheritancePattern === \"STI\" && metadata.discriminatorColumn; })\n            .forEach(function (entityMetadata) { return _this.createKeysForTableInheritance(entityMetadata); });\n        // build all indices (need to do it after relations and their join columns are built)\n        entityMetadatas.forEach(function (entityMetadata) {\n            entityMetadata.indices.forEach(function (index) { return index.build(_this.connection.namingStrategy); });\n        });\n        // build all unique constraints (need to do it after relations and their join columns are built)\n        entityMetadatas.forEach(function (entityMetadata) {\n            entityMetadata.uniques.forEach(function (unique) { return unique.build(_this.connection.namingStrategy); });\n        });\n        // build all check constraints\n        entityMetadatas.forEach(function (entityMetadata) {\n            entityMetadata.checks.forEach(function (check) { return check.build(_this.connection.namingStrategy); });\n        });\n        // add lazy initializer for entity relations\n        entityMetadatas\n            .filter(function (metadata) { return metadata.target instanceof Function; })\n            .forEach(function (entityMetadata) {\n            entityMetadata.relations\n                .filter(function (relation) { return relation.isLazy; })\n                .forEach(function (relation) {\n                _this.connection.relationLoader.enableLazyLoad(relation, entityMetadata.target.prototype);\n            });\n        });\n        entityMetadatas.forEach(function (entityMetadata) {\n            entityMetadata.columns.forEach(function (column) {\n                // const target = column.embeddedMetadata ? column.embeddedMetadata.type : column.target;\n                var generated = _this.metadataArgsStorage.findGenerated(column.target, column.propertyName);\n                if (generated) {\n                    column.isGenerated = true;\n                    column.generationStrategy = generated.strategy;\n                    column.type = generated.strategy === \"increment\" ? (column.type || Number) : \"uuid\";\n                    column.build(_this.connection);\n                    _this.computeEntityMetadataStep2(entityMetadata);\n                }\n            });\n        });\n        return entityMetadatas;\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates entity metadata from the given table args.\n     * Creates column, relation, etc. metadatas for everything this entity metadata owns.\n     */\n    EntityMetadataBuilder.prototype.createEntityMetadata = function (tableArgs) {\n        // we take all \"inheritance tree\" from a target entity to collect all stored metadata args\n        // (by decorators or inside entity schemas). For example for target Post < ContentModel < Unit\n        // it will be an array of [Post, ContentModel, Unit] and we can then get all metadata args of those classes\n        var inheritanceTree = tableArgs.target instanceof Function\n            ? MetadataUtils_1.MetadataUtils.getInheritanceTree(tableArgs.target)\n            : [tableArgs.target]; // todo: implement later here inheritance for string-targets\n        var tableInheritance = this.metadataArgsStorage.findInheritanceType(tableArgs.target);\n        var tableTree = this.metadataArgsStorage.findTree(tableArgs.target);\n        // if single table inheritance used, we need to copy all children columns in to parent table\n        var singleTableChildrenTargets;\n        if ((tableInheritance && tableInheritance.pattern === \"STI\") || tableArgs.type === \"entity-child\") {\n            singleTableChildrenTargets = this.metadataArgsStorage\n                .filterSingleTableChildren(tableArgs.target)\n                .map(function (args) { return args.target; })\n                .filter(function (target) { return target instanceof Function; });\n            inheritanceTree.push.apply(inheritanceTree, __spread(singleTableChildrenTargets));\n        }\n        return new EntityMetadata_1.EntityMetadata({\n            connection: this.connection,\n            args: tableArgs,\n            inheritanceTree: inheritanceTree,\n            tableTree: tableTree,\n            inheritancePattern: tableInheritance ? tableInheritance.pattern : undefined\n        });\n    };\n    EntityMetadataBuilder.prototype.computeParentEntityMetadata = function (allEntityMetadatas, entityMetadata) {\n        // after all metadatas created we set parent entity metadata for table inheritance\n        if (entityMetadata.tableType === \"entity-child\") {\n            entityMetadata.parentEntityMetadata = allEntityMetadatas.find(function (allEntityMetadata) {\n                return allEntityMetadata.inheritanceTree.indexOf(entityMetadata.target) !== -1 && allEntityMetadata.inheritancePattern === \"STI\";\n            });\n        }\n    };\n    EntityMetadataBuilder.prototype.computeEntityMetadataStep1 = function (allEntityMetadatas, entityMetadata) {\n        var _this = this;\n        var entityInheritance = this.metadataArgsStorage.findInheritanceType(entityMetadata.target);\n        var discriminatorValue = this.metadataArgsStorage.findDiscriminatorValue(entityMetadata.target);\n        entityMetadata.discriminatorValue = discriminatorValue ? discriminatorValue.value : entityMetadata.target.name; // todo: pass this to naming strategy to generate a name\n        entityMetadata.embeddeds = this.createEmbeddedsRecursively(entityMetadata, this.metadataArgsStorage.filterEmbeddeds(entityMetadata.inheritanceTree));\n        entityMetadata.ownColumns = this.metadataArgsStorage\n            .filterColumns(entityMetadata.inheritanceTree)\n            .map(function (args) {\n            // for single table children we reuse columns created for their parents\n            if (entityMetadata.tableType === \"entity-child\")\n                return entityMetadata.parentEntityMetadata.ownColumns.find(function (column) { return column.propertyName === args.propertyName; });\n            var column = new ColumnMetadata_1.ColumnMetadata({ connection: _this.connection, entityMetadata: entityMetadata, args: args });\n            // if single table inheritance used, we need to mark all inherit table columns as nullable\n            var columnInSingleTableInheritedChild = allEntityMetadatas.find(function (otherEntityMetadata) { return otherEntityMetadata.tableType === \"entity-child\" && otherEntityMetadata.target === args.target; });\n            if (columnInSingleTableInheritedChild)\n                column.isNullable = true;\n            return column;\n        });\n        // for table inheritance we need to add a discriminator column\n        //\n        if (entityInheritance && entityInheritance.column) {\n            var discriminatorColumnName_1 = entityInheritance.column && entityInheritance.column.name ? entityInheritance.column.name : \"type\";\n            var discriminatorColumn = entityMetadata.ownColumns.find(function (column) { return column.propertyName === discriminatorColumnName_1; });\n            if (!discriminatorColumn) {\n                discriminatorColumn = new ColumnMetadata_1.ColumnMetadata({\n                    connection: this.connection,\n                    entityMetadata: entityMetadata,\n                    args: {\n                        target: entityMetadata.target,\n                        mode: \"virtual\",\n                        propertyName: discriminatorColumnName_1,\n                        options: entityInheritance.column || {\n                            name: discriminatorColumnName_1,\n                            type: \"varchar\",\n                            nullable: false\n                        }\n                    }\n                });\n                discriminatorColumn.isVirtual = true;\n                discriminatorColumn.isDiscriminator = true;\n                entityMetadata.ownColumns.push(discriminatorColumn);\n            }\n            else {\n                discriminatorColumn.isDiscriminator = true;\n            }\n        }\n        // add discriminator column to the child entity metadatas\n        // discriminator column will not be there automatically since we are creating it in the code above\n        if (entityMetadata.tableType === \"entity-child\") {\n            var discriminatorColumn_1 = entityMetadata.parentEntityMetadata.ownColumns.find(function (column) { return column.isDiscriminator; });\n            if (discriminatorColumn_1 && !entityMetadata.ownColumns.find(function (column) { return column === discriminatorColumn_1; })) {\n                entityMetadata.ownColumns.push(discriminatorColumn_1);\n            }\n        }\n        // check if tree is used then we need to add extra columns for specific tree types\n        if (entityMetadata.treeType === \"materialized-path\") {\n            entityMetadata.ownColumns.push(new ColumnMetadata_1.ColumnMetadata({\n                connection: this.connection,\n                entityMetadata: entityMetadata,\n                materializedPath: true,\n                args: {\n                    target: entityMetadata.target,\n                    mode: \"virtual\",\n                    propertyName: \"mpath\",\n                    options: /*tree.column || */ {\n                        name: \"mpath\",\n                        type: \"varchar\",\n                        nullable: true,\n                        default: \"\"\n                    }\n                }\n            }));\n        }\n        else if (entityMetadata.treeType === \"nested-set\") {\n            entityMetadata.ownColumns.push(new ColumnMetadata_1.ColumnMetadata({\n                connection: this.connection,\n                entityMetadata: entityMetadata,\n                nestedSetLeft: true,\n                args: {\n                    target: entityMetadata.target,\n                    mode: \"virtual\",\n                    propertyName: \"nsleft\",\n                    options: /*tree.column || */ {\n                        name: \"nsleft\",\n                        type: \"integer\",\n                        nullable: false,\n                        default: 1\n                    }\n                }\n            }));\n            entityMetadata.ownColumns.push(new ColumnMetadata_1.ColumnMetadata({\n                connection: this.connection,\n                entityMetadata: entityMetadata,\n                nestedSetRight: true,\n                args: {\n                    target: entityMetadata.target,\n                    mode: \"virtual\",\n                    propertyName: \"nsright\",\n                    options: /*tree.column || */ {\n                        name: \"nsright\",\n                        type: \"integer\",\n                        nullable: false,\n                        default: 2\n                    }\n                }\n            }));\n        }\n        entityMetadata.ownRelations = this.metadataArgsStorage.filterRelations(entityMetadata.inheritanceTree).map(function (args) {\n            // for single table children we reuse relations created for their parents\n            if (entityMetadata.tableType === \"entity-child\")\n                return entityMetadata.parentEntityMetadata.ownRelations.find(function (relation) { return relation.propertyName === args.propertyName; });\n            return new RelationMetadata_1.RelationMetadata({ entityMetadata: entityMetadata, args: args });\n        });\n        entityMetadata.relationIds = this.metadataArgsStorage.filterRelationIds(entityMetadata.inheritanceTree).map(function (args) {\n            // for single table children we reuse relation ids created for their parents\n            if (entityMetadata.tableType === \"entity-child\")\n                return entityMetadata.parentEntityMetadata.relationIds.find(function (relationId) { return relationId.propertyName === args.propertyName; });\n            return new RelationIdMetadata_1.RelationIdMetadata({ entityMetadata: entityMetadata, args: args });\n        });\n        entityMetadata.relationCounts = this.metadataArgsStorage.filterRelationCounts(entityMetadata.inheritanceTree).map(function (args) {\n            // for single table children we reuse relation counts created for their parents\n            if (entityMetadata.tableType === \"entity-child\")\n                return entityMetadata.parentEntityMetadata.relationCounts.find(function (relationCount) { return relationCount.propertyName === args.propertyName; });\n            return new RelationCountMetadata_1.RelationCountMetadata({ entityMetadata: entityMetadata, args: args });\n        });\n        entityMetadata.ownIndices = this.metadataArgsStorage.filterIndices(entityMetadata.inheritanceTree).map(function (args) {\n            return new IndexMetadata_1.IndexMetadata({ entityMetadata: entityMetadata, args: args });\n        });\n        entityMetadata.ownListeners = this.metadataArgsStorage.filterListeners(entityMetadata.inheritanceTree).map(function (args) {\n            return new EntityListenerMetadata_1.EntityListenerMetadata({ entityMetadata: entityMetadata, args: args });\n        });\n        entityMetadata.checks = this.metadataArgsStorage.filterChecks(entityMetadata.inheritanceTree).map(function (args) {\n            return new CheckMetadata_1.CheckMetadata({ entityMetadata: entityMetadata, args: args });\n        });\n        // Mysql stores unique constraints as unique indices.\n        if (this.connection.driver instanceof MysqlDriver_1.MysqlDriver) {\n            var indices = this.metadataArgsStorage.filterUniques(entityMetadata.inheritanceTree).map(function (args) {\n                return new IndexMetadata_1.IndexMetadata({\n                    entityMetadata: entityMetadata,\n                    args: {\n                        target: args.target,\n                        name: args.name,\n                        columns: args.columns,\n                        unique: true,\n                        synchronize: true\n                    }\n                });\n            });\n            (_a = entityMetadata.ownIndices).push.apply(_a, __spread(indices));\n        }\n        else {\n            entityMetadata.uniques = this.metadataArgsStorage.filterUniques(entityMetadata.inheritanceTree).map(function (args) {\n                return new UniqueMetadata_1.UniqueMetadata({ entityMetadata: entityMetadata, args: args });\n            });\n        }\n        var _a;\n    };\n    /**\n     * Creates from the given embedded metadata args real embedded metadatas with its columns and relations,\n     * and does the same for all its sub-embeddeds (goes recursively).\n     */\n    EntityMetadataBuilder.prototype.createEmbeddedsRecursively = function (entityMetadata, embeddedArgs) {\n        var _this = this;\n        return embeddedArgs.map(function (embeddedArgs) {\n            var embeddedMetadata = new EmbeddedMetadata_1.EmbeddedMetadata({ entityMetadata: entityMetadata, args: embeddedArgs });\n            var targets = MetadataUtils_1.MetadataUtils.getInheritanceTree(embeddedMetadata.type);\n            embeddedMetadata.columns = _this.metadataArgsStorage.filterColumns(targets).map(function (args) {\n                return new ColumnMetadata_1.ColumnMetadata({ connection: _this.connection, entityMetadata: entityMetadata, embeddedMetadata: embeddedMetadata, args: args });\n            });\n            embeddedMetadata.relations = _this.metadataArgsStorage.filterRelations(targets).map(function (args) {\n                return new RelationMetadata_1.RelationMetadata({ entityMetadata: entityMetadata, embeddedMetadata: embeddedMetadata, args: args });\n            });\n            embeddedMetadata.listeners = _this.metadataArgsStorage.filterListeners(targets).map(function (args) {\n                return new EntityListenerMetadata_1.EntityListenerMetadata({ entityMetadata: entityMetadata, embeddedMetadata: embeddedMetadata, args: args });\n            });\n            embeddedMetadata.indices = _this.metadataArgsStorage.filterIndices(targets).map(function (args) {\n                return new IndexMetadata_1.IndexMetadata({ entityMetadata: entityMetadata, embeddedMetadata: embeddedMetadata, args: args });\n            });\n            embeddedMetadata.relationIds = _this.metadataArgsStorage.filterRelationIds(targets).map(function (args) {\n                return new RelationIdMetadata_1.RelationIdMetadata({ entityMetadata: entityMetadata, args: args });\n            });\n            embeddedMetadata.relationCounts = _this.metadataArgsStorage.filterRelationCounts(targets).map(function (args) {\n                return new RelationCountMetadata_1.RelationCountMetadata({ entityMetadata: entityMetadata, args: args });\n            });\n            embeddedMetadata.embeddeds = _this.createEmbeddedsRecursively(entityMetadata, _this.metadataArgsStorage.filterEmbeddeds(targets));\n            embeddedMetadata.embeddeds.forEach(function (subEmbedded) { return subEmbedded.parentEmbeddedMetadata = embeddedMetadata; });\n            entityMetadata.allEmbeddeds.push(embeddedMetadata);\n            return embeddedMetadata;\n        });\n    };\n    /**\n     * Computes all entity metadata's computed properties, and all its sub-metadatas (relations, columns, embeds, etc).\n     */\n    EntityMetadataBuilder.prototype.computeEntityMetadataStep2 = function (entityMetadata) {\n        var _this = this;\n        entityMetadata.embeddeds.forEach(function (embedded) { return embedded.build(_this.connection); });\n        entityMetadata.embeddeds.forEach(function (embedded) {\n            embedded.columnsFromTree.forEach(function (column) { return column.build(_this.connection); });\n            embedded.relationsFromTree.forEach(function (relation) { return relation.build(); });\n        });\n        entityMetadata.ownColumns.forEach(function (column) { return column.build(_this.connection); });\n        entityMetadata.ownRelations.forEach(function (relation) { return relation.build(); });\n        entityMetadata.relations = entityMetadata.embeddeds.reduce(function (relations, embedded) { return relations.concat(embedded.relationsFromTree); }, entityMetadata.ownRelations);\n        entityMetadata.eagerRelations = entityMetadata.relations.filter(function (relation) { return relation.isEager; });\n        entityMetadata.lazyRelations = entityMetadata.relations.filter(function (relation) { return relation.isLazy; });\n        entityMetadata.oneToOneRelations = entityMetadata.relations.filter(function (relation) { return relation.isOneToOne; });\n        entityMetadata.oneToManyRelations = entityMetadata.relations.filter(function (relation) { return relation.isOneToMany; });\n        entityMetadata.manyToOneRelations = entityMetadata.relations.filter(function (relation) { return relation.isManyToOne; });\n        entityMetadata.manyToManyRelations = entityMetadata.relations.filter(function (relation) { return relation.isManyToMany; });\n        entityMetadata.ownerOneToOneRelations = entityMetadata.relations.filter(function (relation) { return relation.isOneToOneOwner; });\n        entityMetadata.ownerManyToManyRelations = entityMetadata.relations.filter(function (relation) { return relation.isManyToManyOwner; });\n        entityMetadata.treeParentRelation = entityMetadata.relations.find(function (relation) { return relation.isTreeParent; });\n        entityMetadata.treeChildrenRelation = entityMetadata.relations.find(function (relation) { return relation.isTreeChildren; });\n        entityMetadata.columns = entityMetadata.embeddeds.reduce(function (columns, embedded) { return columns.concat(embedded.columnsFromTree); }, entityMetadata.ownColumns);\n        entityMetadata.listeners = entityMetadata.embeddeds.reduce(function (columns, embedded) { return columns.concat(embedded.listenersFromTree); }, entityMetadata.ownListeners);\n        entityMetadata.afterLoadListeners = entityMetadata.listeners.filter(function (listener) { return listener.type === \"after-load\"; });\n        entityMetadata.afterInsertListeners = entityMetadata.listeners.filter(function (listener) { return listener.type === \"after-insert\"; });\n        entityMetadata.afterUpdateListeners = entityMetadata.listeners.filter(function (listener) { return listener.type === \"after-update\"; });\n        entityMetadata.afterRemoveListeners = entityMetadata.listeners.filter(function (listener) { return listener.type === \"after-remove\"; });\n        entityMetadata.beforeInsertListeners = entityMetadata.listeners.filter(function (listener) { return listener.type === \"before-insert\"; });\n        entityMetadata.beforeUpdateListeners = entityMetadata.listeners.filter(function (listener) { return listener.type === \"before-update\"; });\n        entityMetadata.beforeRemoveListeners = entityMetadata.listeners.filter(function (listener) { return listener.type === \"before-remove\"; });\n        entityMetadata.indices = entityMetadata.embeddeds.reduce(function (columns, embedded) { return columns.concat(embedded.indicesFromTree); }, entityMetadata.ownIndices);\n        entityMetadata.primaryColumns = entityMetadata.columns.filter(function (column) { return column.isPrimary; });\n        entityMetadata.nonVirtualColumns = entityMetadata.columns.filter(function (column) { return !column.isVirtual; });\n        entityMetadata.ancestorColumns = entityMetadata.columns.filter(function (column) { return column.closureType === \"ancestor\"; });\n        entityMetadata.descendantColumns = entityMetadata.columns.filter(function (column) { return column.closureType === \"descendant\"; });\n        entityMetadata.hasMultiplePrimaryKeys = entityMetadata.primaryColumns.length > 1;\n        entityMetadata.generatedColumns = entityMetadata.columns.filter(function (column) { return column.isGenerated || column.isObjectId; });\n        entityMetadata.hasUUIDGeneratedColumns = entityMetadata.columns.filter(function (column) { return column.isGenerated || column.generationStrategy === \"uuid\"; }).length > 0;\n        entityMetadata.createDateColumn = entityMetadata.columns.find(function (column) { return column.isCreateDate; });\n        entityMetadata.updateDateColumn = entityMetadata.columns.find(function (column) { return column.isUpdateDate; });\n        entityMetadata.versionColumn = entityMetadata.columns.find(function (column) { return column.isVersion; });\n        entityMetadata.discriminatorColumn = entityMetadata.columns.find(function (column) { return column.isDiscriminator; });\n        entityMetadata.treeLevelColumn = entityMetadata.columns.find(function (column) { return column.isTreeLevel; });\n        entityMetadata.nestedSetLeftColumn = entityMetadata.columns.find(function (column) { return column.isNestedSetLeft; });\n        entityMetadata.nestedSetRightColumn = entityMetadata.columns.find(function (column) { return column.isNestedSetRight; });\n        entityMetadata.materializedPathColumn = entityMetadata.columns.find(function (column) { return column.isMaterializedPath; });\n        entityMetadata.objectIdColumn = entityMetadata.columns.find(function (column) { return column.isObjectId; });\n        entityMetadata.foreignKeys.forEach(function (foreignKey) { return foreignKey.build(_this.connection.namingStrategy); });\n        entityMetadata.propertiesMap = entityMetadata.createPropertiesMap();\n        entityMetadata.relationIds.forEach(function (relationId) { return relationId.build(); });\n        entityMetadata.relationCounts.forEach(function (relationCount) { return relationCount.build(); });\n        entityMetadata.embeddeds.forEach(function (embedded) {\n            embedded.relationIdsFromTree.forEach(function (relationId) { return relationId.build(); });\n            embedded.relationCountsFromTree.forEach(function (relationCount) { return relationCount.build(); });\n        });\n    };\n    /**\n     * Computes entity metadata's relations inverse side properties.\n     */\n    EntityMetadataBuilder.prototype.computeInverseProperties = function (entityMetadata, entityMetadatas) {\n        entityMetadata.relations.forEach(function (relation) {\n            // compute inverse side (related) entity metadatas for all relation metadatas\n            var inverseEntityMetadata = entityMetadatas.find(function (m) { return m.target === relation.type || (typeof relation.type === \"string\" && m.targetName === relation.type); });\n            if (!inverseEntityMetadata)\n                throw new Error(\"Entity metadata for \" + entityMetadata.name + \"#\" + relation.propertyPath + \" was not found. Check if you specified a correct entity object and if it's connected in the connection options.\");\n            relation.inverseEntityMetadata = inverseEntityMetadata;\n            relation.inverseSidePropertyPath = relation.buildInverseSidePropertyPath();\n            // and compute inverse relation and mark if it has such\n            relation.inverseRelation = inverseEntityMetadata.relations.find(function (foundRelation) { return foundRelation.propertyPath === relation.inverseSidePropertyPath; });\n        });\n    };\n    /**\n     * Creates indices for the table of single table inheritance.\n     */\n    EntityMetadataBuilder.prototype.createKeysForTableInheritance = function (entityMetadata) {\n        entityMetadata.indices.push(new IndexMetadata_1.IndexMetadata({\n            entityMetadata: entityMetadata,\n            columns: [entityMetadata.discriminatorColumn],\n            args: {\n                target: entityMetadata.target,\n                unique: false\n            }\n        }), new IndexMetadata_1.IndexMetadata({\n            entityMetadata: entityMetadata,\n            columns: __spread(entityMetadata.primaryColumns, [entityMetadata.discriminatorColumn]),\n            args: {\n                target: entityMetadata.target,\n                unique: false\n            }\n        }));\n    };\n    return EntityMetadataBuilder;\n}());\nexports.EntityMetadataBuilder = EntityMetadataBuilder;\n\n//# sourceMappingURL=EntityMetadataBuilder.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/metadata-builder/EntityMetadataBuilder.js?");

/***/ }),

/***/ "./node_modules/typeorm/metadata-builder/EntityMetadataValidator.js":
/*!**************************************************************************!*\
  !*** ./node_modules/typeorm/metadata-builder/EntityMetadataValidator.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MissingPrimaryColumnError_1 = __webpack_require__(/*! ../error/MissingPrimaryColumnError */ \"./node_modules/typeorm/error/MissingPrimaryColumnError.js\");\nvar CircularRelationsError_1 = __webpack_require__(/*! ../error/CircularRelationsError */ \"./node_modules/typeorm/error/CircularRelationsError.js\");\nvar DepGraph_1 = __webpack_require__(/*! ../util/DepGraph */ \"./node_modules/typeorm/util/DepGraph.js\");\nvar DataTypeNotSupportedError_1 = __webpack_require__(/*! ../error/DataTypeNotSupportedError */ \"./node_modules/typeorm/error/DataTypeNotSupportedError.js\");\nvar MongoDriver_1 = __webpack_require__(/*! ../driver/mongodb/MongoDriver */ \"./node_modules/typeorm/driver/mongodb/MongoDriver.js\");\nvar SqlServerDriver_1 = __webpack_require__(/*! ../driver/sqlserver/SqlServerDriver */ \"./node_modules/typeorm/driver/sqlserver/SqlServerDriver.js\");\nvar MysqlDriver_1 = __webpack_require__(/*! ../driver/mysql/MysqlDriver */ \"./node_modules/typeorm/driver/mysql/MysqlDriver.js\");\nvar NoConnectionOptionError_1 = __webpack_require__(/*! ../error/NoConnectionOptionError */ \"./node_modules/typeorm/error/NoConnectionOptionError.js\");\nvar InitializedRelationError_1 = __webpack_require__(/*! ../error/InitializedRelationError */ \"./node_modules/typeorm/error/InitializedRelationError.js\");\n/// todo: add check if there are multiple tables with the same name\n/// todo: add checks when generated column / table names are too long for the specific driver\n// todo: type in function validation, inverse side function validation\n// todo: check on build for duplicate names, since naming checking was removed from MetadataStorage\n// todo: duplicate name checking for: table, relation, column, index, naming strategy, join tables/columns?\n// todo: check if multiple tree parent metadatas in validator\n// todo: tree decorators can be used only on closure table (validation)\n// todo: throw error if parent tree metadata was not specified in a closure table\n// todo: MetadataArgsStorage: type in function validation, inverse side function validation\n// todo: MetadataArgsStorage: check on build for duplicate names, since naming checking was removed from MetadataStorage\n// todo: MetadataArgsStorage: duplicate name checking for: table, relation, column, index, naming strategy, join tables/columns?\n// todo: MetadataArgsStorage: check for duplicate targets too since this check has been removed too\n// todo: check if relation decorator contains primary: true and nullable: true\n// todo: check column length, precision. scale\n// todo: MySQL index can be unique or spatial or fulltext\n/**\n * Validates built entity metadatas.\n */\nvar EntityMetadataValidator = /** @class */ (function () {\n    function EntityMetadataValidator() {\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Validates all given entity metadatas.\n     */\n    EntityMetadataValidator.prototype.validateMany = function (entityMetadatas, driver) {\n        var _this = this;\n        entityMetadatas.forEach(function (entityMetadata) { return _this.validate(entityMetadata, entityMetadatas, driver); });\n        this.validateDependencies(entityMetadatas);\n        this.validateEagerRelations(entityMetadatas);\n    };\n    /**\n     * Validates given entity metadata.\n     */\n    EntityMetadataValidator.prototype.validate = function (entityMetadata, allEntityMetadatas, driver) {\n        // check if table metadata has an id\n        if (!entityMetadata.primaryColumns.length && !entityMetadata.isJunction)\n            throw new MissingPrimaryColumnError_1.MissingPrimaryColumnError(entityMetadata);\n        // validate if table is using inheritance it has a discriminator\n        // also validate if discriminator values are not empty and not repeated\n        if (entityMetadata.inheritancePattern === \"STI\") {\n            if (!entityMetadata.discriminatorColumn)\n                throw new Error(\"Entity \" + entityMetadata.name + \" using single-table inheritance, it should also have a discriminator column. Did you forget to put discriminator column options?\");\n            if ([\"\", undefined, null].indexOf(entityMetadata.discriminatorValue) !== -1)\n                throw new Error(\"Entity \" + entityMetadata.name + \" has empty discriminator value. Discriminator value should not be empty.\");\n            var sameDiscriminatorValueEntityMetadata = allEntityMetadatas.find(function (metadata) {\n                return metadata !== entityMetadata && metadata.discriminatorValue === entityMetadata.discriminatorValue;\n            });\n            if (sameDiscriminatorValueEntityMetadata)\n                throw new Error(\"Entities \" + entityMetadata.name + \" and \" + sameDiscriminatorValueEntityMetadata.name + \" as equal discriminator values. Make sure their discriminator values are not equal using @DiscriminatorValue decorator.\");\n        }\n        entityMetadata.relationCounts.forEach(function (relationCount) {\n            if (relationCount.relation.isManyToOne || relationCount.relation.isOneToOne)\n                throw new Error(\"Relation count can not be implemented on ManyToOne or OneToOne relations.\");\n        });\n        if (!(driver instanceof MongoDriver_1.MongoDriver)) {\n            entityMetadata.columns.forEach(function (column) {\n                var normalizedColumn = driver.normalizeType(column);\n                if (driver.supportedDataTypes.indexOf(normalizedColumn) === -1)\n                    throw new DataTypeNotSupportedError_1.DataTypeNotSupportedError(column, normalizedColumn, driver.options.type);\n                if (column.length && driver.withLengthColumnTypes.indexOf(normalizedColumn) === -1)\n                    throw new Error(\"Column \" + column.propertyName + \" of Entity \" + entityMetadata.name + \" does not support length property.\");\n            });\n        }\n        if (driver instanceof MysqlDriver_1.MysqlDriver) {\n            var generatedColumns = entityMetadata.columns.filter(function (column) { return column.isGenerated && column.generationStrategy !== \"uuid\"; });\n            if (generatedColumns.length > 1)\n                throw new Error(\"Error in \" + entityMetadata.name + \" entity. There can be only one auto-increment column in MySql table.\");\n        }\n        // for mysql we are able to not define a default selected database, instead all entities can have their database\n        // defined in their decorators. To make everything work either all entities must have database define and we\n        // can live without database set in the connection options, either database in the connection options must be set\n        if (driver instanceof MysqlDriver_1.MysqlDriver) {\n            var metadatasWithDatabase = allEntityMetadatas.filter(function (metadata) { return metadata.database; });\n            if (metadatasWithDatabase.length === 0 && !driver.database)\n                throw new NoConnectionOptionError_1.NoConnectionOptionError(\"database\");\n        }\n        if (driver instanceof SqlServerDriver_1.SqlServerDriver) {\n            var charsetColumns = entityMetadata.columns.filter(function (column) { return column.charset; });\n            if (charsetColumns.length > 1)\n                throw new Error(\"Character set specifying is not supported in Sql Server\");\n        }\n        // check if relations are all without initialized properties\n        var entityInstance = entityMetadata.create();\n        entityMetadata.relations.forEach(function (relation) {\n            if (relation.isManyToMany || relation.isOneToMany) {\n                // we skip relations for which persistence is disabled since initialization in them cannot harm somehow\n                if (relation.persistenceEnabled === false)\n                    return;\n                // get entity relation value and check if its an array\n                var relationInitializedValue = relation.getEntityValue(entityInstance);\n                if (relationInitializedValue instanceof Array)\n                    throw new InitializedRelationError_1.InitializedRelationError(relation);\n            }\n        });\n        // validate relations\n        entityMetadata.relations.forEach(function (relation) {\n            // check join tables:\n            // using JoinTable is possible only on one side of the many-to-many relation\n            // todo(dima): fix\n            // if (relation.joinTable) {\n            //     if (!relation.isManyToMany)\n            //         throw new UsingJoinTableIsNotAllowedError(entityMetadata, relation);\n            //     // if there is inverse side of the relation, then check if it does not have join table too\n            //     if (relation.hasInverseSide && relation.inverseRelation.joinTable)\n            //         throw new UsingJoinTableOnlyOnOneSideAllowedError(entityMetadata, relation);\n            // }\n            // check join columns:\n            // using JoinColumn is possible only on one side of the relation and on one-to-one, many-to-one relation types\n            // first check if relation is one-to-one or many-to-one\n            // todo(dima): fix\n            /*if (relation.joinColumn) {\n\n                // join column can be applied only on one-to-one and many-to-one relations\n                if (!relation.isOneToOne && !relation.isManyToOne)\n                    throw new UsingJoinColumnIsNotAllowedError(entityMetadata, relation);\n\n                // if there is inverse side of the relation, then check if it does not have join table too\n                if (relation.hasInverseSide && relation.inverseRelation.joinColumn && relation.isOneToOne)\n                    throw new UsingJoinColumnOnlyOnOneSideAllowedError(entityMetadata, relation);\n\n                // check if join column really has referenced column\n                if (relation.joinColumn && !relation.joinColumn.referencedColumn)\n                    throw new Error(`Join column does not have referenced column set`);\n\n            }\n\n            // if its a one-to-one relation and JoinColumn is missing on both sides of the relation\n            // or its one-side relation without JoinColumn we should give an error\n            if (!relation.joinColumn && relation.isOneToOne && (!relation.hasInverseSide || !relation.inverseRelation.joinColumn))\n                throw new MissingJoinColumnError(entityMetadata, relation);*/\n            // if its a many-to-many relation and JoinTable is missing on both sides of the relation\n            // or its one-side relation without JoinTable we should give an error\n            // todo(dima): fix it\n            // if (!relation.joinTable && relation.isManyToMany && (!relation.hasInverseSide || !relation.inverseRelation.joinTable))\n            //     throw new MissingJoinTableError(entityMetadata, relation);\n            // todo: validate if its one-to-one and side which does not have join column MUST have inverse side\n            // todo: validate if its many-to-many and side which does not have join table MUST have inverse side\n            // todo: if there is a relation, and inverse side is specified only on one side, shall we give error\n            // todo: with message like: \"Inverse side is specified only on one side of the relationship. Specify on other side too to prevent confusion\".\n            // todo: add validation if there two entities with the same target, and show error message with description of the problem (maybe file was renamed/moved but left in output directory)\n            // todo: check if there are multiple columns on the same column applied.\n            // todo: check column type if is missing in relational databases (throw new Error(`Column type of ${type} cannot be determined.`);)\n            // todo: include driver-specific checks. for example in mongodb empty prefixes are not allowed\n            // todo: if multiple columns with same name - throw exception, including cases when columns are in embeds with same prefixes or without prefix at all\n            // todo: if multiple primary key used, at least one of them must be unique or @Index decorator must be set on entity\n            // todo: check if entity with duplicate names, some decorators exist\n        });\n        // make sure cascade remove is not set for both sides of relationships (can be set in OneToOne decorators)\n        entityMetadata.relations.forEach(function (relation) {\n            var isCircularCascadeRemove = relation.isCascadeRemove && relation.inverseRelation && relation.inverseRelation.isCascadeRemove;\n            if (isCircularCascadeRemove)\n                throw new Error(\"Relation \" + entityMetadata.name + \"#\" + relation.propertyName + \" and \" + relation.inverseRelation.entityMetadata.name + \"#\" + relation.inverseRelation.propertyName + \" both has cascade remove set. \" +\n                    \"This may lead to unexpected circular removals. Please set cascade remove only from one side of relationship.\");\n        }); // todo: maybe better just deny removal from one to one relation without join column?\n        entityMetadata.eagerRelations.forEach(function (relation) {\n        });\n    };\n    /**\n     * Validates dependencies of the entity metadatas.\n     */\n    EntityMetadataValidator.prototype.validateDependencies = function (entityMetadatas) {\n        var graph = new DepGraph_1.DepGraph();\n        entityMetadatas.forEach(function (entityMetadata) {\n            graph.addNode(entityMetadata.name);\n        });\n        entityMetadatas.forEach(function (entityMetadata) {\n            entityMetadata.relationsWithJoinColumns\n                .filter(function (relation) { return !relation.isNullable; })\n                .forEach(function (relation) {\n                graph.addDependency(entityMetadata.name, relation.inverseEntityMetadata.name);\n            });\n        });\n        try {\n            graph.overallOrder();\n        }\n        catch (err) {\n            throw new CircularRelationsError_1.CircularRelationsError(err.toString().replace(\"Error: Dependency Cycle Found: \", \"\"));\n        }\n    };\n    /**\n     * Validates eager relations to prevent circular dependency in them.\n     */\n    EntityMetadataValidator.prototype.validateEagerRelations = function (entityMetadatas) {\n        entityMetadatas.forEach(function (entityMetadata) {\n            entityMetadata.eagerRelations.forEach(function (relation) {\n                if (relation.inverseRelation && relation.inverseRelation.isEager)\n                    throw new Error(\"Circular eager relations are disallowed. \" +\n                        (entityMetadata.targetName + \"#\" + relation.propertyPath + \" contains \\\"eager: true\\\", and its inverse side \") +\n                        (relation.inverseEntityMetadata.targetName + \"#\" + relation.inverseRelation.propertyPath + \" contains \\\"eager: true\\\" as well.\") +\n                        \" Remove \\\"eager: true\\\" from one side of the relation.\");\n            });\n        });\n    };\n    return EntityMetadataValidator;\n}());\nexports.EntityMetadataValidator = EntityMetadataValidator;\n\n//# sourceMappingURL=EntityMetadataValidator.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/metadata-builder/EntityMetadataValidator.js?");

/***/ }),

/***/ "./node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js":
/*!********************************************************************************!*\
  !*** ./node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ColumnMetadata_1 = __webpack_require__(/*! ../metadata/ColumnMetadata */ \"./node_modules/typeorm/metadata/ColumnMetadata.js\");\nvar EntityMetadata_1 = __webpack_require__(/*! ../metadata/EntityMetadata */ \"./node_modules/typeorm/metadata/EntityMetadata.js\");\nvar ForeignKeyMetadata_1 = __webpack_require__(/*! ../metadata/ForeignKeyMetadata */ \"./node_modules/typeorm/metadata/ForeignKeyMetadata.js\");\nvar IndexMetadata_1 = __webpack_require__(/*! ../metadata/IndexMetadata */ \"./node_modules/typeorm/metadata/IndexMetadata.js\");\n/**\n * Creates EntityMetadata for junction tables.\n * Junction tables are tables generated by many-to-many relations.\n */\nvar JunctionEntityMetadataBuilder = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function JunctionEntityMetadataBuilder(connection) {\n        this.connection = connection;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Builds EntityMetadata for the junction of the given many-to-many relation.\n     */\n    JunctionEntityMetadataBuilder.prototype.build = function (relation, joinTable) {\n        var _this = this;\n        var referencedColumns = this.collectReferencedColumns(relation, joinTable);\n        var inverseReferencedColumns = this.collectInverseReferencedColumns(relation, joinTable);\n        var joinTableName = joinTable.name || this.connection.namingStrategy.joinTableName(relation.entityMetadata.tableNameWithoutPrefix, relation.inverseEntityMetadata.tableNameWithoutPrefix, relation.propertyPath, relation.inverseRelation ? relation.inverseRelation.propertyName : \"\");\n        var entityMetadata = new EntityMetadata_1.EntityMetadata({\n            connection: this.connection,\n            args: {\n                target: \"\",\n                name: joinTableName,\n                type: \"junction\",\n                database: joinTable.database || relation.entityMetadata.database,\n                schema: joinTable.schema || relation.entityMetadata.schema,\n            }\n        });\n        entityMetadata.build();\n        // create original side junction columns\n        var junctionColumns = referencedColumns.map(function (referencedColumn) {\n            var joinColumn = joinTable.joinColumns ? joinTable.joinColumns.find(function (joinColumnArgs) {\n                return (!joinColumnArgs.referencedColumnName || joinColumnArgs.referencedColumnName === referencedColumn.propertyName) &&\n                    !!joinColumnArgs.name;\n            }) : undefined;\n            var columnName = joinColumn && joinColumn.name ? joinColumn.name\n                : _this.connection.namingStrategy.joinTableColumnName(relation.entityMetadata.tableNameWithoutPrefix, referencedColumn.propertyName, referencedColumn.databaseName);\n            return new ColumnMetadata_1.ColumnMetadata({\n                connection: _this.connection,\n                entityMetadata: entityMetadata,\n                referencedColumn: referencedColumn,\n                args: {\n                    target: \"\",\n                    mode: \"virtual\",\n                    propertyName: columnName,\n                    options: {\n                        name: columnName,\n                        length: referencedColumn.length,\n                        width: referencedColumn.width,\n                        type: referencedColumn.type,\n                        precision: referencedColumn.precision,\n                        scale: referencedColumn.scale,\n                        charset: referencedColumn.charset,\n                        collation: referencedColumn.collation,\n                        zerofill: referencedColumn.zerofill,\n                        unsigned: referencedColumn.zerofill ? true : referencedColumn.unsigned,\n                        nullable: false,\n                        primary: true,\n                    }\n                }\n            });\n        });\n        // create inverse side junction columns\n        var inverseJunctionColumns = inverseReferencedColumns.map(function (inverseReferencedColumn) {\n            var joinColumn = joinTable.inverseJoinColumns ? joinTable.inverseJoinColumns.find(function (joinColumnArgs) {\n                return (!joinColumnArgs.referencedColumnName || joinColumnArgs.referencedColumnName === inverseReferencedColumn.propertyName) &&\n                    !!joinColumnArgs.name;\n            }) : undefined;\n            var columnName = joinColumn && joinColumn.name ? joinColumn.name\n                : _this.connection.namingStrategy.joinTableInverseColumnName(relation.inverseEntityMetadata.tableNameWithoutPrefix, inverseReferencedColumn.propertyName, inverseReferencedColumn.databaseName);\n            return new ColumnMetadata_1.ColumnMetadata({\n                connection: _this.connection,\n                entityMetadata: entityMetadata,\n                referencedColumn: inverseReferencedColumn,\n                args: {\n                    target: \"\",\n                    mode: \"virtual\",\n                    propertyName: columnName,\n                    options: {\n                        length: inverseReferencedColumn.length,\n                        type: inverseReferencedColumn.type,\n                        precision: inverseReferencedColumn.precision,\n                        scale: inverseReferencedColumn.scale,\n                        charset: inverseReferencedColumn.charset,\n                        collation: inverseReferencedColumn.collation,\n                        zerofill: inverseReferencedColumn.zerofill,\n                        unsigned: inverseReferencedColumn.zerofill ? true : inverseReferencedColumn.unsigned,\n                        name: columnName,\n                        nullable: false,\n                        primary: true,\n                    }\n                }\n            });\n        });\n        this.changeDuplicatedColumnNames(junctionColumns, inverseJunctionColumns);\n        // set junction table columns\n        entityMetadata.ownerColumns = junctionColumns;\n        entityMetadata.inverseColumns = inverseJunctionColumns;\n        entityMetadata.ownColumns = __spread(junctionColumns, inverseJunctionColumns);\n        entityMetadata.ownColumns.forEach(function (column) { return column.relationMetadata = relation; });\n        // create junction table foreign keys\n        entityMetadata.foreignKeys = [\n            new ForeignKeyMetadata_1.ForeignKeyMetadata({\n                entityMetadata: entityMetadata,\n                referencedEntityMetadata: relation.entityMetadata,\n                columns: junctionColumns,\n                referencedColumns: referencedColumns,\n                onDelete: relation.onDelete || \"CASCADE\"\n            }),\n            new ForeignKeyMetadata_1.ForeignKeyMetadata({\n                entityMetadata: entityMetadata,\n                referencedEntityMetadata: relation.inverseEntityMetadata,\n                columns: inverseJunctionColumns,\n                referencedColumns: inverseReferencedColumns,\n                onDelete: relation.onDelete || \"CASCADE\"\n            }),\n        ];\n        // create junction table indices\n        entityMetadata.indices = [\n            new IndexMetadata_1.IndexMetadata({\n                entityMetadata: entityMetadata,\n                columns: junctionColumns,\n                args: {\n                    target: \"\",\n                    unique: false\n                }\n            }),\n            new IndexMetadata_1.IndexMetadata({\n                entityMetadata: entityMetadata,\n                columns: inverseJunctionColumns,\n                args: {\n                    target: \"\",\n                    unique: false\n                }\n            })\n        ];\n        // finally return entity metadata\n        return entityMetadata;\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Collects referenced columns from the given join column args.\n     */\n    JunctionEntityMetadataBuilder.prototype.collectReferencedColumns = function (relation, joinTable) {\n        var hasAnyReferencedColumnName = joinTable.joinColumns ? joinTable.joinColumns.find(function (joinColumn) { return !!joinColumn.referencedColumnName; }) : false;\n        if (!joinTable.joinColumns || (joinTable.joinColumns && !hasAnyReferencedColumnName)) {\n            return relation.entityMetadata.columns.filter(function (column) { return column.isPrimary; });\n        }\n        else {\n            return joinTable.joinColumns.map(function (joinColumn) {\n                var referencedColumn = relation.entityMetadata.columns.find(function (column) { return column.propertyName === joinColumn.referencedColumnName; });\n                if (!referencedColumn)\n                    throw new Error(\"Referenced column \" + joinColumn.referencedColumnName + \" was not found in entity \" + relation.entityMetadata.name);\n                return referencedColumn;\n            });\n        }\n    };\n    /**\n     * Collects inverse referenced columns from the given join column args.\n     */\n    JunctionEntityMetadataBuilder.prototype.collectInverseReferencedColumns = function (relation, joinTable) {\n        var hasInverseJoinColumns = !!joinTable.inverseJoinColumns;\n        var hasAnyInverseReferencedColumnName = hasInverseJoinColumns ? joinTable.inverseJoinColumns.find(function (joinColumn) { return !!joinColumn.referencedColumnName; }) : false;\n        if (!hasInverseJoinColumns || (hasInverseJoinColumns && !hasAnyInverseReferencedColumnName)) {\n            return relation.inverseEntityMetadata.primaryColumns;\n        }\n        else {\n            return joinTable.inverseJoinColumns.map(function (joinColumn) {\n                var referencedColumn = relation.inverseEntityMetadata.ownColumns.find(function (column) { return column.propertyName === joinColumn.referencedColumnName; });\n                if (!referencedColumn)\n                    throw new Error(\"Referenced column \" + joinColumn.referencedColumnName + \" was not found in entity \" + relation.inverseEntityMetadata.name);\n                return referencedColumn;\n            });\n        }\n    };\n    JunctionEntityMetadataBuilder.prototype.changeDuplicatedColumnNames = function (junctionColumns, inverseJunctionColumns) {\n        var _this = this;\n        junctionColumns.forEach(function (junctionColumn) {\n            inverseJunctionColumns.forEach(function (inverseJunctionColumn) {\n                if (junctionColumn.givenDatabaseName === inverseJunctionColumn.givenDatabaseName) {\n                    var junctionColumnName = _this.connection.namingStrategy.joinTableColumnDuplicationPrefix(junctionColumn.propertyName, 1);\n                    junctionColumn.propertyName = junctionColumnName;\n                    junctionColumn.givenDatabaseName = junctionColumnName;\n                    var inverseJunctionColumnName = _this.connection.namingStrategy.joinTableColumnDuplicationPrefix(inverseJunctionColumn.propertyName, 2);\n                    inverseJunctionColumn.propertyName = inverseJunctionColumnName;\n                    inverseJunctionColumn.givenDatabaseName = inverseJunctionColumnName;\n                }\n            });\n        });\n    };\n    return JunctionEntityMetadataBuilder;\n}());\nexports.JunctionEntityMetadataBuilder = JunctionEntityMetadataBuilder;\n\n//# sourceMappingURL=JunctionEntityMetadataBuilder.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/metadata-builder/JunctionEntityMetadataBuilder.js?");

/***/ }),

/***/ "./node_modules/typeorm/metadata-builder/MetadataUtils.js":
/*!****************************************************************!*\
  !*** ./node_modules/typeorm/metadata-builder/MetadataUtils.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Metadata args utility functions.\n */\nvar MetadataUtils = /** @class */ (function () {\n    function MetadataUtils() {\n    }\n    /**\n     * Gets given's entity all inherited classes.\n     * Gives in order from parents to children.\n     * For example Post extends ContentModel which extends Unit it will give\n     * [Unit, ContentModel, Post]\n     */\n    MetadataUtils.getInheritanceTree = function (entity) {\n        var tree = [entity];\n        var getPrototypeOf = function (object) {\n            var proto = Object.getPrototypeOf(object);\n            if (proto && proto.name) {\n                tree.push(proto);\n                getPrototypeOf(proto);\n            }\n        };\n        getPrototypeOf(entity);\n        return tree;\n    };\n    /**\n     * Checks if this table is inherited from another table.\n     */\n    MetadataUtils.isInherited = function (target1, target2) {\n        return target1.prototype instanceof target2;\n    };\n    /**\n     * Filters given array of targets by a given classes.\n     * If classes are not given, then it returns array itself.\n     */\n    MetadataUtils.filterByTarget = function (array, classes) {\n        if (!classes)\n            return array;\n        return array.filter(function (item) { return item.target && classes.indexOf(item.target) !== -1; });\n    };\n    return MetadataUtils;\n}());\nexports.MetadataUtils = MetadataUtils;\n\n//# sourceMappingURL=MetadataUtils.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/metadata-builder/MetadataUtils.js?");

/***/ }),

/***/ "./node_modules/typeorm/metadata-builder/RelationJoinColumnBuilder.js":
/*!****************************************************************************!*\
  !*** ./node_modules/typeorm/metadata-builder/RelationJoinColumnBuilder.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ColumnMetadata_1 = __webpack_require__(/*! ../metadata/ColumnMetadata */ \"./node_modules/typeorm/metadata/ColumnMetadata.js\");\nvar UniqueMetadata_1 = __webpack_require__(/*! ../metadata/UniqueMetadata */ \"./node_modules/typeorm/metadata/UniqueMetadata.js\");\nvar ForeignKeyMetadata_1 = __webpack_require__(/*! ../metadata/ForeignKeyMetadata */ \"./node_modules/typeorm/metadata/ForeignKeyMetadata.js\");\nvar OracleDriver_1 = __webpack_require__(/*! ../driver/oracle/OracleDriver */ \"./node_modules/typeorm/driver/oracle/OracleDriver.js\");\n/**\n * Builds join column for the many-to-one and one-to-one owner relations.\n *\n * Cases it should cover:\n * 1. when join column is set with custom name and without referenced column name\n * we need automatically set referenced column name - primary ids by default\n * @JoinColumn({ name: \"custom_name\" })\n *\n * 2. when join column is set with only referenced column name\n * we need automatically set join column name - relation name + referenced column name\n * @JoinColumn({ referencedColumnName: \"title\" })\n *\n * 3. when join column is set without both referenced column name and join column name\n * we need to automatically set both of them\n * @JoinColumn()\n *\n * 4. when join column is not set at all (as in case of @ManyToOne relation)\n * we need to create join column for it with proper referenced column name and join column name\n *\n * 5. when multiple join columns set none of referencedColumnName and name can be optional\n * both options are required\n * @JoinColumn([\n *      { name: \"category_title\", referencedColumnName: \"type\" },\n *      { name: \"category_title\", referencedColumnName: \"name\" },\n * ])\n *\n * Since for many-to-one relations having JoinColumn decorator is not required,\n * we need to go thought each many-to-one relation without join column decorator set\n * and create join column metadata args for them.\n */\nvar RelationJoinColumnBuilder = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function RelationJoinColumnBuilder(connection) {\n        this.connection = connection;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Builds a foreign key of the many-to-one or one-to-one owner relations.\n     */\n    RelationJoinColumnBuilder.prototype.build = function (joinColumns, relation) {\n        var referencedColumns = this.collectReferencedColumns(joinColumns, relation);\n        if (!referencedColumns.length)\n            return { foreignKey: undefined, uniqueConstraint: undefined }; // this case is possible only for one-to-one non owning side\n        var columns = this.collectColumns(joinColumns, relation, referencedColumns);\n        var foreignKey = new ForeignKeyMetadata_1.ForeignKeyMetadata({\n            entityMetadata: relation.entityMetadata,\n            referencedEntityMetadata: relation.inverseEntityMetadata,\n            namingStrategy: this.connection.namingStrategy,\n            columns: columns,\n            referencedColumns: referencedColumns,\n            onDelete: relation.onDelete,\n        });\n        // Oracle does not allow both primary and unique constraints on the same column\n        if (this.connection.driver instanceof OracleDriver_1.OracleDriver && columns.every(function (column) { return column.isPrimary; }))\n            return { foreignKey: foreignKey, uniqueConstraint: undefined };\n        if (referencedColumns.length > 0 && relation.isOneToOne) {\n            var uniqueConstraint = new UniqueMetadata_1.UniqueMetadata({\n                entityMetadata: relation.entityMetadata,\n                columns: foreignKey.columns,\n                args: {\n                    name: this.connection.namingStrategy.relationConstraintName(relation.entityMetadata.tablePath, foreignKey.columns.map(function (c) { return c.databaseName; })),\n                    target: relation.entityMetadata.target,\n                }\n            });\n            uniqueConstraint.build(this.connection.namingStrategy);\n            return { foreignKey: foreignKey, uniqueConstraint: uniqueConstraint };\n        }\n        return { foreignKey: foreignKey, uniqueConstraint: undefined };\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Collects referenced columns from the given join column args.\n     */\n    RelationJoinColumnBuilder.prototype.collectReferencedColumns = function (joinColumns, relation) {\n        var hasAnyReferencedColumnName = joinColumns.find(function (joinColumnArgs) { return !!joinColumnArgs.referencedColumnName; });\n        var manyToOneWithoutJoinColumn = joinColumns.length === 0 && relation.isManyToOne;\n        var hasJoinColumnWithoutAnyReferencedColumnName = joinColumns.length > 0 && !hasAnyReferencedColumnName;\n        if (manyToOneWithoutJoinColumn || hasJoinColumnWithoutAnyReferencedColumnName) { // covers case3 and case1\n            return relation.inverseEntityMetadata.primaryColumns;\n        }\n        else { // cases with referenced columns defined\n            return joinColumns.map(function (joinColumn) {\n                var referencedColumn = relation.inverseEntityMetadata.ownColumns.find(function (column) { return column.propertyName === joinColumn.referencedColumnName; }); // todo: can we also search in relations?\n                if (!referencedColumn)\n                    throw new Error(\"Referenced column \" + joinColumn.referencedColumnName + \" was not found in entity \" + relation.inverseEntityMetadata.name);\n                return referencedColumn;\n            });\n        }\n    };\n    /**\n     * Collects columns from the given join column args.\n     */\n    RelationJoinColumnBuilder.prototype.collectColumns = function (joinColumns, relation, referencedColumns) {\n        var _this = this;\n        return referencedColumns.map(function (referencedColumn) {\n            // in the case if relation has join column with only name set we need this check\n            var joinColumnMetadataArg = joinColumns.find(function (joinColumn) {\n                return (!joinColumn.referencedColumnName || joinColumn.referencedColumnName === referencedColumn.propertyName) &&\n                    !!joinColumn.name;\n            });\n            var joinColumnName = joinColumnMetadataArg ? joinColumnMetadataArg.name : _this.connection.namingStrategy.joinColumnName(relation.propertyName, referencedColumn.propertyName);\n            var relationalColumn = relation.entityMetadata.ownColumns.find(function (column) { return column.databaseName === joinColumnName; });\n            if (!relationalColumn) {\n                relationalColumn = new ColumnMetadata_1.ColumnMetadata({\n                    connection: _this.connection,\n                    entityMetadata: relation.entityMetadata,\n                    args: {\n                        target: \"\",\n                        mode: \"virtual\",\n                        propertyName: relation.propertyName,\n                        options: {\n                            name: joinColumnName,\n                            type: referencedColumn.type,\n                            length: referencedColumn.length,\n                            width: referencedColumn.width,\n                            charset: referencedColumn.charset,\n                            collation: referencedColumn.collation,\n                            precision: referencedColumn.precision,\n                            scale: referencedColumn.scale,\n                            zerofill: referencedColumn.zerofill,\n                            unsigned: referencedColumn.unsigned,\n                            comment: referencedColumn.comment,\n                            primary: relation.isPrimary,\n                            nullable: relation.isNullable\n                        }\n                    }\n                });\n                relation.entityMetadata.registerColumn(relationalColumn);\n            }\n            relationalColumn.referencedColumn = referencedColumn; // its important to set it here because we need to set referenced column for user defined join column\n            relationalColumn.type = referencedColumn.type; // also since types of relational column and join column must be equal we override user defined column type\n            relationalColumn.relationMetadata = relation;\n            relationalColumn.build(_this.connection);\n            return relationalColumn;\n        });\n    };\n    return RelationJoinColumnBuilder;\n}());\nexports.RelationJoinColumnBuilder = RelationJoinColumnBuilder;\n\n//# sourceMappingURL=RelationJoinColumnBuilder.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/metadata-builder/RelationJoinColumnBuilder.js?");

/***/ }),

/***/ "./node_modules/typeorm/metadata/CheckMetadata.js":
/*!********************************************************!*\
  !*** ./node_modules/typeorm/metadata/CheckMetadata.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Check metadata contains all information about table's check constraints.\n */\nvar CheckMetadata = /** @class */ (function () {\n    // ---------------------------------------------------------------------\n    // Constructor\n    // ---------------------------------------------------------------------\n    function CheckMetadata(options) {\n        this.entityMetadata = options.entityMetadata;\n        if (options.args) {\n            this.target = options.args.target;\n            this.expression = options.args.expression;\n            this.givenName = options.args.name;\n        }\n    }\n    // ---------------------------------------------------------------------\n    // Public Build Methods\n    // ---------------------------------------------------------------------\n    /**\n     * Builds some depend check constraint properties.\n     * Must be called after all entity metadata's properties map, columns and relations are built.\n     */\n    CheckMetadata.prototype.build = function (namingStrategy) {\n        this.name = this.givenName ? this.givenName : namingStrategy.checkConstraintName(this.entityMetadata.tablePath, this.expression);\n        return this;\n    };\n    return CheckMetadata;\n}());\nexports.CheckMetadata = CheckMetadata;\n\n//# sourceMappingURL=CheckMetadata.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/metadata/CheckMetadata.js?");

/***/ }),

/***/ "./node_modules/typeorm/metadata/ColumnMetadata.js":
/*!*********************************************************!*\
  !*** ./node_modules/typeorm/metadata/ColumnMetadata.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar OrmUtils_1 = __webpack_require__(/*! ../util/OrmUtils */ \"./node_modules/typeorm/util/OrmUtils.js\");\nvar MongoDriver_1 = __webpack_require__(/*! ../driver/mongodb/MongoDriver */ \"./node_modules/typeorm/driver/mongodb/MongoDriver.js\");\nvar PromiseUtils_1 = __webpack_require__(/*! ../util/PromiseUtils */ \"./node_modules/typeorm/util/PromiseUtils.js\");\nvar FindOperator_1 = __webpack_require__(/*! ../find-options/FindOperator */ \"./node_modules/typeorm/find-options/FindOperator.js\");\n/**\n * This metadata contains all information about entity's column.\n */\nvar ColumnMetadata = /** @class */ (function () {\n    // ---------------------------------------------------------------------\n    // Constructor\n    // ---------------------------------------------------------------------\n    function ColumnMetadata(options) {\n        /**\n         * Type's length in the database.\n         */\n        this.length = \"\";\n        /**\n         * Indicates if this column is a primary key.\n         */\n        this.isPrimary = false;\n        /**\n         * Indicates if this column is generated (auto increment or generated other way).\n         */\n        this.isGenerated = false;\n        /**\n         * Indicates if column can contain nulls or not.\n         */\n        this.isNullable = false;\n        /**\n         * Indicates if column is selected by query builder or not.\n         */\n        this.isSelect = true;\n        /**\n         * Indicates if column is protected from updates or not.\n         */\n        this.isReadonly = false;\n        /**\n         * Column comment.\n         * This feature is not supported by all databases.\n         */\n        this.comment = \"\";\n        /**\n         * Puts ZEROFILL attribute on to numeric column. Works only for MySQL.\n         * If you specify ZEROFILL for a numeric column, MySQL automatically adds the UNSIGNED attribute to the column\n         */\n        this.zerofill = false;\n        /**\n         * Puts UNSIGNED attribute on to numeric column. Works only for MySQL.\n         */\n        this.unsigned = false;\n        /**\n         * Indicates if this column is an array.\n         */\n        this.isArray = false;\n        /**\n         * Indicates if column is virtual. Virtual columns are not mapped to the entity.\n         */\n        this.isVirtual = false;\n        /**\n         * Indicates if column is discriminator. Discriminator columns are not mapped to the entity.\n         */\n        this.isDiscriminator = false;\n        /**\n         * Indicates if column is tree-level column. Tree-level columns are used in closure entities.\n         */\n        this.isTreeLevel = false;\n        /**\n         * Indicates if this column contains an entity creation date.\n         */\n        this.isCreateDate = false;\n        /**\n         * Indicates if this column contains an entity update date.\n         */\n        this.isUpdateDate = false;\n        /**\n         * Indicates if this column contains an entity version.\n         */\n        this.isVersion = false;\n        /**\n         * Indicates if this column contains an object id.\n         */\n        this.isObjectId = false;\n        /**\n         * Indicates if this column is nested set's left column.\n         * Used only in tree entities with nested-set type.\n         */\n        this.isNestedSetLeft = false;\n        /**\n         * Indicates if this column is nested set's right column.\n         * Used only in tree entities with nested-set type.\n         */\n        this.isNestedSetRight = false;\n        /**\n         * Indicates if this column is materialized path's path column.\n         * Used only in tree entities with materialized path type.\n         */\n        this.isMaterializedPath = false;\n        this.entityMetadata = options.entityMetadata;\n        this.embeddedMetadata = options.embeddedMetadata;\n        this.referencedColumn = options.referencedColumn;\n        if (options.args.target)\n            this.target = options.args.target;\n        if (options.args.propertyName)\n            this.propertyName = options.args.propertyName;\n        if (options.args.options.name)\n            this.givenDatabaseName = options.args.options.name;\n        if (options.args.options.type)\n            this.type = options.args.options.type;\n        if (options.args.options.length)\n            this.length = options.args.options.length ? options.args.options.length.toString() : \"\";\n        if (options.args.options.width)\n            this.width = options.args.options.width;\n        if (options.args.options.charset)\n            this.charset = options.args.options.charset;\n        if (options.args.options.collation)\n            this.collation = options.args.options.collation;\n        if (options.args.options.primary)\n            this.isPrimary = options.args.options.primary;\n        if (options.args.options.default === null) // to make sure default: null is the same as nullable: true\n            this.isNullable = true;\n        if (options.args.options.nullable !== undefined)\n            this.isNullable = options.args.options.nullable;\n        if (options.args.options.select !== undefined)\n            this.isSelect = options.args.options.select;\n        if (options.args.options.readonly !== undefined)\n            this.isReadonly = options.args.options.readonly;\n        if (options.args.options.comment)\n            this.comment = options.args.options.comment;\n        if (options.args.options.default !== undefined)\n            this.default = options.args.options.default;\n        if (options.args.options.onUpdate)\n            this.onUpdate = options.args.options.onUpdate;\n        if (options.args.options.scale !== null && options.args.options.scale !== undefined)\n            this.scale = options.args.options.scale;\n        if (options.args.options.zerofill) {\n            this.zerofill = options.args.options.zerofill;\n            this.unsigned = true; // if you specify ZEROFILL for a numeric column, MySQL automatically adds the UNSIGNED attribute to the column\n        }\n        if (options.args.options.unsigned)\n            this.unsigned = options.args.options.unsigned;\n        if (options.args.options.precision !== undefined)\n            this.precision = options.args.options.precision;\n        if (options.args.options.enum) {\n            if (options.args.options.enum instanceof Object) {\n                this.enum = Object.keys(options.args.options.enum).map(function (key) {\n                    return options.args.options.enum[key];\n                });\n            }\n            else {\n                this.enum = options.args.options.enum;\n            }\n        }\n        if (options.args.options.asExpression) {\n            this.asExpression = options.args.options.asExpression;\n            this.generatedType = options.args.options.generatedType ? options.args.options.generatedType : \"VIRTUAL\";\n        }\n        if (options.args.options.hstoreType)\n            this.hstoreType = options.args.options.hstoreType;\n        if (options.args.options.array)\n            this.isArray = options.args.options.array;\n        if (options.args.mode) {\n            this.isVirtual = options.args.mode === \"virtual\";\n            this.isTreeLevel = options.args.mode === \"treeLevel\";\n            this.isCreateDate = options.args.mode === \"createDate\";\n            this.isUpdateDate = options.args.mode === \"updateDate\";\n            this.isVersion = options.args.mode === \"version\";\n            this.isObjectId = options.args.mode === \"objectId\";\n        }\n        if (options.args.options.transformer)\n            this.transformer = options.args.options.transformer;\n        if (options.args.options.spatialFeatureType)\n            this.spatialFeatureType = options.args.options.spatialFeatureType;\n        if (options.args.options.srid)\n            this.srid = options.args.options.srid;\n        if (this.isTreeLevel)\n            this.type = options.connection.driver.mappedDataTypes.treeLevel;\n        if (this.isCreateDate) {\n            if (!this.type)\n                this.type = options.connection.driver.mappedDataTypes.createDate;\n            if (!this.default)\n                this.default = function () { return options.connection.driver.mappedDataTypes.createDateDefault; };\n            if (this.precision === undefined && options.connection.driver.mappedDataTypes.createDatePrecision)\n                this.precision = options.connection.driver.mappedDataTypes.createDatePrecision;\n        }\n        if (this.isUpdateDate) {\n            if (!this.type)\n                this.type = options.connection.driver.mappedDataTypes.updateDate;\n            if (!this.default)\n                this.default = function () { return options.connection.driver.mappedDataTypes.updateDateDefault; };\n            if (this.precision === undefined && options.connection.driver.mappedDataTypes.updateDatePrecision)\n                this.precision = options.connection.driver.mappedDataTypes.updateDatePrecision;\n        }\n        if (this.isVersion)\n            this.type = options.connection.driver.mappedDataTypes.version;\n        if (options.closureType)\n            this.closureType = options.closureType;\n        if (options.nestedSetLeft)\n            this.isNestedSetLeft = options.nestedSetLeft;\n        if (options.nestedSetRight)\n            this.isNestedSetRight = options.nestedSetRight;\n        if (options.materializedPath)\n            this.isMaterializedPath = options.materializedPath;\n    }\n    // ---------------------------------------------------------------------\n    // Public Methods\n    // ---------------------------------------------------------------------\n    /**\n     * Creates entity id map from the given entity ids array.\n     */\n    ColumnMetadata.prototype.createValueMap = function (value, useDatabaseName) {\n        var _this = this;\n        if (useDatabaseName === void 0) { useDatabaseName = false; }\n        // extract column value from embeds of entity if column is in embedded\n        if (this.embeddedMetadata) {\n            // example: post[data][information][counters].id where \"data\", \"information\" and \"counters\" are embeddeds\n            // we need to get value of \"id\" column from the post real entity object and return it in a\n            // { data: { information: { counters: { id: ... } } } } format\n            // first step - we extract all parent properties of the entity relative to this column, e.g. [data, information, counters]\n            var propertyNames = __spread(this.embeddedMetadata.parentPropertyNames);\n            // now need to access post[data][information][counters] to get column value from the counters\n            // and on each step we need to create complex literal object, e.g. first { data },\n            // then { data: { information } }, then { data: { information: { counters } } },\n            // then { data: { information: { counters: [this.propertyName]: entity[data][information][counters][this.propertyName] } } }\n            // this recursive function helps doing that\n            var extractEmbeddedColumnValue_1 = function (propertyNames, map) {\n                var propertyName = propertyNames.shift();\n                if (propertyName) {\n                    map[propertyName] = {};\n                    extractEmbeddedColumnValue_1(propertyNames, map[propertyName]);\n                    return map;\n                }\n                // this is bugfix for #720 when increment number is bigint we need to make sure its a string\n                if (_this.generationStrategy === \"increment\" && _this.type === \"bigint\")\n                    value = String(value);\n                map[useDatabaseName ? _this.databaseName : _this.propertyName] = value;\n                return map;\n            };\n            return extractEmbeddedColumnValue_1(propertyNames, {});\n        }\n        else { // no embeds - no problems. Simply return column property name and its value of the entity\n            // this is bugfix for #720 when increment number is bigint we need to make sure its a string\n            if (this.generationStrategy === \"increment\" && this.type === \"bigint\")\n                value = String(value);\n            return _a = {}, _a[useDatabaseName ? this.databaseName : this.propertyName] = value, _a;\n        }\n        var _a;\n    };\n    /**\n     * Extracts column value and returns its column name with this value in a literal object.\n     * If column is in embedded (or recursive embedded) it returns complex literal object.\n     *\n     * Examples what this method can return depend if this column is in embeds.\n     * { id: 1 } or { title: \"hello\" }, { counters: { code: 1 } }, { data: { information: { counters: { code: 1 } } } }\n     */\n    ColumnMetadata.prototype.getEntityValueMap = function (entity, options) {\n        var _this = this;\n        var returnNulls = false; // options && options.skipNulls === false ? false : true; // todo: remove if current will not bring problems, uncomment if it will.\n        // extract column value from embeds of entity if column is in embedded\n        if (this.embeddedMetadata) {\n            // example: post[data][information][counters].id where \"data\", \"information\" and \"counters\" are embeddeds\n            // we need to get value of \"id\" column from the post real entity object and return it in a\n            // { data: { information: { counters: { id: ... } } } } format\n            // first step - we extract all parent properties of the entity relative to this column, e.g. [data, information, counters]\n            var propertyNames = __spread(this.embeddedMetadata.parentPropertyNames);\n            // now need to access post[data][information][counters] to get column value from the counters\n            // and on each step we need to create complex literal object, e.g. first { data },\n            // then { data: { information } }, then { data: { information: { counters } } },\n            // then { data: { information: { counters: [this.propertyName]: entity[data][information][counters][this.propertyName] } } }\n            // this recursive function helps doing that\n            var extractEmbeddedColumnValue_2 = function (propertyNames, value, map) {\n                var propertyName = propertyNames.shift();\n                if (value === undefined)\n                    return map;\n                if (propertyName) {\n                    var submap = {};\n                    extractEmbeddedColumnValue_2(propertyNames, value[propertyName], submap);\n                    if (Object.keys(submap).length > 0) {\n                        map[propertyName] = submap;\n                    }\n                    return map;\n                }\n                if (value[_this.propertyName] !== undefined && (returnNulls === false || value[_this.propertyName] !== null))\n                    map[_this.propertyName] = value[_this.propertyName];\n                return map;\n            };\n            var map = {};\n            extractEmbeddedColumnValue_2(propertyNames, entity, map);\n            return Object.keys(map).length > 0 ? map : undefined;\n        }\n        else { // no embeds - no problems. Simply return column property name and its value of the entity\n            if (this.relationMetadata && entity[this.propertyName] && entity[this.propertyName] instanceof Object) {\n                var map = this.relationMetadata.joinColumns.reduce(function (map, joinColumn) {\n                    var value = joinColumn.referencedColumn.getEntityValueMap(entity[_this.propertyName]);\n                    if (value === undefined)\n                        return map;\n                    return OrmUtils_1.OrmUtils.mergeDeep(map, value);\n                }, {});\n                if (Object.keys(map).length > 0)\n                    return _a = {}, _a[this.propertyName] = map, _a;\n                return undefined;\n            }\n            else {\n                if (entity[this.propertyName] !== undefined && (returnNulls === false || entity[this.propertyName] !== null))\n                    return _b = {}, _b[this.propertyName] = entity[this.propertyName], _b;\n                return undefined;\n            }\n        }\n        var _a, _b;\n    };\n    /**\n     * Extracts column value from the given entity.\n     * If column is in embedded (or recursive embedded) it extracts its value from there.\n     */\n    ColumnMetadata.prototype.getEntityValue = function (entity, transform) {\n        // if (entity === undefined || entity === null) return undefined; // uncomment if needed\n        if (transform === void 0) { transform = false; }\n        // extract column value from embeddeds of entity if column is in embedded\n        var value = undefined;\n        if (this.embeddedMetadata) {\n            // example: post[data][information][counters].id where \"data\", \"information\" and \"counters\" are embeddeds\n            // we need to get value of \"id\" column from the post real entity object\n            // first step - we extract all parent properties of the entity relative to this column, e.g. [data, information, counters]\n            var propertyNames = __spread(this.embeddedMetadata.parentPropertyNames);\n            // next we need to access post[data][information][counters][this.propertyName] to get column value from the counters\n            // this recursive function takes array of generated property names and gets the post[data][information][counters] embed\n            var extractEmbeddedColumnValue_3 = function (propertyNames, value) {\n                var propertyName = propertyNames.shift();\n                return propertyName && value ? extractEmbeddedColumnValue_3(propertyNames, value[propertyName]) : value;\n            };\n            // once we get nested embed object we get its column, e.g. post[data][information][counters][this.propertyName]\n            var embeddedObject = extractEmbeddedColumnValue_3(propertyNames, entity);\n            if (embeddedObject) {\n                if (this.relationMetadata && this.referencedColumn) {\n                    var relatedEntity = this.relationMetadata.getEntityValue(embeddedObject);\n                    if (relatedEntity && relatedEntity instanceof Object && !(relatedEntity instanceof FindOperator_1.FindOperator)) {\n                        value = this.referencedColumn.getEntityValue(PromiseUtils_1.PromiseUtils.extractValue(relatedEntity));\n                    }\n                    else if (embeddedObject[this.propertyName] && embeddedObject[this.propertyName] instanceof Object && !(embeddedObject[this.propertyName] instanceof FindOperator_1.FindOperator)) {\n                        value = this.referencedColumn.getEntityValue(PromiseUtils_1.PromiseUtils.extractValue(embeddedObject[this.propertyName]));\n                    }\n                    else {\n                        value = PromiseUtils_1.PromiseUtils.extractValue(embeddedObject[this.propertyName]);\n                    }\n                }\n                else if (this.referencedColumn) {\n                    value = this.referencedColumn.getEntityValue(PromiseUtils_1.PromiseUtils.extractValue(embeddedObject[this.propertyName]));\n                }\n                else {\n                    value = PromiseUtils_1.PromiseUtils.extractValue(embeddedObject[this.propertyName]);\n                }\n            }\n        }\n        else { // no embeds - no problems. Simply return column name by property name of the entity\n            if (this.relationMetadata && this.referencedColumn) {\n                var relatedEntity = this.relationMetadata.getEntityValue(entity);\n                if (relatedEntity && relatedEntity instanceof Object && !(relatedEntity instanceof FindOperator_1.FindOperator) && !(relatedEntity instanceof Function)) {\n                    value = this.referencedColumn.getEntityValue(PromiseUtils_1.PromiseUtils.extractValue(relatedEntity));\n                }\n                else if (entity[this.propertyName] && entity[this.propertyName] instanceof Object && !(entity[this.propertyName] instanceof FindOperator_1.FindOperator) && !(entity[this.propertyName] instanceof Function)) {\n                    value = this.referencedColumn.getEntityValue(PromiseUtils_1.PromiseUtils.extractValue(entity[this.propertyName]));\n                }\n                else {\n                    value = entity[this.propertyName];\n                }\n            }\n            else if (this.referencedColumn) {\n                value = this.referencedColumn.getEntityValue(PromiseUtils_1.PromiseUtils.extractValue(entity[this.propertyName]));\n            }\n            else {\n                value = entity[this.propertyName];\n            }\n        }\n        if (transform && this.transformer)\n            value = this.transformer.to(value);\n        return value;\n    };\n    /**\n     * Sets given entity's column value.\n     * Using of this method helps to set entity relation's value of the lazy and non-lazy relations.\n     */\n    ColumnMetadata.prototype.setEntityValue = function (entity, value) {\n        var _this = this;\n        if (this.embeddedMetadata) {\n            // first step - we extract all parent properties of the entity relative to this column, e.g. [data, information, counters]\n            var extractEmbeddedColumnValue_4 = function (embeddedMetadatas, map) {\n                // if (!object[embeddedMetadata.propertyName])\n                //     object[embeddedMetadata.propertyName] = embeddedMetadata.create();\n                var embeddedMetadata = embeddedMetadatas.shift();\n                if (embeddedMetadata) {\n                    if (!map[embeddedMetadata.propertyName])\n                        map[embeddedMetadata.propertyName] = embeddedMetadata.create();\n                    extractEmbeddedColumnValue_4(embeddedMetadatas, map[embeddedMetadata.propertyName]);\n                    return map;\n                }\n                map[_this.propertyName] = value;\n                return map;\n            };\n            return extractEmbeddedColumnValue_4(__spread(this.embeddedMetadata.embeddedMetadataTree), entity);\n        }\n        else {\n            entity[this.propertyName] = value;\n        }\n    };\n    // ---------------------------------------------------------------------\n    // Builder Methods\n    // ---------------------------------------------------------------------\n    ColumnMetadata.prototype.build = function (connection) {\n        this.propertyPath = this.buildPropertyPath();\n        this.propertyAliasName = this.propertyPath.replace(\".\", \"_\");\n        this.databaseName = this.buildDatabaseName(connection);\n        this.databasePath = this.buildDatabasePath();\n        this.databaseNameWithoutPrefixes = connection.namingStrategy.columnName(this.propertyName, this.givenDatabaseName, []);\n        return this;\n    };\n    ColumnMetadata.prototype.buildPropertyPath = function () {\n        var path = \"\";\n        if (this.embeddedMetadata && this.embeddedMetadata.parentPropertyNames.length)\n            path = this.embeddedMetadata.parentPropertyNames.join(\".\") + \".\";\n        path += this.propertyName;\n        // we add reference column to property path only if this column is virtual\n        // because if its not virtual it means user defined a real column for this relation\n        // also we don't do it if column is inside a junction table\n        if (!this.entityMetadata.isJunction && this.isVirtual && this.referencedColumn && this.referencedColumn.propertyName !== this.propertyName)\n            path += \".\" + this.referencedColumn.propertyName;\n        return path;\n    };\n    ColumnMetadata.prototype.buildDatabasePath = function () {\n        var path = \"\";\n        if (this.embeddedMetadata && this.embeddedMetadata.parentPropertyNames.length)\n            path = this.embeddedMetadata.parentPropertyNames.join(\".\") + \".\";\n        path += this.databaseName;\n        // we add reference column to property path only if this column is virtual\n        // because if its not virtual it means user defined a real column for this relation\n        // also we don't do it if column is inside a junction table\n        if (!this.entityMetadata.isJunction && this.isVirtual && this.referencedColumn && this.referencedColumn.databaseName !== this.databaseName)\n            path += \".\" + this.referencedColumn.databaseName;\n        return path;\n    };\n    ColumnMetadata.prototype.buildDatabaseName = function (connection) {\n        var propertyNames = this.embeddedMetadata ? this.embeddedMetadata.parentPrefixes : [];\n        if (connection.driver instanceof MongoDriver_1.MongoDriver) // we don't need to include embedded name for the mongodb column names\n            propertyNames = [];\n        return connection.namingStrategy.columnName(this.propertyName, this.givenDatabaseName, propertyNames);\n    };\n    return ColumnMetadata;\n}());\nexports.ColumnMetadata = ColumnMetadata;\n\n//# sourceMappingURL=ColumnMetadata.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/metadata/ColumnMetadata.js?");

/***/ }),

/***/ "./node_modules/typeorm/metadata/EmbeddedMetadata.js":
/*!***********************************************************!*\
  !*** ./node_modules/typeorm/metadata/EmbeddedMetadata.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MongoDriver_1 = __webpack_require__(/*! ../driver/mongodb/MongoDriver */ \"./node_modules/typeorm/driver/mongodb/MongoDriver.js\");\n/**\n * Contains all information about entity's embedded property.\n */\nvar EmbeddedMetadata = /** @class */ (function () {\n    // ---------------------------------------------------------------------\n    // Constructor\n    // ---------------------------------------------------------------------\n    function EmbeddedMetadata(options) {\n        /**\n         * Columns inside this embed.\n         */\n        this.columns = [];\n        /**\n         * Relations inside this embed.\n         */\n        this.relations = [];\n        /**\n         * Entity listeners inside this embed.\n         */\n        this.listeners = [];\n        /**\n         * Indices applied to the embed columns.\n         */\n        this.indices = [];\n        /**\n         * Relation ids inside this embed.\n         */\n        this.relationIds = [];\n        /**\n         * Relation counts inside this embed.\n         */\n        this.relationCounts = [];\n        /**\n         * Nested embeddable in this embeddable (which has current embedded as parent embedded).\n         */\n        this.embeddeds = [];\n        /**\n         * Indicates if this embedded is in array mode.\n         *\n         * This option works only in monogodb.\n         */\n        this.isArray = false;\n        /**\n         * Returns array of property names of current embed and all its parent embeds.\n         *\n         * example: post[data][information][counters].id where \"data\", \"information\" and \"counters\" are embeds\n         * we need to get value of \"id\" column from the post real entity object.\n         * this method will return [\"data\", \"information\", \"counters\"]\n         */\n        this.parentPropertyNames = [];\n        /**\n         * Returns array of prefixes of current embed and all its parent embeds.\n         */\n        this.parentPrefixes = [];\n        /**\n         * Returns embed metadatas from all levels of the parent tree.\n         *\n         * example: post[data][information][counters].id where \"data\", \"information\" and \"counters\" are embeds\n         * this method will return [embed metadata of data, embed metadata of information, embed metadata of counters]\n         */\n        this.embeddedMetadataTree = [];\n        /**\n         * Embed metadatas from all levels of the parent tree.\n         *\n         * example: post[data][information][counters].id where \"data\", \"information\" and \"counters\" are embeds\n         * this method will return [embed metadata of data, embed metadata of information, embed metadata of counters]\n         */\n        this.columnsFromTree = [];\n        /**\n         * Relations of this embed and all relations from its child embeds.\n         */\n        this.relationsFromTree = [];\n        /**\n         * Relations of this embed and all relations from its child embeds.\n         */\n        this.listenersFromTree = [];\n        /**\n         * Indices of this embed and all indices from its child embeds.\n         */\n        this.indicesFromTree = [];\n        /**\n         * Relation ids of this embed and all relation ids from its child embeds.\n         */\n        this.relationIdsFromTree = [];\n        /**\n         * Relation counts of this embed and all relation counts from its child embeds.\n         */\n        this.relationCountsFromTree = [];\n        this.entityMetadata = options.entityMetadata;\n        this.type = options.args.type();\n        this.propertyName = options.args.propertyName;\n        this.customPrefix = options.args.prefix;\n        this.isArray = options.args.isArray;\n    }\n    // ---------------------------------------------------------------------\n    // Public Methods\n    // ---------------------------------------------------------------------\n    /**\n     * Creates a new embedded object.\n     */\n    EmbeddedMetadata.prototype.create = function () {\n        return new this.type;\n    };\n    // ---------------------------------------------------------------------\n    // Builder Methods\n    // ---------------------------------------------------------------------\n    EmbeddedMetadata.prototype.build = function (connection) {\n        this.embeddeds.forEach(function (embedded) { return embedded.build(connection); });\n        this.prefix = this.buildPrefix(connection);\n        this.parentPropertyNames = this.buildParentPropertyNames();\n        this.parentPrefixes = this.buildParentPrefixes();\n        this.propertyPath = this.parentPropertyNames.join(\".\");\n        this.embeddedMetadataTree = this.buildEmbeddedMetadataTree();\n        this.columnsFromTree = this.buildColumnsFromTree();\n        this.relationsFromTree = this.buildRelationsFromTree();\n        this.listenersFromTree = this.buildListenersFromTree();\n        this.indicesFromTree = this.buildIndicesFromTree();\n        this.relationIdsFromTree = this.buildRelationIdsFromTree();\n        this.relationCountsFromTree = this.buildRelationCountsFromTree();\n        return this;\n    };\n    // ---------------------------------------------------------------------\n    // Protected Methods\n    // ---------------------------------------------------------------------\n    EmbeddedMetadata.prototype.buildPrefix = function (connection) {\n        if (connection.driver instanceof MongoDriver_1.MongoDriver)\n            return this.propertyName;\n        var prefixes = [];\n        if (this.parentEmbeddedMetadata)\n            prefixes.push(this.parentEmbeddedMetadata.buildPrefix(connection));\n        if (this.customPrefix === undefined) {\n            prefixes.push(this.propertyName);\n        }\n        else if (typeof this.customPrefix === \"string\") {\n            prefixes.push(this.customPrefix);\n        }\n        return prefixes.join(\"_\"); // todo: use naming strategy instead of \"_\"  !!!\n    };\n    EmbeddedMetadata.prototype.buildParentPropertyNames = function () {\n        return this.parentEmbeddedMetadata ? this.parentEmbeddedMetadata.buildParentPropertyNames().concat(this.propertyName) : [this.propertyName];\n    };\n    EmbeddedMetadata.prototype.buildParentPrefixes = function () {\n        return [this.prefix || this.propertyName];\n    };\n    EmbeddedMetadata.prototype.buildEmbeddedMetadataTree = function () {\n        return this.parentEmbeddedMetadata ? this.parentEmbeddedMetadata.buildEmbeddedMetadataTree().concat(this) : [this];\n    };\n    EmbeddedMetadata.prototype.buildColumnsFromTree = function () {\n        return this.embeddeds.reduce(function (columns, embedded) { return columns.concat(embedded.buildColumnsFromTree()); }, this.columns);\n    };\n    EmbeddedMetadata.prototype.buildRelationsFromTree = function () {\n        return this.embeddeds.reduce(function (relations, embedded) { return relations.concat(embedded.buildRelationsFromTree()); }, this.relations);\n    };\n    EmbeddedMetadata.prototype.buildListenersFromTree = function () {\n        return this.embeddeds.reduce(function (relations, embedded) { return relations.concat(embedded.buildListenersFromTree()); }, this.listeners);\n    };\n    EmbeddedMetadata.prototype.buildIndicesFromTree = function () {\n        return this.embeddeds.reduce(function (relations, embedded) { return relations.concat(embedded.buildIndicesFromTree()); }, this.indices);\n    };\n    EmbeddedMetadata.prototype.buildRelationIdsFromTree = function () {\n        return this.embeddeds.reduce(function (relations, embedded) { return relations.concat(embedded.buildRelationIdsFromTree()); }, this.relationIds);\n    };\n    EmbeddedMetadata.prototype.buildRelationCountsFromTree = function () {\n        return this.embeddeds.reduce(function (relations, embedded) { return relations.concat(embedded.buildRelationCountsFromTree()); }, this.relationCounts);\n    };\n    return EmbeddedMetadata;\n}());\nexports.EmbeddedMetadata = EmbeddedMetadata;\n\n//# sourceMappingURL=EmbeddedMetadata.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/metadata/EmbeddedMetadata.js?");

/***/ }),

/***/ "./node_modules/typeorm/metadata/EntityListenerMetadata.js":
/*!*****************************************************************!*\
  !*** ./node_modules/typeorm/metadata/EntityListenerMetadata.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * This metadata contains all information about entity's listeners.\n */\nvar EntityListenerMetadata = /** @class */ (function () {\n    // ---------------------------------------------------------------------\n    // Constructor\n    // ---------------------------------------------------------------------\n    function EntityListenerMetadata(options) {\n        this.entityMetadata = options.entityMetadata;\n        this.embeddedMetadata = options.embeddedMetadata;\n        this.target = options.args.target;\n        this.propertyName = options.args.propertyName;\n        this.type = options.args.type;\n    }\n    // ---------------------------------------------------------------------\n    // Public Methods\n    // ---------------------------------------------------------------------\n    /**\n     * Checks if entity listener is allowed to be executed on the given entity.\n     */\n    EntityListenerMetadata.prototype.isAllowed = function (entity) {\n        return this.entityMetadata.target === entity.constructor || // todo: .constructor won't work for entity schemas, but there are no entity listeners in schemas since there are no objects, right?\n            (this.entityMetadata.target instanceof Function && entity.constructor.prototype instanceof this.entityMetadata.target); // todo: also need to implement entity schema inheritance\n    };\n    /**\n     * Executes listener method of the given entity.\n     */\n    EntityListenerMetadata.prototype.execute = function (entity) {\n        if (!this.embeddedMetadata)\n            return entity[this.propertyName]();\n        this.callEntityEmbeddedMethod(entity, this.embeddedMetadata.propertyPath.split(\".\"));\n    };\n    // ---------------------------------------------------------------------\n    // Protected Methods\n    // ---------------------------------------------------------------------\n    /**\n     * Calls embedded entity listener method no matter how nested it is.\n     */\n    EntityListenerMetadata.prototype.callEntityEmbeddedMethod = function (entity, propertyPaths) {\n        var propertyPath = propertyPaths.shift();\n        if (!propertyPath)\n            return;\n        if (propertyPaths.length === 0) {\n            entity[propertyPath][this.propertyName]();\n        }\n        else {\n            if (entity[propertyPath])\n                this.callEntityEmbeddedMethod(entity[propertyPath], propertyPaths);\n        }\n    };\n    return EntityListenerMetadata;\n}());\nexports.EntityListenerMetadata = EntityListenerMetadata;\n\n//# sourceMappingURL=EntityListenerMetadata.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/metadata/EntityListenerMetadata.js?");

/***/ }),

/***/ "./node_modules/typeorm/metadata/EntityMetadata.js":
/*!*********************************************************!*\
  !*** ./node_modules/typeorm/metadata/EntityMetadata.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar OrmUtils_1 = __webpack_require__(/*! ../util/OrmUtils */ \"./node_modules/typeorm/util/OrmUtils.js\");\nvar PostgresDriver_1 = __webpack_require__(/*! ../driver/postgres/PostgresDriver */ \"./node_modules/typeorm/driver/postgres/PostgresDriver.js\");\nvar SqlServerDriver_1 = __webpack_require__(/*! ../driver/sqlserver/SqlServerDriver */ \"./node_modules/typeorm/driver/sqlserver/SqlServerDriver.js\");\nvar CannotCreateEntityIdMapError_1 = __webpack_require__(/*! ../error/CannotCreateEntityIdMapError */ \"./node_modules/typeorm/error/CannotCreateEntityIdMapError.js\");\n/**\n * Contains all entity metadata.\n */\nvar EntityMetadata = /** @class */ (function () {\n    // ---------------------------------------------------------------------\n    // Constructor\n    // ---------------------------------------------------------------------\n    function EntityMetadata(options) {\n        /**\n         * Children entity metadatas. Used in inheritance patterns.\n         */\n        this.childEntityMetadatas = [];\n        /**\n         * All \"inheritance tree\" from a target entity.\n         * For example for target Post < ContentModel < Unit it will be an array of [Post, ContentModel, Unit].\n         * It also contains child entities for single table inheritance.\n         */\n        this.inheritanceTree = [];\n        /**\n         * Table type. Tables can be abstract, closure, junction, embedded, etc.\n         */\n        this.tableType = \"regular\";\n        /**\n         * Indicates if schema will be synchronized for this entity or not.\n         */\n        this.synchronize = true;\n        /**\n         * Checks if there any non-nullable column exist in this entity.\n         */\n        this.hasNonNullableRelations = false;\n        /**\n         * Indicates if this entity metadata of a junction table, or not.\n         * Junction table is a table created by many-to-many relationship.\n         *\n         * Its also possible to understand if entity is junction via tableType.\n         */\n        this.isJunction = false;\n        /**\n         * Checks if this table is a junction table of the closure table.\n         * This type is for tables that contain junction metadata of the closure tables.\n         */\n        this.isClosureJunction = false;\n        /**\n         * Checks if entity's table has multiple primary columns.\n         */\n        this.hasMultiplePrimaryKeys = false;\n        /**\n         * Indicates if this entity metadata has uuid generated columns.\n         */\n        this.hasUUIDGeneratedColumns = false;\n        /**\n         * Entity's column metadatas defined by user.\n         */\n        this.ownColumns = [];\n        /**\n         * Columns of the entity, including columns that are coming from the embeddeds of this entity.\n         */\n        this.columns = [];\n        /**\n         * Ancestor columns used only in closure junction tables.\n         */\n        this.ancestorColumns = [];\n        /**\n         * Descendant columns used only in closure junction tables.\n         */\n        this.descendantColumns = [];\n        /**\n         * All columns except for virtual columns.\n         */\n        this.nonVirtualColumns = [];\n        /**\n         * In the case if this entity metadata is junction table's entity metadata,\n         * this will contain all referenced columns of owner entity.\n         */\n        this.ownerColumns = [];\n        /**\n         * In the case if this entity metadata is junction table's entity metadata,\n         * this will contain all referenced columns of inverse entity.\n         */\n        this.inverseColumns = [];\n        /**\n         * Gets the column with generated flag.\n         */\n        this.generatedColumns = [];\n        /**\n         * Gets the primary columns.\n         */\n        this.primaryColumns = [];\n        /**\n         * Entity's relation metadatas.\n         */\n        this.ownRelations = [];\n        /**\n         * Relations of the entity, including relations that are coming from the embeddeds of this entity.\n         */\n        this.relations = [];\n        /**\n         * List of eager relations this metadata has.\n         */\n        this.eagerRelations = [];\n        /**\n         * List of eager relations this metadata has.\n         */\n        this.lazyRelations = [];\n        /**\n         * Gets only one-to-one relations of the entity.\n         */\n        this.oneToOneRelations = [];\n        /**\n         * Gets only owner one-to-one relations of the entity.\n         */\n        this.ownerOneToOneRelations = [];\n        /**\n         * Gets only one-to-many relations of the entity.\n         */\n        this.oneToManyRelations = [];\n        /**\n         * Gets only many-to-one relations of the entity.\n         */\n        this.manyToOneRelations = [];\n        /**\n         * Gets only many-to-many relations of the entity.\n         */\n        this.manyToManyRelations = [];\n        /**\n         * Gets only owner many-to-many relations of the entity.\n         */\n        this.ownerManyToManyRelations = [];\n        /**\n         * Gets only owner one-to-one and many-to-one relations.\n         */\n        this.relationsWithJoinColumns = [];\n        /**\n         * Entity's relation id metadatas.\n         */\n        this.relationIds = [];\n        /**\n         * Entity's relation id metadatas.\n         */\n        this.relationCounts = [];\n        /**\n         * Entity's foreign key metadatas.\n         */\n        this.foreignKeys = [];\n        /**\n         * Entity's embedded metadatas.\n         */\n        this.embeddeds = [];\n        /**\n         * All embeddeds - embeddeds from this entity metadata and from all child embeddeds, etc.\n         */\n        this.allEmbeddeds = [];\n        /**\n         * Entity's own indices.\n         */\n        this.ownIndices = [];\n        /**\n         * Entity's index metadatas.\n         */\n        this.indices = [];\n        /**\n         * Entity's unique metadatas.\n         */\n        this.uniques = [];\n        /**\n         * Entity's check metadatas.\n         */\n        this.checks = [];\n        /**\n         * Entity's own listener metadatas.\n         */\n        this.ownListeners = [];\n        /**\n         * Entity listener metadatas.\n         */\n        this.listeners = [];\n        /**\n         * Listener metadatas with \"AFTER LOAD\" type.\n         */\n        this.afterLoadListeners = [];\n        /**\n         * Listener metadatas with \"AFTER INSERT\" type.\n         */\n        this.beforeInsertListeners = [];\n        /**\n         * Listener metadatas with \"AFTER INSERT\" type.\n         */\n        this.afterInsertListeners = [];\n        /**\n         * Listener metadatas with \"AFTER UPDATE\" type.\n         */\n        this.beforeUpdateListeners = [];\n        /**\n         * Listener metadatas with \"AFTER UPDATE\" type.\n         */\n        this.afterUpdateListeners = [];\n        /**\n         * Listener metadatas with \"AFTER REMOVE\" type.\n         */\n        this.beforeRemoveListeners = [];\n        /**\n         * Listener metadatas with \"AFTER REMOVE\" type.\n         */\n        this.afterRemoveListeners = [];\n        this.connection = options.connection;\n        this.inheritanceTree = options.inheritanceTree || [];\n        this.inheritancePattern = options.inheritancePattern;\n        this.treeType = options.tableTree ? options.tableTree.type : undefined;\n        this.parentClosureEntityMetadata = options.parentClosureEntityMetadata;\n        this.tableMetadataArgs = options.args;\n        this.target = this.tableMetadataArgs.target;\n        this.tableType = this.tableMetadataArgs.type;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates a new entity.\n     */\n    EntityMetadata.prototype.create = function (queryRunner) {\n        var _this = this;\n        // if target is set to a function (e.g. class) that can be created then create it\n        var ret;\n        if (this.target instanceof Function) {\n            ret = new this.target();\n            this.lazyRelations.forEach(function (relation) { return _this.connection.relationLoader.enableLazyLoad(relation, ret, queryRunner); });\n            return ret;\n        }\n        // otherwise simply return a new empty object\n        var newObject = {};\n        this.lazyRelations.forEach(function (relation) { return _this.connection.relationLoader.enableLazyLoad(relation, newObject, queryRunner); });\n        return newObject;\n    };\n    /**\n     * Checks if given entity has an id.\n     */\n    EntityMetadata.prototype.hasId = function (entity) {\n        if (!entity)\n            return false;\n        return this.primaryColumns.every(function (primaryColumn) {\n            var value = primaryColumn.getEntityValue(entity);\n            return value !== null && value !== undefined && value !== \"\";\n        });\n    };\n    /**\n     * Checks if given entity / object contains ALL primary keys entity must have.\n     * Returns true if it contains all of them, false if at least one of them is not defined.\n     */\n    EntityMetadata.prototype.hasAllPrimaryKeys = function (entity) {\n        return this.primaryColumns.every(function (primaryColumn) {\n            var value = primaryColumn.getEntityValue(entity);\n            return value !== null && value !== undefined;\n        });\n    };\n    /**\n     * Ensures that given object is an entity id map.\n     * If given id is an object then it means its already id map.\n     * If given id isn't an object then it means its a value of the id column\n     * and it creates a new id map with this value and name of the primary column.\n     */\n    EntityMetadata.prototype.ensureEntityIdMap = function (id) {\n        if (id instanceof Object)\n            return id;\n        if (this.hasMultiplePrimaryKeys)\n            throw new CannotCreateEntityIdMapError_1.CannotCreateEntityIdMapError(this, id);\n        return this.primaryColumns[0].createValueMap(id);\n    };\n    /**\n     * Gets primary keys of the entity and returns them in a literal object.\n     * For example, for Post{ id: 1, title: \"hello\" } where id is primary it will return { id: 1 }\n     * For multiple primary keys it returns multiple keys in object.\n     * For primary keys inside embeds it returns complex object literal with keys in them.\n     */\n    EntityMetadata.prototype.getEntityIdMap = function (entity) {\n        if (!entity)\n            return undefined;\n        return EntityMetadata.getValueMap(entity, this.primaryColumns, { skipNulls: true });\n    };\n    /**\n     * Creates a \"mixed id map\".\n     * If entity has multiple primary keys (ids) then it will return just regular id map, like what getEntityIdMap returns.\n     * But if entity has a single primary key then it will return just value of the id column of the entity, just value.\n     * This is called mixed id map.\n     */\n    EntityMetadata.prototype.getEntityIdMixedMap = function (entity) {\n        if (!entity)\n            return entity;\n        var idMap = this.getEntityIdMap(entity);\n        if (this.hasMultiplePrimaryKeys) {\n            return idMap;\n        }\n        else if (idMap) {\n            return this.primaryColumns[0].getEntityValue(idMap); // todo: what about parent primary column?\n        }\n        return idMap;\n    };\n    /**\n     * Compares two different entities by their ids.\n     * Returns true if they match, false otherwise.\n     */\n    EntityMetadata.prototype.compareEntities = function (firstEntity, secondEntity) {\n        var firstEntityIdMap = this.getEntityIdMap(firstEntity);\n        if (!firstEntityIdMap)\n            return false;\n        var secondEntityIdMap = this.getEntityIdMap(secondEntity);\n        if (!secondEntityIdMap)\n            return false;\n        return EntityMetadata.compareIds(firstEntityIdMap, secondEntityIdMap);\n    };\n    /**\n     * Finds column with a given property name.\n     */\n    EntityMetadata.prototype.findColumnWithPropertyName = function (propertyName) {\n        return this.columns.find(function (column) { return column.propertyName === propertyName; });\n    };\n    /**\n     * Finds column with a given database name.\n     */\n    EntityMetadata.prototype.findColumnWithDatabaseName = function (databaseName) {\n        return this.columns.find(function (column) { return column.databaseName === databaseName; });\n    };\n    /**\n     * Finds column with a given property path.\n     */\n    EntityMetadata.prototype.findColumnWithPropertyPath = function (propertyPath) {\n        var column = this.columns.find(function (column) { return column.propertyPath === propertyPath; });\n        if (column)\n            return column;\n        // in the case if column with property path was not found, try to find a relation with such property path\n        // if we find relation and it has a single join column then its the column user was seeking\n        var relation = this.relations.find(function (relation) { return relation.propertyPath === propertyPath; });\n        if (relation && relation.joinColumns.length === 1)\n            return relation.joinColumns[0];\n        return undefined;\n    };\n    /**\n     * Finds columns with a given property path.\n     * Property path can match a relation, and relations can contain multiple columns.\n     */\n    EntityMetadata.prototype.findColumnsWithPropertyPath = function (propertyPath) {\n        var column = this.columns.find(function (column) { return column.propertyPath === propertyPath; });\n        if (column)\n            return [column];\n        // in the case if column with property path was not found, try to find a relation with such property path\n        // if we find relation and it has a single join column then its the column user was seeking\n        var relation = this.relations.find(function (relation) { return relation.propertyPath === propertyPath; });\n        if (relation && relation.joinColumns)\n            return relation.joinColumns;\n        return [];\n    };\n    /**\n     * Finds relation with the given property path.\n     */\n    EntityMetadata.prototype.findRelationWithPropertyPath = function (propertyPath) {\n        return this.relations.find(function (relation) { return relation.propertyPath === propertyPath; });\n    };\n    /**\n     * Checks if there is an embedded with a given property path.\n     */\n    EntityMetadata.prototype.hasEmbeddedWithPropertyPath = function (propertyPath) {\n        return this.allEmbeddeds.some(function (embedded) { return embedded.propertyPath === propertyPath; });\n    };\n    /**\n     * Finds embedded with a given property path.\n     */\n    EntityMetadata.prototype.findEmbeddedWithPropertyPath = function (propertyPath) {\n        return this.allEmbeddeds.find(function (embedded) { return embedded.propertyPath === propertyPath; });\n    };\n    /**\n     * Iterates through entity and finds and extracts all values from relations in the entity.\n     * If relation value is an array its being flattened.\n     */\n    EntityMetadata.prototype.extractRelationValuesFromEntity = function (entity, relations) {\n        var relationsAndValues = [];\n        relations.forEach(function (relation) {\n            var value = relation.getEntityValue(entity);\n            if (value instanceof Array) {\n                value.forEach(function (subValue) { return relationsAndValues.push([relation, subValue, relation.inverseEntityMetadata]); });\n            }\n            else if (value) {\n                relationsAndValues.push([relation, value, relation.inverseEntityMetadata]);\n            }\n        });\n        return relationsAndValues;\n    };\n    // -------------------------------------------------------------------------\n    // Public Static Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates a property paths for a given entity.\n     */\n    EntityMetadata.createPropertyPath = function (metadata, entity, prefix) {\n        var _this = this;\n        if (prefix === void 0) { prefix = \"\"; }\n        var paths = [];\n        Object.keys(entity).forEach(function (key) {\n            // check for function is needed in the cases when createPropertyPath used on values containg a function as a value\n            // example: .update().set({ name: () => `SUBSTR('', 1, 2)` })\n            var parentPath = prefix ? prefix + \".\" + key : key;\n            if (metadata.hasEmbeddedWithPropertyPath(parentPath)) {\n                var subPaths = _this.createPropertyPath(metadata, entity[key], parentPath);\n                paths.push.apply(paths, __spread(subPaths));\n            }\n            else {\n                var path = prefix ? prefix + \".\" + key : key;\n                paths.push(path);\n            }\n        });\n        return paths;\n    };\n    /**\n     * Finds difference between two entity id maps.\n     * Returns items that exist in the first array and absent in the second array.\n     */\n    EntityMetadata.difference = function (firstIdMaps, secondIdMaps) {\n        return firstIdMaps.filter(function (firstIdMap) {\n            return !secondIdMaps.find(function (secondIdMap) { return OrmUtils_1.OrmUtils.deepCompare(firstIdMap, secondIdMap); });\n        });\n    };\n    /**\n     * Compares ids of the two entities.\n     * Returns true if they match, false otherwise.\n     */\n    EntityMetadata.compareIds = function (firstId, secondId) {\n        if (firstId === undefined || firstId === null || secondId === undefined || secondId === null)\n            return false;\n        return OrmUtils_1.OrmUtils.deepCompare(firstId, secondId);\n    };\n    /**\n     * Creates value map from the given values and columns.\n     * Examples of usages are primary columns map and join columns map.\n     */\n    EntityMetadata.getValueMap = function (entity, columns, options) {\n        return columns.reduce(function (map, column) {\n            var value = column.getEntityValueMap(entity, options);\n            // make sure that none of the values of the columns are not missing\n            if (map === undefined || value === null || value === undefined)\n                return undefined;\n            return column.isObjectId ? Object.assign(map, value) : OrmUtils_1.OrmUtils.mergeDeep(map, value);\n        }, {});\n    };\n    // ---------------------------------------------------------------------\n    // Public Builder Methods\n    // ---------------------------------------------------------------------\n    EntityMetadata.prototype.build = function () {\n        var namingStrategy = this.connection.namingStrategy;\n        var entityPrefix = this.connection.options.entityPrefix;\n        this.engine = this.tableMetadataArgs.engine;\n        this.database = this.tableMetadataArgs.database;\n        this.schema = this.tableMetadataArgs.schema || this.connection.options.schema;\n        this.givenTableName = this.tableMetadataArgs.type === \"entity-child\" && this.parentEntityMetadata ? this.parentEntityMetadata.givenTableName : this.tableMetadataArgs.name;\n        this.synchronize = this.tableMetadataArgs.synchronize === false ? false : true;\n        this.targetName = this.tableMetadataArgs.target instanceof Function ? this.tableMetadataArgs.target.name : this.tableMetadataArgs.target;\n        if (this.tableMetadataArgs.type === \"closure-junction\") {\n            this.tableNameWithoutPrefix = namingStrategy.closureJunctionTableName(this.givenTableName);\n        }\n        else if (this.tableMetadataArgs.type === \"entity-child\" && this.parentEntityMetadata) {\n            this.tableNameWithoutPrefix = namingStrategy.tableName(this.parentEntityMetadata.targetName, this.parentEntityMetadata.givenTableName);\n        }\n        else {\n            this.tableNameWithoutPrefix = namingStrategy.tableName(this.targetName, this.givenTableName);\n        }\n        this.tableName = entityPrefix ? namingStrategy.prefixTableName(entityPrefix, this.tableNameWithoutPrefix) : this.tableNameWithoutPrefix;\n        this.target = this.target ? this.target : this.tableName;\n        this.name = this.targetName ? this.targetName : this.tableName;\n        this.tablePath = this.buildTablePath();\n        this.schemaPath = this.buildSchemaPath();\n        this.orderBy = (this.tableMetadataArgs.orderBy instanceof Function) ? this.tableMetadataArgs.orderBy(this.propertiesMap) : this.tableMetadataArgs.orderBy; // todo: is propertiesMap available here? Looks like its not\n        this.isJunction = this.tableMetadataArgs.type === \"closure-junction\" || this.tableMetadataArgs.type === \"junction\";\n        this.isClosureJunction = this.tableMetadataArgs.type === \"closure-junction\";\n    };\n    /**\n     * Registers a new column in the entity and recomputes all depend properties.\n     */\n    EntityMetadata.prototype.registerColumn = function (column) {\n        if (this.ownColumns.indexOf(column) !== -1)\n            return;\n        this.ownColumns.push(column);\n        this.columns = this.embeddeds.reduce(function (columns, embedded) { return columns.concat(embedded.columnsFromTree); }, this.ownColumns);\n        this.primaryColumns = this.columns.filter(function (column) { return column.isPrimary; });\n        this.hasMultiplePrimaryKeys = this.primaryColumns.length > 1;\n        this.hasUUIDGeneratedColumns = this.columns.filter(function (column) { return column.isGenerated || column.generationStrategy === \"uuid\"; }).length > 0;\n        this.propertiesMap = this.createPropertiesMap();\n        if (this.childEntityMetadatas)\n            this.childEntityMetadatas.forEach(function (entityMetadata) { return entityMetadata.registerColumn(column); });\n    };\n    /**\n     * Creates a special object - all columns and relations of the object (plus columns and relations from embeds)\n     * in a special format - { propertyName: propertyName }.\n     *\n     * example: Post{ id: number, name: string, counterEmbed: { count: number }, category: Category }.\n     * This method will create following object:\n     * { id: \"id\", counterEmbed: { count: \"counterEmbed.count\" }, category: \"category\" }\n     */\n    EntityMetadata.prototype.createPropertiesMap = function () {\n        var map = {};\n        this.columns.forEach(function (column) { return OrmUtils_1.OrmUtils.mergeDeep(map, column.createValueMap(column.propertyPath)); });\n        this.relations.forEach(function (relation) { return OrmUtils_1.OrmUtils.mergeDeep(map, relation.createValueMap(relation.propertyPath)); });\n        return map;\n    };\n    /**\n     * Builds table path using database name, schema name and table name.\n     */\n    EntityMetadata.prototype.buildTablePath = function () {\n        var tablePath = this.tableName;\n        if (this.schema)\n            tablePath = this.schema + \".\" + tablePath;\n        if (this.database && !(this.connection.driver instanceof PostgresDriver_1.PostgresDriver)) {\n            if (!this.schema && this.connection.driver instanceof SqlServerDriver_1.SqlServerDriver) {\n                tablePath = this.database + \"..\" + tablePath;\n            }\n            else {\n                tablePath = this.database + \".\" + tablePath;\n            }\n        }\n        return tablePath;\n    };\n    /**\n     * Builds table path using schema name and database name.\n     */\n    EntityMetadata.prototype.buildSchemaPath = function () {\n        if (!this.schema)\n            return undefined;\n        return this.database && !(this.connection.driver instanceof PostgresDriver_1.PostgresDriver) ? this.database + \".\" + this.schema : this.schema;\n    };\n    return EntityMetadata;\n}());\nexports.EntityMetadata = EntityMetadata;\n\n//# sourceMappingURL=EntityMetadata.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/metadata/EntityMetadata.js?");

/***/ }),

/***/ "./node_modules/typeorm/metadata/ForeignKeyMetadata.js":
/*!*************************************************************!*\
  !*** ./node_modules/typeorm/metadata/ForeignKeyMetadata.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Contains all information about entity's foreign key.\n */\nvar ForeignKeyMetadata = /** @class */ (function () {\n    // ---------------------------------------------------------------------\n    // Constructor\n    // ---------------------------------------------------------------------\n    function ForeignKeyMetadata(options) {\n        /**\n         * Array of columns of this foreign key.\n         */\n        this.columns = [];\n        /**\n         * Array of referenced columns.\n         */\n        this.referencedColumns = [];\n        /**\n         * Gets array of column names.\n         */\n        this.columnNames = [];\n        /**\n         * Gets array of referenced column names.\n         */\n        this.referencedColumnNames = [];\n        this.entityMetadata = options.entityMetadata;\n        this.referencedEntityMetadata = options.referencedEntityMetadata;\n        this.columns = options.columns;\n        this.referencedColumns = options.referencedColumns;\n        this.onDelete = options.onDelete;\n        this.onUpdate = options.onUpdate;\n        if (options.namingStrategy)\n            this.build(options.namingStrategy);\n    }\n    // ---------------------------------------------------------------------\n    // Public Methods\n    // ---------------------------------------------------------------------\n    /**\n     * Builds some depend foreign key properties.\n     * Must be called after all entity metadatas and their columns are built.\n     */\n    ForeignKeyMetadata.prototype.build = function (namingStrategy) {\n        this.columnNames = this.columns.map(function (column) { return column.databaseName; });\n        this.referencedColumnNames = this.referencedColumns.map(function (column) { return column.databaseName; });\n        this.referencedTablePath = this.referencedEntityMetadata.tablePath;\n        this.name = namingStrategy.foreignKeyName(this.entityMetadata.tablePath, this.columnNames);\n    };\n    return ForeignKeyMetadata;\n}());\nexports.ForeignKeyMetadata = ForeignKeyMetadata;\n\n//# sourceMappingURL=ForeignKeyMetadata.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/metadata/ForeignKeyMetadata.js?");

/***/ }),

/***/ "./node_modules/typeorm/metadata/IndexMetadata.js":
/*!********************************************************!*\
  !*** ./node_modules/typeorm/metadata/IndexMetadata.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Index metadata contains all information about table's index.\n */\nvar IndexMetadata = /** @class */ (function () {\n    // ---------------------------------------------------------------------\n    // Constructor\n    // ---------------------------------------------------------------------\n    function IndexMetadata(options) {\n        /**\n         * Indicates if this index must be unique.\n         */\n        this.isUnique = false;\n        /**\n         * The SPATIAL modifier indexes the entire column and does not allow indexed columns to contain NULL values.\n         * Works only in MySQL.\n         */\n        this.isSpatial = false;\n        /**\n         * The FULLTEXT modifier indexes the entire column and does not allow prefixing.\n         * Works only in MySQL.\n         */\n        this.isFulltext = false;\n        /**\n         * Indicates if this index must synchronize with database index.\n         */\n        this.synchronize = true;\n        /**\n         * Indexed columns.\n         */\n        this.columns = [];\n        /**\n         * Map of column names with order set.\n         * Used only by MongoDB driver.\n         */\n        this.columnNamesWithOrderingMap = {};\n        this.entityMetadata = options.entityMetadata;\n        this.embeddedMetadata = options.embeddedMetadata;\n        if (options.columns)\n            this.columns = options.columns;\n        if (options.args) {\n            this.target = options.args.target;\n            if (options.args.synchronize !== null && options.args.synchronize !== undefined)\n                this.synchronize = options.args.synchronize;\n            this.isUnique = !!options.args.unique;\n            this.isSpatial = !!options.args.spatial;\n            this.isFulltext = !!options.args.fulltext;\n            this.where = options.args.where;\n            this.isSparse = options.args.sparse;\n            this.givenName = options.args.name;\n            this.givenColumnNames = options.args.columns;\n        }\n    }\n    // ---------------------------------------------------------------------\n    // Public Build Methods\n    // ---------------------------------------------------------------------\n    /**\n     * Builds some depend index properties.\n     * Must be called after all entity metadata's properties map, columns and relations are built.\n     */\n    IndexMetadata.prototype.build = function (namingStrategy) {\n        var _this = this;\n        if (this.synchronize === false) {\n            this.name = this.givenName;\n            return this;\n        }\n        var map = {};\n        // if columns already an array of string then simply return it\n        if (this.givenColumnNames) {\n            var columnPropertyPaths = [];\n            if (this.givenColumnNames instanceof Array) {\n                columnPropertyPaths = this.givenColumnNames.map(function (columnName) {\n                    if (_this.embeddedMetadata)\n                        return _this.embeddedMetadata.propertyPath + \".\" + columnName;\n                    return columnName;\n                });\n                columnPropertyPaths.forEach(function (propertyPath) { return map[propertyPath] = 1; });\n            }\n            else { // todo: indices in embeds are not implemented in this syntax. deprecate this syntax?\n                // if columns is a function that returns array of field names then execute it and get columns names from it\n                var columnsFnResult_1 = this.givenColumnNames(this.entityMetadata.propertiesMap);\n                if (columnsFnResult_1 instanceof Array) {\n                    columnPropertyPaths = columnsFnResult_1.map(function (i) { return String(i); });\n                    columnPropertyPaths.forEach(function (name) { return map[name] = 1; });\n                }\n                else {\n                    columnPropertyPaths = Object.keys(columnsFnResult_1).map(function (i) { return String(i); });\n                    Object.keys(columnsFnResult_1).forEach(function (columnName) { return map[columnName] = columnsFnResult_1[columnName]; });\n                }\n            }\n            this.columns = columnPropertyPaths.map(function (propertyPath) {\n                var columnWithSameName = _this.entityMetadata.columns.find(function (column) { return column.propertyPath === propertyPath; });\n                if (columnWithSameName) {\n                    return [columnWithSameName];\n                }\n                var relationWithSameName = _this.entityMetadata.relations.find(function (relation) { return relation.isWithJoinColumn && relation.propertyName === propertyPath; });\n                if (relationWithSameName) {\n                    return relationWithSameName.joinColumns;\n                }\n                throw new Error(\"Index \" + (_this.givenName ? \"\\\"\" + _this.givenName + \"\\\" \" : \"\") + \"contains column that is missing in the entity: \" + propertyPath);\n            })\n                .reduce(function (a, b) { return a.concat(b); });\n        }\n        this.columnNamesWithOrderingMap = Object.keys(map).reduce(function (updatedMap, key) {\n            var column = _this.entityMetadata.columns.find(function (column) { return column.propertyPath === key; });\n            if (column)\n                updatedMap[column.databaseName] = map[key];\n            return updatedMap;\n        }, {});\n        this.name = this.givenName ? this.givenName : namingStrategy.indexName(this.entityMetadata.tablePath, this.columns.map(function (column) { return column.databaseName; }), this.where);\n        return this;\n    };\n    return IndexMetadata;\n}());\nexports.IndexMetadata = IndexMetadata;\n\n//# sourceMappingURL=IndexMetadata.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/metadata/IndexMetadata.js?");

/***/ }),

/***/ "./node_modules/typeorm/metadata/RelationCountMetadata.js":
/*!****************************************************************!*\
  !*** ./node_modules/typeorm/metadata/RelationCountMetadata.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Contains all information about entity's relation count.\n */\nvar RelationCountMetadata = /** @class */ (function () {\n    // ---------------------------------------------------------------------\n    // Constructor\n    // ---------------------------------------------------------------------\n    function RelationCountMetadata(options) {\n        this.entityMetadata = options.entityMetadata;\n        this.target = options.args.target;\n        this.propertyName = options.args.propertyName;\n        this.relationNameOrFactory = options.args.relation;\n        this.alias = options.args.alias;\n        this.queryBuilderFactory = options.args.queryBuilderFactory;\n    }\n    // ---------------------------------------------------------------------\n    // Public Builder Methods\n    // ---------------------------------------------------------------------\n    /**\n     * Builds some depend relation count metadata properties.\n     * This builder method should be used only after entity metadata, its properties map and all relations are build.\n     */\n    RelationCountMetadata.prototype.build = function () {\n        var propertyPath = this.relationNameOrFactory instanceof Function ? this.relationNameOrFactory(this.entityMetadata.propertiesMap) : this.relationNameOrFactory;\n        var relation = this.entityMetadata.findRelationWithPropertyPath(propertyPath);\n        if (!relation)\n            throw new Error(\"Cannot find relation \" + propertyPath + \". Wrong relation specified for @RelationCount decorator.\");\n        this.relation = relation;\n    };\n    return RelationCountMetadata;\n}());\nexports.RelationCountMetadata = RelationCountMetadata;\n\n//# sourceMappingURL=RelationCountMetadata.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/metadata/RelationCountMetadata.js?");

/***/ }),

/***/ "./node_modules/typeorm/metadata/RelationIdMetadata.js":
/*!*************************************************************!*\
  !*** ./node_modules/typeorm/metadata/RelationIdMetadata.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Contains all information about entity's relation count.\n */\nvar RelationIdMetadata = /** @class */ (function () {\n    // ---------------------------------------------------------------------\n    // Constructor\n    // ---------------------------------------------------------------------\n    function RelationIdMetadata(options) {\n        this.entityMetadata = options.entityMetadata;\n        this.target = options.args.target;\n        this.propertyName = options.args.propertyName;\n        this.relationNameOrFactory = options.args.relation;\n        this.alias = options.args.alias;\n        this.queryBuilderFactory = options.args.queryBuilderFactory;\n    }\n    // ---------------------------------------------------------------------\n    // Public Methods\n    // ---------------------------------------------------------------------\n    /**\n     * Sets relation id value from the given entity.\n     *\n     * todo: make it to work in embeds as well.\n     */\n    RelationIdMetadata.prototype.setValue = function (entity) {\n        var _this = this;\n        var inverseEntity = this.relation.getEntityValue(entity);\n        if (inverseEntity instanceof Array) {\n            entity[this.propertyName] = inverseEntity.map(function (item) {\n                return _this.relation.inverseEntityMetadata.getEntityIdMixedMap(item);\n            }).filter(function (item) { return item !== null && item !== undefined; });\n        }\n        else {\n            var value = this.relation.inverseEntityMetadata.getEntityIdMixedMap(inverseEntity);\n            if (value !== undefined)\n                entity[this.propertyName] = value;\n        }\n    };\n    // ---------------------------------------------------------------------\n    // Public Builder Methods\n    // ---------------------------------------------------------------------\n    /**\n     * Builds some depend relation id properties.\n     * This builder method should be used only after entity metadata, its properties map and all relations are build.\n     */\n    RelationIdMetadata.prototype.build = function () {\n        var propertyPath = this.relationNameOrFactory instanceof Function ? this.relationNameOrFactory(this.entityMetadata.propertiesMap) : this.relationNameOrFactory;\n        var relation = this.entityMetadata.findRelationWithPropertyPath(propertyPath);\n        if (!relation)\n            throw new Error(\"Cannot find relation \" + propertyPath + \". Wrong relation specified for @RelationId decorator.\");\n        this.relation = relation;\n    };\n    return RelationIdMetadata;\n}());\nexports.RelationIdMetadata = RelationIdMetadata;\n\n//# sourceMappingURL=RelationIdMetadata.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/metadata/RelationIdMetadata.js?");

/***/ }),

/***/ "./node_modules/typeorm/metadata/RelationMetadata.js":
/*!***********************************************************!*\
  !*** ./node_modules/typeorm/metadata/RelationMetadata.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar EntityMetadata_1 = __webpack_require__(/*! ./EntityMetadata */ \"./node_modules/typeorm/metadata/EntityMetadata.js\");\n/**\n * Contains all information about some entity's relation.\n */\nvar RelationMetadata = /** @class */ (function () {\n    // ---------------------------------------------------------------------\n    // Constructor\n    // ---------------------------------------------------------------------\n    function RelationMetadata(options) {\n        /**\n         * Indicates if this is a parent (can be only many-to-one relation) relation in the tree tables.\n         */\n        this.isTreeParent = false;\n        /**\n         * Indicates if this is a children (can be only one-to-many relation) relation in the tree tables.\n         */\n        this.isTreeChildren = false;\n        /**\n         * Indicates if this relation's column is a primary key.\n         * Can be used only for many-to-one and owner one-to-one relations.\n         */\n        this.isPrimary = false;\n        /**\n         * Indicates if this relation is lazily loaded.\n         */\n        this.isLazy = false;\n        /**\n         * Indicates if this relation is eagerly loaded.\n         */\n        this.isEager = false;\n        /**\n         * Indicates if persistence is enabled for the relation.\n         * By default its enabled, but if you want to avoid any changes in the relation to be reflected in the database you can disable it.\n         * If its disabled you can only change a relation from inverse side of a relation or using relation query builder functionality.\n         * This is useful for performance optimization since its disabling avoid multiple extra queries during entity save.\n         */\n        this.persistenceEnabled = true;\n        /**\n         * If set to true then related objects are allowed to be inserted to the database.\n         */\n        this.isCascadeInsert = false;\n        /**\n         * If set to true then related objects are allowed to be updated in the database.\n         */\n        this.isCascadeUpdate = false;\n        /**\n         * If set to true then related objects are allowed to be remove from the database.\n         */\n        this.isCascadeRemove = false;\n        /**\n         * Indicates if relation column value can be nullable or not.\n         */\n        this.isNullable = true;\n        /**\n         * Indicates if this side is an owner of this relation.\n         */\n        this.isOwning = false;\n        /**\n         * Checks if this relation's type is \"one-to-one\".\n         */\n        this.isOneToOne = false;\n        /**\n         * Checks if this relation is owner side of the \"one-to-one\" relation.\n         * Owner side means this side of relation has a join column in the table.\n         */\n        this.isOneToOneOwner = false;\n        /**\n         * Checks if this relation has a join column (e.g. is it many-to-one or one-to-one owner side).\n         */\n        this.isWithJoinColumn = false;\n        /**\n         * Checks if this relation is NOT owner side of the \"one-to-one\" relation.\n         * NOT owner side means this side of relation does not have a join column in the table.\n         */\n        this.isOneToOneNotOwner = false;\n        /**\n         * Checks if this relation's type is \"one-to-many\".\n         */\n        this.isOneToMany = false;\n        /**\n         * Checks if this relation's type is \"many-to-one\".\n         */\n        this.isManyToOne = false;\n        /**\n         * Checks if this relation's type is \"many-to-many\".\n         */\n        this.isManyToMany = false;\n        /**\n         * Checks if this relation's type is \"many-to-many\", and is owner side of the relationship.\n         * Owner side means this side of relation has a join table.\n         */\n        this.isManyToManyOwner = false;\n        /**\n         * Checks if this relation's type is \"many-to-many\", and is NOT owner side of the relationship.\n         * Not owner side means this side of relation does not have a join table.\n         */\n        this.isManyToManyNotOwner = false;\n        /**\n         * Foreign keys created for this relation.\n         */\n        this.foreignKeys = [];\n        /**\n         * Join table columns.\n         * Join columns can be obtained only from owner side of the relation.\n         * From non-owner side of the relation join columns will be empty.\n         * If this relation is a many-to-one/one-to-one then it takes join columns from the current entity.\n         * If this relation is many-to-many then it takes all owner join columns from the junction entity.\n         */\n        this.joinColumns = [];\n        /**\n         * Inverse join table columns.\n         * Inverse join columns are supported only for many-to-many relations\n         * and can be obtained only from owner side of the relation.\n         * From non-owner side of the relation join columns will be undefined.\n         */\n        this.inverseJoinColumns = [];\n        this.entityMetadata = options.entityMetadata;\n        this.embeddedMetadata = options.embeddedMetadata;\n        var args = options.args;\n        this.target = args.target;\n        this.propertyName = args.propertyName;\n        this.relationType = args.relationType;\n        if (args.inverseSideProperty)\n            this.givenInverseSidePropertyFactory = args.inverseSideProperty;\n        this.isLazy = args.isLazy || false;\n        this.isCascadeInsert = args.options.cascade === true || (args.options.cascade instanceof Array && args.options.cascade.indexOf(\"insert\") !== -1);\n        this.isCascadeUpdate = args.options.cascade === true || (args.options.cascade instanceof Array && args.options.cascade.indexOf(\"update\") !== -1);\n        this.isCascadeRemove = args.options.cascade === true || (args.options.cascade instanceof Array && args.options.cascade.indexOf(\"remove\") !== -1);\n        this.isPrimary = args.options.primary || false;\n        this.isNullable = args.options.nullable === false || this.isPrimary ? false : true;\n        this.onDelete = args.options.onDelete;\n        this.isEager = args.options.eager || false;\n        this.persistenceEnabled = args.options.persistence === false ? false : true;\n        this.isTreeParent = args.isTreeParent || false;\n        this.isTreeChildren = args.isTreeChildren || false;\n        this.type = args.type instanceof Function ? args.type() : args.type;\n        this.isOneToOne = this.relationType === \"one-to-one\";\n        this.isOneToMany = this.relationType === \"one-to-many\";\n        this.isManyToOne = this.relationType === \"many-to-one\";\n        this.isManyToMany = this.relationType === \"many-to-many\";\n        this.isOneToOneNotOwner = this.isOneToOne ? true : false;\n        this.isManyToManyNotOwner = this.isManyToMany ? true : false;\n    }\n    // ---------------------------------------------------------------------\n    // Public Methods\n    // ---------------------------------------------------------------------\n    /**\n     * Creates join column ids map from the given related entity ids array.\n     */\n    RelationMetadata.prototype.getRelationIdMap = function (entity) {\n        var joinColumns = this.isOwning ? this.joinColumns : this.inverseRelation.joinColumns;\n        var referencedColumns = joinColumns.map(function (joinColumn) { return joinColumn.referencedColumn; });\n        // console.log(\"entity\", entity);\n        // console.log(\"referencedColumns\", referencedColumns);\n        return EntityMetadata_1.EntityMetadata.getValueMap(entity, referencedColumns);\n    };\n    /**\n     * Ensures that given object is an entity id map.\n     * If given id is an object then it means its already id map.\n     * If given id isn't an object then it means its a value of the id column\n     * and it creates a new id map with this value and name of the primary column.\n     */\n    RelationMetadata.prototype.ensureRelationIdMap = function (id) {\n        if (id instanceof Object)\n            return id;\n        var joinColumns = this.isOwning ? this.joinColumns : this.inverseRelation.joinColumns;\n        var referencedColumns = joinColumns.map(function (joinColumn) { return joinColumn.referencedColumn; });\n        if (referencedColumns.length > 1)\n            throw new Error(\"Cannot create relation id map for a single value because relation contains multiple referenced columns.\");\n        return referencedColumns[0].createValueMap(id);\n    };\n    /**\n     * Extracts column value from the given entity.\n     * If column is in embedded (or recursive embedded) it extracts its value from there.\n     */\n    RelationMetadata.prototype.getEntityValue = function (entity, getLazyRelationsPromiseValue) {\n        if (getLazyRelationsPromiseValue === void 0) { getLazyRelationsPromiseValue = false; }\n        // extract column value from embeddeds of entity if column is in embedded\n        if (this.embeddedMetadata) {\n            // example: post[data][information][counters].id where \"data\", \"information\" and \"counters\" are embeddeds\n            // we need to get value of \"id\" column from the post real entity object\n            // first step - we extract all parent properties of the entity relative to this column, e.g. [data, information, counters]\n            var propertyNames = __spread(this.embeddedMetadata.parentPropertyNames);\n            // next we need to access post[data][information][counters][this.propertyName] to get column value from the counters\n            // this recursive function takes array of generated property names and gets the post[data][information][counters] embed\n            var extractEmbeddedColumnValue_1 = function (propertyNames, value) {\n                var propertyName = propertyNames.shift();\n                if (propertyName) {\n                    if (value[propertyName]) {\n                        return extractEmbeddedColumnValue_1(propertyNames, value[propertyName]);\n                    }\n                    return undefined;\n                }\n                return value;\n            };\n            // once we get nested embed object we get its column, e.g. post[data][information][counters][this.propertyName]\n            var embeddedObject = extractEmbeddedColumnValue_1(propertyNames, entity);\n            if (this.isLazy) {\n                if (embeddedObject[\"__\" + this.propertyName + \"__\"] !== undefined)\n                    return embeddedObject[\"__\" + this.propertyName + \"__\"];\n                if (getLazyRelationsPromiseValue === true)\n                    return embeddedObject[this.propertyName];\n                return undefined;\n            }\n            return embeddedObject ? embeddedObject[this.isLazy ? \"__\" + this.propertyName + \"__\" : this.propertyName] : undefined;\n        }\n        else { // no embeds - no problems. Simply return column name by property name of the entity\n            if (this.isLazy) {\n                if (entity[\"__\" + this.propertyName + \"__\"] !== undefined)\n                    return entity[\"__\" + this.propertyName + \"__\"];\n                if (getLazyRelationsPromiseValue === true)\n                    return entity[this.propertyName];\n                return undefined;\n            }\n            return entity[this.propertyName];\n        }\n    };\n    /**\n     * Sets given entity's relation's value.\n     * Using of this method helps to set entity relation's value of the lazy and non-lazy relations.\n     *\n     * If merge is set to true, it merges given value into currently\n     */\n    RelationMetadata.prototype.setEntityValue = function (entity, value) {\n        var propertyName = this.isLazy ? \"__\" + this.propertyName + \"__\" : this.propertyName;\n        if (this.embeddedMetadata) {\n            // first step - we extract all parent properties of the entity relative to this column, e.g. [data, information, counters]\n            var extractEmbeddedColumnValue_2 = function (embeddedMetadatas, map) {\n                // if (!object[embeddedMetadata.propertyName])\n                //     object[embeddedMetadata.propertyName] = embeddedMetadata.create();\n                var embeddedMetadata = embeddedMetadatas.shift();\n                if (embeddedMetadata) {\n                    if (!map[embeddedMetadata.propertyName])\n                        map[embeddedMetadata.propertyName] = embeddedMetadata.create();\n                    extractEmbeddedColumnValue_2(embeddedMetadatas, map[embeddedMetadata.propertyName]);\n                    return map;\n                }\n                map[propertyName] = value;\n                return map;\n            };\n            return extractEmbeddedColumnValue_2(__spread(this.embeddedMetadata.embeddedMetadataTree), entity);\n        }\n        else {\n            entity[propertyName] = value;\n        }\n    };\n    /**\n     * Creates entity id map from the given entity ids array.\n     */\n    RelationMetadata.prototype.createValueMap = function (value) {\n        var _this = this;\n        // extract column value from embeds of entity if column is in embedded\n        if (this.embeddedMetadata) {\n            // example: post[data][information][counters].id where \"data\", \"information\" and \"counters\" are embeddeds\n            // we need to get value of \"id\" column from the post real entity object and return it in a\n            // { data: { information: { counters: { id: ... } } } } format\n            // first step - we extract all parent properties of the entity relative to this column, e.g. [data, information, counters]\n            var propertyNames = __spread(this.embeddedMetadata.parentPropertyNames);\n            // now need to access post[data][information][counters] to get column value from the counters\n            // and on each step we need to create complex literal object, e.g. first { data },\n            // then { data: { information } }, then { data: { information: { counters } } },\n            // then { data: { information: { counters: [this.propertyName]: entity[data][information][counters][this.propertyName] } } }\n            // this recursive function helps doing that\n            var extractEmbeddedColumnValue_3 = function (propertyNames, map) {\n                var propertyName = propertyNames.shift();\n                if (propertyName) {\n                    map[propertyName] = {};\n                    extractEmbeddedColumnValue_3(propertyNames, map[propertyName]);\n                    return map;\n                }\n                map[_this.propertyName] = value;\n                return map;\n            };\n            return extractEmbeddedColumnValue_3(propertyNames, {});\n        }\n        else { // no embeds - no problems. Simply return column property name and its value of the entity\n            return _a = {}, _a[this.propertyName] = value, _a;\n        }\n        var _a;\n    };\n    // ---------------------------------------------------------------------\n    // Builder Methods\n    // ---------------------------------------------------------------------\n    /**\n     * Builds some depend relation metadata properties.\n     * This builder method should be used only after embedded metadata tree was build.\n     */\n    RelationMetadata.prototype.build = function () {\n        this.propertyPath = this.buildPropertyPath();\n    };\n    /**\n     * Registers given foreign keys in the relation.\n     * This builder method should be used to register foreign key in the relation.\n     */\n    RelationMetadata.prototype.registerForeignKeys = function () {\n        var foreignKeys = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            foreignKeys[_i] = arguments[_i];\n        }\n        (_a = this.foreignKeys).push.apply(_a, __spread(foreignKeys));\n        this.joinColumns = this.foreignKeys[0] ? this.foreignKeys[0].columns : [];\n        this.inverseJoinColumns = this.foreignKeys[1] ? this.foreignKeys[1].columns : [];\n        this.isOwning = this.isManyToOne || ((this.isManyToMany || this.isOneToOne) && this.joinColumns.length > 0);\n        this.isOneToOneOwner = this.isOneToOne && this.isOwning;\n        this.isOneToOneNotOwner = this.isOneToOne && !this.isOwning;\n        this.isManyToManyOwner = this.isManyToMany && this.isOwning;\n        this.isManyToManyNotOwner = this.isManyToMany && !this.isOwning;\n        this.isWithJoinColumn = this.isManyToOne || this.isOneToOneOwner;\n        var _a;\n    };\n    /**\n     * Registers a given junction entity metadata.\n     * This builder method can be called after junction entity metadata for the many-to-many relation was created.\n     */\n    RelationMetadata.prototype.registerJunctionEntityMetadata = function (junctionEntityMetadata) {\n        this.junctionEntityMetadata = junctionEntityMetadata;\n        this.joinTableName = junctionEntityMetadata.tableName;\n        if (this.inverseRelation) {\n            this.inverseRelation.junctionEntityMetadata = junctionEntityMetadata;\n            this.joinTableName = junctionEntityMetadata.tableName;\n        }\n    };\n    /**\n     * Builds inverse side property path based on given inverse side property factory.\n     * This builder method should be used only after properties map of the inverse entity metadata was build.\n     */\n    RelationMetadata.prototype.buildInverseSidePropertyPath = function () {\n        if (this.givenInverseSidePropertyFactory) {\n            var ownerEntityPropertiesMap = this.inverseEntityMetadata.propertiesMap;\n            if (typeof this.givenInverseSidePropertyFactory === \"function\")\n                return this.givenInverseSidePropertyFactory(ownerEntityPropertiesMap);\n            if (typeof this.givenInverseSidePropertyFactory === \"string\")\n                return this.givenInverseSidePropertyFactory;\n        }\n        else if (this.isTreeParent && this.entityMetadata.treeChildrenRelation) {\n            return this.entityMetadata.treeChildrenRelation.propertyName;\n        }\n        else if (this.isTreeChildren && this.entityMetadata.treeParentRelation) {\n            return this.entityMetadata.treeParentRelation.propertyName;\n        }\n        return \"\";\n    };\n    /**\n     * Builds relation's property path based on its embedded tree.\n     */\n    RelationMetadata.prototype.buildPropertyPath = function () {\n        if (!this.embeddedMetadata || !this.embeddedMetadata.parentPropertyNames.length)\n            return this.propertyName;\n        return this.embeddedMetadata.parentPropertyNames.join(\".\") + \".\" + this.propertyName;\n    };\n    return RelationMetadata;\n}());\nexports.RelationMetadata = RelationMetadata;\n\n//# sourceMappingURL=RelationMetadata.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/metadata/RelationMetadata.js?");

/***/ }),

/***/ "./node_modules/typeorm/metadata/UniqueMetadata.js":
/*!*********************************************************!*\
  !*** ./node_modules/typeorm/metadata/UniqueMetadata.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Unique metadata contains all information about table's unique constraints.\n */\nvar UniqueMetadata = /** @class */ (function () {\n    // ---------------------------------------------------------------------\n    // Constructor\n    // ---------------------------------------------------------------------\n    function UniqueMetadata(options) {\n        /**\n         * Unique columns.\n         */\n        this.columns = [];\n        this.entityMetadata = options.entityMetadata;\n        if (options.columns)\n            this.columns = options.columns;\n        if (options.args) {\n            this.target = options.args.target;\n            this.givenName = options.args.name;\n            this.givenColumnNames = options.args.columns;\n        }\n    }\n    // ---------------------------------------------------------------------\n    // Public Build Methods\n    // ---------------------------------------------------------------------\n    /**\n     * Builds some depend unique constraint properties.\n     * Must be called after all entity metadata's properties map, columns and relations are built.\n     */\n    UniqueMetadata.prototype.build = function (namingStrategy) {\n        var _this = this;\n        var map = {};\n        // if columns already an array of string then simply return it\n        if (this.givenColumnNames) {\n            var columnPropertyNames = [];\n            if (this.givenColumnNames instanceof Array) {\n                columnPropertyNames = this.givenColumnNames;\n                columnPropertyNames.forEach(function (name) { return map[name] = 1; });\n            }\n            else {\n                // if columns is a function that returns array of field names then execute it and get columns names from it\n                var columnsFnResult_1 = this.givenColumnNames(this.entityMetadata.propertiesMap);\n                if (columnsFnResult_1 instanceof Array) {\n                    columnPropertyNames = columnsFnResult_1.map(function (i) { return String(i); });\n                    columnPropertyNames.forEach(function (name) { return map[name] = 1; });\n                }\n                else {\n                    columnPropertyNames = Object.keys(columnsFnResult_1).map(function (i) { return String(i); });\n                    Object.keys(columnsFnResult_1).forEach(function (columnName) { return map[columnName] = columnsFnResult_1[columnName]; });\n                }\n            }\n            this.columns = columnPropertyNames.map(function (propertyName) {\n                var columnWithSameName = _this.entityMetadata.columns.find(function (column) { return column.propertyPath === propertyName; });\n                if (columnWithSameName) {\n                    return [columnWithSameName];\n                }\n                var relationWithSameName = _this.entityMetadata.relations.find(function (relation) { return relation.isWithJoinColumn && relation.propertyName === propertyName; });\n                if (relationWithSameName) {\n                    return relationWithSameName.joinColumns;\n                }\n                throw new Error(\"Unique constraint \" + (_this.givenName ? \"\\\"\" + _this.givenName + \"\\\" \" : \"\") + \"contains column that is missing in the entity: \" + propertyName);\n            })\n                .reduce(function (a, b) { return a.concat(b); });\n        }\n        this.name = this.givenName ? this.givenName : namingStrategy.uniqueConstraintName(this.entityMetadata.tablePath, this.columns.map(function (column) { return column.databaseName; }));\n        return this;\n    };\n    return UniqueMetadata;\n}());\nexports.UniqueMetadata = UniqueMetadata;\n\n//# sourceMappingURL=UniqueMetadata.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/metadata/UniqueMetadata.js?");

/***/ }),

/***/ "./node_modules/typeorm/metadata/types/EventListenerTypes.js":
/*!*******************************************************************!*\
  !*** ./node_modules/typeorm/metadata/types/EventListenerTypes.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Provides a constants for each entity listener type.\n */\nvar EventListenerTypes = /** @class */ (function () {\n    function EventListenerTypes() {\n    }\n    EventListenerTypes.AFTER_LOAD = \"after-load\";\n    EventListenerTypes.BEFORE_INSERT = \"before-insert\";\n    EventListenerTypes.AFTER_INSERT = \"after-insert\";\n    EventListenerTypes.BEFORE_UPDATE = \"before-update\";\n    EventListenerTypes.AFTER_UPDATE = \"after-update\";\n    EventListenerTypes.BEFORE_REMOVE = \"before-remove\";\n    EventListenerTypes.AFTER_REMOVE = \"after-remove\";\n    return EventListenerTypes;\n}());\nexports.EventListenerTypes = EventListenerTypes;\n\n//# sourceMappingURL=EventListenerTypes.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/metadata/types/EventListenerTypes.js?");

/***/ }),

/***/ "./node_modules/typeorm/migration/Migration.js":
/*!*****************************************************!*\
  !*** ./node_modules/typeorm/migration/Migration.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Represents entity of the migration in the database.\n */\nvar Migration = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function Migration(id, timestamp, name, instance) {\n        this.id = id;\n        this.timestamp = timestamp;\n        this.name = name;\n        this.instance = instance;\n    }\n    return Migration;\n}());\nexports.Migration = Migration;\n\n//# sourceMappingURL=Migration.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/migration/Migration.js?");

/***/ }),

/***/ "./node_modules/typeorm/migration/MigrationExecutor.js":
/*!*************************************************************!*\
  !*** ./node_modules/typeorm/migration/MigrationExecutor.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Table_1 = __webpack_require__(/*! ../schema-builder/table/Table */ \"./node_modules/typeorm/schema-builder/table/Table.js\");\nvar Migration_1 = __webpack_require__(/*! ./Migration */ \"./node_modules/typeorm/migration/Migration.js\");\nvar PromiseUtils_1 = __webpack_require__(/*! ../util/PromiseUtils */ \"./node_modules/typeorm/util/PromiseUtils.js\");\nvar SqlServerDriver_1 = __webpack_require__(/*! ../driver/sqlserver/SqlServerDriver */ \"./node_modules/typeorm/driver/sqlserver/SqlServerDriver.js\");\nvar MssqlParameter_1 = __webpack_require__(/*! ../driver/sqlserver/MssqlParameter */ \"./node_modules/typeorm/driver/sqlserver/MssqlParameter.js\");\n/**\n * Executes migrations: runs pending and reverts previously executed migrations.\n */\nvar MigrationExecutor = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function MigrationExecutor(connection, queryRunner) {\n        this.connection = connection;\n        this.queryRunner = queryRunner;\n        // -------------------------------------------------------------------------\n        // Public Properties\n        // -------------------------------------------------------------------------\n        /**\n         * Indicates if migrations must be executed in a transaction.\n         */\n        this.transaction = true;\n        var options = this.connection.driver.options;\n        this.migrationsTableName = connection.options.migrationsTableName || \"migrations\";\n        this.migrationsTable = this.connection.driver.buildTableName(this.migrationsTableName, options.schema, options.database);\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Executes all pending migrations. Pending migrations are migrations that are not yet executed,\n     * thus not saved in the database.\n     */\n    MigrationExecutor.prototype.executePendingMigrations = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var queryRunner, executedMigrations, lastTimeExecutedMigration, allMigrations, pendingMigrations, transactionStartedByUs, err_1, rollbackError_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        queryRunner = this.queryRunner || this.connection.createQueryRunner(\"master\");\n                        // create migrations table if its not created yet\n                        return [4 /*yield*/, this.createMigrationsTableIfNotExist(queryRunner)];\n                    case 1:\n                        // create migrations table if its not created yet\n                        _a.sent();\n                        return [4 /*yield*/, this.loadExecutedMigrations(queryRunner)];\n                    case 2:\n                        executedMigrations = _a.sent();\n                        lastTimeExecutedMigration = this.getLatestTimestampMigration(executedMigrations);\n                        allMigrations = this.getMigrations();\n                        pendingMigrations = allMigrations.filter(function (migration) {\n                            // check if we already have executed migration\n                            var executedMigration = executedMigrations.find(function (executedMigration) { return executedMigration.name === migration.name; });\n                            if (executedMigration)\n                                return false;\n                            // migration is new and not executed. now check if its timestamp is correct\n                            // if (lastTimeExecutedMigration && migration.timestamp < lastTimeExecutedMigration.timestamp)\n                            //     throw new Error(`New migration found: ${migration.name}, however this migration's timestamp is not valid. Migration's timestamp should not be older then migrations already executed in the database.`);\n                            // every check is passed means that migration was not run yet and we need to run it\n                            return true;\n                        });\n                        if (!!pendingMigrations.length) return [3 /*break*/, 5];\n                        this.connection.logger.logSchemaBuild(\"No migrations are pending\");\n                        if (!!this.queryRunner) return [3 /*break*/, 4];\n                        return [4 /*yield*/, queryRunner.release()];\n                    case 3:\n                        _a.sent();\n                        _a.label = 4;\n                    case 4: return [2 /*return*/];\n                    case 5:\n                        // log information about migration execution\n                        this.connection.logger.logSchemaBuild(executedMigrations.length + \" migrations are already loaded in the database.\");\n                        this.connection.logger.logSchemaBuild(allMigrations.length + \" migrations were found in the source code.\");\n                        if (lastTimeExecutedMigration)\n                            this.connection.logger.logSchemaBuild(lastTimeExecutedMigration.name + \" is the last executed migration. It was executed on \" + new Date(lastTimeExecutedMigration.timestamp).toString() + \".\");\n                        this.connection.logger.logSchemaBuild(pendingMigrations.length + \" migrations are new migrations that needs to be executed.\");\n                        transactionStartedByUs = false;\n                        if (!(this.transaction && !queryRunner.isTransactionActive)) return [3 /*break*/, 7];\n                        return [4 /*yield*/, queryRunner.startTransaction()];\n                    case 6:\n                        _a.sent();\n                        transactionStartedByUs = true;\n                        _a.label = 7;\n                    case 7:\n                        _a.trys.push([7, 11, 16, 19]);\n                        return [4 /*yield*/, PromiseUtils_1.PromiseUtils.runInSequence(pendingMigrations, function (migration) {\n                                return migration.instance.up(queryRunner)\n                                    .then(function () {\n                                    return _this.insertExecutedMigration(queryRunner, migration);\n                                })\n                                    .then(function () {\n                                    _this.connection.logger.logSchemaBuild(\"Migration \" + migration.name + \" has been executed successfully.\");\n                                });\n                            })];\n                    case 8:\n                        _a.sent();\n                        if (!transactionStartedByUs) return [3 /*break*/, 10];\n                        return [4 /*yield*/, queryRunner.commitTransaction()];\n                    case 9:\n                        _a.sent();\n                        _a.label = 10;\n                    case 10: return [3 /*break*/, 19];\n                    case 11:\n                        err_1 = _a.sent();\n                        if (!transactionStartedByUs) return [3 /*break*/, 15];\n                        _a.label = 12;\n                    case 12:\n                        _a.trys.push([12, 14, , 15]);\n                        return [4 /*yield*/, queryRunner.rollbackTransaction()];\n                    case 13:\n                        _a.sent();\n                        return [3 /*break*/, 15];\n                    case 14:\n                        rollbackError_1 = _a.sent();\n                        return [3 /*break*/, 15];\n                    case 15: throw err_1;\n                    case 16:\n                        if (!!this.queryRunner) return [3 /*break*/, 18];\n                        return [4 /*yield*/, queryRunner.release()];\n                    case 17:\n                        _a.sent();\n                        _a.label = 18;\n                    case 18: return [7 /*endfinally*/];\n                    case 19: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Reverts last migration that were run.\n     */\n    MigrationExecutor.prototype.undoLastMigration = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var queryRunner, executedMigrations, lastTimeExecutedMigration, allMigrations, migrationToRevert, transactionStartedByUs, err_2, rollbackError_2;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        queryRunner = this.queryRunner || this.connection.createQueryRunner(\"master\");\n                        // create migrations table if its not created yet\n                        return [4 /*yield*/, this.createMigrationsTableIfNotExist(queryRunner)];\n                    case 1:\n                        // create migrations table if its not created yet\n                        _a.sent();\n                        return [4 /*yield*/, this.loadExecutedMigrations(queryRunner)];\n                    case 2:\n                        executedMigrations = _a.sent();\n                        lastTimeExecutedMigration = this.getLatestExecutedMigration(executedMigrations);\n                        // if no migrations found in the database then nothing to revert\n                        if (!lastTimeExecutedMigration) {\n                            this.connection.logger.logSchemaBuild(\"No migrations was found in the database. Nothing to revert!\");\n                            return [2 /*return*/];\n                        }\n                        allMigrations = this.getMigrations();\n                        migrationToRevert = allMigrations.find(function (migration) { return migration.name === lastTimeExecutedMigration.name; });\n                        // if no migrations found in the database then nothing to revert\n                        if (!migrationToRevert)\n                            throw new Error(\"No migration \" + lastTimeExecutedMigration.name + \" was found in the source code. Make sure you have this migration in your codebase and its included in the connection options.\");\n                        // log information about migration execution\n                        this.connection.logger.logSchemaBuild(executedMigrations.length + \" migrations are already loaded in the database.\");\n                        this.connection.logger.logSchemaBuild(lastTimeExecutedMigration.name + \" is the last executed migration. It was executed on \" + new Date(lastTimeExecutedMigration.timestamp).toString() + \".\");\n                        this.connection.logger.logSchemaBuild(\"Now reverting it...\");\n                        transactionStartedByUs = false;\n                        if (!(this.transaction && !queryRunner.isTransactionActive)) return [3 /*break*/, 4];\n                        return [4 /*yield*/, queryRunner.startTransaction()];\n                    case 3:\n                        _a.sent();\n                        transactionStartedByUs = true;\n                        _a.label = 4;\n                    case 4:\n                        _a.trys.push([4, 9, 14, 17]);\n                        return [4 /*yield*/, migrationToRevert.instance.down(queryRunner)];\n                    case 5:\n                        _a.sent();\n                        return [4 /*yield*/, this.deleteExecutedMigration(queryRunner, migrationToRevert)];\n                    case 6:\n                        _a.sent();\n                        this.connection.logger.logSchemaBuild(\"Migration \" + migrationToRevert.name + \" has been reverted successfully.\");\n                        if (!transactionStartedByUs) return [3 /*break*/, 8];\n                        return [4 /*yield*/, queryRunner.commitTransaction()];\n                    case 7:\n                        _a.sent();\n                        _a.label = 8;\n                    case 8: return [3 /*break*/, 17];\n                    case 9:\n                        err_2 = _a.sent();\n                        if (!transactionStartedByUs) return [3 /*break*/, 13];\n                        _a.label = 10;\n                    case 10:\n                        _a.trys.push([10, 12, , 13]);\n                        return [4 /*yield*/, queryRunner.rollbackTransaction()];\n                    case 11:\n                        _a.sent();\n                        return [3 /*break*/, 13];\n                    case 12:\n                        rollbackError_2 = _a.sent();\n                        return [3 /*break*/, 13];\n                    case 13: throw err_2;\n                    case 14:\n                        if (!!this.queryRunner) return [3 /*break*/, 16];\n                        return [4 /*yield*/, queryRunner.release()];\n                    case 15:\n                        _a.sent();\n                        _a.label = 16;\n                    case 16: return [7 /*endfinally*/];\n                    case 17: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates table \"migrations\" that will store information about executed migrations.\n     */\n    MigrationExecutor.prototype.createMigrationsTableIfNotExist = function (queryRunner) {\n        return __awaiter(this, void 0, void 0, function () {\n            var tableExist;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, queryRunner.hasTable(this.migrationsTable)];\n                    case 1:\n                        tableExist = _a.sent();\n                        if (!!tableExist) return [3 /*break*/, 3];\n                        return [4 /*yield*/, queryRunner.createTable(new Table_1.Table({\n                                name: this.migrationsTable,\n                                columns: [\n                                    {\n                                        name: \"id\",\n                                        type: this.connection.driver.normalizeType({ type: this.connection.driver.mappedDataTypes.migrationId }),\n                                        isGenerated: true,\n                                        generationStrategy: \"increment\",\n                                        isPrimary: true,\n                                        isNullable: false\n                                    },\n                                    {\n                                        name: \"timestamp\",\n                                        type: this.connection.driver.normalizeType({ type: this.connection.driver.mappedDataTypes.migrationTimestamp }),\n                                        isPrimary: false,\n                                        isNullable: false\n                                    },\n                                    {\n                                        name: \"name\",\n                                        type: this.connection.driver.normalizeType({ type: this.connection.driver.mappedDataTypes.migrationName }),\n                                        isNullable: false\n                                    },\n                                ]\n                            }))];\n                    case 2:\n                        _a.sent();\n                        _a.label = 3;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Loads all migrations that were executed and saved into the database.\n     */\n    MigrationExecutor.prototype.loadExecutedMigrations = function (queryRunner) {\n        return __awaiter(this, void 0, void 0, function () {\n            var migrationsRaw;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.connection.manager\n                            .createQueryBuilder(queryRunner)\n                            .select()\n                            .from(this.migrationsTable, this.migrationsTableName)\n                            .getRawMany()];\n                    case 1:\n                        migrationsRaw = _a.sent();\n                        return [2 /*return*/, migrationsRaw.map(function (migrationRaw) {\n                                return new Migration_1.Migration(parseInt(migrationRaw[\"id\"]), parseInt(migrationRaw[\"timestamp\"]), migrationRaw[\"name\"]);\n                            })];\n                }\n            });\n        });\n    };\n    /**\n     * Gets all migrations that setup for this connection.\n     */\n    MigrationExecutor.prototype.getMigrations = function () {\n        var migrations = this.connection.migrations.map(function (migration) {\n            var migrationClassName = migration.constructor.name;\n            var migrationTimestamp = parseInt(migrationClassName.substr(-13));\n            if (!migrationTimestamp)\n                throw new Error(migrationClassName + \" migration name is wrong. Migration class name should have a UNIX timestamp appended. \");\n            return new Migration_1.Migration(undefined, migrationTimestamp, migrationClassName, migration);\n        });\n        // sort them by timestamp\n        return migrations.sort(function (a, b) { return a.timestamp - b.timestamp; });\n    };\n    /**\n     * Finds the latest migration (sorts by timestamp) in the given array of migrations.\n     */\n    MigrationExecutor.prototype.getLatestTimestampMigration = function (migrations) {\n        var sortedMigrations = migrations.map(function (migration) { return migration; }).sort(function (a, b) { return (a.timestamp - b.timestamp) * -1; });\n        return sortedMigrations.length > 0 ? sortedMigrations[0] : undefined;\n    };\n    /**\n     * Finds the latest migration (sorts by id) in the given array of migrations.\n     */\n    MigrationExecutor.prototype.getLatestExecutedMigration = function (migrations) {\n        var sortedMigrations = migrations.map(function (migration) { return migration; }).sort(function (a, b) { return ((a.id || 0) - (b.id || 0)) * -1; });\n        return sortedMigrations.length > 0 ? sortedMigrations[0] : undefined;\n    };\n    /**\n     * Inserts new executed migration's data into migrations table.\n     */\n    MigrationExecutor.prototype.insertExecutedMigration = function (queryRunner, migration) {\n        return __awaiter(this, void 0, void 0, function () {\n            var values, qb;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        values = {};\n                        if (this.connection.driver instanceof SqlServerDriver_1.SqlServerDriver) {\n                            values[\"timestamp\"] = new MssqlParameter_1.MssqlParameter(migration.timestamp, this.connection.driver.normalizeType({ type: this.connection.driver.mappedDataTypes.migrationTimestamp }));\n                            values[\"name\"] = new MssqlParameter_1.MssqlParameter(migration.name, this.connection.driver.normalizeType({ type: this.connection.driver.mappedDataTypes.migrationName }));\n                        }\n                        else {\n                            values[\"timestamp\"] = migration.timestamp;\n                            values[\"name\"] = migration.name;\n                        }\n                        qb = queryRunner.manager.createQueryBuilder();\n                        return [4 /*yield*/, qb.insert()\n                                .into(this.migrationsTable)\n                                .values(values)\n                                .execute()];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Delete previously executed migration's data from the migrations table.\n     */\n    MigrationExecutor.prototype.deleteExecutedMigration = function (queryRunner, migration) {\n        return __awaiter(this, void 0, void 0, function () {\n            var conditions, qb;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        conditions = {};\n                        if (this.connection.driver instanceof SqlServerDriver_1.SqlServerDriver) {\n                            conditions[\"timestamp\"] = new MssqlParameter_1.MssqlParameter(migration.timestamp, this.connection.driver.normalizeType({ type: this.connection.driver.mappedDataTypes.migrationTimestamp }));\n                            conditions[\"name\"] = new MssqlParameter_1.MssqlParameter(migration.name, this.connection.driver.normalizeType({ type: this.connection.driver.mappedDataTypes.migrationName }));\n                        }\n                        else {\n                            conditions[\"timestamp\"] = migration.timestamp;\n                            conditions[\"name\"] = migration.name;\n                        }\n                        qb = queryRunner.manager.createQueryBuilder();\n                        return [4 /*yield*/, qb.delete()\n                                .from(this.migrationsTable)\n                                .where(qb.escape(\"timestamp\") + \" = :timestamp\")\n                                .andWhere(qb.escape(\"name\") + \" = :name\")\n                                .setParameters(conditions)\n                                .execute()];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return MigrationExecutor;\n}());\nexports.MigrationExecutor = MigrationExecutor;\n\n//# sourceMappingURL=MigrationExecutor.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/migration/MigrationExecutor.js?");

/***/ }),

/***/ "./node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js":
/*!***********************************************************************!*\
  !*** ./node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar RandomGenerator_1 = __webpack_require__(/*! ../util/RandomGenerator */ \"./node_modules/typeorm/util/RandomGenerator.js\");\nvar StringUtils_1 = __webpack_require__(/*! ../util/StringUtils */ \"./node_modules/typeorm/util/StringUtils.js\");\nvar Table_1 = __webpack_require__(/*! ../schema-builder/table/Table */ \"./node_modules/typeorm/schema-builder/table/Table.js\");\n/**\n * Naming strategy that is used by default.\n */\nvar DefaultNamingStrategy = /** @class */ (function () {\n    function DefaultNamingStrategy() {\n    }\n    /**\n     * Normalizes table name.\n     *\n     * @param targetName Name of the target entity that can be used to generate a table name.\n     * @param userSpecifiedName For example if user specified a table name in a decorator, e.g. @Entity(\"name\")\n     */\n    DefaultNamingStrategy.prototype.tableName = function (targetName, userSpecifiedName) {\n        return userSpecifiedName ? userSpecifiedName : StringUtils_1.snakeCase(targetName);\n    };\n    /**\n     * Creates a table name for a junction table of a closure table.\n     *\n     * @param originalClosureTableName Name of the closure table which owns this junction table.\n     */\n    DefaultNamingStrategy.prototype.closureJunctionTableName = function (originalClosureTableName) {\n        return originalClosureTableName + \"_closure\";\n    };\n    DefaultNamingStrategy.prototype.columnName = function (propertyName, customName, embeddedPrefixes) {\n        if (embeddedPrefixes.length)\n            return StringUtils_1.camelCase(embeddedPrefixes.join(\"_\")) + (customName ? StringUtils_1.titleCase(customName) : StringUtils_1.titleCase(propertyName));\n        return customName ? customName : propertyName;\n    };\n    DefaultNamingStrategy.prototype.relationName = function (propertyName) {\n        return propertyName;\n    };\n    DefaultNamingStrategy.prototype.primaryKeyName = function (tableOrName, columnNames) {\n        // sort incoming column names to avoid issue when [\"id\", \"name\"] and [\"name\", \"id\"] arrays\n        var clonedColumnNames = __spread(columnNames);\n        clonedColumnNames.sort();\n        var tableName = tableOrName instanceof Table_1.Table ? tableOrName.name : tableOrName;\n        var replacedTableName = tableName.replace(\".\", \"_\");\n        var key = replacedTableName + \"_\" + clonedColumnNames.join(\"_\");\n        return \"PK_\" + RandomGenerator_1.RandomGenerator.sha1(key).substr(0, 27);\n    };\n    DefaultNamingStrategy.prototype.uniqueConstraintName = function (tableOrName, columnNames) {\n        // sort incoming column names to avoid issue when [\"id\", \"name\"] and [\"name\", \"id\"] arrays\n        var clonedColumnNames = __spread(columnNames);\n        clonedColumnNames.sort();\n        var tableName = tableOrName instanceof Table_1.Table ? tableOrName.name : tableOrName;\n        var replacedTableName = tableName.replace(\".\", \"_\");\n        var key = replacedTableName + \"_\" + clonedColumnNames.join(\"_\");\n        return \"UQ_\" + RandomGenerator_1.RandomGenerator.sha1(key).substr(0, 27);\n    };\n    DefaultNamingStrategy.prototype.relationConstraintName = function (tableOrName, columnNames, where) {\n        // sort incoming column names to avoid issue when [\"id\", \"name\"] and [\"name\", \"id\"] arrays\n        var clonedColumnNames = __spread(columnNames);\n        clonedColumnNames.sort();\n        var tableName = tableOrName instanceof Table_1.Table ? tableOrName.name : tableOrName;\n        var replacedTableName = tableName.replace(\".\", \"_\");\n        var key = replacedTableName + \"_\" + clonedColumnNames.join(\"_\");\n        if (where)\n            key += \"_\" + where;\n        return \"REL_\" + RandomGenerator_1.RandomGenerator.sha1(key).substr(0, 26);\n    };\n    DefaultNamingStrategy.prototype.defaultConstraintName = function (tableOrName, columnName) {\n        var tableName = tableOrName instanceof Table_1.Table ? tableOrName.name : tableOrName;\n        var replacedTableName = tableName.replace(\".\", \"_\");\n        var key = replacedTableName + \"_\" + columnName;\n        return \"DF_\" + RandomGenerator_1.RandomGenerator.sha1(key).substr(0, 27);\n    };\n    DefaultNamingStrategy.prototype.foreignKeyName = function (tableOrName, columnNames) {\n        // sort incoming column names to avoid issue when [\"id\", \"name\"] and [\"name\", \"id\"] arrays\n        var clonedColumnNames = __spread(columnNames);\n        clonedColumnNames.sort();\n        var tableName = tableOrName instanceof Table_1.Table ? tableOrName.name : tableOrName;\n        var replacedTableName = tableName.replace(\".\", \"_\");\n        var key = replacedTableName + \"_\" + clonedColumnNames.join(\"_\");\n        return \"FK_\" + RandomGenerator_1.RandomGenerator.sha1(key).substr(0, 27);\n    };\n    DefaultNamingStrategy.prototype.indexName = function (tableOrName, columnNames, where) {\n        // sort incoming column names to avoid issue when [\"id\", \"name\"] and [\"name\", \"id\"] arrays\n        var clonedColumnNames = __spread(columnNames);\n        clonedColumnNames.sort();\n        var tableName = tableOrName instanceof Table_1.Table ? tableOrName.name : tableOrName;\n        var replacedTableName = tableName.replace(\".\", \"_\");\n        var key = replacedTableName + \"_\" + clonedColumnNames.join(\"_\");\n        if (where)\n            key += \"_\" + where;\n        return \"IDX_\" + RandomGenerator_1.RandomGenerator.sha1(key).substr(0, 26);\n    };\n    DefaultNamingStrategy.prototype.checkConstraintName = function (tableOrName, expression) {\n        var tableName = tableOrName instanceof Table_1.Table ? tableOrName.name : tableOrName;\n        var replacedTableName = tableName.replace(\".\", \"_\");\n        var key = replacedTableName + \"_\" + expression;\n        return \"CHK_\" + RandomGenerator_1.RandomGenerator.sha1(key).substr(0, 26);\n    };\n    DefaultNamingStrategy.prototype.joinColumnName = function (relationName, referencedColumnName) {\n        return StringUtils_1.camelCase(relationName + \"_\" + referencedColumnName);\n    };\n    DefaultNamingStrategy.prototype.joinTableName = function (firstTableName, secondTableName, firstPropertyName, secondPropertyName) {\n        return StringUtils_1.snakeCase(firstTableName + \"_\" + firstPropertyName.replace(/\\./gi, \"_\") + \"_\" + secondTableName);\n    };\n    DefaultNamingStrategy.prototype.joinTableColumnDuplicationPrefix = function (columnName, index) {\n        return columnName + \"_\" + index;\n    };\n    DefaultNamingStrategy.prototype.joinTableColumnName = function (tableName, propertyName, columnName) {\n        return StringUtils_1.camelCase(tableName + \"_\" + (columnName ? columnName : propertyName));\n    };\n    DefaultNamingStrategy.prototype.joinTableInverseColumnName = function (tableName, propertyName, columnName) {\n        return this.joinTableColumnName(tableName, propertyName, columnName);\n    };\n    /**\n     * Adds globally set prefix to the table name.\n     * This method is executed no matter if prefix was set or not.\n     * Table name is either user's given table name, either name generated from entity target.\n     * Note that table name comes here already normalized by #tableName method.\n     */\n    DefaultNamingStrategy.prototype.prefixTableName = function (prefix, tableName) {\n        return prefix + tableName;\n    };\n    return DefaultNamingStrategy;\n}());\nexports.DefaultNamingStrategy = DefaultNamingStrategy;\n\n//# sourceMappingURL=DefaultNamingStrategy.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/naming-strategy/DefaultNamingStrategy.js?");

/***/ }),

/***/ "./node_modules/typeorm/persistence/EntityPersistExecutor.js":
/*!*******************************************************************!*\
  !*** ./node_modules/typeorm/persistence/EntityPersistExecutor.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MustBeEntityError_1 = __webpack_require__(/*! ../error/MustBeEntityError */ \"./node_modules/typeorm/error/MustBeEntityError.js\");\nvar SubjectExecutor_1 = __webpack_require__(/*! ./SubjectExecutor */ \"./node_modules/typeorm/persistence/SubjectExecutor.js\");\nvar CannotDetermineEntityError_1 = __webpack_require__(/*! ../error/CannotDetermineEntityError */ \"./node_modules/typeorm/error/CannotDetermineEntityError.js\");\nvar Subject_1 = __webpack_require__(/*! ./Subject */ \"./node_modules/typeorm/persistence/Subject.js\");\nvar OneToManySubjectBuilder_1 = __webpack_require__(/*! ./subject-builder/OneToManySubjectBuilder */ \"./node_modules/typeorm/persistence/subject-builder/OneToManySubjectBuilder.js\");\nvar OneToOneInverseSideSubjectBuilder_1 = __webpack_require__(/*! ./subject-builder/OneToOneInverseSideSubjectBuilder */ \"./node_modules/typeorm/persistence/subject-builder/OneToOneInverseSideSubjectBuilder.js\");\nvar ManyToManySubjectBuilder_1 = __webpack_require__(/*! ./subject-builder/ManyToManySubjectBuilder */ \"./node_modules/typeorm/persistence/subject-builder/ManyToManySubjectBuilder.js\");\nvar SubjectDatabaseEntityLoader_1 = __webpack_require__(/*! ./SubjectDatabaseEntityLoader */ \"./node_modules/typeorm/persistence/SubjectDatabaseEntityLoader.js\");\nvar CascadesSubjectBuilder_1 = __webpack_require__(/*! ./subject-builder/CascadesSubjectBuilder */ \"./node_modules/typeorm/persistence/subject-builder/CascadesSubjectBuilder.js\");\nvar OrmUtils_1 = __webpack_require__(/*! ../util/OrmUtils */ \"./node_modules/typeorm/util/OrmUtils.js\");\nvar PromiseUtils_1 = __webpack_require__(/*! ../util/PromiseUtils */ \"./node_modules/typeorm/util/PromiseUtils.js\");\n/**\n * Persists a single entity or multiple entities - saves or removes them.\n */\nvar EntityPersistExecutor = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function EntityPersistExecutor(connection, queryRunner, mode, target, entity, options) {\n        this.connection = connection;\n        this.queryRunner = queryRunner;\n        this.mode = mode;\n        this.target = target;\n        this.entity = entity;\n        this.options = options;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Executes persistence operation ob given entity or entities.\n     */\n    EntityPersistExecutor.prototype.execute = function () {\n        var _this = this;\n        // check if entity we are going to save is valid and is an object\n        if (!this.entity || !(this.entity instanceof Object))\n            return Promise.reject(new MustBeEntityError_1.MustBeEntityError(this.mode, this.entity));\n        // we MUST call \"fake\" resolve here to make sure all properties of lazily loaded relations are resolved\n        return Promise.resolve().then(function () { return __awaiter(_this, void 0, void 0, function () {\n            var _this = this;\n            var queryRunner, entities, entitiesInChunks, executors, executorsWithExecutableOperations, isTransactionStartedByUs, error_1, rollbackError_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        queryRunner = this.queryRunner || this.connection.createQueryRunner(\"master\");\n                        // save data in the query runner - this is useful functionality to share data from outside of the world\n                        // with third classes - like subscribers and listener methods\n                        if (this.options && this.options.data)\n                            queryRunner.data = this.options.data;\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, , 15, 18]);\n                        entities = this.entity instanceof Array ? this.entity : [this.entity];\n                        entitiesInChunks = this.options && this.options.chunk && this.options.chunk > 0 ? OrmUtils_1.OrmUtils.chunk(entities, this.options.chunk) : [entities];\n                        return [4 /*yield*/, Promise.all(entitiesInChunks.map(function (entities) { return __awaiter(_this, void 0, void 0, function () {\n                                var _this = this;\n                                var subjects, cascadesSubjectBuilder;\n                                return __generator(this, function (_a) {\n                                    switch (_a.label) {\n                                        case 0:\n                                            subjects = [];\n                                            // create subjects for all entities we received for the persistence\n                                            entities.forEach(function (entity) {\n                                                var entityTarget = _this.target ? _this.target : entity.constructor;\n                                                if (entityTarget === Object)\n                                                    throw new CannotDetermineEntityError_1.CannotDetermineEntityError(_this.mode);\n                                                subjects.push(new Subject_1.Subject({\n                                                    metadata: _this.connection.getMetadata(entityTarget),\n                                                    entity: entity,\n                                                    canBeInserted: _this.mode === \"save\",\n                                                    canBeUpdated: _this.mode === \"save\",\n                                                    mustBeRemoved: _this.mode === \"remove\"\n                                                }));\n                                            });\n                                            cascadesSubjectBuilder = new CascadesSubjectBuilder_1.CascadesSubjectBuilder(subjects);\n                                            subjects.forEach(function (subject) {\n                                                // next step we build list of subjects we will operate with\n                                                // these subjects are subjects that we need to insert or update alongside with main persisted entity\n                                                cascadesSubjectBuilder.build(subject);\n                                            });\n                                            // console.timeEnd(\"building cascades...\");\n                                            // load database entities for all subjects we have\n                                            // next step is to load database entities for all operate subjects\n                                            // console.time(\"loading...\");\n                                            return [4 /*yield*/, new SubjectDatabaseEntityLoader_1.SubjectDatabaseEntityLoader(queryRunner, subjects).load(this.mode)];\n                                        case 1:\n                                            // console.timeEnd(\"building cascades...\");\n                                            // load database entities for all subjects we have\n                                            // next step is to load database entities for all operate subjects\n                                            // console.time(\"loading...\");\n                                            _a.sent();\n                                            // console.timeEnd(\"loading...\");\n                                            // console.time(\"other subjects...\");\n                                            // build all related subjects and change maps\n                                            if (this.mode === \"save\") {\n                                                new OneToManySubjectBuilder_1.OneToManySubjectBuilder(subjects).build();\n                                                new OneToOneInverseSideSubjectBuilder_1.OneToOneInverseSideSubjectBuilder(subjects).build();\n                                                new ManyToManySubjectBuilder_1.ManyToManySubjectBuilder(subjects).build();\n                                            }\n                                            else {\n                                                subjects.forEach(function (subject) {\n                                                    if (subject.mustBeRemoved) {\n                                                        new ManyToManySubjectBuilder_1.ManyToManySubjectBuilder(subjects).buildForAllRemoval(subject);\n                                                    }\n                                                });\n                                            }\n                                            // console.timeEnd(\"other subjects...\");\n                                            // console.timeEnd(\"building subjects...\");\n                                            // console.log(\"subjects\", subjects);\n                                            // create a subject executor\n                                            return [2 /*return*/, new SubjectExecutor_1.SubjectExecutor(queryRunner, subjects, this.options)];\n                                    }\n                                });\n                            }); }))];\n                    case 2:\n                        executors = _a.sent();\n                        executorsWithExecutableOperations = executors.filter(function (executor) { return executor.hasExecutableOperations; });\n                        if (executorsWithExecutableOperations.length === 0)\n                            return [2 /*return*/];\n                        isTransactionStartedByUs = false;\n                        _a.label = 3;\n                    case 3:\n                        _a.trys.push([3, 9, , 14]);\n                        if (!!queryRunner.isTransactionActive) return [3 /*break*/, 5];\n                        if (!(!this.options || this.options.transaction !== false)) return [3 /*break*/, 5];\n                        isTransactionStartedByUs = true;\n                        return [4 /*yield*/, queryRunner.startTransaction()];\n                    case 4:\n                        _a.sent();\n                        _a.label = 5;\n                    case 5: \n                    // execute all persistence operations for all entities we have\n                    // console.time(\"executing subject executors...\");\n                    return [4 /*yield*/, PromiseUtils_1.PromiseUtils.runInSequence(executorsWithExecutableOperations, function (executor) { return executor.execute(); })];\n                    case 6:\n                        // execute all persistence operations for all entities we have\n                        // console.time(\"executing subject executors...\");\n                        _a.sent();\n                        if (!(isTransactionStartedByUs === true)) return [3 /*break*/, 8];\n                        return [4 /*yield*/, queryRunner.commitTransaction()];\n                    case 7:\n                        _a.sent();\n                        _a.label = 8;\n                    case 8: return [3 /*break*/, 14];\n                    case 9:\n                        error_1 = _a.sent();\n                        if (!isTransactionStartedByUs) return [3 /*break*/, 13];\n                        _a.label = 10;\n                    case 10:\n                        _a.trys.push([10, 12, , 13]);\n                        return [4 /*yield*/, queryRunner.rollbackTransaction()];\n                    case 11:\n                        _a.sent();\n                        return [3 /*break*/, 13];\n                    case 12:\n                        rollbackError_1 = _a.sent();\n                        return [3 /*break*/, 13];\n                    case 13: throw error_1;\n                    case 14: return [3 /*break*/, 18];\n                    case 15:\n                        if (!!this.queryRunner) return [3 /*break*/, 17];\n                        return [4 /*yield*/, queryRunner.release()];\n                    case 16:\n                        _a.sent();\n                        _a.label = 17;\n                    case 17: return [7 /*endfinally*/];\n                    case 18: return [2 /*return*/];\n                }\n            });\n        }); });\n    };\n    return EntityPersistExecutor;\n}());\nexports.EntityPersistExecutor = EntityPersistExecutor;\n\n//# sourceMappingURL=EntityPersistExecutor.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/persistence/EntityPersistExecutor.js?");

/***/ }),

/***/ "./node_modules/typeorm/persistence/Subject.js":
/*!*****************************************************!*\
  !*** ./node_modules/typeorm/persistence/Subject.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar OrmUtils_1 = __webpack_require__(/*! ../util/OrmUtils */ \"./node_modules/typeorm/util/OrmUtils.js\");\n/**\n * Subject is a subject of persistence.\n * It holds information about each entity that needs to be persisted:\n * - what entity should be persisted\n * - what is database representation of the persisted entity\n * - what entity metadata of the persisted entity\n * - what is allowed to with persisted entity (insert/update/remove)\n *\n * Having this collection of subjects we can perform database queries.\n */\nvar Subject = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function Subject(options) {\n        var _this = this;\n        /**\n         * Subject identifier.\n         * This identifier is not limited to table entity primary columns.\n         * This can be entity id or ids as well as some unique entity properties, like name or title.\n         * Insert / Update / Remove operation will be executed by a given identifier.\n         */\n        this.identifier = undefined;\n        /**\n         * Copy of entity but with relational ids fulfilled.\n         */\n        this.entityWithFulfilledIds = undefined;\n        /**\n         * Changes needs to be applied in the database for the given subject.\n         */\n        this.changeMaps = [];\n        /**\n         * Indicates if this subject can be inserted into the database.\n         * This means that this subject either is newly persisted, either can be inserted by cascades.\n         */\n        this.canBeInserted = false;\n        /**\n         * Indicates if this subject can be updated in the database.\n         * This means that this subject either was persisted, either can be updated by cascades.\n         */\n        this.canBeUpdated = false;\n        /**\n         * Indicates if this subject MUST be removed from the database.\n         * This means that this subject either was removed, either was removed by cascades.\n         */\n        this.mustBeRemoved = false;\n        /**\n         * Relations updated by the change maps.\n         */\n        this.updatedRelationMaps = [];\n        this.metadata = options.metadata;\n        this.entity = options.entity;\n        this.databaseEntity = options.databaseEntity;\n        this.parentSubject = options.parentSubject;\n        if (options.canBeInserted !== undefined)\n            this.canBeInserted = options.canBeInserted;\n        if (options.canBeUpdated !== undefined)\n            this.canBeUpdated = options.canBeUpdated;\n        if (options.mustBeRemoved !== undefined)\n            this.mustBeRemoved = options.mustBeRemoved;\n        if (options.identifier !== undefined)\n            this.identifier = options.identifier;\n        if (options.changeMaps !== undefined)\n            (_a = this.changeMaps).push.apply(_a, __spread(options.changeMaps));\n        if (this.entity) {\n            this.entityWithFulfilledIds = Object.assign({}, this.entity);\n            if (this.parentSubject) {\n                this.metadata.primaryColumns.forEach(function (primaryColumn) {\n                    if (primaryColumn.relationMetadata && primaryColumn.relationMetadata.inverseEntityMetadata === _this.parentSubject.metadata) {\n                        primaryColumn.setEntityValue(_this.entityWithFulfilledIds, _this.parentSubject.entity);\n                    }\n                });\n            }\n            this.identifier = this.metadata.getEntityIdMap(this.entityWithFulfilledIds);\n        }\n        else if (this.databaseEntity) {\n            this.identifier = this.metadata.getEntityIdMap(this.databaseEntity);\n        }\n        var _a;\n    }\n    Object.defineProperty(Subject.prototype, \"mustBeInserted\", {\n        // -------------------------------------------------------------------------\n        // Accessors\n        // -------------------------------------------------------------------------\n        /**\n         * Checks if this subject must be inserted into the database.\n         * Subject can be inserted into the database if it is allowed to be inserted (explicitly persisted or by cascades)\n         * and if it does not have database entity set.\n         */\n        get: function () {\n            return this.canBeInserted && !this.databaseEntity;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Subject.prototype, \"mustBeUpdated\", {\n        /**\n         * Checks if this subject must be updated into the database.\n         * Subject can be updated in the database if it is allowed to be updated (explicitly persisted or by cascades)\n         * and if it does have differentiated columns or relations.\n         */\n        get: function () {\n            return this.canBeUpdated && this.identifier && (this.changeMaps.length > 0 || !!this.metadata.objectIdColumn); // for mongodb we do not compute changes - we always update entity\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates a value set needs to be inserted / updated in the database.\n     * Value set is based on the entity and change maps of the subject.\n     * Important note: this method pops data from this subject's change maps.\n     */\n    Subject.prototype.createValueSetAndPopChangeMap = function () {\n        var _this = this;\n        var changeMapsWithoutValues = [];\n        var changeSet = this.changeMaps.reduce(function (updateMap, changeMap) {\n            var value = changeMap.value;\n            if (value instanceof Subject) {\n                // referenced columns can refer on values both which were just inserted and which were present in the model\n                // if entity was just inserted valueSets must contain all values from the entity and values just inserted in the database\n                // so, here we check if we have a value set then we simply use it as value to get our reference column values\n                // otherwise simply use an entity which cannot be just inserted at the moment and have all necessary data\n                value = value.insertedValueSet ? value.insertedValueSet : value.entity;\n            }\n            // value = changeMap.valueFactory ? changeMap.valueFactory(value) : changeMap.column.createValueMap(value);\n            var valueMap;\n            if (_this.metadata.isJunction && changeMap.column) {\n                valueMap = changeMap.column.createValueMap(changeMap.column.referencedColumn.getEntityValue(value));\n            }\n            else if (changeMap.column) {\n                valueMap = changeMap.column.createValueMap(value);\n            }\n            else if (changeMap.relation) {\n                // value can be a related object, for example: post.question = { id: 1 }\n                // or value can be a null or direct relation id, e.g. post.question = 1\n                // if its a direction relation id then we just set it to the valueMap,\n                // however if its an object then we need to extract its relation id map and set it to the valueMap\n                if (value instanceof Object) {\n                    // get relation id, e.g. referenced column name and its value,\n                    // for example: { id: 1 } which then will be set to relation, e.g. post.category = { id: 1 }\n                    var relationId = changeMap.relation.getRelationIdMap(value);\n                    // but relation id can be empty, for example in the case when you insert a new post with category\n                    // and both post and category are newly inserted objects (by cascades) and in this case category will not have id\n                    // this means we need to insert post without question id and update post's questionId once question be inserted\n                    // that's why we create a new changeMap operation for future updation of the post entity\n                    if (relationId === undefined) {\n                        changeMapsWithoutValues.push(changeMap);\n                        _this.canBeUpdated = true;\n                        return updateMap;\n                    }\n                    valueMap = changeMap.relation.createValueMap(relationId);\n                    _this.updatedRelationMaps.push({ relation: changeMap.relation, value: relationId });\n                }\n                else { // value can be \"null\" or direct relation id here\n                    valueMap = changeMap.relation.createValueMap(value);\n                    _this.updatedRelationMaps.push({ relation: changeMap.relation, value: value });\n                }\n            }\n            OrmUtils_1.OrmUtils.mergeDeep(updateMap, valueMap);\n            return updateMap;\n        }, {});\n        this.changeMaps = changeMapsWithoutValues;\n        return changeSet;\n    };\n    return Subject;\n}());\nexports.Subject = Subject;\n\n//# sourceMappingURL=Subject.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/persistence/Subject.js?");

/***/ }),

/***/ "./node_modules/typeorm/persistence/SubjectChangedColumnsComputer.js":
/*!***************************************************************************!*\
  !*** ./node_modules/typeorm/persistence/SubjectChangedColumnsComputer.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DateUtils_1 = __webpack_require__(/*! ../util/DateUtils */ \"./node_modules/typeorm/util/DateUtils.js\");\nvar EntityMetadata_1 = __webpack_require__(/*! ../metadata/EntityMetadata */ \"./node_modules/typeorm/metadata/EntityMetadata.js\");\n/**\n * Finds what columns are changed in the subject entities.\n */\nvar SubjectChangedColumnsComputer = /** @class */ (function () {\n    function SubjectChangedColumnsComputer() {\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Finds what columns are changed in the subject entities.\n     */\n    SubjectChangedColumnsComputer.prototype.compute = function (subjects) {\n        var _this = this;\n        subjects.forEach(function (subject) {\n            _this.computeDiffColumns(subject);\n            _this.computeDiffRelationalColumns(subjects, subject);\n        });\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Differentiate columns from the updated entity and entity stored in the database.\n     */\n    SubjectChangedColumnsComputer.prototype.computeDiffColumns = function (subject) {\n        // if there is no persisted entity then nothing to compute changed in it\n        if (!subject.entity)\n            return;\n        subject.metadata.columns.forEach(function (column) {\n            // ignore special columns\n            if (column.isVirtual ||\n                column.isDiscriminator ||\n                column.isUpdateDate ||\n                column.isVersion ||\n                column.isCreateDate)\n                return;\n            // get user provided value - column value from the user provided persisted entity\n            var entityValue = column.getEntityValue(subject.entity);\n            // we don't perform operation over undefined properties (but we DO need null properties!)\n            if (entityValue === undefined)\n                return;\n            // if there is no database entity then all columns are treated as new, e.g. changed\n            if (subject.databaseEntity) {\n                // get database value of the column\n                var databaseValue = column.getEntityValue(subject.databaseEntity);\n                // filter out \"relational columns\" only in the case if there is a relation object in entity\n                if (column.relationMetadata) {\n                    var value = column.relationMetadata.getEntityValue(subject.entity);\n                    if (value !== null && value !== undefined)\n                        return;\n                }\n                var normalizedValue = entityValue;\n                // normalize special values to make proper comparision\n                if (entityValue !== null && entityValue !== undefined) {\n                    if (column.type === \"date\") {\n                        normalizedValue = DateUtils_1.DateUtils.mixedDateToDateString(entityValue);\n                    }\n                    else if (column.type === \"time\") {\n                        normalizedValue = DateUtils_1.DateUtils.mixedDateToTimeString(entityValue);\n                    }\n                    else if (column.type === \"datetime\" || column.type === Date) {\n                        normalizedValue = DateUtils_1.DateUtils.mixedDateToUtcDatetimeString(entityValue);\n                        databaseValue = DateUtils_1.DateUtils.mixedDateToUtcDatetimeString(databaseValue);\n                    }\n                    else if (column.type === \"json\" || column.type === \"jsonb\") {\n                        normalizedValue = JSON.stringify(entityValue);\n                        if (databaseValue !== null && databaseValue !== undefined)\n                            databaseValue = JSON.stringify(databaseValue);\n                    }\n                    else if (column.type === \"sample-array\") {\n                        normalizedValue = DateUtils_1.DateUtils.simpleArrayToString(entityValue);\n                        databaseValue = DateUtils_1.DateUtils.simpleArrayToString(databaseValue);\n                    }\n                }\n                // if value is not changed - then do nothing\n                if (normalizedValue === databaseValue)\n                    return;\n            }\n            // find if there is already a column to be changed\n            var changeMap = subject.changeMaps.find(function (changeMap) { return changeMap.column === column; });\n            if (changeMap) { // and update its value if it was found\n                changeMap.value = entityValue;\n            }\n            else { // if it wasn't found add a new column for change\n                subject.changeMaps.push({\n                    column: column,\n                    value: entityValue\n                });\n            }\n        });\n    };\n    /**\n     * Difference columns of the owning one-to-one and many-to-one columns.\n     */\n    SubjectChangedColumnsComputer.prototype.computeDiffRelationalColumns = function (allSubjects, subject) {\n        // if there is no persisted entity then nothing to compute changed in it\n        if (!subject.entity)\n            return;\n        subject.metadata.relationsWithJoinColumns.forEach(function (relation) {\n            // get the related entity from the persisted entity\n            var relatedEntity = relation.getEntityValue(subject.entity);\n            // we don't perform operation over undefined properties (but we DO need null properties!)\n            if (relatedEntity === undefined)\n                return;\n            // if there is no database entity then all relational columns are treated as new, e.g. changed\n            if (subject.databaseEntity) {\n                // here we cover two scenarios:\n                // 1. related entity can be another entity which is natural way\n                // 2. related entity can be just an entity id\n                // if relation entity is just a relation id set (for example post.tag = 1)\n                // then we create an id map from it to make a proper comparision\n                var relatedEntityRelationIdMap = relatedEntity;\n                if (relatedEntityRelationIdMap !== null && relatedEntityRelationIdMap instanceof Object)\n                    relatedEntityRelationIdMap = relation.getRelationIdMap(relatedEntityRelationIdMap);\n                // get database related entity. Since loadRelationIds are used on databaseEntity\n                // related entity will contain only its relation ids\n                var databaseRelatedEntityRelationIdMap = relation.getEntityValue(subject.databaseEntity);\n                // if relation ids are equal then we don't need to update anything\n                var areRelatedIdsEqual = EntityMetadata_1.EntityMetadata.compareIds(relatedEntityRelationIdMap, databaseRelatedEntityRelationIdMap);\n                if (areRelatedIdsEqual)\n                    return;\n            }\n            // if there is an inserted subject for the related entity of the persisted entity then use it as related entity\n            // this code is used for related entities without ids to be properly inserted (and then updated if needed)\n            var valueSubject = allSubjects.find(function (subject) { return subject.mustBeInserted && subject.entity === relatedEntity; });\n            if (valueSubject)\n                relatedEntity = valueSubject;\n            // find if there is already a relation to be changed\n            var changeMap = subject.changeMaps.find(function (changeMap) { return changeMap.relation === relation; });\n            if (changeMap) { // and update its value if it was found\n                changeMap.value = relatedEntity;\n            }\n            else { // if it wasn't found add a new relation for change\n                subject.changeMaps.push({\n                    relation: relation,\n                    value: relatedEntity\n                });\n            }\n        });\n    };\n    return SubjectChangedColumnsComputer;\n}());\nexports.SubjectChangedColumnsComputer = SubjectChangedColumnsComputer;\n\n//# sourceMappingURL=SubjectChangedColumnsComputer.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/persistence/SubjectChangedColumnsComputer.js?");

/***/ }),

/***/ "./node_modules/typeorm/persistence/SubjectDatabaseEntityLoader.js":
/*!*************************************************************************!*\
  !*** ./node_modules/typeorm/persistence/SubjectDatabaseEntityLoader.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Loads database entities for all operate subjects which do not have database entity set.\n * All entities that we load database entities for are marked as updated or inserted.\n * To understand which of them really needs to be inserted or updated we need to load\n * their original representations from the database.\n */\nvar SubjectDatabaseEntityLoader = /** @class */ (function () {\n    // ---------------------------------------------------------------------\n    // Constructor\n    // ---------------------------------------------------------------------\n    function SubjectDatabaseEntityLoader(queryRunner, subjects) {\n        this.queryRunner = queryRunner;\n        this.subjects = subjects;\n    }\n    // ---------------------------------------------------------------------\n    // Public Methods\n    // ---------------------------------------------------------------------\n    /**\n     * Loads database entities for all subjects.\n     *\n     * loadAllRelations flag is used to load all relation ids of the object, no matter if they present in subject entity or not.\n     * This option is used for deletion.\n     */\n    SubjectDatabaseEntityLoader.prototype.load = function (operationType) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var promises;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        promises = this.groupByEntityTargets().map(function (subjectGroup) { return __awaiter(_this, void 0, void 0, function () {\n                            var _this = this;\n                            var allIds, loadRelationPropertyPaths, findOptions, entities;\n                            return __generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0:\n                                        allIds = [];\n                                        subjectGroup.subjects.forEach(function (subject) {\n                                            // we don't load if subject already has a database entity loaded\n                                            if (subject.databaseEntity || !subject.identifier)\n                                                return;\n                                            allIds.push(subject.identifier);\n                                        });\n                                        // if there no ids found (means all entities are new and have generated ids) - then nothing to load there\n                                        if (!allIds.length)\n                                            return [2 /*return*/];\n                                        loadRelationPropertyPaths = [];\n                                        // for the save operation\n                                        // extract all property paths of the relations we need to load relation ids for\n                                        // this is for optimization purpose - this way we don't load relation ids for entities\n                                        // whose relations are undefined, and since they are undefined its really pointless to\n                                        // load something for them, since undefined properties are skipped by the orm\n                                        if (operationType === \"save\") {\n                                            subjectGroup.subjects.forEach(function (subject) {\n                                                // gets all relation property paths that exist in the persisted entity.\n                                                subject.metadata.relations.forEach(function (relation) {\n                                                    var value = relation.getEntityValue(subject.entityWithFulfilledIds);\n                                                    if (value === undefined)\n                                                        return;\n                                                    if (loadRelationPropertyPaths.indexOf(relation.propertyPath) === -1)\n                                                        loadRelationPropertyPaths.push(relation.propertyPath);\n                                                });\n                                            });\n                                        }\n                                        else { // remove\n                                            // for remove operation\n                                            // we only need to load junction relation ids since only they are removed by cascades\n                                            loadRelationPropertyPaths.push.apply(// remove\n                                            loadRelationPropertyPaths, __spread(subjectGroup.subjects[0].metadata.manyToManyRelations.map(function (relation) { return relation.propertyPath; })));\n                                        }\n                                        findOptions = {\n                                            loadEagerRelations: false,\n                                            loadRelationIds: {\n                                                relations: loadRelationPropertyPaths,\n                                                disableMixedMap: true\n                                            }\n                                        };\n                                        return [4 /*yield*/, this.queryRunner.manager\n                                                .getRepository(subjectGroup.target)\n                                                .findByIds(allIds, findOptions)];\n                                    case 1:\n                                        entities = _a.sent();\n                                        // now when we have entities we need to find subject of each entity\n                                        // and insert that entity into database entity of the found subjects\n                                        entities.forEach(function (entity) {\n                                            var subjects = _this.findByPersistEntityLike(subjectGroup.target, entity);\n                                            subjects.forEach(function (subject) {\n                                                subject.databaseEntity = entity;\n                                                if (!subject.identifier)\n                                                    subject.identifier = subject.metadata.hasAllPrimaryKeys(entity) ? subject.metadata.getEntityIdMap(entity) : undefined;\n                                            });\n                                        });\n                                        return [2 /*return*/];\n                                }\n                            });\n                        }); });\n                        return [4 /*yield*/, Promise.all(promises)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    // ---------------------------------------------------------------------\n    // Protected Methods\n    // ---------------------------------------------------------------------\n    /**\n     * Finds subjects where entity like given subject's entity.\n     * Comparision made by entity id.\n     * Multiple subjects may be returned if duplicates are present in the subject array.\n     * This will likely result in the same row being updated multiple times during a transaction.\n     */\n    SubjectDatabaseEntityLoader.prototype.findByPersistEntityLike = function (entityTarget, entity) {\n        return this.subjects.filter(function (subject) {\n            if (!subject.entity)\n                return false;\n            if (subject.entity === entity)\n                return true;\n            return subject.metadata.target === entityTarget && subject.metadata.compareEntities(subject.entityWithFulfilledIds, entity);\n        });\n    };\n    /**\n     * Groups given Subject objects into groups separated by entity targets.\n     */\n    SubjectDatabaseEntityLoader.prototype.groupByEntityTargets = function () {\n        return this.subjects.reduce(function (groups, operatedEntity) {\n            var group = groups.find(function (group) { return group.target === operatedEntity.metadata.target; });\n            if (!group) {\n                group = { target: operatedEntity.metadata.target, subjects: [] };\n                groups.push(group);\n            }\n            group.subjects.push(operatedEntity);\n            return groups;\n        }, []);\n    };\n    return SubjectDatabaseEntityLoader;\n}());\nexports.SubjectDatabaseEntityLoader = SubjectDatabaseEntityLoader;\n\n//# sourceMappingURL=SubjectDatabaseEntityLoader.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/persistence/SubjectDatabaseEntityLoader.js?");

/***/ }),

/***/ "./node_modules/typeorm/persistence/SubjectExecutor.js":
/*!*************************************************************!*\
  !*** ./node_modules/typeorm/persistence/SubjectExecutor.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar PromiseUtils_1 = __webpack_require__(/*! ../util/PromiseUtils */ \"./node_modules/typeorm/util/PromiseUtils.js\");\nvar SubjectTopoligicalSorter_1 = __webpack_require__(/*! ./SubjectTopoligicalSorter */ \"./node_modules/typeorm/persistence/SubjectTopoligicalSorter.js\");\nvar SubjectChangedColumnsComputer_1 = __webpack_require__(/*! ./SubjectChangedColumnsComputer */ \"./node_modules/typeorm/persistence/SubjectChangedColumnsComputer.js\");\nvar SubjectWithoutIdentifierError_1 = __webpack_require__(/*! ../error/SubjectWithoutIdentifierError */ \"./node_modules/typeorm/error/SubjectWithoutIdentifierError.js\");\nvar SubjectRemovedAndUpdatedError_1 = __webpack_require__(/*! ../error/SubjectRemovedAndUpdatedError */ \"./node_modules/typeorm/error/SubjectRemovedAndUpdatedError.js\");\nvar MongoQueryRunner_1 = __webpack_require__(/*! ../driver/mongodb/MongoQueryRunner */ \"./node_modules/typeorm/driver/mongodb/MongoQueryRunner.js\");\nvar MongoDriver_1 = __webpack_require__(/*! ../driver/mongodb/MongoDriver */ \"./node_modules/typeorm/driver/mongodb/MongoDriver.js\");\nvar BroadcasterResult_1 = __webpack_require__(/*! ../subscriber/BroadcasterResult */ \"./node_modules/typeorm/subscriber/BroadcasterResult.js\");\nvar OracleDriver_1 = __webpack_require__(/*! ../driver/oracle/OracleDriver */ \"./node_modules/typeorm/driver/oracle/OracleDriver.js\");\nvar NestedSetSubjectExecutor_1 = __webpack_require__(/*! ./tree/NestedSetSubjectExecutor */ \"./node_modules/typeorm/persistence/tree/NestedSetSubjectExecutor.js\");\nvar ClosureSubjectExecutor_1 = __webpack_require__(/*! ./tree/ClosureSubjectExecutor */ \"./node_modules/typeorm/persistence/tree/ClosureSubjectExecutor.js\");\nvar MaterializedPathSubjectExecutor_1 = __webpack_require__(/*! ./tree/MaterializedPathSubjectExecutor */ \"./node_modules/typeorm/persistence/tree/MaterializedPathSubjectExecutor.js\");\n/**\n * Executes all database operations (inserts, updated, deletes) that must be executed\n * with given persistence subjects.\n */\nvar SubjectExecutor = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function SubjectExecutor(queryRunner, subjects, options) {\n        // -------------------------------------------------------------------------\n        // Public Properties\n        // -------------------------------------------------------------------------\n        /**\n         * Indicates if executor has any operations to execute (e.g. has insert / update / delete operations to be executed).\n         */\n        this.hasExecutableOperations = false;\n        /**\n         * Subjects that must be inserted.\n         */\n        this.insertSubjects = [];\n        /**\n         * Subjects that must be updated.\n         */\n        this.updateSubjects = [];\n        /**\n         * Subjects that must be removed.\n         */\n        this.removeSubjects = [];\n        this.queryRunner = queryRunner;\n        this.allSubjects = subjects;\n        this.options = options;\n        this.validate();\n        this.recompute();\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Executes all operations over given array of subjects.\n     * Executes queries using given query runner.\n     */\n    SubjectExecutor.prototype.execute = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var broadcasterResult;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        broadcasterResult = undefined;\n                        if (!(!this.options || this.options.listeners !== false)) return [3 /*break*/, 2];\n                        // console.time(\".broadcastBeforeEventsForAll\");\n                        broadcasterResult = this.broadcastBeforeEventsForAll();\n                        if (!(broadcasterResult.promises.length > 0)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, Promise.all(broadcasterResult.promises)];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2:\n                        // since event listeners and subscribers can call save methods and/or trigger entity changes we need to recompute operational subjects\n                        // recompute only in the case if any listener or subscriber was really executed\n                        if (broadcasterResult && broadcasterResult.count > 0) {\n                            // console.time(\".recompute\");\n                            this.recompute();\n                            // console.timeEnd(\".recompute\");\n                        }\n                        // make sure our insert subjects are sorted (using topological sorting) to make cascade inserts work properly\n                        // console.timeEnd(\"prepare\");\n                        // execute all insert operations\n                        // console.time(\".insertion\");\n                        this.insertSubjects = new SubjectTopoligicalSorter_1.SubjectTopoligicalSorter(this.insertSubjects).sort(\"insert\");\n                        return [4 /*yield*/, this.executeInsertOperations()];\n                    case 3:\n                        _a.sent();\n                        // console.timeEnd(\".insertion\");\n                        // recompute update operations since insertion can create updation operations for the\n                        // properties it wasn't able to handle on its own (referenced columns)\n                        this.updateSubjects = this.allSubjects.filter(function (subject) { return subject.mustBeUpdated; });\n                        // execute update operations\n                        // console.time(\".updation\");\n                        return [4 /*yield*/, this.executeUpdateOperations()];\n                    case 4:\n                        // execute update operations\n                        // console.time(\".updation\");\n                        _a.sent();\n                        // console.timeEnd(\".updation\");\n                        // make sure our remove subjects are sorted (using topological sorting) when multiple entities are passed for the removal\n                        // console.time(\".removal\");\n                        this.removeSubjects = new SubjectTopoligicalSorter_1.SubjectTopoligicalSorter(this.removeSubjects).sort(\"delete\");\n                        return [4 /*yield*/, this.executeRemoveOperations()];\n                    case 5:\n                        _a.sent();\n                        // console.timeEnd(\".removal\");\n                        // update all special columns in persisted entities, like inserted id or remove ids from the removed entities\n                        // console.time(\".updateSpecialColumnsInPersistedEntities\");\n                        return [4 /*yield*/, this.updateSpecialColumnsInPersistedEntities()];\n                    case 6:\n                        // console.timeEnd(\".removal\");\n                        // update all special columns in persisted entities, like inserted id or remove ids from the removed entities\n                        // console.time(\".updateSpecialColumnsInPersistedEntities\");\n                        _a.sent();\n                        if (!(!this.options || this.options.listeners !== false)) return [3 /*break*/, 8];\n                        // console.time(\".broadcastAfterEventsForAll\");\n                        broadcasterResult = this.broadcastAfterEventsForAll();\n                        if (!(broadcasterResult.promises.length > 0)) return [3 /*break*/, 8];\n                        return [4 /*yield*/, Promise.all(broadcasterResult.promises)];\n                    case 7:\n                        _a.sent();\n                        _a.label = 8;\n                    case 8: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Validates all given subjects.\n     */\n    SubjectExecutor.prototype.validate = function () {\n        this.allSubjects.forEach(function (subject) {\n            if (subject.mustBeUpdated && subject.mustBeRemoved)\n                throw new SubjectRemovedAndUpdatedError_1.SubjectRemovedAndUpdatedError(subject);\n        });\n    };\n    /**\n     * Performs entity re-computations - finds changed columns, re-builds insert/update/remove subjects.\n     */\n    SubjectExecutor.prototype.recompute = function () {\n        new SubjectChangedColumnsComputer_1.SubjectChangedColumnsComputer().compute(this.allSubjects);\n        this.insertSubjects = this.allSubjects.filter(function (subject) { return subject.mustBeInserted; });\n        this.updateSubjects = this.allSubjects.filter(function (subject) { return subject.mustBeUpdated; });\n        this.removeSubjects = this.allSubjects.filter(function (subject) { return subject.mustBeRemoved; });\n        this.hasExecutableOperations = this.insertSubjects.length > 0 || this.updateSubjects.length > 0 || this.removeSubjects.length > 0;\n    };\n    /**\n     * Broadcasts \"BEFORE_INSERT\", \"BEFORE_UPDATE\", \"BEFORE_REMOVE\" events for all given subjects.\n     */\n    SubjectExecutor.prototype.broadcastBeforeEventsForAll = function () {\n        var _this = this;\n        var result = new BroadcasterResult_1.BroadcasterResult();\n        if (this.insertSubjects.length)\n            this.insertSubjects.forEach(function (subject) { return _this.queryRunner.broadcaster.broadcastBeforeInsertEvent(result, subject.metadata, subject.entity); });\n        if (this.updateSubjects.length)\n            this.updateSubjects.forEach(function (subject) { return _this.queryRunner.broadcaster.broadcastBeforeUpdateEvent(result, subject.metadata, subject.entity, subject.databaseEntity); });\n        if (this.removeSubjects.length)\n            this.removeSubjects.forEach(function (subject) { return _this.queryRunner.broadcaster.broadcastBeforeRemoveEvent(result, subject.metadata, subject.entity, subject.databaseEntity); });\n        return result;\n    };\n    /**\n     * Broadcasts \"AFTER_INSERT\", \"AFTER_UPDATE\", \"AFTER_REMOVE\" events for all given subjects.\n     * Returns void if there wasn't any listener or subscriber executed.\n     * Note: this method has a performance-optimized code organization.\n     */\n    SubjectExecutor.prototype.broadcastAfterEventsForAll = function () {\n        var _this = this;\n        var result = new BroadcasterResult_1.BroadcasterResult();\n        if (this.insertSubjects.length)\n            this.insertSubjects.forEach(function (subject) { return _this.queryRunner.broadcaster.broadcastAfterInsertEvent(result, subject.metadata, subject.entity); });\n        if (this.updateSubjects.length)\n            this.updateSubjects.forEach(function (subject) { return _this.queryRunner.broadcaster.broadcastAfterUpdateEvent(result, subject.metadata, subject.entity, subject.databaseEntity); });\n        if (this.removeSubjects.length)\n            this.removeSubjects.forEach(function (subject) { return _this.queryRunner.broadcaster.broadcastAfterRemoveEvent(result, subject.metadata, subject.entity, subject.databaseEntity); });\n        return result;\n    };\n    /**\n     * Executes insert operations.\n     */\n    SubjectExecutor.prototype.executeInsertOperations = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var _a, groupedInsertSubjects, groupedInsertSubjectKeys;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = __read(this.groupBulkSubjects(this.insertSubjects, \"insert\"), 2), groupedInsertSubjects = _a[0], groupedInsertSubjectKeys = _a[1];\n                        // then we run insertion in the sequential order which is important since we have an ordered subjects\n                        return [4 /*yield*/, PromiseUtils_1.PromiseUtils.runInSequence(groupedInsertSubjectKeys, function (groupName) { return __awaiter(_this, void 0, void 0, function () {\n                                var _this = this;\n                                var subjects, bulkInsertMaps, bulkInsertSubjects, singleInsertSubjects, manager, insertResult_1, insertResult_2;\n                                return __generator(this, function (_a) {\n                                    switch (_a.label) {\n                                        case 0:\n                                            subjects = groupedInsertSubjects[groupName];\n                                            bulkInsertMaps = [];\n                                            bulkInsertSubjects = [];\n                                            singleInsertSubjects = [];\n                                            if (this.queryRunner.connection.driver instanceof MongoDriver_1.MongoDriver) {\n                                                subjects.forEach(function (subject) {\n                                                    bulkInsertSubjects.push(subject);\n                                                    bulkInsertMaps.push(subject.entity);\n                                                });\n                                            }\n                                            else if (this.queryRunner.connection.driver instanceof OracleDriver_1.OracleDriver) {\n                                                subjects.forEach(function (subject) {\n                                                    singleInsertSubjects.push(subject);\n                                                });\n                                            }\n                                            else {\n                                                subjects.forEach(function (subject) {\n                                                    // we do not insert in bulk in following cases:\n                                                    // - when there is no values in insert (only defaults are inserted), since we cannot use DEFAULT VALUES expression for multiple inserted rows\n                                                    // - when entity is a tree table, since tree tables require extra operation per each inserted row\n                                                    // - when oracle is used, since oracle's bulk insertion is very bad\n                                                    if (subject.changeMaps.length === 0 ||\n                                                        subject.metadata.treeType ||\n                                                        _this.queryRunner.connection.driver instanceof OracleDriver_1.OracleDriver) {\n                                                        singleInsertSubjects.push(subject);\n                                                    }\n                                                    else {\n                                                        bulkInsertSubjects.push(subject);\n                                                        bulkInsertMaps.push(subject.createValueSetAndPopChangeMap());\n                                                    }\n                                                });\n                                            }\n                                            if (!(this.queryRunner instanceof MongoQueryRunner_1.MongoQueryRunner)) return [3 /*break*/, 2];\n                                            manager = this.queryRunner.manager;\n                                            return [4 /*yield*/, manager.insert(subjects[0].metadata.target, bulkInsertMaps)];\n                                        case 1:\n                                            insertResult_1 = _a.sent();\n                                            subjects.forEach(function (subject, index) {\n                                                subject.identifier = insertResult_1.identifiers[index];\n                                                subject.generatedMap = insertResult_1.generatedMaps[index];\n                                                subject.insertedValueSet = bulkInsertMaps[index];\n                                            });\n                                            return [3 /*break*/, 6];\n                                        case 2:\n                                            if (!(bulkInsertMaps.length > 0)) return [3 /*break*/, 4];\n                                            return [4 /*yield*/, this.queryRunner\n                                                    .manager\n                                                    .createQueryBuilder()\n                                                    .insert()\n                                                    .into(subjects[0].metadata.target)\n                                                    .values(bulkInsertMaps)\n                                                    .updateEntity(this.options && this.options.reload === false ? false : true)\n                                                    .callListeners(false)\n                                                    .execute()];\n                                        case 3:\n                                            insertResult_2 = _a.sent();\n                                            bulkInsertSubjects.forEach(function (subject, index) {\n                                                subject.identifier = insertResult_2.identifiers[index];\n                                                subject.generatedMap = insertResult_2.generatedMaps[index];\n                                                subject.insertedValueSet = bulkInsertMaps[index];\n                                            });\n                                            _a.label = 4;\n                                        case 4:\n                                            if (!(singleInsertSubjects.length > 0)) return [3 /*break*/, 6];\n                                            return [4 /*yield*/, PromiseUtils_1.PromiseUtils.runInSequence(singleInsertSubjects, function (subject) { return __awaiter(_this, void 0, void 0, function () {\n                                                    return __generator(this, function (_a) {\n                                                        switch (_a.label) {\n                                                            case 0:\n                                                                subject.insertedValueSet = subject.createValueSetAndPopChangeMap(); // important to have because query builder sets inserted values into it\n                                                                if (!(subject.metadata.treeType === \"nested-set\")) return [3 /*break*/, 2];\n                                                                return [4 /*yield*/, new NestedSetSubjectExecutor_1.NestedSetSubjectExecutor(this.queryRunner).insert(subject)];\n                                                            case 1:\n                                                                _a.sent();\n                                                                _a.label = 2;\n                                                            case 2: return [4 /*yield*/, this.queryRunner\n                                                                    .manager\n                                                                    .createQueryBuilder()\n                                                                    .insert()\n                                                                    .into(subject.metadata.target)\n                                                                    .values(subject.insertedValueSet)\n                                                                    .updateEntity(this.options && this.options.reload === false ? false : true)\n                                                                    .callListeners(false)\n                                                                    .execute()\n                                                                    .then(function (insertResult) {\n                                                                    subject.identifier = insertResult.identifiers[0];\n                                                                    subject.generatedMap = insertResult.generatedMaps[0];\n                                                                })];\n                                                            case 3:\n                                                                _a.sent();\n                                                                if (!(subject.metadata.treeType === \"closure-table\")) return [3 /*break*/, 5];\n                                                                return [4 /*yield*/, new ClosureSubjectExecutor_1.ClosureSubjectExecutor(this.queryRunner).insert(subject)];\n                                                            case 4:\n                                                                _a.sent();\n                                                                return [3 /*break*/, 7];\n                                                            case 5:\n                                                                if (!(subject.metadata.treeType === \"materialized-path\")) return [3 /*break*/, 7];\n                                                                return [4 /*yield*/, new MaterializedPathSubjectExecutor_1.MaterializedPathSubjectExecutor(this.queryRunner).insert(subject)];\n                                                            case 6:\n                                                                _a.sent();\n                                                                _a.label = 7;\n                                                            case 7: return [2 /*return*/];\n                                                        }\n                                                    });\n                                                }); })];\n                                        case 5:\n                                            _a.sent();\n                                            _a.label = 6;\n                                        case 6:\n                                            subjects.forEach(function (subject) {\n                                                if (subject.generatedMap) {\n                                                    subject.metadata.columns.forEach(function (column) {\n                                                        var value = column.getEntityValue(subject.generatedMap);\n                                                        if (value !== undefined && value !== null) {\n                                                            var preparedValue = _this.queryRunner.connection.driver.prepareHydratedValue(value, column);\n                                                            column.setEntityValue(subject.generatedMap, preparedValue);\n                                                        }\n                                                    });\n                                                }\n                                            });\n                                            return [2 /*return*/];\n                                    }\n                                });\n                            }); })];\n                    case 1:\n                        // then we run insertion in the sequential order which is important since we have an ordered subjects\n                        _b.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Updates all given subjects in the database.\n     */\n    SubjectExecutor.prototype.executeUpdateOperations = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, Promise.all(this.updateSubjects.map(function (subject) { return __awaiter(_this, void 0, void 0, function () {\n                            var _this = this;\n                            var updateMap, manager, updateQueryBuilder, updateResult;\n                            return __generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0:\n                                        if (!subject.identifier)\n                                            throw new SubjectWithoutIdentifierError_1.SubjectWithoutIdentifierError(subject);\n                                        updateMap = this.queryRunner.connection.driver instanceof MongoDriver_1.MongoDriver ? subject.entity : subject.createValueSetAndPopChangeMap();\n                                        if (!(this.queryRunner instanceof MongoQueryRunner_1.MongoQueryRunner)) return [3 /*break*/, 2];\n                                        manager = this.queryRunner.manager;\n                                        return [4 /*yield*/, manager.update(subject.metadata.target, subject.identifier, updateMap)];\n                                    case 1:\n                                        _a.sent();\n                                        return [3 /*break*/, 4];\n                                    case 2:\n                                        updateQueryBuilder = this.queryRunner\n                                            .manager\n                                            .createQueryBuilder()\n                                            .update(subject.metadata.target)\n                                            .set(updateMap)\n                                            .updateEntity(this.options && this.options.reload === false ? false : true)\n                                            .callListeners(false);\n                                        if (subject.entity) {\n                                            updateQueryBuilder.whereEntity(subject.identifier);\n                                        }\n                                        else { // in this case identifier is just conditions object to update by\n                                            updateQueryBuilder.where(subject.identifier);\n                                        }\n                                        return [4 /*yield*/, updateQueryBuilder.execute()];\n                                    case 3:\n                                        updateResult = _a.sent();\n                                        subject.generatedMap = updateResult.generatedMaps[0];\n                                        if (subject.generatedMap) {\n                                            subject.metadata.columns.forEach(function (column) {\n                                                var value = column.getEntityValue(subject.generatedMap);\n                                                if (value !== undefined && value !== null) {\n                                                    var preparedValue = _this.queryRunner.connection.driver.prepareHydratedValue(value, column);\n                                                    column.setEntityValue(subject.generatedMap, preparedValue);\n                                                }\n                                            });\n                                        }\n                                        _a.label = 4;\n                                    case 4: return [2 /*return*/];\n                                }\n                            });\n                        }); }))];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Removes all given subjects from the database.\n     *\n     * todo: we need to apply topological sort here as well\n     */\n    SubjectExecutor.prototype.executeRemoveOperations = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var _a, groupedRemoveSubjects, groupedRemoveSubjectKeys;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = __read(this.groupBulkSubjects(this.removeSubjects, \"delete\"), 2), groupedRemoveSubjects = _a[0], groupedRemoveSubjectKeys = _a[1];\n                        return [4 /*yield*/, PromiseUtils_1.PromiseUtils.runInSequence(groupedRemoveSubjectKeys, function (groupName) { return __awaiter(_this, void 0, void 0, function () {\n                                var subjects, deleteMaps, manager;\n                                return __generator(this, function (_a) {\n                                    switch (_a.label) {\n                                        case 0:\n                                            subjects = groupedRemoveSubjects[groupName];\n                                            deleteMaps = subjects.map(function (subject) {\n                                                if (!subject.identifier)\n                                                    throw new SubjectWithoutIdentifierError_1.SubjectWithoutIdentifierError(subject);\n                                                return subject.identifier;\n                                            });\n                                            if (!(this.queryRunner instanceof MongoQueryRunner_1.MongoQueryRunner)) return [3 /*break*/, 2];\n                                            manager = this.queryRunner.manager;\n                                            return [4 /*yield*/, manager.delete(subjects[0].metadata.target, deleteMaps)];\n                                        case 1:\n                                            _a.sent();\n                                            return [3 /*break*/, 4];\n                                        case 2: \n                                        // here we execute our deletion query\n                                        // we don't need to specify entities and set update entity to true since the only thing query builder\n                                        // will do for use is a primary keys deletion which is handled by us later once persistence is finished\n                                        // also, we disable listeners because we call them on our own in persistence layer\n                                        return [4 /*yield*/, this.queryRunner\n                                                .manager\n                                                .createQueryBuilder()\n                                                .delete()\n                                                .from(subjects[0].metadata.target)\n                                                .where(deleteMaps)\n                                                .callListeners(false)\n                                                .execute()];\n                                        case 3:\n                                            // here we execute our deletion query\n                                            // we don't need to specify entities and set update entity to true since the only thing query builder\n                                            // will do for use is a primary keys deletion which is handled by us later once persistence is finished\n                                            // also, we disable listeners because we call them on our own in persistence layer\n                                            _a.sent();\n                                            _a.label = 4;\n                                        case 4: return [2 /*return*/];\n                                    }\n                                });\n                            }); })];\n                    case 1:\n                        _b.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Updates all special columns of the saving entities (create date, update date, version, etc.).\n     * Also updates nullable columns and columns with default values.\n     */\n    SubjectExecutor.prototype.updateSpecialColumnsInPersistedEntities = function () {\n        // update inserted entity properties\n        if (this.insertSubjects.length)\n            this.updateSpecialColumnsInInsertedAndUpdatedEntities(this.insertSubjects);\n        // update updated entity properties\n        if (this.updateSubjects.length)\n            this.updateSpecialColumnsInInsertedAndUpdatedEntities(this.updateSubjects);\n        // remove ids from the entities that were removed\n        if (this.removeSubjects.length) {\n            this.removeSubjects.forEach(function (subject) {\n                if (!subject.entity)\n                    return;\n                subject.metadata.primaryColumns.forEach(function (primaryColumn) {\n                    primaryColumn.setEntityValue(subject.entity, undefined);\n                });\n            });\n        }\n        // other post-persist updations\n        this.allSubjects.forEach(function (subject) {\n            if (!subject.entity)\n                return;\n            subject.metadata.relationIds.forEach(function (relationId) {\n                relationId.setValue(subject.entity);\n            });\n        });\n    };\n    /**\n     * Updates all special columns of the saving entities (create date, update date, version, etc.).\n     * Also updates nullable columns and columns with default values.\n     */\n    SubjectExecutor.prototype.updateSpecialColumnsInInsertedAndUpdatedEntities = function (subjects) {\n        var _this = this;\n        subjects.forEach(function (subject) {\n            if (!subject.entity)\n                return;\n            // set values to \"null\" for nullable columns that did not have values\n            subject.metadata.columns.forEach(function (column) {\n                // if table inheritance is used make sure this column is not child's column\n                if (subject.metadata.childEntityMetadatas.length > 0 && subject.metadata.childEntityMetadatas.map(function (metadata) { return metadata.target; }).indexOf(column.target) !== -1)\n                    return;\n                // entities does not have virtual columns\n                if (column.isVirtual)\n                    return;\n                // update nullable columns\n                if (column.isNullable) {\n                    var columnValue = column.getEntityValue(subject.entity);\n                    if (columnValue === undefined)\n                        column.setEntityValue(subject.entity, null);\n                }\n                // update relational columns\n                if (subject.updatedRelationMaps.length > 0) {\n                    subject.updatedRelationMaps.forEach(function (updatedRelationMap) {\n                        updatedRelationMap.relation.joinColumns.forEach(function (column) {\n                            if (column.isVirtual === true)\n                                return;\n                            column.setEntityValue(subject.entity, updatedRelationMap.value instanceof Object ? column.referencedColumn.getEntityValue(updatedRelationMap.value) : updatedRelationMap.value);\n                        });\n                    });\n                }\n            });\n            // merge into entity all generated values returned by a database\n            if (subject.generatedMap)\n                _this.queryRunner.manager.merge(subject.metadata.target, subject.entity, subject.generatedMap);\n        });\n    };\n    /**\n     * Groups subjects by metadata names (by tables) to make bulk insertions and deletions possible.\n     * However there are some limitations with bulk insertions of data into tables with generated (increment) columns\n     * in some drivers. Some drivers like mysql and sqlite does not support returning multiple generated columns\n     * after insertion and can only return a single generated column value, that's why its not possible to do bulk insertion,\n     * because it breaks insertion result's generatedMap and leads to problems when this subject is used in other subjects saves.\n     * That's why we only support bulking in junction tables for those drivers.\n     *\n     * Other drivers like postgres and sql server support RETURNING / OUTPUT statement which allows to return generated\n     * id for each inserted row, that's why bulk insertion is not limited to junction tables in there.\n     */\n    SubjectExecutor.prototype.groupBulkSubjects = function (subjects, type) {\n        var group = {};\n        var keys = [];\n        var groupingAllowed = type === \"delete\" || this.queryRunner.connection.driver.isReturningSqlSupported();\n        subjects.forEach(function (subject, index) {\n            var key = groupingAllowed || subject.metadata.isJunction ? subject.metadata.name : subject.metadata.name + \"_\" + index;\n            if (!group[key]) {\n                group[key] = [subject];\n                keys.push(key);\n            }\n            else {\n                group[key].push(subject);\n            }\n        });\n        return [group, keys];\n    };\n    return SubjectExecutor;\n}());\nexports.SubjectExecutor = SubjectExecutor;\n\n//# sourceMappingURL=SubjectExecutor.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/persistence/SubjectExecutor.js?");

/***/ }),

/***/ "./node_modules/typeorm/persistence/SubjectTopoligicalSorter.js":
/*!**********************************************************************!*\
  !*** ./node_modules/typeorm/persistence/SubjectTopoligicalSorter.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Orders insert or remove subjects in proper order (using topological sorting)\n * to make sure insert or remove operations are executed in a proper order.\n */\nvar SubjectTopoligicalSorter = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function SubjectTopoligicalSorter(subjects) {\n        this.subjects = __spread(subjects); // copy subjects to prevent changing of sent array\n        this.metadatas = this.getUniqueMetadatas(this.subjects);\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Sorts (orders) subjects in their topological order.\n     */\n    SubjectTopoligicalSorter.prototype.sort = function (direction) {\n        var _this = this;\n        // if there are no metadatas it probably mean there is no subjects... we don't have to do anything here\n        if (!this.metadatas.length)\n            return this.subjects;\n        var sortedSubjects = [];\n        // first if we sort for deletion all junction subjects\n        // junction subjects are subjects without entity and database entity set\n        if (direction === \"delete\") {\n            var junctionSubjects = this.subjects.filter(function (subject) { return !subject.entity && !subject.databaseEntity; });\n            sortedSubjects.push.apply(sortedSubjects, __spread(junctionSubjects));\n            this.removeAlreadySorted(junctionSubjects);\n        }\n        // next we always insert entities with non-nullable relations, sort them first\n        var nonNullableDependencies = this.getNonNullableDependencies();\n        var sortedNonNullableEntityTargets = this.toposort(nonNullableDependencies);\n        if (direction === \"insert\")\n            sortedNonNullableEntityTargets = sortedNonNullableEntityTargets.reverse();\n        // so we have a sorted entity targets\n        // go thought each of them and find all subjects with sorted entity target\n        // add those sorted targets and remove them from original array of targets\n        sortedNonNullableEntityTargets.forEach(function (sortedEntityTarget) {\n            var entityTargetSubjects = _this.subjects.filter(function (subject) { return subject.metadata.targetName === sortedEntityTarget; });\n            sortedSubjects.push.apply(sortedSubjects, __spread(entityTargetSubjects));\n            _this.removeAlreadySorted(entityTargetSubjects);\n        });\n        // next sort all other entities\n        // same process as in above but with other entities\n        var otherDependencies = this.getDependencies();\n        var sortedOtherEntityTargets = this.toposort(otherDependencies);\n        if (direction === \"insert\")\n            sortedOtherEntityTargets = sortedOtherEntityTargets.reverse();\n        sortedOtherEntityTargets.forEach(function (sortedEntityTarget) {\n            var entityTargetSubjects = _this.subjects.filter(function (subject) { return subject.metadata.targetName === sortedEntityTarget; });\n            sortedSubjects.push.apply(sortedSubjects, __spread(entityTargetSubjects));\n            _this.removeAlreadySorted(entityTargetSubjects);\n        });\n        // if we have something left in the subjects add them as well\n        sortedSubjects.push.apply(sortedSubjects, __spread(this.subjects));\n        return sortedSubjects;\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Removes already sorted subjects from this.subjects list of subjects.\n     */\n    SubjectTopoligicalSorter.prototype.removeAlreadySorted = function (subjects) {\n        var _this = this;\n        subjects.forEach(function (subject) {\n            _this.subjects.splice(_this.subjects.indexOf(subject), 1);\n        });\n    };\n    /**\n     * Extracts all unique metadatas from the given subjects.\n     */\n    SubjectTopoligicalSorter.prototype.getUniqueMetadatas = function (subjects) {\n        var metadatas = [];\n        subjects.forEach(function (subject) {\n            if (metadatas.indexOf(subject.metadata) === -1)\n                metadatas.push(subject.metadata);\n        });\n        return metadatas;\n    };\n    /**\n     * Gets dependency tree for all entity metadatas with non-nullable relations.\n     * We need to execute insertions first for entities which non-nullable relations.\n     */\n    SubjectTopoligicalSorter.prototype.getNonNullableDependencies = function () {\n        return this.metadatas.reduce(function (dependencies, metadata) {\n            metadata.relationsWithJoinColumns.forEach(function (relation) {\n                if (relation.isNullable)\n                    return;\n                dependencies.push([metadata.targetName, relation.inverseEntityMetadata.targetName]);\n            });\n            return dependencies;\n        }, []);\n    };\n    /**\n     * Gets dependency tree for all entity metadatas with non-nullable relations.\n     * We need to execute insertions first for entities which non-nullable relations.\n     */\n    SubjectTopoligicalSorter.prototype.getDependencies = function () {\n        return this.metadatas.reduce(function (dependencies, metadata) {\n            metadata.relationsWithJoinColumns.forEach(function (relation) {\n                // if relation is self-referenced we skip it\n                if (relation.inverseEntityMetadata === metadata)\n                    return;\n                dependencies.push([metadata.targetName, relation.inverseEntityMetadata.targetName]);\n            });\n            return dependencies;\n        }, []);\n    };\n    /**\n     * Sorts given graph using topological sorting algorithm.\n     *\n     * Algorithm is kindly taken from https://github.com/marcelklehr/toposort repository.\n     */\n    SubjectTopoligicalSorter.prototype.toposort = function (edges) {\n        function uniqueNodes(arr) {\n            var res = [];\n            for (var i_1 = 0, len = arr.length; i_1 < len; i_1++) {\n                var edge = arr[i_1];\n                if (res.indexOf(edge[0]) < 0)\n                    res.push(edge[0]);\n                if (res.indexOf(edge[1]) < 0)\n                    res.push(edge[1]);\n            }\n            return res;\n        }\n        var nodes = uniqueNodes(edges);\n        var cursor = nodes.length, sorted = new Array(cursor), visited = {}, i = cursor;\n        while (i--) {\n            if (!visited[i])\n                visit(nodes[i], i, []);\n        }\n        function visit(node, i, predecessors) {\n            if (predecessors.indexOf(node) >= 0) {\n                throw new Error(\"Cyclic dependency: \" + JSON.stringify(node)); // todo: better error\n            }\n            if (!~nodes.indexOf(node)) {\n                throw new Error(\"Found unknown node. Make sure to provided all involved nodes. Unknown node: \" + JSON.stringify(node));\n            }\n            if (visited[i])\n                return;\n            visited[i] = true;\n            // outgoing edges\n            var outgoing = edges.filter(function (edge) {\n                return edge[0] === node;\n            });\n            if (i = outgoing.length) {\n                var preds = predecessors.concat(node);\n                do {\n                    var child = outgoing[--i][1];\n                    visit(child, nodes.indexOf(child), preds);\n                } while (i);\n            }\n            sorted[--cursor] = node;\n        }\n        return sorted;\n    };\n    return SubjectTopoligicalSorter;\n}());\nexports.SubjectTopoligicalSorter = SubjectTopoligicalSorter;\n\n//# sourceMappingURL=SubjectTopoligicalSorter.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/persistence/SubjectTopoligicalSorter.js?");

/***/ }),

/***/ "./node_modules/typeorm/persistence/subject-builder/CascadesSubjectBuilder.js":
/*!************************************************************************************!*\
  !*** ./node_modules/typeorm/persistence/subject-builder/CascadesSubjectBuilder.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Subject_1 = __webpack_require__(/*! ../Subject */ \"./node_modules/typeorm/persistence/Subject.js\");\n/**\n * Finds all cascade operations of the given subject and cascade operations of the found cascaded subjects,\n * e.g. builds a cascade tree and creates a subjects for them.\n */\nvar CascadesSubjectBuilder = /** @class */ (function () {\n    // ---------------------------------------------------------------------\n    // Constructor\n    // ---------------------------------------------------------------------\n    function CascadesSubjectBuilder(allSubjects) {\n        this.allSubjects = allSubjects;\n    }\n    // ---------------------------------------------------------------------\n    // Public Methods\n    // ---------------------------------------------------------------------\n    /**\n     * Builds a cascade subjects tree and pushes them in into the given array of subjects.\n     */\n    CascadesSubjectBuilder.prototype.build = function (subject) {\n        var _this = this;\n        subject.metadata\n            .extractRelationValuesFromEntity(subject.entity, subject.metadata.relations) // todo: we can create EntityMetadata.cascadeRelations\n            .forEach(function (_a) {\n            var _b = __read(_a, 3), relation = _b[0], relationEntity = _b[1], relationEntityMetadata = _b[2];\n            // we need only defined values and insert or update cascades of the relation should be set\n            if (relationEntity === undefined ||\n                relationEntity === null ||\n                (!relation.isCascadeInsert && !relation.isCascadeUpdate))\n                return;\n            // if relation entity is just a relation id set (for example post.tag = 1)\n            // then we don't really need to check cascades since there is no object to insert or update\n            if (!(relationEntity instanceof Object))\n                return;\n            // if we already has this entity in list of operated subjects then skip it to avoid recursion\n            var alreadyExistRelationEntitySubject = _this.findByPersistEntityLike(relationEntityMetadata.target, relationEntity);\n            if (alreadyExistRelationEntitySubject) {\n                if (alreadyExistRelationEntitySubject.canBeInserted === false) // if its not marked for insertion yet\n                    alreadyExistRelationEntitySubject.canBeInserted = relation.isCascadeInsert === true;\n                if (alreadyExistRelationEntitySubject.canBeUpdated === false) // if its not marked for update yet\n                    alreadyExistRelationEntitySubject.canBeUpdated = relation.isCascadeUpdate === true;\n                return;\n            }\n            // mark subject with what we can do with it\n            // and add to the array of subjects to load only if there is no same entity there already\n            var relationEntitySubject = new Subject_1.Subject({\n                metadata: relationEntityMetadata,\n                parentSubject: subject,\n                entity: relationEntity,\n                canBeInserted: relation.isCascadeInsert === true,\n                canBeUpdated: relation.isCascadeUpdate === true\n            });\n            _this.allSubjects.push(relationEntitySubject);\n            // go recursively and find other entities we need to insert/update\n            _this.build(relationEntitySubject);\n        });\n    };\n    // ---------------------------------------------------------------------\n    // Protected Methods\n    // ---------------------------------------------------------------------\n    /**\n     * Finds subject where entity like given subject's entity.\n     * Comparision made by entity id.\n     */\n    CascadesSubjectBuilder.prototype.findByPersistEntityLike = function (entityTarget, entity) {\n        return this.allSubjects.find(function (subject) {\n            if (!subject.entity)\n                return false;\n            if (subject.entity === entity)\n                return true;\n            return subject.metadata.target === entityTarget && subject.metadata.compareEntities(subject.entityWithFulfilledIds, entity);\n        });\n    };\n    return CascadesSubjectBuilder;\n}());\nexports.CascadesSubjectBuilder = CascadesSubjectBuilder;\n\n//# sourceMappingURL=CascadesSubjectBuilder.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/persistence/subject-builder/CascadesSubjectBuilder.js?");

/***/ }),

/***/ "./node_modules/typeorm/persistence/subject-builder/ManyToManySubjectBuilder.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/typeorm/persistence/subject-builder/ManyToManySubjectBuilder.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Subject_1 = __webpack_require__(/*! ../Subject */ \"./node_modules/typeorm/persistence/Subject.js\");\nvar OrmUtils_1 = __webpack_require__(/*! ../../util/OrmUtils */ \"./node_modules/typeorm/util/OrmUtils.js\");\nvar EntityMetadata_1 = __webpack_require__(/*! ../../metadata/EntityMetadata */ \"./node_modules/typeorm/metadata/EntityMetadata.js\");\n/**\n * Builds operations needs to be executed for many-to-many relations of the given subjects.\n *\n * by example: post contains owner many-to-many relation with categories in the property called \"categories\", e.g.\n *             @ManyToMany(type => Category, category => category.posts) categories: Category[]\n *             If user adds categories into the post and saves post we need to bind them.\n *             This operation requires updation of junction table.\n */\nvar ManyToManySubjectBuilder = /** @class */ (function () {\n    // ---------------------------------------------------------------------\n    // Constructor\n    // ---------------------------------------------------------------------\n    function ManyToManySubjectBuilder(subjects) {\n        this.subjects = subjects;\n    }\n    // ---------------------------------------------------------------------\n    // Public Methods\n    // ---------------------------------------------------------------------\n    /**\n     * Builds operations for any changes in the many-to-many relations of the subjects.\n     */\n    ManyToManySubjectBuilder.prototype.build = function () {\n        var _this = this;\n        this.subjects.forEach(function (subject) {\n            // if subject doesn't have entity then no need to find something that should be inserted or removed\n            if (!subject.entity)\n                return;\n            // go through all persistence enabled many-to-many relations and build subject operations for them\n            subject.metadata.manyToManyRelations.forEach(function (relation) {\n                // skip relations for which persistence is disabled\n                if (relation.persistenceEnabled === false)\n                    return;\n                _this.buildForSubjectRelation(subject, relation);\n            });\n        });\n    };\n    /**\n     * Builds operations for removal of all many-to-many records of all many-to-many relations of the given subject.\n     */\n    ManyToManySubjectBuilder.prototype.buildForAllRemoval = function (subject) {\n        var _this = this;\n        // if subject does not have a database entity then it means it does not exist in the database\n        // if it does not exist in the database then we don't have anything for deletion\n        if (!subject.databaseEntity)\n            return;\n        // go through all persistence enabled many-to-many relations and build subject operations for them\n        subject.metadata.manyToManyRelations.forEach(function (relation) {\n            // skip relations for which persistence is disabled\n            if (relation.persistenceEnabled === false)\n                return;\n            // get all related entities (actually related entity relation ids) bind to this subject entity\n            // by example: returns category ids of the post we are currently working with (subject.entity is post)\n            var relatedEntityRelationIdsInDatabase = relation.getEntityValue(subject.databaseEntity);\n            // go through all related entities and create a new junction subject for each row in junction table\n            relatedEntityRelationIdsInDatabase.forEach(function (relationId) {\n                var junctionSubject = new Subject_1.Subject({\n                    metadata: relation.junctionEntityMetadata,\n                    parentSubject: subject,\n                    mustBeRemoved: true,\n                    identifier: _this.buildJunctionIdentifier(subject, relation, relationId)\n                });\n                // we use unshift because we need to perform those operations before post deletion is performed\n                // but post deletion was already added as an subject\n                // this is temporary solution, later we need to implement proper sorting of subjects before their removal\n                _this.subjects.push(junctionSubject);\n            });\n        });\n    };\n    // ---------------------------------------------------------------------\n    // Protected Methods\n    // ---------------------------------------------------------------------\n    /**\n     * Builds operations for a given subject and relation.\n     *\n     * by example: subject is \"post\" entity we are saving here and relation is \"categories\" inside it here.\n     */\n    ManyToManySubjectBuilder.prototype.buildForSubjectRelation = function (subject, relation) {\n        var _this = this;\n        // load from db all relation ids of inverse entities that are \"bind\" to the subject's entity\n        // this way we gonna check which relation ids are missing and which are new (e.g. inserted or removed)\n        var databaseRelatedEntityIds = [];\n        // if subject don't have database entity it means all related entities in persisted subject are new and must be bind\n        // and we don't need to remove something that is not exist\n        if (subject.databaseEntity)\n            databaseRelatedEntityIds = relation.getEntityValue(subject.databaseEntity);\n        // extract entity's relation value\n        // by example: categories inside our post (subject.entity is post)\n        var relatedEntities = relation.getEntityValue(subject.entity);\n        if (relatedEntities === null) // if value set to null its equal if we set it to empty array - all items must be removed from the database\n            relatedEntities = [];\n        if (!(relatedEntities instanceof Array))\n            return;\n        // from all related entities find only those which aren't found in the db - for them we will create operation subjects\n        relatedEntities.forEach(function (relatedEntity) {\n            // todo: check how it will work for entities which are saved by cascades, but aren't saved in the database yet\n            // extract only relation id from the related entities, since we only need it for comparision\n            // by example: extract from category only relation id (category id, or let's say category title, depend on join column options)\n            var relatedEntityRelationIdMap = relation.inverseEntityMetadata.getEntityIdMap(relatedEntity);\n            // try to find a subject of this related entity, maybe it was loaded or was marked for persistence\n            var relatedEntitySubject = _this.subjects.find(function (subject) {\n                return subject.entity === relatedEntity;\n            });\n            // if subject with entity was found take subject identifier as relation id map since it may contain extra properties resolved\n            if (relatedEntitySubject)\n                relatedEntityRelationIdMap = relatedEntitySubject.identifier;\n            // if related entity relation id map is empty it means related entity is newly persisted\n            if (!relatedEntityRelationIdMap) {\n                // we decided to remove this error because it brings complications when saving object with non-saved entities\n                // if related entity does not have a subject then it means user tries to bind entity which wasn't saved\n                // in this persistence because he didn't pass this entity for save or he did not set cascades\n                // but without entity being inserted we cannot bind it in the relation operation, so we throw an exception here\n                // we decided to remove this error because it brings complications when saving object with non-saved entities\n                // if (!relatedEntitySubject)\n                //     throw new Error(`Many-to-many relation \"${relation.entityMetadata.name}.${relation.propertyPath}\" contains ` +\n                //         `entities which do not exist in the database yet, thus they cannot be bind in the database. ` +\n                //         `Please setup cascade insertion or save entities before binding it.`);\n                if (!relatedEntitySubject)\n                    return;\n            }\n            // try to find related entity in the database\n            // by example: find post's category in the database post's categories\n            var relatedEntityExistInDatabase = databaseRelatedEntityIds.find(function (databaseRelatedEntityRelationId) {\n                return EntityMetadata_1.EntityMetadata.compareIds(databaseRelatedEntityRelationId, relatedEntityRelationIdMap);\n            });\n            // if entity is found then don't do anything - it means binding in junction table already exist, we don't need to add anything\n            if (relatedEntityExistInDatabase)\n                return;\n            var ownerValue = relation.isOwning ? subject : (relatedEntitySubject || relatedEntity); // by example: ownerEntityMap is post from subject here\n            var inverseValue = relation.isOwning ? (relatedEntitySubject || relatedEntity) : subject; // by example: inverseEntityMap is category from categories array here\n            // create a new subject for insert operation of junction rows\n            var junctionSubject = new Subject_1.Subject({\n                metadata: relation.junctionEntityMetadata,\n                parentSubject: subject,\n                canBeInserted: true,\n            });\n            _this.subjects.push(junctionSubject);\n            relation.junctionEntityMetadata.ownerColumns.forEach(function (column) {\n                junctionSubject.changeMaps.push({\n                    column: column,\n                    value: ownerValue,\n                });\n            });\n            relation.junctionEntityMetadata.inverseColumns.forEach(function (column) {\n                junctionSubject.changeMaps.push({\n                    column: column,\n                    value: inverseValue,\n                });\n            });\n        });\n        // get all inverse entities relation ids that are \"bind\" to the currently persisted entity\n        var changedInverseEntityRelationIds = [];\n        relatedEntities.forEach(function (relatedEntity) {\n            // relation.inverseEntityMetadata!.getEntityIdMap(relatedEntity)\n            var relatedEntityRelationIdMap = relation.inverseEntityMetadata.getEntityIdMap(relatedEntity);\n            // try to find a subject of this related entity, maybe it was loaded or was marked for persistence\n            var relatedEntitySubject = _this.subjects.find(function (subject) {\n                return subject.entity === relatedEntity;\n            });\n            // if subject with entity was found take subject identifier as relation id map since it may contain extra properties resolved\n            if (relatedEntitySubject)\n                relatedEntityRelationIdMap = relatedEntitySubject.identifier;\n            if (relatedEntityRelationIdMap !== undefined && relatedEntityRelationIdMap !== null)\n                changedInverseEntityRelationIds.push(relatedEntityRelationIdMap);\n        });\n        // now from all entities in the persisted entity find only those which aren't found in the db\n        var removedJunctionEntityIds = databaseRelatedEntityIds.filter(function (existRelationId) {\n            return !changedInverseEntityRelationIds.find(function (changedRelationId) {\n                return EntityMetadata_1.EntityMetadata.compareIds(changedRelationId, existRelationId);\n            });\n        });\n        // finally create a new junction remove operations for missing related entities\n        removedJunctionEntityIds.forEach(function (removedEntityRelationId) {\n            var junctionSubject = new Subject_1.Subject({\n                metadata: relation.junctionEntityMetadata,\n                parentSubject: subject,\n                mustBeRemoved: true,\n                identifier: _this.buildJunctionIdentifier(subject, relation, removedEntityRelationId)\n            });\n            _this.subjects.push(junctionSubject);\n        });\n    };\n    /**\n     * Creates identifiers for junction table.\n     * Example: { postId: 1, categoryId: 2 }\n     */\n    ManyToManySubjectBuilder.prototype.buildJunctionIdentifier = function (subject, relation, relationId) {\n        var ownerEntityMap = relation.isOwning ? subject.entity : relationId;\n        var inverseEntityMap = relation.isOwning ? relationId : subject.entity;\n        var identifier = {};\n        relation.junctionEntityMetadata.ownerColumns.forEach(function (column) {\n            OrmUtils_1.OrmUtils.mergeDeep(identifier, column.createValueMap(column.referencedColumn.getEntityValue(ownerEntityMap)));\n        });\n        relation.junctionEntityMetadata.inverseColumns.forEach(function (column) {\n            OrmUtils_1.OrmUtils.mergeDeep(identifier, column.createValueMap(column.referencedColumn.getEntityValue(inverseEntityMap)));\n        });\n        return identifier;\n    };\n    return ManyToManySubjectBuilder;\n}());\nexports.ManyToManySubjectBuilder = ManyToManySubjectBuilder;\n\n//# sourceMappingURL=ManyToManySubjectBuilder.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/persistence/subject-builder/ManyToManySubjectBuilder.js?");

/***/ }),

/***/ "./node_modules/typeorm/persistence/subject-builder/OneToManySubjectBuilder.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/typeorm/persistence/subject-builder/OneToManySubjectBuilder.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Subject_1 = __webpack_require__(/*! ../Subject */ \"./node_modules/typeorm/persistence/Subject.js\");\nvar OrmUtils_1 = __webpack_require__(/*! ../../util/OrmUtils */ \"./node_modules/typeorm/util/OrmUtils.js\");\nvar EntityMetadata_1 = __webpack_require__(/*! ../../metadata/EntityMetadata */ \"./node_modules/typeorm/metadata/EntityMetadata.js\");\n/**\n * Builds operations needs to be executed for one-to-many relations of the given subjects.\n *\n * by example: post contains one-to-many relation with category in the property called \"categories\", e.g.\n *             @OneToMany(type => Category, category => category.post) categories: Category[]\n *             If user adds categories into the post and saves post we need to bind them.\n *             This operation requires updation of category table since its owner of the relation and contains a join column.\n *\n * note: this class shares lot of things with OneToOneInverseSideOperationBuilder, so when you change this class\n *       make sure to reflect changes there as well.\n */\nvar OneToManySubjectBuilder = /** @class */ (function () {\n    // ---------------------------------------------------------------------\n    // Constructor\n    // ---------------------------------------------------------------------\n    function OneToManySubjectBuilder(subjects) {\n        this.subjects = subjects;\n    }\n    // ---------------------------------------------------------------------\n    // Public Methods\n    // ---------------------------------------------------------------------\n    /**\n     * Builds all required operations.\n     */\n    OneToManySubjectBuilder.prototype.build = function () {\n        var _this = this;\n        this.subjects.forEach(function (subject) {\n            subject.metadata.oneToManyRelations.forEach(function (relation) {\n                // skip relations for which persistence is disabled\n                if (relation.persistenceEnabled === false)\n                    return;\n                _this.buildForSubjectRelation(subject, relation);\n            });\n        });\n    };\n    // ---------------------------------------------------------------------\n    // Protected Methods\n    // ---------------------------------------------------------------------\n    /**\n     * Builds operations for a given subject and relation.\n     *\n     * by example: subject is \"post\" entity we are saving here and relation is \"categories\" inside it here.\n     */\n    OneToManySubjectBuilder.prototype.buildForSubjectRelation = function (subject, relation) {\n        var _this = this;\n        // prepare objects (relation id maps) for the database entity\n        // note: subject.databaseEntity contains relations with loaded relation ids only\n        // by example: since subject is a post, we are expecting to get all post's categories saved in the database here,\n        //             particularly their relation ids, e.g. category ids stored in the database\n        var relatedEntityDatabaseRelationIds = [];\n        if (subject.databaseEntity) { // related entities in the database can exist only if this entity (post) is saved\n            relatedEntityDatabaseRelationIds = relation.getEntityValue(subject.databaseEntity);\n        }\n        // get related entities of persisted entity\n        // by example: get categories from the passed to persist post entity\n        var relatedEntities = relation.getEntityValue(subject.entity);\n        if (relatedEntities === null) // we treat relations set to null as removed, so we don't skip it\n            relatedEntities = [];\n        if (relatedEntities === undefined) // if relation is undefined then nothing to update\n            return;\n        // extract only relation ids from the related entities, since we only need them for comparision\n        // by example: extract from categories only relation ids (category id, or let's say category title, depend on join column options)\n        var relatedPersistedEntityRelationIds = [];\n        relatedEntities.forEach(function (relatedEntity) {\n            var relationIdMap = relation.inverseEntityMetadata.getEntityIdMap(relatedEntity); // by example: relationIdMap is category.id map here, e.g. { id: ... }\n            // try to find a subject of this related entity, maybe it was loaded or was marked for persistence\n            var relatedEntitySubject = _this.subjects.find(function (subject) {\n                return subject.entity === relatedEntity;\n            });\n            // if subject with entity was found take subject identifier as relation id map since it may contain extra properties resolved\n            if (relatedEntitySubject)\n                relationIdMap = relatedEntitySubject.identifier;\n            // if relationIdMap is undefined then it means user binds object which is not saved in the database yet\n            // by example: if post contains categories which does not have ids yet (because they are new)\n            //             it means they are always newly inserted and relation update operation always must be created for them\n            //             it does not make sense to perform difference operation for them for both add and remove actions\n            if (!relationIdMap) {\n                // we decided to remove this error because it brings complications when saving object with non-saved entities\n                // if (!relatedEntitySubject)\n                //     throw new Error(`One-to-many relation \"${relation.entityMetadata.name}.${relation.propertyPath}\" contains ` +\n                //         `entities which do not exist in the database yet, thus they cannot be bind in the database. ` +\n                //         `Please setup cascade insertion or save entities before binding it.`);\n                if (!relatedEntitySubject)\n                    return;\n                // okay, so related subject exist and its marked for insertion, then add a new change map\n                // by example: this will tell category to insert into its post relation our post we are working with\n                //             relatedEntitySubject is newly inserted CategorySubject\n                //             relation.inverseRelation is ManyToOne relation inside Category\n                //             subject is Post needs to be inserted into Category\n                relatedEntitySubject.changeMaps.push({\n                    relation: relation.inverseRelation,\n                    value: subject\n                });\n                return;\n            }\n            // check if this binding really exist in the database\n            // by example: find our category if its already bind in the database\n            var relationIdInDatabaseSubjectRelation = relatedEntityDatabaseRelationIds.find(function (relatedDatabaseEntityRelationId) {\n                return OrmUtils_1.OrmUtils.deepCompare(relationIdMap, relatedDatabaseEntityRelationId);\n            });\n            // if relationIdMap DOES NOT exist in the subject's relation in the database it means its a new relation and we need to \"bind\" them\n            // by example: this will tell category to insert into its post relation our post we are working with\n            //             relatedEntitySubject is newly inserted CategorySubject\n            //             relation.inverseRelation is ManyToOne relation inside Category\n            //             subject is Post needs to be inserted into Category\n            if (!relationIdInDatabaseSubjectRelation) {\n                // if there is no relatedEntitySubject then it means \"category\" wasn't persisted,\n                // but since we are going to update \"category\" table (since its an owning side of relation with join column)\n                // we create a new subject here:\n                if (!relatedEntitySubject) {\n                    relatedEntitySubject = new Subject_1.Subject({\n                        metadata: relation.inverseEntityMetadata,\n                        parentSubject: subject,\n                        canBeUpdated: true,\n                        identifier: relationIdMap\n                    });\n                    _this.subjects.push(relatedEntitySubject);\n                }\n                relatedEntitySubject.changeMaps.push({\n                    relation: relation.inverseRelation,\n                    value: subject\n                });\n            }\n            // if related entity has relation id then we add it to the list of relation ids\n            // this list will be used later to compare with database relation ids to find a difference\n            // what exist in this array and does not exist in the database are newly inserted relations\n            // what does not exist in this array, but exist in the database are removed relations\n            // removed relations are set to null from inverse side of relation\n            relatedPersistedEntityRelationIds.push(relationIdMap);\n        });\n        // find what related entities were added and what were removed based on difference between what we save and what database has\n        EntityMetadata_1.EntityMetadata\n            .difference(relatedEntityDatabaseRelationIds, relatedPersistedEntityRelationIds)\n            .forEach(function (removedRelatedEntityRelationId) {\n            // todo: probably we can improve this in the future by finding entity with column those values,\n            // todo: maybe it was already in persistence process. This is possible due to unique requirements of join columns\n            // we create a new subject which operations will be executed in subject operation executor\n            var removedRelatedEntitySubject = new Subject_1.Subject({\n                metadata: relation.inverseEntityMetadata,\n                parentSubject: subject,\n                canBeUpdated: true,\n                identifier: removedRelatedEntityRelationId,\n                changeMaps: [{\n                        relation: relation.inverseRelation,\n                        value: null\n                    }]\n            });\n            _this.subjects.push(removedRelatedEntitySubject);\n        });\n    };\n    return OneToManySubjectBuilder;\n}());\nexports.OneToManySubjectBuilder = OneToManySubjectBuilder;\n\n//# sourceMappingURL=OneToManySubjectBuilder.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/persistence/subject-builder/OneToManySubjectBuilder.js?");

/***/ }),

/***/ "./node_modules/typeorm/persistence/subject-builder/OneToOneInverseSideSubjectBuilder.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/typeorm/persistence/subject-builder/OneToOneInverseSideSubjectBuilder.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Subject_1 = __webpack_require__(/*! ../Subject */ \"./node_modules/typeorm/persistence/Subject.js\");\nvar OrmUtils_1 = __webpack_require__(/*! ../../util/OrmUtils */ \"./node_modules/typeorm/util/OrmUtils.js\");\n/**\n * Builds operations needs to be executed for one-to-one non-owner relations of the given subjects.\n *\n * by example: post contains one-to-one non-owner relation with category in the property called \"category\", e.g.\n *             @OneToOne(type => Category, category => category.post) category: Category\n *             If user sets a category into the post and saves post we need to bind them.\n *             This operation requires updation of category table since its owner of the relation and contains a join column.\n *\n * note: this class shares lot of things with OneToManyUpdateBuilder, so when you change this class\n *       make sure to reflect changes there as well.\n */\nvar OneToOneInverseSideSubjectBuilder = /** @class */ (function () {\n    // ---------------------------------------------------------------------\n    // Constructor\n    // ---------------------------------------------------------------------\n    function OneToOneInverseSideSubjectBuilder(subjects) {\n        this.subjects = subjects;\n    }\n    // ---------------------------------------------------------------------\n    // Public Methods\n    // ---------------------------------------------------------------------\n    /**\n     * Builds all required operations.\n     */\n    OneToOneInverseSideSubjectBuilder.prototype.build = function () {\n        var _this = this;\n        this.subjects.forEach(function (subject) {\n            subject.metadata.oneToOneRelations.forEach(function (relation) {\n                // we don't need owning relations, this operation is only for inverse side of one-to-one relations\n                // skip relations for which persistence is disabled\n                if (relation.isOwning || relation.persistenceEnabled === false)\n                    return;\n                _this.buildForSubjectRelation(subject, relation);\n            });\n        });\n    };\n    // ---------------------------------------------------------------------\n    // Protected Methods\n    // ---------------------------------------------------------------------\n    /**\n     * Builds operations for a given subject and relation.\n     *\n     * by example: subject is \"post\" entity we are saving here and relation is \"category\" inside it here.\n     */\n    OneToOneInverseSideSubjectBuilder.prototype.buildForSubjectRelation = function (subject, relation) {\n        // prepare objects (relation id map) for the database entity\n        // note: subject.databaseEntity contains relation with loaded relation id only (id map)\n        // by example: since subject is a post, we are expecting to get post's category saved in the database here,\n        //             particularly its relation id, e.g. category id stored in the database\n        var relatedEntityDatabaseRelationId = undefined;\n        if (subject.databaseEntity) // related entity in the database can exist only if this entity (post) is saved\n            relatedEntityDatabaseRelationId = relation.getEntityValue(subject.databaseEntity);\n        // get related entities of persisted entity\n        // by example: get category from the passed to persist post entity\n        var relatedEntity = relation.getEntityValue(subject.entity); // by example: relatedEntity is a category here\n        if (relatedEntity === undefined) // if relation is undefined then nothing to update\n            return;\n        // if related entity is null then we need to check if there a bind in the database and unset it\n        // if there is no bind in the entity then we don't need to do anything\n        // by example: if post.category = null and category has this post in the database then we unset it\n        if (relatedEntity === null) {\n            // it makes sense to update database only there is a previously set value in the database\n            if (relatedEntityDatabaseRelationId) {\n                // todo: probably we can improve this in the future by finding entity with column those values,\n                // todo: maybe it was already in persistence process. This is possible due to unique requirements of join columns\n                // we create a new subject which operations will be executed in subject operation executor\n                var removedRelatedEntitySubject = new Subject_1.Subject({\n                    metadata: relation.inverseEntityMetadata,\n                    parentSubject: subject,\n                    canBeUpdated: true,\n                    identifier: relatedEntityDatabaseRelationId,\n                    changeMaps: [{\n                            relation: relation.inverseRelation,\n                            value: null\n                        }]\n                });\n                this.subjects.push(removedRelatedEntitySubject);\n            }\n            return;\n        } // else means entity is bind in the database\n        // extract only relation id from the related entities, since we only need it for comparision\n        // by example: extract from category only relation id (category id, or let's say category title, depend on join column options)\n        var relationIdMap = relation.inverseEntityMetadata.getEntityIdMap(relatedEntity); // by example: relationIdMap is category.id map here, e.g. { id: ... }\n        // try to find a subject of this related entity, maybe it was loaded or was marked for persistence\n        var relatedEntitySubject = this.subjects.find(function (operateSubject) {\n            return !!operateSubject.entity && operateSubject.entity === relatedEntity;\n        });\n        // if subject with entity was found take subject identifier as relation id map since it may contain extra properties resolved\n        if (relatedEntitySubject)\n            relationIdMap = relatedEntitySubject.identifier;\n        // if relationIdMap is undefined then it means user binds object which is not saved in the database yet\n        // by example: if post contains category which does not have id(s) yet (because its a new category)\n        //             it means its always newly inserted and relation update operation always must be created for it\n        //             it does not make sense to perform difference operation for it for both add and remove actions\n        if (!relationIdMap) {\n            // we decided to remove this error because it brings complications when saving object with non-saved entities\n            // if related entity does not have a subject then it means user tries to bind entity which wasn't saved\n            // in this persistence because he didn't pass this entity for save or he did not set cascades\n            // but without entity being inserted we cannot bind it in the relation operation, so we throw an exception here\n            // if (!relatedEntitySubject)\n            //     throw new Error(`One-to-one inverse relation \"${relation.entityMetadata.name}.${relation.propertyPath}\" contains ` +\n            //         `entity which does not exist in the database yet, thus cannot be bind in the database. ` +\n            //         `Please setup cascade insertion or save entity before binding it.`);\n            if (!relatedEntitySubject)\n                return;\n            // okay, so related subject exist and its marked for insertion, then add a new change map\n            // by example: this will tell category to insert into its post relation our post we are working with\n            //             relatedEntitySubject is newly inserted CategorySubject\n            //             relation.inverseRelation is OneToOne owner relation inside Category\n            //             subject is Post needs to be inserted into Category\n            relatedEntitySubject.changeMaps.push({\n                relation: relation.inverseRelation,\n                value: subject\n            });\n        }\n        // check if this binding really exist in the database\n        // by example: find our post if its already bind to category in the database and its not equal to what user tries to set\n        var areRelatedIdEqualWithDatabase = relatedEntityDatabaseRelationId && OrmUtils_1.OrmUtils.deepCompare(relationIdMap, relatedEntityDatabaseRelationId);\n        // if they aren't equal it means its a new relation and we need to \"bind\" them\n        // by example: this will tell category to insert into its post relation our post we are working with\n        //             relatedEntitySubject is newly inserted CategorySubject\n        //             relation.inverseRelation is ManyToOne relation inside Category\n        //             subject is Post needs to be inserted into Category\n        if (!areRelatedIdEqualWithDatabase) {\n            // if there is no relatedEntitySubject then it means \"category\" wasn't persisted,\n            // but since we are going to update \"category\" table (since its an owning side of relation with join column)\n            // we create a new subject here:\n            if (!relatedEntitySubject) {\n                relatedEntitySubject = new Subject_1.Subject({\n                    metadata: relation.inverseEntityMetadata,\n                    canBeUpdated: true,\n                    identifier: relationIdMap\n                });\n                this.subjects.push(relatedEntitySubject);\n            }\n            relatedEntitySubject.changeMaps.push({\n                relation: relation.inverseRelation,\n                value: subject\n            });\n        }\n    };\n    return OneToOneInverseSideSubjectBuilder;\n}());\nexports.OneToOneInverseSideSubjectBuilder = OneToOneInverseSideSubjectBuilder;\n\n//# sourceMappingURL=OneToOneInverseSideSubjectBuilder.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/persistence/subject-builder/OneToOneInverseSideSubjectBuilder.js?");

/***/ }),

/***/ "./node_modules/typeorm/persistence/tree/ClosureSubjectExecutor.js":
/*!*************************************************************************!*\
  !*** ./node_modules/typeorm/persistence/tree/ClosureSubjectExecutor.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar CannotAttachTreeChildrenEntityError_1 = __webpack_require__(/*! ../../error/CannotAttachTreeChildrenEntityError */ \"./node_modules/typeorm/error/CannotAttachTreeChildrenEntityError.js\");\n/**\n * Executes subject operations for closure entities.\n */\nvar ClosureSubjectExecutor = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function ClosureSubjectExecutor(queryRunner) {\n        this.queryRunner = queryRunner;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Removes all children of the given subject's entity.\n\n    async deleteChildrenOf(subject: Subject) {\n        // const relationValue = subject.metadata.treeParentRelation.getEntityValue(subject.databaseEntity);\n        // console.log(\"relationValue: \", relationValue);\n        // this.queryRunner.manager\n        //     .createQueryBuilder()\n        //     .from(subject.metadata.closureJunctionTable.target, \"tree\")\n        //     .where(\"tree.\");\n    }*/\n    /**\n     * Executes operations when subject is being inserted.\n     */\n    ClosureSubjectExecutor.prototype.insert = function (subject) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var closureJunctionInsertMap, parent, escape_1, tableName, ancestorColumnNames, descendantColumnNames, firstQueryParameters_1, childEntityIdValues_1, childEntityIds1, whereCondition;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        closureJunctionInsertMap = {};\n                        subject.metadata.closureJunctionTable.ancestorColumns.forEach(function (column) {\n                            closureJunctionInsertMap[column.databaseName] = subject.identifier;\n                        });\n                        subject.metadata.closureJunctionTable.descendantColumns.forEach(function (column) {\n                            closureJunctionInsertMap[column.databaseName] = subject.identifier;\n                        });\n                        // insert values into the closure junction table\n                        return [4 /*yield*/, this.queryRunner\n                                .manager\n                                .createQueryBuilder()\n                                .insert()\n                                .into(subject.metadata.closureJunctionTable.tablePath)\n                                .values(closureJunctionInsertMap)\n                                .updateEntity(false)\n                                .callListeners(false)\n                                .execute()];\n                    case 1:\n                        // insert values into the closure junction table\n                        _a.sent();\n                        parent = subject.metadata.treeParentRelation.getEntityValue(subject.entity);\n                        if (!parent && subject.parentSubject && subject.parentSubject.entity) // if entity was attached via children\n                            parent = subject.parentSubject.insertedValueSet ? subject.parentSubject.insertedValueSet : subject.parentSubject.entity;\n                        if (!parent) return [3 /*break*/, 3];\n                        escape_1 = function (alias) { return _this.queryRunner.connection.driver.escape(alias); };\n                        tableName = this.getTableName(subject.metadata.closureJunctionTable.tablePath);\n                        ancestorColumnNames = subject.metadata.closureJunctionTable.ancestorColumns.map(function (column) {\n                            return escape_1(column.databaseName);\n                        });\n                        descendantColumnNames = subject.metadata.closureJunctionTable.descendantColumns.map(function (column) {\n                            return escape_1(column.databaseName);\n                        });\n                        firstQueryParameters_1 = [];\n                        childEntityIdValues_1 = subject.metadata.primaryColumns.map(function (column) { return column.getEntityValue(subject.insertedValueSet); });\n                        childEntityIds1 = subject.metadata.primaryColumns.map(function (column, index) {\n                            firstQueryParameters_1.push(childEntityIdValues_1[index]);\n                            return _this.queryRunner.connection.driver.createParameter(\"child_entity_\" + column.databaseName, firstQueryParameters_1.length - 1);\n                        });\n                        whereCondition = subject.metadata.primaryColumns.map(function (column) {\n                            var columnName = escape_1(column.databaseName + \"_descendant\");\n                            var parentId = column.getEntityValue(parent);\n                            if (!parentId)\n                                throw new CannotAttachTreeChildrenEntityError_1.CannotAttachTreeChildrenEntityError(subject.metadata.name);\n                            firstQueryParameters_1.push(parentId);\n                            var parameterName = _this.queryRunner.connection.driver.createParameter(\"parent_entity_\" + column.databaseName, firstQueryParameters_1.length - 1);\n                            return columnName + \" = \" + parameterName;\n                        }).join(\", \");\n                        return [4 /*yield*/, this.queryRunner.query(\"INSERT INTO \" + tableName + \" (\" + __spread(ancestorColumnNames, descendantColumnNames).join(\", \") + \") \" +\n                                (\"SELECT \" + ancestorColumnNames.join(\", \") + \", \" + childEntityIds1.join(\", \") + \" FROM \" + tableName + \" WHERE \" + whereCondition), firstQueryParameters_1)];\n                    case 2:\n                        _a.sent();\n                        _a.label = 3;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Gets escaped table name with schema name if SqlServer or Postgres driver used with custom\n     * schema name, otherwise returns escaped table name.\n     */\n    ClosureSubjectExecutor.prototype.getTableName = function (tablePath) {\n        var _this = this;\n        return tablePath.split(\".\")\n            .map(function (i) {\n            // this condition need because in SQL Server driver when custom database name was specified and schema name was not, we got `dbName..tableName` string, and doesn't need to escape middle empty string\n            if (i === \"\")\n                return i;\n            return _this.queryRunner.connection.driver.escape(i);\n        }).join(\".\");\n    };\n    return ClosureSubjectExecutor;\n}());\nexports.ClosureSubjectExecutor = ClosureSubjectExecutor;\n\n//# sourceMappingURL=ClosureSubjectExecutor.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/persistence/tree/ClosureSubjectExecutor.js?");

/***/ }),

/***/ "./node_modules/typeorm/persistence/tree/MaterializedPathSubjectExecutor.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/typeorm/persistence/tree/MaterializedPathSubjectExecutor.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Executes subject operations for materialized-path tree entities.\n */\nvar MaterializedPathSubjectExecutor = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function MaterializedPathSubjectExecutor(queryRunner) {\n        this.queryRunner = queryRunner;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Executes operations when subject is being inserted.\n     */\n    MaterializedPathSubjectExecutor.prototype.insert = function (subject) {\n        return __awaiter(this, void 0, void 0, function () {\n            var parent, parentId, parentPath, insertedEntityId, _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        parent = subject.metadata.treeParentRelation.getEntityValue(subject.entity);\n                        if (!parent && subject.parentSubject && subject.parentSubject.entity) // if entity was attached via children\n                            parent = subject.parentSubject.insertedValueSet ? subject.parentSubject.insertedValueSet : subject.parentSubject.entity;\n                        parentId = subject.metadata.getEntityIdMap(parent);\n                        parentPath = \"\";\n                        if (!parentId) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.queryRunner.manager\n                                .createQueryBuilder()\n                                .select(subject.metadata.targetName + \".\" + subject.metadata.materializedPathColumn.propertyPath, \"path\")\n                                .from(subject.metadata.target, subject.metadata.targetName)\n                                .whereInIds(parentId)\n                                .getRawOne()\n                                .then(function (result) { return result ? result[\"path\"] : undefined; })];\n                    case 1:\n                        parentPath = _b.sent();\n                        _b.label = 2;\n                    case 2:\n                        insertedEntityId = subject.metadata.treeParentRelation.joinColumns.map(function (joinColumn) {\n                            return joinColumn.referencedColumn.getEntityValue(subject.insertedValueSet);\n                        }).join(\"_\");\n                        return [4 /*yield*/, this.queryRunner.manager\n                                .createQueryBuilder()\n                                .update(subject.metadata.target)\n                                .set((_a = {},\n                                _a[subject.metadata.materializedPathColumn.propertyPath] = parentPath + insertedEntityId + \".\",\n                                _a))\n                                .where(subject.identifier)\n                                .execute()];\n                    case 3:\n                        _b.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return MaterializedPathSubjectExecutor;\n}());\nexports.MaterializedPathSubjectExecutor = MaterializedPathSubjectExecutor;\n\n//# sourceMappingURL=MaterializedPathSubjectExecutor.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/persistence/tree/MaterializedPathSubjectExecutor.js?");

/***/ }),

/***/ "./node_modules/typeorm/persistence/tree/NestedSetSubjectExecutor.js":
/*!***************************************************************************!*\
  !*** ./node_modules/typeorm/persistence/tree/NestedSetSubjectExecutor.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar OrmUtils_1 = __webpack_require__(/*! ../../util/OrmUtils */ \"./node_modules/typeorm/util/OrmUtils.js\");\n/**\n * Executes subject operations for nested set tree entities.\n */\nvar NestedSetSubjectExecutor = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function NestedSetSubjectExecutor(queryRunner) {\n        this.queryRunner = queryRunner;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Executes operations when subject is being inserted.\n     */\n    NestedSetSubjectExecutor.prototype.insert = function (subject) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var escape, tableName, leftColumnName, rightColumnName, parent, parentId, parentNsRight;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        escape = function (alias) { return _this.queryRunner.connection.driver.escape(alias); };\n                        tableName = escape(subject.metadata.tablePath);\n                        leftColumnName = escape(subject.metadata.nestedSetLeftColumn.databaseName);\n                        rightColumnName = escape(subject.metadata.nestedSetRightColumn.databaseName);\n                        parent = subject.metadata.treeParentRelation.getEntityValue(subject.entity);\n                        if (!parent && subject.parentSubject && subject.parentSubject.entity) // if entity was attached via children\n                            parent = subject.parentSubject.insertedValueSet ? subject.parentSubject.insertedValueSet : subject.parentSubject.entity;\n                        parentId = subject.metadata.getEntityIdMap(parent);\n                        parentNsRight = undefined;\n                        if (!parentId) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.queryRunner.manager\n                                .createQueryBuilder()\n                                .select(subject.metadata.targetName + \".\" + subject.metadata.nestedSetRightColumn.propertyPath, \"right\")\n                                .from(subject.metadata.target, subject.metadata.targetName)\n                                .whereInIds(parentId)\n                                .getRawOne()\n                                .then(function (result) { return result ? result[\"right\"] : undefined; })];\n                    case 1:\n                        parentNsRight = _a.sent();\n                        _a.label = 2;\n                    case 2:\n                        if (!(parentNsRight !== undefined)) return [3 /*break*/, 4];\n                        return [4 /*yield*/, this.queryRunner.query(\"UPDATE \" + tableName + \" SET \" +\n                                (leftColumnName + \" = CASE WHEN \" + leftColumnName + \" > \" + parentNsRight + \" THEN \" + leftColumnName + \" + 2 ELSE \" + leftColumnName + \" END,\") +\n                                (rightColumnName + \" = \" + rightColumnName + \" + 2 \") +\n                                (\"WHERE \" + rightColumnName + \" >= \" + parentNsRight))];\n                    case 3:\n                        _a.sent();\n                        OrmUtils_1.OrmUtils.mergeDeep(subject.insertedValueSet, subject.metadata.nestedSetLeftColumn.createValueMap(parentNsRight), subject.metadata.nestedSetRightColumn.createValueMap(parentNsRight + 1));\n                        return [3 /*break*/, 5];\n                    case 4:\n                        OrmUtils_1.OrmUtils.mergeDeep(subject.insertedValueSet, subject.metadata.nestedSetLeftColumn.createValueMap(1), subject.metadata.nestedSetRightColumn.createValueMap(2));\n                        _a.label = 5;\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return NestedSetSubjectExecutor;\n}());\nexports.NestedSetSubjectExecutor = NestedSetSubjectExecutor;\n\n//# sourceMappingURL=NestedSetSubjectExecutor.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/persistence/tree/NestedSetSubjectExecutor.js?");

/***/ }),

/***/ "./node_modules/typeorm/platform sync recursive":
/*!********************************************!*\
  !*** ./node_modules/typeorm/platform sync ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"./node_modules/typeorm/platform sync recursive\";\n\n//# sourceURL=webpack:///./node_modules/typeorm/platform_sync?");

/***/ }),

/***/ "./node_modules/typeorm/platform/PlatformTools.js":
/*!********************************************************!*\
  !*** ./node_modules/typeorm/platform/PlatformTools.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global, process) {\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar path = __webpack_require__(/*! path */ \"./node_modules/path-browserify/index.js\");\nvar fs = __webpack_require__(/*! fs */ \"./node_modules/node-libs-browser/mock/empty.js\");\nvar cli_highlight_1 = __webpack_require__(/*! cli-highlight */ \"./node_modules/cli-highlight/dist/index.js\");\nvar fs_1 = __webpack_require__(/*! fs */ \"./node_modules/node-libs-browser/mock/empty.js\");\nexports.ReadStream = fs_1.ReadStream;\nvar events_1 = __webpack_require__(/*! events */ \"./node_modules/events/events.js\");\nexports.EventEmitter = events_1.EventEmitter;\nvar stream_1 = __webpack_require__(/*! stream */ \"./node_modules/stream-browserify/index.js\");\nexports.Readable = stream_1.Readable;\nexports.Writable = stream_1.Writable;\nvar chalk = __webpack_require__(/*! chalk */ \"./node_modules/chalk/index.js\");\n/**\n * Platform-specific tools.\n */\nvar PlatformTools = /** @class */ (function () {\n    function PlatformTools() {\n    }\n    /**\n     * Gets global variable where global stuff can be stored.\n     */\n    PlatformTools.getGlobalVariable = function () {\n        return global;\n    };\n    /**\n     * Loads (\"require\"-s) given file or package.\n     * This operation only supports on node platform\n     */\n    PlatformTools.load = function (name) {\n        // if name is not absolute or relative, then try to load package from the node_modules of the directory we are currently in\n        // this is useful when we are using typeorm package globally installed and it accesses drivers\n        // that are not installed globally\n        try {\n            // switch case to explicit require statements for webpack compatibility.\n            switch (name) {\n                /**\n                * mongodb\n                */\n                case \"mongodb\":\n                    return __webpack_require__(!(function webpackMissingModule() { var e = new Error(\"Cannot find module 'mongodb'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));\n                /**\n                * mysql\n                */\n                case \"mysql\":\n                    return __webpack_require__(!(function webpackMissingModule() { var e = new Error(\"Cannot find module 'mysql'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));\n                case \"mysql2\":\n                    return __webpack_require__(!(function webpackMissingModule() { var e = new Error(\"Cannot find module 'mysql2'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));\n                /**\n                * oracle\n                */\n                case \"oracledb\":\n                    return __webpack_require__(!(function webpackMissingModule() { var e = new Error(\"Cannot find module 'oracledb'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));\n                /**\n                * postgres\n                */\n                case \"pg\":\n                    return __webpack_require__(!(function webpackMissingModule() { var e = new Error(\"Cannot find module 'pg'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));\n                case \"pg-native\":\n                    return __webpack_require__(!(function webpackMissingModule() { var e = new Error(\"Cannot find module 'pg-native'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));\n                case \"pg-query-stream\":\n                    return __webpack_require__(!(function webpackMissingModule() { var e = new Error(\"Cannot find module 'pg-query-stream'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));\n                /**\n                * redis\n                */\n                case \"redis\":\n                    return __webpack_require__(!(function webpackMissingModule() { var e = new Error(\"Cannot find module 'redis'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));\n                /**\n                * sqlite\n                */\n                case \"sqlite3\":\n                    return __webpack_require__(!(function webpackMissingModule() { var e = new Error(\"Cannot find module 'sqlite3'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));\n                /**\n                * sql.js\n                */\n                case \"sql.js\":\n                    return __webpack_require__(!(function webpackMissingModule() { var e = new Error(\"Cannot find module 'sql.js'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));\n                /**\n                * sqlserver\n                */\n                case \"mssql\":\n                    return __webpack_require__(!(function webpackMissingModule() { var e = new Error(\"Cannot find module 'mssql'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));\n                /**\n                * other modules\n                */\n                case \"mkdirp\":\n                    return __webpack_require__(/*! mkdirp */ \"./node_modules/mkdirp/index.js\");\n                case \"path\":\n                    return __webpack_require__(/*! path */ \"./node_modules/path-browserify/index.js\");\n                case \"debug\":\n                    return __webpack_require__(/*! debug */ \"./node_modules/debug/src/browser.js\");\n                /**\n                * default\n                */\n                default:\n                    return __webpack_require__(\"./node_modules/typeorm/platform sync recursive\")(name);\n            }\n        }\n        catch (err) {\n            if (!path.isAbsolute(name) && name.substr(0, 2) !== \"./\" && name.substr(0, 3) !== \"../\") {\n                return __webpack_require__(\"./node_modules/typeorm/platform sync recursive\")(path.resolve(process.cwd() + \"/node_modules/\" + name));\n            }\n            throw err;\n        }\n    };\n    /**\n     * Normalizes given path. Does \"path.normalize\".\n     */\n    PlatformTools.pathNormalize = function (pathStr) {\n        return path.normalize(pathStr);\n    };\n    /**\n     * Gets file extension. Does \"path.extname\".\n     */\n    PlatformTools.pathExtname = function (pathStr) {\n        return path.extname(pathStr);\n    };\n    /**\n     * Resolved given path. Does \"path.resolve\".\n     */\n    PlatformTools.pathResolve = function (pathStr) {\n        return path.resolve(pathStr);\n    };\n    /**\n     * Synchronously checks if file exist. Does \"fs.existsSync\".\n     */\n    PlatformTools.fileExist = function (pathStr) {\n        return fs.existsSync(pathStr);\n    };\n    PlatformTools.readFileSync = function (filename) {\n        return fs.readFileSync(filename);\n    };\n    PlatformTools.appendFileSync = function (filename, data) {\n        fs.appendFileSync(filename, data);\n    };\n    PlatformTools.writeFile = function (path, data) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, new Promise(function (ok, fail) {\n                        fs.writeFile(path, data, function (err) {\n                            if (err)\n                                fail(err);\n                            ok();\n                        });\n                    })];\n            });\n        });\n    };\n    /**\n     * Gets environment variable.\n     */\n    PlatformTools.getEnvVariable = function (name) {\n        return process.env[name];\n    };\n    /**\n     * Highlights sql string to be print in the console.\n     */\n    PlatformTools.highlightSql = function (sql) {\n        var theme = {\n            \"keyword\": chalk.blueBright,\n            \"literal\": chalk.blueBright,\n            \"string\": chalk.white,\n            \"type\": chalk.magentaBright,\n            \"built_in\": chalk.magentaBright,\n            \"comment\": chalk.gray,\n        };\n        return cli_highlight_1.highlight(sql, { theme: theme, language: \"sql\" });\n    };\n    /**\n     * Highlights json string to be print in the console.\n     */\n    PlatformTools.highlightJson = function (json) {\n        return cli_highlight_1.highlight(json, { language: \"json\" });\n    };\n    /**\n     * Logging functions needed by AdvancedConsoleLogger\n     */\n    PlatformTools.logInfo = function (prefix, info) {\n        console.log(chalk.gray.underline(prefix), info);\n    };\n    PlatformTools.logError = function (prefix, error) {\n        console.log(chalk.underline.red(prefix), error);\n    };\n    PlatformTools.logWarn = function (prefix, warning) {\n        console.log(chalk.underline.yellow(prefix), warning);\n    };\n    PlatformTools.log = function (message) {\n        console.log(chalk.underline(message));\n    };\n    PlatformTools.warn = function (message) {\n        return chalk.yellow(message);\n    };\n    /**\n     * Type of the currently running platform.\n     */\n    PlatformTools.type = \"node\";\n    return PlatformTools;\n}());\nexports.PlatformTools = PlatformTools;\n\n//# sourceMappingURL=PlatformTools.js.map\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../../process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///./node_modules/typeorm/platform/PlatformTools.js?");

/***/ }),

/***/ "./node_modules/typeorm/query-builder/Alias.js":
/*!*****************************************************!*\
  !*** ./node_modules/typeorm/query-builder/Alias.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n */\nvar Alias = /** @class */ (function () {\n    function Alias(alias) {\n        Object.assign(this, alias || {});\n    }\n    Object.defineProperty(Alias.prototype, \"target\", {\n        get: function () {\n            return this.metadata.target;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Alias.prototype, \"hasMetadata\", {\n        get: function () {\n            return !!this._metadata;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Alias.prototype, \"metadata\", {\n        get: function () {\n            if (!this._metadata)\n                throw new Error(\"Cannot get entity metadata for the given alias \\\"\" + this.name + \"\\\"\");\n            return this._metadata;\n        },\n        set: function (metadata) {\n            this._metadata = metadata;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Alias;\n}());\nexports.Alias = Alias;\n\n//# sourceMappingURL=Alias.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/query-builder/Alias.js?");

/***/ }),

/***/ "./node_modules/typeorm/query-builder/Brackets.js":
/*!********************************************************!*\
  !*** ./node_modules/typeorm/query-builder/Brackets.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Syntax sugar.\n * Allows to use brackets in WHERE expressions for better syntax.\n */\nvar Brackets = /** @class */ (function () {\n    /**\n     * Given WHERE query builder that will build a WHERE expression that will be taken into brackets.\n     */\n    function Brackets(whereFactory) {\n        this.whereFactory = whereFactory;\n    }\n    return Brackets;\n}());\nexports.Brackets = Brackets;\n\n//# sourceMappingURL=Brackets.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/query-builder/Brackets.js?");

/***/ }),

/***/ "./node_modules/typeorm/query-builder/DeleteQueryBuilder.js":
/*!******************************************************************!*\
  !*** ./node_modules/typeorm/query-builder/DeleteQueryBuilder.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar QueryBuilder_1 = __webpack_require__(/*! ./QueryBuilder */ \"./node_modules/typeorm/query-builder/QueryBuilder.js\");\nvar SqlServerDriver_1 = __webpack_require__(/*! ../driver/sqlserver/SqlServerDriver */ \"./node_modules/typeorm/driver/sqlserver/SqlServerDriver.js\");\nvar PostgresDriver_1 = __webpack_require__(/*! ../driver/postgres/PostgresDriver */ \"./node_modules/typeorm/driver/postgres/PostgresDriver.js\");\nvar DeleteResult_1 = __webpack_require__(/*! ./result/DeleteResult */ \"./node_modules/typeorm/query-builder/result/DeleteResult.js\");\nvar ReturningStatementNotSupportedError_1 = __webpack_require__(/*! ../error/ReturningStatementNotSupportedError */ \"./node_modules/typeorm/error/ReturningStatementNotSupportedError.js\");\nvar SqljsDriver_1 = __webpack_require__(/*! ../driver/sqljs/SqljsDriver */ \"./node_modules/typeorm/driver/sqljs/SqljsDriver.js\");\nvar BroadcasterResult_1 = __webpack_require__(/*! ../subscriber/BroadcasterResult */ \"./node_modules/typeorm/subscriber/BroadcasterResult.js\");\nvar index_1 = __webpack_require__(/*! ../index */ \"./node_modules/typeorm/index.js\");\n/**\n * Allows to build complex sql queries in a fashion way and execute those queries.\n */\nvar DeleteQueryBuilder = /** @class */ (function (_super) {\n    __extends(DeleteQueryBuilder, _super);\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function DeleteQueryBuilder(connectionOrQueryBuilder, queryRunner) {\n        var _this = _super.call(this, connectionOrQueryBuilder, queryRunner) || this;\n        _this.expressionMap.aliasNamePrefixingEnabled = false;\n        return _this;\n    }\n    // -------------------------------------------------------------------------\n    // Public Implemented Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Gets generated sql query without parameters being replaced.\n     */\n    DeleteQueryBuilder.prototype.getQuery = function () {\n        var sql = this.createDeleteExpression();\n        return sql.trim();\n    };\n    /**\n     * Executes sql generated by query builder and returns raw database results.\n     */\n    DeleteQueryBuilder.prototype.execute = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, sql, parameters, queryRunner, transactionStartedByUs, broadcastResult, deleteResult, _b, broadcastResult, error_1, rollbackError_1;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        _a = __read(this.getQueryAndParameters(), 2), sql = _a[0], parameters = _a[1];\n                        queryRunner = this.obtainQueryRunner();\n                        transactionStartedByUs = false;\n                        _c.label = 1;\n                    case 1:\n                        _c.trys.push([1, 11, 16, 21]);\n                        if (!(this.expressionMap.useTransaction === true && queryRunner.isTransactionActive === false)) return [3 /*break*/, 3];\n                        return [4 /*yield*/, queryRunner.startTransaction()];\n                    case 2:\n                        _c.sent();\n                        transactionStartedByUs = true;\n                        _c.label = 3;\n                    case 3:\n                        if (!(this.expressionMap.callListeners === true && this.expressionMap.mainAlias.hasMetadata)) return [3 /*break*/, 5];\n                        broadcastResult = new BroadcasterResult_1.BroadcasterResult();\n                        queryRunner.broadcaster.broadcastBeforeRemoveEvent(broadcastResult, this.expressionMap.mainAlias.metadata);\n                        if (!(broadcastResult.promises.length > 0)) return [3 /*break*/, 5];\n                        return [4 /*yield*/, Promise.all(broadcastResult.promises)];\n                    case 4:\n                        _c.sent();\n                        _c.label = 5;\n                    case 5:\n                        deleteResult = new DeleteResult_1.DeleteResult();\n                        _b = deleteResult;\n                        return [4 /*yield*/, queryRunner.query(sql, parameters)];\n                    case 6:\n                        _b.raw = _c.sent();\n                        if (!(this.expressionMap.callListeners === true && this.expressionMap.mainAlias.hasMetadata)) return [3 /*break*/, 8];\n                        broadcastResult = new BroadcasterResult_1.BroadcasterResult();\n                        queryRunner.broadcaster.broadcastAfterRemoveEvent(broadcastResult, this.expressionMap.mainAlias.metadata);\n                        if (!(broadcastResult.promises.length > 0)) return [3 /*break*/, 8];\n                        return [4 /*yield*/, Promise.all(broadcastResult.promises)];\n                    case 7:\n                        _c.sent();\n                        _c.label = 8;\n                    case 8:\n                        if (!transactionStartedByUs) return [3 /*break*/, 10];\n                        return [4 /*yield*/, queryRunner.commitTransaction()];\n                    case 9:\n                        _c.sent();\n                        _c.label = 10;\n                    case 10: return [2 /*return*/, deleteResult];\n                    case 11:\n                        error_1 = _c.sent();\n                        if (!transactionStartedByUs) return [3 /*break*/, 15];\n                        _c.label = 12;\n                    case 12:\n                        _c.trys.push([12, 14, , 15]);\n                        return [4 /*yield*/, queryRunner.rollbackTransaction()];\n                    case 13:\n                        _c.sent();\n                        return [3 /*break*/, 15];\n                    case 14:\n                        rollbackError_1 = _c.sent();\n                        return [3 /*break*/, 15];\n                    case 15: throw error_1;\n                    case 16:\n                        if (!(queryRunner !== this.queryRunner)) return [3 /*break*/, 18];\n                        return [4 /*yield*/, queryRunner.release()];\n                    case 17:\n                        _c.sent();\n                        _c.label = 18;\n                    case 18:\n                        if (!(this.connection.driver instanceof SqljsDriver_1.SqljsDriver && !queryRunner.isTransactionActive)) return [3 /*break*/, 20];\n                        return [4 /*yield*/, this.connection.driver.autoSave()];\n                    case 19:\n                        _c.sent();\n                        _c.label = 20;\n                    case 20: return [7 /*endfinally*/];\n                    case 21: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Specifies FROM which entity's table select/update/delete will be executed.\n     * Also sets a main string alias of the selection data.\n     */\n    DeleteQueryBuilder.prototype.from = function (entityTarget, aliasName) {\n        entityTarget = entityTarget instanceof index_1.EntitySchema ? entityTarget.options.name : entityTarget;\n        var mainAlias = this.createFromAlias(entityTarget, aliasName);\n        this.expressionMap.setMainAlias(mainAlias);\n        return this;\n    };\n    /**\n     * Sets WHERE condition in the query builder.\n     * If you had previously WHERE expression defined,\n     * calling this function will override previously set WHERE conditions.\n     * Additionally you can add parameters used in where expression.\n     */\n    DeleteQueryBuilder.prototype.where = function (where, parameters) {\n        this.expressionMap.wheres = []; // don't move this block below since computeWhereParameter can add where expressions\n        var condition = this.computeWhereParameter(where);\n        if (condition)\n            this.expressionMap.wheres = [{ type: \"simple\", condition: condition }];\n        if (parameters)\n            this.setParameters(parameters);\n        return this;\n    };\n    /**\n     * Adds new AND WHERE condition in the query builder.\n     * Additionally you can add parameters used in where expression.\n     */\n    DeleteQueryBuilder.prototype.andWhere = function (where, parameters) {\n        this.expressionMap.wheres.push({ type: \"and\", condition: this.computeWhereParameter(where) });\n        if (parameters)\n            this.setParameters(parameters);\n        return this;\n    };\n    /**\n     * Adds new OR WHERE condition in the query builder.\n     * Additionally you can add parameters used in where expression.\n     */\n    DeleteQueryBuilder.prototype.orWhere = function (where, parameters) {\n        this.expressionMap.wheres.push({ type: \"or\", condition: this.computeWhereParameter(where) });\n        if (parameters)\n            this.setParameters(parameters);\n        return this;\n    };\n    /**\n     * Adds new AND WHERE with conditions for the given ids.\n     */\n    DeleteQueryBuilder.prototype.whereInIds = function (ids) {\n        return this.where(this.createWhereIdsExpression(ids));\n    };\n    /**\n     * Adds new AND WHERE with conditions for the given ids.\n     */\n    DeleteQueryBuilder.prototype.andWhereInIds = function (ids) {\n        return this.andWhere(this.createWhereIdsExpression(ids));\n    };\n    /**\n     * Adds new OR WHERE with conditions for the given ids.\n     */\n    DeleteQueryBuilder.prototype.orWhereInIds = function (ids) {\n        return this.orWhere(this.createWhereIdsExpression(ids));\n    };\n    /**\n     * Optional returning/output clause.\n     */\n    DeleteQueryBuilder.prototype.output = function (output) {\n        return this.returning(output);\n    };\n    /**\n     * Optional returning/output clause.\n     */\n    DeleteQueryBuilder.prototype.returning = function (returning) {\n        // not all databases support returning/output cause\n        if (!this.connection.driver.isReturningSqlSupported())\n            throw new ReturningStatementNotSupportedError_1.ReturningStatementNotSupportedError();\n        this.expressionMap.returning = returning;\n        return this;\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates DELETE express used to perform query.\n     */\n    DeleteQueryBuilder.prototype.createDeleteExpression = function () {\n        var tableName = this.getTableName(this.getMainTableName());\n        var whereExpression = this.createWhereExpression();\n        var returningExpression = this.createReturningExpression();\n        if (returningExpression && this.connection.driver instanceof PostgresDriver_1.PostgresDriver) {\n            return \"DELETE FROM \" + tableName + whereExpression + \" RETURNING \" + returningExpression;\n        }\n        else if (returningExpression !== \"\" && this.connection.driver instanceof SqlServerDriver_1.SqlServerDriver) {\n            return \"DELETE FROM \" + tableName + \" OUTPUT \" + returningExpression + whereExpression;\n        }\n        else {\n            return \"DELETE FROM \" + tableName + whereExpression;\n        }\n    };\n    return DeleteQueryBuilder;\n}(QueryBuilder_1.QueryBuilder));\nexports.DeleteQueryBuilder = DeleteQueryBuilder;\n\n//# sourceMappingURL=DeleteQueryBuilder.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/query-builder/DeleteQueryBuilder.js?");

/***/ }),

/***/ "./node_modules/typeorm/query-builder/InsertQueryBuilder.js":
/*!******************************************************************!*\
  !*** ./node_modules/typeorm/query-builder/InsertQueryBuilder.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar QueryBuilder_1 = __webpack_require__(/*! ./QueryBuilder */ \"./node_modules/typeorm/query-builder/QueryBuilder.js\");\nvar SqlServerDriver_1 = __webpack_require__(/*! ../driver/sqlserver/SqlServerDriver */ \"./node_modules/typeorm/driver/sqlserver/SqlServerDriver.js\");\nvar PostgresDriver_1 = __webpack_require__(/*! ../driver/postgres/PostgresDriver */ \"./node_modules/typeorm/driver/postgres/PostgresDriver.js\");\nvar MysqlDriver_1 = __webpack_require__(/*! ../driver/mysql/MysqlDriver */ \"./node_modules/typeorm/driver/mysql/MysqlDriver.js\");\nvar RandomGenerator_1 = __webpack_require__(/*! ../util/RandomGenerator */ \"./node_modules/typeorm/util/RandomGenerator.js\");\nvar InsertResult_1 = __webpack_require__(/*! ./result/InsertResult */ \"./node_modules/typeorm/query-builder/result/InsertResult.js\");\nvar ReturningStatementNotSupportedError_1 = __webpack_require__(/*! ../error/ReturningStatementNotSupportedError */ \"./node_modules/typeorm/error/ReturningStatementNotSupportedError.js\");\nvar InsertValuesMissingError_1 = __webpack_require__(/*! ../error/InsertValuesMissingError */ \"./node_modules/typeorm/error/InsertValuesMissingError.js\");\nvar ReturningResultsEntityUpdator_1 = __webpack_require__(/*! ./ReturningResultsEntityUpdator */ \"./node_modules/typeorm/query-builder/ReturningResultsEntityUpdator.js\");\nvar AbstractSqliteDriver_1 = __webpack_require__(/*! ../driver/sqlite-abstract/AbstractSqliteDriver */ \"./node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js\");\nvar SqljsDriver_1 = __webpack_require__(/*! ../driver/sqljs/SqljsDriver */ \"./node_modules/typeorm/driver/sqljs/SqljsDriver.js\");\nvar BroadcasterResult_1 = __webpack_require__(/*! ../subscriber/BroadcasterResult */ \"./node_modules/typeorm/subscriber/BroadcasterResult.js\");\nvar _1 = __webpack_require__(/*! ../ */ \"./node_modules/typeorm/index.js\");\nvar OracleDriver_1 = __webpack_require__(/*! ../driver/oracle/OracleDriver */ \"./node_modules/typeorm/driver/oracle/OracleDriver.js\");\n/**\n * Allows to build complex sql queries in a fashion way and execute those queries.\n */\nvar InsertQueryBuilder = /** @class */ (function (_super) {\n    __extends(InsertQueryBuilder, _super);\n    function InsertQueryBuilder() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    // -------------------------------------------------------------------------\n    // Public Implemented Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Gets generated sql query without parameters being replaced.\n     */\n    InsertQueryBuilder.prototype.getQuery = function () {\n        var sql = this.createInsertExpression();\n        return sql.trim();\n    };\n    /**\n     * Executes sql generated by query builder and returns raw database results.\n     */\n    InsertQueryBuilder.prototype.execute = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var queryRunner, transactionStartedByUs, valueSets, broadcastResult_1, returningResultsEntityUpdator, _a, sql, parameters, insertResult, _b, broadcastResult_2, error_1, rollbackError_1;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        queryRunner = this.obtainQueryRunner();\n                        transactionStartedByUs = false;\n                        _c.label = 1;\n                    case 1:\n                        _c.trys.push([1, 13, 18, 23]);\n                        if (!(this.expressionMap.useTransaction === true && queryRunner.isTransactionActive === false)) return [3 /*break*/, 3];\n                        return [4 /*yield*/, queryRunner.startTransaction()];\n                    case 2:\n                        _c.sent();\n                        transactionStartedByUs = true;\n                        _c.label = 3;\n                    case 3:\n                        valueSets = this.getValueSets();\n                        if (!(this.expressionMap.callListeners === true && this.expressionMap.mainAlias.hasMetadata)) return [3 /*break*/, 5];\n                        broadcastResult_1 = new BroadcasterResult_1.BroadcasterResult();\n                        valueSets.forEach(function (valueSet) {\n                            queryRunner.broadcaster.broadcastBeforeInsertEvent(broadcastResult_1, _this.expressionMap.mainAlias.metadata, valueSet);\n                        });\n                        if (!(broadcastResult_1.promises.length > 0)) return [3 /*break*/, 5];\n                        return [4 /*yield*/, Promise.all(broadcastResult_1.promises)];\n                    case 4:\n                        _c.sent();\n                        _c.label = 5;\n                    case 5:\n                        returningResultsEntityUpdator = new ReturningResultsEntityUpdator_1.ReturningResultsEntityUpdator(queryRunner, this.expressionMap);\n                        if (this.expressionMap.updateEntity === true && this.expressionMap.mainAlias.hasMetadata) {\n                            this.expressionMap.extraReturningColumns = returningResultsEntityUpdator.getInsertionReturningColumns();\n                        }\n                        _a = __read(this.getQueryAndParameters(), 2), sql = _a[0], parameters = _a[1];\n                        insertResult = new InsertResult_1.InsertResult();\n                        // console.time(\".query execution by database\");\n                        _b = insertResult;\n                        return [4 /*yield*/, queryRunner.query(sql, parameters)];\n                    case 6:\n                        // console.time(\".query execution by database\");\n                        _b.raw = _c.sent();\n                        if (!(this.expressionMap.updateEntity === true && this.expressionMap.mainAlias.hasMetadata)) return [3 /*break*/, 8];\n                        // console.time(\".updating entity\");\n                        return [4 /*yield*/, returningResultsEntityUpdator.insert(insertResult, valueSets)];\n                    case 7:\n                        // console.time(\".updating entity\");\n                        _c.sent();\n                        _c.label = 8;\n                    case 8:\n                        if (!(this.expressionMap.callListeners === true && this.expressionMap.mainAlias.hasMetadata)) return [3 /*break*/, 10];\n                        broadcastResult_2 = new BroadcasterResult_1.BroadcasterResult();\n                        valueSets.forEach(function (valueSet) {\n                            queryRunner.broadcaster.broadcastAfterInsertEvent(broadcastResult_2, _this.expressionMap.mainAlias.metadata, valueSet);\n                        });\n                        if (!(broadcastResult_2.promises.length > 0)) return [3 /*break*/, 10];\n                        return [4 /*yield*/, Promise.all(broadcastResult_2.promises)];\n                    case 9:\n                        _c.sent();\n                        _c.label = 10;\n                    case 10:\n                        if (!transactionStartedByUs) return [3 /*break*/, 12];\n                        return [4 /*yield*/, queryRunner.commitTransaction()];\n                    case 11:\n                        _c.sent();\n                        _c.label = 12;\n                    case 12: \n                    // console.timeEnd(\".commit\");\n                    return [2 /*return*/, insertResult];\n                    case 13:\n                        error_1 = _c.sent();\n                        if (!transactionStartedByUs) return [3 /*break*/, 17];\n                        _c.label = 14;\n                    case 14:\n                        _c.trys.push([14, 16, , 17]);\n                        return [4 /*yield*/, queryRunner.rollbackTransaction()];\n                    case 15:\n                        _c.sent();\n                        return [3 /*break*/, 17];\n                    case 16:\n                        rollbackError_1 = _c.sent();\n                        return [3 /*break*/, 17];\n                    case 17: throw error_1;\n                    case 18:\n                        if (!(queryRunner !== this.queryRunner)) return [3 /*break*/, 20];\n                        return [4 /*yield*/, queryRunner.release()];\n                    case 19:\n                        _c.sent();\n                        _c.label = 20;\n                    case 20:\n                        if (!(this.connection.driver instanceof SqljsDriver_1.SqljsDriver && !queryRunner.isTransactionActive)) return [3 /*break*/, 22];\n                        return [4 /*yield*/, this.connection.driver.autoSave()];\n                    case 21:\n                        _c.sent();\n                        _c.label = 22;\n                    case 22: return [7 /*endfinally*/];\n                    case 23: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Specifies INTO which entity's table insertion will be executed.\n     */\n    InsertQueryBuilder.prototype.into = function (entityTarget, columns) {\n        entityTarget = entityTarget instanceof _1.EntitySchema ? entityTarget.options.name : entityTarget;\n        var mainAlias = this.createFromAlias(entityTarget);\n        this.expressionMap.setMainAlias(mainAlias);\n        this.expressionMap.insertColumns = columns || [];\n        return this;\n    };\n    /**\n     * Values needs to be inserted into table.\n     */\n    InsertQueryBuilder.prototype.values = function (values) {\n        this.expressionMap.valuesSet = values;\n        return this;\n    };\n    /**\n     * Optional returning/output clause.\n     */\n    InsertQueryBuilder.prototype.output = function (output) {\n        return this.returning(output);\n    };\n    /**\n     * Optional returning/output clause.\n     */\n    InsertQueryBuilder.prototype.returning = function (returning) {\n        // not all databases support returning/output cause\n        if (!this.connection.driver.isReturningSqlSupported())\n            throw new ReturningStatementNotSupportedError_1.ReturningStatementNotSupportedError();\n        this.expressionMap.returning = returning;\n        return this;\n    };\n    /**\n     * Indicates if entity must be updated after insertion operations.\n     * This may produce extra query or use RETURNING / OUTPUT statement (depend on database).\n     * Enabled by default.\n     */\n    InsertQueryBuilder.prototype.updateEntity = function (enabled) {\n        this.expressionMap.updateEntity = enabled;\n        return this;\n    };\n    /**\n     * Adds additional ON CONFLICT statement supported in postgres.\n     */\n    InsertQueryBuilder.prototype.onConflict = function (statement) {\n        this.expressionMap.onConflict = statement;\n        return this;\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates INSERT express used to perform insert query.\n     */\n    InsertQueryBuilder.prototype.createInsertExpression = function () {\n        var tableName = this.getTableName(this.getMainTableName());\n        var valuesExpression = this.createValuesExpression(); // its important to get values before returning expression because oracle rely on native parameters and ordering of them is important\n        var returningExpression = this.createReturningExpression();\n        var columnsExpression = this.createColumnNamesExpression();\n        // generate INSERT query\n        var query = \"INSERT INTO \" + tableName;\n        // add columns expression\n        if (columnsExpression) {\n            query += \"(\" + columnsExpression + \")\";\n        }\n        else {\n            if (!valuesExpression && this.connection.driver instanceof MysqlDriver_1.MysqlDriver) // special syntax for mysql DEFAULT VALUES insertion\n                query += \"()\";\n        }\n        // add OUTPUT expression\n        if (returningExpression && this.connection.driver instanceof SqlServerDriver_1.SqlServerDriver) {\n            query += \" OUTPUT \" + returningExpression;\n        }\n        // add VALUES expression\n        if (valuesExpression) {\n            query += \" VALUES \" + valuesExpression;\n        }\n        else {\n            if (this.connection.driver instanceof MysqlDriver_1.MysqlDriver) { // special syntax for mysql DEFAULT VALUES insertion\n                query += \" VALUES ()\";\n            }\n            else {\n                query += \" DEFAULT VALUES\";\n            }\n        }\n        if (this.expressionMap.onConflict && this.connection.driver instanceof PostgresDriver_1.PostgresDriver) {\n            query += \" ON CONFLICT \" + this.expressionMap.onConflict;\n        }\n        // add RETURNING expression\n        if (returningExpression && (this.connection.driver instanceof PostgresDriver_1.PostgresDriver || this.connection.driver instanceof OracleDriver_1.OracleDriver)) {\n            query += \" RETURNING \" + returningExpression;\n        }\n        return query;\n    };\n    /**\n     * Gets list of columns where values must be inserted to.\n     */\n    InsertQueryBuilder.prototype.getInsertedColumns = function () {\n        var _this = this;\n        if (!this.expressionMap.mainAlias.hasMetadata)\n            return [];\n        return this.expressionMap.mainAlias.metadata.columns.filter(function (column) {\n            // if user specified list of columns he wants to insert to, then we filter only them\n            if (_this.expressionMap.insertColumns.length)\n                return _this.expressionMap.insertColumns.indexOf(column.propertyPath) !== -1;\n            // if user did not specified such list then return all columns except auto-increment one\n            // for Oracle we return auto-increment column as well because Oracle does not support DEFAULT VALUES expression\n            if (column.isGenerated && column.generationStrategy === \"increment\" && !(_this.connection.driver instanceof OracleDriver_1.OracleDriver) && !(_this.connection.driver instanceof MysqlDriver_1.MysqlDriver))\n                return false;\n            return true;\n        });\n    };\n    /**\n     * Creates a columns string where values must be inserted to for INSERT INTO expression.\n     */\n    InsertQueryBuilder.prototype.createColumnNamesExpression = function () {\n        var _this = this;\n        var columns = this.getInsertedColumns();\n        if (columns.length > 0)\n            return columns.map(function (column) { return _this.escape(column.databaseName); }).join(\", \");\n        // in the case if there are no insert columns specified and table without metadata used\n        // we get columns from the inserted value map, in the case if only one inserted map is specified\n        if (!this.expressionMap.mainAlias.hasMetadata && !this.expressionMap.insertColumns.length) {\n            var valueSets = this.getValueSets();\n            if (valueSets.length === 1)\n                return Object.keys(valueSets[0]).map(function (columnName) { return _this.escape(columnName); }).join(\", \");\n        }\n        // get a table name and all column database names\n        return this.expressionMap.insertColumns.map(function (columnName) { return _this.escape(columnName); }).join(\", \");\n    };\n    /**\n     * Creates list of values needs to be inserted in the VALUES expression.\n     */\n    InsertQueryBuilder.prototype.createValuesExpression = function () {\n        var _this = this;\n        var valueSets = this.getValueSets();\n        var columns = this.getInsertedColumns();\n        // if column metadatas are given then apply all necessary operations with values\n        if (columns.length > 0) {\n            var expression_1 = \"\";\n            var parametersCount_1 = Object.keys(this.expressionMap.nativeParameters).length;\n            valueSets.forEach(function (valueSet, valueSetIndex) {\n                columns.forEach(function (column, columnIndex) {\n                    if (columnIndex === 0) {\n                        expression_1 += \"(\";\n                    }\n                    var paramName = \"i\" + valueSetIndex + \"_\" + column.databaseName;\n                    // extract real value from the entity\n                    var value = column.getEntityValue(valueSet);\n                    // if column is relational and value is an object then get real referenced column value from this object\n                    // for example column value is { question: { id: 1 } }, value will be equal to { id: 1 }\n                    // and we extract \"1\" from this object\n                    /*if (column.referencedColumn && value instanceof Object && !(value instanceof Function)) { // todo: check if we still need it since getEntityValue already has similar code\n                        value = column.referencedColumn.getEntityValue(value);\n                    }*/\n                    // make sure our value is normalized by a driver\n                    value = _this.connection.driver.preparePersistentValue(value, column);\n                    // newly inserted entities always have a version equal to 1 (first version)\n                    if (column.isVersion) {\n                        expression_1 += \"1\";\n                        // } else if (column.isNestedSetLeft) {\n                        //     const tableName = this.connection.driver.escape(column.entityMetadata.tablePath);\n                        //     const rightColumnName = this.connection.driver.escape(column.entityMetadata.nestedSetRightColumn!.databaseName);\n                        //     const subQuery = `(SELECT c.max + 1 FROM (SELECT MAX(${rightColumnName}) as max from ${tableName}) c)`;\n                        //     expression += subQuery;\n                        //\n                        // } else if (column.isNestedSetRight) {\n                        //     const tableName = this.connection.driver.escape(column.entityMetadata.tablePath);\n                        //     const rightColumnName = this.connection.driver.escape(column.entityMetadata.nestedSetRightColumn!.databaseName);\n                        //     const subQuery = `(SELECT c.max + 2 FROM (SELECT MAX(${rightColumnName}) as max from ${tableName}) c)`;\n                        //     expression += subQuery;\n                    }\n                    else if (column.isDiscriminator) {\n                        _this.expressionMap.nativeParameters[\"discriminator_value\"] = _this.expressionMap.mainAlias.metadata.discriminatorValue;\n                        expression_1 += _this.connection.driver.createParameter(\"discriminator_value\", parametersCount_1);\n                        parametersCount_1++;\n                        // return \"1\";\n                        // for create and update dates we insert current date\n                        // no, we don't do it because this constant is already in \"default\" value of the column\n                        // with extended timestamp functionality, like CURRENT_TIMESTAMP(6) for example\n                        // } else if (column.isCreateDate || column.isUpdateDate) {\n                        //     return \"CURRENT_TIMESTAMP\";\n                        // if column is generated uuid and database does not support its generation and custom generated value was not provided by a user - we generate a new uuid value for insertion\n                    }\n                    else if (column.isGenerated && column.generationStrategy === \"uuid\" && !_this.connection.driver.isUUIDGenerationSupported() && value === undefined) {\n                        var paramName_1 = \"uuid_\" + column.databaseName + valueSetIndex;\n                        value = RandomGenerator_1.RandomGenerator.uuid4();\n                        _this.expressionMap.nativeParameters[paramName_1] = value;\n                        expression_1 += _this.connection.driver.createParameter(paramName_1, parametersCount_1);\n                        parametersCount_1++;\n                        // if value for this column was not provided then insert default value\n                    }\n                    else if (value === undefined) {\n                        if (_this.connection.driver instanceof AbstractSqliteDriver_1.AbstractSqliteDriver) { // unfortunately sqlite does not support DEFAULT expression in INSERT queries\n                            if (column.default !== undefined) { // try to use default defined in the column\n                                expression_1 += _this.connection.driver.normalizeDefault(column);\n                            }\n                            else {\n                                expression_1 += \"NULL\"; // otherwise simply use NULL and pray if column is nullable\n                            }\n                        }\n                        else {\n                            expression_1 += \"DEFAULT\";\n                        }\n                        // support for SQL expressions in queries\n                    }\n                    else if (value instanceof Function) {\n                        expression_1 += value();\n                        // just any other regular value\n                    }\n                    else {\n                        if (_this.connection.driver instanceof SqlServerDriver_1.SqlServerDriver)\n                            value = _this.connection.driver.parametrizeValue(column, value);\n                        // we need to store array values in a special class to make sure parameter replacement will work correctly\n                        // if (value instanceof Array)\n                        //     value = new ArrayParameter(value);\n                        _this.expressionMap.nativeParameters[paramName] = value;\n                        if (_this.connection.driver instanceof MysqlDriver_1.MysqlDriver && _this.connection.driver.spatialTypes.indexOf(column.type) !== -1) {\n                            expression_1 += \"GeomFromText(\" + _this.connection.driver.createParameter(paramName, parametersCount_1) + \")\";\n                        }\n                        else if (_this.connection.driver instanceof PostgresDriver_1.PostgresDriver && _this.connection.driver.spatialTypes.indexOf(column.type) !== -1) {\n                            if (column.srid != null) {\n                                expression_1 += \"ST_SetSRID(ST_GeomFromGeoJSON(\" + _this.connection.driver.createParameter(paramName, parametersCount_1) + \"), \" + column.srid + \")::\" + column.type;\n                            }\n                            else {\n                                expression_1 += \"ST_GeomFromGeoJSON(\" + _this.connection.driver.createParameter(paramName, parametersCount_1) + \")::\" + column.type;\n                            }\n                        }\n                        else {\n                            expression_1 += _this.connection.driver.createParameter(paramName, parametersCount_1);\n                        }\n                        parametersCount_1++;\n                    }\n                    if (columnIndex === columns.length - 1) {\n                        if (valueSetIndex === valueSets.length - 1) {\n                            expression_1 += \")\";\n                        }\n                        else {\n                            expression_1 += \"), \";\n                        }\n                    }\n                    else {\n                        expression_1 += \", \";\n                    }\n                });\n            });\n            if (expression_1 === \"()\")\n                return \"\";\n            return expression_1;\n        }\n        else { // for tables without metadata\n            // get values needs to be inserted\n            return valueSets.map(function (valueSet, insertionIndex) {\n                var columnValues = Object.keys(valueSet).map(function (columnName) {\n                    var paramName = \"i\" + insertionIndex + \"_\" + columnName;\n                    var value = valueSet[columnName];\n                    // support for SQL expressions in queries\n                    if (value instanceof Function) {\n                        return value();\n                        // if value for this column was not provided then insert default value\n                    }\n                    else if (value === undefined) {\n                        if (_this.connection.driver instanceof AbstractSqliteDriver_1.AbstractSqliteDriver) {\n                            return \"NULL\";\n                        }\n                        else {\n                            return \"DEFAULT\";\n                        }\n                        // just any other regular value\n                    }\n                    else {\n                        _this.expressionMap.nativeParameters[paramName] = value;\n                        return _this.connection.driver.createParameter(paramName, Object.keys(_this.expressionMap.nativeParameters).length - 1);\n                    }\n                }).join(\", \").trim();\n                return columnValues ? \"(\" + columnValues + \")\" : \"\";\n            }).join(\", \");\n        }\n    };\n    /**\n     * Gets array of values need to be inserted into the target table.\n     */\n    InsertQueryBuilder.prototype.getValueSets = function () {\n        if (this.expressionMap.valuesSet instanceof Array && this.expressionMap.valuesSet.length > 0)\n            return this.expressionMap.valuesSet;\n        if (this.expressionMap.valuesSet instanceof Object)\n            return [this.expressionMap.valuesSet];\n        throw new InsertValuesMissingError_1.InsertValuesMissingError();\n    };\n    return InsertQueryBuilder;\n}(QueryBuilder_1.QueryBuilder));\nexports.InsertQueryBuilder = InsertQueryBuilder;\n\n//# sourceMappingURL=InsertQueryBuilder.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/query-builder/InsertQueryBuilder.js?");

/***/ }),

/***/ "./node_modules/typeorm/query-builder/JoinAttribute.js":
/*!*************************************************************!*\
  !*** ./node_modules/typeorm/query-builder/JoinAttribute.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __values = (this && this.__values) || function (o) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\n    if (m) return m.call(o);\n    return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar QueryBuilderUtils_1 = __webpack_require__(/*! ./QueryBuilderUtils */ \"./node_modules/typeorm/query-builder/QueryBuilderUtils.js\");\n/**\n * Stores all join attributes which will be used to build a JOIN query.\n */\nvar JoinAttribute = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function JoinAttribute(connection, queryExpressionMap, joinAttribute) {\n        this.connection = connection;\n        this.queryExpressionMap = queryExpressionMap;\n        Object.assign(this, joinAttribute || {});\n    }\n    Object.defineProperty(JoinAttribute.prototype, \"isMany\", {\n        // -------------------------------------------------------------------------\n        // Public Methods\n        // -------------------------------------------------------------------------\n        get: function () {\n            if (this.isMappingMany !== undefined)\n                return this.isMappingMany;\n            if (this.relation)\n                return this.relation.isManyToMany || this.relation.isOneToMany;\n            return false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(JoinAttribute.prototype, \"isSelected\", {\n        /**\n         * Indicates if this join is selected.\n         */\n        get: function () {\n            var _this = this;\n            var _loop_1 = function (select) {\n                if (select.selection === this_1.alias.name)\n                    return { value: true };\n                if (this_1.metadata && !!this_1.metadata.columns.find(function (column) { return select.selection === _this.alias.name + \".\" + column.propertyPath; }))\n                    return { value: true };\n            };\n            var this_1 = this;\n            try {\n                for (var _a = __values(this.queryExpressionMap.selects), _b = _a.next(); !_b.done; _b = _a.next()) {\n                    var select = _b.value;\n                    var state_1 = _loop_1(select);\n                    if (typeof state_1 === \"object\")\n                        return state_1.value;\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            return false;\n            var e_1, _c;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(JoinAttribute.prototype, \"tablePath\", {\n        /**\n         * Name of the table which we should join.\n         */\n        get: function () {\n            return this.metadata ? this.metadata.tablePath : this.entityOrProperty;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(JoinAttribute.prototype, \"parentAlias\", {\n        /**\n         * Alias of the parent of this join.\n         * For example, if we join (\"post.category\", \"categoryAlias\") then \"post\" is a parent alias.\n         * This value is extracted from entityOrProperty value.\n         * This is available when join was made using \"post.category\" syntax.\n         */\n        get: function () {\n            if (!QueryBuilderUtils_1.QueryBuilderUtils.isAliasProperty(this.entityOrProperty))\n                return undefined;\n            return this.entityOrProperty.substr(0, this.entityOrProperty.indexOf(\".\"));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(JoinAttribute.prototype, \"relationPropertyPath\", {\n        /**\n         * Relation property name of the parent.\n         * This is used to understand what is joined.\n         * For example, if we join (\"post.category\", \"categoryAlias\") then \"category\" is a relation property.\n         * This value is extracted from entityOrProperty value.\n         * This is available when join was made using \"post.category\" syntax.\n         */\n        get: function () {\n            if (!QueryBuilderUtils_1.QueryBuilderUtils.isAliasProperty(this.entityOrProperty))\n                return undefined;\n            return this.entityOrProperty.substr(this.entityOrProperty.indexOf(\".\") + 1);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(JoinAttribute.prototype, \"relation\", {\n        /**\n         * Relation of the parent.\n         * This is used to understand what is joined.\n         * This is available when join was made using \"post.category\" syntax.\n         * Relation can be undefined if entityOrProperty is regular entity or custom table.\n         */\n        get: function () {\n            if (!QueryBuilderUtils_1.QueryBuilderUtils.isAliasProperty(this.entityOrProperty))\n                return undefined;\n            var relationOwnerSelection = this.queryExpressionMap.findAliasByName(this.parentAlias);\n            var relation = relationOwnerSelection.metadata.findRelationWithPropertyPath(this.relationPropertyPath);\n            if (relation) {\n                return relation;\n            }\n            if (relationOwnerSelection.metadata.parentEntityMetadata) {\n                relation = relationOwnerSelection.metadata.parentEntityMetadata.findRelationWithPropertyPath(this.relationPropertyPath);\n                if (relation) {\n                    return relation;\n                }\n            }\n            throw new Error(\"Relation with property path \" + this.relationPropertyPath + \" in entity was not found.\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(JoinAttribute.prototype, \"metadata\", {\n        /**\n         * Metadata of the joined entity.\n         * If table without entity was joined, then it will return undefined.\n         */\n        get: function () {\n            // entityOrProperty is relation, e.g. \"post.category\"\n            if (this.relation)\n                return this.relation.inverseEntityMetadata;\n            // entityOrProperty is Entity class\n            if (this.connection.hasMetadata(this.entityOrProperty))\n                return this.connection.getMetadata(this.entityOrProperty);\n            return undefined;\n            /*if (typeof this.entityOrProperty === \"string\") { // entityOrProperty is a custom table\n    \n                // first try to find entity with such name, this is needed when entity does not have a target class,\n                // and its target is a string name (scenario when plain old javascript is used or entity schema is loaded from files)\n                const metadata = this.connection.entityMetadatas.find(metadata => metadata.name === this.entityOrProperty);\n                if (metadata)\n                    return metadata;\n    \n                // check if we have entity with such table name, and use its metadata if found\n                return this.connection.entityMetadatas.find(metadata => metadata.tableName === this.entityOrProperty);\n            }*/\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(JoinAttribute.prototype, \"junctionAlias\", {\n        /**\n         * Generates alias of junction table, whose ids we get.\n         */\n        get: function () {\n            if (!this.relation)\n                throw new Error(\"Cannot get junction table for join without relation.\");\n            return this.relation.isOwning ? this.parentAlias + \"_\" + this.alias.name : this.alias.name + \"_\" + this.parentAlias;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(JoinAttribute.prototype, \"mapToPropertyParentAlias\", {\n        get: function () {\n            if (!this.mapToProperty)\n                return undefined;\n            return this.mapToProperty.split(\".\")[0];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(JoinAttribute.prototype, \"mapToPropertyPropertyName\", {\n        get: function () {\n            if (!this.mapToProperty)\n                return undefined;\n            return this.mapToProperty.split(\".\")[1];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return JoinAttribute;\n}());\nexports.JoinAttribute = JoinAttribute;\n\n//# sourceMappingURL=JoinAttribute.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/query-builder/JoinAttribute.js?");

/***/ }),

/***/ "./node_modules/typeorm/query-builder/QueryBuilder.js":
/*!************************************************************!*\
  !*** ./node_modules/typeorm/query-builder/QueryBuilder.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar QueryExpressionMap_1 = __webpack_require__(/*! ./QueryExpressionMap */ \"./node_modules/typeorm/query-builder/QueryExpressionMap.js\");\nvar Brackets_1 = __webpack_require__(/*! ./Brackets */ \"./node_modules/typeorm/query-builder/Brackets.js\");\nvar EntityMetadata_1 = __webpack_require__(/*! ../metadata/EntityMetadata */ \"./node_modules/typeorm/metadata/EntityMetadata.js\");\nvar SqljsDriver_1 = __webpack_require__(/*! ../driver/sqljs/SqljsDriver */ \"./node_modules/typeorm/driver/sqljs/SqljsDriver.js\");\nvar SqlServerDriver_1 = __webpack_require__(/*! ../driver/sqlserver/SqlServerDriver */ \"./node_modules/typeorm/driver/sqlserver/SqlServerDriver.js\");\nvar OracleDriver_1 = __webpack_require__(/*! ../driver/oracle/OracleDriver */ \"./node_modules/typeorm/driver/oracle/OracleDriver.js\");\nvar _1 = __webpack_require__(/*! ../ */ \"./node_modules/typeorm/index.js\");\nvar FindOperator_1 = __webpack_require__(/*! ../find-options/FindOperator */ \"./node_modules/typeorm/find-options/FindOperator.js\");\n// todo: completely cover query builder with tests\n// todo: entityOrProperty can be target name. implement proper behaviour if it is.\n// todo: check in persistment if id exist on object and throw exception (can be in partial selection?)\n// todo: fix problem with long aliases eg getMaxIdentifierLength\n// todo: fix replacing in .select(\"COUNT(post.id) AS cnt\") statement\n// todo: implement joinAlways in relations and relationId\n// todo: finish partial selection\n// todo: sugar methods like: .addCount and .selectCount, selectCountAndMap, selectSum, selectSumAndMap, ...\n// todo: implement @Select decorator\n// todo: add select and map functions\n// todo: implement relation/entity loading and setting them into properties within a separate query\n// .loadAndMap(\"post.categories\", \"post.categories\", qb => ...)\n// .loadAndMap(\"post.categories\", Category, qb => ...)\n/**\n * Allows to build complex sql queries in a fashion way and execute those queries.\n */\nvar QueryBuilder = /** @class */ (function () {\n    /**\n     * QueryBuilder can be initialized from given Connection and QueryRunner objects or from given other QueryBuilder.\n     */\n    function QueryBuilder(connectionOrQueryBuilder, queryRunner) {\n        if (connectionOrQueryBuilder instanceof QueryBuilder) {\n            this.connection = connectionOrQueryBuilder.connection;\n            this.queryRunner = connectionOrQueryBuilder.queryRunner;\n            this.expressionMap = connectionOrQueryBuilder.expressionMap.clone();\n        }\n        else {\n            this.connection = connectionOrQueryBuilder;\n            this.queryRunner = queryRunner;\n            this.expressionMap = new QueryExpressionMap_1.QueryExpressionMap(this.connection);\n        }\n    }\n    Object.defineProperty(QueryBuilder.prototype, \"alias\", {\n        // -------------------------------------------------------------------------\n        // Accessors\n        // -------------------------------------------------------------------------\n        /**\n         * Gets the main alias string used in this query builder.\n         */\n        get: function () {\n            if (!this.expressionMap.mainAlias)\n                throw new Error(\"Main alias is not set\"); // todo: better exception\n            return this.expressionMap.mainAlias.name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates SELECT query and selects given data.\n     * Replaces all previous selections if they exist.\n     */\n    QueryBuilder.prototype.select = function (selection, selectionAliasName) {\n        this.expressionMap.queryType = \"select\";\n        if (selection instanceof Array) {\n            this.expressionMap.selects = selection.map(function (selection) { return ({ selection: selection }); });\n        }\n        else if (selection) {\n            this.expressionMap.selects = [{ selection: selection, aliasName: selectionAliasName }];\n        }\n        // loading it dynamically because of circular issue\n        var SelectQueryBuilderCls = __webpack_require__(/*! ./SelectQueryBuilder */ \"./node_modules/typeorm/query-builder/SelectQueryBuilder.js\").SelectQueryBuilder;\n        if (this instanceof SelectQueryBuilderCls)\n            return this;\n        return new SelectQueryBuilderCls(this);\n    };\n    /**\n     * Creates INSERT query.\n     */\n    QueryBuilder.prototype.insert = function () {\n        this.expressionMap.queryType = \"insert\";\n        // loading it dynamically because of circular issue\n        var InsertQueryBuilderCls = __webpack_require__(/*! ./InsertQueryBuilder */ \"./node_modules/typeorm/query-builder/InsertQueryBuilder.js\").InsertQueryBuilder;\n        if (this instanceof InsertQueryBuilderCls)\n            return this;\n        return new InsertQueryBuilderCls(this);\n    };\n    /**\n     * Creates UPDATE query and applies given update values.\n     */\n    QueryBuilder.prototype.update = function (entityOrTableNameUpdateSet, maybeUpdateSet) {\n        var updateSet = maybeUpdateSet ? maybeUpdateSet : entityOrTableNameUpdateSet;\n        entityOrTableNameUpdateSet = entityOrTableNameUpdateSet instanceof _1.EntitySchema ? entityOrTableNameUpdateSet.options.name : entityOrTableNameUpdateSet;\n        if (entityOrTableNameUpdateSet instanceof Function || typeof entityOrTableNameUpdateSet === \"string\") {\n            var mainAlias = this.createFromAlias(entityOrTableNameUpdateSet);\n            this.expressionMap.setMainAlias(mainAlias);\n        }\n        this.expressionMap.queryType = \"update\";\n        this.expressionMap.valuesSet = updateSet;\n        // loading it dynamically because of circular issue\n        var UpdateQueryBuilderCls = __webpack_require__(/*! ./UpdateQueryBuilder */ \"./node_modules/typeorm/query-builder/UpdateQueryBuilder.js\").UpdateQueryBuilder;\n        if (this instanceof UpdateQueryBuilderCls)\n            return this;\n        return new UpdateQueryBuilderCls(this);\n    };\n    /**\n     * Creates DELETE query.\n     */\n    QueryBuilder.prototype.delete = function () {\n        this.expressionMap.queryType = \"delete\";\n        // loading it dynamically because of circular issue\n        var DeleteQueryBuilderCls = __webpack_require__(/*! ./DeleteQueryBuilder */ \"./node_modules/typeorm/query-builder/DeleteQueryBuilder.js\").DeleteQueryBuilder;\n        if (this instanceof DeleteQueryBuilderCls)\n            return this;\n        return new DeleteQueryBuilderCls(this);\n    };\n    /**\n     * Sets entity's relation with which this query builder gonna work.\n     */\n    QueryBuilder.prototype.relation = function (entityTargetOrPropertyPath, maybePropertyPath) {\n        var entityTarget = arguments.length === 2 ? entityTargetOrPropertyPath : undefined;\n        var propertyPath = arguments.length === 2 ? maybePropertyPath : entityTargetOrPropertyPath;\n        this.expressionMap.queryType = \"relation\";\n        this.expressionMap.relationPropertyPath = propertyPath;\n        if (entityTarget) {\n            var mainAlias = this.createFromAlias(entityTarget);\n            this.expressionMap.setMainAlias(mainAlias);\n        }\n        // loading it dynamically because of circular issue\n        var RelationQueryBuilderCls = __webpack_require__(/*! ./RelationQueryBuilder */ \"./node_modules/typeorm/query-builder/RelationQueryBuilder.js\").RelationQueryBuilder;\n        if (this instanceof RelationQueryBuilderCls)\n            return this;\n        return new RelationQueryBuilderCls(this);\n    };\n    /**\n     * Checks if given relation or relations exist in the entity.\n     * Returns true if relation exists, false otherwise.\n     *\n     * todo: move this method to manager? or create a shortcut?\n     */\n    QueryBuilder.prototype.hasRelation = function (target, relation) {\n        var entityMetadata = this.connection.getMetadata(target);\n        var relations = relation instanceof Array ? relation : [relation];\n        return relations.every(function (relation) {\n            return !!entityMetadata.findRelationWithPropertyPath(relation);\n        });\n    };\n    /**\n     * Sets parameter name and its value.\n     */\n    QueryBuilder.prototype.setParameter = function (key, value) {\n        this.expressionMap.parameters[key] = value;\n        return this;\n    };\n    /**\n     * Adds all parameters from the given object.\n     */\n    QueryBuilder.prototype.setParameters = function (parameters) {\n        var _this = this;\n        // set parent query builder parameters as well in sub-query mode\n        if (this.expressionMap.parentQueryBuilder)\n            this.expressionMap.parentQueryBuilder.setParameters(parameters);\n        Object.keys(parameters).forEach(function (key) { return _this.setParameter(key, parameters[key]); });\n        return this;\n    };\n    /**\n     * Adds native parameters from the given object.\n     */\n    QueryBuilder.prototype.setNativeParameters = function (parameters) {\n        var _this = this;\n        // set parent query builder parameters as well in sub-query mode\n        if (this.expressionMap.parentQueryBuilder)\n            this.expressionMap.parentQueryBuilder.setNativeParameters(parameters);\n        Object.keys(parameters).forEach(function (key) {\n            _this.expressionMap.nativeParameters[key] = parameters[key];\n        });\n        return this;\n    };\n    /**\n     * Gets all parameters.\n     */\n    QueryBuilder.prototype.getParameters = function () {\n        var parameters = Object.assign({}, this.expressionMap.parameters);\n        // add discriminator column parameter if it exist\n        if (this.expressionMap.mainAlias && this.expressionMap.mainAlias.hasMetadata) {\n            var metadata = this.expressionMap.mainAlias.metadata;\n            if (metadata.discriminatorColumn && metadata.parentEntityMetadata) {\n                var values = metadata.childEntityMetadatas\n                    .filter(function (childMetadata) { return childMetadata.discriminatorColumn; })\n                    .map(function (childMetadata) { return childMetadata.discriminatorValue; });\n                values.push(metadata.discriminatorValue);\n                parameters[\"discriminatorColumnValues\"] = values;\n            }\n        }\n        return parameters;\n    };\n    /**\n     * Prints sql to stdout using console.log.\n     */\n    QueryBuilder.prototype.printSql = function () {\n        var _a = __read(this.getQueryAndParameters(), 2), query = _a[0], parameters = _a[1];\n        this.connection.logger.logQuery(query, parameters);\n        return this;\n    };\n    /**\n     * Gets generated sql that will be executed.\n     * Parameters in the query are escaped for the currently used driver.\n     */\n    QueryBuilder.prototype.getSql = function () {\n        return this.getQueryAndParameters()[0];\n    };\n    /**\n     * Gets query to be executed with all parameters used in it.\n     */\n    QueryBuilder.prototype.getQueryAndParameters = function () {\n        // this execution order is important because getQuery method generates this.expressionMap.nativeParameters values\n        var query = this.getQuery();\n        var parameters = this.getParameters();\n        return this.connection.driver.escapeQueryWithParameters(query, parameters, this.expressionMap.nativeParameters);\n    };\n    /**\n     * Executes sql generated by query builder and returns raw database results.\n     */\n    QueryBuilder.prototype.execute = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, sql, parameters, queryRunner;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = __read(this.getQueryAndParameters(), 2), sql = _a[0], parameters = _a[1];\n                        queryRunner = this.obtainQueryRunner();\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, , 3, 8]);\n                        return [4 /*yield*/, queryRunner.query(sql, parameters)];\n                    case 2: return [2 /*return*/, _b.sent()]; // await is needed here because we are using finally\n                    case 3:\n                        if (!(queryRunner !== this.queryRunner)) return [3 /*break*/, 5];\n                        return [4 /*yield*/, queryRunner.release()];\n                    case 4:\n                        _b.sent();\n                        _b.label = 5;\n                    case 5:\n                        if (!(this.connection.driver instanceof SqljsDriver_1.SqljsDriver)) return [3 /*break*/, 7];\n                        return [4 /*yield*/, this.connection.driver.autoSave()];\n                    case 6:\n                        _b.sent();\n                        _b.label = 7;\n                    case 7: return [7 /*endfinally*/];\n                    case 8: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a completely new query builder.\n     * Uses same query runner as current QueryBuilder.\n     */\n    QueryBuilder.prototype.createQueryBuilder = function () {\n        return new this.constructor(this.connection, this.queryRunner);\n    };\n    /**\n     * Clones query builder as it is.\n     * Note: it uses new query runner, if you want query builder that uses exactly same query runner,\n     * you can create query builder using its constructor, for example new SelectQueryBuilder(queryBuilder)\n     * where queryBuilder is cloned QueryBuilder.\n     */\n    QueryBuilder.prototype.clone = function () {\n        return new this.constructor(this);\n    };\n    /**\n     * Disables escaping.\n     */\n    QueryBuilder.prototype.disableEscaping = function () {\n        this.expressionMap.disableEscaping = false;\n        return this;\n    };\n    /**\n     * Escapes table name, column name or alias name using current database's escaping character.\n     */\n    QueryBuilder.prototype.escape = function (name) {\n        if (!this.expressionMap.disableEscaping)\n            return name;\n        return this.connection.driver.escape(name);\n    };\n    /**\n     * Sets or overrides query builder's QueryRunner.\n     */\n    QueryBuilder.prototype.setQueryRunner = function (queryRunner) {\n        this.queryRunner = queryRunner;\n        return this;\n    };\n    /**\n     * Indicates if listeners and subscribers must be called before and after query execution.\n     * Enabled by default.\n     */\n    QueryBuilder.prototype.callListeners = function (enabled) {\n        this.expressionMap.callListeners = enabled;\n        return this;\n    };\n    /**\n     * If set to true the query will be wrapped into a transaction.\n     */\n    QueryBuilder.prototype.useTransaction = function (enabled) {\n        this.expressionMap.useTransaction = enabled;\n        return this;\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Gets escaped table name with schema name if SqlServer driver used with custom\n     * schema name, otherwise returns escaped table name.\n     */\n    QueryBuilder.prototype.getTableName = function (tablePath) {\n        // let tablePath = tableName;\n        // const driver = this.connection.driver;\n        // const schema = (driver.options as SqlServerConnectionOptions|PostgresConnectionOptions).schema;\n        // const metadata = this.connection.hasMetadata(tableName) ? this.connection.getMetadata(tableName) : undefined;\n        var _this = this;\n        /*if (driver instanceof SqlServerDriver || driver instanceof PostgresDriver || driver instanceof MysqlDriver) {\n            if (metadata) {\n                if (metadata.schema) {\n                    tablePath = `${metadata.schema}.${tableName}`;\n                } else if (schema) {\n                    tablePath = `${schema}.${tableName}`;\n                }\n\n                if (metadata.database && !(driver instanceof PostgresDriver)) {\n                    if (!schema && !metadata.schema && driver instanceof SqlServerDriver) {\n                        tablePath = `${metadata.database}..${tablePath}`;\n                    } else {\n                        tablePath = `${metadata.database}.${tablePath}`;\n                    }\n                }\n\n            } else if (schema) {\n                tablePath = `${schema!}.${tableName}`;\n            }\n        }*/\n        return tablePath.split(\".\")\n            .map(function (i) {\n            // this condition need because in SQL Server driver when custom database name was specified and schema name was not, we got `dbName..tableName` string, and doesn't need to escape middle empty string\n            if (i === \"\")\n                return i;\n            return _this.escape(i);\n        }).join(\".\");\n    };\n    /**\n     * Gets name of the table where insert should be performed.\n     */\n    QueryBuilder.prototype.getMainTableName = function () {\n        if (!this.expressionMap.mainAlias)\n            throw new Error(\"Entity where values should be inserted is not specified. Call \\\"qb.into(entity)\\\" method to specify it.\");\n        if (this.expressionMap.mainAlias.hasMetadata)\n            return this.expressionMap.mainAlias.metadata.tablePath;\n        return this.expressionMap.mainAlias.tablePath;\n    };\n    /**\n     * Specifies FROM which entity's table select/update/delete will be executed.\n     * Also sets a main string alias of the selection data.\n     */\n    QueryBuilder.prototype.createFromAlias = function (entityTarget, aliasName) {\n        // if table has a metadata then find it to properly escape its properties\n        // const metadata = this.connection.entityMetadatas.find(metadata => metadata.tableName === tableName);\n        if (this.connection.hasMetadata(entityTarget)) {\n            var metadata = this.connection.getMetadata(entityTarget);\n            return this.expressionMap.createAlias({\n                type: \"from\",\n                name: aliasName,\n                metadata: this.connection.getMetadata(entityTarget),\n                tablePath: metadata.tablePath\n            });\n        }\n        else {\n            var subQuery = \"\";\n            if (entityTarget instanceof Function) {\n                var subQueryBuilder = entityTarget(this.subQuery());\n                this.setParameters(subQueryBuilder.getParameters());\n                subQuery = subQueryBuilder.getQuery();\n            }\n            else {\n                subQuery = entityTarget;\n            }\n            var isSubQuery = entityTarget instanceof Function || entityTarget.substr(0, 1) === \"(\" && entityTarget.substr(-1) === \")\";\n            return this.expressionMap.createAlias({\n                type: \"from\",\n                name: aliasName,\n                tablePath: isSubQuery === false ? entityTarget : undefined,\n                subQuery: isSubQuery === true ? subQuery : undefined,\n            });\n        }\n    };\n    /**\n     * Replaces all entity's propertyName to name in the given statement.\n     */\n    QueryBuilder.prototype.replacePropertyNames = function (statement) {\n        var _this = this;\n        this.expressionMap.aliases.forEach(function (alias) {\n            if (!alias.hasMetadata)\n                return;\n            var replaceAliasNamePrefix = _this.expressionMap.aliasNamePrefixingEnabled ? alias.name + \"\\\\.\" : \"\";\n            var replacementAliasNamePrefix = _this.expressionMap.aliasNamePrefixingEnabled ? _this.escape(alias.name) + \".\" : \"\";\n            alias.metadata.columns.forEach(function (column) {\n                var expression = \"([ =\\(]|^.{0})\" + replaceAliasNamePrefix + column.propertyPath + \"([ =\\)\\,]|.{0}$)\";\n                statement = statement.replace(new RegExp(expression, \"gm\"), \"$1\" + replacementAliasNamePrefix + _this.escape(column.databaseName) + \"$2\");\n                var expression2 = \"([ =\\(]|^.{0})\" + replaceAliasNamePrefix + column.propertyName + \"([ =\\)\\,]|.{0}$)\";\n                statement = statement.replace(new RegExp(expression2, \"gm\"), \"$1\" + replacementAliasNamePrefix + _this.escape(column.databaseName) + \"$2\");\n            });\n            alias.metadata.relations.forEach(function (relation) {\n                __spread(relation.joinColumns, relation.inverseJoinColumns).forEach(function (joinColumn) {\n                    var expression = \"([ =\\(]|^.{0})\" + replaceAliasNamePrefix + relation.propertyPath + \"\\\\.\" + joinColumn.referencedColumn.propertyPath + \"([ =\\)\\,]|.{0}$)\";\n                    statement = statement.replace(new RegExp(expression, \"gm\"), \"$1\" + replacementAliasNamePrefix + _this.escape(joinColumn.databaseName) + \"$2\"); // todo: fix relation.joinColumns[0], what if multiple columns\n                });\n                if (relation.joinColumns.length > 0) {\n                    var expression = \"([ =\\(]|^.{0})\" + replaceAliasNamePrefix + relation.propertyPath + \"([ =\\)\\,]|.{0}$)\";\n                    statement = statement.replace(new RegExp(expression, \"gm\"), \"$1\" + replacementAliasNamePrefix + _this.escape(relation.joinColumns[0].databaseName) + \"$2\"); // todo: fix relation.joinColumns[0], what if multiple columns\n                }\n            });\n        });\n        return statement;\n    };\n    /**\n     * Creates \"WHERE\" expression.\n     */\n    QueryBuilder.prototype.createWhereExpression = function () {\n        var conditions = this.createWhereExpressionString();\n        if (this.expressionMap.mainAlias.hasMetadata) {\n            var metadata = this.expressionMap.mainAlias.metadata;\n            if (metadata.discriminatorColumn && metadata.parentEntityMetadata) {\n                var column = this.expressionMap.aliasNamePrefixingEnabled\n                    ? this.expressionMap.mainAlias.name + \".\" + metadata.discriminatorColumn.databaseName\n                    : metadata.discriminatorColumn.databaseName;\n                var condition = this.replacePropertyNames(column) + \" IN (:...discriminatorColumnValues)\";\n                return \" WHERE \" + (conditions.length ? \"(\" + conditions + \") AND\" : \"\") + \" \" + condition;\n            }\n        }\n        if (!conditions.length) // TODO copy in to discriminator condition\n            return this.expressionMap.extraAppendedAndWhereCondition ? \" WHERE \" + this.replacePropertyNames(this.expressionMap.extraAppendedAndWhereCondition) : \"\";\n        if (this.expressionMap.extraAppendedAndWhereCondition)\n            return \" WHERE (\" + conditions + \") AND \" + this.replacePropertyNames(this.expressionMap.extraAppendedAndWhereCondition);\n        return \" WHERE \" + conditions;\n    };\n    /**\n     * Creates \"RETURNING\" / \"OUTPUT\" expression.\n     */\n    QueryBuilder.prototype.createReturningExpression = function () {\n        var _this = this;\n        var columns = this.getReturningColumns();\n        var driver = this.connection.driver;\n        // also add columns we must auto-return to perform entity updation\n        // if user gave his own returning\n        if (typeof this.expressionMap.returning !== \"string\" &&\n            this.expressionMap.extraReturningColumns.length > 0 &&\n            driver.isReturningSqlSupported()) {\n            columns.push.apply(columns, __spread(this.expressionMap.extraReturningColumns.filter(function (column) {\n                return columns.indexOf(column) === -1;\n            })));\n        }\n        if (columns.length) {\n            var columnsExpression = columns.map(function (column) {\n                var name = _this.escape(column.databaseName);\n                if (driver instanceof SqlServerDriver_1.SqlServerDriver) {\n                    if (_this.expressionMap.queryType === \"insert\" || _this.expressionMap.queryType === \"update\") {\n                        return \"INSERTED.\" + name;\n                    }\n                    else {\n                        return _this.escape(_this.getMainTableName()) + \".\" + name;\n                    }\n                }\n                else {\n                    return name;\n                }\n            }).join(\", \");\n            if (driver instanceof OracleDriver_1.OracleDriver) {\n                columnsExpression += \" INTO \" + columns.map(function (column) {\n                    var parameterName = \"output_\" + column.databaseName;\n                    _this.expressionMap.nativeParameters[parameterName] = { type: driver.columnTypeToNativeParameter(column.type), dir: driver.oracle.BIND_OUT };\n                    return _this.connection.driver.createParameter(parameterName, Object.keys(_this.expressionMap.nativeParameters).length);\n                }).join(\", \");\n            }\n            return columnsExpression;\n        }\n        else if (typeof this.expressionMap.returning === \"string\") {\n            return this.expressionMap.returning;\n        }\n        return \"\";\n    };\n    /**\n     * If returning / output cause is set to array of column names,\n     * then this method will return all column metadatas of those column names.\n     */\n    QueryBuilder.prototype.getReturningColumns = function () {\n        var _this = this;\n        var columns = [];\n        if (this.expressionMap.returning instanceof Array) {\n            this.expressionMap.returning.forEach(function (columnName) {\n                if (_this.expressionMap.mainAlias.hasMetadata) {\n                    columns.push.apply(columns, __spread(_this.expressionMap.mainAlias.metadata.findColumnsWithPropertyPath(columnName)));\n                }\n            });\n        }\n        return columns;\n    };\n    /**\n     * Concatenates all added where expressions into one string.\n     */\n    QueryBuilder.prototype.createWhereExpressionString = function () {\n        var _this = this;\n        return this.expressionMap.wheres.map(function (where, index) {\n            switch (where.type) {\n                case \"and\":\n                    return (index > 0 ? \"AND \" : \"\") + _this.replacePropertyNames(where.condition);\n                case \"or\":\n                    return (index > 0 ? \"OR \" : \"\") + _this.replacePropertyNames(where.condition);\n                default:\n                    return _this.replacePropertyNames(where.condition);\n            }\n        }).join(\" \");\n    };\n    /**\n     * Creates \"WHERE\" expression and variables for the given \"ids\".\n     */\n    QueryBuilder.prototype.createWhereIdsExpression = function (ids) {\n        var _this = this;\n        ids = ids instanceof Array ? ids : [ids];\n        var metadata = this.expressionMap.mainAlias.metadata;\n        // create shortcuts for better readability\n        var alias = this.expressionMap.aliasNamePrefixingEnabled ? this.escape(this.expressionMap.mainAlias.name) + \".\" : \"\";\n        var parameterIndex = Object.keys(this.expressionMap.nativeParameters).length;\n        var whereStrings = ids.map(function (id, index) {\n            id = metadata.ensureEntityIdMap(id);\n            var whereSubStrings = [];\n            metadata.primaryColumns.forEach(function (primaryColumn, secondIndex) {\n                var parameterName = \"id_\" + index + \"_\" + secondIndex;\n                // whereSubStrings.push(alias + this.escape(primaryColumn.databaseName) + \"=:id_\" + index + \"_\" + secondIndex);\n                whereSubStrings.push(alias + _this.escape(primaryColumn.databaseName) + \" = \" + _this.connection.driver.createParameter(parameterName, parameterIndex));\n                _this.expressionMap.nativeParameters[parameterName] = primaryColumn.getEntityValue(id, true);\n                parameterIndex++;\n            });\n            return whereSubStrings.join(\" AND \");\n        });\n        return whereStrings.length > 1 ? whereStrings.map(function (whereString) { return \"(\" + whereString + \")\"; }).join(\" OR \") : whereStrings[0];\n    };\n    /**\n     * Computes given where argument - transforms to a where string all forms it can take.\n     */\n    QueryBuilder.prototype.computeWhereParameter = function (where) {\n        var _this = this;\n        if (typeof where === \"string\")\n            return where;\n        if (where instanceof Brackets_1.Brackets) {\n            var whereQueryBuilder = this.createQueryBuilder();\n            where.whereFactory(whereQueryBuilder);\n            var whereString = whereQueryBuilder.createWhereExpressionString();\n            this.setParameters(whereQueryBuilder.getParameters());\n            return whereString ? \"(\" + whereString + \")\" : \"\";\n        }\n        else if (where instanceof Function) {\n            return where(this);\n        }\n        else if (where instanceof Object) {\n            var wheres = where instanceof Array ? where : [where];\n            var andConditions = void 0;\n            var parameterIndex_1 = Object.keys(this.expressionMap.nativeParameters).length;\n            if (this.expressionMap.mainAlias.hasMetadata) {\n                andConditions = wheres.map(function (where, whereIndex) {\n                    var propertyPaths = EntityMetadata_1.EntityMetadata.createPropertyPath(_this.expressionMap.mainAlias.metadata, where);\n                    return propertyPaths.map(function (propertyPath, propertyIndex) {\n                        var columns = _this.expressionMap.mainAlias.metadata.findColumnsWithPropertyPath(propertyPath);\n                        return columns.map(function (column, columnIndex) {\n                            var aliasPath = _this.expressionMap.aliasNamePrefixingEnabled ? _this.alias + \".\" + propertyPath : column.propertyPath;\n                            var parameterValue = column.getEntityValue(where, true);\n                            var parameterName = \"where_\" + whereIndex + \"_\" + propertyIndex + \"_\" + columnIndex;\n                            if (parameterValue === null) {\n                                return aliasPath + \" IS NULL\";\n                            }\n                            else if (parameterValue instanceof FindOperator_1.FindOperator) {\n                                var parameters_1 = [];\n                                if (parameterValue.useParameter) {\n                                    var realParameterValues = parameterValue.multipleParameters ? parameterValue.value : [parameterValue.value];\n                                    realParameterValues.forEach(function (realParameterValue, realParameterValueIndex) {\n                                        _this.expressionMap.nativeParameters[parameterName + realParameterValueIndex] = realParameterValue;\n                                        parameterIndex_1++;\n                                        parameters_1.push(_this.connection.driver.createParameter(parameterName + realParameterValueIndex, parameterIndex_1 - 1));\n                                    });\n                                }\n                                return parameterValue.toSql(_this.connection, aliasPath, parameters_1);\n                            }\n                            else {\n                                _this.expressionMap.nativeParameters[parameterName] = parameterValue;\n                                parameterIndex_1++;\n                                var parameter = _this.connection.driver.createParameter(parameterName, parameterIndex_1 - 1);\n                                return aliasPath + \" = \" + parameter;\n                            }\n                        }).filter(function (expression) { return !!expression; }).join(\" AND \");\n                    }).filter(function (expression) { return !!expression; }).join(\" AND \");\n                });\n            }\n            else {\n                andConditions = wheres.map(function (where, whereIndex) {\n                    return Object.keys(where).map(function (key, parameterIndex) {\n                        var parameterValue = where[key];\n                        var aliasPath = _this.expressionMap.aliasNamePrefixingEnabled ? _this.alias + \".\" + key : key;\n                        if (parameterValue === null) {\n                            return aliasPath + \" IS NULL\";\n                        }\n                        else {\n                            var parameterName = \"where_\" + whereIndex + \"_\" + parameterIndex;\n                            _this.expressionMap.nativeParameters[parameterName] = parameterValue;\n                            parameterIndex++;\n                            return aliasPath + \" = \" + _this.connection.driver.createParameter(parameterName, parameterIndex - 1);\n                        }\n                    }).join(\" AND \");\n                });\n            }\n            if (andConditions.length > 1)\n                return andConditions.map(function (where) { return \"(\" + where + \")\"; }).join(\" OR \");\n            return andConditions.join(\"\");\n        }\n        return \"\";\n    };\n    /**\n     * Creates a query builder used to execute sql queries inside this query builder.\n     */\n    QueryBuilder.prototype.obtainQueryRunner = function () {\n        return this.queryRunner || this.connection.createQueryRunner(\"master\");\n    };\n    return QueryBuilder;\n}());\nexports.QueryBuilder = QueryBuilder;\n\n//# sourceMappingURL=QueryBuilder.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/query-builder/QueryBuilder.js?");

/***/ }),

/***/ "./node_modules/typeorm/query-builder/QueryBuilderUtils.js":
/*!*****************************************************************!*\
  !*** ./node_modules/typeorm/query-builder/QueryBuilderUtils.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Helper utility functions for QueryBuilder.\n */\nvar QueryBuilderUtils = /** @class */ (function () {\n    function QueryBuilderUtils() {\n    }\n    /**\n     * Checks if given value is a string representation of alias property,\n     * e.g. \"post.category\" or \"post.id\".\n     */\n    QueryBuilderUtils.isAliasProperty = function (str) {\n        // alias property must be a string and must have a dot separator\n        if (typeof str !== \"string\" || str.indexOf(\".\") === -1)\n            return false;\n        // extra alias and its property relation\n        var _a = __read(str.split(\".\"), 2), aliasName = _a[0], propertyName = _a[1]; // todo: what about relations in embedded?\n        if (!aliasName || !propertyName)\n            return false;\n        // alias and property must be represented in a special format\n        // const aliasNameRegexp = /^[a-zA-Z0-9_-]+$/;\n        // if (!aliasNameRegexp.test(aliasName) || !aliasNameRegexp.test(propertyName))\n        //     return false;\n        // make sure string is not a subquery\n        if (str.indexOf(\"(\") !== -1 || str.indexOf(\")\") !== -1)\n            return false;\n        return true;\n    };\n    return QueryBuilderUtils;\n}());\nexports.QueryBuilderUtils = QueryBuilderUtils;\n\n//# sourceMappingURL=QueryBuilderUtils.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/query-builder/QueryBuilderUtils.js?");

/***/ }),

/***/ "./node_modules/typeorm/query-builder/QueryExpressionMap.js":
/*!******************************************************************!*\
  !*** ./node_modules/typeorm/query-builder/QueryExpressionMap.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Alias_1 = __webpack_require__(/*! ./Alias */ \"./node_modules/typeorm/query-builder/Alias.js\");\nvar JoinAttribute_1 = __webpack_require__(/*! ./JoinAttribute */ \"./node_modules/typeorm/query-builder/JoinAttribute.js\");\nvar RelationIdAttribute_1 = __webpack_require__(/*! ./relation-id/RelationIdAttribute */ \"./node_modules/typeorm/query-builder/relation-id/RelationIdAttribute.js\");\nvar RelationCountAttribute_1 = __webpack_require__(/*! ./relation-count/RelationCountAttribute */ \"./node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js\");\n/**\n * Contains all properties of the QueryBuilder that needs to be build a final query.\n */\nvar QueryExpressionMap = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function QueryExpressionMap(connection) {\n        this.connection = connection;\n        // -------------------------------------------------------------------------\n        // Public Properties\n        // -------------------------------------------------------------------------\n        /**\n         * Indicates if QueryBuilder used to select entities and not a raw results.\n         */\n        this.queryEntity = false;\n        /**\n         * All aliases (including main alias) used in the query.\n         */\n        this.aliases = [];\n        /**\n         * Represents query type. QueryBuilder is able to build SELECT, UPDATE and DELETE queries.\n         */\n        this.queryType = \"select\";\n        /**\n         * Data needs to be SELECT-ed.\n         */\n        this.selects = [];\n        /**\n         * Extra returning columns to be added to the returning statement if driver supports it.\n         */\n        this.extraReturningColumns = [];\n        /**\n         * Optional on conflict statement used in insertion query in postgres.\n         */\n        this.onConflict = \"\";\n        /**\n         * JOIN queries.\n         */\n        this.joinAttributes = [];\n        /**\n         * RelationId queries.\n         */\n        this.relationIdAttributes = [];\n        /**\n         * Relation count queries.\n         */\n        this.relationCountAttributes = [];\n        /**\n         * WHERE queries.\n         */\n        this.wheres = [];\n        /**\n         * HAVING queries.\n         */\n        this.havings = [];\n        /**\n         * ORDER BY queries.\n         */\n        this.orderBys = {};\n        /**\n         * GROUP BY queries.\n         */\n        this.groupBys = [];\n        /**\n         * Parameters used to be escaped in final query.\n         */\n        this.parameters = {};\n        /**\n         * Indicates if alias, table names and column names will be ecaped by driver, or not.\n         *\n         * todo: rename to isQuotingDisabled, also think if it should be named \"escaping\"\n         */\n        this.disableEscaping = true;\n        /**\n         * Indicates if virtual columns should be included in entity result.\n         *\n         * todo: what to do with it? is it properly used? what about persistence?\n         */\n        this.enableRelationIdValues = false;\n        /**\n         * Extra where condition appended to the end of original where conditions with AND keyword.\n         * Original condition will be wrapped into brackets.\n         */\n        this.extraAppendedAndWhereCondition = \"\";\n        /**\n         * Indicates if query builder creates a subquery.\n         */\n        this.subQuery = false;\n        /**\n         * Indicates if property names are prefixed with alias names during property replacement.\n         * By default this is enabled, however we need this because aliases are not supported in UPDATE and DELETE queries,\n         * but user can use them in WHERE expressions.\n         */\n        this.aliasNamePrefixingEnabled = true;\n        /**\n         * Indicates if query result cache is enabled or not.\n         */\n        this.cache = false;\n        /**\n         * Options that define QueryBuilder behaviour.\n         */\n        this.options = [];\n        /**\n         * List of columns where data should be inserted.\n         * Used in INSERT query.\n         */\n        this.insertColumns = [];\n        /**\n         * Used if user wants to update or delete a specific entities.\n         */\n        this.whereEntities = [];\n        /**\n         * Indicates if entity must be updated after insertion / updation.\n         * This may produce extra query or use RETURNING / OUTPUT statement (depend on database).\n         */\n        this.updateEntity = true;\n        /**\n         * Indicates if listeners and subscribers must be called before and after query execution.\n         */\n        this.callListeners = true;\n        /**\n         * Indicates if query must be wrapped into transaction.\n         */\n        this.useTransaction = false;\n        /**\n         * Extra parameters.\n         * Used in InsertQueryBuilder to avoid default parameters mechanizm and execute high performance insertions.\n         */\n        this.nativeParameters = {};\n    }\n    Object.defineProperty(QueryExpressionMap.prototype, \"allOrderBys\", {\n        // -------------------------------------------------------------------------\n        // Accessors\n        // -------------------------------------------------------------------------\n        /**\n         * Get all ORDER BY queries - if order by is specified by user then it uses them,\n         * otherwise it uses default entity order by if it was set.\n         */\n        get: function () {\n            var _this = this;\n            if (!Object.keys(this.orderBys).length && this.mainAlias.hasMetadata && this.options.indexOf(\"disable-global-order\") === -1) {\n                var entityOrderBy_1 = this.mainAlias.metadata.orderBy || {};\n                return Object.keys(entityOrderBy_1).reduce(function (orderBy, key) {\n                    orderBy[_this.mainAlias.name + \".\" + key] = entityOrderBy_1[key];\n                    return orderBy;\n                }, {});\n            }\n            return this.orderBys;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates a main alias and adds it to the current expression map.\n     */\n    QueryExpressionMap.prototype.setMainAlias = function (alias) {\n        // if main alias is already set then remove it from the array\n        // if (this.mainAlias)\n        //     this.aliases.splice(this.aliases.indexOf(this.mainAlias));\n        // set new main alias\n        this.mainAlias = alias;\n        return alias;\n    };\n    /**\n     * Creates a new alias and adds it to the current expression map.\n     */\n    QueryExpressionMap.prototype.createAlias = function (options) {\n        var aliasName = options.name;\n        if (!aliasName && options.tablePath)\n            aliasName = options.tablePath;\n        if (!aliasName && options.target instanceof Function)\n            aliasName = options.target.name;\n        if (!aliasName && typeof options.target === \"string\")\n            aliasName = options.target;\n        var alias = new Alias_1.Alias();\n        alias.type = options.type;\n        if (aliasName)\n            alias.name = aliasName;\n        if (options.metadata)\n            alias.metadata = options.metadata;\n        if (options.target && !alias.hasMetadata)\n            alias.metadata = this.connection.getMetadata(options.target);\n        if (options.tablePath)\n            alias.tablePath = options.tablePath;\n        if (options.subQuery)\n            alias.subQuery = options.subQuery;\n        this.aliases.push(alias);\n        return alias;\n    };\n    /**\n     * Finds alias with the given name.\n     * If alias was not found it throw an exception.\n     */\n    QueryExpressionMap.prototype.findAliasByName = function (aliasName) {\n        var alias = this.aliases.find(function (alias) { return alias.name === aliasName; });\n        if (!alias)\n            throw new Error(\"\\\"\" + aliasName + \"\\\" alias was not found. Maybe you forgot to join it?\");\n        return alias;\n    };\n    QueryExpressionMap.prototype.findColumnByAliasExpression = function (aliasExpression) {\n        var _a = __read(aliasExpression.split(\".\"), 2), aliasName = _a[0], propertyPath = _a[1];\n        var alias = this.findAliasByName(aliasName);\n        return alias.metadata.findColumnWithPropertyName(propertyPath);\n    };\n    Object.defineProperty(QueryExpressionMap.prototype, \"relationMetadata\", {\n        /**\n         * Gets relation metadata of the relation this query builder works with.\n         *\n         * todo: add proper exceptions\n         */\n        get: function () {\n            if (!this.mainAlias)\n                throw new Error(\"Entity to work with is not specified!\"); // todo: better message\n            var relationMetadata = this.mainAlias.metadata.findRelationWithPropertyPath(this.relationPropertyPath);\n            if (!relationMetadata)\n                throw new Error(\"Relation \" + this.relationPropertyPath + \" was not found in entity \" + this.mainAlias.name); // todo: better message\n            return relationMetadata;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Copies all properties of the current QueryExpressionMap into a new one.\n     * Useful when QueryBuilder needs to create a copy of itself.\n     */\n    QueryExpressionMap.prototype.clone = function () {\n        var _this = this;\n        var map = new QueryExpressionMap(this.connection);\n        map.queryType = this.queryType;\n        map.selects = this.selects.map(function (select) { return select; });\n        this.aliases.forEach(function (alias) { return map.aliases.push(new Alias_1.Alias(alias)); });\n        map.mainAlias = this.mainAlias;\n        map.valuesSet = this.valuesSet;\n        map.returning = this.returning;\n        map.onConflict = this.onConflict;\n        map.joinAttributes = this.joinAttributes.map(function (join) { return new JoinAttribute_1.JoinAttribute(_this.connection, _this, join); });\n        map.relationIdAttributes = this.relationIdAttributes.map(function (relationId) { return new RelationIdAttribute_1.RelationIdAttribute(_this, relationId); });\n        map.relationCountAttributes = this.relationCountAttributes.map(function (relationCount) { return new RelationCountAttribute_1.RelationCountAttribute(_this, relationCount); });\n        map.wheres = this.wheres.map(function (where) { return (__assign({}, where)); });\n        map.havings = this.havings.map(function (having) { return (__assign({}, having)); });\n        map.orderBys = Object.assign({}, this.orderBys);\n        map.groupBys = this.groupBys.map(function (groupBy) { return groupBy; });\n        map.limit = this.limit;\n        map.offset = this.offset;\n        map.skip = this.skip;\n        map.take = this.take;\n        map.lockMode = this.lockMode;\n        map.lockVersion = this.lockVersion;\n        map.parameters = Object.assign({}, this.parameters);\n        map.disableEscaping = this.disableEscaping;\n        map.enableRelationIdValues = this.enableRelationIdValues;\n        map.extraAppendedAndWhereCondition = this.extraAppendedAndWhereCondition;\n        map.subQuery = this.subQuery;\n        map.aliasNamePrefixingEnabled = this.aliasNamePrefixingEnabled;\n        map.cache = this.cache;\n        map.cacheId = this.cacheId;\n        map.cacheDuration = this.cacheDuration;\n        map.relationPropertyPath = this.relationPropertyPath;\n        map.of = this.of;\n        map.insertColumns = this.insertColumns;\n        map.whereEntities = this.whereEntities;\n        map.updateEntity = this.updateEntity;\n        map.callListeners = this.callListeners;\n        map.useTransaction = this.useTransaction;\n        map.nativeParameters = this.nativeParameters;\n        return map;\n    };\n    return QueryExpressionMap;\n}());\nexports.QueryExpressionMap = QueryExpressionMap;\n\n//# sourceMappingURL=QueryExpressionMap.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/query-builder/QueryExpressionMap.js?");

/***/ }),

/***/ "./node_modules/typeorm/query-builder/RelationIdLoader.js":
/*!****************************************************************!*\
  !*** ./node_modules/typeorm/query-builder/RelationIdLoader.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar RelationMetadata_1 = __webpack_require__(/*! ../metadata/RelationMetadata */ \"./node_modules/typeorm/metadata/RelationMetadata.js\");\n/**\n * Loads relation ids for the given entities.\n */\nvar RelationIdLoader = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function RelationIdLoader(connection) {\n        this.connection = connection;\n    }\n    /**\n     * Loads relation ids of the given entity or entities.\n     */\n    RelationIdLoader.prototype.load = function (relationOrTarget, relationNameOrEntities, entitiesOrRelatedEntities, maybeRelatedEntities) {\n        return __awaiter(this, void 0, void 0, function () {\n            var relation, entities, relatedEntities, entityMetadata;\n            return __generator(this, function (_a) {\n                if (relationOrTarget instanceof RelationMetadata_1.RelationMetadata) {\n                    relation = relationOrTarget;\n                    entities = relationNameOrEntities instanceof Array ? relationNameOrEntities : [relationNameOrEntities];\n                    relatedEntities = entitiesOrRelatedEntities instanceof Array ? entitiesOrRelatedEntities : (entitiesOrRelatedEntities ? [entitiesOrRelatedEntities] : undefined);\n                }\n                else {\n                    entityMetadata = this.connection.getMetadata(relationOrTarget);\n                    relation = entityMetadata.findRelationWithPropertyPath(relationNameOrEntities);\n                    if (!relation)\n                        throw new Error(\"Relation \\\"\" + relation + \"\\\" was not found in \\\"\" + entityMetadata.name + \"\\\".\");\n                    entities = entitiesOrRelatedEntities instanceof Array ? entitiesOrRelatedEntities : [entitiesOrRelatedEntities];\n                    relatedEntities = maybeRelatedEntities instanceof Array ? maybeRelatedEntities : (maybeRelatedEntities ? [maybeRelatedEntities] : undefined);\n                }\n                // load relation ids depend of relation type\n                if (relation.isManyToMany) {\n                    return [2 /*return*/, this.loadForManyToMany(relation, entities, relatedEntities)];\n                }\n                else if (relation.isManyToOne || relation.isOneToOneOwner) {\n                    return [2 /*return*/, this.loadForManyToOneAndOneToOneOwner(relation, entities, relatedEntities)];\n                }\n                else { // if (relation.isOneToMany || relation.isOneToOneNotOwner) {\n                    return [2 /*return*/, this.loadForOneToManyAndOneToOneNotOwner(relation, entities, relatedEntities)];\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * Loads relation ids of the given entities and groups them into the object with parent and children.\n     *\n     * todo: extract this method?\n     */\n    RelationIdLoader.prototype.loadManyToManyRelationIdsAndGroup = function (relation, entitiesOrEntities, relatedEntityOrEntities) {\n        return __awaiter(this, void 0, void 0, function () {\n            var isMany, entities, relationIds, relatedEntities, columns, inverseColumns;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        isMany = relation.isManyToMany || relation.isOneToMany;\n                        entities = entitiesOrEntities instanceof Array ? entitiesOrEntities : [entitiesOrEntities];\n                        if (!!relatedEntityOrEntities) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.connection.relationLoader.load(relation, entitiesOrEntities)];\n                    case 1:\n                        relatedEntityOrEntities = _a.sent();\n                        if (!relatedEntityOrEntities.length)\n                            return [2 /*return*/, entities.map(function (entity) { return ({ entity: entity, related: isMany ? [] : undefined }); })];\n                        _a.label = 2;\n                    case 2: return [4 /*yield*/, this.load(relation, entitiesOrEntities, relatedEntityOrEntities)];\n                    case 3:\n                        relationIds = _a.sent();\n                        relatedEntities = relatedEntityOrEntities instanceof Array ? relatedEntityOrEntities : [relatedEntityOrEntities];\n                        if (relation.isManyToManyOwner) {\n                            columns = relation.junctionEntityMetadata.inverseColumns.map(function (column) { return column.referencedColumn; });\n                            inverseColumns = relation.junctionEntityMetadata.ownerColumns.map(function (column) { return column.referencedColumn; });\n                        }\n                        else if (relation.isManyToManyNotOwner) {\n                            columns = relation.junctionEntityMetadata.ownerColumns.map(function (column) { return column.referencedColumn; });\n                            inverseColumns = relation.junctionEntityMetadata.inverseColumns.map(function (column) { return column.referencedColumn; });\n                        }\n                        else if (relation.isManyToOne || relation.isOneToOneOwner) {\n                            columns = relation.joinColumns.map(function (column) { return column.referencedColumn; });\n                            inverseColumns = relation.entityMetadata.primaryColumns;\n                        }\n                        else if (relation.isOneToMany || relation.isOneToOneNotOwner) {\n                            columns = relation.inverseRelation.entityMetadata.primaryColumns;\n                            inverseColumns = relation.inverseRelation.joinColumns.map(function (column) { return column.referencedColumn; });\n                        }\n                        else {\n                        }\n                        return [2 /*return*/, entities.map(function (entity) {\n                                var group = { entity: entity, related: isMany ? [] : undefined };\n                                relationIds.forEach(function (relationId) {\n                                    var entityMatched = inverseColumns.every(function (column) {\n                                        return column.getEntityValue(entity) === relationId[column.entityMetadata.name + \"_\" + column.propertyPath.replace(\".\", \"_\")];\n                                    });\n                                    if (entityMatched) {\n                                        relatedEntities.forEach(function (relatedEntity) {\n                                            var relatedEntityMatched = columns.every(function (column) {\n                                                return column.getEntityValue(relatedEntity) === relationId[column.entityMetadata.name + \"_\" + relation.propertyPath.replace(\".\", \"_\") + \"_\" + column.propertyPath.replace(\".\", \"_\")];\n                                            });\n                                            if (relatedEntityMatched) {\n                                                if (isMany) {\n                                                    group.related.push(relatedEntity);\n                                                }\n                                                else {\n                                                    group.related = relatedEntity;\n                                                }\n                                            }\n                                        });\n                                    }\n                                });\n                                return group;\n                            })];\n                }\n            });\n        });\n    };\n    /**\n     * Loads relation ids of the given entities and maps them into the given entity property.\n\n    async loadManyToManyRelationIdsAndMap(\n        relation: RelationMetadata,\n        entityOrEntities: ObjectLiteral|ObjectLiteral[],\n        mapToEntityOrEntities: ObjectLiteral|ObjectLiteral[],\n        propertyName: string\n    ): Promise<void> {\n\n        const relationIds = await this.loadManyToManyRelationIds(relation, entityOrEntities, mapToEntityOrEntities);\n        const mapToEntities = mapToEntityOrEntities instanceof Array ? mapToEntityOrEntities : [mapToEntityOrEntities];\n        const junctionMetadata = relation.junctionEntityMetadata!;\n        const mainAlias = junctionMetadata.name;\n        const columns = relation.isOwning ? junctionMetadata.inverseColumns : junctionMetadata.ownerColumns;\n        const inverseColumns = relation.isOwning ? junctionMetadata.ownerColumns : junctionMetadata.inverseColumns;\n\n        mapToEntities.forEach(mapToEntity => {\n            mapToEntity[propertyName] = [];\n            relationIds.forEach(relationId => {\n                const match = inverseColumns.every(column => {\n                    return column.referencedColumn!.getEntityValue(mapToEntity) === relationId[mainAlias + \"_\" + column.propertyName];\n                });\n                if (match) {\n                    if (columns.length === 1) {\n                        mapToEntity[propertyName].push(relationId[mainAlias + \"_\" + columns[0].propertyName]);\n\n                    } else {\n                        const value = {};\n                        columns.forEach(column => {\n                            column.referencedColumn!.setEntityValue(value, relationId[mainAlias + \"_\" + column.propertyName]);\n                        });\n                        mapToEntity[propertyName].push(value);\n                    }\n                }\n            });\n        });\n    }*/\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Loads relation ids for the many-to-many relation.\n     */\n    RelationIdLoader.prototype.loadForManyToMany = function (relation, entities, relatedEntities) {\n        var junctionMetadata = relation.junctionEntityMetadata;\n        var mainAlias = junctionMetadata.name;\n        var columns = relation.isOwning ? junctionMetadata.ownerColumns : junctionMetadata.inverseColumns;\n        var inverseColumns = relation.isOwning ? junctionMetadata.inverseColumns : junctionMetadata.ownerColumns;\n        var qb = this.connection.createQueryBuilder();\n        // select all columns from junction table\n        junctionMetadata.ownerColumns.forEach(function (column) {\n            var columnName = column.referencedColumn.entityMetadata.name + \"_\" + column.referencedColumn.propertyPath.replace(\".\", \"_\");\n            qb.addSelect(mainAlias + \".\" + column.propertyPath, columnName);\n        });\n        junctionMetadata.inverseColumns.forEach(function (column) {\n            var columnName = column.referencedColumn.entityMetadata.name + \"_\" + relation.propertyPath.replace(\".\", \"_\") + \"_\" + column.referencedColumn.propertyPath.replace(\".\", \"_\");\n            qb.addSelect(mainAlias + \".\" + column.propertyPath, columnName);\n        });\n        // add conditions for the given entities\n        var condition1 = \"\";\n        if (columns.length === 1) {\n            qb.setParameter(\"values1\", entities.map(function (entity) { return columns[0].referencedColumn.getEntityValue(entity); }));\n            condition1 = mainAlias + \".\" + columns[0].propertyPath + \" IN (:...values1)\"; // todo: use ANY for postgres\n        }\n        else {\n            condition1 = \"(\" + entities.map(function (entity, entityIndex) {\n                return columns.map(function (column) {\n                    var paramName = \"entity1_\" + entityIndex + \"_\" + column.propertyName;\n                    qb.setParameter(paramName, column.referencedColumn.getEntityValue(entity));\n                    return mainAlias + \".\" + column.propertyPath + \" = :\" + paramName;\n                }).join(\" AND \");\n            }).map(function (condition) { return \"(\" + condition + \")\"; }).join(\" OR \") + \")\";\n        }\n        // add conditions for the given inverse entities\n        var condition2 = \"\";\n        if (relatedEntities) {\n            if (inverseColumns.length === 1) {\n                qb.setParameter(\"values2\", relatedEntities.map(function (entity) { return inverseColumns[0].referencedColumn.getEntityValue(entity); }));\n                condition2 = mainAlias + \".\" + inverseColumns[0].propertyPath + \" IN (:...values2)\"; // todo: use ANY for postgres\n            }\n            else {\n                condition2 = \"(\" + relatedEntities.map(function (entity, entityIndex) {\n                    return inverseColumns.map(function (column) {\n                        var paramName = \"entity2_\" + entityIndex + \"_\" + column.propertyName;\n                        qb.setParameter(paramName, column.referencedColumn.getEntityValue(entity));\n                        return mainAlias + \".\" + column.propertyPath + \" = :\" + paramName;\n                    }).join(\" AND \");\n                }).map(function (condition) { return \"(\" + condition + \")\"; }).join(\" OR \") + \")\";\n            }\n        }\n        // execute query\n        return qb\n            .from(junctionMetadata.target, mainAlias)\n            .where(condition1 + (condition2 ? \" AND \" + condition2 : \"\"))\n            .getRawMany();\n    };\n    /**\n     * Loads relation ids for the many-to-one and one-to-one owner relations.\n     */\n    RelationIdLoader.prototype.loadForManyToOneAndOneToOneOwner = function (relation, entities, relatedEntities) {\n        var mainAlias = relation.entityMetadata.targetName;\n        // select all columns we need\n        var qb = this.connection.createQueryBuilder();\n        relation.entityMetadata.primaryColumns.forEach(function (primaryColumn) {\n            var columnName = primaryColumn.entityMetadata.name + \"_\" + primaryColumn.propertyPath.replace(\".\", \"_\");\n            qb.addSelect(mainAlias + \".\" + primaryColumn.propertyPath, columnName);\n        });\n        relation.joinColumns.forEach(function (column) {\n            var columnName = column.referencedColumn.entityMetadata.name + \"_\" + relation.propertyPath.replace(\".\", \"_\") + \"_\" + column.referencedColumn.propertyPath.replace(\".\", \"_\");\n            qb.addSelect(mainAlias + \".\" + column.propertyPath, columnName);\n        });\n        // add condition for entities\n        var condition = \"\";\n        if (relation.entityMetadata.primaryColumns.length === 1) {\n            qb.setParameter(\"values\", entities.map(function (entity) { return relation.entityMetadata.primaryColumns[0].getEntityValue(entity); }));\n            condition = mainAlias + \".\" + relation.entityMetadata.primaryColumns[0].propertyPath + \" IN (:...values)\";\n        }\n        else {\n            condition = entities.map(function (entity, entityIndex) {\n                return relation.entityMetadata.primaryColumns.map(function (column, columnIndex) {\n                    var paramName = \"entity\" + entityIndex + \"_\" + columnIndex;\n                    qb.setParameter(paramName, column.getEntityValue(entity));\n                    return mainAlias + \".\" + column.propertyPath + \" = :\" + paramName;\n                }).join(\" AND \");\n            }).map(function (condition) { return \"(\" + condition + \")\"; }).join(\" OR \");\n        }\n        // execute query\n        return qb.from(relation.entityMetadata.target, mainAlias)\n            .where(condition)\n            .getRawMany();\n    };\n    /**\n     * Loads relation ids for the one-to-many and one-to-one not owner relations.\n     */\n    RelationIdLoader.prototype.loadForOneToManyAndOneToOneNotOwner = function (relation, entities, relatedEntities) {\n        relation = relation.inverseRelation;\n        var mainAlias = relation.entityMetadata.targetName;\n        // select all columns we need\n        var qb = this.connection.createQueryBuilder();\n        relation.entityMetadata.primaryColumns.forEach(function (primaryColumn) {\n            var columnName = primaryColumn.entityMetadata.name + \"_\" + relation.inverseRelation.propertyPath.replace(\".\", \"_\") + \"_\" + primaryColumn.propertyPath.replace(\".\", \"_\");\n            qb.addSelect(mainAlias + \".\" + primaryColumn.propertyPath, columnName);\n        });\n        relation.joinColumns.forEach(function (column) {\n            var columnName = column.referencedColumn.entityMetadata.name + \"_\" + column.referencedColumn.propertyPath.replace(\".\", \"_\");\n            qb.addSelect(mainAlias + \".\" + column.propertyPath, columnName);\n        });\n        // add condition for entities\n        var condition = \"\";\n        if (relation.joinColumns.length === 1) {\n            qb.setParameter(\"values\", entities.map(function (entity) { return relation.joinColumns[0].referencedColumn.getEntityValue(entity); }));\n            condition = mainAlias + \".\" + relation.joinColumns[0].propertyPath + \" IN (:...values)\";\n        }\n        else {\n            condition = entities.map(function (entity, entityIndex) {\n                return relation.joinColumns.map(function (joinColumn, joinColumnIndex) {\n                    var paramName = \"entity\" + entityIndex + \"_\" + joinColumnIndex;\n                    qb.setParameter(paramName, joinColumn.referencedColumn.getEntityValue(entity));\n                    return mainAlias + \".\" + joinColumn.propertyPath + \" = :\" + paramName;\n                }).join(\" AND \");\n            }).map(function (condition) { return \"(\" + condition + \")\"; }).join(\" OR \");\n        }\n        // execute query\n        return qb.from(relation.entityMetadata.target, mainAlias)\n            .where(condition)\n            .getRawMany();\n    };\n    return RelationIdLoader;\n}());\nexports.RelationIdLoader = RelationIdLoader;\n\n//# sourceMappingURL=RelationIdLoader.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/query-builder/RelationIdLoader.js?");

/***/ }),

/***/ "./node_modules/typeorm/query-builder/RelationLoader.js":
/*!**************************************************************!*\
  !*** ./node_modules/typeorm/query-builder/RelationLoader.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Wraps entities and creates getters/setters for their relations\n * to be able to lazily load relations when accessing these relations.\n */\nvar RelationLoader = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function RelationLoader(connection) {\n        this.connection = connection;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Loads relation data for the given entity and its relation.\n     */\n    RelationLoader.prototype.load = function (relation, entityOrEntities, queryRunner) {\n        if (queryRunner && queryRunner.isReleased)\n            queryRunner = undefined; // get new one if already closed\n        if (relation.isManyToOne || relation.isOneToOneOwner) {\n            return this.loadManyToOneOrOneToOneOwner(relation, entityOrEntities, queryRunner);\n        }\n        else if (relation.isOneToMany || relation.isOneToOneNotOwner) {\n            return this.loadOneToManyOrOneToOneNotOwner(relation, entityOrEntities, queryRunner);\n        }\n        else if (relation.isManyToManyOwner) {\n            return this.loadManyToManyOwner(relation, entityOrEntities, queryRunner);\n        }\n        else { // many-to-many non owner\n            return this.loadManyToManyNotOwner(relation, entityOrEntities, queryRunner);\n        }\n    };\n    /**\n     * Loads data for many-to-one and one-to-one owner relations.\n     *\n     * (ow) post.category<=>category.post\n     * loaded: category from post\n     * example: SELECT category.id AS category_id, category.name AS category_name FROM category category\n     *              INNER JOIN post Post ON Post.category=category.id WHERE Post.id=1\n     */\n    RelationLoader.prototype.loadManyToOneOrOneToOneOwner = function (relation, entityOrEntities, queryRunner) {\n        var entities = entityOrEntities instanceof Array ? entityOrEntities : [entityOrEntities];\n        var columns = relation.entityMetadata.primaryColumns;\n        var joinColumns = relation.isOwning ? relation.joinColumns : relation.inverseRelation.joinColumns;\n        var conditions = joinColumns.map(function (joinColumn) {\n            return relation.entityMetadata.name + \".\" + joinColumn.propertyName + \" = \" + relation.propertyName + \".\" + joinColumn.referencedColumn.propertyName;\n        }).join(\" AND \");\n        var joinAliasName = relation.entityMetadata.name;\n        var qb = this.connection\n            .createQueryBuilder(queryRunner)\n            .select(relation.propertyName) // category\n            .from(relation.type, relation.propertyName) // Category, category\n            .innerJoin(relation.entityMetadata.target, joinAliasName, conditions);\n        if (columns.length === 1) {\n            qb.where(joinAliasName + \".\" + columns[0].propertyPath + \" IN (:...\" + (joinAliasName + \"_\" + columns[0].propertyName) + \")\");\n            qb.setParameter(joinAliasName + \"_\" + columns[0].propertyName, entities.map(function (entity) { return columns[0].getEntityValue(entity); }));\n        }\n        else {\n            var condition = entities.map(function (entity, entityIndex) {\n                return columns.map(function (column, columnIndex) {\n                    var paramName = joinAliasName + \"_entity_\" + entityIndex + \"_\" + columnIndex;\n                    qb.setParameter(paramName, column.getEntityValue(entity));\n                    return joinAliasName + \".\" + column.propertyPath + \" = :\" + paramName;\n                }).join(\" AND \");\n            }).map(function (condition) { return \"(\" + condition + \")\"; }).join(\" OR \");\n            qb.where(condition);\n        }\n        return qb.getMany();\n        // return qb.getOne(); todo: fix all usages\n    };\n    /**\n     * Loads data for one-to-many and one-to-one not owner relations.\n     *\n     * SELECT post\n     * FROM post post\n     * WHERE post.[joinColumn.name] = entity[joinColumn.referencedColumn]\n     */\n    RelationLoader.prototype.loadOneToManyOrOneToOneNotOwner = function (relation, entityOrEntities, queryRunner) {\n        var entities = entityOrEntities instanceof Array ? entityOrEntities : [entityOrEntities];\n        var aliasName = relation.propertyName;\n        var columns = relation.inverseRelation.joinColumns;\n        var qb = this.connection\n            .createQueryBuilder(queryRunner)\n            .select(aliasName)\n            .from(relation.inverseRelation.entityMetadata.target, aliasName);\n        if (columns.length === 1) {\n            qb.where(aliasName + \".\" + columns[0].propertyPath + \" IN (:...\" + (aliasName + \"_\" + columns[0].propertyName) + \")\");\n            qb.setParameter(aliasName + \"_\" + columns[0].propertyName, entities.map(function (entity) { return columns[0].referencedColumn.getEntityValue(entity); }));\n        }\n        else {\n            var condition = entities.map(function (entity, entityIndex) {\n                return columns.map(function (column, columnIndex) {\n                    var paramName = aliasName + \"_entity_\" + entityIndex + \"_\" + columnIndex;\n                    qb.setParameter(paramName, column.referencedColumn.getEntityValue(entity));\n                    return aliasName + \".\" + column.propertyPath + \" = :\" + paramName;\n                }).join(\" AND \");\n            }).map(function (condition) { return \"(\" + condition + \")\"; }).join(\" OR \");\n            qb.where(condition);\n        }\n        return qb.getMany();\n        // return relation.isOneToMany ? qb.getMany() : qb.getOne(); todo: fix all usages\n    };\n    /**\n     * Loads data for many-to-many owner relations.\n     *\n     * SELECT category\n     * FROM category category\n     * INNER JOIN post_categories post_categories\n     * ON post_categories.postId = :postId\n     * AND post_categories.categoryId = category.id\n     */\n    RelationLoader.prototype.loadManyToManyOwner = function (relation, entityOrEntities, queryRunner) {\n        var entities = entityOrEntities instanceof Array ? entityOrEntities : [entityOrEntities];\n        var mainAlias = relation.propertyName;\n        var joinAlias = relation.junctionEntityMetadata.tableName;\n        var joinColumnConditions = relation.joinColumns.map(function (joinColumn) {\n            return joinAlias + \".\" + joinColumn.propertyName + \" IN (:...\" + joinColumn.propertyName + \")\";\n        });\n        var inverseJoinColumnConditions = relation.inverseJoinColumns.map(function (inverseJoinColumn) {\n            return joinAlias + \".\" + inverseJoinColumn.propertyName + \"=\" + mainAlias + \".\" + inverseJoinColumn.referencedColumn.propertyName;\n        });\n        var parameters = relation.joinColumns.reduce(function (parameters, joinColumn) {\n            parameters[joinColumn.propertyName] = entities.map(function (entity) { return joinColumn.referencedColumn.getEntityValue(entity); });\n            return parameters;\n        }, {});\n        return this.connection\n            .createQueryBuilder(queryRunner)\n            .select(mainAlias)\n            .from(relation.type, mainAlias)\n            .innerJoin(joinAlias, joinAlias, __spread(joinColumnConditions, inverseJoinColumnConditions).join(\" AND \"))\n            .setParameters(parameters)\n            .getMany();\n    };\n    /**\n     * Loads data for many-to-many not owner relations.\n     *\n     * SELECT post\n     * FROM post post\n     * INNER JOIN post_categories post_categories\n     * ON post_categories.postId = post.id\n     * AND post_categories.categoryId = post_categories.categoryId\n     */\n    RelationLoader.prototype.loadManyToManyNotOwner = function (relation, entityOrEntities, queryRunner) {\n        var entities = entityOrEntities instanceof Array ? entityOrEntities : [entityOrEntities];\n        var mainAlias = relation.propertyName;\n        var joinAlias = relation.junctionEntityMetadata.tableName;\n        var joinColumnConditions = relation.inverseRelation.joinColumns.map(function (joinColumn) {\n            return joinAlias + \".\" + joinColumn.propertyName + \" = \" + mainAlias + \".\" + joinColumn.referencedColumn.propertyName;\n        });\n        var inverseJoinColumnConditions = relation.inverseRelation.inverseJoinColumns.map(function (inverseJoinColumn) {\n            return joinAlias + \".\" + inverseJoinColumn.propertyName + \" IN (:...\" + inverseJoinColumn.propertyName + \")\";\n        });\n        var parameters = relation.inverseRelation.inverseJoinColumns.reduce(function (parameters, joinColumn) {\n            parameters[joinColumn.propertyName] = entities.map(function (entity) { return joinColumn.referencedColumn.getEntityValue(entity); });\n            return parameters;\n        }, {});\n        return this.connection\n            .createQueryBuilder(queryRunner)\n            .select(mainAlias)\n            .from(relation.type, mainAlias)\n            .innerJoin(joinAlias, joinAlias, __spread(joinColumnConditions, inverseJoinColumnConditions).join(\" AND \"))\n            .setParameters(parameters)\n            .getMany();\n    };\n    /**\n     * Wraps given entity and creates getters/setters for its given relation\n     * to be able to lazily load data when accessing this relation.\n     */\n    RelationLoader.prototype.enableLazyLoad = function (relation, entity, queryRunner) {\n        var relationLoader = this;\n        var dataIndex = \"__\" + relation.propertyName + \"__\"; // in what property of the entity loaded data will be stored\n        var promiseIndex = \"__promise_\" + relation.propertyName + \"__\"; // in what property of the entity loading promise will be stored\n        var resolveIndex = \"__has_\" + relation.propertyName + \"__\"; // indicates if relation data already was loaded or not, we need this flag if loaded data is empty\n        Object.defineProperty(entity, relation.propertyName, {\n            get: function () {\n                var _this = this;\n                if (this[resolveIndex] === true) // if related data already was loaded then simply return it\n                    return Promise.resolve(this[dataIndex]);\n                if (this[promiseIndex]) // if related data is loading then return a promise relationLoader loads it\n                    return this[promiseIndex];\n                // nothing is loaded yet, load relation data and save it in the model once they are loaded\n                this[promiseIndex] = relationLoader.load(relation, this, queryRunner).then(function (result) {\n                    if (relation.isOneToOne || relation.isManyToOne)\n                        result = result[0];\n                    _this[dataIndex] = result;\n                    _this[resolveIndex] = true;\n                    delete _this[promiseIndex];\n                    return _this[dataIndex];\n                });\n                return this[promiseIndex];\n            },\n            set: function (value) {\n                var _this = this;\n                if (value instanceof Promise) { // if set data is a promise then wait for its resolve and save in the object\n                    value.then(function (result) {\n                        _this[dataIndex] = result;\n                        _this[resolveIndex] = true;\n                    });\n                }\n                else { // if its direct data set (non promise, probably not safe-typed)\n                    this[dataIndex] = value;\n                    this[resolveIndex] = true;\n                }\n            },\n            configurable: true\n        });\n    };\n    return RelationLoader;\n}());\nexports.RelationLoader = RelationLoader;\n\n//# sourceMappingURL=RelationLoader.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/query-builder/RelationLoader.js?");

/***/ }),

/***/ "./node_modules/typeorm/query-builder/RelationQueryBuilder.js":
/*!********************************************************************!*\
  !*** ./node_modules/typeorm/query-builder/RelationQueryBuilder.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar QueryBuilder_1 = __webpack_require__(/*! ./QueryBuilder */ \"./node_modules/typeorm/query-builder/QueryBuilder.js\");\nvar RelationUpdater_1 = __webpack_require__(/*! ./RelationUpdater */ \"./node_modules/typeorm/query-builder/RelationUpdater.js\");\nvar RelationRemover_1 = __webpack_require__(/*! ./RelationRemover */ \"./node_modules/typeorm/query-builder/RelationRemover.js\");\n/**\n * Allows to work with entity relations and perform specific operations with those relations.\n *\n * todo: add transactions everywhere\n */\nvar RelationQueryBuilder = /** @class */ (function (_super) {\n    __extends(RelationQueryBuilder, _super);\n    function RelationQueryBuilder() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    // -------------------------------------------------------------------------\n    // Public Implemented Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Gets generated sql query without parameters being replaced.\n     */\n    RelationQueryBuilder.prototype.getQuery = function () {\n        return \"\";\n    };\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Sets entity (target) which relations will be updated.\n     */\n    RelationQueryBuilder.prototype.of = function (entity) {\n        this.expressionMap.of = entity;\n        return this;\n    };\n    /**\n     * Sets entity relation's value.\n     * Value can be entity, entity id or entity id map (if entity has composite ids).\n     * Works only for many-to-one and one-to-one relations.\n     * For many-to-many and one-to-many relations use #add and #remove methods instead.\n     */\n    RelationQueryBuilder.prototype.set = function (value) {\n        return __awaiter(this, void 0, void 0, function () {\n            var relation, updater;\n            return __generator(this, function (_a) {\n                relation = this.expressionMap.relationMetadata;\n                if (!this.expressionMap.of) // todo: move this check before relation query builder creation?\n                    throw new Error(\"Entity whose relation needs to be set is not set. Use .of method to define whose relation you want to set.\");\n                if (relation.isManyToMany || relation.isOneToMany)\n                    throw new Error(\"Set operation is only supported for many-to-one and one-to-one relations. \" +\n                        (\"However given \\\"\" + relation.propertyPath + \"\\\" has \" + relation.relationType + \" relation. \") +\n                        \"Use .add() method instead.\");\n                // if there are multiple join columns then user must send id map as \"value\" argument. check if he really did it\n                if (relation.joinColumns &&\n                    relation.joinColumns.length > 1 &&\n                    (!(value instanceof Object) || Object.keys(value).length < relation.joinColumns.length))\n                    throw new Error(\"Value to be set into the relation must be a map of relation ids, for example: .set({ firstName: \\\"...\\\", lastName: \\\"...\\\" })\");\n                updater = new RelationUpdater_1.RelationUpdater(this, this.expressionMap);\n                return [2 /*return*/, updater.update(value)];\n            });\n        });\n    };\n    /**\n     * Adds (binds) given value to entity relation.\n     * Value can be entity, entity id or entity id map (if entity has composite ids).\n     * Value also can be array of entities, array of entity ids or array of entity id maps (if entity has composite ids).\n     * Works only for many-to-many and one-to-many relations.\n     * For many-to-one and one-to-one use #set method instead.\n     */\n    RelationQueryBuilder.prototype.add = function (value) {\n        return __awaiter(this, void 0, void 0, function () {\n            var relation, updater;\n            return __generator(this, function (_a) {\n                if (value instanceof Array && value.length === 0)\n                    return [2 /*return*/];\n                relation = this.expressionMap.relationMetadata;\n                if (!this.expressionMap.of) // todo: move this check before relation query builder creation?\n                    throw new Error(\"Entity whose relation needs to be set is not set. Use .of method to define whose relation you want to set.\");\n                if (relation.isManyToOne || relation.isOneToOne)\n                    throw new Error(\"Add operation is only supported for many-to-many and one-to-many relations. \" +\n                        (\"However given \\\"\" + relation.propertyPath + \"\\\" has \" + relation.relationType + \" relation. \") +\n                        \"Use .set() method instead.\");\n                // if there are multiple join columns then user must send id map as \"value\" argument. check if he really did it\n                if (relation.joinColumns &&\n                    relation.joinColumns.length > 1 &&\n                    (!(value instanceof Object) || Object.keys(value).length < relation.joinColumns.length))\n                    throw new Error(\"Value to be set into the relation must be a map of relation ids, for example: .set({ firstName: \\\"...\\\", lastName: \\\"...\\\" })\");\n                updater = new RelationUpdater_1.RelationUpdater(this, this.expressionMap);\n                return [2 /*return*/, updater.update(value)];\n            });\n        });\n    };\n    /**\n     * Removes (unbinds) given value from entity relation.\n     * Value can be entity, entity id or entity id map (if entity has composite ids).\n     * Value also can be array of entities, array of entity ids or array of entity id maps (if entity has composite ids).\n     * Works only for many-to-many and one-to-many relations.\n     * For many-to-one and one-to-one use #set method instead.\n     */\n    RelationQueryBuilder.prototype.remove = function (value) {\n        return __awaiter(this, void 0, void 0, function () {\n            var relation, remover;\n            return __generator(this, function (_a) {\n                if (value instanceof Array && value.length === 0)\n                    return [2 /*return*/];\n                relation = this.expressionMap.relationMetadata;\n                if (!this.expressionMap.of) // todo: move this check before relation query builder creation?\n                    throw new Error(\"Entity whose relation needs to be set is not set. Use .of method to define whose relation you want to set.\");\n                if (relation.isManyToOne || relation.isOneToOne)\n                    throw new Error(\"Add operation is only supported for many-to-many and one-to-many relations. \" +\n                        (\"However given \\\"\" + relation.propertyPath + \"\\\" has \" + relation.relationType + \" relation. \") +\n                        \"Use .set(null) method instead.\");\n                remover = new RelationRemover_1.RelationRemover(this, this.expressionMap);\n                return [2 /*return*/, remover.remove(value)];\n            });\n        });\n    };\n    /**\n     * Adds (binds) and removes (unbinds) given values to/from entity relation.\n     * Value can be entity, entity id or entity id map (if entity has composite ids).\n     * Value also can be array of entities, array of entity ids or array of entity id maps (if entity has composite ids).\n     * Works only for many-to-many and one-to-many relations.\n     * For many-to-one and one-to-one use #set method instead.\n     */\n    RelationQueryBuilder.prototype.addAndRemove = function (added, removed) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.remove(removed)];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, this.add(added)];\n                    case 2:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Gets entity's relation id.\n    async getId(): Promise<any> {\n\n    }*/\n    /**\n     * Gets entity's relation ids.\n    async getIds(): Promise<any[]> {\n        return [];\n    }*/\n    /**\n     * Loads a single entity (relational) from the relation.\n     * You can also provide id of relational entity to filter by.\n     */\n    RelationQueryBuilder.prototype.loadOne = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.loadMany().then(function (results) { return results[0]; })];\n            });\n        });\n    };\n    /**\n     * Loads many entities (relational) from the relation.\n     * You can also provide ids of relational entities to filter by.\n     */\n    RelationQueryBuilder.prototype.loadMany = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var of, metadata;\n            return __generator(this, function (_a) {\n                of = this.expressionMap.of;\n                if (!(of instanceof Object)) {\n                    metadata = this.expressionMap.mainAlias.metadata;\n                    if (metadata.hasMultiplePrimaryKeys)\n                        throw new Error(\"Cannot load entity because only one primary key was specified, however entity contains multiple primary keys\");\n                    of = metadata.primaryColumns[0].createValueMap(of);\n                }\n                return [2 /*return*/, this.connection.relationLoader.load(this.expressionMap.relationMetadata, of)];\n            });\n        });\n    };\n    return RelationQueryBuilder;\n}(QueryBuilder_1.QueryBuilder));\nexports.RelationQueryBuilder = RelationQueryBuilder;\n\n//# sourceMappingURL=RelationQueryBuilder.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/query-builder/RelationQueryBuilder.js?");

/***/ }),

/***/ "./node_modules/typeorm/query-builder/RelationRemover.js":
/*!***************************************************************!*\
  !*** ./node_modules/typeorm/query-builder/RelationRemover.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Allows to work with entity relations and perform specific operations with those relations.\n *\n * todo: add transactions everywhere\n */\nvar RelationRemover = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function RelationRemover(queryBuilder, expressionMap) {\n        this.queryBuilder = queryBuilder;\n        this.expressionMap = expressionMap;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Performs remove operation on a relation.\n     */\n    RelationRemover.prototype.remove = function (value) {\n        return __awaiter(this, void 0, void 0, function () {\n            var relation, ofs, values_1, updateSet_1, parameters_1, conditions_1, condition, junctionMetadata_1, ofs, values, firstColumnValues, secondColumnValues_1, parameters_2, conditions_2, condition;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        relation = this.expressionMap.relationMetadata;\n                        if (!relation.isOneToMany) return [3 /*break*/, 2];\n                        ofs = this.expressionMap.of instanceof Array ? this.expressionMap.of : [this.expressionMap.of];\n                        values_1 = value instanceof Array ? value : [value];\n                        updateSet_1 = {};\n                        relation.inverseRelation.joinColumns.forEach(function (column) {\n                            updateSet_1[column.propertyName] = null;\n                        });\n                        parameters_1 = {};\n                        conditions_1 = [];\n                        ofs.forEach(function (of, ofIndex) {\n                            conditions_1.push.apply(conditions_1, __spread(values_1.map(function (value, valueIndex) {\n                                return __spread(relation.inverseRelation.joinColumns.map(function (column, columnIndex) {\n                                    var parameterName = \"joinColumn_\" + ofIndex + \"_\" + valueIndex + \"_\" + columnIndex;\n                                    parameters_1[parameterName] = of instanceof Object ? column.referencedColumn.getEntityValue(of) : of;\n                                    return column.propertyPath + \" = :\" + parameterName;\n                                }), relation.inverseRelation.entityMetadata.primaryColumns.map(function (column, columnIndex) {\n                                    var parameterName = \"primaryColumn_\" + valueIndex + \"_\" + valueIndex + \"_\" + columnIndex;\n                                    parameters_1[parameterName] = value instanceof Object ? column.getEntityValue(value) : value;\n                                    return column.propertyPath + \" = :\" + parameterName;\n                                })).join(\" AND \");\n                            })));\n                        });\n                        condition = conditions_1.map(function (str) { return \"(\" + str + \")\"; }).join(\" OR \");\n                        if (!condition)\n                            return [2 /*return*/];\n                        return [4 /*yield*/, this.queryBuilder\n                                .createQueryBuilder()\n                                .update(relation.inverseEntityMetadata.target)\n                                .set(updateSet_1)\n                                .where(condition)\n                                .setParameters(parameters_1)\n                                .execute()];\n                    case 1:\n                        _a.sent();\n                        return [3 /*break*/, 4];\n                    case 2:\n                        junctionMetadata_1 = relation.junctionEntityMetadata;\n                        ofs = this.expressionMap.of instanceof Array ? this.expressionMap.of : [this.expressionMap.of];\n                        values = value instanceof Array ? value : [value];\n                        firstColumnValues = relation.isManyToManyOwner ? ofs : values;\n                        secondColumnValues_1 = relation.isManyToManyOwner ? values : ofs;\n                        parameters_2 = {};\n                        conditions_2 = [];\n                        firstColumnValues.forEach(function (firstColumnVal, firstColumnValIndex) {\n                            conditions_2.push.apply(conditions_2, __spread(secondColumnValues_1.map(function (secondColumnVal, secondColumnValIndex) {\n                                return __spread(junctionMetadata_1.ownerColumns.map(function (column, columnIndex) {\n                                    var parameterName = \"firstValue_\" + firstColumnValIndex + \"_\" + secondColumnValIndex + \"_\" + columnIndex;\n                                    parameters_2[parameterName] = firstColumnVal instanceof Object ? column.referencedColumn.getEntityValue(firstColumnVal) : firstColumnVal;\n                                    return column.databaseName + \" = :\" + parameterName;\n                                }), junctionMetadata_1.inverseColumns.map(function (column, columnIndex) {\n                                    var parameterName = \"secondValue_\" + firstColumnValIndex + \"_\" + secondColumnValIndex + \"_\" + columnIndex;\n                                    parameters_2[parameterName] = firstColumnVal instanceof Object ? column.referencedColumn.getEntityValue(secondColumnVal) : secondColumnVal;\n                                    return column.databaseName + \" = :\" + parameterName;\n                                })).join(\" AND \");\n                            })));\n                        });\n                        condition = conditions_2.map(function (str) { return \"(\" + str + \")\"; }).join(\" OR \");\n                        return [4 /*yield*/, this.queryBuilder\n                                .createQueryBuilder()\n                                .delete()\n                                .from(junctionMetadata_1.tableName)\n                                .where(condition)\n                                .setParameters(parameters_2)\n                                .execute()];\n                    case 3:\n                        _a.sent();\n                        _a.label = 4;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return RelationRemover;\n}());\nexports.RelationRemover = RelationRemover;\n\n//# sourceMappingURL=RelationRemover.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/query-builder/RelationRemover.js?");

/***/ }),

/***/ "./node_modules/typeorm/query-builder/RelationUpdater.js":
/*!***************************************************************!*\
  !*** ./node_modules/typeorm/query-builder/RelationUpdater.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar OracleDriver_1 = __webpack_require__(/*! ../driver/oracle/OracleDriver */ \"./node_modules/typeorm/driver/oracle/OracleDriver.js\");\n/**\n * Allows to work with entity relations and perform specific operations with those relations.\n *\n * todo: add transactions everywhere\n */\nvar RelationUpdater = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function RelationUpdater(queryBuilder, expressionMap) {\n        this.queryBuilder = queryBuilder;\n        this.expressionMap = expressionMap;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Performs set or add operation on a relation.\n     */\n    RelationUpdater.prototype.update = function (value) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var relation, updateSet, updateSet_1, ofs, parameters_1, conditions_1, condition, of_1, updateSet, junctionMetadata_1, ofs, values, firstColumnValues, secondColumnValues_1, bulkInserted_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        relation = this.expressionMap.relationMetadata;\n                        if (!(relation.isManyToOne || relation.isOneToOneOwner)) return [3 /*break*/, 2];\n                        updateSet = relation.joinColumns.reduce(function (updateSet, joinColumn) {\n                            var relationValue = value instanceof Object ? joinColumn.referencedColumn.getEntityValue(value) : value;\n                            joinColumn.setEntityValue(updateSet, relationValue);\n                            return updateSet;\n                        }, {});\n                        if (!this.expressionMap.of || (this.expressionMap.of instanceof Array && !this.expressionMap.of.length))\n                            return [2 /*return*/];\n                        return [4 /*yield*/, this.queryBuilder\n                                .createQueryBuilder()\n                                .update(relation.entityMetadata.target)\n                                .set(updateSet)\n                                .whereInIds(this.expressionMap.of)\n                                .execute()];\n                    case 1:\n                        _a.sent();\n                        return [3 /*break*/, 10];\n                    case 2:\n                        if (!((relation.isOneToOneNotOwner || relation.isOneToMany) && value === null)) return [3 /*break*/, 4];\n                        updateSet_1 = {};\n                        relation.inverseRelation.joinColumns.forEach(function (column) {\n                            updateSet_1[column.propertyName] = null;\n                        });\n                        ofs = this.expressionMap.of instanceof Array ? this.expressionMap.of : [this.expressionMap.of];\n                        parameters_1 = {};\n                        conditions_1 = [];\n                        ofs.forEach(function (of, ofIndex) {\n                            relation.inverseRelation.joinColumns.map(function (column, columnIndex) {\n                                var parameterName = \"joinColumn_\" + ofIndex + \"_\" + columnIndex;\n                                parameters_1[parameterName] = of instanceof Object ? column.referencedColumn.getEntityValue(of) : of;\n                                conditions_1.push(column.propertyPath + \" = :\" + parameterName);\n                            });\n                        });\n                        condition = conditions_1.map(function (str) { return \"(\" + str + \")\"; }).join(\" OR \");\n                        if (!condition)\n                            return [2 /*return*/];\n                        return [4 /*yield*/, this.queryBuilder\n                                .createQueryBuilder()\n                                .update(relation.inverseEntityMetadata.target)\n                                .set(updateSet_1)\n                                .where(condition)\n                                .setParameters(parameters_1)\n                                .execute()];\n                    case 3:\n                        _a.sent();\n                        return [3 /*break*/, 10];\n                    case 4:\n                        if (!(relation.isOneToOneNotOwner || relation.isOneToMany)) return [3 /*break*/, 6];\n                        if (this.expressionMap.of instanceof Array)\n                            throw new Error(\"You cannot update relations of multiple entities with the same related object. Provide a single entity into .of method.\");\n                        of_1 = this.expressionMap.of;\n                        updateSet = relation.inverseRelation.joinColumns.reduce(function (updateSet, joinColumn) {\n                            var relationValue = of_1 instanceof Object ? joinColumn.referencedColumn.getEntityValue(of_1) : of_1;\n                            joinColumn.setEntityValue(updateSet, relationValue);\n                            return updateSet;\n                        }, {});\n                        if (!value || (value instanceof Array && !value.length))\n                            return [2 /*return*/];\n                        return [4 /*yield*/, this.queryBuilder\n                                .createQueryBuilder()\n                                .update(relation.inverseEntityMetadata.target)\n                                .set(updateSet)\n                                .whereInIds(value)\n                                .execute()];\n                    case 5:\n                        _a.sent();\n                        return [3 /*break*/, 10];\n                    case 6:\n                        junctionMetadata_1 = relation.junctionEntityMetadata;\n                        ofs = this.expressionMap.of instanceof Array ? this.expressionMap.of : [this.expressionMap.of];\n                        values = value instanceof Array ? value : [value];\n                        firstColumnValues = relation.isManyToManyOwner ? ofs : values;\n                        secondColumnValues_1 = relation.isManyToManyOwner ? values : ofs;\n                        bulkInserted_1 = [];\n                        firstColumnValues.forEach(function (firstColumnVal) {\n                            secondColumnValues_1.forEach(function (secondColumnVal) {\n                                var inserted = {};\n                                junctionMetadata_1.ownerColumns.forEach(function (column) {\n                                    inserted[column.databaseName] = firstColumnVal instanceof Object ? column.referencedColumn.getEntityValue(firstColumnVal) : firstColumnVal;\n                                });\n                                junctionMetadata_1.inverseColumns.forEach(function (column) {\n                                    inserted[column.databaseName] = secondColumnVal instanceof Object ? column.referencedColumn.getEntityValue(secondColumnVal) : secondColumnVal;\n                                });\n                                bulkInserted_1.push(inserted);\n                            });\n                        });\n                        if (!bulkInserted_1.length)\n                            return [2 /*return*/];\n                        if (!(this.queryBuilder.connection.driver instanceof OracleDriver_1.OracleDriver)) return [3 /*break*/, 8];\n                        return [4 /*yield*/, Promise.all(bulkInserted_1.map(function (value) {\n                                return _this.queryBuilder\n                                    .createQueryBuilder()\n                                    .insert()\n                                    .into(junctionMetadata_1.tableName)\n                                    .values(value)\n                                    .execute();\n                            }))];\n                    case 7:\n                        _a.sent();\n                        return [3 /*break*/, 10];\n                    case 8: return [4 /*yield*/, this.queryBuilder\n                            .createQueryBuilder()\n                            .insert()\n                            .into(junctionMetadata_1.tableName)\n                            .values(bulkInserted_1)\n                            .execute()];\n                    case 9:\n                        _a.sent();\n                        _a.label = 10;\n                    case 10: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return RelationUpdater;\n}());\nexports.RelationUpdater = RelationUpdater;\n\n//# sourceMappingURL=RelationUpdater.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/query-builder/RelationUpdater.js?");

/***/ }),

/***/ "./node_modules/typeorm/query-builder/ReturningResultsEntityUpdator.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/typeorm/query-builder/ReturningResultsEntityUpdator.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar OrmUtils_1 = __webpack_require__(/*! ../util/OrmUtils */ \"./node_modules/typeorm/util/OrmUtils.js\");\nvar OracleDriver_1 = __webpack_require__(/*! ../driver/oracle/OracleDriver */ \"./node_modules/typeorm/driver/oracle/OracleDriver.js\");\n/**\n * Updates entity with returning results in the entity insert and update operations.\n */\nvar ReturningResultsEntityUpdator = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function ReturningResultsEntityUpdator(queryRunner, expressionMap) {\n        this.queryRunner = queryRunner;\n        this.expressionMap = expressionMap;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Updates entities with a special columns after updation query execution.\n     */\n    ReturningResultsEntityUpdator.prototype.update = function (updateResult, entities) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var metadata;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        metadata = this.expressionMap.mainAlias.metadata;\n                        return [4 /*yield*/, Promise.all(entities.map(function (entity, entityIndex) { return __awaiter(_this, void 0, void 0, function () {\n                                var _this = this;\n                                var result, returningColumns, updationColumns, entityId, loadedReturningColumns;\n                                return __generator(this, function (_a) {\n                                    switch (_a.label) {\n                                        case 0:\n                                            if (!this.queryRunner.connection.driver.isReturningSqlSupported()) return [3 /*break*/, 1];\n                                            if (this.queryRunner.connection.driver instanceof OracleDriver_1.OracleDriver && updateResult.raw instanceof Array && this.expressionMap.extraReturningColumns.length > 0) {\n                                                updateResult.raw = updateResult.raw.reduce(function (newRaw, rawItem, rawItemIndex) {\n                                                    newRaw[_this.expressionMap.extraReturningColumns[rawItemIndex].databaseName] = rawItem[0];\n                                                    return newRaw;\n                                                }, {});\n                                            }\n                                            result = updateResult.raw instanceof Array ? updateResult.raw[entityIndex] : updateResult.raw;\n                                            returningColumns = this.queryRunner.connection.driver.createGeneratedMap(metadata, result);\n                                            if (returningColumns) {\n                                                this.queryRunner.manager.merge(metadata.target, entity, returningColumns);\n                                                updateResult.generatedMaps.push(returningColumns);\n                                            }\n                                            return [3 /*break*/, 3];\n                                        case 1:\n                                            updationColumns = this.getUpdationReturningColumns();\n                                            if (!(updationColumns.length > 0)) return [3 /*break*/, 3];\n                                            entityId = this.expressionMap.mainAlias.metadata.getEntityIdMap(entity);\n                                            if (!entityId)\n                                                throw new Error(\"Cannot update entity because entity id is not set in the entity.\");\n                                            return [4 /*yield*/, this.queryRunner.manager\n                                                    .createQueryBuilder()\n                                                    .select(metadata.primaryColumns.map(function (column) { return metadata.targetName + \".\" + column.propertyPath; }))\n                                                    .addSelect(this.getUpdationReturningColumns().map(function (column) { return metadata.targetName + \".\" + column.propertyPath; }))\n                                                    .from(metadata.target, metadata.targetName)\n                                                    .where(entityId)\n                                                    .getOne()];\n                                        case 2:\n                                            loadedReturningColumns = _a.sent();\n                                            if (loadedReturningColumns) {\n                                                this.queryRunner.manager.merge(metadata.target, entity, loadedReturningColumns);\n                                                updateResult.generatedMaps.push(loadedReturningColumns);\n                                            }\n                                            _a.label = 3;\n                                        case 3: return [2 /*return*/];\n                                    }\n                                });\n                            }); }))];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Updates entities with a special columns after insertion query execution.\n     */\n    ReturningResultsEntityUpdator.prototype.insert = function (insertResult, entities) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var metadata, insertionColumns, generatedMaps;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        metadata = this.expressionMap.mainAlias.metadata;\n                        insertionColumns = this.getInsertionReturningColumns();\n                        generatedMaps = entities.map(function (entity, entityIndex) {\n                            if (_this.queryRunner.connection.driver instanceof OracleDriver_1.OracleDriver && insertResult.raw instanceof Array && _this.expressionMap.extraReturningColumns.length > 0) {\n                                insertResult.raw = insertResult.raw.reduce(function (newRaw, rawItem, rawItemIndex) {\n                                    newRaw[_this.expressionMap.extraReturningColumns[rawItemIndex].databaseName] = rawItem[0];\n                                    return newRaw;\n                                }, {});\n                            }\n                            // get all values generated by a database for us\n                            var result = insertResult.raw instanceof Array ? insertResult.raw[entityIndex] : insertResult.raw;\n                            var generatedMap = _this.queryRunner.connection.driver.createGeneratedMap(metadata, result) || {};\n                            // if database does not support uuid generation we need to get uuid values\n                            // generated by orm and set them to the generatedMap\n                            if (_this.queryRunner.connection.driver.isUUIDGenerationSupported() === false) {\n                                metadata.generatedColumns.forEach(function (generatedColumn) {\n                                    if (generatedColumn.generationStrategy === \"uuid\") {\n                                        // uuid can be defined by user in a model, that's why first we get it\n                                        var uuid = generatedColumn.getEntityValue(entity);\n                                        if (!uuid) // if it was not defined by a user then InsertQueryBuilder generates it by its own, get this generated uuid value\n                                            uuid = _this.expressionMap.nativeParameters[\"uuid_\" + generatedColumn.databaseName + entityIndex];\n                                        OrmUtils_1.OrmUtils.mergeDeep(generatedMap, generatedColumn.createValueMap(uuid));\n                                    }\n                                });\n                            }\n                            _this.queryRunner.manager.merge(metadata.target, entity, generatedMap); // todo: this should not be here, but problem with below line\n                            return generatedMap;\n                        });\n                        if (!(this.queryRunner.connection.driver.isReturningSqlSupported() === false && insertionColumns.length > 0)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, Promise.all(entities.map(function (entity, entityIndex) { return __awaiter(_this, void 0, void 0, function () {\n                                var entityId, returningResult;\n                                return __generator(this, function (_a) {\n                                    switch (_a.label) {\n                                        case 0:\n                                            entityId = metadata.getEntityIdMap(entity);\n                                            return [4 /*yield*/, this.queryRunner.manager\n                                                    .createQueryBuilder()\n                                                    .select(metadata.primaryColumns.map(function (column) { return metadata.targetName + \".\" + column.propertyPath; }))\n                                                    .addSelect(insertionColumns.map(function (column) { return metadata.targetName + \".\" + column.propertyPath; }))\n                                                    .from(metadata.target, metadata.targetName)\n                                                    .where(entityId)\n                                                    .setOption(\"create-pojo\") // use POJO because created object can contain default values, e.g. property = null and those properties maight be overridden by merge process\n                                                    .getOne()];\n                                        case 1:\n                                            returningResult = _a.sent();\n                                            this.queryRunner.manager.merge(metadata.target, generatedMaps[entityIndex], returningResult);\n                                            return [2 /*return*/];\n                                    }\n                                });\n                            }); }))];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2:\n                        entities.forEach(function (entity, entityIndex) {\n                            var entityId = metadata.getEntityIdMap(entity);\n                            insertResult.identifiers.push(entityId);\n                            insertResult.generatedMaps.push(generatedMaps[entityIndex]);\n                            _this.queryRunner.manager.merge(_this.expressionMap.mainAlias.metadata.target, entity, generatedMaps[entityIndex], generatedMaps[entityIndex]); // todo: why twice?!\n                        });\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Columns we need to be returned from the database when we insert entity.\n     */\n    ReturningResultsEntityUpdator.prototype.getInsertionReturningColumns = function () {\n        // for databases which support returning statement we need to return extra columns like id\n        // for other databases we don't need to return id column since its returned by a driver already\n        var needToCheckGenerated = this.queryRunner.connection.driver.isReturningSqlSupported();\n        // filter out the columns of which we need database inserted values to update our entity\n        return this.expressionMap.mainAlias.metadata.columns.filter(function (column) {\n            return column.default !== undefined ||\n                (needToCheckGenerated && column.isGenerated) ||\n                column.isCreateDate ||\n                column.isUpdateDate ||\n                column.isVersion;\n        });\n    };\n    /**\n     * Columns we need to be returned from the database when we update entity.\n     */\n    ReturningResultsEntityUpdator.prototype.getUpdationReturningColumns = function () {\n        return this.expressionMap.mainAlias.metadata.columns.filter(function (column) {\n            return column.isUpdateDate || column.isVersion;\n        });\n    };\n    return ReturningResultsEntityUpdator;\n}());\nexports.ReturningResultsEntityUpdator = ReturningResultsEntityUpdator;\n\n//# sourceMappingURL=ReturningResultsEntityUpdator.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/query-builder/ReturningResultsEntityUpdator.js?");

/***/ }),

/***/ "./node_modules/typeorm/query-builder/SelectQueryBuilder.js":
/*!******************************************************************!*\
  !*** ./node_modules/typeorm/query-builder/SelectQueryBuilder.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar RawSqlResultsToEntityTransformer_1 = __webpack_require__(/*! ./transformer/RawSqlResultsToEntityTransformer */ \"./node_modules/typeorm/query-builder/transformer/RawSqlResultsToEntityTransformer.js\");\nvar SqlServerDriver_1 = __webpack_require__(/*! ../driver/sqlserver/SqlServerDriver */ \"./node_modules/typeorm/driver/sqlserver/SqlServerDriver.js\");\nvar PessimisticLockTransactionRequiredError_1 = __webpack_require__(/*! ../error/PessimisticLockTransactionRequiredError */ \"./node_modules/typeorm/error/PessimisticLockTransactionRequiredError.js\");\nvar NoVersionOrUpdateDateColumnError_1 = __webpack_require__(/*! ../error/NoVersionOrUpdateDateColumnError */ \"./node_modules/typeorm/error/NoVersionOrUpdateDateColumnError.js\");\nvar OptimisticLockVersionMismatchError_1 = __webpack_require__(/*! ../error/OptimisticLockVersionMismatchError */ \"./node_modules/typeorm/error/OptimisticLockVersionMismatchError.js\");\nvar OptimisticLockCanNotBeUsedError_1 = __webpack_require__(/*! ../error/OptimisticLockCanNotBeUsedError */ \"./node_modules/typeorm/error/OptimisticLockCanNotBeUsedError.js\");\nvar JoinAttribute_1 = __webpack_require__(/*! ./JoinAttribute */ \"./node_modules/typeorm/query-builder/JoinAttribute.js\");\nvar RelationIdAttribute_1 = __webpack_require__(/*! ./relation-id/RelationIdAttribute */ \"./node_modules/typeorm/query-builder/relation-id/RelationIdAttribute.js\");\nvar RelationCountAttribute_1 = __webpack_require__(/*! ./relation-count/RelationCountAttribute */ \"./node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js\");\nvar RelationIdLoader_1 = __webpack_require__(/*! ./relation-id/RelationIdLoader */ \"./node_modules/typeorm/query-builder/relation-id/RelationIdLoader.js\");\nvar RelationIdMetadataToAttributeTransformer_1 = __webpack_require__(/*! ./relation-id/RelationIdMetadataToAttributeTransformer */ \"./node_modules/typeorm/query-builder/relation-id/RelationIdMetadataToAttributeTransformer.js\");\nvar RelationCountLoader_1 = __webpack_require__(/*! ./relation-count/RelationCountLoader */ \"./node_modules/typeorm/query-builder/relation-count/RelationCountLoader.js\");\nvar RelationCountMetadataToAttributeTransformer_1 = __webpack_require__(/*! ./relation-count/RelationCountMetadataToAttributeTransformer */ \"./node_modules/typeorm/query-builder/relation-count/RelationCountMetadataToAttributeTransformer.js\");\nvar QueryBuilder_1 = __webpack_require__(/*! ./QueryBuilder */ \"./node_modules/typeorm/query-builder/QueryBuilder.js\");\nvar LockNotSupportedOnGivenDriverError_1 = __webpack_require__(/*! ../error/LockNotSupportedOnGivenDriverError */ \"./node_modules/typeorm/error/LockNotSupportedOnGivenDriverError.js\");\nvar MysqlDriver_1 = __webpack_require__(/*! ../driver/mysql/MysqlDriver */ \"./node_modules/typeorm/driver/mysql/MysqlDriver.js\");\nvar PostgresDriver_1 = __webpack_require__(/*! ../driver/postgres/PostgresDriver */ \"./node_modules/typeorm/driver/postgres/PostgresDriver.js\");\nvar OracleDriver_1 = __webpack_require__(/*! ../driver/oracle/OracleDriver */ \"./node_modules/typeorm/driver/oracle/OracleDriver.js\");\nvar AbstractSqliteDriver_1 = __webpack_require__(/*! ../driver/sqlite-abstract/AbstractSqliteDriver */ \"./node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js\");\nvar OffsetWithoutLimitNotSupportedError_1 = __webpack_require__(/*! ../error/OffsetWithoutLimitNotSupportedError */ \"./node_modules/typeorm/error/OffsetWithoutLimitNotSupportedError.js\");\nvar BroadcasterResult_1 = __webpack_require__(/*! ../subscriber/BroadcasterResult */ \"./node_modules/typeorm/subscriber/BroadcasterResult.js\");\nvar StringUtils_1 = __webpack_require__(/*! ../util/StringUtils */ \"./node_modules/typeorm/util/StringUtils.js\");\n/**\n * Allows to build complex sql queries in a fashion way and execute those queries.\n */\nvar SelectQueryBuilder = /** @class */ (function (_super) {\n    __extends(SelectQueryBuilder, _super);\n    function SelectQueryBuilder() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    // -------------------------------------------------------------------------\n    // Public Implemented Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Gets generated sql query without parameters being replaced.\n     */\n    SelectQueryBuilder.prototype.getQuery = function () {\n        var sql = this.createSelectExpression();\n        sql += this.createJoinExpression();\n        sql += this.createWhereExpression();\n        sql += this.createGroupByExpression();\n        sql += this.createHavingExpression();\n        sql += this.createOrderByExpression();\n        sql += this.createLimitOffsetExpression();\n        sql += this.createLockExpression();\n        sql = sql.trim();\n        if (this.expressionMap.subQuery)\n            sql = \"(\" + sql + \")\";\n        return sql;\n    };\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates a subquery - query that can be used inside other queries.\n     */\n    SelectQueryBuilder.prototype.subQuery = function () {\n        var qb = this.createQueryBuilder();\n        qb.expressionMap.subQuery = true;\n        qb.expressionMap.parentQueryBuilder = this;\n        return qb;\n    };\n    /**\n     * Creates SELECT query and selects given data.\n     * Replaces all previous selections if they exist.\n     */\n    SelectQueryBuilder.prototype.select = function (selection, selectionAliasName) {\n        this.expressionMap.queryType = \"select\";\n        if (selection instanceof Array) {\n            this.expressionMap.selects = selection.map(function (selection) { return ({ selection: selection }); });\n        }\n        else if (selection instanceof Function) {\n            var subQueryBuilder = selection(this.subQuery());\n            this.setParameters(subQueryBuilder.getParameters());\n            this.expressionMap.selects.push({ selection: subQueryBuilder.getQuery(), aliasName: selectionAliasName });\n        }\n        else if (selection) {\n            this.expressionMap.selects = [{ selection: selection, aliasName: selectionAliasName }];\n        }\n        return this;\n    };\n    /**\n     * Adds new selection to the SELECT query.\n     */\n    SelectQueryBuilder.prototype.addSelect = function (selection, selectionAliasName) {\n        if (!selection)\n            return this;\n        if (selection instanceof Array) {\n            this.expressionMap.selects = this.expressionMap.selects.concat(selection.map(function (selection) { return ({ selection: selection }); }));\n        }\n        else if (selection instanceof Function) {\n            var subQueryBuilder = selection(this.subQuery());\n            this.setParameters(subQueryBuilder.getParameters());\n            this.expressionMap.selects.push({ selection: subQueryBuilder.getQuery(), aliasName: selectionAliasName });\n        }\n        else if (selection) {\n            this.expressionMap.selects.push({ selection: selection, aliasName: selectionAliasName });\n        }\n        return this;\n    };\n    /**\n     * Specifies FROM which entity's table select/update/delete will be executed.\n     * Also sets a main string alias of the selection data.\n     * Removes all previously set from-s.\n     */\n    SelectQueryBuilder.prototype.from = function (entityTarget, aliasName) {\n        var mainAlias = this.createFromAlias(entityTarget, aliasName);\n        this.expressionMap.setMainAlias(mainAlias);\n        return this;\n    };\n    /**\n     * Specifies FROM which entity's table select/update/delete will be executed.\n     * Also sets a main string alias of the selection data.\n     */\n    SelectQueryBuilder.prototype.addFrom = function (entityTarget, aliasName) {\n        var alias = this.createFromAlias(entityTarget, aliasName);\n        if (!this.expressionMap.mainAlias)\n            this.expressionMap.setMainAlias(alias);\n        return this;\n    };\n    /**\n     * INNER JOINs (without selection).\n     * You also need to specify an alias of the joined data.\n     * Optionally, you can add condition and parameters used in condition.\n     */\n    SelectQueryBuilder.prototype.innerJoin = function (entityOrProperty, alias, condition, parameters) {\n        if (condition === void 0) { condition = \"\"; }\n        this.join(\"INNER\", entityOrProperty, alias, condition, parameters);\n        return this;\n    };\n    /**\n     * LEFT JOINs (without selection).\n     * You also need to specify an alias of the joined data.\n     * Optionally, you can add condition and parameters used in condition.\n     */\n    SelectQueryBuilder.prototype.leftJoin = function (entityOrProperty, alias, condition, parameters) {\n        if (condition === void 0) { condition = \"\"; }\n        this.join(\"LEFT\", entityOrProperty, alias, condition, parameters);\n        return this;\n    };\n    /**\n     * INNER JOINs and adds all selection properties to SELECT.\n     * You also need to specify an alias of the joined data.\n     * Optionally, you can add condition and parameters used in condition.\n     */\n    SelectQueryBuilder.prototype.innerJoinAndSelect = function (entityOrProperty, alias, condition, parameters) {\n        if (condition === void 0) { condition = \"\"; }\n        this.addSelect(alias);\n        this.innerJoin(entityOrProperty, alias, condition, parameters);\n        return this;\n    };\n    /**\n     * LEFT JOINs and adds all selection properties to SELECT.\n     * You also need to specify an alias of the joined data.\n     * Optionally, you can add condition and parameters used in condition.\n     */\n    SelectQueryBuilder.prototype.leftJoinAndSelect = function (entityOrProperty, alias, condition, parameters) {\n        if (condition === void 0) { condition = \"\"; }\n        this.addSelect(alias);\n        this.leftJoin(entityOrProperty, alias, condition, parameters);\n        return this;\n    };\n    /**\n     * INNER JOINs, SELECTs the data returned by a join and MAPs all that data to some entity's property.\n     * This is extremely useful when you want to select some data and map it to some virtual property.\n     * It will assume that there are multiple rows of selecting data, and mapped result will be an array.\n     * You also need to specify an alias of the joined data.\n     * Optionally, you can add condition and parameters used in condition.\n     */\n    SelectQueryBuilder.prototype.innerJoinAndMapMany = function (mapToProperty, entityOrProperty, alias, condition, parameters) {\n        if (condition === void 0) { condition = \"\"; }\n        this.addSelect(alias);\n        this.join(\"INNER\", entityOrProperty, alias, condition, parameters, mapToProperty, true);\n        return this;\n    };\n    /**\n     * INNER JOINs, SELECTs the data returned by a join and MAPs all that data to some entity's property.\n     * This is extremely useful when you want to select some data and map it to some virtual property.\n     * It will assume that there is a single row of selecting data, and mapped result will be a single selected value.\n     * You also need to specify an alias of the joined data.\n     * Optionally, you can add condition and parameters used in condition.\n     */\n    SelectQueryBuilder.prototype.innerJoinAndMapOne = function (mapToProperty, entityOrProperty, alias, condition, parameters) {\n        if (condition === void 0) { condition = \"\"; }\n        this.addSelect(alias);\n        this.join(\"INNER\", entityOrProperty, alias, condition, parameters, mapToProperty, false);\n        return this;\n    };\n    /**\n     * LEFT JOINs, SELECTs the data returned by a join and MAPs all that data to some entity's property.\n     * This is extremely useful when you want to select some data and map it to some virtual property.\n     * It will assume that there are multiple rows of selecting data, and mapped result will be an array.\n     * You also need to specify an alias of the joined data.\n     * Optionally, you can add condition and parameters used in condition.\n     */\n    SelectQueryBuilder.prototype.leftJoinAndMapMany = function (mapToProperty, entityOrProperty, alias, condition, parameters) {\n        if (condition === void 0) { condition = \"\"; }\n        this.addSelect(alias);\n        this.join(\"LEFT\", entityOrProperty, alias, condition, parameters, mapToProperty, true);\n        return this;\n    };\n    /**\n     * LEFT JOINs, SELECTs the data returned by a join and MAPs all that data to some entity's property.\n     * This is extremely useful when you want to select some data and map it to some virtual property.\n     * It will assume that there is a single row of selecting data, and mapped result will be a single selected value.\n     * You also need to specify an alias of the joined data.\n     * Optionally, you can add condition and parameters used in condition.\n     */\n    SelectQueryBuilder.prototype.leftJoinAndMapOne = function (mapToProperty, entityOrProperty, alias, condition, parameters) {\n        if (condition === void 0) { condition = \"\"; }\n        this.addSelect(alias);\n        this.join(\"LEFT\", entityOrProperty, alias, condition, parameters, mapToProperty, false);\n        return this;\n    };\n    /**\n     * LEFT JOINs relation id and maps it into some entity's property.\n     * Optionally, you can add condition and parameters used in condition.\n     */\n    SelectQueryBuilder.prototype.loadRelationIdAndMap = function (mapToProperty, relationName, aliasNameOrOptions, queryBuilderFactory) {\n        var relationIdAttribute = new RelationIdAttribute_1.RelationIdAttribute(this.expressionMap);\n        relationIdAttribute.mapToProperty = mapToProperty;\n        relationIdAttribute.relationName = relationName;\n        if (typeof aliasNameOrOptions === \"string\")\n            relationIdAttribute.alias = aliasNameOrOptions;\n        if (aliasNameOrOptions instanceof Object && aliasNameOrOptions.disableMixedMap)\n            relationIdAttribute.disableMixedMap = true;\n        relationIdAttribute.queryBuilderFactory = queryBuilderFactory;\n        this.expressionMap.relationIdAttributes.push(relationIdAttribute);\n        if (relationIdAttribute.relation.junctionEntityMetadata) {\n            this.expressionMap.createAlias({\n                type: \"other\",\n                name: relationIdAttribute.junctionAlias,\n                metadata: relationIdAttribute.relation.junctionEntityMetadata\n            });\n        }\n        return this;\n    };\n    /**\n     * Counts number of entities of entity's relation and maps the value into some entity's property.\n     * Optionally, you can add condition and parameters used in condition.\n     */\n    SelectQueryBuilder.prototype.loadRelationCountAndMap = function (mapToProperty, relationName, aliasName, queryBuilderFactory) {\n        var relationCountAttribute = new RelationCountAttribute_1.RelationCountAttribute(this.expressionMap);\n        relationCountAttribute.mapToProperty = mapToProperty;\n        relationCountAttribute.relationName = relationName;\n        relationCountAttribute.alias = aliasName;\n        relationCountAttribute.queryBuilderFactory = queryBuilderFactory;\n        this.expressionMap.relationCountAttributes.push(relationCountAttribute);\n        this.expressionMap.createAlias({\n            type: \"other\",\n            name: relationCountAttribute.junctionAlias\n        });\n        if (relationCountAttribute.relation.junctionEntityMetadata) {\n            this.expressionMap.createAlias({\n                type: \"other\",\n                name: relationCountAttribute.junctionAlias,\n                metadata: relationCountAttribute.relation.junctionEntityMetadata\n            });\n        }\n        return this;\n    };\n    /**\n     * Loads all relation ids for all relations of the selected entity.\n     * All relation ids will be mapped to relation property themself.\n     * If array of strings is given then loads only relation ids of the given properties.\n     */\n    SelectQueryBuilder.prototype.loadAllRelationIds = function (options) {\n        var _this = this;\n        this.expressionMap.mainAlias.metadata.relations.forEach(function (relation) {\n            if (options !== undefined && options.relations !== undefined && options.relations.indexOf(relation.propertyPath) === -1)\n                return;\n            _this.loadRelationIdAndMap(_this.expressionMap.mainAlias.name + \".\" + relation.propertyPath, _this.expressionMap.mainAlias.name + \".\" + relation.propertyPath, options);\n        });\n        return this;\n    };\n    /**\n     * Sets WHERE condition in the query builder.\n     * If you had previously WHERE expression defined,\n     * calling this function will override previously set WHERE conditions.\n     * Additionally you can add parameters used in where expression.\n     */\n    SelectQueryBuilder.prototype.where = function (where, parameters) {\n        this.expressionMap.wheres = []; // don't move this block below since computeWhereParameter can add where expressions\n        var condition = this.computeWhereParameter(where);\n        if (condition)\n            this.expressionMap.wheres = [{ type: \"simple\", condition: condition }];\n        if (parameters)\n            this.setParameters(parameters);\n        return this;\n    };\n    /**\n     * Adds new AND WHERE condition in the query builder.\n     * Additionally you can add parameters used in where expression.\n     */\n    SelectQueryBuilder.prototype.andWhere = function (where, parameters) {\n        this.expressionMap.wheres.push({ type: \"and\", condition: this.computeWhereParameter(where) });\n        if (parameters)\n            this.setParameters(parameters);\n        return this;\n    };\n    /**\n     * Adds new OR WHERE condition in the query builder.\n     * Additionally you can add parameters used in where expression.\n     */\n    SelectQueryBuilder.prototype.orWhere = function (where, parameters) {\n        this.expressionMap.wheres.push({ type: \"or\", condition: this.computeWhereParameter(where) });\n        if (parameters)\n            this.setParameters(parameters);\n        return this;\n    };\n    /**\n     * Adds new AND WHERE with conditions for the given ids.\n     *\n     * Ids are mixed.\n     * It means if you have single primary key you can pass a simple id values, for example [1, 2, 3].\n     * If you have multiple primary keys you need to pass object with property names and values specified,\n     * for example [{ firstId: 1, secondId: 2 }, { firstId: 2, secondId: 3 }, ...]\n     */\n    SelectQueryBuilder.prototype.whereInIds = function (ids) {\n        return this.where(this.createWhereIdsExpression(ids));\n    };\n    /**\n     * Adds new AND WHERE with conditions for the given ids.\n     *\n     * Ids are mixed.\n     * It means if you have single primary key you can pass a simple id values, for example [1, 2, 3].\n     * If you have multiple primary keys you need to pass object with property names and values specified,\n     * for example [{ firstId: 1, secondId: 2 }, { firstId: 2, secondId: 3 }, ...]\n     */\n    SelectQueryBuilder.prototype.andWhereInIds = function (ids) {\n        return this.andWhere(\"(\" + this.createWhereIdsExpression(ids) + \")\");\n    };\n    /**\n     * Adds new OR WHERE with conditions for the given ids.\n     *\n     * Ids are mixed.\n     * It means if you have single primary key you can pass a simple id values, for example [1, 2, 3].\n     * If you have multiple primary keys you need to pass object with property names and values specified,\n     * for example [{ firstId: 1, secondId: 2 }, { firstId: 2, secondId: 3 }, ...]\n     */\n    SelectQueryBuilder.prototype.orWhereInIds = function (ids) {\n        return this.orWhere(\"(\" + this.createWhereIdsExpression(ids) + \")\");\n    };\n    /**\n     * Sets HAVING condition in the query builder.\n     * If you had previously HAVING expression defined,\n     * calling this function will override previously set HAVING conditions.\n     * Additionally you can add parameters used in where expression.\n     */\n    SelectQueryBuilder.prototype.having = function (having, parameters) {\n        this.expressionMap.havings.push({ type: \"simple\", condition: having });\n        if (parameters)\n            this.setParameters(parameters);\n        return this;\n    };\n    /**\n     * Adds new AND HAVING condition in the query builder.\n     * Additionally you can add parameters used in where expression.\n     */\n    SelectQueryBuilder.prototype.andHaving = function (having, parameters) {\n        this.expressionMap.havings.push({ type: \"and\", condition: having });\n        if (parameters)\n            this.setParameters(parameters);\n        return this;\n    };\n    /**\n     * Adds new OR HAVING condition in the query builder.\n     * Additionally you can add parameters used in where expression.\n     */\n    SelectQueryBuilder.prototype.orHaving = function (having, parameters) {\n        this.expressionMap.havings.push({ type: \"or\", condition: having });\n        if (parameters)\n            this.setParameters(parameters);\n        return this;\n    };\n    /**\n     * Sets GROUP BY condition in the query builder.\n     * If you had previously GROUP BY expression defined,\n     * calling this function will override previously set GROUP BY conditions.\n     */\n    SelectQueryBuilder.prototype.groupBy = function (groupBy) {\n        if (groupBy) {\n            this.expressionMap.groupBys = [groupBy];\n        }\n        else {\n            this.expressionMap.groupBys = [];\n        }\n        return this;\n    };\n    /**\n     * Adds GROUP BY condition in the query builder.\n     */\n    SelectQueryBuilder.prototype.addGroupBy = function (groupBy) {\n        this.expressionMap.groupBys.push(groupBy);\n        return this;\n    };\n    /**\n     * Sets ORDER BY condition in the query builder.\n     * If you had previously ORDER BY expression defined,\n     * calling this function will override previously set ORDER BY conditions.\n     */\n    SelectQueryBuilder.prototype.orderBy = function (sort, order, nulls) {\n        if (order === void 0) { order = \"ASC\"; }\n        if (order !== undefined && order !== \"ASC\" && order !== \"DESC\")\n            throw new Error(\"SelectQueryBuilder.addOrderBy \\\"order\\\" can accept only \\\"ASC\\\" and \\\"DESC\\\" values.\");\n        if (nulls !== undefined && nulls !== \"NULLS FIRST\" && nulls !== \"NULLS LAST\")\n            throw new Error(\"SelectQueryBuilder.addOrderBy \\\"nulls\\\" can accept only \\\"NULLS FIRST\\\" and \\\"NULLS LAST\\\" values.\");\n        if (sort) {\n            if (sort instanceof Object) {\n                this.expressionMap.orderBys = sort;\n            }\n            else {\n                if (nulls) {\n                    this.expressionMap.orderBys = (_a = {}, _a[sort] = { order: order, nulls: nulls }, _a);\n                }\n                else {\n                    this.expressionMap.orderBys = (_b = {}, _b[sort] = order, _b);\n                }\n            }\n        }\n        else {\n            this.expressionMap.orderBys = {};\n        }\n        return this;\n        var _a, _b;\n    };\n    /**\n     * Adds ORDER BY condition in the query builder.\n     */\n    SelectQueryBuilder.prototype.addOrderBy = function (sort, order, nulls) {\n        if (order === void 0) { order = \"ASC\"; }\n        if (order !== undefined && order !== \"ASC\" && order !== \"DESC\")\n            throw new Error(\"SelectQueryBuilder.addOrderBy \\\"order\\\" can accept only \\\"ASC\\\" and \\\"DESC\\\" values.\");\n        if (nulls !== undefined && nulls !== \"NULLS FIRST\" && nulls !== \"NULLS LAST\")\n            throw new Error(\"SelectQueryBuilder.addOrderBy \\\"nulls\\\" can accept only \\\"NULLS FIRST\\\" and \\\"NULLS LAST\\\" values.\");\n        if (nulls) {\n            this.expressionMap.orderBys[sort] = { order: order, nulls: nulls };\n        }\n        else {\n            this.expressionMap.orderBys[sort] = order;\n        }\n        return this;\n    };\n    /**\n     * Set's LIMIT - maximum number of rows to be selected.\n     * NOTE that it may not work as you expect if you are using joins.\n     * If you want to implement pagination, and you are having join in your query,\n     * then use instead take method instead.\n     */\n    SelectQueryBuilder.prototype.limit = function (limit) {\n        this.expressionMap.limit = this.normalizeNumber(limit);\n        if (this.expressionMap.limit !== undefined && isNaN(this.expressionMap.limit))\n            throw new Error(\"Provided \\\"limit\\\" value is not a number. Please provide a numeric value.\");\n        return this;\n    };\n    /**\n     * Set's OFFSET - selection offset.\n     * NOTE that it may not work as you expect if you are using joins.\n     * If you want to implement pagination, and you are having join in your query,\n     * then use instead skip method instead.\n     */\n    SelectQueryBuilder.prototype.offset = function (offset) {\n        this.expressionMap.offset = this.normalizeNumber(offset);\n        if (this.expressionMap.offset !== undefined && isNaN(this.expressionMap.offset))\n            throw new Error(\"Provided \\\"offset\\\" value is not a number. Please provide a numeric value.\");\n        return this;\n    };\n    /**\n     * Sets maximal number of entities to take.\n     */\n    SelectQueryBuilder.prototype.take = function (take) {\n        this.expressionMap.take = this.normalizeNumber(take);\n        if (this.expressionMap.take !== undefined && isNaN(this.expressionMap.take))\n            throw new Error(\"Provided \\\"take\\\" value is not a number. Please provide a numeric value.\");\n        return this;\n    };\n    /**\n     * Sets number of entities to skip.\n     */\n    SelectQueryBuilder.prototype.skip = function (skip) {\n        this.expressionMap.skip = this.normalizeNumber(skip);\n        if (this.expressionMap.skip !== undefined && isNaN(this.expressionMap.skip))\n            throw new Error(\"Provided \\\"skip\\\" value is not a number. Please provide a numeric value.\");\n        return this;\n    };\n    /**\n     * Sets locking mode.\n     */\n    SelectQueryBuilder.prototype.setLock = function (lockMode, lockVersion) {\n        this.expressionMap.lockMode = lockMode;\n        this.expressionMap.lockVersion = lockVersion;\n        return this;\n    };\n    /**\n     * Gets first raw result returned by execution of generated query builder sql.\n     */\n    SelectQueryBuilder.prototype.getRawOne = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getRawMany()];\n                    case 1: return [2 /*return*/, (_a.sent())[0]];\n                }\n            });\n        });\n    };\n    /**\n     * Gets all raw results returned by execution of generated query builder sql.\n     */\n    SelectQueryBuilder.prototype.getRawMany = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var queryRunner, transactionStartedByUs, results, error_1, rollbackError_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.expressionMap.lockMode === \"optimistic\")\n                            throw new OptimisticLockCanNotBeUsedError_1.OptimisticLockCanNotBeUsedError();\n                        this.expressionMap.queryEntity = false;\n                        queryRunner = this.obtainQueryRunner();\n                        transactionStartedByUs = false;\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 7, 12, 15]);\n                        if (!(this.expressionMap.useTransaction === true && queryRunner.isTransactionActive === false)) return [3 /*break*/, 3];\n                        return [4 /*yield*/, queryRunner.startTransaction()];\n                    case 2:\n                        _a.sent();\n                        transactionStartedByUs = true;\n                        _a.label = 3;\n                    case 3: return [4 /*yield*/, this.loadRawResults(queryRunner)];\n                    case 4:\n                        results = _a.sent();\n                        if (!transactionStartedByUs) return [3 /*break*/, 6];\n                        return [4 /*yield*/, queryRunner.commitTransaction()];\n                    case 5:\n                        _a.sent();\n                        _a.label = 6;\n                    case 6: return [2 /*return*/, results];\n                    case 7:\n                        error_1 = _a.sent();\n                        if (!transactionStartedByUs) return [3 /*break*/, 11];\n                        _a.label = 8;\n                    case 8:\n                        _a.trys.push([8, 10, , 11]);\n                        return [4 /*yield*/, queryRunner.rollbackTransaction()];\n                    case 9:\n                        _a.sent();\n                        return [3 /*break*/, 11];\n                    case 10:\n                        rollbackError_1 = _a.sent();\n                        return [3 /*break*/, 11];\n                    case 11: throw error_1;\n                    case 12:\n                        if (!(queryRunner !== this.queryRunner)) return [3 /*break*/, 14];\n                        return [4 /*yield*/, queryRunner.release()];\n                    case 13:\n                        _a.sent();\n                        _a.label = 14;\n                    case 14: return [7 /*endfinally*/];\n                    case 15: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Executes sql generated by query builder and returns object with raw results and entities created from them.\n     */\n    SelectQueryBuilder.prototype.getRawAndEntities = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var queryRunner, transactionStartedByUs, results, error_2, rollbackError_2;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        queryRunner = this.obtainQueryRunner();\n                        transactionStartedByUs = false;\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 7, 12, 15]);\n                        if (!(this.expressionMap.useTransaction === true && queryRunner.isTransactionActive === false)) return [3 /*break*/, 3];\n                        return [4 /*yield*/, queryRunner.startTransaction()];\n                    case 2:\n                        _a.sent();\n                        transactionStartedByUs = true;\n                        _a.label = 3;\n                    case 3:\n                        this.expressionMap.queryEntity = true;\n                        return [4 /*yield*/, this.executeEntitiesAndRawResults(queryRunner)];\n                    case 4:\n                        results = _a.sent();\n                        if (!transactionStartedByUs) return [3 /*break*/, 6];\n                        return [4 /*yield*/, queryRunner.commitTransaction()];\n                    case 5:\n                        _a.sent();\n                        _a.label = 6;\n                    case 6: return [2 /*return*/, results];\n                    case 7:\n                        error_2 = _a.sent();\n                        if (!transactionStartedByUs) return [3 /*break*/, 11];\n                        _a.label = 8;\n                    case 8:\n                        _a.trys.push([8, 10, , 11]);\n                        return [4 /*yield*/, queryRunner.rollbackTransaction()];\n                    case 9:\n                        _a.sent();\n                        return [3 /*break*/, 11];\n                    case 10:\n                        rollbackError_2 = _a.sent();\n                        return [3 /*break*/, 11];\n                    case 11: throw error_2;\n                    case 12:\n                        if (!(queryRunner !== this.queryRunner)) return [3 /*break*/, 14];\n                        return [4 /*yield*/, queryRunner.release()];\n                    case 13:\n                        _a.sent();\n                        _a.label = 14;\n                    case 14: return [7 /*endfinally*/];\n                    case 15: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Gets single entity returned by execution of generated query builder sql.\n     */\n    SelectQueryBuilder.prototype.getOne = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var results, result, metadata, actualVersion, actualVersion;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getRawAndEntities()];\n                    case 1:\n                        results = _a.sent();\n                        result = results.entities[0];\n                        if (result && this.expressionMap.lockMode === \"optimistic\" && this.expressionMap.lockVersion) {\n                            metadata = this.expressionMap.mainAlias.metadata;\n                            if (this.expressionMap.lockVersion instanceof Date) {\n                                actualVersion = metadata.updateDateColumn.getEntityValue(result);\n                                if (actualVersion.getTime() !== this.expressionMap.lockVersion.getTime())\n                                    throw new OptimisticLockVersionMismatchError_1.OptimisticLockVersionMismatchError(metadata.name, this.expressionMap.lockVersion, actualVersion);\n                            }\n                            else {\n                                actualVersion = metadata.versionColumn.getEntityValue(result);\n                                if (actualVersion !== this.expressionMap.lockVersion)\n                                    throw new OptimisticLockVersionMismatchError_1.OptimisticLockVersionMismatchError(metadata.name, this.expressionMap.lockVersion, actualVersion);\n                            }\n                        }\n                        return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    /**\n     * Gets entities returned by execution of generated query builder sql.\n     */\n    SelectQueryBuilder.prototype.getMany = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var results;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.expressionMap.lockMode === \"optimistic\")\n                            throw new OptimisticLockCanNotBeUsedError_1.OptimisticLockCanNotBeUsedError();\n                        return [4 /*yield*/, this.getRawAndEntities()];\n                    case 1:\n                        results = _a.sent();\n                        return [2 /*return*/, results.entities];\n                }\n            });\n        });\n    };\n    /**\n     * Gets count - number of entities selected by sql generated by this query builder.\n     * Count excludes all limitations set by setFirstResult and setMaxResults methods call.\n     */\n    SelectQueryBuilder.prototype.getCount = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var queryRunner, transactionStartedByUs, results, error_3, rollbackError_3;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.expressionMap.lockMode === \"optimistic\")\n                            throw new OptimisticLockCanNotBeUsedError_1.OptimisticLockCanNotBeUsedError();\n                        queryRunner = this.obtainQueryRunner();\n                        transactionStartedByUs = false;\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 7, 12, 15]);\n                        if (!(this.expressionMap.useTransaction === true && queryRunner.isTransactionActive === false)) return [3 /*break*/, 3];\n                        return [4 /*yield*/, queryRunner.startTransaction()];\n                    case 2:\n                        _a.sent();\n                        transactionStartedByUs = true;\n                        _a.label = 3;\n                    case 3:\n                        this.expressionMap.queryEntity = false;\n                        return [4 /*yield*/, this.executeCountQuery(queryRunner)];\n                    case 4:\n                        results = _a.sent();\n                        if (!transactionStartedByUs) return [3 /*break*/, 6];\n                        return [4 /*yield*/, queryRunner.commitTransaction()];\n                    case 5:\n                        _a.sent();\n                        _a.label = 6;\n                    case 6: return [2 /*return*/, results];\n                    case 7:\n                        error_3 = _a.sent();\n                        if (!transactionStartedByUs) return [3 /*break*/, 11];\n                        _a.label = 8;\n                    case 8:\n                        _a.trys.push([8, 10, , 11]);\n                        return [4 /*yield*/, queryRunner.rollbackTransaction()];\n                    case 9:\n                        _a.sent();\n                        return [3 /*break*/, 11];\n                    case 10:\n                        rollbackError_3 = _a.sent();\n                        return [3 /*break*/, 11];\n                    case 11: throw error_3;\n                    case 12:\n                        if (!(queryRunner !== this.queryRunner)) return [3 /*break*/, 14];\n                        return [4 /*yield*/, queryRunner.release()];\n                    case 13:\n                        _a.sent();\n                        _a.label = 14;\n                    case 14: return [7 /*endfinally*/];\n                    case 15: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Executes built SQL query and returns entities and overall entities count (without limitation).\n     * This method is useful to build pagination.\n     */\n    SelectQueryBuilder.prototype.getManyAndCount = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var queryRunner, transactionStartedByUs, entitiesAndRaw, count, results, error_4, rollbackError_4;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.expressionMap.lockMode === \"optimistic\")\n                            throw new OptimisticLockCanNotBeUsedError_1.OptimisticLockCanNotBeUsedError();\n                        queryRunner = this.obtainQueryRunner();\n                        transactionStartedByUs = false;\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 8, 13, 16]);\n                        if (!(this.expressionMap.useTransaction === true && queryRunner.isTransactionActive === false)) return [3 /*break*/, 3];\n                        return [4 /*yield*/, queryRunner.startTransaction()];\n                    case 2:\n                        _a.sent();\n                        transactionStartedByUs = true;\n                        _a.label = 3;\n                    case 3:\n                        this.expressionMap.queryEntity = true;\n                        return [4 /*yield*/, this.executeEntitiesAndRawResults(queryRunner)];\n                    case 4:\n                        entitiesAndRaw = _a.sent();\n                        this.expressionMap.queryEntity = false;\n                        return [4 /*yield*/, this.executeCountQuery(queryRunner)];\n                    case 5:\n                        count = _a.sent();\n                        results = [entitiesAndRaw.entities, count];\n                        if (!transactionStartedByUs) return [3 /*break*/, 7];\n                        return [4 /*yield*/, queryRunner.commitTransaction()];\n                    case 6:\n                        _a.sent();\n                        _a.label = 7;\n                    case 7: return [2 /*return*/, results];\n                    case 8:\n                        error_4 = _a.sent();\n                        if (!transactionStartedByUs) return [3 /*break*/, 12];\n                        _a.label = 9;\n                    case 9:\n                        _a.trys.push([9, 11, , 12]);\n                        return [4 /*yield*/, queryRunner.rollbackTransaction()];\n                    case 10:\n                        _a.sent();\n                        return [3 /*break*/, 12];\n                    case 11:\n                        rollbackError_4 = _a.sent();\n                        return [3 /*break*/, 12];\n                    case 12: throw error_4;\n                    case 13:\n                        if (!(queryRunner !== this.queryRunner)) return [3 /*break*/, 15];\n                        return [4 /*yield*/, queryRunner.release()];\n                    case 14:\n                        _a.sent();\n                        _a.label = 15;\n                    case 15: return [7 /*endfinally*/];\n                    case 16: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Executes built SQL query and returns raw data stream.\n     */\n    SelectQueryBuilder.prototype.stream = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var _a, sql, parameters, queryRunner, transactionStartedByUs, releaseFn, results, error_5, rollbackError_5;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        this.expressionMap.queryEntity = false;\n                        _a = __read(this.getQueryAndParameters(), 2), sql = _a[0], parameters = _a[1];\n                        queryRunner = this.obtainQueryRunner();\n                        transactionStartedByUs = false;\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 6, 11, 14]);\n                        if (!(this.expressionMap.useTransaction === true && queryRunner.isTransactionActive === false)) return [3 /*break*/, 3];\n                        return [4 /*yield*/, queryRunner.startTransaction()];\n                    case 2:\n                        _b.sent();\n                        transactionStartedByUs = true;\n                        _b.label = 3;\n                    case 3:\n                        releaseFn = function () {\n                            if (queryRunner !== _this.queryRunner) // means we created our own query runner\n                                return queryRunner.release();\n                            return;\n                        };\n                        results = queryRunner.stream(sql, parameters, releaseFn, releaseFn);\n                        if (!transactionStartedByUs) return [3 /*break*/, 5];\n                        return [4 /*yield*/, queryRunner.commitTransaction()];\n                    case 4:\n                        _b.sent();\n                        _b.label = 5;\n                    case 5: return [2 /*return*/, results];\n                    case 6:\n                        error_5 = _b.sent();\n                        if (!transactionStartedByUs) return [3 /*break*/, 10];\n                        _b.label = 7;\n                    case 7:\n                        _b.trys.push([7, 9, , 10]);\n                        return [4 /*yield*/, queryRunner.rollbackTransaction()];\n                    case 8:\n                        _b.sent();\n                        return [3 /*break*/, 10];\n                    case 9:\n                        rollbackError_5 = _b.sent();\n                        return [3 /*break*/, 10];\n                    case 10: throw error_5;\n                    case 11:\n                        if (!(queryRunner !== this.queryRunner)) return [3 /*break*/, 13];\n                        return [4 /*yield*/, queryRunner.release()];\n                    case 12:\n                        _b.sent();\n                        _b.label = 13;\n                    case 13: return [7 /*endfinally*/];\n                    case 14: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Enables or disables query result caching.\n     */\n    SelectQueryBuilder.prototype.cache = function (enabledOrMillisecondsOrId, maybeMilliseconds) {\n        if (typeof enabledOrMillisecondsOrId === \"boolean\") {\n            this.expressionMap.cache = enabledOrMillisecondsOrId;\n        }\n        else if (typeof enabledOrMillisecondsOrId === \"number\") {\n            this.expressionMap.cache = true;\n            this.expressionMap.cacheDuration = enabledOrMillisecondsOrId;\n        }\n        else if (typeof enabledOrMillisecondsOrId === \"string\" || typeof enabledOrMillisecondsOrId === \"number\") {\n            this.expressionMap.cache = true;\n            this.expressionMap.cacheId = enabledOrMillisecondsOrId;\n        }\n        if (maybeMilliseconds) {\n            this.expressionMap.cacheDuration = maybeMilliseconds;\n        }\n        return this;\n    };\n    /**\n     * Sets extra options that can be used to configure how query builder works.\n     */\n    SelectQueryBuilder.prototype.setOption = function (option) {\n        this.expressionMap.options.push(option);\n        return this;\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    SelectQueryBuilder.prototype.join = function (direction, entityOrProperty, aliasName, condition, parameters, mapToProperty, isMappingMany) {\n        this.setParameters(parameters || {});\n        var joinAttribute = new JoinAttribute_1.JoinAttribute(this.connection, this.expressionMap);\n        joinAttribute.direction = direction;\n        joinAttribute.mapToProperty = mapToProperty;\n        joinAttribute.isMappingMany = isMappingMany;\n        joinAttribute.entityOrProperty = entityOrProperty; // relationName\n        joinAttribute.condition = condition; // joinInverseSideCondition\n        // joinAttribute.junctionAlias = joinAttribute.relation.isOwning ? parentAlias + \"_\" + destinationTableAlias : destinationTableAlias + \"_\" + parentAlias;\n        this.expressionMap.joinAttributes.push(joinAttribute);\n        if (joinAttribute.metadata) {\n            // todo: find and set metadata right there?\n            joinAttribute.alias = this.expressionMap.createAlias({\n                type: \"join\",\n                name: aliasName,\n                metadata: joinAttribute.metadata\n            });\n            if (joinAttribute.relation && joinAttribute.relation.junctionEntityMetadata) {\n                this.expressionMap.createAlias({\n                    type: \"join\",\n                    name: joinAttribute.junctionAlias,\n                    metadata: joinAttribute.relation.junctionEntityMetadata\n                });\n            }\n        }\n        else {\n            var subQuery = \"\";\n            if (entityOrProperty instanceof Function) {\n                var subQueryBuilder = entityOrProperty(this.subQuery());\n                this.setParameters(subQueryBuilder.getParameters());\n                subQuery = subQueryBuilder.getQuery();\n            }\n            else {\n                subQuery = entityOrProperty;\n            }\n            var isSubQuery = entityOrProperty instanceof Function || entityOrProperty.substr(0, 1) === \"(\" && entityOrProperty.substr(-1) === \")\";\n            joinAttribute.alias = this.expressionMap.createAlias({\n                type: \"join\",\n                name: aliasName,\n                tablePath: isSubQuery === false ? entityOrProperty : undefined,\n                subQuery: isSubQuery === true ? subQuery : undefined,\n            });\n        }\n    };\n    /**\n     * Creates \"SELECT FROM\" part of SQL query.\n     */\n    SelectQueryBuilder.prototype.createSelectExpression = function () {\n        var _this = this;\n        if (!this.expressionMap.mainAlias)\n            throw new Error(\"Cannot build query because main alias is not set (call qb#from method)\");\n        // todo throw exception if selects or from is missing\n        var allSelects = [];\n        var excludedSelects = [];\n        if (this.expressionMap.mainAlias.hasMetadata) {\n            var metadata = this.expressionMap.mainAlias.metadata;\n            allSelects.push.apply(allSelects, __spread(this.buildEscapedEntityColumnSelects(this.expressionMap.mainAlias.name, metadata)));\n            excludedSelects.push.apply(excludedSelects, __spread(this.findEntityColumnSelects(this.expressionMap.mainAlias.name, metadata)));\n        }\n        // add selects from joins\n        this.expressionMap.joinAttributes\n            .forEach(function (join) {\n            if (join.metadata) {\n                allSelects.push.apply(allSelects, __spread(_this.buildEscapedEntityColumnSelects(join.alias.name, join.metadata)));\n                excludedSelects.push.apply(excludedSelects, __spread(_this.findEntityColumnSelects(join.alias.name, join.metadata)));\n            }\n            else {\n                var hasMainAlias = _this.expressionMap.selects.some(function (select) { return select.selection === join.alias.name; });\n                if (hasMainAlias) {\n                    allSelects.push({ selection: _this.escape(join.alias.name) + \".*\" });\n                    var excludedSelect = _this.expressionMap.selects.find(function (select) { return select.selection === join.alias.name; });\n                    excludedSelects.push(excludedSelect);\n                }\n            }\n        });\n        // add all other selects\n        this.expressionMap.selects\n            .filter(function (select) { return excludedSelects.indexOf(select) === -1; })\n            .forEach(function (select) { return allSelects.push({ selection: _this.replacePropertyNames(select.selection), aliasName: select.aliasName }); });\n        // if still selection is empty, then simply set it to all (*)\n        if (allSelects.length === 0)\n            allSelects.push({ selection: \"*\" });\n        var lock = \"\";\n        if (this.connection.driver instanceof SqlServerDriver_1.SqlServerDriver) {\n            switch (this.expressionMap.lockMode) {\n                case \"pessimistic_read\":\n                    lock = \" WITH (HOLDLOCK, ROWLOCK)\";\n                    break;\n                case \"pessimistic_write\":\n                    lock = \" WITH (UPDLOCK, ROWLOCK)\";\n                    break;\n            }\n        }\n        // create a selection query\n        var froms = this.expressionMap.aliases\n            .filter(function (alias) { return alias.type === \"from\" && (alias.tablePath || alias.subQuery); })\n            .map(function (alias) {\n            if (alias.subQuery)\n                return alias.subQuery + \" \" + _this.escape(alias.name);\n            return _this.getTableName(alias.tablePath) + \" \" + _this.escape(alias.name);\n        });\n        var selection = allSelects.map(function (select) { return select.selection + (select.aliasName ? \" AS \" + _this.escape(select.aliasName) : \"\"); }).join(\", \");\n        return \"SELECT \" + selection + \" FROM \" + froms.join(\", \") + lock;\n    };\n    /**\n     * Creates \"JOIN\" part of SQL query.\n     */\n    SelectQueryBuilder.prototype.createJoinExpression = function () {\n        // examples:\n        // select from owning side\n        // qb.select(\"post\")\n        //     .leftJoinAndSelect(\"post.category\", \"category\");\n        // select from non-owning side\n        // qb.select(\"category\")\n        //     .leftJoinAndSelect(\"category.post\", \"post\");\n        var _this = this;\n        var joins = this.expressionMap.joinAttributes.map(function (joinAttr) {\n            var relation = joinAttr.relation;\n            var destinationTableName = joinAttr.tablePath;\n            var destinationTableAlias = joinAttr.alias.name;\n            var appendedCondition = joinAttr.condition ? \" AND (\" + joinAttr.condition + \")\" : \"\";\n            var parentAlias = joinAttr.parentAlias;\n            // if join was build without relation (e.g. without \"post.category\") then it means that we have direct\n            // table to join, without junction table involved. This means we simply join direct table.\n            if (!parentAlias || !relation) {\n                var destinationJoin = joinAttr.alias.subQuery ? joinAttr.alias.subQuery : _this.getTableName(destinationTableName);\n                return \" \" + joinAttr.direction + \" JOIN \" + destinationJoin + \" \" + _this.escape(destinationTableAlias) +\n                    (joinAttr.condition ? \" ON \" + _this.replacePropertyNames(joinAttr.condition) : \"\");\n            }\n            // if real entity relation is involved\n            if (relation.isManyToOne || relation.isOneToOneOwner) {\n                // JOIN `category` `category` ON `category`.`id` = `post`.`categoryId`\n                var condition = relation.joinColumns.map(function (joinColumn) {\n                    return destinationTableAlias + \".\" + joinColumn.referencedColumn.propertyPath + \"=\" +\n                        parentAlias + \".\" + relation.propertyPath + \".\" + joinColumn.referencedColumn.propertyPath;\n                }).join(\" AND \");\n                return \" \" + joinAttr.direction + \" JOIN \" + _this.getTableName(destinationTableName) + \" \" + _this.escape(destinationTableAlias) + \" ON \" + _this.replacePropertyNames(condition + appendedCondition);\n            }\n            else if (relation.isOneToMany || relation.isOneToOneNotOwner) {\n                // JOIN `post` `post` ON `post`.`categoryId` = `category`.`id`\n                var condition = relation.inverseRelation.joinColumns.map(function (joinColumn) {\n                    return destinationTableAlias + \".\" + relation.inverseRelation.propertyPath + \".\" + joinColumn.referencedColumn.propertyPath + \"=\" +\n                        parentAlias + \".\" + joinColumn.referencedColumn.propertyPath;\n                }).join(\" AND \");\n                return \" \" + joinAttr.direction + \" JOIN \" + _this.getTableName(destinationTableName) + \" \" + _this.escape(destinationTableAlias) + \" ON \" + _this.replacePropertyNames(condition + appendedCondition);\n            }\n            else { // means many-to-many\n                var junctionTableName = relation.junctionEntityMetadata.tablePath;\n                var junctionAlias_1 = joinAttr.junctionAlias;\n                var junctionCondition = \"\", destinationCondition = \"\";\n                if (relation.isOwning) {\n                    junctionCondition = relation.joinColumns.map(function (joinColumn) {\n                        // `post_category`.`postId` = `post`.`id`\n                        return junctionAlias_1 + \".\" + joinColumn.propertyPath + \"=\" + parentAlias + \".\" + joinColumn.referencedColumn.propertyPath;\n                    }).join(\" AND \");\n                    destinationCondition = relation.inverseJoinColumns.map(function (joinColumn) {\n                        // `category`.`id` = `post_category`.`categoryId`\n                        return destinationTableAlias + \".\" + joinColumn.referencedColumn.propertyPath + \"=\" + junctionAlias_1 + \".\" + joinColumn.propertyPath;\n                    }).join(\" AND \");\n                }\n                else {\n                    junctionCondition = relation.inverseRelation.inverseJoinColumns.map(function (joinColumn) {\n                        // `post_category`.`categoryId` = `category`.`id`\n                        return junctionAlias_1 + \".\" + joinColumn.propertyPath + \"=\" + parentAlias + \".\" + joinColumn.referencedColumn.propertyPath;\n                    }).join(\" AND \");\n                    destinationCondition = relation.inverseRelation.joinColumns.map(function (joinColumn) {\n                        // `post`.`id` = `post_category`.`postId`\n                        return destinationTableAlias + \".\" + joinColumn.referencedColumn.propertyPath + \"=\" + junctionAlias_1 + \".\" + joinColumn.propertyPath;\n                    }).join(\" AND \");\n                }\n                return \" \" + joinAttr.direction + \" JOIN \" + _this.getTableName(junctionTableName) + \" \" + _this.escape(junctionAlias_1) + \" ON \" + _this.replacePropertyNames(junctionCondition) +\n                    \" \" + joinAttr.direction + \" JOIN \" + _this.getTableName(destinationTableName) + \" \" + _this.escape(destinationTableAlias) + \" ON \" + _this.replacePropertyNames(destinationCondition + appendedCondition);\n            }\n        });\n        return joins.join(\" \");\n    };\n    /**\n     * Creates \"GROUP BY\" part of SQL query.\n     */\n    SelectQueryBuilder.prototype.createGroupByExpression = function () {\n        if (!this.expressionMap.groupBys || !this.expressionMap.groupBys.length)\n            return \"\";\n        return \" GROUP BY \" + this.replacePropertyNames(this.expressionMap.groupBys.join(\", \"));\n    };\n    /**\n     * Creates \"ORDER BY\" part of SQL query.\n     */\n    SelectQueryBuilder.prototype.createOrderByExpression = function () {\n        var _this = this;\n        var orderBys = this.expressionMap.allOrderBys;\n        if (Object.keys(orderBys).length > 0)\n            return \" ORDER BY \" + Object.keys(orderBys)\n                .map(function (columnName) {\n                if (typeof orderBys[columnName] === \"string\") {\n                    return _this.replacePropertyNames(columnName) + \" \" + orderBys[columnName];\n                }\n                else {\n                    return _this.replacePropertyNames(columnName) + \" \" + orderBys[columnName].order + \" \" + orderBys[columnName].nulls;\n                }\n            })\n                .join(\", \");\n        return \"\";\n    };\n    /**\n     * Creates \"LIMIT\" and \"OFFSET\" parts of SQL query.\n     */\n    SelectQueryBuilder.prototype.createLimitOffsetExpression = function () {\n        // in the case if nothing is joined in the query builder we don't need to make two requests to get paginated results\n        // we can use regular limit / offset, that's why we add offset and limit construction here based on skip and take values\n        var offset = this.expressionMap.offset, limit = this.expressionMap.limit;\n        if (!offset && !limit && this.expressionMap.joinAttributes.length === 0) {\n            offset = this.expressionMap.skip;\n            limit = this.expressionMap.take;\n        }\n        if (this.connection.driver instanceof SqlServerDriver_1.SqlServerDriver) {\n            if (limit && offset)\n                return \" OFFSET \" + offset + \" ROWS FETCH NEXT \" + limit + \" ROWS ONLY\";\n            if (limit)\n                return \" OFFSET 0 ROWS FETCH NEXT \" + limit + \" ROWS ONLY\";\n            if (offset)\n                return \" OFFSET \" + offset + \" ROWS\";\n        }\n        else if (this.connection.driver instanceof MysqlDriver_1.MysqlDriver) {\n            if (limit && offset)\n                return \" LIMIT \" + limit + \" OFFSET \" + offset;\n            if (limit)\n                return \" LIMIT \" + limit;\n            if (offset)\n                throw new OffsetWithoutLimitNotSupportedError_1.OffsetWithoutLimitNotSupportedError(\"MySQL\");\n        }\n        else if (this.connection.driver instanceof AbstractSqliteDriver_1.AbstractSqliteDriver) {\n            if (limit && offset)\n                return \" LIMIT \" + limit + \" OFFSET \" + offset;\n            if (limit)\n                return \" LIMIT \" + limit;\n            if (offset)\n                return \" LIMIT -1 OFFSET \" + offset;\n        }\n        else if (this.connection.driver instanceof OracleDriver_1.OracleDriver) {\n            if (limit && offset)\n                return \" OFFSET \" + offset + \" ROWS FETCH NEXT \" + limit + \" ROWS ONLY\";\n            if (limit)\n                return \" FETCH NEXT \" + limit + \" ROWS ONLY\";\n            if (offset)\n                return \" OFFSET \" + offset + \" ROWS\";\n        }\n        else {\n            if (limit && offset)\n                return \" LIMIT \" + limit + \" OFFSET \" + offset;\n            if (limit)\n                return \" LIMIT \" + limit;\n            if (offset)\n                return \" OFFSET \" + offset;\n        }\n        return \"\";\n    };\n    /**\n     * Creates \"LOCK\" part of SQL query.\n     */\n    SelectQueryBuilder.prototype.createLockExpression = function () {\n        var driver = this.connection.driver;\n        switch (this.expressionMap.lockMode) {\n            case \"pessimistic_read\":\n                if (driver instanceof MysqlDriver_1.MysqlDriver) {\n                    return \" LOCK IN SHARE MODE\";\n                }\n                else if (driver instanceof PostgresDriver_1.PostgresDriver) {\n                    return \" FOR SHARE\";\n                }\n                else if (driver instanceof OracleDriver_1.OracleDriver) {\n                    return \" FOR UPDATE\";\n                }\n                else if (driver instanceof SqlServerDriver_1.SqlServerDriver) {\n                    return \"\";\n                }\n                else {\n                    throw new LockNotSupportedOnGivenDriverError_1.LockNotSupportedOnGivenDriverError();\n                }\n            case \"pessimistic_write\":\n                if (driver instanceof MysqlDriver_1.MysqlDriver || driver instanceof PostgresDriver_1.PostgresDriver || driver instanceof OracleDriver_1.OracleDriver) {\n                    return \" FOR UPDATE\";\n                }\n                else if (driver instanceof SqlServerDriver_1.SqlServerDriver) {\n                    return \"\";\n                }\n                else {\n                    throw new LockNotSupportedOnGivenDriverError_1.LockNotSupportedOnGivenDriverError();\n                }\n            default:\n                return \"\";\n        }\n    };\n    /**\n     * Creates \"HAVING\" part of SQL query.\n     */\n    SelectQueryBuilder.prototype.createHavingExpression = function () {\n        var _this = this;\n        if (!this.expressionMap.havings || !this.expressionMap.havings.length)\n            return \"\";\n        var conditions = this.expressionMap.havings.map(function (having, index) {\n            switch (having.type) {\n                case \"and\":\n                    return (index > 0 ? \"AND \" : \"\") + _this.replacePropertyNames(having.condition);\n                case \"or\":\n                    return (index > 0 ? \"OR \" : \"\") + _this.replacePropertyNames(having.condition);\n                default:\n                    return _this.replacePropertyNames(having.condition);\n            }\n        }).join(\" \");\n        if (!conditions.length)\n            return \"\";\n        return \" HAVING \" + conditions;\n    };\n    SelectQueryBuilder.prototype.buildEscapedEntityColumnSelects = function (aliasName, metadata) {\n        var _this = this;\n        var hasMainAlias = this.expressionMap.selects.some(function (select) { return select.selection === aliasName; });\n        var columns = [];\n        if (hasMainAlias) {\n            columns.push.apply(columns, __spread(metadata.columns.filter(function (column) { return column.isSelect === true; })));\n        }\n        columns.push.apply(columns, __spread(metadata.columns.filter(function (column) {\n            return _this.expressionMap.selects.some(function (select) { return select.selection === aliasName + \".\" + column.propertyPath; });\n        })));\n        // if user used partial selection and did not select some primary columns which are required to be selected\n        // we select those primary columns and mark them as \"virtual\". Later virtual column values will be removed from final entity\n        // to make entity contain exactly what user selected\n        if (columns.length === 0) // however not in the case when nothing (even partial) was selected from this target (for example joins without selection)\n            return [];\n        var nonSelectedPrimaryColumns = this.expressionMap.queryEntity ? metadata.primaryColumns.filter(function (primaryColumn) { return columns.indexOf(primaryColumn) === -1; }) : [];\n        var allColumns = __spread(columns, nonSelectedPrimaryColumns);\n        return allColumns.map(function (column) {\n            var selection = _this.expressionMap.selects.find(function (select) { return select.selection === aliasName + \".\" + column.propertyPath; });\n            var selectionPath = _this.escape(aliasName) + \".\" + _this.escape(column.databaseName);\n            if (_this.connection.driver.spatialTypes.indexOf(column.type) !== -1) {\n                if (_this.connection.driver instanceof MysqlDriver_1.MysqlDriver)\n                    selectionPath = \"AsText(\" + selectionPath + \")\";\n                if (_this.connection.driver instanceof PostgresDriver_1.PostgresDriver)\n                    // cast to JSON to trigger parsing in the driver\n                    selectionPath = \"ST_AsGeoJSON(\" + selectionPath + \")::json\";\n                if (_this.connection.driver instanceof SqlServerDriver_1.SqlServerDriver)\n                    selectionPath = selectionPath + \".ToString()\";\n            }\n            return {\n                selection: selectionPath,\n                aliasName: selection && selection.aliasName ? selection.aliasName : _this.buildColumnAlias(aliasName, column.databaseName),\n                // todo: need to keep in mind that custom selection.aliasName breaks hydrator. fix it later!\n                virtual: selection ? selection.virtual === true : (hasMainAlias ? false : true),\n            };\n        });\n    };\n    SelectQueryBuilder.prototype.findEntityColumnSelects = function (aliasName, metadata) {\n        var mainSelect = this.expressionMap.selects.find(function (select) { return select.selection === aliasName; });\n        if (mainSelect)\n            return [mainSelect];\n        return this.expressionMap.selects.filter(function (select) {\n            return metadata.columns.some(function (column) { return select.selection === aliasName + \".\" + column.propertyPath; });\n        });\n    };\n    SelectQueryBuilder.prototype.executeCountQuery = function (queryRunner) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var mainAlias, metadata, distinctAlias, countSql, results;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        mainAlias = this.expressionMap.mainAlias.name;\n                        metadata = this.expressionMap.mainAlias.metadata;\n                        distinctAlias = this.escape(mainAlias);\n                        countSql = \"\";\n                        if (metadata.hasMultiplePrimaryKeys) {\n                            if (this.connection.driver instanceof AbstractSqliteDriver_1.AbstractSqliteDriver) {\n                                countSql = \"COUNT(DISTINCT(\" + metadata.primaryColumns.map(function (primaryColumn, index) {\n                                    var propertyName = _this.escape(primaryColumn.databaseName);\n                                    return distinctAlias + \".\" + propertyName;\n                                }).join(\" || \") + \")) as \\\"cnt\\\"\";\n                            }\n                            else {\n                                countSql = \"COUNT(DISTINCT(CONCAT(\" + metadata.primaryColumns.map(function (primaryColumn, index) {\n                                    var propertyName = _this.escape(primaryColumn.databaseName);\n                                    return distinctAlias + \".\" + propertyName;\n                                }).join(\", \") + \"))) as \\\"cnt\\\"\";\n                            }\n                        }\n                        else {\n                            countSql = \"COUNT(DISTINCT(\" + metadata.primaryColumns.map(function (primaryColumn, index) {\n                                var propertyName = _this.escape(primaryColumn.databaseName);\n                                return distinctAlias + \".\" + propertyName;\n                            }).join(\", \") + \")) as \\\"cnt\\\"\";\n                        }\n                        return [4 /*yield*/, this.clone()\n                                .orderBy()\n                                .groupBy()\n                                .offset(undefined)\n                                .limit(undefined)\n                                .skip(undefined)\n                                .take(undefined)\n                                .select(countSql)\n                                .setOption(\"disable-global-order\")\n                                .loadRawResults(queryRunner)];\n                    case 1:\n                        results = _a.sent();\n                        if (!results || !results[0] || !results[0][\"cnt\"])\n                            return [2 /*return*/, 0];\n                        return [2 /*return*/, parseInt(results[0][\"cnt\"])];\n                }\n            });\n        });\n    };\n    /**\n     * Executes sql generated by query builder and returns object with raw results and entities created from them.\n     */\n    SelectQueryBuilder.prototype.executeEntitiesAndRawResults = function (queryRunner) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var metadata, relationIdLoader, relationCountLoader, relationIdMetadataTransformer, relationCountMetadataTransformer, rawResults, entities, _a, selects, orderBys_1, metadata_1, mainAliasName_1, querySelects, condition, parameters_1, ids, areAllNumbers, rawRelationIdResults, rawRelationCountResults, transformer, broadcastResult;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!this.expressionMap.mainAlias)\n                            throw new Error(\"Alias is not set. Use \\\"from\\\" method to set an alias.\");\n                        if ((this.expressionMap.lockMode === \"pessimistic_read\" || this.expressionMap.lockMode === \"pessimistic_write\") && !queryRunner.isTransactionActive)\n                            throw new PessimisticLockTransactionRequiredError_1.PessimisticLockTransactionRequiredError();\n                        if (this.expressionMap.lockMode === \"optimistic\") {\n                            metadata = this.expressionMap.mainAlias.metadata;\n                            if (!metadata.versionColumn && !metadata.updateDateColumn)\n                                throw new NoVersionOrUpdateDateColumnError_1.NoVersionOrUpdateDateColumnError(metadata.name);\n                        }\n                        relationIdLoader = new RelationIdLoader_1.RelationIdLoader(this.connection, queryRunner, this.expressionMap.relationIdAttributes);\n                        relationCountLoader = new RelationCountLoader_1.RelationCountLoader(this.connection, queryRunner, this.expressionMap.relationCountAttributes);\n                        relationIdMetadataTransformer = new RelationIdMetadataToAttributeTransformer_1.RelationIdMetadataToAttributeTransformer(this.expressionMap);\n                        relationIdMetadataTransformer.transform();\n                        relationCountMetadataTransformer = new RelationCountMetadataToAttributeTransformer_1.RelationCountMetadataToAttributeTransformer(this.expressionMap);\n                        relationCountMetadataTransformer.transform();\n                        rawResults = [], entities = [];\n                        if (!((this.expressionMap.skip || this.expressionMap.take) && this.expressionMap.joinAttributes.length > 0)) return [3 /*break*/, 4];\n                        _a = __read(this.createOrderByCombinedWithSelectExpression(\"distinctAlias\"), 2), selects = _a[0], orderBys_1 = _a[1];\n                        metadata_1 = this.expressionMap.mainAlias.metadata;\n                        mainAliasName_1 = this.expressionMap.mainAlias.name;\n                        querySelects = metadata_1.primaryColumns.map(function (primaryColumn) {\n                            var distinctAlias = _this.escape(\"distinctAlias\");\n                            var columnAlias = _this.escape(_this.buildColumnAlias(mainAliasName_1, primaryColumn.databaseName));\n                            if (!orderBys_1[columnAlias]) // make sure we aren't overriding user-defined order in inverse direction\n                                orderBys_1[columnAlias] = \"ASC\";\n                            return distinctAlias + \".\" + columnAlias + \" as \\\"ids_\" + _this.buildColumnAlias(mainAliasName_1, primaryColumn.databaseName) + \"\\\"\";\n                        });\n                        return [4 /*yield*/, new SelectQueryBuilder(this.connection, queryRunner)\n                                .select(\"DISTINCT \" + querySelects.join(\", \"))\n                                .addSelect(selects)\n                                .from(\"(\" + this.clone().orderBy().groupBy().getQuery() + \")\", \"distinctAlias\")\n                                .offset(this.expressionMap.skip)\n                                .limit(this.expressionMap.take)\n                                .orderBy(orderBys_1)\n                                .cache(this.expressionMap.cache ? this.expressionMap.cache : this.expressionMap.cacheId, this.expressionMap.cacheDuration)\n                                .setParameters(this.getParameters())\n                                .setNativeParameters(this.expressionMap.nativeParameters)\n                                .getRawMany()];\n                    case 1:\n                        rawResults = _b.sent();\n                        if (!(rawResults.length > 0)) return [3 /*break*/, 3];\n                        condition = \"\";\n                        parameters_1 = {};\n                        if (metadata_1.hasMultiplePrimaryKeys) {\n                            condition = rawResults.map(function (result, index) {\n                                return metadata_1.primaryColumns.map(function (primaryColumn) {\n                                    parameters_1[\"ids_\" + index + \"_\" + primaryColumn.databaseName] = result[\"ids_\" + mainAliasName_1 + \"_\" + primaryColumn.databaseName];\n                                    return mainAliasName_1 + \".\" + primaryColumn.propertyPath + \"=:ids_\" + index + \"_\" + primaryColumn.databaseName;\n                                }).join(\" AND \");\n                            }).join(\" OR \");\n                        }\n                        else {\n                            ids = rawResults.map(function (result) { return result[\"ids_\" + _this.buildColumnAlias(mainAliasName_1, metadata_1.primaryColumns[0].databaseName)]; });\n                            areAllNumbers = ids.every(function (id) { return typeof id === \"number\"; });\n                            if (areAllNumbers) {\n                                // fixes #190. if all numbers then its safe to perform query without parameter\n                                condition = mainAliasName_1 + \".\" + metadata_1.primaryColumns[0].propertyPath + \" IN (\" + ids.join(\", \") + \")\";\n                            }\n                            else {\n                                parameters_1[\"ids\"] = ids;\n                                condition = mainAliasName_1 + \".\" + metadata_1.primaryColumns[0].propertyPath + \" IN (:...ids)\";\n                            }\n                        }\n                        return [4 /*yield*/, this.clone()\n                                .mergeExpressionMap({ extraAppendedAndWhereCondition: condition })\n                                .setParameters(parameters_1)\n                                .loadRawResults(queryRunner)];\n                    case 2:\n                        rawResults = _b.sent();\n                        _b.label = 3;\n                    case 3: return [3 /*break*/, 6];\n                    case 4: return [4 /*yield*/, this.loadRawResults(queryRunner)];\n                    case 5:\n                        rawResults = _b.sent();\n                        _b.label = 6;\n                    case 6:\n                        if (!(rawResults.length > 0)) return [3 /*break*/, 10];\n                        return [4 /*yield*/, relationIdLoader.load(rawResults)];\n                    case 7:\n                        rawRelationIdResults = _b.sent();\n                        return [4 /*yield*/, relationCountLoader.load(rawResults)];\n                    case 8:\n                        rawRelationCountResults = _b.sent();\n                        transformer = new RawSqlResultsToEntityTransformer_1.RawSqlResultsToEntityTransformer(this.expressionMap, this.connection.driver, rawRelationIdResults, rawRelationCountResults, this.queryRunner);\n                        entities = transformer.transform(rawResults, this.expressionMap.mainAlias);\n                        if (!(this.expressionMap.callListeners === true && this.expressionMap.mainAlias.hasMetadata)) return [3 /*break*/, 10];\n                        broadcastResult = new BroadcasterResult_1.BroadcasterResult();\n                        queryRunner.broadcaster.broadcastLoadEventsForAll(broadcastResult, this.expressionMap.mainAlias.metadata, entities);\n                        if (!(broadcastResult.promises.length > 0)) return [3 /*break*/, 10];\n                        return [4 /*yield*/, Promise.all(broadcastResult.promises)];\n                    case 9:\n                        _b.sent();\n                        _b.label = 10;\n                    case 10: return [2 /*return*/, {\n                            raw: rawResults,\n                            entities: entities,\n                        }];\n                }\n            });\n        });\n    };\n    SelectQueryBuilder.prototype.createOrderByCombinedWithSelectExpression = function (parentAlias) {\n        var _this = this;\n        // if table has a default order then apply it\n        var orderBys = this.expressionMap.allOrderBys;\n        var selectString = Object.keys(orderBys)\n            .map(function (orderCriteria) {\n            if (orderCriteria.indexOf(\".\") !== -1) {\n                var _a = __read(orderCriteria.split(\".\"), 2), aliasName = _a[0], propertyPath = _a[1];\n                var alias = _this.expressionMap.findAliasByName(aliasName);\n                var column = alias.metadata.findColumnWithPropertyName(propertyPath);\n                return _this.escape(parentAlias) + \".\" + _this.escape(_this.buildColumnAlias(aliasName, column.databaseName));\n            }\n            else {\n                if (_this.expressionMap.selects.find(function (select) { return select.selection === orderCriteria || select.aliasName === orderCriteria; }))\n                    return _this.escape(parentAlias) + \".\" + orderCriteria;\n                return \"\";\n            }\n        })\n            .join(\", \");\n        var orderByObject = {};\n        Object.keys(orderBys).forEach(function (orderCriteria) {\n            if (orderCriteria.indexOf(\".\") !== -1) {\n                var _a = __read(orderCriteria.split(\".\"), 2), aliasName = _a[0], propertyPath = _a[1];\n                var alias = _this.expressionMap.findAliasByName(aliasName);\n                var column = alias.metadata.findColumnWithPropertyName(propertyPath);\n                orderByObject[_this.escape(parentAlias) + \".\" + _this.escape(_this.buildColumnAlias(aliasName, column.databaseName))] = orderBys[orderCriteria];\n            }\n            else {\n                if (_this.expressionMap.selects.find(function (select) { return select.selection === orderCriteria || select.aliasName === orderCriteria; })) {\n                    orderByObject[_this.escape(parentAlias) + \".\" + orderCriteria] = orderBys[orderCriteria];\n                }\n                else {\n                    orderByObject[orderCriteria] = orderBys[orderCriteria];\n                }\n            }\n        });\n        return [selectString, orderByObject];\n    };\n    /**\n     * Loads raw results from the database.\n     */\n    SelectQueryBuilder.prototype.loadRawResults = function (queryRunner) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, sql, parameters, queryId, cacheOptions, savedQueryResultCacheOptions, results;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = __read(this.getQueryAndParameters(), 2), sql = _a[0], parameters = _a[1];\n                        queryId = sql + \" -- PARAMETERS: \" + JSON.stringify(parameters);\n                        cacheOptions = typeof this.connection.options.cache === \"object\" ? this.connection.options.cache : {};\n                        savedQueryResultCacheOptions = undefined;\n                        if (!(this.connection.queryResultCache && (this.expressionMap.cache || cacheOptions.alwaysEnabled))) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.connection.queryResultCache.getFromCache({\n                                identifier: this.expressionMap.cacheId,\n                                query: queryId,\n                                duration: this.expressionMap.cacheDuration || cacheOptions.duration || 1000\n                            }, queryRunner)];\n                    case 1:\n                        savedQueryResultCacheOptions = _b.sent();\n                        if (savedQueryResultCacheOptions && !this.connection.queryResultCache.isExpired(savedQueryResultCacheOptions))\n                            return [2 /*return*/, JSON.parse(savedQueryResultCacheOptions.result)];\n                        _b.label = 2;\n                    case 2: return [4 /*yield*/, queryRunner.query(sql, parameters)];\n                    case 3:\n                        results = _b.sent();\n                        if (!(this.connection.queryResultCache && (this.expressionMap.cache || cacheOptions.alwaysEnabled))) return [3 /*break*/, 5];\n                        return [4 /*yield*/, this.connection.queryResultCache.storeInCache({\n                                identifier: this.expressionMap.cacheId,\n                                query: queryId,\n                                time: new Date().getTime(),\n                                duration: this.expressionMap.cacheDuration || cacheOptions.duration || 1000,\n                                result: JSON.stringify(results)\n                            }, savedQueryResultCacheOptions, queryRunner)];\n                    case 4:\n                        _b.sent();\n                        _b.label = 5;\n                    case 5: return [2 /*return*/, results];\n                }\n            });\n        });\n    };\n    /**\n     * Builds column alias from given alias name and column name,\n     * If alias length is more than 29, abbreviates column name.\n     */\n    SelectQueryBuilder.prototype.buildColumnAlias = function (aliasName, columnName) {\n        var columnAliasName = aliasName + \"_\" + columnName;\n        if (columnAliasName.length > 29 && this.connection.driver instanceof OracleDriver_1.OracleDriver)\n            return aliasName + \"_\" + StringUtils_1.abbreviate(columnName, 2);\n        return columnAliasName;\n    };\n    /**\n     * Merges into expression map given expression map properties.\n     */\n    SelectQueryBuilder.prototype.mergeExpressionMap = function (expressionMap) {\n        Object.assign(this.expressionMap, expressionMap);\n        return this;\n    };\n    /**\n     * Normalizes a give number - converts to int if possible.\n     */\n    SelectQueryBuilder.prototype.normalizeNumber = function (num) {\n        if (typeof num === \"number\" || num === undefined || num === null)\n            return num;\n        return Number(num);\n    };\n    /**\n     * Creates a query builder used to execute sql queries inside this query builder.\n     */\n    SelectQueryBuilder.prototype.obtainQueryRunner = function () {\n        return this.queryRunner || this.connection.createQueryRunner(\"slave\");\n    };\n    return SelectQueryBuilder;\n}(QueryBuilder_1.QueryBuilder));\nexports.SelectQueryBuilder = SelectQueryBuilder;\n\n//# sourceMappingURL=SelectQueryBuilder.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/query-builder/SelectQueryBuilder.js?");

/***/ }),

/***/ "./node_modules/typeorm/query-builder/UpdateQueryBuilder.js":
/*!******************************************************************!*\
  !*** ./node_modules/typeorm/query-builder/UpdateQueryBuilder.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar QueryBuilder_1 = __webpack_require__(/*! ./QueryBuilder */ \"./node_modules/typeorm/query-builder/QueryBuilder.js\");\nvar SqlServerDriver_1 = __webpack_require__(/*! ../driver/sqlserver/SqlServerDriver */ \"./node_modules/typeorm/driver/sqlserver/SqlServerDriver.js\");\nvar PostgresDriver_1 = __webpack_require__(/*! ../driver/postgres/PostgresDriver */ \"./node_modules/typeorm/driver/postgres/PostgresDriver.js\");\nvar EntityMetadata_1 = __webpack_require__(/*! ../metadata/EntityMetadata */ \"./node_modules/typeorm/metadata/EntityMetadata.js\");\nvar UpdateResult_1 = __webpack_require__(/*! ./result/UpdateResult */ \"./node_modules/typeorm/query-builder/result/UpdateResult.js\");\nvar ReturningStatementNotSupportedError_1 = __webpack_require__(/*! ../error/ReturningStatementNotSupportedError */ \"./node_modules/typeorm/error/ReturningStatementNotSupportedError.js\");\nvar ReturningResultsEntityUpdator_1 = __webpack_require__(/*! ./ReturningResultsEntityUpdator */ \"./node_modules/typeorm/query-builder/ReturningResultsEntityUpdator.js\");\nvar SqljsDriver_1 = __webpack_require__(/*! ../driver/sqljs/SqljsDriver */ \"./node_modules/typeorm/driver/sqljs/SqljsDriver.js\");\nvar MysqlDriver_1 = __webpack_require__(/*! ../driver/mysql/MysqlDriver */ \"./node_modules/typeorm/driver/mysql/MysqlDriver.js\");\nvar BroadcasterResult_1 = __webpack_require__(/*! ../subscriber/BroadcasterResult */ \"./node_modules/typeorm/subscriber/BroadcasterResult.js\");\nvar AbstractSqliteDriver_1 = __webpack_require__(/*! ../driver/sqlite-abstract/AbstractSqliteDriver */ \"./node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js\");\nvar LimitOnUpdateNotSupportedError_1 = __webpack_require__(/*! ../error/LimitOnUpdateNotSupportedError */ \"./node_modules/typeorm/error/LimitOnUpdateNotSupportedError.js\");\nvar OracleDriver_1 = __webpack_require__(/*! ../driver/oracle/OracleDriver */ \"./node_modules/typeorm/driver/oracle/OracleDriver.js\");\n/**\n * Allows to build complex sql queries in a fashion way and execute those queries.\n */\nvar UpdateQueryBuilder = /** @class */ (function (_super) {\n    __extends(UpdateQueryBuilder, _super);\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function UpdateQueryBuilder(connectionOrQueryBuilder, queryRunner) {\n        var _this = _super.call(this, connectionOrQueryBuilder, queryRunner) || this;\n        _this.expressionMap.aliasNamePrefixingEnabled = false;\n        return _this;\n    }\n    // -------------------------------------------------------------------------\n    // Public Implemented Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Gets generated sql query without parameters being replaced.\n     */\n    UpdateQueryBuilder.prototype.getQuery = function () {\n        var sql = this.createUpdateExpression();\n        sql += this.createOrderByExpression();\n        sql += this.createLimitExpression();\n        return sql.trim();\n    };\n    /**\n     * Executes sql generated by query builder and returns raw database results.\n     */\n    UpdateQueryBuilder.prototype.execute = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var queryRunner, transactionStartedByUs, broadcastResult, returningResultsEntityUpdator, _a, sql, parameters, updateResult, _b, broadcastResult, error_1, rollbackError_1;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        queryRunner = this.obtainQueryRunner();\n                        transactionStartedByUs = false;\n                        _c.label = 1;\n                    case 1:\n                        _c.trys.push([1, 13, 18, 23]);\n                        if (!(this.expressionMap.useTransaction === true && queryRunner.isTransactionActive === false)) return [3 /*break*/, 3];\n                        return [4 /*yield*/, queryRunner.startTransaction()];\n                    case 2:\n                        _c.sent();\n                        transactionStartedByUs = true;\n                        _c.label = 3;\n                    case 3:\n                        if (!(this.expressionMap.callListeners === true && this.expressionMap.mainAlias.hasMetadata)) return [3 /*break*/, 5];\n                        broadcastResult = new BroadcasterResult_1.BroadcasterResult();\n                        queryRunner.broadcaster.broadcastBeforeUpdateEvent(broadcastResult, this.expressionMap.mainAlias.metadata);\n                        if (!(broadcastResult.promises.length > 0)) return [3 /*break*/, 5];\n                        return [4 /*yield*/, Promise.all(broadcastResult.promises)];\n                    case 4:\n                        _c.sent();\n                        _c.label = 5;\n                    case 5:\n                        returningResultsEntityUpdator = new ReturningResultsEntityUpdator_1.ReturningResultsEntityUpdator(queryRunner, this.expressionMap);\n                        if (this.expressionMap.updateEntity === true &&\n                            this.expressionMap.mainAlias.hasMetadata &&\n                            this.expressionMap.whereEntities.length > 0) {\n                            this.expressionMap.extraReturningColumns = returningResultsEntityUpdator.getUpdationReturningColumns();\n                        }\n                        _a = __read(this.getQueryAndParameters(), 2), sql = _a[0], parameters = _a[1];\n                        updateResult = new UpdateResult_1.UpdateResult();\n                        _b = updateResult;\n                        return [4 /*yield*/, queryRunner.query(sql, parameters)];\n                    case 6:\n                        _b.raw = _c.sent();\n                        if (!(this.expressionMap.updateEntity === true &&\n                            this.expressionMap.mainAlias.hasMetadata &&\n                            this.expressionMap.whereEntities.length > 0)) return [3 /*break*/, 8];\n                        return [4 /*yield*/, returningResultsEntityUpdator.update(updateResult, this.expressionMap.whereEntities)];\n                    case 7:\n                        _c.sent();\n                        _c.label = 8;\n                    case 8:\n                        if (!(this.expressionMap.callListeners === true && this.expressionMap.mainAlias.hasMetadata)) return [3 /*break*/, 10];\n                        broadcastResult = new BroadcasterResult_1.BroadcasterResult();\n                        queryRunner.broadcaster.broadcastAfterUpdateEvent(broadcastResult, this.expressionMap.mainAlias.metadata);\n                        if (!(broadcastResult.promises.length > 0)) return [3 /*break*/, 10];\n                        return [4 /*yield*/, Promise.all(broadcastResult.promises)];\n                    case 9:\n                        _c.sent();\n                        _c.label = 10;\n                    case 10:\n                        if (!transactionStartedByUs) return [3 /*break*/, 12];\n                        return [4 /*yield*/, queryRunner.commitTransaction()];\n                    case 11:\n                        _c.sent();\n                        _c.label = 12;\n                    case 12: return [2 /*return*/, updateResult];\n                    case 13:\n                        error_1 = _c.sent();\n                        if (!transactionStartedByUs) return [3 /*break*/, 17];\n                        _c.label = 14;\n                    case 14:\n                        _c.trys.push([14, 16, , 17]);\n                        return [4 /*yield*/, queryRunner.rollbackTransaction()];\n                    case 15:\n                        _c.sent();\n                        return [3 /*break*/, 17];\n                    case 16:\n                        rollbackError_1 = _c.sent();\n                        return [3 /*break*/, 17];\n                    case 17: throw error_1;\n                    case 18:\n                        if (!(queryRunner !== this.queryRunner)) return [3 /*break*/, 20];\n                        return [4 /*yield*/, queryRunner.release()];\n                    case 19:\n                        _c.sent();\n                        _c.label = 20;\n                    case 20:\n                        if (!(this.connection.driver instanceof SqljsDriver_1.SqljsDriver && !queryRunner.isTransactionActive)) return [3 /*break*/, 22];\n                        return [4 /*yield*/, this.connection.driver.autoSave()];\n                    case 21:\n                        _c.sent();\n                        _c.label = 22;\n                    case 22: return [7 /*endfinally*/];\n                    case 23: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Values needs to be updated.\n     */\n    UpdateQueryBuilder.prototype.set = function (values) {\n        this.expressionMap.valuesSet = values;\n        return this;\n    };\n    /**\n     * Sets WHERE condition in the query builder.\n     * If you had previously WHERE expression defined,\n     * calling this function will override previously set WHERE conditions.\n     * Additionally you can add parameters used in where expression.\n     */\n    UpdateQueryBuilder.prototype.where = function (where, parameters) {\n        this.expressionMap.wheres = []; // don't move this block below since computeWhereParameter can add where expressions\n        var condition = this.computeWhereParameter(where);\n        if (condition)\n            this.expressionMap.wheres = [{ type: \"simple\", condition: condition }];\n        if (parameters)\n            this.setParameters(parameters);\n        return this;\n    };\n    /**\n     * Adds new AND WHERE condition in the query builder.\n     * Additionally you can add parameters used in where expression.\n     */\n    UpdateQueryBuilder.prototype.andWhere = function (where, parameters) {\n        this.expressionMap.wheres.push({ type: \"and\", condition: this.computeWhereParameter(where) });\n        if (parameters)\n            this.setParameters(parameters);\n        return this;\n    };\n    /**\n     * Adds new OR WHERE condition in the query builder.\n     * Additionally you can add parameters used in where expression.\n     */\n    UpdateQueryBuilder.prototype.orWhere = function (where, parameters) {\n        this.expressionMap.wheres.push({ type: \"or\", condition: this.computeWhereParameter(where) });\n        if (parameters)\n            this.setParameters(parameters);\n        return this;\n    };\n    /**\n     * Adds new AND WHERE with conditions for the given ids.\n     */\n    UpdateQueryBuilder.prototype.whereInIds = function (ids) {\n        return this.where(this.createWhereIdsExpression(ids));\n    };\n    /**\n     * Adds new AND WHERE with conditions for the given ids.\n     */\n    UpdateQueryBuilder.prototype.andWhereInIds = function (ids) {\n        return this.andWhere(this.createWhereIdsExpression(ids));\n    };\n    /**\n     * Adds new OR WHERE with conditions for the given ids.\n     */\n    UpdateQueryBuilder.prototype.orWhereInIds = function (ids) {\n        return this.orWhere(this.createWhereIdsExpression(ids));\n    };\n    /**\n     * Optional returning/output clause.\n     */\n    UpdateQueryBuilder.prototype.output = function (output) {\n        return this.returning(output);\n    };\n    /**\n     * Optional returning/output clause.\n     */\n    UpdateQueryBuilder.prototype.returning = function (returning) {\n        // not all databases support returning/output cause\n        if (!this.connection.driver.isReturningSqlSupported())\n            throw new ReturningStatementNotSupportedError_1.ReturningStatementNotSupportedError();\n        this.expressionMap.returning = returning;\n        return this;\n    };\n    /**\n     * Sets ORDER BY condition in the query builder.\n     * If you had previously ORDER BY expression defined,\n     * calling this function will override previously set ORDER BY conditions.\n     */\n    UpdateQueryBuilder.prototype.orderBy = function (sort, order, nulls) {\n        if (order === void 0) { order = \"ASC\"; }\n        if (sort) {\n            if (sort instanceof Object) {\n                this.expressionMap.orderBys = sort;\n            }\n            else {\n                if (nulls) {\n                    this.expressionMap.orderBys = (_a = {}, _a[sort] = { order: order, nulls: nulls }, _a);\n                }\n                else {\n                    this.expressionMap.orderBys = (_b = {}, _b[sort] = order, _b);\n                }\n            }\n        }\n        else {\n            this.expressionMap.orderBys = {};\n        }\n        return this;\n        var _a, _b;\n    };\n    /**\n     * Adds ORDER BY condition in the query builder.\n     */\n    UpdateQueryBuilder.prototype.addOrderBy = function (sort, order, nulls) {\n        if (order === void 0) { order = \"ASC\"; }\n        if (nulls) {\n            this.expressionMap.orderBys[sort] = { order: order, nulls: nulls };\n        }\n        else {\n            this.expressionMap.orderBys[sort] = order;\n        }\n        return this;\n    };\n    /**\n     * Sets LIMIT - maximum number of rows to be selected.\n     */\n    UpdateQueryBuilder.prototype.limit = function (limit) {\n        this.expressionMap.limit = limit;\n        return this;\n    };\n    /**\n     * Indicates if entity must be updated after update operation.\n     * This may produce extra query or use RETURNING / OUTPUT statement (depend on database).\n     * Enabled by default.\n     */\n    UpdateQueryBuilder.prototype.whereEntity = function (entity) {\n        var _this = this;\n        if (!this.expressionMap.mainAlias.hasMetadata)\n            throw new Error(\".whereEntity method can only be used on queries which update real entity table.\");\n        this.expressionMap.wheres = [];\n        var entities = entity instanceof Array ? entity : [entity];\n        entities.forEach(function (entity) {\n            var entityIdMap = _this.expressionMap.mainAlias.metadata.getEntityIdMap(entity);\n            if (!entityIdMap)\n                throw new Error(\"Provided entity does not have ids set, cannot perform operation.\");\n            _this.orWhereInIds(entityIdMap);\n        });\n        this.expressionMap.whereEntities = entities;\n        return this;\n    };\n    /**\n     * Indicates if entity must be updated after update operation.\n     * This may produce extra query or use RETURNING / OUTPUT statement (depend on database).\n     * Enabled by default.\n     */\n    UpdateQueryBuilder.prototype.updateEntity = function (enabled) {\n        this.expressionMap.updateEntity = enabled;\n        return this;\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates UPDATE express used to perform insert query.\n     */\n    UpdateQueryBuilder.prototype.createUpdateExpression = function () {\n        var _this = this;\n        var valuesSet = this.getValueSet();\n        var metadata = this.expressionMap.mainAlias.hasMetadata ? this.expressionMap.mainAlias.metadata : undefined;\n        // prepare columns and values to be updated\n        var updateColumnAndValues = [];\n        var newParameters = {};\n        var parametersCount = this.connection.driver instanceof MysqlDriver_1.MysqlDriver ||\n            this.connection.driver instanceof OracleDriver_1.OracleDriver ||\n            this.connection.driver instanceof AbstractSqliteDriver_1.AbstractSqliteDriver\n            ? 0 : Object.keys(this.expressionMap.nativeParameters).length;\n        if (metadata) {\n            EntityMetadata_1.EntityMetadata.createPropertyPath(metadata, valuesSet).forEach(function (propertyPath) {\n                // todo: make this and other query builder to work with properly with tables without metadata\n                var columns = metadata.findColumnsWithPropertyPath(propertyPath);\n                columns.forEach(function (column) {\n                    var paramName = \"upd_\" + column.databaseName;\n                    //\n                    var value = column.getEntityValue(valuesSet);\n                    if (column.referencedColumn && value instanceof Object) {\n                        value = column.referencedColumn.getEntityValue(value);\n                    }\n                    value = _this.connection.driver.preparePersistentValue(value, column);\n                    // todo: duplication zone\n                    if (value instanceof Function) { // support for SQL expressions in update query\n                        updateColumnAndValues.push(_this.escape(column.databaseName) + \" = \" + value());\n                    }\n                    else {\n                        if (_this.connection.driver instanceof SqlServerDriver_1.SqlServerDriver) {\n                            value = _this.connection.driver.parametrizeValue(column, value);\n                            // } else if (value instanceof Array) {\n                            //     value = new ArrayParameter(value);\n                        }\n                        if (_this.connection.driver instanceof MysqlDriver_1.MysqlDriver ||\n                            _this.connection.driver instanceof OracleDriver_1.OracleDriver ||\n                            _this.connection.driver instanceof AbstractSqliteDriver_1.AbstractSqliteDriver) {\n                            newParameters[paramName] = value;\n                        }\n                        else {\n                            _this.expressionMap.nativeParameters[paramName] = value;\n                        }\n                        var expression = null;\n                        if (_this.connection.driver instanceof MysqlDriver_1.MysqlDriver && _this.connection.driver.spatialTypes.indexOf(column.type) !== -1) {\n                            expression = \"GeomFromText(\" + _this.connection.driver.createParameter(paramName, parametersCount) + \")\";\n                        }\n                        else if (_this.connection.driver instanceof PostgresDriver_1.PostgresDriver && _this.connection.driver.spatialTypes.indexOf(column.type) !== -1) {\n                            if (column.srid != null) {\n                                expression = \"ST_SetSRID(ST_GeomFromGeoJSON(\" + _this.connection.driver.createParameter(paramName, parametersCount) + \"), \" + column.srid + \")::\" + column.type;\n                            }\n                            else {\n                                expression = \"ST_GeomFromGeoJSON(\" + _this.connection.driver.createParameter(paramName, parametersCount) + \")::\" + column.type;\n                            }\n                        }\n                        else {\n                            expression = _this.connection.driver.createParameter(paramName, parametersCount);\n                        }\n                        updateColumnAndValues.push(_this.escape(column.databaseName) + \" = \" + expression);\n                        parametersCount++;\n                    }\n                });\n            });\n            if (metadata.versionColumn)\n                updateColumnAndValues.push(this.escape(metadata.versionColumn.databaseName) + \" = \" + this.escape(metadata.versionColumn.databaseName) + \" + 1\");\n            if (metadata.updateDateColumn)\n                updateColumnAndValues.push(this.escape(metadata.updateDateColumn.databaseName) + \" = CURRENT_TIMESTAMP\"); // todo: fix issue with CURRENT_TIMESTAMP(6) being used, can \"DEFAULT\" be used?!\n        }\n        else {\n            Object.keys(valuesSet).map(function (key) {\n                var value = valuesSet[key];\n                // todo: duplication zone\n                if (value instanceof Function) { // support for SQL expressions in update query\n                    updateColumnAndValues.push(_this.escape(key) + \" = \" + value());\n                }\n                else {\n                    // we need to store array values in a special class to make sure parameter replacement will work correctly\n                    // if (value instanceof Array)\n                    //     value = new ArrayParameter(value);\n                    if (_this.connection.driver instanceof MysqlDriver_1.MysqlDriver ||\n                        _this.connection.driver instanceof OracleDriver_1.OracleDriver ||\n                        _this.connection.driver instanceof AbstractSqliteDriver_1.AbstractSqliteDriver) {\n                        newParameters[key] = value;\n                    }\n                    else {\n                        _this.expressionMap.nativeParameters[key] = value;\n                    }\n                    updateColumnAndValues.push(_this.escape(key) + \" = \" + _this.connection.driver.createParameter(key, parametersCount));\n                    parametersCount++;\n                }\n            });\n        }\n        // we re-write parameters this way because we want our \"UPDATE ... SET\" parameters to be first in the list of \"nativeParameters\"\n        // because some drivers like mysql depend on order of parameters\n        if (this.connection.driver instanceof MysqlDriver_1.MysqlDriver ||\n            this.connection.driver instanceof OracleDriver_1.OracleDriver ||\n            this.connection.driver instanceof AbstractSqliteDriver_1.AbstractSqliteDriver) {\n            this.expressionMap.nativeParameters = Object.assign(newParameters, this.expressionMap.nativeParameters);\n        }\n        // get a table name and all column database names\n        var whereExpression = this.createWhereExpression();\n        var returningExpression = this.createReturningExpression();\n        // generate and return sql update query\n        if (returningExpression && (this.connection.driver instanceof PostgresDriver_1.PostgresDriver || this.connection.driver instanceof OracleDriver_1.OracleDriver)) {\n            return \"UPDATE \" + this.getTableName(this.getMainTableName()) + \" SET \" + updateColumnAndValues.join(\", \") + whereExpression + \" RETURNING \" + returningExpression;\n        }\n        else if (returningExpression && this.connection.driver instanceof SqlServerDriver_1.SqlServerDriver) {\n            return \"UPDATE \" + this.getTableName(this.getMainTableName()) + \" SET \" + updateColumnAndValues.join(\", \") + \" OUTPUT \" + returningExpression + whereExpression;\n        }\n        else {\n            return \"UPDATE \" + this.getTableName(this.getMainTableName()) + \" SET \" + updateColumnAndValues.join(\", \") + whereExpression; // todo: how do we replace aliases in where to nothing?\n        }\n    };\n    /**\n     * Creates \"ORDER BY\" part of SQL query.\n     */\n    UpdateQueryBuilder.prototype.createOrderByExpression = function () {\n        var _this = this;\n        var orderBys = this.expressionMap.orderBys;\n        if (Object.keys(orderBys).length > 0)\n            return \" ORDER BY \" + Object.keys(orderBys)\n                .map(function (columnName) {\n                if (typeof orderBys[columnName] === \"string\") {\n                    return _this.replacePropertyNames(columnName) + \" \" + orderBys[columnName];\n                }\n                else {\n                    return _this.replacePropertyNames(columnName) + \" \" + orderBys[columnName].order + \" \" + orderBys[columnName].nulls;\n                }\n            })\n                .join(\", \");\n        return \"\";\n    };\n    /**\n     * Creates \"LIMIT\" parts of SQL query.\n     */\n    UpdateQueryBuilder.prototype.createLimitExpression = function () {\n        var limit = this.expressionMap.limit;\n        if (limit) {\n            if (this.connection.driver instanceof MysqlDriver_1.MysqlDriver) {\n                return \" LIMIT \" + limit;\n            }\n            else {\n                throw new LimitOnUpdateNotSupportedError_1.LimitOnUpdateNotSupportedError();\n            }\n        }\n        return \"\";\n    };\n    /**\n     * Gets array of values need to be inserted into the target table.\n     */\n    UpdateQueryBuilder.prototype.getValueSet = function () {\n        if (this.expressionMap.valuesSet instanceof Object)\n            return this.expressionMap.valuesSet;\n        throw new Error(\"Cannot perform update query because update values are not defined. Call \\\"qb.set(...)\\\" method to specify inserted values.\");\n    };\n    return UpdateQueryBuilder;\n}(QueryBuilder_1.QueryBuilder));\nexports.UpdateQueryBuilder = UpdateQueryBuilder;\n\n//# sourceMappingURL=UpdateQueryBuilder.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/query-builder/UpdateQueryBuilder.js?");

/***/ }),

/***/ "./node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar QueryBuilderUtils_1 = __webpack_require__(/*! ../QueryBuilderUtils */ \"./node_modules/typeorm/query-builder/QueryBuilderUtils.js\");\nvar RelationCountAttribute = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function RelationCountAttribute(expressionMap, relationCountAttribute) {\n        this.expressionMap = expressionMap;\n        Object.assign(this, relationCountAttribute || {});\n    }\n    Object.defineProperty(RelationCountAttribute.prototype, \"joinInverseSideMetadata\", {\n        // -------------------------------------------------------------------------\n        // Public Methods\n        // -------------------------------------------------------------------------\n        get: function () {\n            return this.relation.inverseEntityMetadata;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RelationCountAttribute.prototype, \"parentAlias\", {\n        /**\n         * Alias of the parent of this join.\n         * For example, if we join (\"post.category\", \"categoryAlias\") then \"post\" is a parent alias.\n         * This value is extracted from entityOrProperty value.\n         * This is available when join was made using \"post.category\" syntax.\n         */\n        get: function () {\n            if (!QueryBuilderUtils_1.QueryBuilderUtils.isAliasProperty(this.relationName))\n                throw new Error(\"Given value must be a string representation of alias property\");\n            return this.relationName.split(\".\")[0];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RelationCountAttribute.prototype, \"relationProperty\", {\n        /**\n         * Relation property name of the parent.\n         * This is used to understand what is joined.\n         * For example, if we join (\"post.category\", \"categoryAlias\") then \"category\" is a relation property.\n         * This value is extracted from entityOrProperty value.\n         * This is available when join was made using \"post.category\" syntax.\n         */\n        get: function () {\n            if (!QueryBuilderUtils_1.QueryBuilderUtils.isAliasProperty(this.relationName))\n                throw new Error(\"Given value is a string representation of alias property\");\n            return this.relationName.split(\".\")[1];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RelationCountAttribute.prototype, \"junctionAlias\", {\n        get: function () {\n            var _a = __read(this.relationName.split(\".\"), 2), parentAlias = _a[0], relationProperty = _a[1];\n            return parentAlias + \"_\" + relationProperty + \"_rc\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RelationCountAttribute.prototype, \"relation\", {\n        /**\n         * Relation of the parent.\n         * This is used to understand what is joined.\n         * This is available when join was made using \"post.category\" syntax.\n         */\n        get: function () {\n            if (!QueryBuilderUtils_1.QueryBuilderUtils.isAliasProperty(this.relationName))\n                throw new Error(\"Given value is a string representation of alias property\");\n            var _a = __read(this.relationName.split(\".\"), 2), parentAlias = _a[0], propertyPath = _a[1];\n            var relationOwnerSelection = this.expressionMap.findAliasByName(parentAlias);\n            var relation = relationOwnerSelection.metadata.findRelationWithPropertyPath(propertyPath);\n            if (!relation)\n                throw new Error(\"Relation with property path \" + propertyPath + \" in entity was not found.\");\n            return relation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RelationCountAttribute.prototype, \"metadata\", {\n        /**\n         * Metadata of the joined entity.\n         * If table without entity was joined, then it will return undefined.\n         */\n        get: function () {\n            if (!QueryBuilderUtils_1.QueryBuilderUtils.isAliasProperty(this.relationName))\n                throw new Error(\"Given value is a string representation of alias property\");\n            var parentAlias = this.relationName.split(\".\")[0];\n            var selection = this.expressionMap.findAliasByName(parentAlias);\n            return selection.metadata;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RelationCountAttribute.prototype, \"mapToPropertyPropertyName\", {\n        get: function () {\n            return this.mapToProperty.split(\".\")[1];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RelationCountAttribute;\n}());\nexports.RelationCountAttribute = RelationCountAttribute;\n\n//# sourceMappingURL=RelationCountAttribute.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js?");

/***/ }),

/***/ "./node_modules/typeorm/query-builder/relation-count/RelationCountLoader.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/typeorm/query-builder/relation-count/RelationCountLoader.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar RelationCountLoader = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function RelationCountLoader(connection, queryRunner, relationCountAttributes) {\n        this.connection = connection;\n        this.queryRunner = queryRunner;\n        this.relationCountAttributes = relationCountAttributes;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    RelationCountLoader.prototype.load = function (rawEntities) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var promises;\n            return __generator(this, function (_a) {\n                promises = this.relationCountAttributes.map(function (relationCountAttr) { return __awaiter(_this, void 0, void 0, function () {\n                    var relation, inverseRelation, referenceColumnName_1, inverseSideTable, inverseSideTableName, inverseSideTableAlias, inverseSidePropertyName, referenceColumnValues, qb, _a, joinTableColumnName_1, inverseJoinColumnName, firstJunctionColumn, secondJunctionColumn, referenceColumnValues, junctionAlias, inverseSideTableName, inverseSideTableAlias, junctionTableName, condition, qb, _b;\n                    return __generator(this, function (_c) {\n                        switch (_c.label) {\n                            case 0:\n                                if (!relationCountAttr.relation.isOneToMany) return [3 /*break*/, 2];\n                                relation = relationCountAttr.relation;\n                                inverseRelation = relation.inverseRelation;\n                                referenceColumnName_1 = inverseRelation.joinColumns[0].referencedColumn.propertyName;\n                                inverseSideTable = relation.inverseEntityMetadata.target;\n                                inverseSideTableName = relation.inverseEntityMetadata.tableName;\n                                inverseSideTableAlias = relationCountAttr.alias || inverseSideTableName;\n                                inverseSidePropertyName = inverseRelation.propertyName;\n                                referenceColumnValues = rawEntities\n                                    .map(function (rawEntity) { return rawEntity[relationCountAttr.parentAlias + \"_\" + referenceColumnName_1]; })\n                                    .filter(function (value) { return !!value; });\n                                // ensure we won't perform redundant queries for joined data which was not found in selection\n                                // example: if post.category was not found in db then no need to execute query for category.imageIds\n                                if (referenceColumnValues.length === 0)\n                                    return [2 /*return*/, { relationCountAttribute: relationCountAttr, results: [] }];\n                                qb = this.connection.createQueryBuilder(this.queryRunner);\n                                qb.select(inverseSideTableAlias + \".\" + inverseSidePropertyName, \"parentId\")\n                                    .addSelect(\"COUNT(*)\", \"cnt\")\n                                    .from(inverseSideTable, inverseSideTableAlias)\n                                    .where(inverseSideTableAlias + \".\" + inverseSidePropertyName + \" IN (:...ids)\")\n                                    .addGroupBy(inverseSideTableAlias + \".\" + inverseSidePropertyName)\n                                    .setParameter(\"ids\", referenceColumnValues);\n                                // apply condition (custom query builder factory)\n                                if (relationCountAttr.queryBuilderFactory)\n                                    relationCountAttr.queryBuilderFactory(qb);\n                                _a = {\n                                    relationCountAttribute: relationCountAttr\n                                };\n                                return [4 /*yield*/, qb.getRawMany()];\n                            case 1: return [2 /*return*/, (_a.results = _c.sent(),\n                                    _a)];\n                            case 2:\n                                inverseJoinColumnName = void 0;\n                                firstJunctionColumn = void 0;\n                                secondJunctionColumn = void 0;\n                                if (relationCountAttr.relation.isOwning) { // todo fix joinColumns[0] and inverseJoinColumns[0].\n                                    joinTableColumnName_1 = relationCountAttr.relation.joinColumns[0].referencedColumn.databaseName;\n                                    inverseJoinColumnName = relationCountAttr.relation.inverseJoinColumns[0].referencedColumn.databaseName;\n                                    firstJunctionColumn = relationCountAttr.relation.junctionEntityMetadata.columns[0];\n                                    secondJunctionColumn = relationCountAttr.relation.junctionEntityMetadata.columns[1];\n                                }\n                                else {\n                                    joinTableColumnName_1 = relationCountAttr.relation.inverseRelation.inverseJoinColumns[0].referencedColumn.databaseName;\n                                    inverseJoinColumnName = relationCountAttr.relation.inverseRelation.joinColumns[0].referencedColumn.databaseName;\n                                    firstJunctionColumn = relationCountAttr.relation.junctionEntityMetadata.columns[1];\n                                    secondJunctionColumn = relationCountAttr.relation.junctionEntityMetadata.columns[0];\n                                }\n                                referenceColumnValues = rawEntities\n                                    .map(function (rawEntity) { return rawEntity[relationCountAttr.parentAlias + \"_\" + joinTableColumnName_1]; })\n                                    .filter(function (value) { return value; });\n                                // ensure we won't perform redundant queries for joined data which was not found in selection\n                                // example: if post.category was not found in db then no need to execute query for category.imageIds\n                                if (referenceColumnValues.length === 0)\n                                    return [2 /*return*/, { relationCountAttribute: relationCountAttr, results: [] }];\n                                junctionAlias = relationCountAttr.junctionAlias;\n                                inverseSideTableName = relationCountAttr.joinInverseSideMetadata.tableName;\n                                inverseSideTableAlias = relationCountAttr.alias || inverseSideTableName;\n                                junctionTableName = relationCountAttr.relation.junctionEntityMetadata.tableName;\n                                condition = junctionAlias + \".\" + firstJunctionColumn.propertyName + \" IN (\" + referenceColumnValues + \")\" +\n                                    \" AND \" + junctionAlias + \".\" + secondJunctionColumn.propertyName + \" = \" + inverseSideTableAlias + \".\" + inverseJoinColumnName;\n                                qb = this.connection.createQueryBuilder(this.queryRunner);\n                                qb.select(junctionAlias + \".\" + firstJunctionColumn.propertyName, \"parentId\")\n                                    .addSelect(\"COUNT(\" + qb.escape(inverseSideTableAlias) + \".\" + qb.escape(inverseJoinColumnName) + \")\", \"cnt\")\n                                    .from(inverseSideTableName, inverseSideTableAlias)\n                                    .innerJoin(junctionTableName, junctionAlias, condition)\n                                    .addGroupBy(junctionAlias + \".\" + firstJunctionColumn.propertyName);\n                                // apply condition (custom query builder factory)\n                                if (relationCountAttr.queryBuilderFactory)\n                                    relationCountAttr.queryBuilderFactory(qb);\n                                _b = {\n                                    relationCountAttribute: relationCountAttr\n                                };\n                                return [4 /*yield*/, qb.getRawMany()];\n                            case 3: return [2 /*return*/, (_b.results = _c.sent(),\n                                    _b)];\n                        }\n                    });\n                }); });\n                return [2 /*return*/, Promise.all(promises)];\n            });\n        });\n    };\n    return RelationCountLoader;\n}());\nexports.RelationCountLoader = RelationCountLoader;\n\n//# sourceMappingURL=RelationCountLoader.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/query-builder/relation-count/RelationCountLoader.js?");

/***/ }),

/***/ "./node_modules/typeorm/query-builder/relation-count/RelationCountMetadataToAttributeTransformer.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/typeorm/query-builder/relation-count/RelationCountMetadataToAttributeTransformer.js ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar RelationCountAttribute_1 = __webpack_require__(/*! ./RelationCountAttribute */ \"./node_modules/typeorm/query-builder/relation-count/RelationCountAttribute.js\");\nvar RelationCountMetadataToAttributeTransformer = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function RelationCountMetadataToAttributeTransformer(expressionMap) {\n        this.expressionMap = expressionMap;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    RelationCountMetadataToAttributeTransformer.prototype.transform = function () {\n        // by example:\n        // post has relation count:\n        // @RelationCount(post => post.categories) categoryCount\n        // category has relation count\n        // @RelationCount(category => category.images) imageCount\n        // we load post and join category\n        // we expect post.categoryCount and post.category.imageCount to have relation counts\n        var _this = this;\n        // first create relation count attributes for all relation count metadatas of the main selected object (post from example)\n        if (this.expressionMap.mainAlias) {\n            this.expressionMap.mainAlias.metadata.relationCounts.forEach(function (relationCount) {\n                var attribute = _this.metadataToAttribute(_this.expressionMap.mainAlias.name, relationCount);\n                _this.expressionMap.relationCountAttributes.push(attribute);\n            });\n        }\n        // second create relation count attributes for all relation count metadatas of all joined objects (category from example)\n        this.expressionMap.joinAttributes.forEach(function (join) {\n            // ensure this join has a metadata, because relation count can only work for real orm entities\n            if (!join.metadata || join.metadata.isJunction)\n                return;\n            join.metadata.relationCounts.forEach(function (relationCount) {\n                var attribute = _this.metadataToAttribute(join.alias.name, relationCount);\n                _this.expressionMap.relationCountAttributes.push(attribute);\n            });\n        });\n    };\n    // -------------------------------------------------------------------------\n    // Private Methods\n    // -------------------------------------------------------------------------\n    RelationCountMetadataToAttributeTransformer.prototype.metadataToAttribute = function (parentAliasName, relationCount) {\n        return new RelationCountAttribute_1.RelationCountAttribute(this.expressionMap, {\n            relationName: parentAliasName + \".\" + relationCount.relation.propertyName,\n            mapToProperty: parentAliasName + \".\" + relationCount.propertyName,\n            alias: relationCount.alias,\n            queryBuilderFactory: relationCount.queryBuilderFactory\n        });\n    };\n    return RelationCountMetadataToAttributeTransformer;\n}());\nexports.RelationCountMetadataToAttributeTransformer = RelationCountMetadataToAttributeTransformer;\n\n//# sourceMappingURL=RelationCountMetadataToAttributeTransformer.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/query-builder/relation-count/RelationCountMetadataToAttributeTransformer.js?");

/***/ }),

/***/ "./node_modules/typeorm/query-builder/relation-id/RelationIdAttribute.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/typeorm/query-builder/relation-id/RelationIdAttribute.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar QueryBuilderUtils_1 = __webpack_require__(/*! ../QueryBuilderUtils */ \"./node_modules/typeorm/query-builder/QueryBuilderUtils.js\");\n/**\n * Stores all join relation id attributes which will be used to build a JOIN query.\n */\nvar RelationIdAttribute = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function RelationIdAttribute(queryExpressionMap, relationIdAttribute) {\n        this.queryExpressionMap = queryExpressionMap;\n        /**\n         * Indicates if relation id should NOT be loaded as id map.\n         */\n        this.disableMixedMap = false;\n        Object.assign(this, relationIdAttribute || {});\n    }\n    Object.defineProperty(RelationIdAttribute.prototype, \"joinInverseSideMetadata\", {\n        // -------------------------------------------------------------------------\n        // Public Methods\n        // -------------------------------------------------------------------------\n        get: function () {\n            return this.relation.inverseEntityMetadata;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RelationIdAttribute.prototype, \"parentAlias\", {\n        /**\n         * Alias of the parent of this join.\n         * For example, if we join (\"post.category\", \"categoryAlias\") then \"post\" is a parent alias.\n         * This value is extracted from entityOrProperty value.\n         * This is available when join was made using \"post.category\" syntax.\n         */\n        get: function () {\n            if (!QueryBuilderUtils_1.QueryBuilderUtils.isAliasProperty(this.relationName))\n                throw new Error(\"Given value must be a string representation of alias property\");\n            return this.relationName.substr(0, this.relationName.indexOf(\".\"));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RelationIdAttribute.prototype, \"relationPropertyPath\", {\n        /**\n         * Relation property name of the parent.\n         * This is used to understand what is joined.\n         * For example, if we join (\"post.category\", \"categoryAlias\") then \"category\" is a relation property.\n         * This value is extracted from entityOrProperty value.\n         * This is available when join was made using \"post.category\" syntax.\n         */\n        get: function () {\n            if (!QueryBuilderUtils_1.QueryBuilderUtils.isAliasProperty(this.relationName))\n                throw new Error(\"Given value must be a string representation of alias property\");\n            return this.relationName.substr(this.relationName.indexOf(\".\") + 1);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RelationIdAttribute.prototype, \"relation\", {\n        /**\n         * Relation of the parent.\n         * This is used to understand what is joined.\n         * This is available when join was made using \"post.category\" syntax.\n         */\n        get: function () {\n            if (!QueryBuilderUtils_1.QueryBuilderUtils.isAliasProperty(this.relationName))\n                throw new Error(\"Given value must be a string representation of alias property\");\n            var relationOwnerSelection = this.queryExpressionMap.findAliasByName(this.parentAlias);\n            var relation = relationOwnerSelection.metadata.findRelationWithPropertyPath(this.relationPropertyPath);\n            if (!relation)\n                throw new Error(\"Relation with property path \" + this.relationPropertyPath + \" in entity was not found.\");\n            return relation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RelationIdAttribute.prototype, \"junctionAlias\", {\n        /**\n         * Generates alias of junction table, whose ids we get.\n         */\n        get: function () {\n            var _a = __read(this.relationName.split(\".\"), 2), parentAlias = _a[0], relationProperty = _a[1];\n            return parentAlias + \"_\" + relationProperty + \"_rid\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RelationIdAttribute.prototype, \"junctionMetadata\", {\n        /**\n         * Metadata of the joined entity.\n         * If extra condition without entity was joined, then it will return undefined.\n         */\n        get: function () {\n            return this.relation.junctionEntityMetadata;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RelationIdAttribute.prototype, \"mapToPropertyParentAlias\", {\n        get: function () {\n            return this.mapToProperty.substr(0, this.mapToProperty.indexOf(\".\"));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RelationIdAttribute.prototype, \"mapToPropertyPropertyPath\", {\n        get: function () {\n            return this.mapToProperty.substr(this.mapToProperty.indexOf(\".\") + 1);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RelationIdAttribute;\n}());\nexports.RelationIdAttribute = RelationIdAttribute;\n\n//# sourceMappingURL=RelationIdAttribute.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/query-builder/relation-id/RelationIdAttribute.js?");

/***/ }),

/***/ "./node_modules/typeorm/query-builder/relation-id/RelationIdLoader.js":
/*!****************************************************************************!*\
  !*** ./node_modules/typeorm/query-builder/relation-id/RelationIdLoader.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar StringUtils_1 = __webpack_require__(/*! ../../util/StringUtils */ \"./node_modules/typeorm/util/StringUtils.js\");\nvar OracleDriver_1 = __webpack_require__(/*! ../../driver/oracle/OracleDriver */ \"./node_modules/typeorm/driver/oracle/OracleDriver.js\");\nvar RelationIdLoader = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function RelationIdLoader(connection, queryRunner, relationIdAttributes) {\n        this.connection = connection;\n        this.queryRunner = queryRunner;\n        this.relationIdAttributes = relationIdAttributes;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    RelationIdLoader.prototype.load = function (rawEntities) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var promises;\n            return __generator(this, function (_a) {\n                promises = this.relationIdAttributes.map(function (relationIdAttr) { return __awaiter(_this, void 0, void 0, function () {\n                    var _this = this;\n                    var results, relation, joinColumns_1, table, tableName, tableAlias_1, parameters_1, condition, qb_1, _a, relation, joinColumns_2, inverseJoinColumns, junctionAlias_1, inverseSideTableName, inverseSideTableAlias_1, junctionTableName, mappedColumns, parameters_2, joinColumnConditions, inverseJoinColumnCondition_1, condition, qb_2, _b;\n                    return __generator(this, function (_c) {\n                        switch (_c.label) {\n                            case 0:\n                                if (!(relationIdAttr.relation.isManyToOne || relationIdAttr.relation.isOneToOneOwner)) return [3 /*break*/, 1];\n                                // example: Post and Tag\n                                // loadRelationIdAndMap(\"post.tagId\", \"post.tag\")\n                                // we expect it to load id of tag\n                                if (relationIdAttr.queryBuilderFactory)\n                                    throw new Error(\"Additional condition can not be used with ManyToOne or OneToOne owner relations.\");\n                                results = rawEntities.map(function (rawEntity) {\n                                    var result = {};\n                                    relationIdAttr.relation.joinColumns.forEach(function (joinColumn) {\n                                        result[joinColumn.databaseName] = rawEntity[_this.buildColumnAlias(relationIdAttr.parentAlias, joinColumn.databaseName)];\n                                    });\n                                    relationIdAttr.relation.entityMetadata.primaryColumns.forEach(function (primaryColumn) {\n                                        result[primaryColumn.databaseName] = rawEntity[_this.buildColumnAlias(relationIdAttr.parentAlias, primaryColumn.databaseName)];\n                                    });\n                                    return result;\n                                });\n                                return [2 /*return*/, {\n                                        relationIdAttribute: relationIdAttr,\n                                        results: results\n                                    }];\n                            case 1:\n                                if (!(relationIdAttr.relation.isOneToMany || relationIdAttr.relation.isOneToOneNotOwner)) return [3 /*break*/, 3];\n                                relation = relationIdAttr.relation;\n                                joinColumns_1 = relation.isOwning ? relation.joinColumns : relation.inverseRelation.joinColumns;\n                                table = relation.inverseEntityMetadata.target;\n                                tableName = relation.inverseEntityMetadata.tableName;\n                                tableAlias_1 = relationIdAttr.alias || tableName;\n                                parameters_1 = {};\n                                condition = rawEntities.map(function (rawEntity, index) {\n                                    return joinColumns_1.map(function (joinColumn) {\n                                        var parameterName = joinColumn.databaseName + index;\n                                        parameters_1[parameterName] = rawEntity[_this.buildColumnAlias(relationIdAttr.parentAlias, joinColumn.referencedColumn.databaseName)];\n                                        return tableAlias_1 + \".\" + joinColumn.propertyPath + \" = :\" + parameterName;\n                                    }).join(\" AND \");\n                                }).map(function (condition) { return \"(\" + condition + \")\"; })\n                                    .join(\" OR \");\n                                // ensure we won't perform redundant queries for joined data which was not found in selection\n                                // example: if post.category was not found in db then no need to execute query for category.imageIds\n                                if (!condition)\n                                    return [2 /*return*/, { relationIdAttribute: relationIdAttr, results: [] }];\n                                qb_1 = this.connection.createQueryBuilder(this.queryRunner);\n                                joinColumns_1.forEach(function (joinColumn) {\n                                    qb_1.addSelect(tableAlias_1 + \".\" + joinColumn.propertyPath, joinColumn.databaseName);\n                                });\n                                relation.inverseRelation.entityMetadata.primaryColumns.forEach(function (primaryColumn) {\n                                    qb_1.addSelect(tableAlias_1 + \".\" + primaryColumn.propertyPath, primaryColumn.databaseName);\n                                });\n                                qb_1.from(table, tableAlias_1)\n                                    .where(\"(\" + condition + \")\") // need brackets because if we have additional condition and no brackets, it looks like (a = 1) OR (a = 2) AND b = 1, that is incorrect\n                                    .setParameters(parameters_1);\n                                // apply condition (custom query builder factory)\n                                if (relationIdAttr.queryBuilderFactory)\n                                    relationIdAttr.queryBuilderFactory(qb_1);\n                                _a = {\n                                    relationIdAttribute: relationIdAttr\n                                };\n                                return [4 /*yield*/, qb_1.getRawMany()];\n                            case 2: return [2 /*return*/, (_a.results = _c.sent(),\n                                    _a)];\n                            case 3:\n                                relation = relationIdAttr.relation;\n                                joinColumns_2 = relation.isOwning ? relation.joinColumns : relation.inverseRelation.inverseJoinColumns;\n                                inverseJoinColumns = relation.isOwning ? relation.inverseJoinColumns : relation.inverseRelation.joinColumns;\n                                junctionAlias_1 = relationIdAttr.junctionAlias;\n                                inverseSideTableName = relationIdAttr.joinInverseSideMetadata.tableName;\n                                inverseSideTableAlias_1 = relationIdAttr.alias || inverseSideTableName;\n                                junctionTableName = relation.isOwning ? relation.junctionEntityMetadata.tableName : relation.inverseRelation.junctionEntityMetadata.tableName;\n                                mappedColumns = rawEntities.map(function (rawEntity) {\n                                    return joinColumns_2.reduce(function (map, joinColumn) {\n                                        map[joinColumn.propertyPath] = rawEntity[_this.buildColumnAlias(relationIdAttr.parentAlias, joinColumn.referencedColumn.databaseName)];\n                                        return map;\n                                    }, {});\n                                });\n                                // ensure we won't perform redundant queries for joined data which was not found in selection\n                                // example: if post.category was not found in db then no need to execute query for category.imageIds\n                                if (mappedColumns.length === 0)\n                                    return [2 /*return*/, { relationIdAttribute: relationIdAttr, results: [] }];\n                                parameters_2 = {};\n                                joinColumnConditions = mappedColumns.map(function (mappedColumn, index) {\n                                    return Object.keys(mappedColumn).map(function (key) {\n                                        var parameterName = key + index;\n                                        parameters_2[parameterName] = mappedColumn[key];\n                                        return junctionAlias_1 + \".\" + key + \" = :\" + parameterName;\n                                    }).join(\" AND \");\n                                });\n                                inverseJoinColumnCondition_1 = inverseJoinColumns.map(function (joinColumn) {\n                                    return junctionAlias_1 + \".\" + joinColumn.propertyPath + \" = \" + inverseSideTableAlias_1 + \".\" + joinColumn.referencedColumn.propertyPath;\n                                }).join(\" AND \");\n                                condition = joinColumnConditions.map(function (condition) {\n                                    return \"(\" + condition + \" AND \" + inverseJoinColumnCondition_1 + \")\";\n                                }).join(\" OR \");\n                                qb_2 = this.connection.createQueryBuilder(this.queryRunner);\n                                inverseJoinColumns.forEach(function (joinColumn) {\n                                    qb_2.addSelect(junctionAlias_1 + \".\" + joinColumn.propertyPath, joinColumn.databaseName)\n                                        .addOrderBy(junctionAlias_1 + \".\" + joinColumn.propertyPath);\n                                });\n                                joinColumns_2.forEach(function (joinColumn) {\n                                    qb_2.addSelect(junctionAlias_1 + \".\" + joinColumn.propertyPath, joinColumn.databaseName)\n                                        .addOrderBy(junctionAlias_1 + \".\" + joinColumn.propertyPath);\n                                });\n                                qb_2.from(inverseSideTableName, inverseSideTableAlias_1)\n                                    .innerJoin(junctionTableName, junctionAlias_1, condition)\n                                    .setParameters(parameters_2);\n                                // apply condition (custom query builder factory)\n                                if (relationIdAttr.queryBuilderFactory)\n                                    relationIdAttr.queryBuilderFactory(qb_2);\n                                _b = {\n                                    relationIdAttribute: relationIdAttr\n                                };\n                                return [4 /*yield*/, qb_2.getRawMany()];\n                            case 4: return [2 /*return*/, (_b.results = _c.sent(),\n                                    _b)];\n                        }\n                    });\n                }); });\n                return [2 /*return*/, Promise.all(promises)];\n            });\n        });\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Builds column alias from given alias name and column name,\n     * If alias length is more than 29, abbreviates column name.\n     */\n    RelationIdLoader.prototype.buildColumnAlias = function (aliasName, columnName) {\n        var columnAliasName = aliasName + \"_\" + columnName;\n        if (columnAliasName.length > 29 && this.connection.driver instanceof OracleDriver_1.OracleDriver)\n            return aliasName + \"_\" + StringUtils_1.abbreviate(columnName, 2);\n        return columnAliasName;\n    };\n    return RelationIdLoader;\n}());\nexports.RelationIdLoader = RelationIdLoader;\n\n//# sourceMappingURL=RelationIdLoader.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/query-builder/relation-id/RelationIdLoader.js?");

/***/ }),

/***/ "./node_modules/typeorm/query-builder/relation-id/RelationIdMetadataToAttributeTransformer.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/typeorm/query-builder/relation-id/RelationIdMetadataToAttributeTransformer.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar RelationIdAttribute_1 = __webpack_require__(/*! ./RelationIdAttribute */ \"./node_modules/typeorm/query-builder/relation-id/RelationIdAttribute.js\");\nvar RelationIdMetadataToAttributeTransformer = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function RelationIdMetadataToAttributeTransformer(expressionMap) {\n        this.expressionMap = expressionMap;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    RelationIdMetadataToAttributeTransformer.prototype.transform = function () {\n        // by example:\n        // post has relation id:\n        // @RelationId(post => post.categories) categoryIds\n        // category has relation id\n        // @RelationId(category => category.images) imageIds\n        // we load post and join category\n        // we expect post.categoryIds and post.category.imageIds to have relation ids\n        var _this = this;\n        // first create relation id attributes for all relation id metadatas of the main selected object (post from example)\n        if (this.expressionMap.mainAlias) {\n            this.expressionMap.mainAlias.metadata.relationIds.forEach(function (relationId) {\n                var attribute = _this.metadataToAttribute(_this.expressionMap.mainAlias.name, relationId);\n                _this.expressionMap.relationIdAttributes.push(attribute);\n            });\n        }\n        // second create relation id attributes for all relation id metadatas of all joined objects (category from example)\n        this.expressionMap.joinAttributes.forEach(function (join) {\n            // ensure this join has a metadata, because relation id can only work for real orm entities\n            if (!join.metadata || join.metadata.isJunction)\n                return;\n            join.metadata.relationIds.forEach(function (relationId) {\n                var attribute = _this.metadataToAttribute(join.alias.name, relationId);\n                _this.expressionMap.relationIdAttributes.push(attribute);\n            });\n        });\n    };\n    // -------------------------------------------------------------------------\n    // Private Methods\n    // -------------------------------------------------------------------------\n    RelationIdMetadataToAttributeTransformer.prototype.metadataToAttribute = function (parentAliasName, relationId) {\n        return new RelationIdAttribute_1.RelationIdAttribute(this.expressionMap, {\n            relationName: parentAliasName + \".\" + relationId.relation.propertyName,\n            mapToProperty: parentAliasName + \".\" + relationId.propertyName,\n            alias: relationId.alias,\n            queryBuilderFactory: relationId.queryBuilderFactory\n        });\n    };\n    return RelationIdMetadataToAttributeTransformer;\n}());\nexports.RelationIdMetadataToAttributeTransformer = RelationIdMetadataToAttributeTransformer;\n\n//# sourceMappingURL=RelationIdMetadataToAttributeTransformer.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/query-builder/relation-id/RelationIdMetadataToAttributeTransformer.js?");

/***/ }),

/***/ "./node_modules/typeorm/query-builder/result/DeleteResult.js":
/*!*******************************************************************!*\
  !*** ./node_modules/typeorm/query-builder/result/DeleteResult.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Result object returned by DeleteQueryBuilder execution.\n */\nvar DeleteResult = /** @class */ (function () {\n    function DeleteResult() {\n    }\n    return DeleteResult;\n}());\nexports.DeleteResult = DeleteResult;\n\n//# sourceMappingURL=DeleteResult.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/query-builder/result/DeleteResult.js?");

/***/ }),

/***/ "./node_modules/typeorm/query-builder/result/InsertResult.js":
/*!*******************************************************************!*\
  !*** ./node_modules/typeorm/query-builder/result/InsertResult.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Result object returned by InsertQueryBuilder execution.\n */\nvar InsertResult = /** @class */ (function () {\n    function InsertResult() {\n        /**\n         * Contains inserted entity id.\n         * Has entity-like structure (not just column database name and values).\n         */\n        this.identifiers = [];\n        /**\n         * Generated values returned by a database.\n         * Has entity-like structure (not just column database name and values).\n         */\n        this.generatedMaps = [];\n    }\n    return InsertResult;\n}());\nexports.InsertResult = InsertResult;\n\n//# sourceMappingURL=InsertResult.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/query-builder/result/InsertResult.js?");

/***/ }),

/***/ "./node_modules/typeorm/query-builder/result/UpdateResult.js":
/*!*******************************************************************!*\
  !*** ./node_modules/typeorm/query-builder/result/UpdateResult.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Result object returned by UpdateQueryBuilder execution.\n */\nvar UpdateResult = /** @class */ (function () {\n    function UpdateResult() {\n        /**\n         * Contains inserted entity id.\n         * Has entity-like structure (not just column database name and values).\n         */\n        // identifier: ObjectLiteral[] = [];\n        /**\n         * Generated values returned by a database.\n         * Has entity-like structure (not just column database name and values).\n         */\n        this.generatedMaps = [];\n    }\n    return UpdateResult;\n}());\nexports.UpdateResult = UpdateResult;\n\n//# sourceMappingURL=UpdateResult.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/query-builder/result/UpdateResult.js?");

/***/ }),

/***/ "./node_modules/typeorm/query-builder/transformer/DocumentToEntityTransformer.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/typeorm/query-builder/transformer/DocumentToEntityTransformer.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Transforms raw document into entity object.\n * Entity is constructed based on its entity metadata.\n */\nvar DocumentToEntityTransformer = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function DocumentToEntityTransformer(// private selectionMap: AliasMap,\n    // private joinMappings: JoinMapping[],\n    // private relationCountMetas: RelationCountAttribute[],\n    enableRelationIdValues) {\n        if (enableRelationIdValues === void 0) { enableRelationIdValues = false; }\n        this.enableRelationIdValues = enableRelationIdValues;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    DocumentToEntityTransformer.prototype.transformAll = function (documents, metadata) {\n        var _this = this;\n        return documents.map(function (document) { return _this.transform(document, metadata); });\n    };\n    DocumentToEntityTransformer.prototype.transform = function (document, metadata) {\n        var entity = metadata.create();\n        var hasData = false;\n        // handle _id property the special way\n        if (metadata.objectIdColumn && document[metadata.objectIdColumn.databaseNameWithoutPrefixes]) {\n            // todo: we can't use driver in this class\n            // do we really need prepare hydrated value here? If no then no problem. If yes then think maybe prepareHydratedValue process should be extracted out of driver class?\n            // entity[metadata.objectIdColumn.propertyName] = this.driver.prepareHydratedValue(document[metadata.objectIdColumn.name\"], metadata.objectIdColumn);\n            entity[metadata.objectIdColumn.propertyName] = document[metadata.objectIdColumn.databaseNameWithoutPrefixes];\n            hasData = true;\n        }\n        // add special columns that contains relation ids\n        if (this.enableRelationIdValues) {\n            metadata.columns.filter(function (column) { return !!column.relationMetadata; }).forEach(function (column) {\n                var valueInObject = document[column.databaseNameWithoutPrefixes];\n                if (valueInObject !== undefined && valueInObject !== null && column.propertyName) {\n                    // todo: we can't use driver in this class\n                    // const value = this.driver.prepareHydratedValue(valueInObject, column);\n                    entity[column.propertyName] = valueInObject;\n                    hasData = true;\n                }\n            });\n        }\n        /*this.joinMappings\n            .filter(joinMapping => joinMapping.parentName === alias.name && !joinMapping.alias.relationOwnerSelection && joinMapping.alias.target)\n            .map(joinMapping => {\n                const relatedEntities = this.transformRawResultsGroup(rawSqlResults, joinMapping.alias);\n                const isResultArray = joinMapping.isMany;\n                const result = !isResultArray ? relatedEntities[0] : relatedEntities;\n\n                if (result && (!isResultArray || result.length > 0)) {\n                    entity[joinMapping.propertyName] = result;\n                    hasData = true;\n                }\n            });*/\n        // get value from columns selections and put them into object\n        metadata.ownColumns.forEach(function (column) {\n            var valueInObject = document[column.databaseNameWithoutPrefixes];\n            if (valueInObject !== undefined &&\n                valueInObject !== null &&\n                column.propertyName &&\n                !column.isVirtual) {\n                // const value = this.driver.prepareHydratedValue(valueInObject, column);\n                entity[column.propertyName] = valueInObject;\n                hasData = true;\n            }\n        });\n        var addEmbeddedValuesRecursively = function (entity, document, embeddeds) {\n            embeddeds.forEach(function (embedded) {\n                if (!document[embedded.prefix])\n                    return;\n                if (embedded.isArray) {\n                    entity[embedded.propertyName] = document[embedded.prefix].map(function (subValue) {\n                        var newItem = embedded.create();\n                        embedded.columns.forEach(function (column) {\n                            newItem[column.propertyName] = subValue[column.databaseNameWithoutPrefixes];\n                        });\n                        return newItem;\n                    });\n                }\n                else {\n                    embedded.columns.forEach(function (column) {\n                        var value = document[embedded.prefix][column.databaseNameWithoutPrefixes];\n                        if (!value)\n                            return;\n                        if (!entity[embedded.propertyName])\n                            entity[embedded.propertyName] = embedded.create();\n                        entity[embedded.propertyName][column.propertyName] = value;\n                    });\n                }\n                addEmbeddedValuesRecursively(entity[embedded.propertyName], document[embedded.prefix], embedded.embeddeds);\n            });\n        };\n        addEmbeddedValuesRecursively(entity, document, metadata.embeddeds);\n        // if relation is loaded then go into it recursively and transform its values too\n        /*metadata.relations.forEach(relation => {\n            const relationAlias = this.selectionMap.findSelectionByParent(alias.name, relation.propertyName);\n            if (relationAlias) {\n                const joinMapping = this.joinMappings.find(joinMapping => joinMapping.type === \"join\" && joinMapping.alias === relationAlias);\n                const relatedEntities = this.transformRawResultsGroup(rawSqlResults, relationAlias);\n                const isResultArray = relation.isManyToMany || relation.isOneToMany;\n                const result = !isResultArray ? relatedEntities[0] : relatedEntities;\n\n                if (result) {\n                    let propertyName = relation.propertyName;\n                    if (joinMapping) {\n                        propertyName = joinMapping.propertyName;\n                    }\n\n                    if (relation.isLazy) {\n                        entity[\"__\" + propertyName + \"__\"] = result;\n                    } else {\n                        entity[propertyName] = result;\n                    }\n\n                    if (!isResultArray || result.length > 0)\n                        hasData = true;\n                }\n            }\n\n            // if relation has id field then relation id/ids to that field.\n            if (relation.isManyToMany) {\n                if (relationAlias) {\n                    const ids: any[] = [];\n                    const joinMapping = this.joinMappings.find(joinMapping => joinMapping.type === \"relationId\" && joinMapping.alias === relationAlias);\n\n                    if (relation.idField || joinMapping) {\n                        const propertyName = joinMapping ? joinMapping.propertyName : relation.idField as string;\n                        const junctionMetadata = relation.junctionEntityMetadata;\n                        const columnName = relation.isOwning ? junctionMetadata.columns[1].name : junctionMetadata.columns[0].name;\n\n                        rawSqlResults.forEach(results => {\n                            if (relationAlias) {\n                                const resultsKey = relationAlias.name + \"_\" + columnName;\n                                const value = this.driver.prepareHydratedValue(results[resultsKey], relation.referencedColumn);\n                                if (value !== undefined && value !== null)\n                                    ids.push(value);\n                            }\n                        });\n\n                        if (ids && ids.length)\n                            entity[propertyName] = ids;\n                    }\n                }\n            } else if (relation.idField) {\n                const relationName = relation.name;\n                entity[relation.idField] = this.driver.prepareHydratedValue(rawSqlResults[0][alias.name + \"_\" + relationName], relation.referencedColumn);\n            }\n\n            // if relation counter\n            this.relationCountMetas.forEach(joinMeta => {\n                if (joinMeta.alias === relationAlias) {\n                    // console.log(\"relation count was found for relation: \", relation);\n                    // joinMeta.entity = entity;\n                    joinMeta.entities.push({ entity: entity, metadata: metadata });\n                    // console.log(joinMeta);\n                    // console.log(\"---------------------\");\n                }\n            });\n        });*/\n        return hasData ? entity : null;\n    };\n    return DocumentToEntityTransformer;\n}());\nexports.DocumentToEntityTransformer = DocumentToEntityTransformer;\n\n//# sourceMappingURL=DocumentToEntityTransformer.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/query-builder/transformer/DocumentToEntityTransformer.js?");

/***/ }),

/***/ "./node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n */\nvar LoadMapItem = /** @class */ (function () {\n    function LoadMapItem(plainEntity, metadata, parentLoadMapItem, relation) {\n        this.plainEntity = plainEntity;\n        this.metadata = metadata;\n        this.parentLoadMapItem = parentLoadMapItem;\n        this.relation = relation;\n    }\n    Object.defineProperty(LoadMapItem.prototype, \"target\", {\n        get: function () {\n            return this.metadata.target;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LoadMapItem.prototype, \"id\", {\n        get: function () {\n            return this.metadata.getEntityIdMixedMap(this.plainEntity);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return LoadMapItem;\n}());\nvar LoadMap = /** @class */ (function () {\n    function LoadMap() {\n        this.loadMapItems = [];\n    }\n    Object.defineProperty(LoadMap.prototype, \"mainLoadMapItem\", {\n        get: function () {\n            return this.loadMapItems.find(function (item) { return !item.relation && !item.parentLoadMapItem; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LoadMap.prototype.addLoadMap = function (newLoadMap) {\n        var item = this.loadMapItems.find(function (item) { return item.target === newLoadMap.target && item.id === newLoadMap.id; });\n        if (!item)\n            this.loadMapItems.push(newLoadMap);\n    };\n    LoadMap.prototype.fillEntities = function (target, entities) {\n        var _this = this;\n        entities.forEach(function (entity) {\n            var item = _this.loadMapItems.find(function (loadMapItem) {\n                return loadMapItem.target === target && loadMapItem.metadata.compareEntities(entity, loadMapItem.plainEntity);\n            });\n            if (item)\n                item.entity = entity;\n        });\n    };\n    LoadMap.prototype.groupByTargetIds = function () {\n        var groups = [];\n        this.loadMapItems.forEach(function (loadMapItem) {\n            var group = groups.find(function (group) { return group.target === loadMapItem.target; });\n            if (!group) {\n                group = { target: loadMapItem.target, ids: [] };\n                groups.push(group);\n            }\n            group.ids.push(loadMapItem.id);\n        });\n        return groups;\n    };\n    return LoadMap;\n}());\n/**\n * Transforms plain old javascript object\n * Entity is constructed based on its entity metadata.\n */\nvar PlainObjectToDatabaseEntityTransformer = /** @class */ (function () {\n    function PlainObjectToDatabaseEntityTransformer(manager) {\n        this.manager = manager;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    PlainObjectToDatabaseEntityTransformer.prototype.transform = function (plainObject, metadata) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var loadMap, fillLoadMap;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        // if plain object does not have id then nothing to load really\n                        if (!metadata.hasAllPrimaryKeys(plainObject))\n                            return [2 /*return*/, Promise.reject(\"Given object does not have a primary column, cannot transform it to database entity.\")];\n                        loadMap = new LoadMap();\n                        fillLoadMap = function (entity, entityMetadata, parentLoadMapItem, relation) {\n                            var item = new LoadMapItem(entity, entityMetadata, parentLoadMapItem, relation);\n                            loadMap.addLoadMap(item);\n                            entityMetadata\n                                .extractRelationValuesFromEntity(entity, metadata.relations)\n                                .filter(function (value) { return value !== null && value !== undefined; })\n                                .forEach(function (_a) {\n                                var _b = __read(_a, 3), relation = _b[0], value = _b[1], inverseEntityMetadata = _b[2];\n                                return fillLoadMap(value, inverseEntityMetadata, item, relation);\n                            });\n                        };\n                        fillLoadMap(plainObject, metadata);\n                        // load all entities and store them in the load map\n                        return [4 /*yield*/, Promise.all(loadMap.groupByTargetIds().map(function (targetWithIds) {\n                                return _this.manager\n                                    .findByIds(targetWithIds.target, targetWithIds.ids)\n                                    .then(function (entities) { return loadMap.fillEntities(targetWithIds.target, entities); });\n                            }))];\n                    case 1:\n                        // load all entities and store them in the load map\n                        _a.sent();\n                        // go through each item in the load map and set their entity relationship using metadata stored in load map\n                        loadMap.loadMapItems.forEach(function (loadMapItem) {\n                            if (!loadMapItem.relation ||\n                                !loadMapItem.entity ||\n                                !loadMapItem.parentLoadMapItem ||\n                                !loadMapItem.parentLoadMapItem.entity)\n                                return;\n                            if (loadMapItem.relation.isManyToMany || loadMapItem.relation.isOneToMany) {\n                                if (!loadMapItem.parentLoadMapItem.entity[loadMapItem.relation.propertyName])\n                                    loadMapItem.parentLoadMapItem.entity[loadMapItem.relation.propertyName] = [];\n                                loadMapItem.parentLoadMapItem.entity[loadMapItem.relation.propertyName].push(loadMapItem.entity);\n                            }\n                            else {\n                                loadMapItem.parentLoadMapItem.entity[loadMapItem.relation.propertyName] = loadMapItem.entity;\n                            }\n                        });\n                        return [2 /*return*/, loadMap.mainLoadMapItem ? loadMap.mainLoadMapItem.entity : undefined];\n                }\n            });\n        });\n    };\n    return PlainObjectToDatabaseEntityTransformer;\n}());\nexports.PlainObjectToDatabaseEntityTransformer = PlainObjectToDatabaseEntityTransformer;\n\n//# sourceMappingURL=PlainObjectToDatabaseEntityTransformer.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js?");

/***/ }),

/***/ "./node_modules/typeorm/query-builder/transformer/PlainObjectToNewEntityTransformer.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/typeorm/query-builder/transformer/PlainObjectToNewEntityTransformer.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Transforms plain old javascript object\n * Entity is constructed based on its entity metadata.\n */\nvar PlainObjectToNewEntityTransformer = /** @class */ (function () {\n    function PlainObjectToNewEntityTransformer() {\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    PlainObjectToNewEntityTransformer.prototype.transform = function (newEntity, object, metadata, getLazyRelationsPromiseValue) {\n        if (getLazyRelationsPromiseValue === void 0) { getLazyRelationsPromiseValue = false; }\n        // console.log(\"groupAndTransform entity:\", newEntity);\n        // console.log(\"groupAndTransform object:\", object);\n        this.groupAndTransform(newEntity, object, metadata, getLazyRelationsPromiseValue);\n        // console.log(\"result:\", newEntity);\n        return newEntity;\n    };\n    // -------------------------------------------------------------------------\n    // Private Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Since db returns a duplicated rows of the data where accuracies of the same object can be duplicated\n     * we need to group our result and we must have some unique id (primary key in our case)\n     */\n    PlainObjectToNewEntityTransformer.prototype.groupAndTransform = function (entity, object, metadata, getLazyRelationsPromiseValue) {\n        // console.log(\"groupAndTransform entity:\", entity);\n        // console.log(\"groupAndTransform object:\", object);\n        var _this = this;\n        if (getLazyRelationsPromiseValue === void 0) { getLazyRelationsPromiseValue = false; }\n        // copy regular column properties from the given object\n        metadata.nonVirtualColumns.forEach(function (column) {\n            var objectColumnValue = column.getEntityValue(object);\n            if (objectColumnValue !== undefined)\n                column.setEntityValue(entity, objectColumnValue);\n        });\n        // // copy relation properties from the given object\n        if (metadata.relations.length) {\n            metadata.relations.forEach(function (relation) {\n                var entityRelatedValue = relation.getEntityValue(entity);\n                var objectRelatedValue = relation.getEntityValue(object, getLazyRelationsPromiseValue);\n                if (objectRelatedValue === undefined)\n                    return;\n                if (relation.isOneToMany || relation.isManyToMany) {\n                    if (!(objectRelatedValue instanceof Array))\n                        return;\n                    if (!entityRelatedValue) {\n                        entityRelatedValue = [];\n                        relation.setEntityValue(entity, entityRelatedValue);\n                    }\n                    objectRelatedValue.forEach(function (objectRelatedValueItem) {\n                        // check if we have this item from the merging object in the original entity we merge into\n                        var objectRelatedValueEntity = entityRelatedValue.find(function (entityRelatedValueItem) {\n                            return relation.inverseEntityMetadata.compareEntities(objectRelatedValueItem, entityRelatedValueItem);\n                        });\n                        // if such item already exist then merge new data into it, if its not we create a new entity and merge it into the array\n                        if (!objectRelatedValueEntity) {\n                            objectRelatedValueEntity = relation.inverseEntityMetadata.create();\n                            entityRelatedValue.push(objectRelatedValueEntity);\n                        }\n                        _this.groupAndTransform(objectRelatedValueEntity, objectRelatedValueItem, relation.inverseEntityMetadata, getLazyRelationsPromiseValue);\n                    });\n                }\n                else {\n                    // if related object isn't an object (direct relation id for example)\n                    // we just set it to the entity relation, we don't need anything more from it\n                    // however we do it only if original entity does not have this relation set to object\n                    // to prevent full overriding of objects\n                    if (!(objectRelatedValue instanceof Object)) {\n                        if (!(entityRelatedValue instanceof Object))\n                            relation.setEntityValue(entity, objectRelatedValue);\n                        return;\n                    }\n                    if (!entityRelatedValue) {\n                        entityRelatedValue = relation.inverseEntityMetadata.create();\n                        relation.setEntityValue(entity, entityRelatedValue);\n                    }\n                    _this.groupAndTransform(entityRelatedValue, objectRelatedValue, relation.inverseEntityMetadata, getLazyRelationsPromiseValue);\n                }\n            });\n        }\n    };\n    return PlainObjectToNewEntityTransformer;\n}());\nexports.PlainObjectToNewEntityTransformer = PlainObjectToNewEntityTransformer;\n\n//# sourceMappingURL=PlainObjectToNewEntityTransformer.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/query-builder/transformer/PlainObjectToNewEntityTransformer.js?");

/***/ }),

/***/ "./node_modules/typeorm/query-builder/transformer/RawSqlResultsToEntityTransformer.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/typeorm/query-builder/transformer/RawSqlResultsToEntityTransformer.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar OrmUtils_1 = __webpack_require__(/*! ../../util/OrmUtils */ \"./node_modules/typeorm/util/OrmUtils.js\");\nvar EntityMetadata_1 = __webpack_require__(/*! ../../metadata/EntityMetadata */ \"./node_modules/typeorm/metadata/EntityMetadata.js\");\nvar StringUtils_1 = __webpack_require__(/*! ../../util/StringUtils */ \"./node_modules/typeorm/util/StringUtils.js\");\nvar OracleDriver_1 = __webpack_require__(/*! ../../driver/oracle/OracleDriver */ \"./node_modules/typeorm/driver/oracle/OracleDriver.js\");\n/**\n * Transforms raw sql results returned from the database into entity object.\n * Entity is constructed based on its entity metadata.\n */\nvar RawSqlResultsToEntityTransformer = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function RawSqlResultsToEntityTransformer(expressionMap, driver, rawRelationIdResults, rawRelationCountResults, queryRunner) {\n        this.expressionMap = expressionMap;\n        this.driver = driver;\n        this.rawRelationIdResults = rawRelationIdResults;\n        this.rawRelationCountResults = rawRelationCountResults;\n        this.queryRunner = queryRunner;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Since db returns a duplicated rows of the data where accuracies of the same object can be duplicated\n     * we need to group our result and we must have some unique id (primary key in our case)\n     */\n    RawSqlResultsToEntityTransformer.prototype.transform = function (rawResults, alias) {\n        var _this = this;\n        var group = this.group(rawResults, alias);\n        var entities = [];\n        group.forEach(function (results) {\n            var entity = _this.transformRawResultsGroup(results, alias);\n            if (entity !== undefined)\n                entities.push(entity);\n        });\n        return entities;\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Groups given raw results by ids of given alias.\n     */\n    RawSqlResultsToEntityTransformer.prototype.group = function (rawResults, alias) {\n        var _this = this;\n        var map = new Map();\n        var keys = alias.metadata.primaryColumns.map(function (column) { return _this.buildColumnAlias(alias.name, column.databaseName); });\n        rawResults.forEach(function (rawResult) {\n            var id = keys.map(function (key) { return rawResult[key]; }).join(\"_\"); // todo: check partial\n            if (!id)\n                return;\n            var items = map.get(id);\n            if (!items) {\n                map.set(id, [rawResult]);\n            }\n            else {\n                items.push(rawResult);\n            }\n        });\n        return map;\n    };\n    /**\n     * Transforms set of data results into single entity.\n     */\n    RawSqlResultsToEntityTransformer.prototype.transformRawResultsGroup = function (rawResults, alias) {\n        var _this = this;\n        // let hasColumns = false; // , hasEmbeddedColumns = false, hasParentColumns = false, hasParentEmbeddedColumns = false;\n        var metadata = alias.metadata;\n        if (metadata.discriminatorColumn) {\n            var discriminatorValues_1 = rawResults.map(function (result) { return result[_this.buildColumnAlias(alias.name, alias.metadata.discriminatorColumn.databaseName)]; });\n            var discriminatorMetadata = metadata.childEntityMetadatas.find(function (childEntityMetadata) {\n                return !!discriminatorValues_1.find(function (value) { return value === childEntityMetadata.discriminatorValue; });\n            });\n            if (discriminatorMetadata)\n                metadata = discriminatorMetadata;\n        }\n        var entity = this.expressionMap.options.indexOf(\"create-pojo\") !== -1 ? {} : metadata.create(this.queryRunner);\n        // get value from columns selections and put them into newly created entity\n        var hasColumns = this.transformColumns(rawResults, alias, entity, metadata);\n        var hasRelations = this.transformJoins(rawResults, entity, alias, metadata);\n        var hasRelationIds = this.transformRelationIds(rawResults, alias, entity, metadata);\n        var hasRelationCounts = this.transformRelationCounts(rawResults, alias, entity);\n        // if we have at least one selected column then return this entity\n        // since entity must have at least primary columns to be really selected and transformed into entity\n        if (hasColumns)\n            return entity;\n        // if we don't have any selected column we should not return entity,\n        // except for the case when entity only contain a primary column as a relation to another entity\n        // in this case its absolutely possible our entity to not have any columns except a single relation\n        var hasOnlyVirtualPrimaryColumns = metadata.primaryColumns.filter(function (column) { return column.isVirtual === false; }).length === 0; // todo: create metadata.hasOnlyVirtualPrimaryColumns\n        if (hasOnlyVirtualPrimaryColumns && (hasRelations || hasRelationIds || hasRelationCounts))\n            return entity;\n        return undefined;\n    };\n    // get value from columns selections and put them into object\n    RawSqlResultsToEntityTransformer.prototype.transformColumns = function (rawResults, alias, entity, metadata) {\n        var _this = this;\n        var hasData = false;\n        metadata.columns.forEach(function (column) {\n            // if table inheritance is used make sure this column is not child's column\n            if (metadata.childEntityMetadatas.length > 0 && metadata.childEntityMetadatas.map(function (metadata) { return metadata.target; }).indexOf(column.target) !== -1)\n                return;\n            var value = rawResults[0][_this.buildColumnAlias(alias.name, column.databaseName)];\n            if (value === undefined || column.isVirtual)\n                return;\n            // if user does not selected the whole entity or he used partial selection and does not select this particular column\n            // then we don't add this column and its value into the entity\n            if (!_this.expressionMap.selects.find(function (select) { return select.selection === alias.name || select.selection === alias.name + \".\" + column.propertyPath; }))\n                return;\n            column.setEntityValue(entity, _this.driver.prepareHydratedValue(value, column));\n            if (value !== null) // we don't mark it as has data because if we will have all nulls in our object - we don't need such object\n                hasData = true;\n        });\n        return hasData;\n    };\n    /**\n     * Transforms joined entities in the given raw results by a given alias and stores to the given (parent) entity\n     */\n    RawSqlResultsToEntityTransformer.prototype.transformJoins = function (rawResults, entity, alias, metadata) {\n        var _this = this;\n        var hasData = false;\n        // let discriminatorValue: string = \"\";\n        // if (metadata.discriminatorColumn)\n        //     discriminatorValue = rawResults[0][this.buildColumnAlias(alias.name, alias.metadata.discriminatorColumn!.databaseName)];\n        this.expressionMap.joinAttributes.forEach(function (join) {\n            // skip joins without metadata\n            if (!join.metadata)\n                return;\n            // if simple left or inner join was performed without selection then we don't need to do anything\n            if (!join.isSelected)\n                return;\n            // this check need to avoid setting properties than not belong to entity when single table inheritance used. (todo: check if we still need it)\n            // const metadata = metadata.childEntityMetadatas.find(childEntityMetadata => discriminatorValue === childEntityMetadata.discriminatorValue);\n            if (join.relation && !metadata.relations.find(function (relation) { return relation === join.relation; }))\n                return;\n            // some checks to make sure this join is for current alias\n            if (join.mapToProperty) {\n                if (join.mapToPropertyParentAlias !== alias.name)\n                    return;\n            }\n            else {\n                if (!join.relation || join.parentAlias !== alias.name || join.relationPropertyPath !== join.relation.propertyPath)\n                    return;\n            }\n            // transform joined data into entities\n            var result = _this.transform(rawResults, join.alias);\n            result = !join.isMany ? result[0] : result;\n            result = !join.isMany && result === undefined ? null : result; // this is needed to make relations to return null when its joined but nothing was found in the database\n            if (result === undefined) // if nothing was joined then simply return\n                return;\n            // if join was mapped to some property then save result to that property\n            if (join.mapToPropertyPropertyName) {\n                entity[join.mapToPropertyPropertyName] = result; // todo: fix embeds\n            }\n            else { // otherwise set to relation\n                join.relation.setEntityValue(entity, result);\n            }\n            hasData = true;\n        });\n        return hasData;\n    };\n    RawSqlResultsToEntityTransformer.prototype.transformRelationIds = function (rawSqlResults, alias, entity, metadata) {\n        var _this = this;\n        var hasData = false;\n        this.rawRelationIdResults.forEach(function (rawRelationIdResult) {\n            if (rawRelationIdResult.relationIdAttribute.parentAlias !== alias.name)\n                return;\n            var relation = rawRelationIdResult.relationIdAttribute.relation;\n            var valueMap = _this.createValueMapFromJoinColumns(relation, rawRelationIdResult.relationIdAttribute.parentAlias, rawSqlResults);\n            if (valueMap === undefined || valueMap === null)\n                return;\n            var idMaps = rawRelationIdResult.results.map(function (result) {\n                var entityPrimaryIds = _this.extractEntityPrimaryIds(relation, result);\n                if (EntityMetadata_1.EntityMetadata.compareIds(entityPrimaryIds, valueMap) === false)\n                    return;\n                var columns;\n                if (relation.isManyToOne || relation.isOneToOneOwner) {\n                    columns = relation.joinColumns.map(function (joinColumn) { return joinColumn; });\n                }\n                else if (relation.isOneToMany || relation.isOneToOneNotOwner) {\n                    columns = relation.inverseEntityMetadata.primaryColumns.map(function (joinColumn) { return joinColumn; });\n                    // columns = relation.inverseRelation!.joinColumns.map(joinColumn => joinColumn.referencedColumn!); //.inverseEntityMetadata.primaryColumns.map(joinColumn => joinColumn);\n                }\n                else { // ManyToMany\n                    if (relation.isOwning) {\n                        columns = relation.inverseJoinColumns.map(function (joinColumn) { return joinColumn; });\n                    }\n                    else {\n                        columns = relation.inverseRelation.joinColumns.map(function (joinColumn) { return joinColumn; });\n                    }\n                }\n                var idMap = columns.reduce(function (idMap, column) {\n                    var value = result[column.databaseName];\n                    if (relation.isOneToMany || relation.isOneToOneNotOwner) {\n                        if (column.referencedColumn) // if column is a relation\n                            value = column.referencedColumn.createValueMap(value);\n                        return OrmUtils_1.OrmUtils.mergeDeep(idMap, column.createValueMap(value));\n                    }\n                    else {\n                        if (column.referencedColumn.referencedColumn) // if column is a relation\n                            value = column.referencedColumn.referencedColumn.createValueMap(value);\n                        return OrmUtils_1.OrmUtils.mergeDeep(idMap, column.referencedColumn.createValueMap(value));\n                    }\n                }, {});\n                if (columns.length === 1 && rawRelationIdResult.relationIdAttribute.disableMixedMap === false) {\n                    if (relation.isOneToMany || relation.isOneToOneNotOwner) {\n                        return columns[0].getEntityValue(idMap);\n                    }\n                    else {\n                        return columns[0].referencedColumn.getEntityValue(idMap);\n                    }\n                }\n                return idMap;\n            }).filter(function (result) { return result; });\n            var properties = rawRelationIdResult.relationIdAttribute.mapToPropertyPropertyPath.split(\".\");\n            var mapToProperty = function (properties, map, value) {\n                var property = properties.shift();\n                if (property && properties.length === 0) {\n                    map[property] = value;\n                    return map;\n                }\n                else if (property && properties.length > 0) {\n                    mapToProperty(properties, map[property], value);\n                }\n                else {\n                    return map;\n                }\n            };\n            if (relation.isOneToOne || relation.isManyToOne) {\n                if (idMaps[0] !== undefined) {\n                    mapToProperty(properties, entity, idMaps[0]);\n                    hasData = true;\n                }\n            }\n            else {\n                mapToProperty(properties, entity, idMaps);\n                if (idMaps.length > 0) {\n                    hasData = true;\n                }\n            }\n        });\n        return hasData;\n    };\n    RawSqlResultsToEntityTransformer.prototype.transformRelationCounts = function (rawSqlResults, alias, entity) {\n        var _this = this;\n        var hasData = false;\n        this.rawRelationCountResults\n            .filter(function (rawRelationCountResult) { return rawRelationCountResult.relationCountAttribute.parentAlias === alias.name; })\n            .forEach(function (rawRelationCountResult) {\n            var relation = rawRelationCountResult.relationCountAttribute.relation;\n            var referenceColumnName;\n            if (relation.isOneToMany) {\n                referenceColumnName = relation.inverseRelation.joinColumns[0].referencedColumn.databaseName; // todo: fix joinColumns[0]\n            }\n            else {\n                referenceColumnName = relation.isOwning ? relation.joinColumns[0].referencedColumn.databaseName : relation.inverseRelation.joinColumns[0].referencedColumn.databaseName;\n            }\n            var referenceColumnValue = rawSqlResults[0][_this.buildColumnAlias(alias.name, referenceColumnName)]; // we use zero index since its grouped data // todo: selection with alias for entity columns wont work\n            if (referenceColumnValue !== undefined && referenceColumnValue !== null) {\n                entity[rawRelationCountResult.relationCountAttribute.mapToPropertyPropertyName] = 0;\n                rawRelationCountResult.results\n                    .filter(function (result) { return result[\"parentId\"] === referenceColumnValue; })\n                    .forEach(function (result) {\n                    entity[rawRelationCountResult.relationCountAttribute.mapToPropertyPropertyName] = parseInt(result[\"cnt\"]);\n                    hasData = true;\n                });\n            }\n        });\n        return hasData;\n    };\n    /**\n     * Builds column alias from given alias name and column name,\n     * If alias length is more than 29, abbreviates column name.\n     */\n    RawSqlResultsToEntityTransformer.prototype.buildColumnAlias = function (aliasName, columnName) {\n        var columnAliasName = aliasName + \"_\" + columnName;\n        if (columnAliasName.length > 29 && this.driver instanceof OracleDriver_1.OracleDriver)\n            return aliasName + \"_\" + StringUtils_1.abbreviate(columnName, 2);\n        return columnAliasName;\n    };\n    RawSqlResultsToEntityTransformer.prototype.createValueMapFromJoinColumns = function (relation, parentAlias, rawSqlResults) {\n        var _this = this;\n        var columns;\n        if (relation.isManyToOne || relation.isOneToOneOwner) {\n            columns = relation.entityMetadata.primaryColumns.map(function (joinColumn) { return joinColumn; });\n        }\n        else if (relation.isOneToMany || relation.isOneToOneNotOwner) {\n            columns = relation.inverseRelation.joinColumns.map(function (joinColumn) { return joinColumn; });\n        }\n        else {\n            if (relation.isOwning) {\n                columns = relation.joinColumns.map(function (joinColumn) { return joinColumn; });\n            }\n            else {\n                columns = relation.inverseRelation.inverseJoinColumns.map(function (joinColumn) { return joinColumn; });\n            }\n        }\n        return columns.reduce(function (valueMap, column) {\n            rawSqlResults.forEach(function (rawSqlResult) {\n                if (relation.isManyToOne || relation.isOneToOneOwner) {\n                    valueMap[column.databaseName] = rawSqlResult[_this.buildColumnAlias(parentAlias, column.databaseName)];\n                }\n                else {\n                    valueMap[column.databaseName] = rawSqlResult[_this.buildColumnAlias(parentAlias, column.referencedColumn.databaseName)];\n                }\n            });\n            return valueMap;\n        }, {});\n    };\n    RawSqlResultsToEntityTransformer.prototype.extractEntityPrimaryIds = function (relation, relationIdRawResult) {\n        var columns;\n        if (relation.isManyToOne || relation.isOneToOneOwner) {\n            columns = relation.entityMetadata.primaryColumns.map(function (joinColumn) { return joinColumn; });\n        }\n        else if (relation.isOneToMany || relation.isOneToOneNotOwner) {\n            columns = relation.inverseRelation.joinColumns.map(function (joinColumn) { return joinColumn; });\n        }\n        else {\n            if (relation.isOwning) {\n                columns = relation.joinColumns.map(function (joinColumn) { return joinColumn; });\n            }\n            else {\n                columns = relation.inverseRelation.inverseJoinColumns.map(function (joinColumn) { return joinColumn; });\n            }\n        }\n        return columns.reduce(function (data, column) {\n            data[column.databaseName] = relationIdRawResult[column.databaseName];\n            return data;\n        }, {});\n    };\n    return RawSqlResultsToEntityTransformer;\n}());\nexports.RawSqlResultsToEntityTransformer = RawSqlResultsToEntityTransformer;\n\n//# sourceMappingURL=RawSqlResultsToEntityTransformer.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/query-builder/transformer/RawSqlResultsToEntityTransformer.js?");

/***/ }),

/***/ "./node_modules/typeorm/query-runner/BaseQueryRunner.js":
/*!**************************************************************!*\
  !*** ./node_modules/typeorm/query-runner/BaseQueryRunner.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar SqlInMemory_1 = __webpack_require__(/*! ../driver/SqlInMemory */ \"./node_modules/typeorm/driver/SqlInMemory.js\");\nvar PromiseUtils_1 = __webpack_require__(/*! ../util/PromiseUtils */ \"./node_modules/typeorm/util/PromiseUtils.js\");\nvar BaseQueryRunner = /** @class */ (function () {\n    function BaseQueryRunner() {\n        // -------------------------------------------------------------------------\n        // Public Properties\n        // -------------------------------------------------------------------------\n        /**\n         * Indicates if connection for this query runner is released.\n         * Once its released, query runner cannot run queries anymore.\n         */\n        this.isReleased = false;\n        /**\n         * Indicates if transaction is in progress.\n         */\n        this.isTransactionActive = false;\n        /**\n         * Stores temporarily user data.\n         * Useful for sharing data with subscribers.\n         */\n        this.data = {};\n        /**\n         * All synchronized tables in the database.\n         */\n        this.loadedTables = [];\n        /**\n         * Indicates if special query runner mode in which sql queries won't be executed is enabled.\n         */\n        this.sqlMemoryMode = false;\n        /**\n         * Sql-s stored if \"sql in memory\" mode is enabled.\n         */\n        this.sqlInMemory = new SqlInMemory_1.SqlInMemory();\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Loads given table's data from the database.\n     */\n    BaseQueryRunner.prototype.getTable = function (tablePath) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = this;\n                        return [4 /*yield*/, this.loadTables([tablePath])];\n                    case 1:\n                        _a.loadedTables = _b.sent();\n                        return [2 /*return*/, this.loadedTables.length > 0 ? this.loadedTables[0] : undefined];\n                }\n            });\n        });\n    };\n    /**\n     * Loads all tables (with given names) from the database.\n     */\n    BaseQueryRunner.prototype.getTables = function (tableNames) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = this;\n                        return [4 /*yield*/, this.loadTables(tableNames)];\n                    case 1:\n                        _a.loadedTables = _b.sent();\n                        return [2 /*return*/, this.loadedTables];\n                }\n            });\n        });\n    };\n    /**\n     * Enables special query runner mode in which sql queries won't be executed,\n     * instead they will be memorized into a special variable inside query runner.\n     * You can get memorized sql using getMemorySql() method.\n     */\n    BaseQueryRunner.prototype.enableSqlMemory = function () {\n        this.sqlInMemory = new SqlInMemory_1.SqlInMemory();\n        this.sqlMemoryMode = true;\n    };\n    /**\n     * Disables special query runner mode in which sql queries won't be executed\n     * started by calling enableSqlMemory() method.\n     *\n     * Previously memorized sql will be flushed.\n     */\n    BaseQueryRunner.prototype.disableSqlMemory = function () {\n        this.sqlInMemory = new SqlInMemory_1.SqlInMemory();\n        this.sqlMemoryMode = false;\n    };\n    /**\n     * Flushes all memorized sqls.\n     */\n    BaseQueryRunner.prototype.clearSqlMemory = function () {\n        this.sqlInMemory = new SqlInMemory_1.SqlInMemory();\n    };\n    /**\n     * Gets sql stored in the memory. Parameters in the sql are already replaced.\n     */\n    BaseQueryRunner.prototype.getMemorySql = function () {\n        return this.sqlInMemory;\n    };\n    /**\n     * Executes up sql queries.\n     */\n    BaseQueryRunner.prototype.executeMemoryUpSql = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, PromiseUtils_1.PromiseUtils.runInSequence(this.sqlInMemory.upQueries, function (downQuery) { return _this.query(downQuery); })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Executes down sql queries.\n     */\n    BaseQueryRunner.prototype.executeMemoryDownSql = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, PromiseUtils_1.PromiseUtils.runInSequence(this.sqlInMemory.downQueries.reverse(), function (downQuery) { return _this.query(downQuery); })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Gets table from previously loaded tables, otherwise loads it from database.\n     */\n    BaseQueryRunner.prototype.getCachedTable = function (tableName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, foundTables;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        table = this.loadedTables.find(function (table) { return table.name === tableName; });\n                        if (table)\n                            return [2 /*return*/, table];\n                        return [4 /*yield*/, this.loadTables([tableName])];\n                    case 1:\n                        foundTables = _a.sent();\n                        if (foundTables.length > 0) {\n                            this.loadedTables.push(foundTables[0]);\n                            return [2 /*return*/, foundTables[0]];\n                        }\n                        else {\n                            throw new Error(\"Table \\\"\" + tableName + \"\\\" does not exist.\");\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Replaces loaded table with given changed table.\n     */\n    BaseQueryRunner.prototype.replaceCachedTable = function (table, changedTable) {\n        var foundTable = this.loadedTables.find(function (loadedTable) { return loadedTable.name === table.name; });\n        if (foundTable) {\n            foundTable.name = changedTable.name;\n            foundTable.columns = changedTable.columns;\n            foundTable.indices = changedTable.indices;\n            foundTable.foreignKeys = changedTable.foreignKeys;\n            foundTable.uniques = changedTable.uniques;\n            foundTable.checks = changedTable.checks;\n            foundTable.justCreated = changedTable.justCreated;\n            foundTable.engine = changedTable.engine;\n        }\n    };\n    /**\n     * Checks if at least one of column properties was changed.\n     * Does not checks column type, length and autoincrement, because these properties changes separately.\n     */\n    BaseQueryRunner.prototype.isColumnChanged = function (oldColumn, newColumn, checkDefault, checkComment) {\n        // this logs need to debug issues in column change detection. Do not delete it!\n        // console.log(\"charset ---------------\");\n        // console.log(oldColumn.charset !== newColumn.charset);\n        // console.log(oldColumn.charset, newColumn.charset);\n        // console.log(\"collation ---------------\");\n        // console.log(oldColumn.collation !== newColumn.collation);\n        // console.log(oldColumn.collation, newColumn.collation);\n        // console.log(\"precision ---------------\");\n        // console.log(oldColumn.precision !== newColumn.precision);\n        // console.log(oldColumn.precision, newColumn.precision);\n        // console.log(\"scale ---------------\");\n        // console.log(oldColumn.scale !== newColumn.scale);\n        // console.log(oldColumn.scale, newColumn.scale);\n        // console.log(\"default ---------------\");\n        // console.log((checkDefault && oldColumn.default !== newColumn.default));\n        // console.log(oldColumn.default, newColumn.default);\n        // console.log(\"isNullable ---------------\");\n        // console.log(oldColumn.isNullable !== newColumn.isNullable);\n        // console.log(oldColumn.isNullable, newColumn.isNullable);\n        // console.log(\"comment ---------------\");\n        // console.log((checkComment && oldColumn.comment !== newColumn.comment));\n        // console.log(oldColumn.comment, newColumn.comment);\n        // console.log(\"enum ---------------\");\n        // console.log(oldColumn.enum !== newColumn.enum);\n        // console.log(oldColumn.enum, newColumn.enum);\n        return oldColumn.charset !== newColumn.charset\n            || oldColumn.collation !== newColumn.collation\n            || oldColumn.precision !== newColumn.precision\n            || oldColumn.scale !== newColumn.scale\n            || oldColumn.width !== newColumn.width // MySQL only\n            || oldColumn.zerofill !== newColumn.zerofill // MySQL only\n            || oldColumn.unsigned !== newColumn.unsigned // MySQL only\n            || oldColumn.asExpression !== newColumn.asExpression // MySQL only\n            || (checkDefault && oldColumn.default !== newColumn.default)\n            || oldColumn.onUpdate !== newColumn.onUpdate // MySQL only\n            || oldColumn.isNullable !== newColumn.isNullable\n            || (checkComment && oldColumn.comment !== newColumn.comment)\n            || oldColumn.enum !== newColumn.enum;\n    };\n    /**\n     * Checks if column length is by default.\n     */\n    BaseQueryRunner.prototype.isDefaultColumnLength = function (table, column, length) {\n        // if table have metadata, we check if length is specified in column metadata\n        if (this.connection.hasMetadata(table.name)) {\n            var metadata = this.connection.getMetadata(table.name);\n            var columnMetadata = metadata.findColumnWithDatabaseName(column.name);\n            if (columnMetadata && columnMetadata.length)\n                return false;\n        }\n        if (this.connection.driver.dataTypeDefaults\n            && this.connection.driver.dataTypeDefaults[column.type]\n            && this.connection.driver.dataTypeDefaults[column.type].length) {\n            return this.connection.driver.dataTypeDefaults[column.type].length.toString() === length.toString();\n        }\n        return false;\n    };\n    /**\n     * Checks if column display width is by default. Used only for MySQL.\n     */\n    BaseQueryRunner.prototype.isDefaultColumnWidth = function (table, column, width) {\n        // if table have metadata, we check if length is specified in column metadata\n        if (this.connection.hasMetadata(table.name)) {\n            var metadata = this.connection.getMetadata(table.name);\n            var columnMetadata = metadata.findColumnWithDatabaseName(column.name);\n            if (columnMetadata && columnMetadata.width)\n                return false;\n        }\n        if (this.connection.driver.dataTypeDefaults\n            && this.connection.driver.dataTypeDefaults[column.type]\n            && this.connection.driver.dataTypeDefaults[column.type].width) {\n            return this.connection.driver.dataTypeDefaults[column.type].width === width;\n        }\n        return false;\n    };\n    /**\n     * Checks if column precision is by default.\n     */\n    BaseQueryRunner.prototype.isDefaultColumnPrecision = function (table, column, precision) {\n        // if table have metadata, we check if length is specified in column metadata\n        if (this.connection.hasMetadata(table.name)) {\n            var metadata = this.connection.getMetadata(table.name);\n            var columnMetadata = metadata.findColumnWithDatabaseName(column.name);\n            if (columnMetadata && columnMetadata.precision !== null && columnMetadata.precision !== undefined)\n                return false;\n        }\n        if (this.connection.driver.dataTypeDefaults\n            && this.connection.driver.dataTypeDefaults[column.type]\n            && this.connection.driver.dataTypeDefaults[column.type].precision !== null\n            && this.connection.driver.dataTypeDefaults[column.type].precision !== undefined)\n            return this.connection.driver.dataTypeDefaults[column.type].precision === precision;\n        return false;\n    };\n    /**\n     * Checks if column scale is by default.\n     */\n    BaseQueryRunner.prototype.isDefaultColumnScale = function (table, column, scale) {\n        // if table have metadata, we check if length is specified in column metadata\n        if (this.connection.hasMetadata(table.name)) {\n            var metadata = this.connection.getMetadata(table.name);\n            var columnMetadata = metadata.findColumnWithDatabaseName(column.name);\n            if (columnMetadata && columnMetadata.scale !== null && columnMetadata.scale !== undefined)\n                return false;\n        }\n        if (this.connection.driver.dataTypeDefaults\n            && this.connection.driver.dataTypeDefaults[column.type]\n            && this.connection.driver.dataTypeDefaults[column.type].scale !== null\n            && this.connection.driver.dataTypeDefaults[column.type].scale !== undefined)\n            return this.connection.driver.dataTypeDefaults[column.type].scale === scale;\n        return false;\n    };\n    /**\n     * Executes sql used special for schema build.\n     */\n    BaseQueryRunner.prototype.executeQueries = function (upQueries, downQueries) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var _a, _b;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        if (typeof upQueries === \"string\")\n                            upQueries = [upQueries];\n                        if (typeof downQueries === \"string\")\n                            downQueries = [downQueries];\n                        (_a = this.sqlInMemory.upQueries).push.apply(_a, __spread(upQueries));\n                        (_b = this.sqlInMemory.downQueries).push.apply(_b, __spread(downQueries));\n                        // if sql-in-memory mode is enabled then simply store sql in memory and return\n                        if (this.sqlMemoryMode === true)\n                            return [2 /*return*/, Promise.resolve()];\n                        return [4 /*yield*/, PromiseUtils_1.PromiseUtils.runInSequence(upQueries, function (upQuery) { return _this.query(upQuery); })];\n                    case 1:\n                        _c.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return BaseQueryRunner;\n}());\nexports.BaseQueryRunner = BaseQueryRunner;\n\n//# sourceMappingURL=BaseQueryRunner.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/query-runner/BaseQueryRunner.js?");

/***/ }),

/***/ "./node_modules/typeorm/repository/AbstractRepository.js":
/*!***************************************************************!*\
  !*** ./node_modules/typeorm/repository/AbstractRepository.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar CustomRepositoryDoesNotHaveEntityError_1 = __webpack_require__(/*! ../error/CustomRepositoryDoesNotHaveEntityError */ \"./node_modules/typeorm/error/CustomRepositoryDoesNotHaveEntityError.js\");\nvar index_1 = __webpack_require__(/*! ../index */ \"./node_modules/typeorm/index.js\");\nvar CustomRepositoryNotFoundError_1 = __webpack_require__(/*! ../error/CustomRepositoryNotFoundError */ \"./node_modules/typeorm/error/CustomRepositoryNotFoundError.js\");\n/**\n * Provides abstract class for custom repositories that do not inherit from original orm Repository.\n * Contains all most-necessary methods to simplify code in the custom repository.\n * All methods are protected thus not exposed and it allows to create encapsulated custom repository.\n *\n * @experimental\n */\nvar AbstractRepository = /** @class */ (function () {\n    function AbstractRepository() {\n    }\n    Object.defineProperty(AbstractRepository.prototype, \"repository\", {\n        // -------------------------------------------------------------------------\n        // Protected Accessors\n        // -------------------------------------------------------------------------\n        /**\n         * Gets the original ORM repository for the entity that is managed by this repository.\n         * If current repository does not manage any entity, then exception will be thrown.\n         */\n        get: function () {\n            var target = this.getCustomRepositoryTarget(this);\n            if (!target)\n                throw new CustomRepositoryDoesNotHaveEntityError_1.CustomRepositoryDoesNotHaveEntityError(this.constructor);\n            return this.manager.getRepository(target);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractRepository.prototype, \"treeRepository\", {\n        /**\n         * Gets the original ORM tree repository for the entity that is managed by this repository.\n         * If current repository does not manage any entity, then exception will be thrown.\n         */\n        get: function () {\n            var target = this.getCustomRepositoryTarget(this);\n            if (!target)\n                throw new CustomRepositoryDoesNotHaveEntityError_1.CustomRepositoryDoesNotHaveEntityError(this.constructor);\n            return this.manager.getTreeRepository(target);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates a new query builder for the repository's entity that can be used to build a sql query.\n     * If current repository does not manage any entity, then exception will be thrown.\n     */\n    AbstractRepository.prototype.createQueryBuilder = function (alias) {\n        var target = this.getCustomRepositoryTarget(this.constructor);\n        if (!target)\n            throw new CustomRepositoryDoesNotHaveEntityError_1.CustomRepositoryDoesNotHaveEntityError(this.constructor);\n        return this.manager.getRepository(target).createQueryBuilder(alias);\n    };\n    /**\n     * Creates a new query builder for the given entity that can be used to build a sql query.\n     */\n    AbstractRepository.prototype.createQueryBuilderFor = function (entity, alias) {\n        return this.getRepositoryFor(entity).createQueryBuilder(alias);\n    };\n    /**\n     * Gets the original ORM repository for the given entity class.\n     */\n    AbstractRepository.prototype.getRepositoryFor = function (entity) {\n        return this.manager.getRepository(entity);\n    };\n    /**\n     * Gets the original ORM tree repository for the given entity class.\n     */\n    AbstractRepository.prototype.getTreeRepositoryFor = function (entity) {\n        return this.manager.getTreeRepository(entity);\n    };\n    // -------------------------------------------------------------------------\n    // Private Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Gets custom repository's managed entity.\n     * If given custom repository does not manage any entity then undefined will be returned.\n     */\n    AbstractRepository.prototype.getCustomRepositoryTarget = function (customRepository) {\n        var entityRepositoryMetadataArgs = index_1.getMetadataArgsStorage().entityRepositories.find(function (repository) {\n            return repository.target === (customRepository instanceof Function ? customRepository : customRepository.constructor);\n        });\n        if (!entityRepositoryMetadataArgs)\n            throw new CustomRepositoryNotFoundError_1.CustomRepositoryNotFoundError(customRepository);\n        return entityRepositoryMetadataArgs.entity;\n    };\n    return AbstractRepository;\n}());\nexports.AbstractRepository = AbstractRepository;\n\n//# sourceMappingURL=AbstractRepository.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/repository/AbstractRepository.js?");

/***/ }),

/***/ "./node_modules/typeorm/repository/BaseEntity.js":
/*!*******************************************************!*\
  !*** ./node_modules/typeorm/repository/BaseEntity.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar index_1 = __webpack_require__(/*! ../index */ \"./node_modules/typeorm/index.js\");\n/**\n * Base abstract entity for all entities, used in ActiveRecord patterns.\n */\nvar BaseEntity = /** @class */ (function () {\n    function BaseEntity() {\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Checks if entity has an id.\n     * If entity composite compose ids, it will check them all.\n     */\n    BaseEntity.prototype.hasId = function () {\n        return this.constructor.getRepository().hasId(this);\n    };\n    /**\n     * Saves current entity in the database.\n     * If entity does not exist in the database then inserts, otherwise updates.\n     */\n    BaseEntity.prototype.save = function () {\n        return this.constructor.getRepository().save(this);\n    };\n    /**\n     * Removes current entity from the database.\n     */\n    BaseEntity.prototype.remove = function () {\n        return this.constructor.getRepository().remove(this);\n    };\n    /**\n     * Reloads entity data from the database.\n     */\n    BaseEntity.prototype.reload = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var base, newestEntity;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        base = this.constructor;\n                        return [4 /*yield*/, base.getRepository().findOneOrFail(base.getId(this))];\n                    case 1:\n                        newestEntity = _a.sent();\n                        Object.assign(this, newestEntity);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    // -------------------------------------------------------------------------\n    // Public Static Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Sets connection to be used by entity.\n     */\n    BaseEntity.useConnection = function (connection) {\n        this.usedConnection = connection;\n    };\n    /**\n     * Gets current entity's Repository.\n     */\n    BaseEntity.getRepository = function () {\n        var connection = this.usedConnection || index_1.getConnection();\n        return connection.getRepository(this);\n    };\n    Object.defineProperty(BaseEntity, \"target\", {\n        /**\n         * Returns object that is managed by this repository.\n         * If this repository manages entity from schema,\n         * then it returns a name of that schema instead.\n         */\n        get: function () {\n            return this.getRepository().target;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Checks entity has an id.\n     * If entity composite compose ids, it will check them all.\n     */\n    BaseEntity.hasId = function (entity) {\n        return this.getRepository().hasId(entity);\n    };\n    /**\n     * Gets entity mixed id.\n     */\n    BaseEntity.getId = function (entity) {\n        return this.getRepository().getId(entity);\n    };\n    /**\n     * Creates a new query builder that can be used to build a sql query.\n     */\n    BaseEntity.createQueryBuilder = function (alias) {\n        return this.getRepository().createQueryBuilder(alias);\n    };\n    /**\n      * Creates a new entity instance and copies all entity properties from this object into a new entity.\n      * Note that it copies only properties that present in entity schema.\n      */\n    BaseEntity.create = function (entityOrEntities) {\n        return this.getRepository().create(entityOrEntities);\n    };\n    /**\n     * Merges multiple entities (or entity-like objects) into a given entity.\n     */\n    BaseEntity.merge = function (mergeIntoEntity) {\n        var entityLikes = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            entityLikes[_i - 1] = arguments[_i];\n        }\n        return (_a = this.getRepository()).merge.apply(_a, __spread([mergeIntoEntity], entityLikes));\n        var _a;\n    };\n    /**\n     * Creates a new entity from the given plan javascript object. If entity already exist in the database, then\n     * it loads it (and everything related to it), replaces all values with the new ones from the given object\n     * and returns this new entity. This new entity is actually a loaded from the db entity with all properties\n     * replaced from the new object.\n     *\n     * Note that given entity-like object must have an entity id / primary key to find entity by.\n     * Returns undefined if entity with given id was not found.\n     */\n    BaseEntity.preload = function (entityLike) {\n        return this.getRepository().preload(entityLike);\n    };\n    /**\n     * Saves one or many given entities.\n     */\n    BaseEntity.save = function (entityOrEntities, options) {\n        return this.getRepository().save(entityOrEntities, options);\n    };\n    /**\n     * Removes one or many given entities.\n     */\n    BaseEntity.remove = function (entityOrEntities, options) {\n        return this.getRepository().remove(entityOrEntities, options);\n    };\n    /**\n     * Inserts a given entity into the database.\n     * Unlike save method executes a primitive operation without cascades, relations and other operations included.\n     * Executes fast and efficient INSERT query.\n     * Does not check if entity exist in the database, so query will fail if duplicate entity is being inserted.\n     */\n    BaseEntity.insert = function (entity, options) {\n        return this.getRepository().insert(entity, options);\n    };\n    /**\n     * Updates entity partially. Entity can be found by a given conditions.\n     * Unlike save method executes a primitive operation without cascades, relations and other operations included.\n     * Executes fast and efficient UPDATE query.\n     * Does not check if entity exist in the database.\n     */\n    BaseEntity.update = function (criteria, partialEntity, options) {\n        return this.getRepository().update(criteria, partialEntity, options);\n    };\n    /**\n     * Deletes entities by a given criteria.\n     * Unlike save method executes a primitive operation without cascades, relations and other operations included.\n     * Executes fast and efficient DELETE query.\n     * Does not check if entity exist in the database.\n     */\n    BaseEntity.delete = function (criteria, options) {\n        return this.getRepository().delete(criteria, options);\n    };\n    /**\n     * Counts entities that match given find options or conditions.\n     */\n    BaseEntity.count = function (optionsOrConditions) {\n        return this.getRepository().count(optionsOrConditions);\n    };\n    /**\n     * Finds entities that match given find options or conditions.\n     */\n    BaseEntity.find = function (optionsOrConditions) {\n        return this.getRepository().find(optionsOrConditions);\n    };\n    /**\n     * Finds entities that match given find options or conditions.\n     * Also counts all entities that match given conditions,\n     * but ignores pagination settings (from and take options).\n     */\n    BaseEntity.findAndCount = function (optionsOrConditions) {\n        return this.getRepository().findAndCount(optionsOrConditions);\n    };\n    /**\n     * Finds entities by ids.\n     * Optionally find options can be applied.\n     */\n    BaseEntity.findByIds = function (ids, optionsOrConditions) {\n        return this.getRepository().findByIds(ids, optionsOrConditions);\n    };\n    /**\n     * Finds first entity that matches given conditions.\n     */\n    BaseEntity.findOne = function (optionsOrConditions, maybeOptions) {\n        return this.getRepository().findOne(optionsOrConditions, maybeOptions);\n    };\n    /**\n     * Finds first entity that matches given conditions.\n     */\n    BaseEntity.findOneOrFail = function (optionsOrConditions, maybeOptions) {\n        return this.getRepository().findOneOrFail(optionsOrConditions, maybeOptions);\n    };\n    /**\n     * Executes a raw SQL query and returns a raw database results.\n     * Raw query execution is supported only by relational databases (MongoDB is not supported).\n     */\n    BaseEntity.query = function (query, parameters) {\n        return this.getRepository().query(query, parameters);\n    };\n    /**\n     * Clears all the data from the given table/collection (truncates/drops it).\n     */\n    BaseEntity.clear = function () {\n        return this.getRepository().clear();\n    };\n    return BaseEntity;\n}());\nexports.BaseEntity = BaseEntity;\n\n//# sourceMappingURL=BaseEntity.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/repository/BaseEntity.js?");

/***/ }),

/***/ "./node_modules/typeorm/repository/MongoRepository.js":
/*!************************************************************!*\
  !*** ./node_modules/typeorm/repository/MongoRepository.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Repository_1 = __webpack_require__(/*! ./Repository */ \"./node_modules/typeorm/repository/Repository.js\");\n/**\n * Repository used to manage mongodb documents of a single entity type.\n */\nvar MongoRepository = /** @class */ (function (_super) {\n    __extends(MongoRepository, _super);\n    function MongoRepository() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    // -------------------------------------------------------------------------\n    // Overridden Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Raw SQL query execution is not supported by MongoDB.\n     * Calling this method will return an error.\n     */\n    MongoRepository.prototype.query = function (query, parameters) {\n        throw new Error(\"Queries aren't supported by MongoDB.\");\n    };\n    /**\n     * Using Query Builder with MongoDB is not supported yet.\n     * Calling this method will return an error.\n     */\n    MongoRepository.prototype.createQueryBuilder = function (alias, queryRunner) {\n        throw new Error(\"Query Builder is not supported by MongoDB.\");\n    };\n    /**\n     * Finds entities that match given find options or conditions.\n     */\n    MongoRepository.prototype.find = function (optionsOrConditions) {\n        return this.manager.find(this.metadata.target, optionsOrConditions);\n    };\n    /**\n     * Finds entities that match given find options or conditions.\n     * Also counts all entities that match given conditions,\n     * but ignores pagination settings (from and take options).\n     */\n    MongoRepository.prototype.findAndCount = function (optionsOrConditions) {\n        return this.manager.findAndCount(this.metadata.target, optionsOrConditions);\n    };\n    /**\n     * Finds entities by ids.\n     * Optionally find options can be applied.\n     */\n    MongoRepository.prototype.findByIds = function (ids, optionsOrConditions) {\n        return this.manager.findByIds(this.metadata.target, ids, optionsOrConditions);\n    };\n    /**\n     * Finds first entity that matches given conditions and/or find options.\n     */\n    MongoRepository.prototype.findOne = function (optionsOrConditions, maybeOptions) {\n        return this.manager.findOne(this.metadata.target, optionsOrConditions, maybeOptions);\n    };\n    /**\n     * Creates a cursor for a query that can be used to iterate over results from MongoDB.\n     */\n    MongoRepository.prototype.createCursor = function (query) {\n        return this.manager.createCursor(this.metadata.target, query);\n    };\n    /**\n     * Creates a cursor for a query that can be used to iterate over results from MongoDB.\n     * This returns modified version of cursor that transforms each result into Entity model.\n     */\n    MongoRepository.prototype.createEntityCursor = function (query) {\n        return this.manager.createEntityCursor(this.metadata.target, query);\n    };\n    /**\n     * Execute an aggregation framework pipeline against the collection.\n     */\n    MongoRepository.prototype.aggregate = function (pipeline, options) {\n        return this.manager.aggregate(this.metadata.target, pipeline, options);\n    };\n    /**\n     * Execute an aggregation framework pipeline against the collection.\n     * This returns modified version of cursor that transforms each result into Entity model.\n     */\n    MongoRepository.prototype.aggregateEntity = function (pipeline, options) {\n        return this.manager.aggregateEntity(this.metadata.target, pipeline, options);\n    };\n    /**\n     * Perform a bulkWrite operation without a fluent API.\n     */\n    MongoRepository.prototype.bulkWrite = function (operations, options) {\n        return this.manager.bulkWrite(this.metadata.target, operations, options);\n    };\n    /**\n     * Count number of matching documents in the db to a query.\n     */\n    MongoRepository.prototype.count = function (query, options) {\n        return this.manager.count(this.metadata.target, query || {}, options);\n    };\n    /**\n     * Creates an index on the db and collection.\n     */\n    MongoRepository.prototype.createCollectionIndex = function (fieldOrSpec, options) {\n        return this.manager.createCollectionIndex(this.metadata.target, fieldOrSpec, options);\n    };\n    /**\n     * Creates multiple indexes in the collection, this method is only supported for MongoDB 2.6 or higher.\n     * Earlier version of MongoDB will throw a command not supported error.\n     * Index specifications are defined at http://docs.mongodb.org/manual/reference/command/createIndexes/.\n     */\n    MongoRepository.prototype.createCollectionIndexes = function (indexSpecs) {\n        return this.manager.createCollectionIndexes(this.metadata.target, indexSpecs);\n    };\n    /**\n     * Delete multiple documents on MongoDB.\n     */\n    MongoRepository.prototype.deleteMany = function (query, options) {\n        return this.manager.deleteMany(this.metadata.tableName, query, options);\n    };\n    /**\n     * Delete a document on MongoDB.\n     */\n    MongoRepository.prototype.deleteOne = function (query, options) {\n        return this.manager.deleteOne(this.metadata.tableName, query, options);\n    };\n    /**\n     * The distinct command returns returns a list of distinct values for the given key across a collection.\n     */\n    MongoRepository.prototype.distinct = function (key, query, options) {\n        return this.manager.distinct(this.metadata.tableName, key, query, options);\n    };\n    /**\n     * Drops an index from this collection.\n     */\n    MongoRepository.prototype.dropCollectionIndex = function (indexName, options) {\n        return this.manager.dropCollectionIndex(this.metadata.tableName, indexName, options);\n    };\n    /**\n     * Drops all indexes from the collection.\n     */\n    MongoRepository.prototype.dropCollectionIndexes = function () {\n        return this.manager.dropCollectionIndexes(this.metadata.tableName);\n    };\n    /**\n     * Find a document and delete it in one atomic operation, requires a write lock for the duration of the operation.\n     */\n    MongoRepository.prototype.findOneAndDelete = function (query, options) {\n        return this.manager.findOneAndDelete(this.metadata.tableName, query, options);\n    };\n    /**\n     * Find a document and replace it in one atomic operation, requires a write lock for the duration of the operation.\n     */\n    MongoRepository.prototype.findOneAndReplace = function (query, replacement, options) {\n        return this.manager.findOneAndReplace(this.metadata.tableName, query, replacement, options);\n    };\n    /**\n     * Find a document and update it in one atomic operation, requires a write lock for the duration of the operation.\n     */\n    MongoRepository.prototype.findOneAndUpdate = function (query, update, options) {\n        return this.manager.findOneAndUpdate(this.metadata.tableName, query, update, options);\n    };\n    /**\n     * Execute a geo search using a geo haystack index on a collection.\n     */\n    MongoRepository.prototype.geoHaystackSearch = function (x, y, options) {\n        return this.manager.geoHaystackSearch(this.metadata.tableName, x, y, options);\n    };\n    /**\n     * Execute the geoNear command to search for items in the collection.\n     */\n    MongoRepository.prototype.geoNear = function (x, y, options) {\n        return this.manager.geoNear(this.metadata.tableName, x, y, options);\n    };\n    /**\n     * Run a group command across a collection.\n     */\n    MongoRepository.prototype.group = function (keys, condition, initial, reduce, finalize, command, options) {\n        return this.manager.group(this.metadata.tableName, keys, condition, initial, reduce, finalize, command, options);\n    };\n    /**\n     * Retrieve all the indexes on the collection.\n     */\n    MongoRepository.prototype.collectionIndexes = function () {\n        return this.manager.collectionIndexes(this.metadata.tableName);\n    };\n    /**\n     * Retrieve all the indexes on the collection.\n     */\n    MongoRepository.prototype.collectionIndexExists = function (indexes) {\n        return this.manager.collectionIndexExists(this.metadata.tableName, indexes);\n    };\n    /**\n     * Retrieves this collections index info.\n     */\n    MongoRepository.prototype.collectionIndexInformation = function (options) {\n        return this.manager.collectionIndexInformation(this.metadata.tableName, options);\n    };\n    /**\n     * Initiate an In order bulk write operation, operations will be serially executed in the order they are added, creating a new operation for each switch in types.\n     */\n    MongoRepository.prototype.initializeOrderedBulkOp = function (options) {\n        return this.manager.initializeOrderedBulkOp(this.metadata.tableName, options);\n    };\n    /**\n     * Initiate a Out of order batch write operation. All operations will be buffered into insert/update/remove commands executed out of order.\n     */\n    MongoRepository.prototype.initializeUnorderedBulkOp = function (options) {\n        return this.manager.initializeUnorderedBulkOp(this.metadata.tableName, options);\n    };\n    /**\n     * Inserts an array of documents into MongoDB.\n     */\n    MongoRepository.prototype.insertMany = function (docs, options) {\n        return this.manager.insertMany(this.metadata.tableName, docs, options);\n    };\n    /**\n     * Inserts a single document into MongoDB.\n     */\n    MongoRepository.prototype.insertOne = function (doc, options) {\n        return this.manager.insertOne(this.metadata.tableName, doc, options);\n    };\n    /**\n     * Returns if the collection is a capped collection.\n     */\n    MongoRepository.prototype.isCapped = function () {\n        return this.manager.isCapped(this.metadata.tableName);\n    };\n    /**\n     * Get the list of all indexes information for the collection.\n     */\n    MongoRepository.prototype.listCollectionIndexes = function (options) {\n        return this.manager.listCollectionIndexes(this.metadata.tableName, options);\n    };\n    /**\n     * Run Map Reduce across a collection. Be aware that the inline option for out will return an array of results not a collection.\n     */\n    MongoRepository.prototype.mapReduce = function (map, reduce, options) {\n        return this.manager.mapReduce(this.metadata.tableName, map, reduce, options);\n    };\n    /**\n     * Return N number of parallel cursors for a collection allowing parallel reading of entire collection.\n     * There are no ordering guarantees for returned results.\n     */\n    MongoRepository.prototype.parallelCollectionScan = function (options) {\n        return this.manager.parallelCollectionScan(this.metadata.tableName, options);\n    };\n    /**\n     * Reindex all indexes on the collection Warning: reIndex is a blocking operation (indexes are rebuilt in the foreground) and will be slow for large collections.\n     */\n    MongoRepository.prototype.reIndex = function () {\n        return this.manager.reIndex(this.metadata.tableName);\n    };\n    /**\n     * Reindex all indexes on the collection Warning: reIndex is a blocking operation (indexes are rebuilt in the foreground) and will be slow for large collections.\n     */\n    MongoRepository.prototype.rename = function (newName, options) {\n        return this.manager.rename(this.metadata.tableName, newName, options);\n    };\n    /**\n     * Replace a document on MongoDB.\n     */\n    MongoRepository.prototype.replaceOne = function (query, doc, options) {\n        return this.manager.replaceOne(this.metadata.tableName, query, doc, options);\n    };\n    /**\n     * Get all the collection statistics.\n     */\n    MongoRepository.prototype.stats = function (options) {\n        return this.manager.stats(this.metadata.tableName, options);\n    };\n    /**\n     * Update multiple documents on MongoDB.\n     */\n    MongoRepository.prototype.updateMany = function (query, update, options) {\n        return this.manager.updateMany(this.metadata.tableName, query, update, options);\n    };\n    /**\n     * Update a single document on MongoDB.\n     */\n    MongoRepository.prototype.updateOne = function (query, update, options) {\n        return this.manager.updateOne(this.metadata.tableName, query, update, options);\n    };\n    return MongoRepository;\n}(Repository_1.Repository));\nexports.MongoRepository = MongoRepository;\n\n//# sourceMappingURL=MongoRepository.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/repository/MongoRepository.js?");

/***/ }),

/***/ "./node_modules/typeorm/repository/Repository.js":
/*!*******************************************************!*\
  !*** ./node_modules/typeorm/repository/Repository.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Repository is supposed to work with your entity objects. Find entities, insert, update, delete, etc.\n */\nvar Repository = /** @class */ (function () {\n    function Repository() {\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates a new query builder that can be used to build a sql query.\n     */\n    Repository.prototype.createQueryBuilder = function (alias, queryRunner) {\n        return this.manager.createQueryBuilder(this.metadata.target, alias || this.metadata.targetName, queryRunner || this.queryRunner);\n    };\n    Object.defineProperty(Repository.prototype, \"target\", {\n        /**\n         * Returns object that is managed by this repository.\n         * If this repository manages entity from schema,\n         * then it returns a name of that schema instead.\n         */\n        get: function () {\n            return this.metadata.target;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Checks if entity has an id.\n     * If entity composite compose ids, it will check them all.\n     */\n    Repository.prototype.hasId = function (entity) {\n        return this.manager.hasId(this.metadata.target, entity);\n    };\n    /**\n     * Gets entity mixed id.\n     */\n    Repository.prototype.getId = function (entity) {\n        return this.manager.getId(this.metadata.target, entity);\n    };\n    /**\n     * Creates a new entity instance or instances.\n     * Can copy properties from the given object into new entities.\n     */\n    Repository.prototype.create = function (plainEntityLikeOrPlainEntityLikes) {\n        return this.manager.create(this.metadata.target, plainEntityLikeOrPlainEntityLikes);\n    };\n    /**\n     * Merges multiple entities (or entity-like objects) into a given entity.\n     */\n    Repository.prototype.merge = function (mergeIntoEntity) {\n        var entityLikes = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            entityLikes[_i - 1] = arguments[_i];\n        }\n        return (_a = this.manager).merge.apply(_a, __spread([this.metadata.target, mergeIntoEntity], entityLikes));\n        var _a;\n    };\n    /**\n     * Creates a new entity from the given plan javascript object. If entity already exist in the database, then\n     * it loads it (and everything related to it), replaces all values with the new ones from the given object\n     * and returns this new entity. This new entity is actually a loaded from the db entity with all properties\n     * replaced from the new object.\n     *\n     * Note that given entity-like object must have an entity id / primary key to find entity by.\n     * Returns undefined if entity with given id was not found.\n     */\n    Repository.prototype.preload = function (entityLike) {\n        return this.manager.preload(this.metadata.target, entityLike);\n    };\n    /**\n     * Saves one or many given entities.\n     */\n    Repository.prototype.save = function (entityOrEntities, options) {\n        return this.manager.save(this.metadata.target, entityOrEntities, options);\n    };\n    /**\n     * Removes one or many given entities.\n     */\n    Repository.prototype.remove = function (entityOrEntities, options) {\n        return this.manager.remove(this.metadata.target, entityOrEntities, options);\n    };\n    /**\n     * Inserts a given entity into the database.\n     * Unlike save method executes a primitive operation without cascades, relations and other operations included.\n     * Executes fast and efficient INSERT query.\n     * Does not check if entity exist in the database, so query will fail if duplicate entity is being inserted.\n     */\n    Repository.prototype.insert = function (entity, options) {\n        return this.manager.insert(this.metadata.target, entity, options);\n    };\n    /**\n     * Updates entity partially. Entity can be found by a given conditions.\n     * Unlike save method executes a primitive operation without cascades, relations and other operations included.\n     * Executes fast and efficient UPDATE query.\n     * Does not check if entity exist in the database.\n     */\n    Repository.prototype.update = function (criteria, partialEntity, options) {\n        return this.manager.update(this.metadata.target, criteria, partialEntity, options);\n    };\n    /**\n     * Deletes entities by a given criteria.\n     * Unlike save method executes a primitive operation without cascades, relations and other operations included.\n     * Executes fast and efficient DELETE query.\n     * Does not check if entity exist in the database.\n     */\n    Repository.prototype.delete = function (criteria, options) {\n        return this.manager.delete(this.metadata.target, criteria, options);\n    };\n    /**\n     * Counts entities that match given find options or conditions.\n     */\n    Repository.prototype.count = function (optionsOrConditions) {\n        return this.manager.count(this.metadata.target, optionsOrConditions);\n    };\n    /**\n     * Finds entities that match given find options or conditions.\n     */\n    Repository.prototype.find = function (optionsOrConditions) {\n        return this.manager.find(this.metadata.target, optionsOrConditions);\n    };\n    /**\n     * Finds entities that match given find options or conditions.\n     * Also counts all entities that match given conditions,\n     * but ignores pagination settings (from and take options).\n     */\n    Repository.prototype.findAndCount = function (optionsOrConditions) {\n        return this.manager.findAndCount(this.metadata.target, optionsOrConditions);\n    };\n    /**\n     * Finds entities by ids.\n     * Optionally find options can be applied.\n     */\n    Repository.prototype.findByIds = function (ids, optionsOrConditions) {\n        return this.manager.findByIds(this.metadata.target, ids, optionsOrConditions);\n    };\n    /**\n     * Finds first entity that matches given conditions.\n     */\n    Repository.prototype.findOne = function (optionsOrConditions, maybeOptions) {\n        return this.manager.findOne(this.metadata.target, optionsOrConditions, maybeOptions);\n    };\n    /**\n     * Finds first entity that matches given conditions.\n     */\n    Repository.prototype.findOneOrFail = function (optionsOrConditions, maybeOptions) {\n        return this.manager.findOneOrFail(this.metadata.target, optionsOrConditions, maybeOptions);\n    };\n    /**\n     * Executes a raw SQL query and returns a raw database results.\n     * Raw query execution is supported only by relational databases (MongoDB is not supported).\n     */\n    Repository.prototype.query = function (query, parameters) {\n        return this.manager.query(query, parameters);\n    };\n    /**\n     * Clears all the data from the given table/collection (truncates/drops it).\n     *\n     * Note: this method uses TRUNCATE and may not work as you expect in transactions on some platforms.\n     * @see https://stackoverflow.com/a/5972738/925151\n     */\n    Repository.prototype.clear = function () {\n        return this.manager.clear(this.metadata.target);\n    };\n    /**\n     * Increments some column by provided value of the entities matched given conditions.\n     */\n    Repository.prototype.increment = function (conditions, propertyPath, value) {\n        return this.manager.increment(this.metadata.target, conditions, propertyPath, value);\n    };\n    /**\n     * Decrements some column by provided value of the entities matched given conditions.\n     */\n    Repository.prototype.decrement = function (conditions, propertyPath, value) {\n        return this.manager.decrement(this.metadata.target, conditions, propertyPath, value);\n    };\n    return Repository;\n}());\nexports.Repository = Repository;\n\n//# sourceMappingURL=Repository.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/repository/Repository.js?");

/***/ }),

/***/ "./node_modules/typeorm/repository/RepositoryFactory.js":
/*!**************************************************************!*\
  !*** ./node_modules/typeorm/repository/RepositoryFactory.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TreeRepository_1 = __webpack_require__(/*! ./TreeRepository */ \"./node_modules/typeorm/repository/TreeRepository.js\");\nvar Repository_1 = __webpack_require__(/*! ./Repository */ \"./node_modules/typeorm/repository/Repository.js\");\nvar MongoDriver_1 = __webpack_require__(/*! ../driver/mongodb/MongoDriver */ \"./node_modules/typeorm/driver/mongodb/MongoDriver.js\");\nvar MongoRepository_1 = __webpack_require__(/*! ./MongoRepository */ \"./node_modules/typeorm/repository/MongoRepository.js\");\n/**\n * Factory used to create different types of repositories.\n */\nvar RepositoryFactory = /** @class */ (function () {\n    function RepositoryFactory() {\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates a repository.\n     */\n    RepositoryFactory.prototype.create = function (manager, metadata, queryRunner) {\n        if (metadata.treeType) {\n            // NOTE: dynamic access to protected properties. We need this to prevent unwanted properties in those classes to be exposed,\n            // however we need these properties for internal work of the class\n            var repository = new TreeRepository_1.TreeRepository();\n            Object.assign(repository, {\n                manager: manager,\n                metadata: metadata,\n                queryRunner: queryRunner,\n            });\n            return repository;\n        }\n        else {\n            // NOTE: dynamic access to protected properties. We need this to prevent unwanted properties in those classes to be exposed,\n            // however we need these properties for internal work of the class\n            var repository = void 0;\n            if (manager.connection.driver instanceof MongoDriver_1.MongoDriver) {\n                repository = new MongoRepository_1.MongoRepository();\n            }\n            else {\n                repository = new Repository_1.Repository();\n            }\n            Object.assign(repository, {\n                manager: manager,\n                metadata: metadata,\n                queryRunner: queryRunner,\n            });\n            return repository;\n        }\n    };\n    return RepositoryFactory;\n}());\nexports.RepositoryFactory = RepositoryFactory;\n\n//# sourceMappingURL=RepositoryFactory.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/repository/RepositoryFactory.js?");

/***/ }),

/***/ "./node_modules/typeorm/repository/TreeRepository.js":
/*!***********************************************************!*\
  !*** ./node_modules/typeorm/repository/TreeRepository.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Repository_1 = __webpack_require__(/*! ./Repository */ \"./node_modules/typeorm/repository/Repository.js\");\nvar AbstractSqliteDriver_1 = __webpack_require__(/*! ../driver/sqlite-abstract/AbstractSqliteDriver */ \"./node_modules/typeorm/driver/sqlite-abstract/AbstractSqliteDriver.js\");\n/**\n * Repository with additional functions to work with trees.\n *\n * @see Repository\n */\nvar TreeRepository = /** @class */ (function (_super) {\n    __extends(TreeRepository, _super);\n    function TreeRepository() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    // todo: implement moving\n    // todo: implement removing\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Gets complete trees for all roots in the table.\n     */\n    TreeRepository.prototype.findTrees = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var roots;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.findRoots()];\n                    case 1:\n                        roots = _a.sent();\n                        return [4 /*yield*/, Promise.all(roots.map(function (root) { return _this.findDescendantsTree(root); }))];\n                    case 2:\n                        _a.sent();\n                        return [2 /*return*/, roots];\n                }\n            });\n        });\n    };\n    /**\n     * Roots are entities that have no ancestors. Finds them all.\n     */\n    TreeRepository.prototype.findRoots = function () {\n        var _this = this;\n        var escapeAlias = function (alias) { return _this.manager.connection.driver.escape(alias); };\n        var escapeColumn = function (column) { return _this.manager.connection.driver.escape(column); };\n        var parentPropertyName = this.manager.connection.namingStrategy.joinColumnName(this.metadata.treeParentRelation.propertyName, \"id\");\n        return this.createQueryBuilder(\"treeEntity\")\n            .where(escapeAlias(\"treeEntity\") + \".\" + escapeColumn(parentPropertyName) + \" IS NULL\")\n            .getMany();\n    };\n    /**\n     * Gets all children (descendants) of the given entity. Returns them all in a flat array.\n     */\n    TreeRepository.prototype.findDescendants = function (entity) {\n        return this\n            .createDescendantsQueryBuilder(\"treeEntity\", \"treeClosure\", entity)\n            .getMany();\n    };\n    /**\n     * Gets all children (descendants) of the given entity. Returns them in a tree - nested into each other.\n     */\n    TreeRepository.prototype.findDescendantsTree = function (entity) {\n        var _this = this;\n        // todo: throw exception if there is no column of this relation?\n        return this\n            .createDescendantsQueryBuilder(\"treeEntity\", \"treeClosure\", entity)\n            .getRawAndEntities()\n            .then(function (entitiesAndScalars) {\n            var relationMaps = _this.createRelationMaps(\"treeEntity\", entitiesAndScalars.raw);\n            _this.buildChildrenEntityTree(entity, entitiesAndScalars.entities, relationMaps);\n            return entity;\n        });\n    };\n    /**\n     * Gets number of descendants of the entity.\n     */\n    TreeRepository.prototype.countDescendants = function (entity) {\n        return this\n            .createDescendantsQueryBuilder(\"treeEntity\", \"treeClosure\", entity)\n            .getCount();\n    };\n    /**\n     * Creates a query builder used to get descendants of the entities in a tree.\n     */\n    TreeRepository.prototype.createDescendantsQueryBuilder = function (alias, closureTableAlias, entity) {\n        var _this = this;\n        // create shortcuts for better readability\n        var escape = function (alias) { return _this.manager.connection.driver.escape(alias); };\n        if (this.metadata.treeType === \"closure-table\") {\n            var joinCondition = this.metadata.closureJunctionTable.descendantColumns.map(function (column) {\n                return escape(closureTableAlias) + \".\" + escape(column.propertyPath) + \" = \" + escape(alias) + \".\" + escape(column.referencedColumn.propertyPath);\n            }).join(\" AND \");\n            var parameters_1 = {};\n            var whereCondition = this.metadata.closureJunctionTable.ancestorColumns.map(function (column) {\n                parameters_1[column.referencedColumn.propertyName] = column.referencedColumn.getEntityValue(entity);\n                return escape(closureTableAlias) + \".\" + escape(column.propertyPath) + \" = :\" + column.referencedColumn.propertyName;\n            }).join(\" AND \");\n            return this\n                .createQueryBuilder(alias)\n                .innerJoin(this.metadata.closureJunctionTable.tableName, closureTableAlias, joinCondition)\n                .where(whereCondition)\n                .setParameters(parameters_1);\n        }\n        else if (this.metadata.treeType === \"nested-set\") {\n            var whereCondition = alias + \".\" + this.metadata.nestedSetLeftColumn.propertyPath + \" BETWEEN \" +\n                \"joined.\" + this.metadata.nestedSetLeftColumn.propertyPath + \" AND joined.\" + this.metadata.nestedSetRightColumn.propertyPath;\n            var parameters_2 = {};\n            var joinCondition = this.metadata.treeParentRelation.joinColumns.map(function (joinColumn) {\n                var parameterName = joinColumn.referencedColumn.propertyPath.replace(\".\", \"_\");\n                parameters_2[parameterName] = joinColumn.referencedColumn.getEntityValue(entity);\n                return \"joined.\" + joinColumn.referencedColumn.propertyPath + \" = :\" + parameterName;\n            }).join(\" AND \");\n            return this\n                .createQueryBuilder(alias)\n                .innerJoin(this.metadata.targetName, \"joined\", whereCondition)\n                .where(joinCondition, parameters_2);\n        }\n        else if (this.metadata.treeType === \"materialized-path\") {\n            return this\n                .createQueryBuilder(alias)\n                .where(function (qb) {\n                var subQuery = qb.subQuery()\n                    .select(_this.metadata.targetName + \".\" + _this.metadata.materializedPathColumn.propertyPath, \"path\")\n                    .from(_this.metadata.target, _this.metadata.targetName)\n                    .whereInIds(_this.metadata.getEntityIdMap(entity));\n                qb.setNativeParameters(subQuery.expressionMap.nativeParameters);\n                if (_this.manager.connection.driver instanceof AbstractSqliteDriver_1.AbstractSqliteDriver) {\n                    return alias + \".\" + _this.metadata.materializedPathColumn.propertyPath + \" LIKE \" + subQuery.getQuery() + \" || '%'\";\n                }\n                else {\n                    return alias + \".\" + _this.metadata.materializedPathColumn.propertyPath + \" LIKE CONCAT(\" + subQuery.getQuery() + \", '%')\";\n                }\n            });\n        }\n        throw new Error(\"Supported only in tree entities\");\n    };\n    /**\n     * Gets all parents (ancestors) of the given entity. Returns them all in a flat array.\n     */\n    TreeRepository.prototype.findAncestors = function (entity) {\n        return this\n            .createAncestorsQueryBuilder(\"treeEntity\", \"treeClosure\", entity)\n            .getMany();\n    };\n    /**\n     * Gets all parents (ancestors) of the given entity. Returns them in a tree - nested into each other.\n     */\n    TreeRepository.prototype.findAncestorsTree = function (entity) {\n        var _this = this;\n        // todo: throw exception if there is no column of this relation?\n        return this\n            .createAncestorsQueryBuilder(\"treeEntity\", \"treeClosure\", entity)\n            .getRawAndEntities()\n            .then(function (entitiesAndScalars) {\n            var relationMaps = _this.createRelationMaps(\"treeEntity\", entitiesAndScalars.raw);\n            _this.buildParentEntityTree(entity, entitiesAndScalars.entities, relationMaps);\n            return entity;\n        });\n    };\n    /**\n     * Gets number of ancestors of the entity.\n     */\n    TreeRepository.prototype.countAncestors = function (entity) {\n        return this\n            .createAncestorsQueryBuilder(\"treeEntity\", \"treeClosure\", entity)\n            .getCount();\n    };\n    /**\n     * Creates a query builder used to get ancestors of the entities in the tree.\n     */\n    TreeRepository.prototype.createAncestorsQueryBuilder = function (alias, closureTableAlias, entity) {\n        // create shortcuts for better readability\n        // const escape = (alias: string) => this.manager.connection.driver.escape(alias);\n        var _this = this;\n        if (this.metadata.treeType === \"closure-table\") {\n            var joinCondition = this.metadata.closureJunctionTable.ancestorColumns.map(function (column) {\n                return closureTableAlias + \".\" + column.propertyPath + \" = \" + alias + \".\" + column.referencedColumn.propertyPath;\n            }).join(\" AND \");\n            var parameters_3 = {};\n            var whereCondition = this.metadata.closureJunctionTable.descendantColumns.map(function (column) {\n                parameters_3[column.referencedColumn.propertyName] = column.referencedColumn.getEntityValue(entity);\n                return closureTableAlias + \".\" + column.propertyPath + \" = :\" + column.referencedColumn.propertyName;\n            }).join(\" AND \");\n            return this\n                .createQueryBuilder(alias)\n                .innerJoin(this.metadata.closureJunctionTable.tableName, closureTableAlias, joinCondition)\n                .where(whereCondition)\n                .setParameters(parameters_3);\n        }\n        else if (this.metadata.treeType === \"nested-set\") {\n            var joinCondition = \"joined.\" + this.metadata.nestedSetLeftColumn.propertyPath + \" BETWEEN \" +\n                alias + \".\" + this.metadata.nestedSetLeftColumn.propertyPath + \" AND \" + alias + \".\" + this.metadata.nestedSetRightColumn.propertyPath;\n            var parameters_4 = {};\n            var whereCondition = this.metadata.treeParentRelation.joinColumns.map(function (joinColumn) {\n                var parameterName = joinColumn.referencedColumn.propertyPath.replace(\".\", \"_\");\n                parameters_4[parameterName] = joinColumn.referencedColumn.getEntityValue(entity);\n                return \"joined.\" + joinColumn.referencedColumn.propertyPath + \" = :\" + parameterName;\n            }).join(\" AND \");\n            return this\n                .createQueryBuilder(alias)\n                .innerJoin(this.metadata.targetName, \"joined\", joinCondition)\n                .where(whereCondition, parameters_4);\n        }\n        else if (this.metadata.treeType === \"materialized-path\") {\n            // example: SELECT * FROM category category WHERE (SELECT mpath FROM `category` WHERE id = 2) LIKE CONCAT(category.mpath, '%');\n            return this\n                .createQueryBuilder(alias)\n                .where(function (qb) {\n                var subQuery = qb.subQuery()\n                    .select(_this.metadata.targetName + \".\" + _this.metadata.materializedPathColumn.propertyPath, \"path\")\n                    .from(_this.metadata.target, _this.metadata.targetName)\n                    .whereInIds(_this.metadata.getEntityIdMap(entity));\n                qb.setNativeParameters(subQuery.expressionMap.nativeParameters);\n                if (_this.manager.connection.driver instanceof AbstractSqliteDriver_1.AbstractSqliteDriver) {\n                    return subQuery.getQuery() + \" LIKE \" + alias + \".\" + _this.metadata.materializedPathColumn.propertyPath + \" || '%'\";\n                }\n                else {\n                    return subQuery.getQuery() + \" LIKE CONCAT(\" + alias + \".\" + _this.metadata.materializedPathColumn.propertyPath + \", '%')\";\n                }\n            });\n        }\n        throw new Error(\"Supported only in tree entities\");\n    };\n    /**\n     * Moves entity to the children of then given entity.\n     *\n    move(entity: Entity, to: Entity): Promise<void> {\n        return Promise.resolve();\n    } */\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    TreeRepository.prototype.createRelationMaps = function (alias, rawResults) {\n        var _this = this;\n        return rawResults.map(function (rawResult) {\n            return {\n                id: rawResult[alias + \"_\" + _this.metadata.primaryColumns[0].databaseName],\n                parentId: rawResult[alias + \"_\" + _this.metadata.treeParentRelation.joinColumns[0].givenDatabaseName]\n            };\n        });\n    };\n    TreeRepository.prototype.buildChildrenEntityTree = function (entity, entities, relationMaps) {\n        var _this = this;\n        var childProperty = this.metadata.treeChildrenRelation.propertyName;\n        var parentEntityId = this.metadata.primaryColumns[0].getEntityValue(entity);\n        var childRelationMaps = relationMaps.filter(function (relationMap) { return relationMap.parentId === parentEntityId; });\n        var childIds = childRelationMaps.map(function (relationMap) { return relationMap.id; });\n        entity[childProperty] = entities.filter(function (entity) { return childIds.indexOf(entity.id) !== -1; });\n        entity[childProperty].forEach(function (childEntity) {\n            _this.buildChildrenEntityTree(childEntity, entities, relationMaps);\n        });\n    };\n    TreeRepository.prototype.buildParentEntityTree = function (entity, entities, relationMaps) {\n        var _this = this;\n        var parentProperty = this.metadata.treeParentRelation.propertyName;\n        var entityId = this.metadata.primaryColumns[0].getEntityValue(entity);\n        var parentRelationMap = relationMaps.find(function (relationMap) { return relationMap.id === entityId; });\n        var parentEntity = entities.find(function (entity) {\n            if (!parentRelationMap)\n                return false;\n            return entity[_this.metadata.primaryColumns[0].propertyName] === parentRelationMap.parentId;\n        });\n        if (parentEntity) {\n            entity[parentProperty] = parentEntity;\n            this.buildParentEntityTree(entity[parentProperty], entities, relationMaps);\n        }\n    };\n    return TreeRepository;\n}(Repository_1.Repository));\nexports.TreeRepository = TreeRepository;\n\n//# sourceMappingURL=TreeRepository.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/repository/TreeRepository.js?");

/***/ }),

/***/ "./node_modules/typeorm/schema-builder/MongoSchemaBuilder.js":
/*!*******************************************************************!*\
  !*** ./node_modules/typeorm/schema-builder/MongoSchemaBuilder.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar SqlInMemory_1 = __webpack_require__(/*! ../driver/SqlInMemory */ \"./node_modules/typeorm/driver/SqlInMemory.js\");\n/**\n * Creates complete tables schemas in the database based on the entity metadatas.\n *\n * Steps how schema is being built:\n * 1. load list of all tables with complete column and keys information from the db\n * 2. drop all (old) foreign keys that exist in the table, but does not exist in the metadata\n * 3. create new tables that does not exist in the db, but exist in the metadata\n * 4. drop all columns exist (left old) in the db table, but does not exist in the metadata\n * 5. add columns from metadata which does not exist in the table\n * 6. update all exist columns which metadata has changed\n * 7. update primary keys - update old and create new primary key from changed columns\n * 8. create foreign keys which does not exist in the table yet\n * 9. create indices which are missing in db yet, and drops indices which exist in the db, but does not exist in the metadata anymore\n */\nvar MongoSchemaBuilder = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function MongoSchemaBuilder(connection) {\n        this.connection = connection;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates complete schemas for the given entity metadatas.\n     */\n    MongoSchemaBuilder.prototype.build = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var queryRunner, promises;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        queryRunner = this.connection.driver.createQueryRunner();\n                        promises = [];\n                        this.connection.entityMetadatas.forEach(function (metadata) {\n                            metadata.indices.forEach(function (index) {\n                                var options = { name: index.name, unique: index.isUnique, sparse: index.isSparse };\n                                promises.push(queryRunner.createCollectionIndex(metadata.tableName, index.columnNamesWithOrderingMap, options));\n                            });\n                        });\n                        return [4 /*yield*/, Promise.all(promises)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Returns query to be executed by schema builder.\n     */\n    MongoSchemaBuilder.prototype.log = function () {\n        return Promise.resolve(new SqlInMemory_1.SqlInMemory());\n    };\n    return MongoSchemaBuilder;\n}());\nexports.MongoSchemaBuilder = MongoSchemaBuilder;\n\n//# sourceMappingURL=MongoSchemaBuilder.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/schema-builder/MongoSchemaBuilder.js?");

/***/ }),

/***/ "./node_modules/typeorm/schema-builder/RdbmsSchemaBuilder.js":
/*!*******************************************************************!*\
  !*** ./node_modules/typeorm/schema-builder/RdbmsSchemaBuilder.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Table_1 = __webpack_require__(/*! ./table/Table */ \"./node_modules/typeorm/schema-builder/table/Table.js\");\nvar TableColumn_1 = __webpack_require__(/*! ./table/TableColumn */ \"./node_modules/typeorm/schema-builder/table/TableColumn.js\");\nvar TableForeignKey_1 = __webpack_require__(/*! ./table/TableForeignKey */ \"./node_modules/typeorm/schema-builder/table/TableForeignKey.js\");\nvar TableIndex_1 = __webpack_require__(/*! ./table/TableIndex */ \"./node_modules/typeorm/schema-builder/table/TableIndex.js\");\nvar PromiseUtils_1 = __webpack_require__(/*! ../util/PromiseUtils */ \"./node_modules/typeorm/util/PromiseUtils.js\");\nvar TableUtils_1 = __webpack_require__(/*! ./util/TableUtils */ \"./node_modules/typeorm/schema-builder/util/TableUtils.js\");\nvar MysqlDriver_1 = __webpack_require__(/*! ../driver/mysql/MysqlDriver */ \"./node_modules/typeorm/driver/mysql/MysqlDriver.js\");\nvar TableUnique_1 = __webpack_require__(/*! ./table/TableUnique */ \"./node_modules/typeorm/schema-builder/table/TableUnique.js\");\nvar TableCheck_1 = __webpack_require__(/*! ./table/TableCheck */ \"./node_modules/typeorm/schema-builder/table/TableCheck.js\");\n/**\n * Creates complete tables schemas in the database based on the entity metadatas.\n *\n * Steps how schema is being built:\n * 1. load list of all tables with complete column and keys information from the db\n * 2. drop all (old) foreign keys that exist in the table, but does not exist in the metadata\n * 3. create new tables that does not exist in the db, but exist in the metadata\n * 4. drop all columns exist (left old) in the db table, but does not exist in the metadata\n * 5. add columns from metadata which does not exist in the table\n * 6. update all exist columns which metadata has changed\n * 7. update primary keys - update old and create new primary key from changed columns\n * 8. create foreign keys which does not exist in the table yet\n * 9. create indices which are missing in db yet, and drops indices which exist in the db, but does not exist in the metadata anymore\n */\nvar RdbmsSchemaBuilder = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function RdbmsSchemaBuilder(connection) {\n        this.connection = connection;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates complete schemas for the given entity metadatas.\n     */\n    RdbmsSchemaBuilder.prototype.build = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var tablePaths, error_1, rollbackError_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.queryRunner = this.connection.createQueryRunner(\"master\");\n                        return [4 /*yield*/, this.queryRunner.startTransaction()];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2:\n                        _a.trys.push([2, 8, 13, 15]);\n                        tablePaths = this.entityToSyncMetadatas.map(function (metadata) { return metadata.tablePath; });\n                        return [4 /*yield*/, this.queryRunner.getTables(tablePaths)];\n                    case 3:\n                        _a.sent();\n                        return [4 /*yield*/, this.executeSchemaSyncOperationsInProperOrder()];\n                    case 4:\n                        _a.sent();\n                        if (!this.connection.queryResultCache) return [3 /*break*/, 6];\n                        return [4 /*yield*/, this.connection.queryResultCache.synchronize(this.queryRunner)];\n                    case 5:\n                        _a.sent();\n                        _a.label = 6;\n                    case 6: return [4 /*yield*/, this.queryRunner.commitTransaction()];\n                    case 7:\n                        _a.sent();\n                        return [3 /*break*/, 15];\n                    case 8:\n                        error_1 = _a.sent();\n                        _a.label = 9;\n                    case 9:\n                        _a.trys.push([9, 11, , 12]);\n                        return [4 /*yield*/, this.queryRunner.rollbackTransaction()];\n                    case 10:\n                        _a.sent();\n                        return [3 /*break*/, 12];\n                    case 11:\n                        rollbackError_1 = _a.sent();\n                        return [3 /*break*/, 12];\n                    case 12: throw error_1;\n                    case 13: return [4 /*yield*/, this.queryRunner.release()];\n                    case 14:\n                        _a.sent();\n                        return [7 /*endfinally*/];\n                    case 15: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Returns sql queries to be executed by schema builder.\n     */\n    RdbmsSchemaBuilder.prototype.log = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var tablePaths;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.queryRunner = this.connection.createQueryRunner(\"master\");\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, , 6, 8]);\n                        tablePaths = this.entityToSyncMetadatas.map(function (metadata) { return metadata.tablePath; });\n                        return [4 /*yield*/, this.queryRunner.getTables(tablePaths)];\n                    case 2:\n                        _a.sent();\n                        this.queryRunner.enableSqlMemory();\n                        return [4 /*yield*/, this.executeSchemaSyncOperationsInProperOrder()];\n                    case 3:\n                        _a.sent();\n                        if (!this.connection.queryResultCache) return [3 /*break*/, 5];\n                        return [4 /*yield*/, this.connection.queryResultCache.synchronize(this.queryRunner)];\n                    case 4:\n                        _a.sent();\n                        _a.label = 5;\n                    case 5: return [2 /*return*/, this.queryRunner.getMemorySql()];\n                    case 6:\n                        // its important to disable this mode despite the fact we are release query builder\n                        // because there exist drivers which reuse same query runner. Also its important to disable\n                        // sql memory after call of getMemorySql() method because last one flushes sql memory.\n                        this.queryRunner.disableSqlMemory();\n                        return [4 /*yield*/, this.queryRunner.release()];\n                    case 7:\n                        _a.sent();\n                        return [7 /*endfinally*/];\n                    case 8: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Object.defineProperty(RdbmsSchemaBuilder.prototype, \"entityToSyncMetadatas\", {\n        // -------------------------------------------------------------------------\n        // Protected Methods\n        // -------------------------------------------------------------------------\n        /**\n         * Returns only entities that should be synced in the database.\n         */\n        get: function () {\n            return this.connection.entityMetadatas.filter(function (metadata) { return metadata.synchronize && metadata.tableType !== \"entity-child\"; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Executes schema sync operations in a proper order.\n     * Order of operations matter here.\n     */\n    RdbmsSchemaBuilder.prototype.executeSchemaSyncOperationsInProperOrder = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.dropOldForeignKeys()];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, this.dropOldIndices()];\n                    case 2:\n                        _a.sent();\n                        return [4 /*yield*/, this.dropOldChecks()];\n                    case 3:\n                        _a.sent();\n                        return [4 /*yield*/, this.dropCompositeUniqueConstraints()];\n                    case 4:\n                        _a.sent();\n                        // await this.renameTables();\n                        return [4 /*yield*/, this.renameColumns()];\n                    case 5:\n                        // await this.renameTables();\n                        _a.sent();\n                        return [4 /*yield*/, this.createNewTables()];\n                    case 6:\n                        _a.sent();\n                        return [4 /*yield*/, this.dropRemovedColumns()];\n                    case 7:\n                        _a.sent();\n                        return [4 /*yield*/, this.addNewColumns()];\n                    case 8:\n                        _a.sent();\n                        return [4 /*yield*/, this.updatePrimaryKeys()];\n                    case 9:\n                        _a.sent();\n                        return [4 /*yield*/, this.updateExistColumns()];\n                    case 10:\n                        _a.sent();\n                        return [4 /*yield*/, this.createNewIndices()];\n                    case 11:\n                        _a.sent();\n                        return [4 /*yield*/, this.createNewChecks()];\n                    case 12:\n                        _a.sent();\n                        return [4 /*yield*/, this.createCompositeUniqueConstraints()];\n                    case 13:\n                        _a.sent();\n                        return [4 /*yield*/, this.createForeignKeys()];\n                    case 14:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops all (old) foreign keys that exist in the tables, but do not exist in the entity metadata.\n     */\n    RdbmsSchemaBuilder.prototype.dropOldForeignKeys = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, PromiseUtils_1.PromiseUtils.runInSequence(this.entityToSyncMetadatas, function (metadata) { return __awaiter(_this, void 0, void 0, function () {\n                            var table, tableForeignKeysToDrop;\n                            return __generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0:\n                                        table = this.queryRunner.loadedTables.find(function (table) { return table.name === metadata.tablePath; });\n                                        if (!table)\n                                            return [2 /*return*/];\n                                        tableForeignKeysToDrop = table.foreignKeys.filter(function (tableForeignKey) {\n                                            var metadataFK = metadata.foreignKeys.find(function (metadataForeignKey) { return metadataForeignKey.name === tableForeignKey.name; });\n                                            return !metadataFK\n                                                || metadataFK.onDelete && metadataFK.onDelete !== tableForeignKey.onDelete\n                                                || metadataFK.onUpdate && metadataFK.onUpdate !== tableForeignKey.onUpdate;\n                                        });\n                                        if (tableForeignKeysToDrop.length === 0)\n                                            return [2 /*return*/];\n                                        this.connection.logger.logSchemaBuild(\"dropping old foreign keys of \" + table.name + \": \" + tableForeignKeysToDrop.map(function (dbForeignKey) { return dbForeignKey.name; }).join(\", \"));\n                                        // drop foreign keys from the database\n                                        return [4 /*yield*/, this.queryRunner.dropForeignKeys(table, tableForeignKeysToDrop)];\n                                    case 1:\n                                        // drop foreign keys from the database\n                                        _a.sent();\n                                        return [2 /*return*/];\n                                }\n                            });\n                        }); })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Rename tables\n     */\n    RdbmsSchemaBuilder.prototype.renameTables = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, PromiseUtils_1.PromiseUtils.runInSequence(this.entityToSyncMetadatas, function (metadata) { return __awaiter(_this, void 0, void 0, function () {\n                            return __generator(this, function (_a) {\n                                return [2 /*return*/];\n                            });\n                        }); })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Renames columns.\n     * Works if only one column per table was changed.\n     * Changes only column name. If something besides name was changed, these changes will be ignored.\n     */\n    RdbmsSchemaBuilder.prototype.renameColumns = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, PromiseUtils_1.PromiseUtils.runInSequence(this.entityToSyncMetadatas, function (metadata) { return __awaiter(_this, void 0, void 0, function () {\n                            var _this = this;\n                            var table, renamedMetadataColumns, renamedTableColumns, renamedColumn;\n                            return __generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0:\n                                        table = this.queryRunner.loadedTables.find(function (table) { return table.name === metadata.tablePath; });\n                                        if (!table)\n                                            return [2 /*return*/];\n                                        if (metadata.columns.length !== table.columns.length)\n                                            return [2 /*return*/];\n                                        renamedMetadataColumns = metadata.columns.filter(function (column) {\n                                            return !table.columns.find(function (tableColumn) {\n                                                return tableColumn.name === column.databaseName\n                                                    && tableColumn.type === _this.connection.driver.normalizeType(column)\n                                                    && tableColumn.isNullable === column.isNullable\n                                                    && tableColumn.isUnique === _this.connection.driver.normalizeIsUnique(column);\n                                            });\n                                        });\n                                        if (renamedMetadataColumns.length === 0 || renamedMetadataColumns.length > 1)\n                                            return [2 /*return*/];\n                                        renamedTableColumns = table.columns.filter(function (tableColumn) {\n                                            return !metadata.columns.find(function (column) {\n                                                return column.databaseName === tableColumn.name\n                                                    && _this.connection.driver.normalizeType(column) === tableColumn.type\n                                                    && column.isNullable === tableColumn.isNullable\n                                                    && _this.connection.driver.normalizeIsUnique(column) === tableColumn.isUnique;\n                                            });\n                                        });\n                                        if (renamedTableColumns.length === 0 || renamedTableColumns.length > 1)\n                                            return [2 /*return*/];\n                                        renamedColumn = renamedTableColumns[0].clone();\n                                        renamedColumn.name = renamedMetadataColumns[0].databaseName;\n                                        this.connection.logger.logSchemaBuild(\"renaming column \\\"\" + renamedTableColumns[0].name + \"\\\" in to \\\"\" + renamedColumn.name + \"\\\"\");\n                                        return [4 /*yield*/, this.queryRunner.renameColumn(table, renamedTableColumns[0], renamedColumn)];\n                                    case 1:\n                                        _a.sent();\n                                        return [2 /*return*/];\n                                }\n                            });\n                        }); })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    RdbmsSchemaBuilder.prototype.dropOldIndices = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, PromiseUtils_1.PromiseUtils.runInSequence(this.entityToSyncMetadatas, function (metadata) { return __awaiter(_this, void 0, void 0, function () {\n                            var _this = this;\n                            var table, dropQueries;\n                            return __generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0:\n                                        table = this.queryRunner.loadedTables.find(function (table) { return table.name === metadata.tablePath; });\n                                        if (!table)\n                                            return [2 /*return*/];\n                                        dropQueries = table.indices\n                                            .filter(function (tableIndex) {\n                                            var indexMetadata = metadata.indices.find(function (index) { return index.name === tableIndex.name; });\n                                            if (indexMetadata) {\n                                                if (indexMetadata.synchronize === false)\n                                                    return false;\n                                                if (indexMetadata.isUnique !== tableIndex.isUnique)\n                                                    return true;\n                                                if (indexMetadata.isSpatial !== tableIndex.isSpatial)\n                                                    return true;\n                                                if (indexMetadata.isFulltext !== tableIndex.isFulltext)\n                                                    return true;\n                                                if (indexMetadata.columns.length !== tableIndex.columnNames.length)\n                                                    return true;\n                                                return !indexMetadata.columns.every(function (column) { return tableIndex.columnNames.indexOf(column.databaseName) !== -1; });\n                                            }\n                                            return true;\n                                        })\n                                            .map(function (tableIndex) { return __awaiter(_this, void 0, void 0, function () {\n                                            return __generator(this, function (_a) {\n                                                switch (_a.label) {\n                                                    case 0:\n                                                        this.connection.logger.logSchemaBuild(\"dropping an index: \\\"\" + tableIndex.name + \"\\\" from table \" + table.name);\n                                                        return [4 /*yield*/, this.queryRunner.dropIndex(table, tableIndex)];\n                                                    case 1:\n                                                        _a.sent();\n                                                        return [2 /*return*/];\n                                                }\n                                            });\n                                        }); });\n                                        return [4 /*yield*/, Promise.all(dropQueries)];\n                                    case 1:\n                                        _a.sent();\n                                        return [2 /*return*/];\n                                }\n                            });\n                        }); })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    RdbmsSchemaBuilder.prototype.dropOldChecks = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        // Mysql does not support check constraints\n                        if (this.connection.driver instanceof MysqlDriver_1.MysqlDriver)\n                            return [2 /*return*/];\n                        return [4 /*yield*/, PromiseUtils_1.PromiseUtils.runInSequence(this.entityToSyncMetadatas, function (metadata) { return __awaiter(_this, void 0, void 0, function () {\n                                var table, oldChecks;\n                                return __generator(this, function (_a) {\n                                    switch (_a.label) {\n                                        case 0:\n                                            table = this.queryRunner.loadedTables.find(function (table) { return table.name === metadata.tablePath; });\n                                            if (!table)\n                                                return [2 /*return*/];\n                                            oldChecks = table.checks.filter(function (tableCheck) {\n                                                return !metadata.checks.find(function (checkMetadata) { return checkMetadata.name === tableCheck.name; });\n                                            });\n                                            if (oldChecks.length === 0)\n                                                return [2 /*return*/];\n                                            this.connection.logger.logSchemaBuild(\"dropping old check constraint: \" + oldChecks.map(function (check) { return \"\\\"\" + check.name + \"\\\"\"; }).join(\", \") + \" from table \\\"\" + table.name + \"\\\"\");\n                                            return [4 /*yield*/, this.queryRunner.dropCheckConstraints(table, oldChecks)];\n                                        case 1:\n                                            _a.sent();\n                                            return [2 /*return*/];\n                                    }\n                                });\n                            }); })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    RdbmsSchemaBuilder.prototype.dropCompositeUniqueConstraints = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, PromiseUtils_1.PromiseUtils.runInSequence(this.entityToSyncMetadatas, function (metadata) { return __awaiter(_this, void 0, void 0, function () {\n                            var table, compositeUniques;\n                            return __generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0:\n                                        table = this.queryRunner.loadedTables.find(function (table) { return table.name === metadata.tablePath; });\n                                        if (!table)\n                                            return [2 /*return*/];\n                                        compositeUniques = table.uniques.filter(function (tableUnique) {\n                                            return tableUnique.columnNames.length > 1 && !metadata.uniques.find(function (uniqueMetadata) { return uniqueMetadata.name === tableUnique.name; });\n                                        });\n                                        if (compositeUniques.length === 0)\n                                            return [2 /*return*/];\n                                        this.connection.logger.logSchemaBuild(\"dropping old unique constraint: \" + compositeUniques.map(function (unique) { return \"\\\"\" + unique.name + \"\\\"\"; }).join(\", \") + \" from table \\\"\" + table.name + \"\\\"\");\n                                        return [4 /*yield*/, this.queryRunner.dropUniqueConstraints(table, compositeUniques)];\n                                    case 1:\n                                        _a.sent();\n                                        return [2 /*return*/];\n                                }\n                            });\n                        }); })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates tables that do not exist in the database yet.\n     * New tables are created without foreign and primary keys.\n     * Primary key only can be created in conclusion with auto generated column.\n     */\n    RdbmsSchemaBuilder.prototype.createNewTables = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, PromiseUtils_1.PromiseUtils.runInSequence(this.entityToSyncMetadatas, function (metadata) { return __awaiter(_this, void 0, void 0, function () {\n                            var _this = this;\n                            var existTable, table;\n                            return __generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0:\n                                        existTable = this.queryRunner.loadedTables.find(function (table) {\n                                            var database = metadata.database && metadata.database !== _this.connection.driver.database ? metadata.database : undefined;\n                                            var schema = metadata.schema || _this.connection.driver.options.schema;\n                                            var fullTableName = _this.connection.driver.buildTableName(metadata.tableName, schema, database);\n                                            return table.name === fullTableName;\n                                        });\n                                        if (existTable)\n                                            return [2 /*return*/];\n                                        this.connection.logger.logSchemaBuild(\"creating a new table: \" + metadata.tablePath);\n                                        table = Table_1.Table.create(metadata, this.connection.driver);\n                                        return [4 /*yield*/, this.queryRunner.createTable(table, false, false)];\n                                    case 1:\n                                        _a.sent();\n                                        this.queryRunner.loadedTables.push(table);\n                                        return [2 /*return*/];\n                                }\n                            });\n                        }); })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops all columns that exist in the table, but does not exist in the metadata (left old).\n     * We drop their keys too, since it should be safe.\n     */\n    RdbmsSchemaBuilder.prototype.dropRemovedColumns = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, PromiseUtils_1.PromiseUtils.runInSequence(this.entityToSyncMetadatas, function (metadata) { return __awaiter(_this, void 0, void 0, function () {\n                            var table, droppedTableColumns;\n                            return __generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0:\n                                        table = this.queryRunner.loadedTables.find(function (table) { return table.name === metadata.tablePath; });\n                                        if (!table)\n                                            return [2 /*return*/];\n                                        droppedTableColumns = table.columns.filter(function (tableColumn) {\n                                            return !metadata.columns.find(function (columnMetadata) { return columnMetadata.databaseName === tableColumn.name; });\n                                        });\n                                        if (droppedTableColumns.length === 0)\n                                            return [2 /*return*/];\n                                        this.connection.logger.logSchemaBuild(\"columns dropped in \" + table.name + \": \" + droppedTableColumns.map(function (column) { return column.name; }).join(\", \"));\n                                        // drop columns from the database\n                                        return [4 /*yield*/, this.queryRunner.dropColumns(table, droppedTableColumns)];\n                                    case 1:\n                                        // drop columns from the database\n                                        _a.sent();\n                                        return [2 /*return*/];\n                                }\n                            });\n                        }); })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Adds columns from metadata which does not exist in the table.\n     * Columns are created without keys.\n     */\n    RdbmsSchemaBuilder.prototype.addNewColumns = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, PromiseUtils_1.PromiseUtils.runInSequence(this.entityToSyncMetadatas, function (metadata) { return __awaiter(_this, void 0, void 0, function () {\n                            var table, newColumnMetadatas, newTableColumnOptions, newTableColumns;\n                            return __generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0:\n                                        table = this.queryRunner.loadedTables.find(function (table) { return table.name === metadata.tablePath; });\n                                        if (!table)\n                                            return [2 /*return*/];\n                                        newColumnMetadatas = metadata.columns.filter(function (columnMetadata) {\n                                            return !table.columns.find(function (tableColumn) { return tableColumn.name === columnMetadata.databaseName; });\n                                        });\n                                        if (newColumnMetadatas.length === 0)\n                                            return [2 /*return*/];\n                                        newTableColumnOptions = this.metadataColumnsToTableColumnOptions(newColumnMetadatas);\n                                        newTableColumns = newTableColumnOptions.map(function (option) { return new TableColumn_1.TableColumn(option); });\n                                        if (newTableColumns.length === 0)\n                                            return [2 /*return*/];\n                                        this.connection.logger.logSchemaBuild(\"new columns added: \" + newColumnMetadatas.map(function (column) { return column.databaseName; }).join(\", \"));\n                                        return [4 /*yield*/, this.queryRunner.addColumns(table, newTableColumns)];\n                                    case 1:\n                                        _a.sent();\n                                        return [2 /*return*/];\n                                }\n                            });\n                        }); })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Updates composite primary keys.\n     */\n    RdbmsSchemaBuilder.prototype.updatePrimaryKeys = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, PromiseUtils_1.PromiseUtils.runInSequence(this.entityToSyncMetadatas, function (metadata) { return __awaiter(_this, void 0, void 0, function () {\n                            var _this = this;\n                            var table, primaryMetadataColumns, primaryTableColumns, changedPrimaryColumns;\n                            return __generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0:\n                                        table = this.queryRunner.loadedTables.find(function (table) { return table.name === metadata.tablePath; });\n                                        if (!table)\n                                            return [2 /*return*/];\n                                        primaryMetadataColumns = metadata.columns.filter(function (column) { return column.isPrimary; });\n                                        primaryTableColumns = table.columns.filter(function (column) { return column.isPrimary; });\n                                        if (!(primaryTableColumns.length !== primaryMetadataColumns.length && primaryMetadataColumns.length > 1)) return [3 /*break*/, 2];\n                                        changedPrimaryColumns = primaryMetadataColumns.map(function (primaryMetadataColumn) {\n                                            return new TableColumn_1.TableColumn(TableUtils_1.TableUtils.createTableColumnOptions(primaryMetadataColumn, _this.connection.driver));\n                                        });\n                                        return [4 /*yield*/, this.queryRunner.updatePrimaryKeys(table, changedPrimaryColumns)];\n                                    case 1:\n                                        _a.sent();\n                                        _a.label = 2;\n                                    case 2: return [2 /*return*/];\n                                }\n                            });\n                        }); })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Update all exist columns which metadata has changed.\n     * Still don't create keys. Also we don't touch foreign keys of the changed columns.\n     */\n    RdbmsSchemaBuilder.prototype.updateExistColumns = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, PromiseUtils_1.PromiseUtils.runInSequence(this.entityToSyncMetadatas, function (metadata) { return __awaiter(_this, void 0, void 0, function () {\n                            var _this = this;\n                            var table, changedColumns, newAndOldTableColumns;\n                            return __generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0:\n                                        table = this.queryRunner.loadedTables.find(function (table) { return table.name === metadata.tablePath; });\n                                        if (!table)\n                                            return [2 /*return*/];\n                                        changedColumns = this.connection.driver.findChangedColumns(table.columns, metadata.columns);\n                                        if (changedColumns.length === 0)\n                                            return [2 /*return*/];\n                                        // drop all foreign keys that point to this column\n                                        return [4 /*yield*/, PromiseUtils_1.PromiseUtils.runInSequence(changedColumns, function (changedColumn) { return _this.dropColumnReferencedForeignKeys(metadata.tablePath, changedColumn.databaseName); })];\n                                    case 1:\n                                        // drop all foreign keys that point to this column\n                                        _a.sent();\n                                        // drop all composite indices related to this column\n                                        return [4 /*yield*/, PromiseUtils_1.PromiseUtils.runInSequence(changedColumns, function (changedColumn) { return _this.dropColumnCompositeIndices(metadata.tablePath, changedColumn.databaseName); })];\n                                    case 2:\n                                        // drop all composite indices related to this column\n                                        _a.sent();\n                                        if (!!(this.connection.driver instanceof MysqlDriver_1.MysqlDriver)) return [3 /*break*/, 4];\n                                        return [4 /*yield*/, PromiseUtils_1.PromiseUtils.runInSequence(changedColumns, function (changedColumn) { return _this.dropColumnCompositeUniques(metadata.tablePath, changedColumn.databaseName); })];\n                                    case 3:\n                                        _a.sent();\n                                        _a.label = 4;\n                                    case 4:\n                                        newAndOldTableColumns = changedColumns.map(function (changedColumn) {\n                                            var oldTableColumn = table.columns.find(function (column) { return column.name === changedColumn.databaseName; });\n                                            var newTableColumnOptions = TableUtils_1.TableUtils.createTableColumnOptions(changedColumn, _this.connection.driver);\n                                            var newTableColumn = new TableColumn_1.TableColumn(newTableColumnOptions);\n                                            return {\n                                                oldColumn: oldTableColumn,\n                                                newColumn: newTableColumn\n                                            };\n                                        });\n                                        if (newAndOldTableColumns.length === 0)\n                                            return [2 /*return*/];\n                                        this.connection.logger.logSchemaBuild(\"columns changed in \\\"\" + table.name + \"\\\". updating: \" + changedColumns.map(function (column) { return column.databaseName; }).join(\", \"));\n                                        return [4 /*yield*/, this.queryRunner.changeColumns(table, newAndOldTableColumns)];\n                                    case 5:\n                                        _a.sent();\n                                        return [2 /*return*/];\n                                }\n                            });\n                        }); })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates composite indices which are missing in db yet.\n     */\n    RdbmsSchemaBuilder.prototype.createNewIndices = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, PromiseUtils_1.PromiseUtils.runInSequence(this.entityToSyncMetadatas, function (metadata) { return __awaiter(_this, void 0, void 0, function () {\n                            var table, newIndices;\n                            return __generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0:\n                                        table = this.queryRunner.loadedTables.find(function (table) { return table.name === metadata.tablePath; });\n                                        if (!table)\n                                            return [2 /*return*/];\n                                        newIndices = metadata.indices\n                                            .filter(function (indexMetadata) { return !table.indices.find(function (tableIndex) { return tableIndex.name === indexMetadata.name; }) && indexMetadata.synchronize === true; })\n                                            .map(function (indexMetadata) { return TableIndex_1.TableIndex.create(indexMetadata); });\n                                        if (newIndices.length === 0)\n                                            return [2 /*return*/];\n                                        this.connection.logger.logSchemaBuild(\"adding new indices \" + newIndices.map(function (index) { return \"\\\"\" + index.name + \"\\\"\"; }).join(\", \") + \" in table \\\"\" + table.name + \"\\\"\");\n                                        return [4 /*yield*/, this.queryRunner.createIndices(table, newIndices)];\n                                    case 1:\n                                        _a.sent();\n                                        return [2 /*return*/];\n                                }\n                            });\n                        }); })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    RdbmsSchemaBuilder.prototype.createNewChecks = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        // Mysql does not support check constraints\n                        if (this.connection.driver instanceof MysqlDriver_1.MysqlDriver)\n                            return [2 /*return*/];\n                        return [4 /*yield*/, PromiseUtils_1.PromiseUtils.runInSequence(this.entityToSyncMetadatas, function (metadata) { return __awaiter(_this, void 0, void 0, function () {\n                                var table, newChecks;\n                                return __generator(this, function (_a) {\n                                    switch (_a.label) {\n                                        case 0:\n                                            table = this.queryRunner.loadedTables.find(function (table) { return table.name === metadata.tablePath; });\n                                            if (!table)\n                                                return [2 /*return*/];\n                                            newChecks = metadata.checks\n                                                .filter(function (checkMetadata) { return !table.checks.find(function (tableCheck) { return tableCheck.name === checkMetadata.name; }); })\n                                                .map(function (checkMetadata) { return TableCheck_1.TableCheck.create(checkMetadata); });\n                                            if (newChecks.length === 0)\n                                                return [2 /*return*/];\n                                            this.connection.logger.logSchemaBuild(\"adding new check constraints: \" + newChecks.map(function (index) { return \"\\\"\" + index.name + \"\\\"\"; }).join(\", \") + \" in table \\\"\" + table.name + \"\\\"\");\n                                            return [4 /*yield*/, this.queryRunner.createCheckConstraints(table, newChecks)];\n                                        case 1:\n                                            _a.sent();\n                                            return [2 /*return*/];\n                                    }\n                                });\n                            }); })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates composite uniques which are missing in db yet.\n     */\n    RdbmsSchemaBuilder.prototype.createCompositeUniqueConstraints = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, PromiseUtils_1.PromiseUtils.runInSequence(this.entityToSyncMetadatas, function (metadata) { return __awaiter(_this, void 0, void 0, function () {\n                            var table, compositeUniques;\n                            return __generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0:\n                                        table = this.queryRunner.loadedTables.find(function (table) { return table.name === metadata.tablePath; });\n                                        if (!table)\n                                            return [2 /*return*/];\n                                        compositeUniques = metadata.uniques\n                                            .filter(function (uniqueMetadata) { return uniqueMetadata.columns.length > 1 && !table.uniques.find(function (tableUnique) { return tableUnique.name === uniqueMetadata.name; }); })\n                                            .map(function (uniqueMetadata) { return TableUnique_1.TableUnique.create(uniqueMetadata); });\n                                        if (compositeUniques.length === 0)\n                                            return [2 /*return*/];\n                                        this.connection.logger.logSchemaBuild(\"adding new unique constraints: \" + compositeUniques.map(function (unique) { return \"\\\"\" + unique.name + \"\\\"\"; }).join(\", \") + \" in table \\\"\" + table.name + \"\\\"\");\n                                        return [4 /*yield*/, this.queryRunner.createUniqueConstraints(table, compositeUniques)];\n                                    case 1:\n                                        _a.sent();\n                                        return [2 /*return*/];\n                                }\n                            });\n                        }); })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates foreign keys which does not exist in the table yet.\n     */\n    RdbmsSchemaBuilder.prototype.createForeignKeys = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, PromiseUtils_1.PromiseUtils.runInSequence(this.entityToSyncMetadatas, function (metadata) { return __awaiter(_this, void 0, void 0, function () {\n                            var table, newKeys, dbForeignKeys;\n                            return __generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0:\n                                        table = this.queryRunner.loadedTables.find(function (table) { return table.name === metadata.tablePath; });\n                                        if (!table)\n                                            return [2 /*return*/];\n                                        newKeys = metadata.foreignKeys.filter(function (foreignKey) {\n                                            return !table.foreignKeys.find(function (dbForeignKey) { return dbForeignKey.name === foreignKey.name; });\n                                        });\n                                        if (newKeys.length === 0)\n                                            return [2 /*return*/];\n                                        dbForeignKeys = newKeys.map(function (foreignKeyMetadata) { return TableForeignKey_1.TableForeignKey.create(foreignKeyMetadata); });\n                                        this.connection.logger.logSchemaBuild(\"creating a foreign keys: \" + newKeys.map(function (key) { return key.name; }).join(\", \") + \" on table \\\"\" + table.name + \"\\\"\");\n                                        return [4 /*yield*/, this.queryRunner.createForeignKeys(table, dbForeignKeys)];\n                                    case 1:\n                                        _a.sent();\n                                        return [2 /*return*/];\n                                }\n                            });\n                        }); })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops all foreign keys where given column of the given table is being used.\n     */\n    RdbmsSchemaBuilder.prototype.dropColumnReferencedForeignKeys = function (tablePath, columnName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var table, tablesWithFK, columnForeignKey, clonedTable;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        table = this.queryRunner.loadedTables.find(function (table) { return table.name === tablePath; });\n                        if (!table)\n                            return [2 /*return*/];\n                        tablesWithFK = [];\n                        columnForeignKey = table.foreignKeys.find(function (foreignKey) { return foreignKey.columnNames.indexOf(columnName) !== -1; });\n                        if (columnForeignKey) {\n                            clonedTable = table.clone();\n                            clonedTable.foreignKeys = [columnForeignKey];\n                            tablesWithFK.push(clonedTable);\n                            table.removeForeignKey(columnForeignKey);\n                        }\n                        this.queryRunner.loadedTables.forEach(function (loadedTable) {\n                            var dependForeignKeys = loadedTable.foreignKeys.filter(function (foreignKey) {\n                                return foreignKey.referencedTableName === tablePath && foreignKey.referencedColumnNames.indexOf(columnName) !== -1;\n                            });\n                            if (dependForeignKeys.length > 0) {\n                                var clonedTable = loadedTable.clone();\n                                clonedTable.foreignKeys = dependForeignKeys;\n                                tablesWithFK.push(clonedTable);\n                                dependForeignKeys.forEach(function (dependForeignKey) { return loadedTable.removeForeignKey(dependForeignKey); });\n                            }\n                        });\n                        if (!(tablesWithFK.length > 0)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, PromiseUtils_1.PromiseUtils.runInSequence(tablesWithFK, function (tableWithFK) {\n                                _this.connection.logger.logSchemaBuild(\"dropping related foreign keys of \" + tableWithFK.name + \": \" + tableWithFK.foreignKeys.map(function (foreignKey) { return foreignKey.name; }).join(\", \"));\n                                return _this.queryRunner.dropForeignKeys(tableWithFK, tableWithFK.foreignKeys);\n                            })];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops all composite indices, related to given column.\n     */\n    RdbmsSchemaBuilder.prototype.dropColumnCompositeIndices = function (tablePath, columnName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, relatedIndices;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        table = this.queryRunner.loadedTables.find(function (table) { return table.name === tablePath; });\n                        if (!table)\n                            return [2 /*return*/];\n                        relatedIndices = table.indices.filter(function (index) { return index.columnNames.length > 1 && index.columnNames.indexOf(columnName) !== -1; });\n                        if (relatedIndices.length === 0)\n                            return [2 /*return*/];\n                        this.connection.logger.logSchemaBuild(\"dropping related indices of \\\"\" + tablePath + \"\\\".\\\"\" + columnName + \"\\\": \" + relatedIndices.map(function (index) { return index.name; }).join(\", \"));\n                        return [4 /*yield*/, this.queryRunner.dropIndices(table, relatedIndices)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops all composite uniques, related to given column.\n     */\n    RdbmsSchemaBuilder.prototype.dropColumnCompositeUniques = function (tablePath, columnName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, relatedUniques;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        table = this.queryRunner.loadedTables.find(function (table) { return table.name === tablePath; });\n                        if (!table)\n                            return [2 /*return*/];\n                        relatedUniques = table.uniques.filter(function (unique) { return unique.columnNames.length > 1 && unique.columnNames.indexOf(columnName) !== -1; });\n                        if (relatedUniques.length === 0)\n                            return [2 /*return*/];\n                        this.connection.logger.logSchemaBuild(\"dropping related unique constraints of \\\"\" + tablePath + \"\\\".\\\"\" + columnName + \"\\\": \" + relatedUniques.map(function (unique) { return unique.name; }).join(\", \"));\n                        return [4 /*yield*/, this.queryRunner.dropUniqueConstraints(table, relatedUniques)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates new columns from the given column metadatas.\n     */\n    RdbmsSchemaBuilder.prototype.metadataColumnsToTableColumnOptions = function (columns) {\n        var _this = this;\n        return columns.map(function (columnMetadata) { return TableUtils_1.TableUtils.createTableColumnOptions(columnMetadata, _this.connection.driver); });\n    };\n    return RdbmsSchemaBuilder;\n}());\nexports.RdbmsSchemaBuilder = RdbmsSchemaBuilder;\n\n//# sourceMappingURL=RdbmsSchemaBuilder.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/schema-builder/RdbmsSchemaBuilder.js?");

/***/ }),

/***/ "./node_modules/typeorm/schema-builder/table/Table.js":
/*!************************************************************!*\
  !*** ./node_modules/typeorm/schema-builder/table/Table.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TableColumn_1 = __webpack_require__(/*! ./TableColumn */ \"./node_modules/typeorm/schema-builder/table/TableColumn.js\");\nvar TableIndex_1 = __webpack_require__(/*! ./TableIndex */ \"./node_modules/typeorm/schema-builder/table/TableIndex.js\");\nvar TableForeignKey_1 = __webpack_require__(/*! ./TableForeignKey */ \"./node_modules/typeorm/schema-builder/table/TableForeignKey.js\");\nvar TableUtils_1 = __webpack_require__(/*! ../util/TableUtils */ \"./node_modules/typeorm/schema-builder/util/TableUtils.js\");\nvar TableUnique_1 = __webpack_require__(/*! ./TableUnique */ \"./node_modules/typeorm/schema-builder/table/TableUnique.js\");\nvar TableCheck_1 = __webpack_require__(/*! ./TableCheck */ \"./node_modules/typeorm/schema-builder/table/TableCheck.js\");\n/**\n * Table in the database represented in this class.\n */\nvar Table = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function Table(options) {\n        /**\n         * Table columns.\n         */\n        this.columns = [];\n        /**\n         * Table indices.\n         */\n        this.indices = [];\n        /**\n         * Table foreign keys.\n         */\n        this.foreignKeys = [];\n        /**\n         * Table unique constraints.\n         */\n        this.uniques = [];\n        /**\n         * Table check constraints.\n         */\n        this.checks = [];\n        /**\n         * Indicates if table was just created.\n         * This is needed, for example to check if we need to skip primary keys creation\n         * for new tables.\n         */\n        this.justCreated = false;\n        if (options) {\n            this.name = options.name;\n            if (options.columns)\n                this.columns = options.columns.map(function (column) { return new TableColumn_1.TableColumn(column); });\n            if (options.indices)\n                this.indices = options.indices.map(function (index) { return new TableIndex_1.TableIndex(index); });\n            if (options.foreignKeys)\n                this.foreignKeys = options.foreignKeys.map(function (foreignKey) { return new TableForeignKey_1.TableForeignKey(foreignKey); });\n            if (options.uniques)\n                this.uniques = options.uniques.map(function (unique) { return new TableUnique_1.TableUnique(unique); });\n            if (options.checks)\n                this.checks = options.checks.map(function (check) { return new TableCheck_1.TableCheck(check); });\n            if (options.justCreated !== undefined)\n                this.justCreated = options.justCreated;\n            this.engine = options.engine;\n        }\n    }\n    Object.defineProperty(Table.prototype, \"primaryColumns\", {\n        // -------------------------------------------------------------------------\n        // Accessors\n        // -------------------------------------------------------------------------\n        get: function () {\n            return this.columns.filter(function (column) { return column.isPrimary; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Clones this table to a new table with all properties cloned.\n     */\n    Table.prototype.clone = function () {\n        return new Table({\n            name: this.name,\n            columns: this.columns.map(function (column) { return column.clone(); }),\n            indices: this.indices.map(function (constraint) { return constraint.clone(); }),\n            foreignKeys: this.foreignKeys.map(function (constraint) { return constraint.clone(); }),\n            uniques: this.uniques.map(function (constraint) { return constraint.clone(); }),\n            checks: this.checks.map(function (constraint) { return constraint.clone(); }),\n            justCreated: this.justCreated,\n            engine: this.engine,\n        });\n    };\n    /**\n     * Add column and creates its constraints.\n     */\n    Table.prototype.addColumn = function (column) {\n        this.columns.push(column);\n    };\n    /**\n     * Remove column and its constraints.\n     */\n    Table.prototype.removeColumn = function (column) {\n        var foundColumn = this.columns.find(function (c) { return c.name === column.name; });\n        if (foundColumn)\n            this.columns.splice(this.columns.indexOf(foundColumn), 1);\n    };\n    /**\n     * Adds unique constraint.\n     */\n    Table.prototype.addUniqueConstraint = function (uniqueConstraint) {\n        this.uniques.push(uniqueConstraint);\n        if (uniqueConstraint.columnNames.length === 1) {\n            var uniqueColumn = this.columns.find(function (column) { return column.name === uniqueConstraint.columnNames[0]; });\n            if (uniqueColumn)\n                uniqueColumn.isUnique = true;\n        }\n    };\n    /**\n     * Removes unique constraint.\n     */\n    Table.prototype.removeUniqueConstraint = function (removedUnique) {\n        var foundUnique = this.uniques.find(function (unique) { return unique.name === removedUnique.name; });\n        if (foundUnique) {\n            this.uniques.splice(this.uniques.indexOf(foundUnique), 1);\n            if (foundUnique.columnNames.length === 1) {\n                var uniqueColumn = this.columns.find(function (column) { return column.name === foundUnique.columnNames[0]; });\n                if (uniqueColumn)\n                    uniqueColumn.isUnique = false;\n            }\n        }\n    };\n    /**\n     * Adds check constraint.\n     */\n    Table.prototype.addCheckConstraint = function (checkConstraint) {\n        this.checks.push(checkConstraint);\n    };\n    /**\n     * Removes check constraint.\n     */\n    Table.prototype.removeCheckConstraint = function (removedCheck) {\n        var foundCheck = this.checks.find(function (check) { return check.name === removedCheck.name; });\n        if (foundCheck) {\n            this.checks.splice(this.checks.indexOf(foundCheck), 1);\n        }\n    };\n    /**\n     * Adds foreign keys.\n     */\n    Table.prototype.addForeignKey = function (foreignKey) {\n        this.foreignKeys.push(foreignKey);\n    };\n    /**\n     * Removes foreign key.\n     */\n    Table.prototype.removeForeignKey = function (removedForeignKey) {\n        var fk = this.foreignKeys.find(function (foreignKey) { return foreignKey.name === removedForeignKey.name; });\n        if (fk)\n            this.foreignKeys.splice(this.foreignKeys.indexOf(fk), 1);\n    };\n    /**\n     * Adds index.\n     */\n    Table.prototype.addIndex = function (index, isMysql) {\n        if (isMysql === void 0) { isMysql = false; }\n        this.indices.push(index);\n        // in Mysql unique indices and unique constraints are the same thing\n        // if index is unique and have only one column, we mark this column as unique\n        if (index.columnNames.length === 1 && index.isUnique && isMysql) {\n            var column = this.columns.find(function (c) { return c.name === index.columnNames[0]; });\n            if (column)\n                column.isUnique = true;\n        }\n    };\n    /**\n     * Removes index.\n     */\n    Table.prototype.removeIndex = function (tableIndex, isMysql) {\n        if (isMysql === void 0) { isMysql = false; }\n        var index = this.indices.find(function (index) { return index.name === tableIndex.name; });\n        if (index) {\n            this.indices.splice(this.indices.indexOf(index), 1);\n            // in Mysql unique indices and unique constraints are the same thing\n            // if index is unique and have only one column, we move `unique` attribute from its column\n            if (index.columnNames.length === 1 && index.isUnique && isMysql) {\n                var column = this.columns.find(function (c) { return c.name === index.columnNames[0]; });\n                if (column)\n                    column.isUnique = false;\n            }\n        }\n    };\n    Table.prototype.findColumnByName = function (name) {\n        return this.columns.find(function (column) { return column.name === name; });\n    };\n    /**\n     * Returns all column indices.\n     */\n    Table.prototype.findColumnIndices = function (column) {\n        return this.indices.filter(function (index) {\n            return !!index.columnNames.find(function (columnName) { return columnName === column.name; });\n        });\n    };\n    /**\n     * Returns all column foreign keys.\n     */\n    Table.prototype.findColumnForeignKeys = function (column) {\n        return this.foreignKeys.filter(function (foreignKey) {\n            return !!foreignKey.columnNames.find(function (columnName) { return columnName === column.name; });\n        });\n    };\n    /**\n     * Returns all column uniques.\n     */\n    Table.prototype.findColumnUniques = function (column) {\n        return this.uniques.filter(function (unique) {\n            return !!unique.columnNames.find(function (columnName) { return columnName === column.name; });\n        });\n    };\n    /**\n     * Returns all column checks.\n     */\n    Table.prototype.findColumnChecks = function (column) {\n        return this.checks.filter(function (check) {\n            return !!check.columnNames.find(function (columnName) { return columnName === column.name; });\n        });\n    };\n    // -------------------------------------------------------------------------\n    // Static Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates table from a given entity metadata.\n     */\n    Table.create = function (entityMetadata, driver) {\n        var options = {\n            name: driver.buildTableName(entityMetadata.tableName, entityMetadata.schema, entityMetadata.database),\n            engine: entityMetadata.engine,\n            columns: entityMetadata.columns\n                .filter(function (column) { return column; })\n                .map(function (column) { return TableUtils_1.TableUtils.createTableColumnOptions(column, driver); }),\n            indices: entityMetadata.indices\n                .filter(function (index) { return index.synchronize === true; })\n                .map(function (index) { return TableIndex_1.TableIndex.create(index); }),\n            uniques: entityMetadata.uniques.map(function (unique) { return TableUnique_1.TableUnique.create(unique); }),\n            checks: entityMetadata.checks.map(function (check) { return TableCheck_1.TableCheck.create(check); }),\n        };\n        return new Table(options);\n    };\n    return Table;\n}());\nexports.Table = Table;\n\n//# sourceMappingURL=Table.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/schema-builder/table/Table.js?");

/***/ }),

/***/ "./node_modules/typeorm/schema-builder/table/TableCheck.js":
/*!*****************************************************************!*\
  !*** ./node_modules/typeorm/schema-builder/table/TableCheck.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Database's table check constraint stored in this class.\n */\nvar TableCheck = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function TableCheck(options) {\n        /**\n         * Column that contains this constraint.\n         */\n        this.columnNames = [];\n        this.name = options.name;\n        this.columnNames = options.columnNames;\n        this.expression = options.expression;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates a new copy of this constraint with exactly same properties.\n     */\n    TableCheck.prototype.clone = function () {\n        return new TableCheck({\n            name: this.name,\n            columnNames: this.columnNames ? __spread(this.columnNames) : [],\n            expression: this.expression,\n        });\n    };\n    // -------------------------------------------------------------------------\n    // Static Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates checks from the check metadata object.\n     */\n    TableCheck.create = function (checkMetadata) {\n        return new TableCheck({\n            name: checkMetadata.name,\n            expression: checkMetadata.expression\n        });\n    };\n    return TableCheck;\n}());\nexports.TableCheck = TableCheck;\n\n//# sourceMappingURL=TableCheck.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/schema-builder/table/TableCheck.js?");

/***/ }),

/***/ "./node_modules/typeorm/schema-builder/table/TableColumn.js":
/*!******************************************************************!*\
  !*** ./node_modules/typeorm/schema-builder/table/TableColumn.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Table's columns in the database represented in this class.\n */\nvar TableColumn = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function TableColumn(options) {\n        /**\n         * Indicates if column is NULL, or is NOT NULL in the database.\n         */\n        this.isNullable = false;\n        /**\n         * Indicates if column is auto-generated sequence.\n         */\n        this.isGenerated = false;\n        /**\n         * Indicates if column is a primary key.\n         */\n        this.isPrimary = false;\n        /**\n         * Indicates if column has unique value.\n         */\n        this.isUnique = false;\n        /**\n         * Indicates if column stores array.\n         */\n        this.isArray = false;\n        /**\n         * Column type's length. Used only on some column types.\n         * For example type = \"string\" and length = \"100\" means that ORM will create a column with type varchar(100).\n         */\n        this.length = \"\";\n        /**\n         * Puts ZEROFILL attribute on to numeric column. Works only for MySQL.\n         * If you specify ZEROFILL for a numeric column, MySQL automatically adds the UNSIGNED attribute to the column\n         */\n        this.zerofill = false;\n        /**\n         * Puts UNSIGNED attribute on to numeric column. Works only for MySQL.\n         */\n        this.unsigned = false;\n        if (options) {\n            this.name = options.name;\n            this.type = options.type || \"\";\n            this.length = options.length || \"\";\n            this.width = options.width;\n            this.charset = options.charset;\n            this.collation = options.collation;\n            this.precision = options.precision;\n            this.scale = options.scale;\n            this.zerofill = options.zerofill || false;\n            this.unsigned = this.zerofill ? true : (options.unsigned || false);\n            this.default = options.default;\n            this.onUpdate = options.onUpdate;\n            this.isNullable = options.isNullable || false;\n            this.isGenerated = options.isGenerated || false;\n            this.generationStrategy = options.generationStrategy;\n            this.isPrimary = options.isPrimary || false;\n            this.isUnique = options.isUnique || false;\n            this.isArray = options.isArray || false;\n            this.comment = options.comment;\n            this.enum = options.enum;\n            this.asExpression = options.asExpression;\n            this.generatedType = options.generatedType;\n            this.spatialFeatureType = options.spatialFeatureType;\n            this.srid = options.srid;\n        }\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Clones this column to a new column with exact same properties as this column has.\n     */\n    TableColumn.prototype.clone = function () {\n        return new TableColumn({\n            name: this.name,\n            type: this.type,\n            length: this.length,\n            width: this.width,\n            charset: this.charset,\n            collation: this.collation,\n            precision: this.precision,\n            scale: this.scale,\n            zerofill: this.zerofill,\n            unsigned: this.unsigned,\n            enum: this.enum,\n            asExpression: this.asExpression,\n            generatedType: this.generatedType,\n            default: this.default,\n            onUpdate: this.onUpdate,\n            isNullable: this.isNullable,\n            isGenerated: this.isGenerated,\n            generationStrategy: this.generationStrategy,\n            isPrimary: this.isPrimary,\n            isUnique: this.isUnique,\n            isArray: this.isArray,\n            comment: this.comment,\n            spatialFeatureType: this.spatialFeatureType,\n            srid: this.srid\n        });\n    };\n    return TableColumn;\n}());\nexports.TableColumn = TableColumn;\n\n//# sourceMappingURL=TableColumn.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/schema-builder/table/TableColumn.js?");

/***/ }),

/***/ "./node_modules/typeorm/schema-builder/table/TableForeignKey.js":
/*!**********************************************************************!*\
  !*** ./node_modules/typeorm/schema-builder/table/TableForeignKey.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Foreign key from the database stored in this class.\n */\nvar TableForeignKey = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function TableForeignKey(options) {\n        /**\n         * Column names which included by this foreign key.\n         */\n        this.columnNames = [];\n        /**\n         * Column names which included by this foreign key.\n         */\n        this.referencedColumnNames = [];\n        this.name = options.name;\n        this.columnNames = options.columnNames;\n        this.referencedColumnNames = options.referencedColumnNames;\n        this.referencedTableName = options.referencedTableName;\n        this.onDelete = options.onDelete;\n        this.onUpdate = options.onUpdate;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates a new copy of this foreign key with exactly same properties.\n     */\n    TableForeignKey.prototype.clone = function () {\n        return new TableForeignKey({\n            name: this.name,\n            columnNames: __spread(this.columnNames),\n            referencedColumnNames: __spread(this.referencedColumnNames),\n            referencedTableName: this.referencedTableName,\n            onDelete: this.onDelete,\n            onUpdate: this.onUpdate\n        });\n    };\n    // -------------------------------------------------------------------------\n    // Static Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates a new table foreign key from the given foreign key metadata.\n     */\n    TableForeignKey.create = function (metadata) {\n        return new TableForeignKey({\n            name: metadata.name,\n            columnNames: metadata.columnNames,\n            referencedColumnNames: metadata.referencedColumnNames,\n            referencedTableName: metadata.referencedTablePath,\n            onDelete: metadata.onDelete,\n            onUpdate: metadata.onUpdate\n        });\n    };\n    return TableForeignKey;\n}());\nexports.TableForeignKey = TableForeignKey;\n\n//# sourceMappingURL=TableForeignKey.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/schema-builder/table/TableForeignKey.js?");

/***/ }),

/***/ "./node_modules/typeorm/schema-builder/table/TableIndex.js":
/*!*****************************************************************!*\
  !*** ./node_modules/typeorm/schema-builder/table/TableIndex.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Database's table index stored in this class.\n */\nvar TableIndex = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function TableIndex(options) {\n        /**\n         * Columns included in this index.\n         */\n        this.columnNames = [];\n        this.name = options.name;\n        this.columnNames = options.columnNames;\n        this.isUnique = options.isUnique;\n        this.isSpatial = options.isSpatial;\n        this.isFulltext = options.isFulltext;\n        this.where = options.where;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates a new copy of this index with exactly same properties.\n     */\n    TableIndex.prototype.clone = function () {\n        return new TableIndex({\n            name: this.name,\n            columnNames: __spread(this.columnNames),\n            isUnique: this.isUnique,\n            isSpatial: this.isSpatial,\n            isFulltext: this.isFulltext,\n            where: this.where\n        });\n    };\n    // -------------------------------------------------------------------------\n    // Static Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates index from the index metadata object.\n     */\n    TableIndex.create = function (indexMetadata) {\n        return new TableIndex({\n            name: indexMetadata.name,\n            columnNames: indexMetadata.columns.map(function (column) { return column.databaseName; }),\n            isUnique: indexMetadata.isUnique,\n            isSpatial: indexMetadata.isSpatial,\n            isFulltext: indexMetadata.isFulltext,\n            where: indexMetadata.where\n        });\n    };\n    return TableIndex;\n}());\nexports.TableIndex = TableIndex;\n\n//# sourceMappingURL=TableIndex.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/schema-builder/table/TableIndex.js?");

/***/ }),

/***/ "./node_modules/typeorm/schema-builder/table/TableUnique.js":
/*!******************************************************************!*\
  !*** ./node_modules/typeorm/schema-builder/table/TableUnique.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Database's table unique constraint stored in this class.\n */\nvar TableUnique = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function TableUnique(options) {\n        /**\n         * Columns that contains this constraint.\n         */\n        this.columnNames = [];\n        this.name = options.name;\n        this.columnNames = options.columnNames;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates a new copy of this constraint with exactly same properties.\n     */\n    TableUnique.prototype.clone = function () {\n        return new TableUnique({\n            name: this.name,\n            columnNames: __spread(this.columnNames)\n        });\n    };\n    // -------------------------------------------------------------------------\n    // Static Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates unique from the unique metadata object.\n     */\n    TableUnique.create = function (uniqueMetadata) {\n        return new TableUnique({\n            name: uniqueMetadata.name,\n            columnNames: uniqueMetadata.columns.map(function (column) { return column.databaseName; })\n        });\n    };\n    return TableUnique;\n}());\nexports.TableUnique = TableUnique;\n\n//# sourceMappingURL=TableUnique.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/schema-builder/table/TableUnique.js?");

/***/ }),

/***/ "./node_modules/typeorm/schema-builder/util/TableUtils.js":
/*!****************************************************************!*\
  !*** ./node_modules/typeorm/schema-builder/util/TableUtils.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TableUtils = /** @class */ (function () {\n    function TableUtils() {\n    }\n    TableUtils.createTableColumnOptions = function (columnMetadata, driver) {\n        return {\n            name: columnMetadata.databaseName,\n            length: columnMetadata.length,\n            width: columnMetadata.width,\n            charset: columnMetadata.charset,\n            collation: columnMetadata.collation,\n            precision: columnMetadata.precision,\n            scale: columnMetadata.scale,\n            zerofill: columnMetadata.zerofill,\n            unsigned: columnMetadata.unsigned,\n            asExpression: columnMetadata.asExpression,\n            generatedType: columnMetadata.generatedType,\n            default: driver.normalizeDefault(columnMetadata),\n            onUpdate: columnMetadata.onUpdate,\n            comment: columnMetadata.comment,\n            isGenerated: columnMetadata.isGenerated,\n            generationStrategy: columnMetadata.generationStrategy,\n            isNullable: columnMetadata.isNullable,\n            type: driver.normalizeType(columnMetadata),\n            isPrimary: columnMetadata.isPrimary,\n            isUnique: driver.normalizeIsUnique(columnMetadata),\n            isArray: columnMetadata.isArray || false,\n            enum: columnMetadata.enum,\n            spatialFeatureType: columnMetadata.spatialFeatureType,\n            srid: columnMetadata.srid\n        };\n    };\n    return TableUtils;\n}());\nexports.TableUtils = TableUtils;\n\n//# sourceMappingURL=TableUtils.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/schema-builder/util/TableUtils.js?");

/***/ }),

/***/ "./node_modules/typeorm/subscriber/Broadcaster.js":
/*!********************************************************!*\
  !*** ./node_modules/typeorm/subscriber/Broadcaster.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Broadcaster provides a helper methods to broadcast events to the subscribers.\n */\nvar Broadcaster = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function Broadcaster(queryRunner) {\n        this.queryRunner = queryRunner;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Broadcasts \"BEFORE_INSERT\" event.\n     * Before insert event is executed before entity is being inserted to the database for the first time.\n     * All subscribers and entity listeners who listened to this event will be executed at this point.\n     * Subscribers and entity listeners can return promises, it will wait until they are resolved.\n     *\n     * Note: this method has a performance-optimized code organization, do not change code structure.\n     */\n    Broadcaster.prototype.broadcastBeforeInsertEvent = function (result, metadata, entity) {\n        var _this = this;\n        if (entity && metadata.beforeInsertListeners.length) {\n            metadata.beforeInsertListeners.forEach(function (listener) {\n                if (listener.isAllowed(entity)) {\n                    var executionResult = listener.execute(entity);\n                    if (executionResult instanceof Promise)\n                        result.promises.push(executionResult);\n                    result.count++;\n                }\n            });\n        }\n        if (this.queryRunner.connection.subscribers.length) {\n            this.queryRunner.connection.subscribers.forEach(function (subscriber) {\n                if (_this.isAllowedSubscriber(subscriber, metadata.target) && subscriber.beforeInsert) {\n                    var executionResult = subscriber.beforeInsert({\n                        connection: _this.queryRunner.connection,\n                        queryRunner: _this.queryRunner,\n                        manager: _this.queryRunner.manager,\n                        entity: entity\n                    });\n                    if (executionResult instanceof Promise)\n                        result.promises.push(executionResult);\n                    result.count++;\n                }\n            });\n        }\n    };\n    /**\n     * Broadcasts \"BEFORE_UPDATE\" event.\n     * Before update event is executed before entity is being updated in the database.\n     * All subscribers and entity listeners who listened to this event will be executed at this point.\n     * Subscribers and entity listeners can return promises, it will wait until they are resolved.\n     *\n     * Note: this method has a performance-optimized code organization, do not change code structure.\n     */\n    Broadcaster.prototype.broadcastBeforeUpdateEvent = function (result, metadata, entity, databaseEntity) {\n        var _this = this;\n        if (entity && metadata.beforeUpdateListeners.length) {\n            metadata.beforeUpdateListeners.forEach(function (listener) {\n                if (listener.isAllowed(entity)) {\n                    var executionResult = listener.execute(entity);\n                    if (executionResult instanceof Promise)\n                        result.promises.push(executionResult);\n                    result.count++;\n                }\n            });\n        }\n        if (this.queryRunner.connection.subscribers.length) {\n            this.queryRunner.connection.subscribers.forEach(function (subscriber) {\n                if (_this.isAllowedSubscriber(subscriber, metadata.target) && subscriber.beforeUpdate) {\n                    var executionResult = subscriber.beforeUpdate({\n                        connection: _this.queryRunner.connection,\n                        queryRunner: _this.queryRunner,\n                        manager: _this.queryRunner.manager,\n                        entity: entity,\n                        databaseEntity: databaseEntity,\n                        updatedColumns: [],\n                        updatedRelations: [] // subject.diffRelations,\n                    });\n                    if (executionResult instanceof Promise)\n                        result.promises.push(executionResult);\n                    result.count++;\n                }\n            });\n        }\n    };\n    /**\n     * Broadcasts \"BEFORE_REMOVE\" event.\n     * Before remove event is executed before entity is being removed from the database.\n     * All subscribers and entity listeners who listened to this event will be executed at this point.\n     * Subscribers and entity listeners can return promises, it will wait until they are resolved.\n     *\n     * Note: this method has a performance-optimized code organization, do not change code structure.\n     */\n    Broadcaster.prototype.broadcastBeforeRemoveEvent = function (result, metadata, entity, databaseEntity) {\n        var _this = this;\n        if (entity && metadata.beforeRemoveListeners.length) {\n            metadata.beforeRemoveListeners.forEach(function (listener) {\n                if (listener.isAllowed(entity)) {\n                    var executionResult = listener.execute(entity);\n                    if (executionResult instanceof Promise)\n                        result.promises.push(executionResult);\n                    result.count++;\n                }\n            });\n        }\n        if (this.queryRunner.connection.subscribers.length) {\n            this.queryRunner.connection.subscribers.forEach(function (subscriber) {\n                if (_this.isAllowedSubscriber(subscriber, metadata.target) && subscriber.beforeRemove) {\n                    var executionResult = subscriber.beforeRemove({\n                        connection: _this.queryRunner.connection,\n                        queryRunner: _this.queryRunner,\n                        manager: _this.queryRunner.manager,\n                        entity: entity,\n                        databaseEntity: databaseEntity,\n                        entityId: metadata.getEntityIdMixedMap(databaseEntity)\n                    });\n                    if (executionResult instanceof Promise)\n                        result.promises.push(executionResult);\n                    result.count++;\n                }\n            });\n        }\n    };\n    /**\n     * Broadcasts \"AFTER_INSERT\" event.\n     * After insert event is executed after entity is being persisted to the database for the first time.\n     * All subscribers and entity listeners who listened to this event will be executed at this point.\n     * Subscribers and entity listeners can return promises, it will wait until they are resolved.\n     *\n     * Note: this method has a performance-optimized code organization, do not change code structure.\n     */\n    Broadcaster.prototype.broadcastAfterInsertEvent = function (result, metadata, entity) {\n        var _this = this;\n        if (entity && metadata.afterInsertListeners.length) {\n            metadata.afterInsertListeners.forEach(function (listener) {\n                if (listener.isAllowed(entity)) {\n                    var executionResult = listener.execute(entity);\n                    if (executionResult instanceof Promise)\n                        result.promises.push(executionResult);\n                    result.count++;\n                }\n            });\n        }\n        if (this.queryRunner.connection.subscribers.length) {\n            this.queryRunner.connection.subscribers.forEach(function (subscriber) {\n                if (_this.isAllowedSubscriber(subscriber, metadata.target) && subscriber.afterInsert) {\n                    var executionResult = subscriber.afterInsert({\n                        connection: _this.queryRunner.connection,\n                        queryRunner: _this.queryRunner,\n                        manager: _this.queryRunner.manager,\n                        entity: entity\n                    });\n                    if (executionResult instanceof Promise)\n                        result.promises.push(executionResult);\n                    result.count++;\n                }\n            });\n        }\n    };\n    /**\n     * Broadcasts \"AFTER_UPDATE\" event.\n     * After update event is executed after entity is being updated in the database.\n     * All subscribers and entity listeners who listened to this event will be executed at this point.\n     * Subscribers and entity listeners can return promises, it will wait until they are resolved.\n     *\n     * Note: this method has a performance-optimized code organization, do not change code structure.\n     */\n    Broadcaster.prototype.broadcastAfterUpdateEvent = function (result, metadata, entity, databaseEntity) {\n        var _this = this;\n        if (entity && metadata.afterUpdateListeners.length) {\n            metadata.afterUpdateListeners.forEach(function (listener) {\n                if (listener.isAllowed(entity)) {\n                    var executionResult = listener.execute(entity);\n                    if (executionResult instanceof Promise)\n                        result.promises.push(executionResult);\n                    result.count++;\n                }\n            });\n        }\n        if (this.queryRunner.connection.subscribers.length) {\n            this.queryRunner.connection.subscribers.forEach(function (subscriber) {\n                if (_this.isAllowedSubscriber(subscriber, metadata.target) && subscriber.afterUpdate) {\n                    var executionResult = subscriber.afterUpdate({\n                        connection: _this.queryRunner.connection,\n                        queryRunner: _this.queryRunner,\n                        manager: _this.queryRunner.manager,\n                        entity: entity,\n                        databaseEntity: databaseEntity,\n                        updatedColumns: [],\n                        updatedRelations: [] // todo: subject.diffRelations,\n                    });\n                    if (executionResult instanceof Promise)\n                        result.promises.push(executionResult);\n                    result.count++;\n                }\n            });\n        }\n    };\n    /**\n     * Broadcasts \"AFTER_REMOVE\" event.\n     * After remove event is executed after entity is being removed from the database.\n     * All subscribers and entity listeners who listened to this event will be executed at this point.\n     * Subscribers and entity listeners can return promises, it will wait until they are resolved.\n     *\n     * Note: this method has a performance-optimized code organization, do not change code structure.\n     */\n    Broadcaster.prototype.broadcastAfterRemoveEvent = function (result, metadata, entity, databaseEntity) {\n        var _this = this;\n        if (entity && metadata.afterRemoveListeners.length) {\n            metadata.afterRemoveListeners.forEach(function (listener) {\n                if (listener.isAllowed(entity)) {\n                    var executionResult = listener.execute(entity);\n                    if (executionResult instanceof Promise)\n                        result.promises.push(executionResult);\n                    result.count++;\n                }\n            });\n        }\n        if (this.queryRunner.connection.subscribers.length) {\n            this.queryRunner.connection.subscribers.forEach(function (subscriber) {\n                if (_this.isAllowedSubscriber(subscriber, metadata.target) && subscriber.afterRemove) {\n                    var executionResult = subscriber.afterRemove({\n                        connection: _this.queryRunner.connection,\n                        queryRunner: _this.queryRunner,\n                        manager: _this.queryRunner.manager,\n                        entity: entity,\n                        databaseEntity: databaseEntity,\n                        entityId: metadata.getEntityIdMixedMap(databaseEntity)\n                    });\n                    if (executionResult instanceof Promise)\n                        result.promises.push(executionResult);\n                    result.count++;\n                }\n            });\n        }\n    };\n    /**\n     * Broadcasts \"AFTER_LOAD\" event for all given entities, and their sub-entities.\n     * After load event is executed after entity has been loaded from the database.\n     * All subscribers and entity listeners who listened to this event will be executed at this point.\n     * Subscribers and entity listeners can return promises, it will wait until they are resolved.\n     *\n     * Note: this method has a performance-optimized code organization, do not change code structure.\n     */\n    Broadcaster.prototype.broadcastLoadEventsForAll = function (result, metadata, entities) {\n        var _this = this;\n        entities.forEach(function (entity) {\n            if (entity instanceof Promise) // todo: check why need this?\n                return;\n            // collect load events for all children entities that were loaded with the main entity\n            if (metadata.relations.length) {\n                metadata.relations.forEach(function (relation) {\n                    // in lazy relations we cannot simply access to entity property because it will cause a getter and a database query\n                    if (relation.isLazy && !entity.hasOwnProperty(relation.propertyName))\n                        return;\n                    var value = relation.getEntityValue(entity);\n                    if (value instanceof Object)\n                        _this.broadcastLoadEventsForAll(result, relation.inverseEntityMetadata, value instanceof Array ? value : [value]);\n                });\n            }\n            if (metadata.afterLoadListeners.length) {\n                metadata.afterLoadListeners.forEach(function (listener) {\n                    if (listener.isAllowed(entity)) {\n                        var executionResult = listener.execute(entity);\n                        if (executionResult instanceof Promise)\n                            result.promises.push(executionResult);\n                        result.count++;\n                    }\n                });\n            }\n            if (_this.queryRunner.connection.subscribers.length) {\n                _this.queryRunner.connection.subscribers.forEach(function (subscriber) {\n                    if (_this.isAllowedSubscriber(subscriber, metadata.target) && subscriber.afterLoad) {\n                        var executionResult = subscriber.afterLoad(entity);\n                        if (executionResult instanceof Promise)\n                            result.promises.push(executionResult);\n                        result.count++;\n                    }\n                });\n            }\n        });\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Checks if subscriber's methods can be executed by checking if its don't listen to the particular entity,\n     * or listens our entity.\n     */\n    Broadcaster.prototype.isAllowedSubscriber = function (subscriber, target) {\n        return !subscriber.listenTo ||\n            !subscriber.listenTo() ||\n            subscriber.listenTo() === Object ||\n            subscriber.listenTo() === target ||\n            subscriber.listenTo().isPrototypeOf(target);\n    };\n    return Broadcaster;\n}());\nexports.Broadcaster = Broadcaster;\n\n//# sourceMappingURL=Broadcaster.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/subscriber/Broadcaster.js?");

/***/ }),

/***/ "./node_modules/typeorm/subscriber/BroadcasterResult.js":
/*!**************************************************************!*\
  !*** ./node_modules/typeorm/subscriber/BroadcasterResult.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Broadcaster execution result - promises executed by operations and number of executed listeners and subscribers.\n */\nvar BroadcasterResult = /** @class */ (function () {\n    function BroadcasterResult() {\n        /**\n         * Number of executed listeners and subscribers.\n         */\n        this.count = 0;\n        /**\n         * Promises returned by listeners and subscribers which needs to be awaited.\n         */\n        this.promises = [];\n    }\n    return BroadcasterResult;\n}());\nexports.BroadcasterResult = BroadcasterResult;\n\n//# sourceMappingURL=BroadcasterResult.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/subscriber/BroadcasterResult.js?");

/***/ }),

/***/ "./node_modules/typeorm/util/DateUtils.js":
/*!************************************************!*\
  !*** ./node_modules/typeorm/util/DateUtils.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Provides utilities to transform hydrated and persisted data.\n */\nvar DateUtils = /** @class */ (function () {\n    function DateUtils() {\n    }\n    // -------------------------------------------------------------------------\n    // Public Static Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Normalizes date object hydrated from the database.\n     */\n    DateUtils.normalizeHydratedDate = function (mixedDate) {\n        if (!mixedDate)\n            return mixedDate;\n        return typeof mixedDate === \"string\" ? new Date(mixedDate) : mixedDate;\n    };\n    /**\n     * Converts given value into date string in a \"YYYY-MM-DD\" format.\n     */\n    DateUtils.mixedDateToDateString = function (value) {\n        if (value instanceof Date)\n            return this.formatZerolessValue(value.getFullYear()) + \"-\" + this.formatZerolessValue(value.getMonth() + 1) + \"-\" + this.formatZerolessValue(value.getDate());\n        return value;\n    };\n    /**\n     * Converts given value into date object.\n     */\n    DateUtils.mixedDateToDate = function (mixedDate, toUtc, useMilliseconds) {\n        if (toUtc === void 0) { toUtc = false; }\n        if (useMilliseconds === void 0) { useMilliseconds = true; }\n        var date = typeof mixedDate === \"string\" ? new Date(mixedDate) : mixedDate;\n        if (toUtc)\n            date = new Date(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());\n        if (!useMilliseconds)\n            date.setUTCMilliseconds(0);\n        return date;\n    };\n    /**\n     * Converts given value into time string in a \"HH:mm:ss\" format.\n     */\n    DateUtils.mixedDateToTimeString = function (value, skipSeconds) {\n        if (skipSeconds === void 0) { skipSeconds = false; }\n        if (value instanceof Date)\n            return this.formatZerolessValue(value.getHours()) +\n                \":\" + this.formatZerolessValue(value.getMinutes()) +\n                (!skipSeconds ? \":\" + this.formatZerolessValue(value.getSeconds()) : \"\");\n        return value;\n    };\n    /**\n     * Converts given value into time string in a \"HH:mm:ss\" format.\n     */\n    DateUtils.mixedTimeToDate = function (value) {\n        if (typeof value === \"string\") {\n            var _a = __read(value.split(\":\"), 3), hours = _a[0], minutes = _a[1], seconds = _a[2];\n            var date = new Date();\n            if (hours)\n                date.setHours(parseInt(hours));\n            if (minutes)\n                date.setMinutes(parseInt(minutes));\n            if (seconds)\n                date.setSeconds(parseInt(seconds));\n            return date;\n        }\n        return value;\n    };\n    /**\n     * Converts given string value with \"-\" separator into a \"HH:mm:ss\" format.\n     */\n    DateUtils.mixedTimeToString = function (value, skipSeconds) {\n        if (skipSeconds === void 0) { skipSeconds = false; }\n        value = value instanceof Date ? (value.getHours() + \":\" + value.getMinutes() + (!skipSeconds ? \":\" + value.getSeconds() : \"\")) : value;\n        if (typeof value === \"string\") {\n            return value.split(\":\")\n                .map(function (v) { return v.length === 1 ? \"0\" + v : v; }) // append zero at beginning if we have a first-zero-less number\n                .join(\":\");\n        }\n        return value;\n    };\n    /**\n     * Converts given value into datetime string in a \"YYYY-MM-DD HH-mm-ss\" format.\n     */\n    DateUtils.mixedDateToDatetimeString = function (value) {\n        if (typeof value === \"string\") {\n            value = new Date(value);\n        }\n        if (value instanceof Date) {\n            return this.formatZerolessValue(value.getFullYear()) + \"-\" +\n                this.formatZerolessValue(value.getMonth() + 1) + \"-\" +\n                this.formatZerolessValue(value.getDate()) + \" \" +\n                this.formatZerolessValue(value.getHours()) + \":\" +\n                this.formatZerolessValue(value.getMinutes()) + \":\" +\n                this.formatZerolessValue(value.getSeconds()) + \".\" +\n                this.formatMilliseconds(value.getMilliseconds());\n        }\n        return value;\n    };\n    /**\n     * Converts given value into utc datetime string in a \"YYYY-MM-DD HH-mm-ss\" format.\n     */\n    DateUtils.mixedDateToUtcDatetimeString = function (value) {\n        if (typeof value === \"string\") {\n            value = new Date(value);\n        }\n        if (value instanceof Date) {\n            return this.formatZerolessValue(value.getUTCFullYear()) + \"-\" +\n                this.formatZerolessValue(value.getUTCMonth() + 1) + \"-\" +\n                this.formatZerolessValue(value.getUTCDate()) + \" \" +\n                this.formatZerolessValue(value.getUTCHours()) + \":\" +\n                this.formatZerolessValue(value.getUTCMinutes()) + \":\" +\n                this.formatZerolessValue(value.getUTCSeconds()) + \".\" +\n                this.formatMilliseconds(value.getUTCMilliseconds());\n        }\n        return value;\n    };\n    /**\n     * Converts each item in the given array to string joined by \",\" separator.\n     */\n    DateUtils.simpleArrayToString = function (value) {\n        if (value instanceof Array) {\n            return value\n                .map(function (i) { return String(i); })\n                .join(\",\");\n        }\n        return value;\n    };\n    /**\n     * Converts given string to simple array split by \",\" separator.\n     */\n    DateUtils.stringToSimpleArray = function (value) {\n        if (value instanceof String || typeof value === \"string\") {\n            if (value.length > 0) {\n                return value.split(\",\");\n            }\n            else {\n                return [];\n            }\n        }\n        return value;\n    };\n    DateUtils.simpleJsonToString = function (value) {\n        return JSON.stringify(value);\n    };\n    DateUtils.stringToSimpleJson = function (value) {\n        return typeof value === \"string\" ? JSON.parse(value) : value;\n    };\n    // -------------------------------------------------------------------------\n    // Private Static Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Formats given number to \"0x\" format, e.g. if it is 1 then it will return \"01\".\n     */\n    DateUtils.formatZerolessValue = function (value) {\n        if (value < 10)\n            return \"0\" + value;\n        return String(value);\n    };\n    /**\n     * Formats given number to \"0x\" format, e.g. if it is 1 then it will return \"01\".\n     */\n    DateUtils.formatMilliseconds = function (value) {\n        if (value < 10) {\n            return \"00\" + value;\n        }\n        else if (value < 100) {\n            return \"0\" + value;\n        }\n        else {\n            return String(value);\n        }\n    };\n    return DateUtils;\n}());\nexports.DateUtils = DateUtils;\n\n//# sourceMappingURL=DateUtils.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/util/DateUtils.js?");

/***/ }),

/***/ "./node_modules/typeorm/util/DepGraph.js":
/*!***********************************************!*\
  !*** ./node_modules/typeorm/util/DepGraph.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/**\n * This source code is from https://github.com/jriecken/dependency-graph\n * Just added \"any\" types here, wrapper everything into exported class.\n * We cant use a package itself because we want to package \"everything-in-it\" for the frontend users of TypeORM.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * A simple dependency graph\n */\n/**\n * Helper for creating a Depth-First-Search on\n * a set of edges.\n *\n * Detects cycles and throws an Error if one is detected.\n *\n * @param edges The set of edges to DFS through\n * @param leavesOnly Whether to only return \"leaf\" nodes (ones who have no edges)\n * @param result An array in which the results will be populated\n */\nfunction createDFS(edges, leavesOnly, result) {\n    var currentPath = [];\n    var visited = {};\n    return function DFS(currentNode) {\n        visited[currentNode] = true;\n        currentPath.push(currentNode);\n        edges[currentNode].forEach(function (node) {\n            if (!visited[node]) {\n                DFS(node);\n            }\n            else if (currentPath.indexOf(node) >= 0) {\n                currentPath.push(node);\n                throw new Error(\"Dependency Cycle Found: \" + currentPath.join(\" -> \"));\n            }\n        });\n        currentPath.pop();\n        if ((!leavesOnly || edges[currentNode].length === 0) && result.indexOf(currentNode) === -1) {\n            result.push(currentNode);\n        }\n    };\n}\nvar DepGraph = /** @class */ (function () {\n    function DepGraph() {\n        this.nodes = {};\n        this.outgoingEdges = {}; // Node -> [Dependency Node]\n        this.incomingEdges = {}; // Node -> [Dependant Node]\n    }\n    /**\n     * Add a node to the dependency graph. If a node already exists, this method will do nothing.\n     */\n    DepGraph.prototype.addNode = function (node, data) {\n        if (!this.hasNode(node)) {\n            // Checking the arguments length allows the user to add a node with undefined data\n            if (arguments.length === 2) {\n                this.nodes[node] = data;\n            }\n            else {\n                this.nodes[node] = node;\n            }\n            this.outgoingEdges[node] = [];\n            this.incomingEdges[node] = [];\n        }\n    };\n    /**\n     * Remove a node from the dependency graph. If a node does not exist, this method will do nothing.\n     */\n    DepGraph.prototype.removeNode = function (node) {\n        if (this.hasNode(node)) {\n            delete this.nodes[node];\n            delete this.outgoingEdges[node];\n            delete this.incomingEdges[node];\n            [this.incomingEdges, this.outgoingEdges].forEach(function (edgeList) {\n                Object.keys(edgeList).forEach(function (key) {\n                    var idx = edgeList[key].indexOf(node);\n                    if (idx >= 0) {\n                        edgeList[key].splice(idx, 1);\n                    }\n                }, this);\n            });\n        }\n    };\n    /**\n     * Check if a node exists in the graph\n     */\n    DepGraph.prototype.hasNode = function (node) {\n        return this.nodes.hasOwnProperty(node);\n    };\n    /**\n     * Get the data associated with a node name\n     */\n    DepGraph.prototype.getNodeData = function (node) {\n        if (this.hasNode(node)) {\n            return this.nodes[node];\n        }\n        else {\n            throw new Error(\"Node does not exist: \" + node);\n        }\n    };\n    /**\n     * Set the associated data for a given node name. If the node does not exist, this method will throw an error\n     */\n    DepGraph.prototype.setNodeData = function (node, data) {\n        if (this.hasNode(node)) {\n            this.nodes[node] = data;\n        }\n        else {\n            throw new Error(\"Node does not exist: \" + node);\n        }\n    };\n    /**\n     * Add a dependency between two nodes. If either of the nodes does not exist,\n     * an Error will be thrown.\n     */\n    DepGraph.prototype.addDependency = function (from, to) {\n        if (!this.hasNode(from)) {\n            throw new Error(\"Node does not exist: \" + from);\n        }\n        if (!this.hasNode(to)) {\n            throw new Error(\"Node does not exist: \" + to);\n        }\n        if (this.outgoingEdges[from].indexOf(to) === -1) {\n            this.outgoingEdges[from].push(to);\n        }\n        if (this.incomingEdges[to].indexOf(from) === -1) {\n            this.incomingEdges[to].push(from);\n        }\n        return true;\n    };\n    /**\n     * Remove a dependency between two nodes.\n     */\n    DepGraph.prototype.removeDependency = function (from, to) {\n        var idx;\n        if (this.hasNode(from)) {\n            idx = this.outgoingEdges[from].indexOf(to);\n            if (idx >= 0) {\n                this.outgoingEdges[from].splice(idx, 1);\n            }\n        }\n        if (this.hasNode(to)) {\n            idx = this.incomingEdges[to].indexOf(from);\n            if (idx >= 0) {\n                this.incomingEdges[to].splice(idx, 1);\n            }\n        }\n    };\n    /**\n     * Get an array containing the nodes that the specified node depends on (transitively).\n     *\n     * Throws an Error if the graph has a cycle, or the specified node does not exist.\n     *\n     * If `leavesOnly` is true, only nodes that do not depend on any other nodes will be returned\n     * in the array.\n     */\n    DepGraph.prototype.dependenciesOf = function (node, leavesOnly) {\n        if (this.hasNode(node)) {\n            var result = [];\n            var DFS = createDFS(this.outgoingEdges, leavesOnly, result);\n            DFS(node);\n            var idx = result.indexOf(node);\n            if (idx >= 0) {\n                result.splice(idx, 1);\n            }\n            return result;\n        }\n        else {\n            throw new Error(\"Node does not exist: \" + node);\n        }\n    };\n    /**\n     * get an array containing the nodes that depend on the specified node (transitively).\n     *\n     * Throws an Error if the graph has a cycle, or the specified node does not exist.\n     *\n     * If `leavesOnly` is true, only nodes that do not have any dependants will be returned in the array.\n     */\n    DepGraph.prototype.dependantsOf = function (node, leavesOnly) {\n        if (this.hasNode(node)) {\n            var result = [];\n            var DFS = createDFS(this.incomingEdges, leavesOnly, result);\n            DFS(node);\n            var idx = result.indexOf(node);\n            if (idx >= 0) {\n                result.splice(idx, 1);\n            }\n            return result;\n        }\n        else {\n            throw new Error(\"Node does not exist: \" + node);\n        }\n    };\n    /**\n     * Construct the overall processing order for the dependency graph.\n     *\n     * Throws an Error if the graph has a cycle.\n     *\n     * If `leavesOnly` is true, only nodes that do not depend on any other nodes will be returned.\n     */\n    DepGraph.prototype.overallOrder = function (leavesOnly) {\n        var self = this;\n        var result = [];\n        var keys = Object.keys(this.nodes);\n        if (keys.length === 0) {\n            return result; // Empty graph\n        }\n        else {\n            // Look for cycles - we run the DFS starting at all the nodes in case there\n            // are several disconnected subgraphs inside this dependency graph.\n            var CycleDFS_1 = createDFS(this.outgoingEdges, false, []);\n            keys.forEach(function (n) {\n                CycleDFS_1(n);\n            });\n            var DFS_1 = createDFS(this.outgoingEdges, leavesOnly, result);\n            // Find all potential starting points (nodes with nothing depending on them) an\n            // run a DFS starting at these points to get the order\n            keys.filter(function (node) {\n                return self.incomingEdges[node].length === 0;\n            }).forEach(function (n) {\n                DFS_1(n);\n            });\n            return result;\n        }\n    };\n    return DepGraph;\n}());\nexports.DepGraph = DepGraph;\n\n//# sourceMappingURL=DepGraph.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/util/DepGraph.js?");

/***/ }),

/***/ "./node_modules/typeorm/util/DirectoryExportedClassesLoader.js":
/*!*********************************************************************!*\
  !*** ./node_modules/typeorm/util/DirectoryExportedClassesLoader.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar PlatformTools_1 = __webpack_require__(/*! ../platform/PlatformTools */ \"./node_modules/typeorm/platform/PlatformTools.js\");\nvar index_1 = __webpack_require__(/*! ../index */ \"./node_modules/typeorm/index.js\");\n/**\n * Loads all exported classes from the given directory.\n */\nfunction importClassesFromDirectories(directories, formats) {\n    if (formats === void 0) { formats = [\".js\", \".ts\"]; }\n    function loadFileClasses(exported, allLoaded) {\n        if (typeof exported === \"function\" || exported instanceof index_1.EntitySchema) {\n            allLoaded.push(exported);\n        }\n        else if (Array.isArray(exported)) {\n            exported.forEach(function (i) { return loadFileClasses(i, allLoaded); });\n        }\n        else if (typeof exported === \"object\") {\n            Object.keys(exported).forEach(function (key) { return loadFileClasses(exported[key], allLoaded); });\n        }\n        return allLoaded;\n    }\n    var allFiles = directories.reduce(function (allDirs, dir) {\n        return allDirs.concat(PlatformTools_1.PlatformTools.load(\"glob\").sync(PlatformTools_1.PlatformTools.pathNormalize(dir)));\n    }, []);\n    var dirs = allFiles\n        .filter(function (file) {\n        var dtsExtension = file.substring(file.length - 5, file.length);\n        return formats.indexOf(PlatformTools_1.PlatformTools.pathExtname(file)) !== -1 && dtsExtension !== \".d.ts\";\n    })\n        .map(function (file) { return PlatformTools_1.PlatformTools.load(PlatformTools_1.PlatformTools.pathResolve(file)); });\n    return loadFileClasses(dirs, []);\n}\nexports.importClassesFromDirectories = importClassesFromDirectories;\n/**\n * Loads all json files from the given directory.\n */\nfunction importJsonsFromDirectories(directories, format) {\n    if (format === void 0) { format = \".json\"; }\n    var allFiles = directories.reduce(function (allDirs, dir) {\n        return allDirs.concat(PlatformTools_1.PlatformTools.load(\"glob\").sync(PlatformTools_1.PlatformTools.pathNormalize(dir)));\n    }, []);\n    return allFiles\n        .filter(function (file) { return PlatformTools_1.PlatformTools.pathExtname(file) === format; })\n        .map(function (file) { return PlatformTools_1.PlatformTools.load(PlatformTools_1.PlatformTools.pathResolve(file)); });\n}\nexports.importJsonsFromDirectories = importJsonsFromDirectories;\n\n//# sourceMappingURL=DirectoryExportedClassesLoader.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/util/DirectoryExportedClassesLoader.js?");

/***/ }),

/***/ "./node_modules/typeorm/util/OrmUtils.js":
/*!***********************************************!*\
  !*** ./node_modules/typeorm/util/OrmUtils.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(Buffer) {\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar OrmUtils = /** @class */ (function () {\n    function OrmUtils() {\n    }\n    // -------------------------------------------------------------------------\n    // Public methods\n    // -------------------------------------------------------------------------\n    /**\n     * Chunks array into peaces.\n     */\n    OrmUtils.chunk = function (array, size) {\n        return Array.from(Array(Math.ceil(array.length / size)), function (_, i) {\n            return array.slice(i * size, i * size + size);\n        });\n    };\n    OrmUtils.splitClassesAndStrings = function (clsesAndStrings) {\n        return [\n            (clsesAndStrings).filter(function (cls) { return typeof cls !== \"string\"; }),\n            (clsesAndStrings).filter(function (str) { return typeof str === \"string\"; }),\n        ];\n    };\n    OrmUtils.groupBy = function (array, propertyCallback) {\n        return array.reduce(function (groupedArray, value) {\n            var key = propertyCallback(value);\n            var grouped = groupedArray.find(function (i) { return i.id === key; });\n            if (!grouped) {\n                grouped = { id: key, items: [] };\n                groupedArray.push(grouped);\n            }\n            grouped.items.push(value);\n            return groupedArray;\n        }, []);\n    };\n    OrmUtils.uniq = function (array, criteriaOrProperty) {\n        return array.reduce(function (uniqueArray, item) {\n            var found = false;\n            if (criteriaOrProperty instanceof Function) {\n                var itemValue_1 = criteriaOrProperty(item);\n                found = !!uniqueArray.find(function (uniqueItem) { return criteriaOrProperty(uniqueItem) === itemValue_1; });\n            }\n            else if (typeof criteriaOrProperty === \"string\") {\n                found = !!uniqueArray.find(function (uniqueItem) { return uniqueItem[criteriaOrProperty] === item[criteriaOrProperty]; });\n            }\n            else {\n                found = uniqueArray.indexOf(item) !== -1;\n            }\n            if (!found)\n                uniqueArray.push(item);\n            return uniqueArray;\n        }, []);\n    };\n    OrmUtils.isObject = function (item) {\n        return (item && typeof item === \"object\" && !Array.isArray(item));\n    };\n    /**\n     * Deep Object.assign.\n     *\n     * @see http://stackoverflow.com/a/34749873\n     */\n    OrmUtils.mergeDeep = function (target) {\n        var sources = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            sources[_i - 1] = arguments[_i];\n        }\n        if (!sources.length)\n            return target;\n        var source = sources.shift();\n        if (this.isObject(target) && this.isObject(source)) {\n            for (var key in source) {\n                var propertyKey = key;\n                if (source[key] instanceof Promise)\n                    continue;\n                // if (source[key] instanceof Promise) {\n                //     propertyKey = \"__\" + key + \"__\";\n                // }\n                if (this.isObject(source[propertyKey])\n                    && !(source[propertyKey] instanceof Map)\n                    && !(source[propertyKey] instanceof Set)\n                    && !(source[propertyKey] instanceof Date)\n                    && !(source[propertyKey] instanceof Buffer)) {\n                    if (!target[key])\n                        Object.assign(target, (_a = {}, _a[key] = {}, _a));\n                    this.mergeDeep(target[key], source[propertyKey]);\n                }\n                else {\n                    Object.assign(target, (_b = {}, _b[key] = source[propertyKey], _b));\n                }\n            }\n        }\n        return this.mergeDeep.apply(this, __spread([target], sources));\n        var _a, _b;\n    };\n    /**\n     * Deep compare objects.\n     *\n     * @see http://stackoverflow.com/a/1144249\n     */\n    OrmUtils.deepCompare = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var i, l, leftChain, rightChain;\n        if (arguments.length < 1) {\n            return true; // Die silently? Don't know how to handle such case, please help...\n            // throw \"Need two or more arguments to compare\";\n        }\n        for (i = 1, l = arguments.length; i < l; i++) {\n            leftChain = []; // Todo: this can be cached\n            rightChain = [];\n            if (!this.compare2Objects(leftChain, rightChain, arguments[0], arguments[i])) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * Transforms given value into boolean value.\n     */\n    OrmUtils.toBoolean = function (value) {\n        if (typeof value === \"boolean\")\n            return value;\n        if (typeof value === \"string\")\n            return value === \"true\" || value === \"1\";\n        if (typeof value === \"number\")\n            return value > 0;\n        return false;\n    };\n    /**\n     * Composes an object from the given array of keys and values.\n     */\n    OrmUtils.zipObject = function (keys, values) {\n        return keys.reduce(function (object, column, index) {\n            object[column] = values[index];\n            return object;\n        }, {});\n    };\n    /**\n     * Compares two arrays.\n     */\n    OrmUtils.isArraysEqual = function (arr1, arr2) {\n        if (arr1.length !== arr2.length)\n            return false;\n        return arr1.every(function (element) {\n            return arr2.indexOf(element) !== -1;\n        });\n    };\n    // -------------------------------------------------------------------------\n    // Private methods\n    // -------------------------------------------------------------------------\n    OrmUtils.compare2Objects = function (leftChain, rightChain, x, y) {\n        var p;\n        // remember that NaN === NaN returns false\n        // and isNaN(undefined) returns true\n        if (isNaN(x) && isNaN(y) && typeof x === \"number\" && typeof y === \"number\")\n            return true;\n        // Compare primitives and functions.\n        // Check if both arguments link to the same object.\n        // Especially useful on the step where we compare prototypes\n        if (x === y)\n            return true;\n        if (x.equals instanceof Function && x.equals(y))\n            return true;\n        // Works in case when functions are created in constructor.\n        // Comparing dates is a common scenario. Another built-ins?\n        // We can even handle functions passed across iframes\n        if ((typeof x === \"function\" && typeof y === \"function\") ||\n            (x instanceof Date && y instanceof Date) ||\n            (x instanceof RegExp && y instanceof RegExp) ||\n            (x instanceof String && y instanceof String) ||\n            (x instanceof Number && y instanceof Number))\n            return x.toString() === y.toString();\n        // At last checking prototypes as good as we can\n        if (!(x instanceof Object && y instanceof Object))\n            return false;\n        if (x.isPrototypeOf(y) || y.isPrototypeOf(x))\n            return false;\n        if (x.constructor !== y.constructor)\n            return false;\n        if (x.prototype !== y.prototype)\n            return false;\n        // Check for infinitive linking loops\n        if (leftChain.indexOf(x) > -1 || rightChain.indexOf(y) > -1)\n            return false;\n        // Quick checking of one object being a subset of another.\n        // todo: cache the structure of arguments[0] for performance\n        for (p in y) {\n            if (y.hasOwnProperty(p) !== x.hasOwnProperty(p)) {\n                return false;\n            }\n            else if (typeof y[p] !== typeof x[p]) {\n                return false;\n            }\n        }\n        for (p in x) {\n            if (y.hasOwnProperty(p) !== x.hasOwnProperty(p)) {\n                return false;\n            }\n            else if (typeof y[p] !== typeof x[p]) {\n                return false;\n            }\n            switch (typeof (x[p])) {\n                case \"object\":\n                case \"function\":\n                    leftChain.push(x);\n                    rightChain.push(y);\n                    if (!this.compare2Objects(leftChain, rightChain, x[p], y[p])) {\n                        return false;\n                    }\n                    leftChain.pop();\n                    rightChain.pop();\n                    break;\n                default:\n                    if (x[p] !== y[p]) {\n                        return false;\n                    }\n                    break;\n            }\n        }\n        return true;\n    };\n    return OrmUtils;\n}());\nexports.OrmUtils = OrmUtils;\n\n//# sourceMappingURL=OrmUtils.js.map\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node-libs-browser/node_modules/buffer/index.js */ \"./node_modules/node-libs-browser/node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:///./node_modules/typeorm/util/OrmUtils.js?");

/***/ }),

/***/ "./node_modules/typeorm/util/PromiseUtils.js":
/*!***************************************************!*\
  !*** ./node_modules/typeorm/util/PromiseUtils.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Utils to help to work with Promise objects.\n */\nvar PromiseUtils = /** @class */ (function () {\n    function PromiseUtils() {\n    }\n    /**\n     * Creates a new promise with resolved value used for lazy relations.\n     */\n    PromiseUtils.create = function (value) {\n        var promise = Promise.resolve(value);\n        promise[\"__value__\"] = value;\n        return promise;\n    };\n    /**\n     * If given value is a promise created by \"create\" method this method gets its value.\n     * If given value is not a promise then given value is returned back.\n     */\n    PromiseUtils.extractValue = function (object) {\n        if (object instanceof Promise && object[\"__value__\"])\n            return object[\"__value__\"];\n        return object;\n    };\n    /**\n     * Runs given callback that returns promise for each item in the given collection in order.\n     * Operations executed after each other, right after previous promise being resolved.\n     */\n    PromiseUtils.runInSequence = function (collection, callback) {\n        var results = [];\n        return collection.reduce(function (promise, item) {\n            return promise.then(function () {\n                return callback(item);\n            }).then(function (result) {\n                results.push(result);\n            });\n        }, Promise.resolve()).then(function () {\n            return results;\n        });\n    };\n    /**\n     * Returns a promise that is fulfilled with an array of promise state snapshots,\n     * but only after all the original promises have settled, i.e. become either fulfilled or rejected.\n     */\n    PromiseUtils.settle = function (promises) {\n        return Promise.all(promises.map(function (p) { return Promise.resolve(p).then(function (v) { return ({\n            state: \"fulfilled\",\n            value: v,\n        }); }, function (r) { return ({\n            state: \"rejected\",\n            reason: r,\n        }); }); })).then(function (results) {\n            var rejected = results.find(function (result) { return result.state === \"rejected\"; });\n            if (rejected)\n                return Promise.reject(rejected.reason);\n            return results.map(function (result) { return result.value; });\n        });\n    };\n    return PromiseUtils;\n}());\nexports.PromiseUtils = PromiseUtils;\n\n//# sourceMappingURL=PromiseUtils.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/util/PromiseUtils.js?");

/***/ }),

/***/ "./node_modules/typeorm/util/RandomGenerator.js":
/*!******************************************************!*\
  !*** ./node_modules/typeorm/util/RandomGenerator.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar RandomGenerator = /** @class */ (function () {\n    function RandomGenerator() {\n    }\n    /**\n     *  discuss at: http://locutus.io/php/sha1/\n     * original by: Webtoolkit.info (http://www.webtoolkit.info/)\n     * improved by: Michael White (http://getsprink.com)\n     * improved by: Kevin van Zonneveld (http://kvz.io)\n     *    input by: Brett Zamir (http://brett-zamir.me)\n     *      note 1: Keep in mind that in accordance with PHP, the whole string is buffered and then\n     *      note 1: hashed. If available, we'd recommend using Node's native crypto modules directly\n     *      note 1: in a steaming fashion for faster and more efficient hashing\n     *   example 1: sha1('Kevin van Zonneveld')\n     *   returns 1: '54916d2e62f65b3afa6e192e6a601cdbe5cb5897'\n     */\n    RandomGenerator.sha1 = function (str) {\n        var _rotLeft = function (n, s) {\n            var t4 = (n << s) | (n >>> (32 - s));\n            return t4;\n        };\n        var _cvtHex = function (val) {\n            var str = \"\";\n            var i;\n            var v;\n            for (i = 7; i >= 0; i--) {\n                v = (val >>> (i * 4)) & 0x0f;\n                str += v.toString(16);\n            }\n            return str;\n        };\n        var blockstart;\n        var i, j;\n        var W = new Array(80);\n        var H0 = 0x67452301;\n        var H1 = 0xEFCDAB89;\n        var H2 = 0x98BADCFE;\n        var H3 = 0x10325476;\n        var H4 = 0xC3D2E1F0;\n        var A, B, C, D, E;\n        var temp;\n        // utf8_encode\n        str = /*unescape*/ (encodeURIComponent(str));\n        var strLen = str.length;\n        var wordArray = [];\n        for (i = 0; i < strLen - 3; i += 4) {\n            j = str.charCodeAt(i) << 24 |\n                str.charCodeAt(i + 1) << 16 |\n                str.charCodeAt(i + 2) << 8 |\n                str.charCodeAt(i + 3);\n            wordArray.push(j);\n        }\n        switch (strLen % 4) {\n            case 0:\n                i = 0x080000000;\n                break;\n            case 1:\n                i = str.charCodeAt(strLen - 1) << 24 | 0x0800000;\n                break;\n            case 2:\n                i = str.charCodeAt(strLen - 2) << 24 | str.charCodeAt(strLen - 1) << 16 | 0x08000;\n                break;\n            case 3:\n                i = str.charCodeAt(strLen - 3) << 24 |\n                    str.charCodeAt(strLen - 2) << 16 |\n                    str.charCodeAt(strLen - 1) <<\n                        8 | 0x80;\n                break;\n        }\n        wordArray.push(i);\n        while ((wordArray.length % 16) !== 14) {\n            wordArray.push(0);\n        }\n        wordArray.push(strLen >>> 29);\n        wordArray.push((strLen << 3) & 0x0ffffffff);\n        for (blockstart = 0; blockstart < wordArray.length; blockstart += 16) {\n            for (i = 0; i < 16; i++) {\n                W[i] = wordArray[blockstart + i];\n            }\n            for (i = 16; i <= 79; i++) {\n                W[i] = _rotLeft(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n            }\n            A = H0;\n            B = H1;\n            C = H2;\n            D = H3;\n            E = H4;\n            for (i = 0; i <= 19; i++) {\n                temp = (_rotLeft(A, 5) + ((B & C) | (~B & D)) + E + W[i] + 0x5A827999) & 0x0ffffffff;\n                E = D;\n                D = C;\n                C = _rotLeft(B, 30);\n                B = A;\n                A = temp;\n            }\n            for (i = 20; i <= 39; i++) {\n                temp = (_rotLeft(A, 5) + (B ^ C ^ D) + E + W[i] + 0x6ED9EBA1) & 0x0ffffffff;\n                E = D;\n                D = C;\n                C = _rotLeft(B, 30);\n                B = A;\n                A = temp;\n            }\n            for (i = 40; i <= 59; i++) {\n                temp = (_rotLeft(A, 5) + ((B & C) | (B & D) | (C & D)) + E + W[i] + 0x8F1BBCDC) & 0x0ffffffff;\n                E = D;\n                D = C;\n                C = _rotLeft(B, 30);\n                B = A;\n                A = temp;\n            }\n            for (i = 60; i <= 79; i++) {\n                temp = (_rotLeft(A, 5) + (B ^ C ^ D) + E + W[i] + 0xCA62C1D6) & 0x0ffffffff;\n                E = D;\n                D = C;\n                C = _rotLeft(B, 30);\n                B = A;\n                A = temp;\n            }\n            H0 = (H0 + A) & 0x0ffffffff;\n            H1 = (H1 + B) & 0x0ffffffff;\n            H2 = (H2 + C) & 0x0ffffffff;\n            H3 = (H3 + D) & 0x0ffffffff;\n            H4 = (H4 + E) & 0x0ffffffff;\n        }\n        temp = _cvtHex(H0) + _cvtHex(H1) + _cvtHex(H2) + _cvtHex(H3) + _cvtHex(H4);\n        return temp.toLowerCase();\n    };\n    /**\n     * RFC4122 compliant UUID v4 generator.\n     */\n    RandomGenerator.uuid4 = function () {\n        return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n            var r = Math.random() * 16 | 0, v = c === \"x\" ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    };\n    return RandomGenerator;\n}());\nexports.RandomGenerator = RandomGenerator;\n\n//# sourceMappingURL=RandomGenerator.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/util/RandomGenerator.js?");

/***/ }),

/***/ "./node_modules/typeorm/util/StringUtils.js":
/*!**************************************************!*\
  !*** ./node_modules/typeorm/util/StringUtils.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Converts string into camelCase.\n *\n * @see http://stackoverflow.com/questions/2970525/converting-any-string-into-camel-case\n */\nfunction camelCase(str, firstCapital) {\n    if (firstCapital === void 0) { firstCapital = false; }\n    return str.replace(/^([A-Z])|[\\s-_](\\w)/g, function (match, p1, p2, offset) {\n        if (firstCapital === true && offset === 0)\n            return p1;\n        if (p2)\n            return p2.toUpperCase();\n        return p1.toLowerCase();\n    });\n}\nexports.camelCase = camelCase;\n/**\n * Converts string into snake-case.\n *\n * @see https://regex101.com/r/QeSm2I/1\n */\nfunction snakeCase(str) {\n    return str.replace(/(?:([a-z])([A-Z]))|(?:((?!^)[A-Z])([a-z]))/g, \"$1_$3$2$4\").toLowerCase();\n}\nexports.snakeCase = snakeCase;\n/**\n * Converts string into title-case.\n *\n * @see http://stackoverflow.com/questions/196972/convert-string-to-title-case-with-javascript\n */\nfunction titleCase(str) {\n    return str.replace(/\\w\\S*/g, function (txt) { return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase(); });\n}\nexports.titleCase = titleCase;\n/**\n * Builds abbreviated string from given string;\n */\nfunction abbreviate(str, abbrLettersCount) {\n    if (abbrLettersCount === void 0) { abbrLettersCount = 1; }\n    var words = str.replace(/([a-z\\xE0-\\xFF])([A-Z\\xC0\\xDF])/g, \"$1 $2\").split(\" \");\n    return words.reduce(function (res, word) {\n        res += word.substr(0, abbrLettersCount);\n        return res;\n    }, \"\");\n}\nexports.abbreviate = abbreviate;\n\n//# sourceMappingURL=StringUtils.js.map\n\n\n//# sourceURL=webpack:///./node_modules/typeorm/util/StringUtils.js?");

/***/ }),

/***/ "./node_modules/util-deprecate/browser.js":
/*!************************************************!*\
  !*** ./node_modules/util-deprecate/browser.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/util-deprecate/browser.js?");

/***/ }),

/***/ "./node_modules/util/support/isBufferBrowser.js":
/*!******************************************************!*\
  !*** ./node_modules/util/support/isBufferBrowser.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}\n\n//# sourceURL=webpack:///./node_modules/util/support/isBufferBrowser.js?");

/***/ }),

/***/ "./node_modules/util/util.js":
/*!***********************************!*\
  !*** ./node_modules/util/util.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global, process) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = __webpack_require__(/*! ./support/isBuffer */ \"./node_modules/util/support/isBufferBrowser.js\");\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///./node_modules/util/util.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n//# sourceURL=webpack:///(webpack)/buildin/global.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/module.js":
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(module) {\r\n\tif (!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif (!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n//# sourceURL=webpack:///(webpack)/buildin/module.js?");

/***/ }),

/***/ 0:
/*!**********************!*\
  !*** util (ignored) ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* (ignored) */\n\n//# sourceURL=webpack:///util_(ignored)?");

/***/ }),

/***/ 1:
/*!**********************!*\
  !*** util (ignored) ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* (ignored) */\n\n//# sourceURL=webpack:///util_(ignored)?");

/***/ })

/******/ });